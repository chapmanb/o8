var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.evalWorksForGlobals_ = null;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.getObjectByName(name) && !goog.implicitNamespaces_[name]) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.require = function(rule) {
  if(!COMPILED) {
    if(goog.getObjectByName(rule)) {
      return
    }
    var path = goog.getPathFromDeps_(rule);
    if(path) {
      goog.included_[path] = true;
      goog.writeScripts_()
    }else {
      var errorMessage = "goog.require could not find: " + rule;
      if(goog.global.console) {
        goog.global.console["error"](errorMessage)
      }
      throw Error(errorMessage);
    }
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(requireName in deps.nameToPath) {
            visitNode(deps.nameToPath[requireName])
          }else {
            if(!goog.getObjectByName(requireName)) {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  var context = selfObj || goog.global;
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(context, newArgs)
    }
  }else {
    return function() {
      return fn.apply(context, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = style
};
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global && !goog.string.contains(str, "<")) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var el = goog.global["document"]["createElement"]("div");
  el["innerHTML"] = "<pre>x" + str + "</pre>";
  if(el["firstChild"][goog.string.NORMALIZE_FN_]) {
    el["firstChild"][goog.string.NORMALIZE_FN_]()
  }
  str = el["firstChild"]["firstChild"]["nodeValue"].slice(1);
  el["innerHTML"] = "";
  return goog.string.canonicalizeNewlines(str)
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.NORMALIZE_FN_ = "normalize";
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  value = parseInt(value, 10);
  precision = 0;
  return goog.string.format.demuxes_["f"](value, flags, width, dotp, precision, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__11489 = x == null ? null : x;
  if(p[goog.typeOf(x__11489)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__11490__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__11490 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11490__delegate.call(this, array, i, idxs)
    };
    G__11490.cljs$lang$maxFixedArity = 2;
    G__11490.cljs$lang$applyTo = function(arglist__11491) {
      var array = cljs.core.first(arglist__11491);
      var i = cljs.core.first(cljs.core.next(arglist__11491));
      var idxs = cljs.core.rest(cljs.core.next(arglist__11491));
      return G__11490__delegate(array, i, idxs)
    };
    G__11490.cljs$lang$arity$variadic = G__11490__delegate;
    return G__11490
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____11576 = this$;
      if(and__3822__auto____11576) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____11576
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2264__auto____11577 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11578 = cljs.core._invoke[goog.typeOf(x__2264__auto____11577)];
        if(or__3824__auto____11578) {
          return or__3824__auto____11578
        }else {
          var or__3824__auto____11579 = cljs.core._invoke["_"];
          if(or__3824__auto____11579) {
            return or__3824__auto____11579
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____11580 = this$;
      if(and__3822__auto____11580) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____11580
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2264__auto____11581 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11582 = cljs.core._invoke[goog.typeOf(x__2264__auto____11581)];
        if(or__3824__auto____11582) {
          return or__3824__auto____11582
        }else {
          var or__3824__auto____11583 = cljs.core._invoke["_"];
          if(or__3824__auto____11583) {
            return or__3824__auto____11583
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____11584 = this$;
      if(and__3822__auto____11584) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____11584
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2264__auto____11585 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11586 = cljs.core._invoke[goog.typeOf(x__2264__auto____11585)];
        if(or__3824__auto____11586) {
          return or__3824__auto____11586
        }else {
          var or__3824__auto____11587 = cljs.core._invoke["_"];
          if(or__3824__auto____11587) {
            return or__3824__auto____11587
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____11588 = this$;
      if(and__3822__auto____11588) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____11588
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2264__auto____11589 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11590 = cljs.core._invoke[goog.typeOf(x__2264__auto____11589)];
        if(or__3824__auto____11590) {
          return or__3824__auto____11590
        }else {
          var or__3824__auto____11591 = cljs.core._invoke["_"];
          if(or__3824__auto____11591) {
            return or__3824__auto____11591
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____11592 = this$;
      if(and__3822__auto____11592) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____11592
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2264__auto____11593 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11594 = cljs.core._invoke[goog.typeOf(x__2264__auto____11593)];
        if(or__3824__auto____11594) {
          return or__3824__auto____11594
        }else {
          var or__3824__auto____11595 = cljs.core._invoke["_"];
          if(or__3824__auto____11595) {
            return or__3824__auto____11595
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____11596 = this$;
      if(and__3822__auto____11596) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____11596
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2264__auto____11597 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11598 = cljs.core._invoke[goog.typeOf(x__2264__auto____11597)];
        if(or__3824__auto____11598) {
          return or__3824__auto____11598
        }else {
          var or__3824__auto____11599 = cljs.core._invoke["_"];
          if(or__3824__auto____11599) {
            return or__3824__auto____11599
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____11600 = this$;
      if(and__3822__auto____11600) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____11600
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2264__auto____11601 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11602 = cljs.core._invoke[goog.typeOf(x__2264__auto____11601)];
        if(or__3824__auto____11602) {
          return or__3824__auto____11602
        }else {
          var or__3824__auto____11603 = cljs.core._invoke["_"];
          if(or__3824__auto____11603) {
            return or__3824__auto____11603
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____11604 = this$;
      if(and__3822__auto____11604) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____11604
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2264__auto____11605 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11606 = cljs.core._invoke[goog.typeOf(x__2264__auto____11605)];
        if(or__3824__auto____11606) {
          return or__3824__auto____11606
        }else {
          var or__3824__auto____11607 = cljs.core._invoke["_"];
          if(or__3824__auto____11607) {
            return or__3824__auto____11607
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____11608 = this$;
      if(and__3822__auto____11608) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____11608
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2264__auto____11609 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11610 = cljs.core._invoke[goog.typeOf(x__2264__auto____11609)];
        if(or__3824__auto____11610) {
          return or__3824__auto____11610
        }else {
          var or__3824__auto____11611 = cljs.core._invoke["_"];
          if(or__3824__auto____11611) {
            return or__3824__auto____11611
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____11612 = this$;
      if(and__3822__auto____11612) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____11612
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2264__auto____11613 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11614 = cljs.core._invoke[goog.typeOf(x__2264__auto____11613)];
        if(or__3824__auto____11614) {
          return or__3824__auto____11614
        }else {
          var or__3824__auto____11615 = cljs.core._invoke["_"];
          if(or__3824__auto____11615) {
            return or__3824__auto____11615
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____11616 = this$;
      if(and__3822__auto____11616) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____11616
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2264__auto____11617 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11618 = cljs.core._invoke[goog.typeOf(x__2264__auto____11617)];
        if(or__3824__auto____11618) {
          return or__3824__auto____11618
        }else {
          var or__3824__auto____11619 = cljs.core._invoke["_"];
          if(or__3824__auto____11619) {
            return or__3824__auto____11619
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____11620 = this$;
      if(and__3822__auto____11620) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____11620
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2264__auto____11621 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11622 = cljs.core._invoke[goog.typeOf(x__2264__auto____11621)];
        if(or__3824__auto____11622) {
          return or__3824__auto____11622
        }else {
          var or__3824__auto____11623 = cljs.core._invoke["_"];
          if(or__3824__auto____11623) {
            return or__3824__auto____11623
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____11624 = this$;
      if(and__3822__auto____11624) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____11624
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2264__auto____11625 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11626 = cljs.core._invoke[goog.typeOf(x__2264__auto____11625)];
        if(or__3824__auto____11626) {
          return or__3824__auto____11626
        }else {
          var or__3824__auto____11627 = cljs.core._invoke["_"];
          if(or__3824__auto____11627) {
            return or__3824__auto____11627
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____11628 = this$;
      if(and__3822__auto____11628) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____11628
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2264__auto____11629 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11630 = cljs.core._invoke[goog.typeOf(x__2264__auto____11629)];
        if(or__3824__auto____11630) {
          return or__3824__auto____11630
        }else {
          var or__3824__auto____11631 = cljs.core._invoke["_"];
          if(or__3824__auto____11631) {
            return or__3824__auto____11631
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____11632 = this$;
      if(and__3822__auto____11632) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____11632
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2264__auto____11633 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11634 = cljs.core._invoke[goog.typeOf(x__2264__auto____11633)];
        if(or__3824__auto____11634) {
          return or__3824__auto____11634
        }else {
          var or__3824__auto____11635 = cljs.core._invoke["_"];
          if(or__3824__auto____11635) {
            return or__3824__auto____11635
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____11636 = this$;
      if(and__3822__auto____11636) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____11636
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2264__auto____11637 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11638 = cljs.core._invoke[goog.typeOf(x__2264__auto____11637)];
        if(or__3824__auto____11638) {
          return or__3824__auto____11638
        }else {
          var or__3824__auto____11639 = cljs.core._invoke["_"];
          if(or__3824__auto____11639) {
            return or__3824__auto____11639
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____11640 = this$;
      if(and__3822__auto____11640) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____11640
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2264__auto____11641 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11642 = cljs.core._invoke[goog.typeOf(x__2264__auto____11641)];
        if(or__3824__auto____11642) {
          return or__3824__auto____11642
        }else {
          var or__3824__auto____11643 = cljs.core._invoke["_"];
          if(or__3824__auto____11643) {
            return or__3824__auto____11643
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____11644 = this$;
      if(and__3822__auto____11644) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____11644
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2264__auto____11645 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11646 = cljs.core._invoke[goog.typeOf(x__2264__auto____11645)];
        if(or__3824__auto____11646) {
          return or__3824__auto____11646
        }else {
          var or__3824__auto____11647 = cljs.core._invoke["_"];
          if(or__3824__auto____11647) {
            return or__3824__auto____11647
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____11648 = this$;
      if(and__3822__auto____11648) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____11648
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2264__auto____11649 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11650 = cljs.core._invoke[goog.typeOf(x__2264__auto____11649)];
        if(or__3824__auto____11650) {
          return or__3824__auto____11650
        }else {
          var or__3824__auto____11651 = cljs.core._invoke["_"];
          if(or__3824__auto____11651) {
            return or__3824__auto____11651
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____11652 = this$;
      if(and__3822__auto____11652) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____11652
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2264__auto____11653 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11654 = cljs.core._invoke[goog.typeOf(x__2264__auto____11653)];
        if(or__3824__auto____11654) {
          return or__3824__auto____11654
        }else {
          var or__3824__auto____11655 = cljs.core._invoke["_"];
          if(or__3824__auto____11655) {
            return or__3824__auto____11655
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____11656 = this$;
      if(and__3822__auto____11656) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____11656
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2264__auto____11657 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11658 = cljs.core._invoke[goog.typeOf(x__2264__auto____11657)];
        if(or__3824__auto____11658) {
          return or__3824__auto____11658
        }else {
          var or__3824__auto____11659 = cljs.core._invoke["_"];
          if(or__3824__auto____11659) {
            return or__3824__auto____11659
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____11664 = coll;
    if(and__3822__auto____11664) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____11664
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2264__auto____11665 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11666 = cljs.core._count[goog.typeOf(x__2264__auto____11665)];
      if(or__3824__auto____11666) {
        return or__3824__auto____11666
      }else {
        var or__3824__auto____11667 = cljs.core._count["_"];
        if(or__3824__auto____11667) {
          return or__3824__auto____11667
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____11672 = coll;
    if(and__3822__auto____11672) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____11672
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2264__auto____11673 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11674 = cljs.core._empty[goog.typeOf(x__2264__auto____11673)];
      if(or__3824__auto____11674) {
        return or__3824__auto____11674
      }else {
        var or__3824__auto____11675 = cljs.core._empty["_"];
        if(or__3824__auto____11675) {
          return or__3824__auto____11675
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____11680 = coll;
    if(and__3822__auto____11680) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____11680
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2264__auto____11681 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11682 = cljs.core._conj[goog.typeOf(x__2264__auto____11681)];
      if(or__3824__auto____11682) {
        return or__3824__auto____11682
      }else {
        var or__3824__auto____11683 = cljs.core._conj["_"];
        if(or__3824__auto____11683) {
          return or__3824__auto____11683
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____11692 = coll;
      if(and__3822__auto____11692) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____11692
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2264__auto____11693 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____11694 = cljs.core._nth[goog.typeOf(x__2264__auto____11693)];
        if(or__3824__auto____11694) {
          return or__3824__auto____11694
        }else {
          var or__3824__auto____11695 = cljs.core._nth["_"];
          if(or__3824__auto____11695) {
            return or__3824__auto____11695
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____11696 = coll;
      if(and__3822__auto____11696) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____11696
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2264__auto____11697 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____11698 = cljs.core._nth[goog.typeOf(x__2264__auto____11697)];
        if(or__3824__auto____11698) {
          return or__3824__auto____11698
        }else {
          var or__3824__auto____11699 = cljs.core._nth["_"];
          if(or__3824__auto____11699) {
            return or__3824__auto____11699
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____11704 = coll;
    if(and__3822__auto____11704) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____11704
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2264__auto____11705 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11706 = cljs.core._first[goog.typeOf(x__2264__auto____11705)];
      if(or__3824__auto____11706) {
        return or__3824__auto____11706
      }else {
        var or__3824__auto____11707 = cljs.core._first["_"];
        if(or__3824__auto____11707) {
          return or__3824__auto____11707
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____11712 = coll;
    if(and__3822__auto____11712) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____11712
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2264__auto____11713 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11714 = cljs.core._rest[goog.typeOf(x__2264__auto____11713)];
      if(or__3824__auto____11714) {
        return or__3824__auto____11714
      }else {
        var or__3824__auto____11715 = cljs.core._rest["_"];
        if(or__3824__auto____11715) {
          return or__3824__auto____11715
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____11720 = coll;
    if(and__3822__auto____11720) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____11720
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2264__auto____11721 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11722 = cljs.core._next[goog.typeOf(x__2264__auto____11721)];
      if(or__3824__auto____11722) {
        return or__3824__auto____11722
      }else {
        var or__3824__auto____11723 = cljs.core._next["_"];
        if(or__3824__auto____11723) {
          return or__3824__auto____11723
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____11732 = o;
      if(and__3822__auto____11732) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____11732
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2264__auto____11733 = o == null ? null : o;
      return function() {
        var or__3824__auto____11734 = cljs.core._lookup[goog.typeOf(x__2264__auto____11733)];
        if(or__3824__auto____11734) {
          return or__3824__auto____11734
        }else {
          var or__3824__auto____11735 = cljs.core._lookup["_"];
          if(or__3824__auto____11735) {
            return or__3824__auto____11735
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____11736 = o;
      if(and__3822__auto____11736) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____11736
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2264__auto____11737 = o == null ? null : o;
      return function() {
        var or__3824__auto____11738 = cljs.core._lookup[goog.typeOf(x__2264__auto____11737)];
        if(or__3824__auto____11738) {
          return or__3824__auto____11738
        }else {
          var or__3824__auto____11739 = cljs.core._lookup["_"];
          if(or__3824__auto____11739) {
            return or__3824__auto____11739
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____11744 = coll;
    if(and__3822__auto____11744) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____11744
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2264__auto____11745 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11746 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2264__auto____11745)];
      if(or__3824__auto____11746) {
        return or__3824__auto____11746
      }else {
        var or__3824__auto____11747 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____11747) {
          return or__3824__auto____11747
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____11752 = coll;
    if(and__3822__auto____11752) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____11752
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2264__auto____11753 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11754 = cljs.core._assoc[goog.typeOf(x__2264__auto____11753)];
      if(or__3824__auto____11754) {
        return or__3824__auto____11754
      }else {
        var or__3824__auto____11755 = cljs.core._assoc["_"];
        if(or__3824__auto____11755) {
          return or__3824__auto____11755
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____11760 = coll;
    if(and__3822__auto____11760) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____11760
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2264__auto____11761 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11762 = cljs.core._dissoc[goog.typeOf(x__2264__auto____11761)];
      if(or__3824__auto____11762) {
        return or__3824__auto____11762
      }else {
        var or__3824__auto____11763 = cljs.core._dissoc["_"];
        if(or__3824__auto____11763) {
          return or__3824__auto____11763
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____11768 = coll;
    if(and__3822__auto____11768) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____11768
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2264__auto____11769 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11770 = cljs.core._key[goog.typeOf(x__2264__auto____11769)];
      if(or__3824__auto____11770) {
        return or__3824__auto____11770
      }else {
        var or__3824__auto____11771 = cljs.core._key["_"];
        if(or__3824__auto____11771) {
          return or__3824__auto____11771
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____11776 = coll;
    if(and__3822__auto____11776) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____11776
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2264__auto____11777 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11778 = cljs.core._val[goog.typeOf(x__2264__auto____11777)];
      if(or__3824__auto____11778) {
        return or__3824__auto____11778
      }else {
        var or__3824__auto____11779 = cljs.core._val["_"];
        if(or__3824__auto____11779) {
          return or__3824__auto____11779
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____11784 = coll;
    if(and__3822__auto____11784) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____11784
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2264__auto____11785 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11786 = cljs.core._disjoin[goog.typeOf(x__2264__auto____11785)];
      if(or__3824__auto____11786) {
        return or__3824__auto____11786
      }else {
        var or__3824__auto____11787 = cljs.core._disjoin["_"];
        if(or__3824__auto____11787) {
          return or__3824__auto____11787
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____11792 = coll;
    if(and__3822__auto____11792) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____11792
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2264__auto____11793 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11794 = cljs.core._peek[goog.typeOf(x__2264__auto____11793)];
      if(or__3824__auto____11794) {
        return or__3824__auto____11794
      }else {
        var or__3824__auto____11795 = cljs.core._peek["_"];
        if(or__3824__auto____11795) {
          return or__3824__auto____11795
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____11800 = coll;
    if(and__3822__auto____11800) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____11800
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2264__auto____11801 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11802 = cljs.core._pop[goog.typeOf(x__2264__auto____11801)];
      if(or__3824__auto____11802) {
        return or__3824__auto____11802
      }else {
        var or__3824__auto____11803 = cljs.core._pop["_"];
        if(or__3824__auto____11803) {
          return or__3824__auto____11803
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____11808 = coll;
    if(and__3822__auto____11808) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____11808
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2264__auto____11809 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11810 = cljs.core._assoc_n[goog.typeOf(x__2264__auto____11809)];
      if(or__3824__auto____11810) {
        return or__3824__auto____11810
      }else {
        var or__3824__auto____11811 = cljs.core._assoc_n["_"];
        if(or__3824__auto____11811) {
          return or__3824__auto____11811
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____11816 = o;
    if(and__3822__auto____11816) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____11816
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2264__auto____11817 = o == null ? null : o;
    return function() {
      var or__3824__auto____11818 = cljs.core._deref[goog.typeOf(x__2264__auto____11817)];
      if(or__3824__auto____11818) {
        return or__3824__auto____11818
      }else {
        var or__3824__auto____11819 = cljs.core._deref["_"];
        if(or__3824__auto____11819) {
          return or__3824__auto____11819
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____11824 = o;
    if(and__3822__auto____11824) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____11824
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2264__auto____11825 = o == null ? null : o;
    return function() {
      var or__3824__auto____11826 = cljs.core._deref_with_timeout[goog.typeOf(x__2264__auto____11825)];
      if(or__3824__auto____11826) {
        return or__3824__auto____11826
      }else {
        var or__3824__auto____11827 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____11827) {
          return or__3824__auto____11827
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____11832 = o;
    if(and__3822__auto____11832) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____11832
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2264__auto____11833 = o == null ? null : o;
    return function() {
      var or__3824__auto____11834 = cljs.core._meta[goog.typeOf(x__2264__auto____11833)];
      if(or__3824__auto____11834) {
        return or__3824__auto____11834
      }else {
        var or__3824__auto____11835 = cljs.core._meta["_"];
        if(or__3824__auto____11835) {
          return or__3824__auto____11835
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____11840 = o;
    if(and__3822__auto____11840) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____11840
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2264__auto____11841 = o == null ? null : o;
    return function() {
      var or__3824__auto____11842 = cljs.core._with_meta[goog.typeOf(x__2264__auto____11841)];
      if(or__3824__auto____11842) {
        return or__3824__auto____11842
      }else {
        var or__3824__auto____11843 = cljs.core._with_meta["_"];
        if(or__3824__auto____11843) {
          return or__3824__auto____11843
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____11852 = coll;
      if(and__3822__auto____11852) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____11852
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2264__auto____11853 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____11854 = cljs.core._reduce[goog.typeOf(x__2264__auto____11853)];
        if(or__3824__auto____11854) {
          return or__3824__auto____11854
        }else {
          var or__3824__auto____11855 = cljs.core._reduce["_"];
          if(or__3824__auto____11855) {
            return or__3824__auto____11855
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____11856 = coll;
      if(and__3822__auto____11856) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____11856
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2264__auto____11857 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____11858 = cljs.core._reduce[goog.typeOf(x__2264__auto____11857)];
        if(or__3824__auto____11858) {
          return or__3824__auto____11858
        }else {
          var or__3824__auto____11859 = cljs.core._reduce["_"];
          if(or__3824__auto____11859) {
            return or__3824__auto____11859
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____11864 = coll;
    if(and__3822__auto____11864) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____11864
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2264__auto____11865 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11866 = cljs.core._kv_reduce[goog.typeOf(x__2264__auto____11865)];
      if(or__3824__auto____11866) {
        return or__3824__auto____11866
      }else {
        var or__3824__auto____11867 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____11867) {
          return or__3824__auto____11867
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____11872 = o;
    if(and__3822__auto____11872) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____11872
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2264__auto____11873 = o == null ? null : o;
    return function() {
      var or__3824__auto____11874 = cljs.core._equiv[goog.typeOf(x__2264__auto____11873)];
      if(or__3824__auto____11874) {
        return or__3824__auto____11874
      }else {
        var or__3824__auto____11875 = cljs.core._equiv["_"];
        if(or__3824__auto____11875) {
          return or__3824__auto____11875
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____11880 = o;
    if(and__3822__auto____11880) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____11880
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2264__auto____11881 = o == null ? null : o;
    return function() {
      var or__3824__auto____11882 = cljs.core._hash[goog.typeOf(x__2264__auto____11881)];
      if(or__3824__auto____11882) {
        return or__3824__auto____11882
      }else {
        var or__3824__auto____11883 = cljs.core._hash["_"];
        if(or__3824__auto____11883) {
          return or__3824__auto____11883
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____11888 = o;
    if(and__3822__auto____11888) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____11888
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2264__auto____11889 = o == null ? null : o;
    return function() {
      var or__3824__auto____11890 = cljs.core._seq[goog.typeOf(x__2264__auto____11889)];
      if(or__3824__auto____11890) {
        return or__3824__auto____11890
      }else {
        var or__3824__auto____11891 = cljs.core._seq["_"];
        if(or__3824__auto____11891) {
          return or__3824__auto____11891
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____11896 = coll;
    if(and__3822__auto____11896) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____11896
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2264__auto____11897 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11898 = cljs.core._rseq[goog.typeOf(x__2264__auto____11897)];
      if(or__3824__auto____11898) {
        return or__3824__auto____11898
      }else {
        var or__3824__auto____11899 = cljs.core._rseq["_"];
        if(or__3824__auto____11899) {
          return or__3824__auto____11899
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____11904 = coll;
    if(and__3822__auto____11904) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____11904
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2264__auto____11905 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11906 = cljs.core._sorted_seq[goog.typeOf(x__2264__auto____11905)];
      if(or__3824__auto____11906) {
        return or__3824__auto____11906
      }else {
        var or__3824__auto____11907 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____11907) {
          return or__3824__auto____11907
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____11912 = coll;
    if(and__3822__auto____11912) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____11912
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2264__auto____11913 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11914 = cljs.core._sorted_seq_from[goog.typeOf(x__2264__auto____11913)];
      if(or__3824__auto____11914) {
        return or__3824__auto____11914
      }else {
        var or__3824__auto____11915 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____11915) {
          return or__3824__auto____11915
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____11920 = coll;
    if(and__3822__auto____11920) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____11920
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2264__auto____11921 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11922 = cljs.core._entry_key[goog.typeOf(x__2264__auto____11921)];
      if(or__3824__auto____11922) {
        return or__3824__auto____11922
      }else {
        var or__3824__auto____11923 = cljs.core._entry_key["_"];
        if(or__3824__auto____11923) {
          return or__3824__auto____11923
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____11928 = coll;
    if(and__3822__auto____11928) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____11928
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2264__auto____11929 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11930 = cljs.core._comparator[goog.typeOf(x__2264__auto____11929)];
      if(or__3824__auto____11930) {
        return or__3824__auto____11930
      }else {
        var or__3824__auto____11931 = cljs.core._comparator["_"];
        if(or__3824__auto____11931) {
          return or__3824__auto____11931
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____11936 = o;
    if(and__3822__auto____11936) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____11936
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2264__auto____11937 = o == null ? null : o;
    return function() {
      var or__3824__auto____11938 = cljs.core._pr_seq[goog.typeOf(x__2264__auto____11937)];
      if(or__3824__auto____11938) {
        return or__3824__auto____11938
      }else {
        var or__3824__auto____11939 = cljs.core._pr_seq["_"];
        if(or__3824__auto____11939) {
          return or__3824__auto____11939
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____11944 = d;
    if(and__3822__auto____11944) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____11944
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2264__auto____11945 = d == null ? null : d;
    return function() {
      var or__3824__auto____11946 = cljs.core._realized_QMARK_[goog.typeOf(x__2264__auto____11945)];
      if(or__3824__auto____11946) {
        return or__3824__auto____11946
      }else {
        var or__3824__auto____11947 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____11947) {
          return or__3824__auto____11947
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____11952 = this$;
    if(and__3822__auto____11952) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____11952
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2264__auto____11953 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11954 = cljs.core._notify_watches[goog.typeOf(x__2264__auto____11953)];
      if(or__3824__auto____11954) {
        return or__3824__auto____11954
      }else {
        var or__3824__auto____11955 = cljs.core._notify_watches["_"];
        if(or__3824__auto____11955) {
          return or__3824__auto____11955
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____11960 = this$;
    if(and__3822__auto____11960) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____11960
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2264__auto____11961 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11962 = cljs.core._add_watch[goog.typeOf(x__2264__auto____11961)];
      if(or__3824__auto____11962) {
        return or__3824__auto____11962
      }else {
        var or__3824__auto____11963 = cljs.core._add_watch["_"];
        if(or__3824__auto____11963) {
          return or__3824__auto____11963
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____11968 = this$;
    if(and__3822__auto____11968) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____11968
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2264__auto____11969 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11970 = cljs.core._remove_watch[goog.typeOf(x__2264__auto____11969)];
      if(or__3824__auto____11970) {
        return or__3824__auto____11970
      }else {
        var or__3824__auto____11971 = cljs.core._remove_watch["_"];
        if(or__3824__auto____11971) {
          return or__3824__auto____11971
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____11976 = coll;
    if(and__3822__auto____11976) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____11976
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2264__auto____11977 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11978 = cljs.core._as_transient[goog.typeOf(x__2264__auto____11977)];
      if(or__3824__auto____11978) {
        return or__3824__auto____11978
      }else {
        var or__3824__auto____11979 = cljs.core._as_transient["_"];
        if(or__3824__auto____11979) {
          return or__3824__auto____11979
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____11984 = tcoll;
    if(and__3822__auto____11984) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____11984
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2264__auto____11985 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____11986 = cljs.core._conj_BANG_[goog.typeOf(x__2264__auto____11985)];
      if(or__3824__auto____11986) {
        return or__3824__auto____11986
      }else {
        var or__3824__auto____11987 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____11987) {
          return or__3824__auto____11987
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____11992 = tcoll;
    if(and__3822__auto____11992) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____11992
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2264__auto____11993 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____11994 = cljs.core._persistent_BANG_[goog.typeOf(x__2264__auto____11993)];
      if(or__3824__auto____11994) {
        return or__3824__auto____11994
      }else {
        var or__3824__auto____11995 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____11995) {
          return or__3824__auto____11995
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____12000 = tcoll;
    if(and__3822__auto____12000) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____12000
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2264__auto____12001 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____12002 = cljs.core._assoc_BANG_[goog.typeOf(x__2264__auto____12001)];
      if(or__3824__auto____12002) {
        return or__3824__auto____12002
      }else {
        var or__3824__auto____12003 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____12003) {
          return or__3824__auto____12003
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____12008 = tcoll;
    if(and__3822__auto____12008) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____12008
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2264__auto____12009 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____12010 = cljs.core._dissoc_BANG_[goog.typeOf(x__2264__auto____12009)];
      if(or__3824__auto____12010) {
        return or__3824__auto____12010
      }else {
        var or__3824__auto____12011 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____12011) {
          return or__3824__auto____12011
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____12016 = tcoll;
    if(and__3822__auto____12016) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____12016
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2264__auto____12017 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____12018 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2264__auto____12017)];
      if(or__3824__auto____12018) {
        return or__3824__auto____12018
      }else {
        var or__3824__auto____12019 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____12019) {
          return or__3824__auto____12019
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____12024 = tcoll;
    if(and__3822__auto____12024) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____12024
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2264__auto____12025 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____12026 = cljs.core._pop_BANG_[goog.typeOf(x__2264__auto____12025)];
      if(or__3824__auto____12026) {
        return or__3824__auto____12026
      }else {
        var or__3824__auto____12027 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____12027) {
          return or__3824__auto____12027
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____12032 = tcoll;
    if(and__3822__auto____12032) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____12032
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2264__auto____12033 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____12034 = cljs.core._disjoin_BANG_[goog.typeOf(x__2264__auto____12033)];
      if(or__3824__auto____12034) {
        return or__3824__auto____12034
      }else {
        var or__3824__auto____12035 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____12035) {
          return or__3824__auto____12035
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____12040 = x;
    if(and__3822__auto____12040) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____12040
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2264__auto____12041 = x == null ? null : x;
    return function() {
      var or__3824__auto____12042 = cljs.core._compare[goog.typeOf(x__2264__auto____12041)];
      if(or__3824__auto____12042) {
        return or__3824__auto____12042
      }else {
        var or__3824__auto____12043 = cljs.core._compare["_"];
        if(or__3824__auto____12043) {
          return or__3824__auto____12043
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____12048 = coll;
    if(and__3822__auto____12048) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____12048
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2264__auto____12049 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12050 = cljs.core._drop_first[goog.typeOf(x__2264__auto____12049)];
      if(or__3824__auto____12050) {
        return or__3824__auto____12050
      }else {
        var or__3824__auto____12051 = cljs.core._drop_first["_"];
        if(or__3824__auto____12051) {
          return or__3824__auto____12051
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____12056 = coll;
    if(and__3822__auto____12056) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____12056
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2264__auto____12057 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12058 = cljs.core._chunked_first[goog.typeOf(x__2264__auto____12057)];
      if(or__3824__auto____12058) {
        return or__3824__auto____12058
      }else {
        var or__3824__auto____12059 = cljs.core._chunked_first["_"];
        if(or__3824__auto____12059) {
          return or__3824__auto____12059
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____12064 = coll;
    if(and__3822__auto____12064) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____12064
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2264__auto____12065 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12066 = cljs.core._chunked_rest[goog.typeOf(x__2264__auto____12065)];
      if(or__3824__auto____12066) {
        return or__3824__auto____12066
      }else {
        var or__3824__auto____12067 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____12067) {
          return or__3824__auto____12067
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____12072 = coll;
    if(and__3822__auto____12072) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____12072
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2264__auto____12073 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12074 = cljs.core._chunked_next[goog.typeOf(x__2264__auto____12073)];
      if(or__3824__auto____12074) {
        return or__3824__auto____12074
      }else {
        var or__3824__auto____12075 = cljs.core._chunked_next["_"];
        if(or__3824__auto____12075) {
          return or__3824__auto____12075
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____12077 = x === y;
    if(or__3824__auto____12077) {
      return or__3824__auto____12077
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__12078__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__12079 = y;
            var G__12080 = cljs.core.first.call(null, more);
            var G__12081 = cljs.core.next.call(null, more);
            x = G__12079;
            y = G__12080;
            more = G__12081;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12078 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12078__delegate.call(this, x, y, more)
    };
    G__12078.cljs$lang$maxFixedArity = 2;
    G__12078.cljs$lang$applyTo = function(arglist__12082) {
      var x = cljs.core.first(arglist__12082);
      var y = cljs.core.first(cljs.core.next(arglist__12082));
      var more = cljs.core.rest(cljs.core.next(arglist__12082));
      return G__12078__delegate(x, y, more)
    };
    G__12078.cljs$lang$arity$variadic = G__12078__delegate;
    return G__12078
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__12083 = null;
  var G__12083__2 = function(o, k) {
    return null
  };
  var G__12083__3 = function(o, k, not_found) {
    return not_found
  };
  G__12083 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12083__2.call(this, o, k);
      case 3:
        return G__12083__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12083
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__12084 = null;
  var G__12084__2 = function(_, f) {
    return f.call(null)
  };
  var G__12084__3 = function(_, f, start) {
    return start
  };
  G__12084 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__12084__2.call(this, _, f);
      case 3:
        return G__12084__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12084
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__12085 = null;
  var G__12085__2 = function(_, n) {
    return null
  };
  var G__12085__3 = function(_, n, not_found) {
    return not_found
  };
  G__12085 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12085__2.call(this, _, n);
      case 3:
        return G__12085__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12085
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____12086 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____12086) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____12086
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__12099 = cljs.core._count.call(null, cicoll);
    if(cnt__12099 === 0) {
      return f.call(null)
    }else {
      var val__12100 = cljs.core._nth.call(null, cicoll, 0);
      var n__12101 = 1;
      while(true) {
        if(n__12101 < cnt__12099) {
          var nval__12102 = f.call(null, val__12100, cljs.core._nth.call(null, cicoll, n__12101));
          if(cljs.core.reduced_QMARK_.call(null, nval__12102)) {
            return cljs.core.deref.call(null, nval__12102)
          }else {
            var G__12111 = nval__12102;
            var G__12112 = n__12101 + 1;
            val__12100 = G__12111;
            n__12101 = G__12112;
            continue
          }
        }else {
          return val__12100
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__12103 = cljs.core._count.call(null, cicoll);
    var val__12104 = val;
    var n__12105 = 0;
    while(true) {
      if(n__12105 < cnt__12103) {
        var nval__12106 = f.call(null, val__12104, cljs.core._nth.call(null, cicoll, n__12105));
        if(cljs.core.reduced_QMARK_.call(null, nval__12106)) {
          return cljs.core.deref.call(null, nval__12106)
        }else {
          var G__12113 = nval__12106;
          var G__12114 = n__12105 + 1;
          val__12104 = G__12113;
          n__12105 = G__12114;
          continue
        }
      }else {
        return val__12104
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__12107 = cljs.core._count.call(null, cicoll);
    var val__12108 = val;
    var n__12109 = idx;
    while(true) {
      if(n__12109 < cnt__12107) {
        var nval__12110 = f.call(null, val__12108, cljs.core._nth.call(null, cicoll, n__12109));
        if(cljs.core.reduced_QMARK_.call(null, nval__12110)) {
          return cljs.core.deref.call(null, nval__12110)
        }else {
          var G__12115 = nval__12110;
          var G__12116 = n__12109 + 1;
          val__12108 = G__12115;
          n__12109 = G__12116;
          continue
        }
      }else {
        return val__12108
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__12129 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__12130 = arr[0];
      var n__12131 = 1;
      while(true) {
        if(n__12131 < cnt__12129) {
          var nval__12132 = f.call(null, val__12130, arr[n__12131]);
          if(cljs.core.reduced_QMARK_.call(null, nval__12132)) {
            return cljs.core.deref.call(null, nval__12132)
          }else {
            var G__12141 = nval__12132;
            var G__12142 = n__12131 + 1;
            val__12130 = G__12141;
            n__12131 = G__12142;
            continue
          }
        }else {
          return val__12130
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__12133 = arr.length;
    var val__12134 = val;
    var n__12135 = 0;
    while(true) {
      if(n__12135 < cnt__12133) {
        var nval__12136 = f.call(null, val__12134, arr[n__12135]);
        if(cljs.core.reduced_QMARK_.call(null, nval__12136)) {
          return cljs.core.deref.call(null, nval__12136)
        }else {
          var G__12143 = nval__12136;
          var G__12144 = n__12135 + 1;
          val__12134 = G__12143;
          n__12135 = G__12144;
          continue
        }
      }else {
        return val__12134
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__12137 = arr.length;
    var val__12138 = val;
    var n__12139 = idx;
    while(true) {
      if(n__12139 < cnt__12137) {
        var nval__12140 = f.call(null, val__12138, arr[n__12139]);
        if(cljs.core.reduced_QMARK_.call(null, nval__12140)) {
          return cljs.core.deref.call(null, nval__12140)
        }else {
          var G__12145 = nval__12140;
          var G__12146 = n__12139 + 1;
          val__12138 = G__12145;
          n__12139 = G__12146;
          continue
        }
      }else {
        return val__12138
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12147 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__12148 = this;
  if(this__12148.i + 1 < this__12148.a.length) {
    return new cljs.core.IndexedSeq(this__12148.a, this__12148.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12149 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__12150 = this;
  var c__12151 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__12151 > 0) {
    return new cljs.core.RSeq(coll, c__12151 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__12152 = this;
  var this__12153 = this;
  return cljs.core.pr_str.call(null, this__12153)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__12154 = this;
  if(cljs.core.counted_QMARK_.call(null, this__12154.a)) {
    return cljs.core.ci_reduce.call(null, this__12154.a, f, this__12154.a[this__12154.i], this__12154.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__12154.a[this__12154.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__12155 = this;
  if(cljs.core.counted_QMARK_.call(null, this__12155.a)) {
    return cljs.core.ci_reduce.call(null, this__12155.a, f, start, this__12155.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__12156 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__12157 = this;
  return this__12157.a.length - this__12157.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__12158 = this;
  return this__12158.a[this__12158.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__12159 = this;
  if(this__12159.i + 1 < this__12159.a.length) {
    return new cljs.core.IndexedSeq(this__12159.a, this__12159.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12160 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__12161 = this;
  var i__12162 = n + this__12161.i;
  if(i__12162 < this__12161.a.length) {
    return this__12161.a[i__12162]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__12163 = this;
  var i__12164 = n + this__12163.i;
  if(i__12164 < this__12163.a.length) {
    return this__12163.a[i__12164]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__12165 = null;
  var G__12165__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__12165__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__12165 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__12165__2.call(this, array, f);
      case 3:
        return G__12165__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12165
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__12166 = null;
  var G__12166__2 = function(array, k) {
    return array[k]
  };
  var G__12166__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__12166 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12166__2.call(this, array, k);
      case 3:
        return G__12166__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12166
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__12167 = null;
  var G__12167__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__12167__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__12167 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12167__2.call(this, array, n);
      case 3:
        return G__12167__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12167
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12168 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12169 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__12170 = this;
  var this__12171 = this;
  return cljs.core.pr_str.call(null, this__12171)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12172 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12173 = this;
  return this__12173.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12174 = this;
  return cljs.core._nth.call(null, this__12174.ci, this__12174.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12175 = this;
  if(this__12175.i > 0) {
    return new cljs.core.RSeq(this__12175.ci, this__12175.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12176 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__12177 = this;
  return new cljs.core.RSeq(this__12177.ci, this__12177.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12178 = this;
  return this__12178.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__12182__12183 = coll;
      if(G__12182__12183) {
        if(function() {
          var or__3824__auto____12184 = G__12182__12183.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____12184) {
            return or__3824__auto____12184
          }else {
            return G__12182__12183.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__12182__12183.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__12182__12183)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__12182__12183)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__12189__12190 = coll;
      if(G__12189__12190) {
        if(function() {
          var or__3824__auto____12191 = G__12189__12190.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____12191) {
            return or__3824__auto____12191
          }else {
            return G__12189__12190.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__12189__12190.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12189__12190)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12189__12190)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__12192 = cljs.core.seq.call(null, coll);
      if(s__12192 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__12192)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__12197__12198 = coll;
      if(G__12197__12198) {
        if(function() {
          var or__3824__auto____12199 = G__12197__12198.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____12199) {
            return or__3824__auto____12199
          }else {
            return G__12197__12198.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__12197__12198.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12197__12198)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12197__12198)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__12200 = cljs.core.seq.call(null, coll);
      if(!(s__12200 == null)) {
        return cljs.core._rest.call(null, s__12200)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__12204__12205 = coll;
      if(G__12204__12205) {
        if(function() {
          var or__3824__auto____12206 = G__12204__12205.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____12206) {
            return or__3824__auto____12206
          }else {
            return G__12204__12205.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__12204__12205.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12204__12205)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12204__12205)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__12208 = cljs.core.next.call(null, s);
    if(!(sn__12208 == null)) {
      var G__12209 = sn__12208;
      s = G__12209;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__12210__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__12211 = conj.call(null, coll, x);
          var G__12212 = cljs.core.first.call(null, xs);
          var G__12213 = cljs.core.next.call(null, xs);
          coll = G__12211;
          x = G__12212;
          xs = G__12213;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__12210 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12210__delegate.call(this, coll, x, xs)
    };
    G__12210.cljs$lang$maxFixedArity = 2;
    G__12210.cljs$lang$applyTo = function(arglist__12214) {
      var coll = cljs.core.first(arglist__12214);
      var x = cljs.core.first(cljs.core.next(arglist__12214));
      var xs = cljs.core.rest(cljs.core.next(arglist__12214));
      return G__12210__delegate(coll, x, xs)
    };
    G__12210.cljs$lang$arity$variadic = G__12210__delegate;
    return G__12210
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__12217 = cljs.core.seq.call(null, coll);
  var acc__12218 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__12217)) {
      return acc__12218 + cljs.core._count.call(null, s__12217)
    }else {
      var G__12219 = cljs.core.next.call(null, s__12217);
      var G__12220 = acc__12218 + 1;
      s__12217 = G__12219;
      acc__12218 = G__12220;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__12227__12228 = coll;
        if(G__12227__12228) {
          if(function() {
            var or__3824__auto____12229 = G__12227__12228.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____12229) {
              return or__3824__auto____12229
            }else {
              return G__12227__12228.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__12227__12228.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12227__12228)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12227__12228)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__12230__12231 = coll;
        if(G__12230__12231) {
          if(function() {
            var or__3824__auto____12232 = G__12230__12231.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____12232) {
              return or__3824__auto____12232
            }else {
              return G__12230__12231.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__12230__12231.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12230__12231)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12230__12231)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__12235__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__12234 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__12236 = ret__12234;
          var G__12237 = cljs.core.first.call(null, kvs);
          var G__12238 = cljs.core.second.call(null, kvs);
          var G__12239 = cljs.core.nnext.call(null, kvs);
          coll = G__12236;
          k = G__12237;
          v = G__12238;
          kvs = G__12239;
          continue
        }else {
          return ret__12234
        }
        break
      }
    };
    var G__12235 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12235__delegate.call(this, coll, k, v, kvs)
    };
    G__12235.cljs$lang$maxFixedArity = 3;
    G__12235.cljs$lang$applyTo = function(arglist__12240) {
      var coll = cljs.core.first(arglist__12240);
      var k = cljs.core.first(cljs.core.next(arglist__12240));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12240)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12240)));
      return G__12235__delegate(coll, k, v, kvs)
    };
    G__12235.cljs$lang$arity$variadic = G__12235__delegate;
    return G__12235
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__12243__delegate = function(coll, k, ks) {
      while(true) {
        var ret__12242 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__12244 = ret__12242;
          var G__12245 = cljs.core.first.call(null, ks);
          var G__12246 = cljs.core.next.call(null, ks);
          coll = G__12244;
          k = G__12245;
          ks = G__12246;
          continue
        }else {
          return ret__12242
        }
        break
      }
    };
    var G__12243 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12243__delegate.call(this, coll, k, ks)
    };
    G__12243.cljs$lang$maxFixedArity = 2;
    G__12243.cljs$lang$applyTo = function(arglist__12247) {
      var coll = cljs.core.first(arglist__12247);
      var k = cljs.core.first(cljs.core.next(arglist__12247));
      var ks = cljs.core.rest(cljs.core.next(arglist__12247));
      return G__12243__delegate(coll, k, ks)
    };
    G__12243.cljs$lang$arity$variadic = G__12243__delegate;
    return G__12243
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__12251__12252 = o;
    if(G__12251__12252) {
      if(function() {
        var or__3824__auto____12253 = G__12251__12252.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____12253) {
          return or__3824__auto____12253
        }else {
          return G__12251__12252.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__12251__12252.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__12251__12252)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__12251__12252)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__12256__delegate = function(coll, k, ks) {
      while(true) {
        var ret__12255 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__12257 = ret__12255;
          var G__12258 = cljs.core.first.call(null, ks);
          var G__12259 = cljs.core.next.call(null, ks);
          coll = G__12257;
          k = G__12258;
          ks = G__12259;
          continue
        }else {
          return ret__12255
        }
        break
      }
    };
    var G__12256 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12256__delegate.call(this, coll, k, ks)
    };
    G__12256.cljs$lang$maxFixedArity = 2;
    G__12256.cljs$lang$applyTo = function(arglist__12260) {
      var coll = cljs.core.first(arglist__12260);
      var k = cljs.core.first(cljs.core.next(arglist__12260));
      var ks = cljs.core.rest(cljs.core.next(arglist__12260));
      return G__12256__delegate(coll, k, ks)
    };
    G__12256.cljs$lang$arity$variadic = G__12256__delegate;
    return G__12256
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__12262 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__12262;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__12262
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__12264 = cljs.core.string_hash_cache[k];
  if(!(h__12264 == null)) {
    return h__12264
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____12266 = goog.isString(o);
      if(and__3822__auto____12266) {
        return check_cache
      }else {
        return and__3822__auto____12266
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__12270__12271 = x;
    if(G__12270__12271) {
      if(function() {
        var or__3824__auto____12272 = G__12270__12271.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____12272) {
          return or__3824__auto____12272
        }else {
          return G__12270__12271.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__12270__12271.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__12270__12271)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__12270__12271)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__12276__12277 = x;
    if(G__12276__12277) {
      if(function() {
        var or__3824__auto____12278 = G__12276__12277.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____12278) {
          return or__3824__auto____12278
        }else {
          return G__12276__12277.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__12276__12277.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__12276__12277)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__12276__12277)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__12282__12283 = x;
  if(G__12282__12283) {
    if(function() {
      var or__3824__auto____12284 = G__12282__12283.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____12284) {
        return or__3824__auto____12284
      }else {
        return G__12282__12283.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__12282__12283.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__12282__12283)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__12282__12283)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__12288__12289 = x;
  if(G__12288__12289) {
    if(function() {
      var or__3824__auto____12290 = G__12288__12289.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____12290) {
        return or__3824__auto____12290
      }else {
        return G__12288__12289.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__12288__12289.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__12288__12289)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__12288__12289)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__12294__12295 = x;
  if(G__12294__12295) {
    if(function() {
      var or__3824__auto____12296 = G__12294__12295.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____12296) {
        return or__3824__auto____12296
      }else {
        return G__12294__12295.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__12294__12295.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__12294__12295)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__12294__12295)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__12300__12301 = x;
  if(G__12300__12301) {
    if(function() {
      var or__3824__auto____12302 = G__12300__12301.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____12302) {
        return or__3824__auto____12302
      }else {
        return G__12300__12301.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__12300__12301.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12300__12301)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12300__12301)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__12306__12307 = x;
  if(G__12306__12307) {
    if(function() {
      var or__3824__auto____12308 = G__12306__12307.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____12308) {
        return or__3824__auto____12308
      }else {
        return G__12306__12307.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__12306__12307.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12306__12307)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12306__12307)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__12312__12313 = x;
    if(G__12312__12313) {
      if(function() {
        var or__3824__auto____12314 = G__12312__12313.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____12314) {
          return or__3824__auto____12314
        }else {
          return G__12312__12313.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__12312__12313.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__12312__12313)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__12312__12313)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__12318__12319 = x;
  if(G__12318__12319) {
    if(function() {
      var or__3824__auto____12320 = G__12318__12319.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____12320) {
        return or__3824__auto____12320
      }else {
        return G__12318__12319.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__12318__12319.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__12318__12319)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__12318__12319)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__12324__12325 = x;
  if(G__12324__12325) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____12326 = null;
      if(cljs.core.truth_(or__3824__auto____12326)) {
        return or__3824__auto____12326
      }else {
        return G__12324__12325.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__12324__12325.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__12324__12325)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__12324__12325)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__12327__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__12327 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__12327__delegate.call(this, keyvals)
    };
    G__12327.cljs$lang$maxFixedArity = 0;
    G__12327.cljs$lang$applyTo = function(arglist__12328) {
      var keyvals = cljs.core.seq(arglist__12328);
      return G__12327__delegate(keyvals)
    };
    G__12327.cljs$lang$arity$variadic = G__12327__delegate;
    return G__12327
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__12330 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__12330.push(key)
  });
  return keys__12330
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__12334 = i;
  var j__12335 = j;
  var len__12336 = len;
  while(true) {
    if(len__12336 === 0) {
      return to
    }else {
      to[j__12335] = from[i__12334];
      var G__12337 = i__12334 + 1;
      var G__12338 = j__12335 + 1;
      var G__12339 = len__12336 - 1;
      i__12334 = G__12337;
      j__12335 = G__12338;
      len__12336 = G__12339;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__12343 = i + (len - 1);
  var j__12344 = j + (len - 1);
  var len__12345 = len;
  while(true) {
    if(len__12345 === 0) {
      return to
    }else {
      to[j__12344] = from[i__12343];
      var G__12346 = i__12343 - 1;
      var G__12347 = j__12344 - 1;
      var G__12348 = len__12345 - 1;
      i__12343 = G__12346;
      j__12344 = G__12347;
      len__12345 = G__12348;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__12352__12353 = s;
    if(G__12352__12353) {
      if(function() {
        var or__3824__auto____12354 = G__12352__12353.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____12354) {
          return or__3824__auto____12354
        }else {
          return G__12352__12353.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__12352__12353.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12352__12353)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12352__12353)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__12358__12359 = s;
  if(G__12358__12359) {
    if(function() {
      var or__3824__auto____12360 = G__12358__12359.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____12360) {
        return or__3824__auto____12360
      }else {
        return G__12358__12359.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__12358__12359.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12358__12359)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12358__12359)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____12363 = goog.isString(x);
  if(and__3822__auto____12363) {
    return!function() {
      var or__3824__auto____12364 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____12364) {
        return or__3824__auto____12364
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____12363
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____12366 = goog.isString(x);
  if(and__3822__auto____12366) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____12366
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____12368 = goog.isString(x);
  if(and__3822__auto____12368) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____12368
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____12373 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____12373) {
    return or__3824__auto____12373
  }else {
    var G__12374__12375 = f;
    if(G__12374__12375) {
      if(function() {
        var or__3824__auto____12376 = G__12374__12375.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____12376) {
          return or__3824__auto____12376
        }else {
          return G__12374__12375.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__12374__12375.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__12374__12375)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__12374__12375)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____12378 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____12378) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____12378
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____12381 = coll;
    if(cljs.core.truth_(and__3822__auto____12381)) {
      var and__3822__auto____12382 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____12382) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____12382
      }
    }else {
      return and__3822__auto____12381
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__12391__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__12387 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__12388 = more;
        while(true) {
          var x__12389 = cljs.core.first.call(null, xs__12388);
          var etc__12390 = cljs.core.next.call(null, xs__12388);
          if(cljs.core.truth_(xs__12388)) {
            if(cljs.core.contains_QMARK_.call(null, s__12387, x__12389)) {
              return false
            }else {
              var G__12392 = cljs.core.conj.call(null, s__12387, x__12389);
              var G__12393 = etc__12390;
              s__12387 = G__12392;
              xs__12388 = G__12393;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__12391 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12391__delegate.call(this, x, y, more)
    };
    G__12391.cljs$lang$maxFixedArity = 2;
    G__12391.cljs$lang$applyTo = function(arglist__12394) {
      var x = cljs.core.first(arglist__12394);
      var y = cljs.core.first(cljs.core.next(arglist__12394));
      var more = cljs.core.rest(cljs.core.next(arglist__12394));
      return G__12391__delegate(x, y, more)
    };
    G__12391.cljs$lang$arity$variadic = G__12391__delegate;
    return G__12391
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__12398__12399 = x;
            if(G__12398__12399) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____12400 = null;
                if(cljs.core.truth_(or__3824__auto____12400)) {
                  return or__3824__auto____12400
                }else {
                  return G__12398__12399.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__12398__12399.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__12398__12399)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__12398__12399)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__12405 = cljs.core.count.call(null, xs);
    var yl__12406 = cljs.core.count.call(null, ys);
    if(xl__12405 < yl__12406) {
      return-1
    }else {
      if(xl__12405 > yl__12406) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__12405, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__12407 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____12408 = d__12407 === 0;
        if(and__3822__auto____12408) {
          return n + 1 < len
        }else {
          return and__3822__auto____12408
        }
      }()) {
        var G__12409 = xs;
        var G__12410 = ys;
        var G__12411 = len;
        var G__12412 = n + 1;
        xs = G__12409;
        ys = G__12410;
        len = G__12411;
        n = G__12412;
        continue
      }else {
        return d__12407
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__12414 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__12414)) {
        return r__12414
      }else {
        if(cljs.core.truth_(r__12414)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__12416 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__12416, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__12416)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____12422 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____12422) {
      var s__12423 = temp__3971__auto____12422;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__12423), cljs.core.next.call(null, s__12423))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__12424 = val;
    var coll__12425 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__12425) {
        var nval__12426 = f.call(null, val__12424, cljs.core.first.call(null, coll__12425));
        if(cljs.core.reduced_QMARK_.call(null, nval__12426)) {
          return cljs.core.deref.call(null, nval__12426)
        }else {
          var G__12427 = nval__12426;
          var G__12428 = cljs.core.next.call(null, coll__12425);
          val__12424 = G__12427;
          coll__12425 = G__12428;
          continue
        }
      }else {
        return val__12424
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__12430 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__12430);
  return cljs.core.vec.call(null, a__12430)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__12437__12438 = coll;
      if(G__12437__12438) {
        if(function() {
          var or__3824__auto____12439 = G__12437__12438.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____12439) {
            return or__3824__auto____12439
          }else {
            return G__12437__12438.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__12437__12438.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12437__12438)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12437__12438)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__12440__12441 = coll;
      if(G__12440__12441) {
        if(function() {
          var or__3824__auto____12442 = G__12440__12441.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____12442) {
            return or__3824__auto____12442
          }else {
            return G__12440__12441.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__12440__12441.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12440__12441)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12440__12441)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__12443 = this;
  return this__12443.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__12444__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__12444 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12444__delegate.call(this, x, y, more)
    };
    G__12444.cljs$lang$maxFixedArity = 2;
    G__12444.cljs$lang$applyTo = function(arglist__12445) {
      var x = cljs.core.first(arglist__12445);
      var y = cljs.core.first(cljs.core.next(arglist__12445));
      var more = cljs.core.rest(cljs.core.next(arglist__12445));
      return G__12444__delegate(x, y, more)
    };
    G__12444.cljs$lang$arity$variadic = G__12444__delegate;
    return G__12444
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__12446__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__12446 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12446__delegate.call(this, x, y, more)
    };
    G__12446.cljs$lang$maxFixedArity = 2;
    G__12446.cljs$lang$applyTo = function(arglist__12447) {
      var x = cljs.core.first(arglist__12447);
      var y = cljs.core.first(cljs.core.next(arglist__12447));
      var more = cljs.core.rest(cljs.core.next(arglist__12447));
      return G__12446__delegate(x, y, more)
    };
    G__12446.cljs$lang$arity$variadic = G__12446__delegate;
    return G__12446
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__12448__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__12448 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12448__delegate.call(this, x, y, more)
    };
    G__12448.cljs$lang$maxFixedArity = 2;
    G__12448.cljs$lang$applyTo = function(arglist__12449) {
      var x = cljs.core.first(arglist__12449);
      var y = cljs.core.first(cljs.core.next(arglist__12449));
      var more = cljs.core.rest(cljs.core.next(arglist__12449));
      return G__12448__delegate(x, y, more)
    };
    G__12448.cljs$lang$arity$variadic = G__12448__delegate;
    return G__12448
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__12450__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__12450 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12450__delegate.call(this, x, y, more)
    };
    G__12450.cljs$lang$maxFixedArity = 2;
    G__12450.cljs$lang$applyTo = function(arglist__12451) {
      var x = cljs.core.first(arglist__12451);
      var y = cljs.core.first(cljs.core.next(arglist__12451));
      var more = cljs.core.rest(cljs.core.next(arglist__12451));
      return G__12450__delegate(x, y, more)
    };
    G__12450.cljs$lang$arity$variadic = G__12450__delegate;
    return G__12450
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__12452__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__12453 = y;
            var G__12454 = cljs.core.first.call(null, more);
            var G__12455 = cljs.core.next.call(null, more);
            x = G__12453;
            y = G__12454;
            more = G__12455;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12452 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12452__delegate.call(this, x, y, more)
    };
    G__12452.cljs$lang$maxFixedArity = 2;
    G__12452.cljs$lang$applyTo = function(arglist__12456) {
      var x = cljs.core.first(arglist__12456);
      var y = cljs.core.first(cljs.core.next(arglist__12456));
      var more = cljs.core.rest(cljs.core.next(arglist__12456));
      return G__12452__delegate(x, y, more)
    };
    G__12452.cljs$lang$arity$variadic = G__12452__delegate;
    return G__12452
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__12457__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__12458 = y;
            var G__12459 = cljs.core.first.call(null, more);
            var G__12460 = cljs.core.next.call(null, more);
            x = G__12458;
            y = G__12459;
            more = G__12460;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12457 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12457__delegate.call(this, x, y, more)
    };
    G__12457.cljs$lang$maxFixedArity = 2;
    G__12457.cljs$lang$applyTo = function(arglist__12461) {
      var x = cljs.core.first(arglist__12461);
      var y = cljs.core.first(cljs.core.next(arglist__12461));
      var more = cljs.core.rest(cljs.core.next(arglist__12461));
      return G__12457__delegate(x, y, more)
    };
    G__12457.cljs$lang$arity$variadic = G__12457__delegate;
    return G__12457
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__12462__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__12463 = y;
            var G__12464 = cljs.core.first.call(null, more);
            var G__12465 = cljs.core.next.call(null, more);
            x = G__12463;
            y = G__12464;
            more = G__12465;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12462 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12462__delegate.call(this, x, y, more)
    };
    G__12462.cljs$lang$maxFixedArity = 2;
    G__12462.cljs$lang$applyTo = function(arglist__12466) {
      var x = cljs.core.first(arglist__12466);
      var y = cljs.core.first(cljs.core.next(arglist__12466));
      var more = cljs.core.rest(cljs.core.next(arglist__12466));
      return G__12462__delegate(x, y, more)
    };
    G__12462.cljs$lang$arity$variadic = G__12462__delegate;
    return G__12462
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__12467__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__12468 = y;
            var G__12469 = cljs.core.first.call(null, more);
            var G__12470 = cljs.core.next.call(null, more);
            x = G__12468;
            y = G__12469;
            more = G__12470;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12467 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12467__delegate.call(this, x, y, more)
    };
    G__12467.cljs$lang$maxFixedArity = 2;
    G__12467.cljs$lang$applyTo = function(arglist__12471) {
      var x = cljs.core.first(arglist__12471);
      var y = cljs.core.first(cljs.core.next(arglist__12471));
      var more = cljs.core.rest(cljs.core.next(arglist__12471));
      return G__12467__delegate(x, y, more)
    };
    G__12467.cljs$lang$arity$variadic = G__12467__delegate;
    return G__12467
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__12472__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__12472 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12472__delegate.call(this, x, y, more)
    };
    G__12472.cljs$lang$maxFixedArity = 2;
    G__12472.cljs$lang$applyTo = function(arglist__12473) {
      var x = cljs.core.first(arglist__12473);
      var y = cljs.core.first(cljs.core.next(arglist__12473));
      var more = cljs.core.rest(cljs.core.next(arglist__12473));
      return G__12472__delegate(x, y, more)
    };
    G__12472.cljs$lang$arity$variadic = G__12472__delegate;
    return G__12472
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__12474__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__12474 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12474__delegate.call(this, x, y, more)
    };
    G__12474.cljs$lang$maxFixedArity = 2;
    G__12474.cljs$lang$applyTo = function(arglist__12475) {
      var x = cljs.core.first(arglist__12475);
      var y = cljs.core.first(cljs.core.next(arglist__12475));
      var more = cljs.core.rest(cljs.core.next(arglist__12475));
      return G__12474__delegate(x, y, more)
    };
    G__12474.cljs$lang$arity$variadic = G__12474__delegate;
    return G__12474
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__12477 = n % d;
  return cljs.core.fix.call(null, (n - rem__12477) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__12479 = cljs.core.quot.call(null, n, d);
  return n - d * q__12479
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__12482 = v - (v >> 1 & 1431655765);
  var v__12483 = (v__12482 & 858993459) + (v__12482 >> 2 & 858993459);
  return(v__12483 + (v__12483 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__12484__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__12485 = y;
            var G__12486 = cljs.core.first.call(null, more);
            var G__12487 = cljs.core.next.call(null, more);
            x = G__12485;
            y = G__12486;
            more = G__12487;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12484 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12484__delegate.call(this, x, y, more)
    };
    G__12484.cljs$lang$maxFixedArity = 2;
    G__12484.cljs$lang$applyTo = function(arglist__12488) {
      var x = cljs.core.first(arglist__12488);
      var y = cljs.core.first(cljs.core.next(arglist__12488));
      var more = cljs.core.rest(cljs.core.next(arglist__12488));
      return G__12484__delegate(x, y, more)
    };
    G__12484.cljs$lang$arity$variadic = G__12484__delegate;
    return G__12484
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__12492 = n;
  var xs__12493 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____12494 = xs__12493;
      if(and__3822__auto____12494) {
        return n__12492 > 0
      }else {
        return and__3822__auto____12494
      }
    }())) {
      var G__12495 = n__12492 - 1;
      var G__12496 = cljs.core.next.call(null, xs__12493);
      n__12492 = G__12495;
      xs__12493 = G__12496;
      continue
    }else {
      return xs__12493
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__12497__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__12498 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__12499 = cljs.core.next.call(null, more);
            sb = G__12498;
            more = G__12499;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__12497 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__12497__delegate.call(this, x, ys)
    };
    G__12497.cljs$lang$maxFixedArity = 1;
    G__12497.cljs$lang$applyTo = function(arglist__12500) {
      var x = cljs.core.first(arglist__12500);
      var ys = cljs.core.rest(arglist__12500);
      return G__12497__delegate(x, ys)
    };
    G__12497.cljs$lang$arity$variadic = G__12497__delegate;
    return G__12497
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__12501__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__12502 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__12503 = cljs.core.next.call(null, more);
            sb = G__12502;
            more = G__12503;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__12501 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__12501__delegate.call(this, x, ys)
    };
    G__12501.cljs$lang$maxFixedArity = 1;
    G__12501.cljs$lang$applyTo = function(arglist__12504) {
      var x = cljs.core.first(arglist__12504);
      var ys = cljs.core.rest(arglist__12504);
      return G__12501__delegate(x, ys)
    };
    G__12501.cljs$lang$arity$variadic = G__12501__delegate;
    return G__12501
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__12505) {
    var fmt = cljs.core.first(arglist__12505);
    var args = cljs.core.rest(arglist__12505);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__12508 = cljs.core.seq.call(null, x);
    var ys__12509 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__12508 == null) {
        return ys__12509 == null
      }else {
        if(ys__12509 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__12508), cljs.core.first.call(null, ys__12509))) {
            var G__12510 = cljs.core.next.call(null, xs__12508);
            var G__12511 = cljs.core.next.call(null, ys__12509);
            xs__12508 = G__12510;
            ys__12509 = G__12511;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__12512_SHARP_, p2__12513_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__12512_SHARP_, cljs.core.hash.call(null, p2__12513_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__12517 = 0;
  var s__12518 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__12518) {
      var e__12519 = cljs.core.first.call(null, s__12518);
      var G__12520 = (h__12517 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__12519)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__12519)))) % 4503599627370496;
      var G__12521 = cljs.core.next.call(null, s__12518);
      h__12517 = G__12520;
      s__12518 = G__12521;
      continue
    }else {
      return h__12517
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__12525 = 0;
  var s__12526 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__12526) {
      var e__12527 = cljs.core.first.call(null, s__12526);
      var G__12528 = (h__12525 + cljs.core.hash.call(null, e__12527)) % 4503599627370496;
      var G__12529 = cljs.core.next.call(null, s__12526);
      h__12525 = G__12528;
      s__12526 = G__12529;
      continue
    }else {
      return h__12525
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__12550__12551 = cljs.core.seq.call(null, fn_map);
  if(G__12550__12551) {
    var G__12553__12555 = cljs.core.first.call(null, G__12550__12551);
    var vec__12554__12556 = G__12553__12555;
    var key_name__12557 = cljs.core.nth.call(null, vec__12554__12556, 0, null);
    var f__12558 = cljs.core.nth.call(null, vec__12554__12556, 1, null);
    var G__12550__12559 = G__12550__12551;
    var G__12553__12560 = G__12553__12555;
    var G__12550__12561 = G__12550__12559;
    while(true) {
      var vec__12562__12563 = G__12553__12560;
      var key_name__12564 = cljs.core.nth.call(null, vec__12562__12563, 0, null);
      var f__12565 = cljs.core.nth.call(null, vec__12562__12563, 1, null);
      var G__12550__12566 = G__12550__12561;
      var str_name__12567 = cljs.core.name.call(null, key_name__12564);
      obj[str_name__12567] = f__12565;
      var temp__3974__auto____12568 = cljs.core.next.call(null, G__12550__12566);
      if(temp__3974__auto____12568) {
        var G__12550__12569 = temp__3974__auto____12568;
        var G__12570 = cljs.core.first.call(null, G__12550__12569);
        var G__12571 = G__12550__12569;
        G__12553__12560 = G__12570;
        G__12550__12561 = G__12571;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12572 = this;
  var h__2093__auto____12573 = this__12572.__hash;
  if(!(h__2093__auto____12573 == null)) {
    return h__2093__auto____12573
  }else {
    var h__2093__auto____12574 = cljs.core.hash_coll.call(null, coll);
    this__12572.__hash = h__2093__auto____12574;
    return h__2093__auto____12574
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__12575 = this;
  if(this__12575.count === 1) {
    return null
  }else {
    return this__12575.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12576 = this;
  return new cljs.core.List(this__12576.meta, o, coll, this__12576.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__12577 = this;
  var this__12578 = this;
  return cljs.core.pr_str.call(null, this__12578)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12579 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12580 = this;
  return this__12580.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__12581 = this;
  return this__12581.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__12582 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12583 = this;
  return this__12583.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12584 = this;
  if(this__12584.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__12584.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12585 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12586 = this;
  return new cljs.core.List(meta, this__12586.first, this__12586.rest, this__12586.count, this__12586.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12587 = this;
  return this__12587.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12588 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12589 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__12590 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12591 = this;
  return new cljs.core.List(this__12591.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__12592 = this;
  var this__12593 = this;
  return cljs.core.pr_str.call(null, this__12593)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12594 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12595 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__12596 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__12597 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12598 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12599 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12600 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12601 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12602 = this;
  return this__12602.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12603 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__12607__12608 = coll;
  if(G__12607__12608) {
    if(function() {
      var or__3824__auto____12609 = G__12607__12608.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____12609) {
        return or__3824__auto____12609
      }else {
        return G__12607__12608.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__12607__12608.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__12607__12608)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__12607__12608)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__12610__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__12610 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12610__delegate.call(this, x, y, z, items)
    };
    G__12610.cljs$lang$maxFixedArity = 3;
    G__12610.cljs$lang$applyTo = function(arglist__12611) {
      var x = cljs.core.first(arglist__12611);
      var y = cljs.core.first(cljs.core.next(arglist__12611));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12611)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12611)));
      return G__12610__delegate(x, y, z, items)
    };
    G__12610.cljs$lang$arity$variadic = G__12610__delegate;
    return G__12610
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12612 = this;
  var h__2093__auto____12613 = this__12612.__hash;
  if(!(h__2093__auto____12613 == null)) {
    return h__2093__auto____12613
  }else {
    var h__2093__auto____12614 = cljs.core.hash_coll.call(null, coll);
    this__12612.__hash = h__2093__auto____12614;
    return h__2093__auto____12614
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__12615 = this;
  if(this__12615.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__12615.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12616 = this;
  return new cljs.core.Cons(null, o, coll, this__12616.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__12617 = this;
  var this__12618 = this;
  return cljs.core.pr_str.call(null, this__12618)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12619 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12620 = this;
  return this__12620.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12621 = this;
  if(this__12621.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__12621.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12622 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12623 = this;
  return new cljs.core.Cons(meta, this__12623.first, this__12623.rest, this__12623.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12624 = this;
  return this__12624.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12625 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__12625.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____12630 = coll == null;
    if(or__3824__auto____12630) {
      return or__3824__auto____12630
    }else {
      var G__12631__12632 = coll;
      if(G__12631__12632) {
        if(function() {
          var or__3824__auto____12633 = G__12631__12632.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____12633) {
            return or__3824__auto____12633
          }else {
            return G__12631__12632.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__12631__12632.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12631__12632)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12631__12632)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__12637__12638 = x;
  if(G__12637__12638) {
    if(function() {
      var or__3824__auto____12639 = G__12637__12638.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____12639) {
        return or__3824__auto____12639
      }else {
        return G__12637__12638.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__12637__12638.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__12637__12638)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__12637__12638)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__12640 = null;
  var G__12640__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__12640__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__12640 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__12640__2.call(this, string, f);
      case 3:
        return G__12640__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12640
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__12641 = null;
  var G__12641__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__12641__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__12641 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12641__2.call(this, string, k);
      case 3:
        return G__12641__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12641
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__12642 = null;
  var G__12642__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__12642__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__12642 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12642__2.call(this, string, n);
      case 3:
        return G__12642__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12642
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__12654 = null;
  var G__12654__2 = function(this_sym12645, coll) {
    var this__12647 = this;
    var this_sym12645__12648 = this;
    var ___12649 = this_sym12645__12648;
    if(coll == null) {
      return null
    }else {
      var strobj__12650 = coll.strobj;
      if(strobj__12650 == null) {
        return cljs.core._lookup.call(null, coll, this__12647.k, null)
      }else {
        return strobj__12650[this__12647.k]
      }
    }
  };
  var G__12654__3 = function(this_sym12646, coll, not_found) {
    var this__12647 = this;
    var this_sym12646__12651 = this;
    var ___12652 = this_sym12646__12651;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__12647.k, not_found)
    }
  };
  G__12654 = function(this_sym12646, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12654__2.call(this, this_sym12646, coll);
      case 3:
        return G__12654__3.call(this, this_sym12646, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12654
}();
cljs.core.Keyword.prototype.apply = function(this_sym12643, args12644) {
  var this__12653 = this;
  return this_sym12643.call.apply(this_sym12643, [this_sym12643].concat(args12644.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__12663 = null;
  var G__12663__2 = function(this_sym12657, coll) {
    var this_sym12657__12659 = this;
    var this__12660 = this_sym12657__12659;
    return cljs.core._lookup.call(null, coll, this__12660.toString(), null)
  };
  var G__12663__3 = function(this_sym12658, coll, not_found) {
    var this_sym12658__12661 = this;
    var this__12662 = this_sym12658__12661;
    return cljs.core._lookup.call(null, coll, this__12662.toString(), not_found)
  };
  G__12663 = function(this_sym12658, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12663__2.call(this, this_sym12658, coll);
      case 3:
        return G__12663__3.call(this, this_sym12658, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12663
}();
String.prototype.apply = function(this_sym12655, args12656) {
  return this_sym12655.call.apply(this_sym12655, [this_sym12655].concat(args12656.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__12665 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__12665
  }else {
    lazy_seq.x = x__12665.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12666 = this;
  var h__2093__auto____12667 = this__12666.__hash;
  if(!(h__2093__auto____12667 == null)) {
    return h__2093__auto____12667
  }else {
    var h__2093__auto____12668 = cljs.core.hash_coll.call(null, coll);
    this__12666.__hash = h__2093__auto____12668;
    return h__2093__auto____12668
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__12669 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12670 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__12671 = this;
  var this__12672 = this;
  return cljs.core.pr_str.call(null, this__12672)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12673 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12674 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12675 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12676 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12677 = this;
  return new cljs.core.LazySeq(meta, this__12677.realized, this__12677.x, this__12677.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12678 = this;
  return this__12678.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12679 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__12679.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__12680 = this;
  return this__12680.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__12681 = this;
  var ___12682 = this;
  this__12681.buf[this__12681.end] = o;
  return this__12681.end = this__12681.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__12683 = this;
  var ___12684 = this;
  var ret__12685 = new cljs.core.ArrayChunk(this__12683.buf, 0, this__12683.end);
  this__12683.buf = null;
  return ret__12685
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__12686 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__12686.arr[this__12686.off], this__12686.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__12687 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__12687.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__12688 = this;
  if(this__12688.off === this__12688.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__12688.arr, this__12688.off + 1, this__12688.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__12689 = this;
  return this__12689.arr[this__12689.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__12690 = this;
  if(function() {
    var and__3822__auto____12691 = i >= 0;
    if(and__3822__auto____12691) {
      return i < this__12690.end - this__12690.off
    }else {
      return and__3822__auto____12691
    }
  }()) {
    return this__12690.arr[this__12690.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__12692 = this;
  return this__12692.end - this__12692.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__12693 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12694 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12695 = this;
  return cljs.core._nth.call(null, this__12695.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12696 = this;
  if(cljs.core._count.call(null, this__12696.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__12696.chunk), this__12696.more, this__12696.meta)
  }else {
    if(this__12696.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__12696.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__12697 = this;
  if(this__12697.more == null) {
    return null
  }else {
    return this__12697.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12698 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__12699 = this;
  return new cljs.core.ChunkedCons(this__12699.chunk, this__12699.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12700 = this;
  return this__12700.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__12701 = this;
  return this__12701.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__12702 = this;
  if(this__12702.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__12702.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__12706__12707 = s;
    if(G__12706__12707) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____12708 = null;
        if(cljs.core.truth_(or__3824__auto____12708)) {
          return or__3824__auto____12708
        }else {
          return G__12706__12707.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__12706__12707.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__12706__12707)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__12706__12707)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__12711 = [];
  var s__12712 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__12712)) {
      ary__12711.push(cljs.core.first.call(null, s__12712));
      var G__12713 = cljs.core.next.call(null, s__12712);
      s__12712 = G__12713;
      continue
    }else {
      return ary__12711
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__12717 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__12718 = 0;
  var xs__12719 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__12719) {
      ret__12717[i__12718] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__12719));
      var G__12720 = i__12718 + 1;
      var G__12721 = cljs.core.next.call(null, xs__12719);
      i__12718 = G__12720;
      xs__12719 = G__12721;
      continue
    }else {
    }
    break
  }
  return ret__12717
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__12729 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__12730 = cljs.core.seq.call(null, init_val_or_seq);
      var i__12731 = 0;
      var s__12732 = s__12730;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____12733 = s__12732;
          if(and__3822__auto____12733) {
            return i__12731 < size
          }else {
            return and__3822__auto____12733
          }
        }())) {
          a__12729[i__12731] = cljs.core.first.call(null, s__12732);
          var G__12736 = i__12731 + 1;
          var G__12737 = cljs.core.next.call(null, s__12732);
          i__12731 = G__12736;
          s__12732 = G__12737;
          continue
        }else {
          return a__12729
        }
        break
      }
    }else {
      var n__2428__auto____12734 = size;
      var i__12735 = 0;
      while(true) {
        if(i__12735 < n__2428__auto____12734) {
          a__12729[i__12735] = init_val_or_seq;
          var G__12738 = i__12735 + 1;
          i__12735 = G__12738;
          continue
        }else {
        }
        break
      }
      return a__12729
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__12746 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__12747 = cljs.core.seq.call(null, init_val_or_seq);
      var i__12748 = 0;
      var s__12749 = s__12747;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____12750 = s__12749;
          if(and__3822__auto____12750) {
            return i__12748 < size
          }else {
            return and__3822__auto____12750
          }
        }())) {
          a__12746[i__12748] = cljs.core.first.call(null, s__12749);
          var G__12753 = i__12748 + 1;
          var G__12754 = cljs.core.next.call(null, s__12749);
          i__12748 = G__12753;
          s__12749 = G__12754;
          continue
        }else {
          return a__12746
        }
        break
      }
    }else {
      var n__2428__auto____12751 = size;
      var i__12752 = 0;
      while(true) {
        if(i__12752 < n__2428__auto____12751) {
          a__12746[i__12752] = init_val_or_seq;
          var G__12755 = i__12752 + 1;
          i__12752 = G__12755;
          continue
        }else {
        }
        break
      }
      return a__12746
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__12763 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__12764 = cljs.core.seq.call(null, init_val_or_seq);
      var i__12765 = 0;
      var s__12766 = s__12764;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____12767 = s__12766;
          if(and__3822__auto____12767) {
            return i__12765 < size
          }else {
            return and__3822__auto____12767
          }
        }())) {
          a__12763[i__12765] = cljs.core.first.call(null, s__12766);
          var G__12770 = i__12765 + 1;
          var G__12771 = cljs.core.next.call(null, s__12766);
          i__12765 = G__12770;
          s__12766 = G__12771;
          continue
        }else {
          return a__12763
        }
        break
      }
    }else {
      var n__2428__auto____12768 = size;
      var i__12769 = 0;
      while(true) {
        if(i__12769 < n__2428__auto____12768) {
          a__12763[i__12769] = init_val_or_seq;
          var G__12772 = i__12769 + 1;
          i__12769 = G__12772;
          continue
        }else {
        }
        break
      }
      return a__12763
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__12777 = s;
    var i__12778 = n;
    var sum__12779 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____12780 = i__12778 > 0;
        if(and__3822__auto____12780) {
          return cljs.core.seq.call(null, s__12777)
        }else {
          return and__3822__auto____12780
        }
      }())) {
        var G__12781 = cljs.core.next.call(null, s__12777);
        var G__12782 = i__12778 - 1;
        var G__12783 = sum__12779 + 1;
        s__12777 = G__12781;
        i__12778 = G__12782;
        sum__12779 = G__12783;
        continue
      }else {
        return sum__12779
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__12788 = cljs.core.seq.call(null, x);
      if(s__12788) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__12788)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__12788), concat.call(null, cljs.core.chunk_rest.call(null, s__12788), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__12788), concat.call(null, cljs.core.rest.call(null, s__12788), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__12792__delegate = function(x, y, zs) {
      var cat__12791 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__12790 = cljs.core.seq.call(null, xys);
          if(xys__12790) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__12790)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__12790), cat.call(null, cljs.core.chunk_rest.call(null, xys__12790), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__12790), cat.call(null, cljs.core.rest.call(null, xys__12790), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__12791.call(null, concat.call(null, x, y), zs)
    };
    var G__12792 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12792__delegate.call(this, x, y, zs)
    };
    G__12792.cljs$lang$maxFixedArity = 2;
    G__12792.cljs$lang$applyTo = function(arglist__12793) {
      var x = cljs.core.first(arglist__12793);
      var y = cljs.core.first(cljs.core.next(arglist__12793));
      var zs = cljs.core.rest(cljs.core.next(arglist__12793));
      return G__12792__delegate(x, y, zs)
    };
    G__12792.cljs$lang$arity$variadic = G__12792__delegate;
    return G__12792
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__12794__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__12794 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__12794__delegate.call(this, a, b, c, d, more)
    };
    G__12794.cljs$lang$maxFixedArity = 4;
    G__12794.cljs$lang$applyTo = function(arglist__12795) {
      var a = cljs.core.first(arglist__12795);
      var b = cljs.core.first(cljs.core.next(arglist__12795));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12795)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12795))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12795))));
      return G__12794__delegate(a, b, c, d, more)
    };
    G__12794.cljs$lang$arity$variadic = G__12794__delegate;
    return G__12794
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__12837 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__12838 = cljs.core._first.call(null, args__12837);
    var args__12839 = cljs.core._rest.call(null, args__12837);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__12838)
      }else {
        return f.call(null, a__12838)
      }
    }else {
      var b__12840 = cljs.core._first.call(null, args__12839);
      var args__12841 = cljs.core._rest.call(null, args__12839);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__12838, b__12840)
        }else {
          return f.call(null, a__12838, b__12840)
        }
      }else {
        var c__12842 = cljs.core._first.call(null, args__12841);
        var args__12843 = cljs.core._rest.call(null, args__12841);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__12838, b__12840, c__12842)
          }else {
            return f.call(null, a__12838, b__12840, c__12842)
          }
        }else {
          var d__12844 = cljs.core._first.call(null, args__12843);
          var args__12845 = cljs.core._rest.call(null, args__12843);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__12838, b__12840, c__12842, d__12844)
            }else {
              return f.call(null, a__12838, b__12840, c__12842, d__12844)
            }
          }else {
            var e__12846 = cljs.core._first.call(null, args__12845);
            var args__12847 = cljs.core._rest.call(null, args__12845);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__12838, b__12840, c__12842, d__12844, e__12846)
              }else {
                return f.call(null, a__12838, b__12840, c__12842, d__12844, e__12846)
              }
            }else {
              var f__12848 = cljs.core._first.call(null, args__12847);
              var args__12849 = cljs.core._rest.call(null, args__12847);
              if(argc === 6) {
                if(f__12848.cljs$lang$arity$6) {
                  return f__12848.cljs$lang$arity$6(a__12838, b__12840, c__12842, d__12844, e__12846, f__12848)
                }else {
                  return f__12848.call(null, a__12838, b__12840, c__12842, d__12844, e__12846, f__12848)
                }
              }else {
                var g__12850 = cljs.core._first.call(null, args__12849);
                var args__12851 = cljs.core._rest.call(null, args__12849);
                if(argc === 7) {
                  if(f__12848.cljs$lang$arity$7) {
                    return f__12848.cljs$lang$arity$7(a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850)
                  }else {
                    return f__12848.call(null, a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850)
                  }
                }else {
                  var h__12852 = cljs.core._first.call(null, args__12851);
                  var args__12853 = cljs.core._rest.call(null, args__12851);
                  if(argc === 8) {
                    if(f__12848.cljs$lang$arity$8) {
                      return f__12848.cljs$lang$arity$8(a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852)
                    }else {
                      return f__12848.call(null, a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852)
                    }
                  }else {
                    var i__12854 = cljs.core._first.call(null, args__12853);
                    var args__12855 = cljs.core._rest.call(null, args__12853);
                    if(argc === 9) {
                      if(f__12848.cljs$lang$arity$9) {
                        return f__12848.cljs$lang$arity$9(a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854)
                      }else {
                        return f__12848.call(null, a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854)
                      }
                    }else {
                      var j__12856 = cljs.core._first.call(null, args__12855);
                      var args__12857 = cljs.core._rest.call(null, args__12855);
                      if(argc === 10) {
                        if(f__12848.cljs$lang$arity$10) {
                          return f__12848.cljs$lang$arity$10(a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854, j__12856)
                        }else {
                          return f__12848.call(null, a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854, j__12856)
                        }
                      }else {
                        var k__12858 = cljs.core._first.call(null, args__12857);
                        var args__12859 = cljs.core._rest.call(null, args__12857);
                        if(argc === 11) {
                          if(f__12848.cljs$lang$arity$11) {
                            return f__12848.cljs$lang$arity$11(a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854, j__12856, k__12858)
                          }else {
                            return f__12848.call(null, a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854, j__12856, k__12858)
                          }
                        }else {
                          var l__12860 = cljs.core._first.call(null, args__12859);
                          var args__12861 = cljs.core._rest.call(null, args__12859);
                          if(argc === 12) {
                            if(f__12848.cljs$lang$arity$12) {
                              return f__12848.cljs$lang$arity$12(a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854, j__12856, k__12858, l__12860)
                            }else {
                              return f__12848.call(null, a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854, j__12856, k__12858, l__12860)
                            }
                          }else {
                            var m__12862 = cljs.core._first.call(null, args__12861);
                            var args__12863 = cljs.core._rest.call(null, args__12861);
                            if(argc === 13) {
                              if(f__12848.cljs$lang$arity$13) {
                                return f__12848.cljs$lang$arity$13(a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854, j__12856, k__12858, l__12860, m__12862)
                              }else {
                                return f__12848.call(null, a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854, j__12856, k__12858, l__12860, m__12862)
                              }
                            }else {
                              var n__12864 = cljs.core._first.call(null, args__12863);
                              var args__12865 = cljs.core._rest.call(null, args__12863);
                              if(argc === 14) {
                                if(f__12848.cljs$lang$arity$14) {
                                  return f__12848.cljs$lang$arity$14(a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854, j__12856, k__12858, l__12860, m__12862, n__12864)
                                }else {
                                  return f__12848.call(null, a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854, j__12856, k__12858, l__12860, m__12862, n__12864)
                                }
                              }else {
                                var o__12866 = cljs.core._first.call(null, args__12865);
                                var args__12867 = cljs.core._rest.call(null, args__12865);
                                if(argc === 15) {
                                  if(f__12848.cljs$lang$arity$15) {
                                    return f__12848.cljs$lang$arity$15(a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854, j__12856, k__12858, l__12860, m__12862, n__12864, o__12866)
                                  }else {
                                    return f__12848.call(null, a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854, j__12856, k__12858, l__12860, m__12862, n__12864, o__12866)
                                  }
                                }else {
                                  var p__12868 = cljs.core._first.call(null, args__12867);
                                  var args__12869 = cljs.core._rest.call(null, args__12867);
                                  if(argc === 16) {
                                    if(f__12848.cljs$lang$arity$16) {
                                      return f__12848.cljs$lang$arity$16(a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854, j__12856, k__12858, l__12860, m__12862, n__12864, o__12866, p__12868)
                                    }else {
                                      return f__12848.call(null, a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854, j__12856, k__12858, l__12860, m__12862, n__12864, o__12866, p__12868)
                                    }
                                  }else {
                                    var q__12870 = cljs.core._first.call(null, args__12869);
                                    var args__12871 = cljs.core._rest.call(null, args__12869);
                                    if(argc === 17) {
                                      if(f__12848.cljs$lang$arity$17) {
                                        return f__12848.cljs$lang$arity$17(a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854, j__12856, k__12858, l__12860, m__12862, n__12864, o__12866, p__12868, q__12870)
                                      }else {
                                        return f__12848.call(null, a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854, j__12856, k__12858, l__12860, m__12862, n__12864, o__12866, p__12868, q__12870)
                                      }
                                    }else {
                                      var r__12872 = cljs.core._first.call(null, args__12871);
                                      var args__12873 = cljs.core._rest.call(null, args__12871);
                                      if(argc === 18) {
                                        if(f__12848.cljs$lang$arity$18) {
                                          return f__12848.cljs$lang$arity$18(a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854, j__12856, k__12858, l__12860, m__12862, n__12864, o__12866, p__12868, q__12870, r__12872)
                                        }else {
                                          return f__12848.call(null, a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854, j__12856, k__12858, l__12860, m__12862, n__12864, o__12866, p__12868, q__12870, r__12872)
                                        }
                                      }else {
                                        var s__12874 = cljs.core._first.call(null, args__12873);
                                        var args__12875 = cljs.core._rest.call(null, args__12873);
                                        if(argc === 19) {
                                          if(f__12848.cljs$lang$arity$19) {
                                            return f__12848.cljs$lang$arity$19(a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854, j__12856, k__12858, l__12860, m__12862, n__12864, o__12866, p__12868, q__12870, r__12872, s__12874)
                                          }else {
                                            return f__12848.call(null, a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854, j__12856, k__12858, l__12860, m__12862, n__12864, o__12866, p__12868, q__12870, r__12872, s__12874)
                                          }
                                        }else {
                                          var t__12876 = cljs.core._first.call(null, args__12875);
                                          var args__12877 = cljs.core._rest.call(null, args__12875);
                                          if(argc === 20) {
                                            if(f__12848.cljs$lang$arity$20) {
                                              return f__12848.cljs$lang$arity$20(a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854, j__12856, k__12858, l__12860, m__12862, n__12864, o__12866, p__12868, q__12870, r__12872, s__12874, t__12876)
                                            }else {
                                              return f__12848.call(null, a__12838, b__12840, c__12842, d__12844, e__12846, f__12848, g__12850, h__12852, i__12854, j__12856, k__12858, l__12860, m__12862, n__12864, o__12866, p__12868, q__12870, r__12872, s__12874, t__12876)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__12892 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__12893 = cljs.core.bounded_count.call(null, args, fixed_arity__12892 + 1);
      if(bc__12893 <= fixed_arity__12892) {
        return cljs.core.apply_to.call(null, f, bc__12893, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__12894 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__12895 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__12896 = cljs.core.bounded_count.call(null, arglist__12894, fixed_arity__12895 + 1);
      if(bc__12896 <= fixed_arity__12895) {
        return cljs.core.apply_to.call(null, f, bc__12896, arglist__12894)
      }else {
        return f.cljs$lang$applyTo(arglist__12894)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__12894))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__12897 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__12898 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__12899 = cljs.core.bounded_count.call(null, arglist__12897, fixed_arity__12898 + 1);
      if(bc__12899 <= fixed_arity__12898) {
        return cljs.core.apply_to.call(null, f, bc__12899, arglist__12897)
      }else {
        return f.cljs$lang$applyTo(arglist__12897)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__12897))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__12900 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__12901 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__12902 = cljs.core.bounded_count.call(null, arglist__12900, fixed_arity__12901 + 1);
      if(bc__12902 <= fixed_arity__12901) {
        return cljs.core.apply_to.call(null, f, bc__12902, arglist__12900)
      }else {
        return f.cljs$lang$applyTo(arglist__12900)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__12900))
    }
  };
  var apply__6 = function() {
    var G__12906__delegate = function(f, a, b, c, d, args) {
      var arglist__12903 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__12904 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__12905 = cljs.core.bounded_count.call(null, arglist__12903, fixed_arity__12904 + 1);
        if(bc__12905 <= fixed_arity__12904) {
          return cljs.core.apply_to.call(null, f, bc__12905, arglist__12903)
        }else {
          return f.cljs$lang$applyTo(arglist__12903)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__12903))
      }
    };
    var G__12906 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__12906__delegate.call(this, f, a, b, c, d, args)
    };
    G__12906.cljs$lang$maxFixedArity = 5;
    G__12906.cljs$lang$applyTo = function(arglist__12907) {
      var f = cljs.core.first(arglist__12907);
      var a = cljs.core.first(cljs.core.next(arglist__12907));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12907)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12907))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12907)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12907)))));
      return G__12906__delegate(f, a, b, c, d, args)
    };
    G__12906.cljs$lang$arity$variadic = G__12906__delegate;
    return G__12906
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__12908) {
    var obj = cljs.core.first(arglist__12908);
    var f = cljs.core.first(cljs.core.next(arglist__12908));
    var args = cljs.core.rest(cljs.core.next(arglist__12908));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__12909__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__12909 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12909__delegate.call(this, x, y, more)
    };
    G__12909.cljs$lang$maxFixedArity = 2;
    G__12909.cljs$lang$applyTo = function(arglist__12910) {
      var x = cljs.core.first(arglist__12910);
      var y = cljs.core.first(cljs.core.next(arglist__12910));
      var more = cljs.core.rest(cljs.core.next(arglist__12910));
      return G__12909__delegate(x, y, more)
    };
    G__12909.cljs$lang$arity$variadic = G__12909__delegate;
    return G__12909
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__12911 = pred;
        var G__12912 = cljs.core.next.call(null, coll);
        pred = G__12911;
        coll = G__12912;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____12914 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____12914)) {
        return or__3824__auto____12914
      }else {
        var G__12915 = pred;
        var G__12916 = cljs.core.next.call(null, coll);
        pred = G__12915;
        coll = G__12916;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__12917 = null;
    var G__12917__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__12917__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__12917__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__12917__3 = function() {
      var G__12918__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__12918 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__12918__delegate.call(this, x, y, zs)
      };
      G__12918.cljs$lang$maxFixedArity = 2;
      G__12918.cljs$lang$applyTo = function(arglist__12919) {
        var x = cljs.core.first(arglist__12919);
        var y = cljs.core.first(cljs.core.next(arglist__12919));
        var zs = cljs.core.rest(cljs.core.next(arglist__12919));
        return G__12918__delegate(x, y, zs)
      };
      G__12918.cljs$lang$arity$variadic = G__12918__delegate;
      return G__12918
    }();
    G__12917 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__12917__0.call(this);
        case 1:
          return G__12917__1.call(this, x);
        case 2:
          return G__12917__2.call(this, x, y);
        default:
          return G__12917__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__12917.cljs$lang$maxFixedArity = 2;
    G__12917.cljs$lang$applyTo = G__12917__3.cljs$lang$applyTo;
    return G__12917
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__12920__delegate = function(args) {
      return x
    };
    var G__12920 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__12920__delegate.call(this, args)
    };
    G__12920.cljs$lang$maxFixedArity = 0;
    G__12920.cljs$lang$applyTo = function(arglist__12921) {
      var args = cljs.core.seq(arglist__12921);
      return G__12920__delegate(args)
    };
    G__12920.cljs$lang$arity$variadic = G__12920__delegate;
    return G__12920
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__12928 = null;
      var G__12928__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__12928__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__12928__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__12928__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__12928__4 = function() {
        var G__12929__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__12929 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12929__delegate.call(this, x, y, z, args)
        };
        G__12929.cljs$lang$maxFixedArity = 3;
        G__12929.cljs$lang$applyTo = function(arglist__12930) {
          var x = cljs.core.first(arglist__12930);
          var y = cljs.core.first(cljs.core.next(arglist__12930));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12930)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12930)));
          return G__12929__delegate(x, y, z, args)
        };
        G__12929.cljs$lang$arity$variadic = G__12929__delegate;
        return G__12929
      }();
      G__12928 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12928__0.call(this);
          case 1:
            return G__12928__1.call(this, x);
          case 2:
            return G__12928__2.call(this, x, y);
          case 3:
            return G__12928__3.call(this, x, y, z);
          default:
            return G__12928__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__12928.cljs$lang$maxFixedArity = 3;
      G__12928.cljs$lang$applyTo = G__12928__4.cljs$lang$applyTo;
      return G__12928
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__12931 = null;
      var G__12931__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__12931__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__12931__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__12931__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__12931__4 = function() {
        var G__12932__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__12932 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12932__delegate.call(this, x, y, z, args)
        };
        G__12932.cljs$lang$maxFixedArity = 3;
        G__12932.cljs$lang$applyTo = function(arglist__12933) {
          var x = cljs.core.first(arglist__12933);
          var y = cljs.core.first(cljs.core.next(arglist__12933));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12933)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12933)));
          return G__12932__delegate(x, y, z, args)
        };
        G__12932.cljs$lang$arity$variadic = G__12932__delegate;
        return G__12932
      }();
      G__12931 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12931__0.call(this);
          case 1:
            return G__12931__1.call(this, x);
          case 2:
            return G__12931__2.call(this, x, y);
          case 3:
            return G__12931__3.call(this, x, y, z);
          default:
            return G__12931__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__12931.cljs$lang$maxFixedArity = 3;
      G__12931.cljs$lang$applyTo = G__12931__4.cljs$lang$applyTo;
      return G__12931
    }()
  };
  var comp__4 = function() {
    var G__12934__delegate = function(f1, f2, f3, fs) {
      var fs__12925 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__12935__delegate = function(args) {
          var ret__12926 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__12925), args);
          var fs__12927 = cljs.core.next.call(null, fs__12925);
          while(true) {
            if(fs__12927) {
              var G__12936 = cljs.core.first.call(null, fs__12927).call(null, ret__12926);
              var G__12937 = cljs.core.next.call(null, fs__12927);
              ret__12926 = G__12936;
              fs__12927 = G__12937;
              continue
            }else {
              return ret__12926
            }
            break
          }
        };
        var G__12935 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__12935__delegate.call(this, args)
        };
        G__12935.cljs$lang$maxFixedArity = 0;
        G__12935.cljs$lang$applyTo = function(arglist__12938) {
          var args = cljs.core.seq(arglist__12938);
          return G__12935__delegate(args)
        };
        G__12935.cljs$lang$arity$variadic = G__12935__delegate;
        return G__12935
      }()
    };
    var G__12934 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12934__delegate.call(this, f1, f2, f3, fs)
    };
    G__12934.cljs$lang$maxFixedArity = 3;
    G__12934.cljs$lang$applyTo = function(arglist__12939) {
      var f1 = cljs.core.first(arglist__12939);
      var f2 = cljs.core.first(cljs.core.next(arglist__12939));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12939)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12939)));
      return G__12934__delegate(f1, f2, f3, fs)
    };
    G__12934.cljs$lang$arity$variadic = G__12934__delegate;
    return G__12934
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__12940__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__12940 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__12940__delegate.call(this, args)
      };
      G__12940.cljs$lang$maxFixedArity = 0;
      G__12940.cljs$lang$applyTo = function(arglist__12941) {
        var args = cljs.core.seq(arglist__12941);
        return G__12940__delegate(args)
      };
      G__12940.cljs$lang$arity$variadic = G__12940__delegate;
      return G__12940
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__12942__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__12942 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__12942__delegate.call(this, args)
      };
      G__12942.cljs$lang$maxFixedArity = 0;
      G__12942.cljs$lang$applyTo = function(arglist__12943) {
        var args = cljs.core.seq(arglist__12943);
        return G__12942__delegate(args)
      };
      G__12942.cljs$lang$arity$variadic = G__12942__delegate;
      return G__12942
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__12944__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__12944 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__12944__delegate.call(this, args)
      };
      G__12944.cljs$lang$maxFixedArity = 0;
      G__12944.cljs$lang$applyTo = function(arglist__12945) {
        var args = cljs.core.seq(arglist__12945);
        return G__12944__delegate(args)
      };
      G__12944.cljs$lang$arity$variadic = G__12944__delegate;
      return G__12944
    }()
  };
  var partial__5 = function() {
    var G__12946__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__12947__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__12947 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__12947__delegate.call(this, args)
        };
        G__12947.cljs$lang$maxFixedArity = 0;
        G__12947.cljs$lang$applyTo = function(arglist__12948) {
          var args = cljs.core.seq(arglist__12948);
          return G__12947__delegate(args)
        };
        G__12947.cljs$lang$arity$variadic = G__12947__delegate;
        return G__12947
      }()
    };
    var G__12946 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__12946__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__12946.cljs$lang$maxFixedArity = 4;
    G__12946.cljs$lang$applyTo = function(arglist__12949) {
      var f = cljs.core.first(arglist__12949);
      var arg1 = cljs.core.first(cljs.core.next(arglist__12949));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12949)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12949))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12949))));
      return G__12946__delegate(f, arg1, arg2, arg3, more)
    };
    G__12946.cljs$lang$arity$variadic = G__12946__delegate;
    return G__12946
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__12950 = null;
      var G__12950__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__12950__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__12950__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__12950__4 = function() {
        var G__12951__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__12951 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12951__delegate.call(this, a, b, c, ds)
        };
        G__12951.cljs$lang$maxFixedArity = 3;
        G__12951.cljs$lang$applyTo = function(arglist__12952) {
          var a = cljs.core.first(arglist__12952);
          var b = cljs.core.first(cljs.core.next(arglist__12952));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12952)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12952)));
          return G__12951__delegate(a, b, c, ds)
        };
        G__12951.cljs$lang$arity$variadic = G__12951__delegate;
        return G__12951
      }();
      G__12950 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__12950__1.call(this, a);
          case 2:
            return G__12950__2.call(this, a, b);
          case 3:
            return G__12950__3.call(this, a, b, c);
          default:
            return G__12950__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__12950.cljs$lang$maxFixedArity = 3;
      G__12950.cljs$lang$applyTo = G__12950__4.cljs$lang$applyTo;
      return G__12950
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__12953 = null;
      var G__12953__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__12953__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__12953__4 = function() {
        var G__12954__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__12954 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12954__delegate.call(this, a, b, c, ds)
        };
        G__12954.cljs$lang$maxFixedArity = 3;
        G__12954.cljs$lang$applyTo = function(arglist__12955) {
          var a = cljs.core.first(arglist__12955);
          var b = cljs.core.first(cljs.core.next(arglist__12955));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12955)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12955)));
          return G__12954__delegate(a, b, c, ds)
        };
        G__12954.cljs$lang$arity$variadic = G__12954__delegate;
        return G__12954
      }();
      G__12953 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__12953__2.call(this, a, b);
          case 3:
            return G__12953__3.call(this, a, b, c);
          default:
            return G__12953__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__12953.cljs$lang$maxFixedArity = 3;
      G__12953.cljs$lang$applyTo = G__12953__4.cljs$lang$applyTo;
      return G__12953
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__12956 = null;
      var G__12956__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__12956__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__12956__4 = function() {
        var G__12957__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__12957 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12957__delegate.call(this, a, b, c, ds)
        };
        G__12957.cljs$lang$maxFixedArity = 3;
        G__12957.cljs$lang$applyTo = function(arglist__12958) {
          var a = cljs.core.first(arglist__12958);
          var b = cljs.core.first(cljs.core.next(arglist__12958));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12958)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12958)));
          return G__12957__delegate(a, b, c, ds)
        };
        G__12957.cljs$lang$arity$variadic = G__12957__delegate;
        return G__12957
      }();
      G__12956 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__12956__2.call(this, a, b);
          case 3:
            return G__12956__3.call(this, a, b, c);
          default:
            return G__12956__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__12956.cljs$lang$maxFixedArity = 3;
      G__12956.cljs$lang$applyTo = G__12956__4.cljs$lang$applyTo;
      return G__12956
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__12974 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____12982 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____12982) {
        var s__12983 = temp__3974__auto____12982;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__12983)) {
          var c__12984 = cljs.core.chunk_first.call(null, s__12983);
          var size__12985 = cljs.core.count.call(null, c__12984);
          var b__12986 = cljs.core.chunk_buffer.call(null, size__12985);
          var n__2428__auto____12987 = size__12985;
          var i__12988 = 0;
          while(true) {
            if(i__12988 < n__2428__auto____12987) {
              cljs.core.chunk_append.call(null, b__12986, f.call(null, idx + i__12988, cljs.core._nth.call(null, c__12984, i__12988)));
              var G__12989 = i__12988 + 1;
              i__12988 = G__12989;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12986), mapi.call(null, idx + size__12985, cljs.core.chunk_rest.call(null, s__12983)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__12983)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__12983)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__12974.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____12999 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____12999) {
      var s__13000 = temp__3974__auto____12999;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__13000)) {
        var c__13001 = cljs.core.chunk_first.call(null, s__13000);
        var size__13002 = cljs.core.count.call(null, c__13001);
        var b__13003 = cljs.core.chunk_buffer.call(null, size__13002);
        var n__2428__auto____13004 = size__13002;
        var i__13005 = 0;
        while(true) {
          if(i__13005 < n__2428__auto____13004) {
            var x__13006 = f.call(null, cljs.core._nth.call(null, c__13001, i__13005));
            if(x__13006 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__13003, x__13006)
            }
            var G__13008 = i__13005 + 1;
            i__13005 = G__13008;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13003), keep.call(null, f, cljs.core.chunk_rest.call(null, s__13000)))
      }else {
        var x__13007 = f.call(null, cljs.core.first.call(null, s__13000));
        if(x__13007 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__13000))
        }else {
          return cljs.core.cons.call(null, x__13007, keep.call(null, f, cljs.core.rest.call(null, s__13000)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__13034 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____13044 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____13044) {
        var s__13045 = temp__3974__auto____13044;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__13045)) {
          var c__13046 = cljs.core.chunk_first.call(null, s__13045);
          var size__13047 = cljs.core.count.call(null, c__13046);
          var b__13048 = cljs.core.chunk_buffer.call(null, size__13047);
          var n__2428__auto____13049 = size__13047;
          var i__13050 = 0;
          while(true) {
            if(i__13050 < n__2428__auto____13049) {
              var x__13051 = f.call(null, idx + i__13050, cljs.core._nth.call(null, c__13046, i__13050));
              if(x__13051 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__13048, x__13051)
              }
              var G__13053 = i__13050 + 1;
              i__13050 = G__13053;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13048), keepi.call(null, idx + size__13047, cljs.core.chunk_rest.call(null, s__13045)))
        }else {
          var x__13052 = f.call(null, idx, cljs.core.first.call(null, s__13045));
          if(x__13052 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__13045))
          }else {
            return cljs.core.cons.call(null, x__13052, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__13045)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__13034.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13139 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13139)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____13139
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13140 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13140)) {
            var and__3822__auto____13141 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____13141)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____13141
            }
          }else {
            return and__3822__auto____13140
          }
        }())
      };
      var ep1__4 = function() {
        var G__13210__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____13142 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____13142)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____13142
            }
          }())
        };
        var G__13210 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13210__delegate.call(this, x, y, z, args)
        };
        G__13210.cljs$lang$maxFixedArity = 3;
        G__13210.cljs$lang$applyTo = function(arglist__13211) {
          var x = cljs.core.first(arglist__13211);
          var y = cljs.core.first(cljs.core.next(arglist__13211));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13211)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13211)));
          return G__13210__delegate(x, y, z, args)
        };
        G__13210.cljs$lang$arity$variadic = G__13210__delegate;
        return G__13210
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13154 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13154)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____13154
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13155 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13155)) {
            var and__3822__auto____13156 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____13156)) {
              var and__3822__auto____13157 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____13157)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____13157
              }
            }else {
              return and__3822__auto____13156
            }
          }else {
            return and__3822__auto____13155
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13158 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13158)) {
            var and__3822__auto____13159 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____13159)) {
              var and__3822__auto____13160 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____13160)) {
                var and__3822__auto____13161 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____13161)) {
                  var and__3822__auto____13162 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____13162)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____13162
                  }
                }else {
                  return and__3822__auto____13161
                }
              }else {
                return and__3822__auto____13160
              }
            }else {
              return and__3822__auto____13159
            }
          }else {
            return and__3822__auto____13158
          }
        }())
      };
      var ep2__4 = function() {
        var G__13212__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____13163 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____13163)) {
              return cljs.core.every_QMARK_.call(null, function(p1__13009_SHARP_) {
                var and__3822__auto____13164 = p1.call(null, p1__13009_SHARP_);
                if(cljs.core.truth_(and__3822__auto____13164)) {
                  return p2.call(null, p1__13009_SHARP_)
                }else {
                  return and__3822__auto____13164
                }
              }, args)
            }else {
              return and__3822__auto____13163
            }
          }())
        };
        var G__13212 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13212__delegate.call(this, x, y, z, args)
        };
        G__13212.cljs$lang$maxFixedArity = 3;
        G__13212.cljs$lang$applyTo = function(arglist__13213) {
          var x = cljs.core.first(arglist__13213);
          var y = cljs.core.first(cljs.core.next(arglist__13213));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13213)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13213)));
          return G__13212__delegate(x, y, z, args)
        };
        G__13212.cljs$lang$arity$variadic = G__13212__delegate;
        return G__13212
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13183 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13183)) {
            var and__3822__auto____13184 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____13184)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____13184
            }
          }else {
            return and__3822__auto____13183
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13185 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13185)) {
            var and__3822__auto____13186 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____13186)) {
              var and__3822__auto____13187 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____13187)) {
                var and__3822__auto____13188 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____13188)) {
                  var and__3822__auto____13189 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____13189)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____13189
                  }
                }else {
                  return and__3822__auto____13188
                }
              }else {
                return and__3822__auto____13187
              }
            }else {
              return and__3822__auto____13186
            }
          }else {
            return and__3822__auto____13185
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13190 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13190)) {
            var and__3822__auto____13191 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____13191)) {
              var and__3822__auto____13192 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____13192)) {
                var and__3822__auto____13193 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____13193)) {
                  var and__3822__auto____13194 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____13194)) {
                    var and__3822__auto____13195 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____13195)) {
                      var and__3822__auto____13196 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____13196)) {
                        var and__3822__auto____13197 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____13197)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____13197
                        }
                      }else {
                        return and__3822__auto____13196
                      }
                    }else {
                      return and__3822__auto____13195
                    }
                  }else {
                    return and__3822__auto____13194
                  }
                }else {
                  return and__3822__auto____13193
                }
              }else {
                return and__3822__auto____13192
              }
            }else {
              return and__3822__auto____13191
            }
          }else {
            return and__3822__auto____13190
          }
        }())
      };
      var ep3__4 = function() {
        var G__13214__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____13198 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____13198)) {
              return cljs.core.every_QMARK_.call(null, function(p1__13010_SHARP_) {
                var and__3822__auto____13199 = p1.call(null, p1__13010_SHARP_);
                if(cljs.core.truth_(and__3822__auto____13199)) {
                  var and__3822__auto____13200 = p2.call(null, p1__13010_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____13200)) {
                    return p3.call(null, p1__13010_SHARP_)
                  }else {
                    return and__3822__auto____13200
                  }
                }else {
                  return and__3822__auto____13199
                }
              }, args)
            }else {
              return and__3822__auto____13198
            }
          }())
        };
        var G__13214 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13214__delegate.call(this, x, y, z, args)
        };
        G__13214.cljs$lang$maxFixedArity = 3;
        G__13214.cljs$lang$applyTo = function(arglist__13215) {
          var x = cljs.core.first(arglist__13215);
          var y = cljs.core.first(cljs.core.next(arglist__13215));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13215)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13215)));
          return G__13214__delegate(x, y, z, args)
        };
        G__13214.cljs$lang$arity$variadic = G__13214__delegate;
        return G__13214
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__13216__delegate = function(p1, p2, p3, ps) {
      var ps__13201 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__13011_SHARP_) {
            return p1__13011_SHARP_.call(null, x)
          }, ps__13201)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__13012_SHARP_) {
            var and__3822__auto____13206 = p1__13012_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____13206)) {
              return p1__13012_SHARP_.call(null, y)
            }else {
              return and__3822__auto____13206
            }
          }, ps__13201)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__13013_SHARP_) {
            var and__3822__auto____13207 = p1__13013_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____13207)) {
              var and__3822__auto____13208 = p1__13013_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____13208)) {
                return p1__13013_SHARP_.call(null, z)
              }else {
                return and__3822__auto____13208
              }
            }else {
              return and__3822__auto____13207
            }
          }, ps__13201)
        };
        var epn__4 = function() {
          var G__13217__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____13209 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____13209)) {
                return cljs.core.every_QMARK_.call(null, function(p1__13014_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__13014_SHARP_, args)
                }, ps__13201)
              }else {
                return and__3822__auto____13209
              }
            }())
          };
          var G__13217 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__13217__delegate.call(this, x, y, z, args)
          };
          G__13217.cljs$lang$maxFixedArity = 3;
          G__13217.cljs$lang$applyTo = function(arglist__13218) {
            var x = cljs.core.first(arglist__13218);
            var y = cljs.core.first(cljs.core.next(arglist__13218));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13218)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13218)));
            return G__13217__delegate(x, y, z, args)
          };
          G__13217.cljs$lang$arity$variadic = G__13217__delegate;
          return G__13217
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__13216 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13216__delegate.call(this, p1, p2, p3, ps)
    };
    G__13216.cljs$lang$maxFixedArity = 3;
    G__13216.cljs$lang$applyTo = function(arglist__13219) {
      var p1 = cljs.core.first(arglist__13219);
      var p2 = cljs.core.first(cljs.core.next(arglist__13219));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13219)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13219)));
      return G__13216__delegate(p1, p2, p3, ps)
    };
    G__13216.cljs$lang$arity$variadic = G__13216__delegate;
    return G__13216
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____13300 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13300)) {
          return or__3824__auto____13300
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____13301 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13301)) {
          return or__3824__auto____13301
        }else {
          var or__3824__auto____13302 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____13302)) {
            return or__3824__auto____13302
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__13371__delegate = function(x, y, z, args) {
          var or__3824__auto____13303 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____13303)) {
            return or__3824__auto____13303
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__13371 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13371__delegate.call(this, x, y, z, args)
        };
        G__13371.cljs$lang$maxFixedArity = 3;
        G__13371.cljs$lang$applyTo = function(arglist__13372) {
          var x = cljs.core.first(arglist__13372);
          var y = cljs.core.first(cljs.core.next(arglist__13372));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13372)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13372)));
          return G__13371__delegate(x, y, z, args)
        };
        G__13371.cljs$lang$arity$variadic = G__13371__delegate;
        return G__13371
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____13315 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13315)) {
          return or__3824__auto____13315
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____13316 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13316)) {
          return or__3824__auto____13316
        }else {
          var or__3824__auto____13317 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____13317)) {
            return or__3824__auto____13317
          }else {
            var or__3824__auto____13318 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____13318)) {
              return or__3824__auto____13318
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____13319 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13319)) {
          return or__3824__auto____13319
        }else {
          var or__3824__auto____13320 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____13320)) {
            return or__3824__auto____13320
          }else {
            var or__3824__auto____13321 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____13321)) {
              return or__3824__auto____13321
            }else {
              var or__3824__auto____13322 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____13322)) {
                return or__3824__auto____13322
              }else {
                var or__3824__auto____13323 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____13323)) {
                  return or__3824__auto____13323
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__13373__delegate = function(x, y, z, args) {
          var or__3824__auto____13324 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____13324)) {
            return or__3824__auto____13324
          }else {
            return cljs.core.some.call(null, function(p1__13054_SHARP_) {
              var or__3824__auto____13325 = p1.call(null, p1__13054_SHARP_);
              if(cljs.core.truth_(or__3824__auto____13325)) {
                return or__3824__auto____13325
              }else {
                return p2.call(null, p1__13054_SHARP_)
              }
            }, args)
          }
        };
        var G__13373 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13373__delegate.call(this, x, y, z, args)
        };
        G__13373.cljs$lang$maxFixedArity = 3;
        G__13373.cljs$lang$applyTo = function(arglist__13374) {
          var x = cljs.core.first(arglist__13374);
          var y = cljs.core.first(cljs.core.next(arglist__13374));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13374)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13374)));
          return G__13373__delegate(x, y, z, args)
        };
        G__13373.cljs$lang$arity$variadic = G__13373__delegate;
        return G__13373
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____13344 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13344)) {
          return or__3824__auto____13344
        }else {
          var or__3824__auto____13345 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____13345)) {
            return or__3824__auto____13345
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____13346 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13346)) {
          return or__3824__auto____13346
        }else {
          var or__3824__auto____13347 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____13347)) {
            return or__3824__auto____13347
          }else {
            var or__3824__auto____13348 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____13348)) {
              return or__3824__auto____13348
            }else {
              var or__3824__auto____13349 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____13349)) {
                return or__3824__auto____13349
              }else {
                var or__3824__auto____13350 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____13350)) {
                  return or__3824__auto____13350
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____13351 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13351)) {
          return or__3824__auto____13351
        }else {
          var or__3824__auto____13352 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____13352)) {
            return or__3824__auto____13352
          }else {
            var or__3824__auto____13353 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____13353)) {
              return or__3824__auto____13353
            }else {
              var or__3824__auto____13354 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____13354)) {
                return or__3824__auto____13354
              }else {
                var or__3824__auto____13355 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____13355)) {
                  return or__3824__auto____13355
                }else {
                  var or__3824__auto____13356 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____13356)) {
                    return or__3824__auto____13356
                  }else {
                    var or__3824__auto____13357 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____13357)) {
                      return or__3824__auto____13357
                    }else {
                      var or__3824__auto____13358 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____13358)) {
                        return or__3824__auto____13358
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__13375__delegate = function(x, y, z, args) {
          var or__3824__auto____13359 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____13359)) {
            return or__3824__auto____13359
          }else {
            return cljs.core.some.call(null, function(p1__13055_SHARP_) {
              var or__3824__auto____13360 = p1.call(null, p1__13055_SHARP_);
              if(cljs.core.truth_(or__3824__auto____13360)) {
                return or__3824__auto____13360
              }else {
                var or__3824__auto____13361 = p2.call(null, p1__13055_SHARP_);
                if(cljs.core.truth_(or__3824__auto____13361)) {
                  return or__3824__auto____13361
                }else {
                  return p3.call(null, p1__13055_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__13375 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13375__delegate.call(this, x, y, z, args)
        };
        G__13375.cljs$lang$maxFixedArity = 3;
        G__13375.cljs$lang$applyTo = function(arglist__13376) {
          var x = cljs.core.first(arglist__13376);
          var y = cljs.core.first(cljs.core.next(arglist__13376));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13376)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13376)));
          return G__13375__delegate(x, y, z, args)
        };
        G__13375.cljs$lang$arity$variadic = G__13375__delegate;
        return G__13375
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__13377__delegate = function(p1, p2, p3, ps) {
      var ps__13362 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__13056_SHARP_) {
            return p1__13056_SHARP_.call(null, x)
          }, ps__13362)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__13057_SHARP_) {
            var or__3824__auto____13367 = p1__13057_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____13367)) {
              return or__3824__auto____13367
            }else {
              return p1__13057_SHARP_.call(null, y)
            }
          }, ps__13362)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__13058_SHARP_) {
            var or__3824__auto____13368 = p1__13058_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____13368)) {
              return or__3824__auto____13368
            }else {
              var or__3824__auto____13369 = p1__13058_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____13369)) {
                return or__3824__auto____13369
              }else {
                return p1__13058_SHARP_.call(null, z)
              }
            }
          }, ps__13362)
        };
        var spn__4 = function() {
          var G__13378__delegate = function(x, y, z, args) {
            var or__3824__auto____13370 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____13370)) {
              return or__3824__auto____13370
            }else {
              return cljs.core.some.call(null, function(p1__13059_SHARP_) {
                return cljs.core.some.call(null, p1__13059_SHARP_, args)
              }, ps__13362)
            }
          };
          var G__13378 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__13378__delegate.call(this, x, y, z, args)
          };
          G__13378.cljs$lang$maxFixedArity = 3;
          G__13378.cljs$lang$applyTo = function(arglist__13379) {
            var x = cljs.core.first(arglist__13379);
            var y = cljs.core.first(cljs.core.next(arglist__13379));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13379)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13379)));
            return G__13378__delegate(x, y, z, args)
          };
          G__13378.cljs$lang$arity$variadic = G__13378__delegate;
          return G__13378
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__13377 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13377__delegate.call(this, p1, p2, p3, ps)
    };
    G__13377.cljs$lang$maxFixedArity = 3;
    G__13377.cljs$lang$applyTo = function(arglist__13380) {
      var p1 = cljs.core.first(arglist__13380);
      var p2 = cljs.core.first(cljs.core.next(arglist__13380));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13380)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13380)));
      return G__13377__delegate(p1, p2, p3, ps)
    };
    G__13377.cljs$lang$arity$variadic = G__13377__delegate;
    return G__13377
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____13399 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____13399) {
        var s__13400 = temp__3974__auto____13399;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__13400)) {
          var c__13401 = cljs.core.chunk_first.call(null, s__13400);
          var size__13402 = cljs.core.count.call(null, c__13401);
          var b__13403 = cljs.core.chunk_buffer.call(null, size__13402);
          var n__2428__auto____13404 = size__13402;
          var i__13405 = 0;
          while(true) {
            if(i__13405 < n__2428__auto____13404) {
              cljs.core.chunk_append.call(null, b__13403, f.call(null, cljs.core._nth.call(null, c__13401, i__13405)));
              var G__13417 = i__13405 + 1;
              i__13405 = G__13417;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13403), map.call(null, f, cljs.core.chunk_rest.call(null, s__13400)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__13400)), map.call(null, f, cljs.core.rest.call(null, s__13400)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__13406 = cljs.core.seq.call(null, c1);
      var s2__13407 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____13408 = s1__13406;
        if(and__3822__auto____13408) {
          return s2__13407
        }else {
          return and__3822__auto____13408
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__13406), cljs.core.first.call(null, s2__13407)), map.call(null, f, cljs.core.rest.call(null, s1__13406), cljs.core.rest.call(null, s2__13407)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__13409 = cljs.core.seq.call(null, c1);
      var s2__13410 = cljs.core.seq.call(null, c2);
      var s3__13411 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____13412 = s1__13409;
        if(and__3822__auto____13412) {
          var and__3822__auto____13413 = s2__13410;
          if(and__3822__auto____13413) {
            return s3__13411
          }else {
            return and__3822__auto____13413
          }
        }else {
          return and__3822__auto____13412
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__13409), cljs.core.first.call(null, s2__13410), cljs.core.first.call(null, s3__13411)), map.call(null, f, cljs.core.rest.call(null, s1__13409), cljs.core.rest.call(null, s2__13410), cljs.core.rest.call(null, s3__13411)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__13418__delegate = function(f, c1, c2, c3, colls) {
      var step__13416 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__13415 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__13415)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__13415), step.call(null, map.call(null, cljs.core.rest, ss__13415)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__13220_SHARP_) {
        return cljs.core.apply.call(null, f, p1__13220_SHARP_)
      }, step__13416.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__13418 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__13418__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__13418.cljs$lang$maxFixedArity = 4;
    G__13418.cljs$lang$applyTo = function(arglist__13419) {
      var f = cljs.core.first(arglist__13419);
      var c1 = cljs.core.first(cljs.core.next(arglist__13419));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13419)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13419))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13419))));
      return G__13418__delegate(f, c1, c2, c3, colls)
    };
    G__13418.cljs$lang$arity$variadic = G__13418__delegate;
    return G__13418
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____13422 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____13422) {
        var s__13423 = temp__3974__auto____13422;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__13423), take.call(null, n - 1, cljs.core.rest.call(null, s__13423)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__13429 = function(n, coll) {
    while(true) {
      var s__13427 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____13428 = n > 0;
        if(and__3822__auto____13428) {
          return s__13427
        }else {
          return and__3822__auto____13428
        }
      }())) {
        var G__13430 = n - 1;
        var G__13431 = cljs.core.rest.call(null, s__13427);
        n = G__13430;
        coll = G__13431;
        continue
      }else {
        return s__13427
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__13429.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__13434 = cljs.core.seq.call(null, coll);
  var lead__13435 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__13435) {
      var G__13436 = cljs.core.next.call(null, s__13434);
      var G__13437 = cljs.core.next.call(null, lead__13435);
      s__13434 = G__13436;
      lead__13435 = G__13437;
      continue
    }else {
      return s__13434
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__13443 = function(pred, coll) {
    while(true) {
      var s__13441 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____13442 = s__13441;
        if(and__3822__auto____13442) {
          return pred.call(null, cljs.core.first.call(null, s__13441))
        }else {
          return and__3822__auto____13442
        }
      }())) {
        var G__13444 = pred;
        var G__13445 = cljs.core.rest.call(null, s__13441);
        pred = G__13444;
        coll = G__13445;
        continue
      }else {
        return s__13441
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__13443.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____13448 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____13448) {
      var s__13449 = temp__3974__auto____13448;
      return cljs.core.concat.call(null, s__13449, cycle.call(null, s__13449))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__13454 = cljs.core.seq.call(null, c1);
      var s2__13455 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____13456 = s1__13454;
        if(and__3822__auto____13456) {
          return s2__13455
        }else {
          return and__3822__auto____13456
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__13454), cljs.core.cons.call(null, cljs.core.first.call(null, s2__13455), interleave.call(null, cljs.core.rest.call(null, s1__13454), cljs.core.rest.call(null, s2__13455))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__13458__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__13457 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__13457)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__13457), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__13457)))
        }else {
          return null
        }
      }, null)
    };
    var G__13458 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13458__delegate.call(this, c1, c2, colls)
    };
    G__13458.cljs$lang$maxFixedArity = 2;
    G__13458.cljs$lang$applyTo = function(arglist__13459) {
      var c1 = cljs.core.first(arglist__13459);
      var c2 = cljs.core.first(cljs.core.next(arglist__13459));
      var colls = cljs.core.rest(cljs.core.next(arglist__13459));
      return G__13458__delegate(c1, c2, colls)
    };
    G__13458.cljs$lang$arity$variadic = G__13458__delegate;
    return G__13458
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__13469 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____13467 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____13467) {
        var coll__13468 = temp__3971__auto____13467;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__13468), cat.call(null, cljs.core.rest.call(null, coll__13468), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__13469.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__13470__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__13470 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13470__delegate.call(this, f, coll, colls)
    };
    G__13470.cljs$lang$maxFixedArity = 2;
    G__13470.cljs$lang$applyTo = function(arglist__13471) {
      var f = cljs.core.first(arglist__13471);
      var coll = cljs.core.first(cljs.core.next(arglist__13471));
      var colls = cljs.core.rest(cljs.core.next(arglist__13471));
      return G__13470__delegate(f, coll, colls)
    };
    G__13470.cljs$lang$arity$variadic = G__13470__delegate;
    return G__13470
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____13481 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____13481) {
      var s__13482 = temp__3974__auto____13481;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__13482)) {
        var c__13483 = cljs.core.chunk_first.call(null, s__13482);
        var size__13484 = cljs.core.count.call(null, c__13483);
        var b__13485 = cljs.core.chunk_buffer.call(null, size__13484);
        var n__2428__auto____13486 = size__13484;
        var i__13487 = 0;
        while(true) {
          if(i__13487 < n__2428__auto____13486) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__13483, i__13487)))) {
              cljs.core.chunk_append.call(null, b__13485, cljs.core._nth.call(null, c__13483, i__13487))
            }else {
            }
            var G__13490 = i__13487 + 1;
            i__13487 = G__13490;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13485), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__13482)))
      }else {
        var f__13488 = cljs.core.first.call(null, s__13482);
        var r__13489 = cljs.core.rest.call(null, s__13482);
        if(cljs.core.truth_(pred.call(null, f__13488))) {
          return cljs.core.cons.call(null, f__13488, filter.call(null, pred, r__13489))
        }else {
          return filter.call(null, pred, r__13489)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__13493 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__13493.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__13491_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__13491_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__13497__13498 = to;
    if(G__13497__13498) {
      if(function() {
        var or__3824__auto____13499 = G__13497__13498.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____13499) {
          return or__3824__auto____13499
        }else {
          return G__13497__13498.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__13497__13498.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__13497__13498)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__13497__13498)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__13500__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__13500 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__13500__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__13500.cljs$lang$maxFixedArity = 4;
    G__13500.cljs$lang$applyTo = function(arglist__13501) {
      var f = cljs.core.first(arglist__13501);
      var c1 = cljs.core.first(cljs.core.next(arglist__13501));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13501)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13501))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13501))));
      return G__13500__delegate(f, c1, c2, c3, colls)
    };
    G__13500.cljs$lang$arity$variadic = G__13500__delegate;
    return G__13500
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____13508 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____13508) {
        var s__13509 = temp__3974__auto____13508;
        var p__13510 = cljs.core.take.call(null, n, s__13509);
        if(n === cljs.core.count.call(null, p__13510)) {
          return cljs.core.cons.call(null, p__13510, partition.call(null, n, step, cljs.core.drop.call(null, step, s__13509)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____13511 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____13511) {
        var s__13512 = temp__3974__auto____13511;
        var p__13513 = cljs.core.take.call(null, n, s__13512);
        if(n === cljs.core.count.call(null, p__13513)) {
          return cljs.core.cons.call(null, p__13513, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__13512)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__13513, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__13518 = cljs.core.lookup_sentinel;
    var m__13519 = m;
    var ks__13520 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__13520) {
        var m__13521 = cljs.core._lookup.call(null, m__13519, cljs.core.first.call(null, ks__13520), sentinel__13518);
        if(sentinel__13518 === m__13521) {
          return not_found
        }else {
          var G__13522 = sentinel__13518;
          var G__13523 = m__13521;
          var G__13524 = cljs.core.next.call(null, ks__13520);
          sentinel__13518 = G__13522;
          m__13519 = G__13523;
          ks__13520 = G__13524;
          continue
        }
      }else {
        return m__13519
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__13525, v) {
  var vec__13530__13531 = p__13525;
  var k__13532 = cljs.core.nth.call(null, vec__13530__13531, 0, null);
  var ks__13533 = cljs.core.nthnext.call(null, vec__13530__13531, 1);
  if(cljs.core.truth_(ks__13533)) {
    return cljs.core.assoc.call(null, m, k__13532, assoc_in.call(null, cljs.core._lookup.call(null, m, k__13532, null), ks__13533, v))
  }else {
    return cljs.core.assoc.call(null, m, k__13532, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__13534, f, args) {
    var vec__13539__13540 = p__13534;
    var k__13541 = cljs.core.nth.call(null, vec__13539__13540, 0, null);
    var ks__13542 = cljs.core.nthnext.call(null, vec__13539__13540, 1);
    if(cljs.core.truth_(ks__13542)) {
      return cljs.core.assoc.call(null, m, k__13541, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__13541, null), ks__13542, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__13541, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__13541, null), args))
    }
  };
  var update_in = function(m, p__13534, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__13534, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__13543) {
    var m = cljs.core.first(arglist__13543);
    var p__13534 = cljs.core.first(cljs.core.next(arglist__13543));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13543)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13543)));
    return update_in__delegate(m, p__13534, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13546 = this;
  var h__2093__auto____13547 = this__13546.__hash;
  if(!(h__2093__auto____13547 == null)) {
    return h__2093__auto____13547
  }else {
    var h__2093__auto____13548 = cljs.core.hash_coll.call(null, coll);
    this__13546.__hash = h__2093__auto____13548;
    return h__2093__auto____13548
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13549 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13550 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__13551 = this;
  var new_array__13552 = this__13551.array.slice();
  new_array__13552[k] = v;
  return new cljs.core.Vector(this__13551.meta, new_array__13552, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__13583 = null;
  var G__13583__2 = function(this_sym13553, k) {
    var this__13555 = this;
    var this_sym13553__13556 = this;
    var coll__13557 = this_sym13553__13556;
    return coll__13557.cljs$core$ILookup$_lookup$arity$2(coll__13557, k)
  };
  var G__13583__3 = function(this_sym13554, k, not_found) {
    var this__13555 = this;
    var this_sym13554__13558 = this;
    var coll__13559 = this_sym13554__13558;
    return coll__13559.cljs$core$ILookup$_lookup$arity$3(coll__13559, k, not_found)
  };
  G__13583 = function(this_sym13554, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13583__2.call(this, this_sym13554, k);
      case 3:
        return G__13583__3.call(this, this_sym13554, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13583
}();
cljs.core.Vector.prototype.apply = function(this_sym13544, args13545) {
  var this__13560 = this;
  return this_sym13544.call.apply(this_sym13544, [this_sym13544].concat(args13545.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13561 = this;
  var new_array__13562 = this__13561.array.slice();
  new_array__13562.push(o);
  return new cljs.core.Vector(this__13561.meta, new_array__13562, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__13563 = this;
  var this__13564 = this;
  return cljs.core.pr_str.call(null, this__13564)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__13565 = this;
  return cljs.core.ci_reduce.call(null, this__13565.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__13566 = this;
  return cljs.core.ci_reduce.call(null, this__13566.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13567 = this;
  if(this__13567.array.length > 0) {
    var vector_seq__13568 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__13567.array.length) {
          return cljs.core.cons.call(null, this__13567.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__13568.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13569 = this;
  return this__13569.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__13570 = this;
  var count__13571 = this__13570.array.length;
  if(count__13571 > 0) {
    return this__13570.array[count__13571 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__13572 = this;
  if(this__13572.array.length > 0) {
    var new_array__13573 = this__13572.array.slice();
    new_array__13573.pop();
    return new cljs.core.Vector(this__13572.meta, new_array__13573, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__13574 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13575 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13576 = this;
  return new cljs.core.Vector(meta, this__13576.array, this__13576.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13577 = this;
  return this__13577.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__13578 = this;
  if(function() {
    var and__3822__auto____13579 = 0 <= n;
    if(and__3822__auto____13579) {
      return n < this__13578.array.length
    }else {
      return and__3822__auto____13579
    }
  }()) {
    return this__13578.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__13580 = this;
  if(function() {
    var and__3822__auto____13581 = 0 <= n;
    if(and__3822__auto____13581) {
      return n < this__13580.array.length
    }else {
      return and__3822__auto____13581
    }
  }()) {
    return this__13580.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13582 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__13582.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2211__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__13585 = pv.cnt;
  if(cnt__13585 < 32) {
    return 0
  }else {
    return cnt__13585 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__13591 = level;
  var ret__13592 = node;
  while(true) {
    if(ll__13591 === 0) {
      return ret__13592
    }else {
      var embed__13593 = ret__13592;
      var r__13594 = cljs.core.pv_fresh_node.call(null, edit);
      var ___13595 = cljs.core.pv_aset.call(null, r__13594, 0, embed__13593);
      var G__13596 = ll__13591 - 5;
      var G__13597 = r__13594;
      ll__13591 = G__13596;
      ret__13592 = G__13597;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__13603 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__13604 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__13603, subidx__13604, tailnode);
    return ret__13603
  }else {
    var child__13605 = cljs.core.pv_aget.call(null, parent, subidx__13604);
    if(!(child__13605 == null)) {
      var node_to_insert__13606 = push_tail.call(null, pv, level - 5, child__13605, tailnode);
      cljs.core.pv_aset.call(null, ret__13603, subidx__13604, node_to_insert__13606);
      return ret__13603
    }else {
      var node_to_insert__13607 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__13603, subidx__13604, node_to_insert__13607);
      return ret__13603
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____13611 = 0 <= i;
    if(and__3822__auto____13611) {
      return i < pv.cnt
    }else {
      return and__3822__auto____13611
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__13612 = pv.root;
      var level__13613 = pv.shift;
      while(true) {
        if(level__13613 > 0) {
          var G__13614 = cljs.core.pv_aget.call(null, node__13612, i >>> level__13613 & 31);
          var G__13615 = level__13613 - 5;
          node__13612 = G__13614;
          level__13613 = G__13615;
          continue
        }else {
          return node__13612.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__13618 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__13618, i & 31, val);
    return ret__13618
  }else {
    var subidx__13619 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__13618, subidx__13619, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__13619), i, val));
    return ret__13618
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__13625 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__13626 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__13625));
    if(function() {
      var and__3822__auto____13627 = new_child__13626 == null;
      if(and__3822__auto____13627) {
        return subidx__13625 === 0
      }else {
        return and__3822__auto____13627
      }
    }()) {
      return null
    }else {
      var ret__13628 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__13628, subidx__13625, new_child__13626);
      return ret__13628
    }
  }else {
    if(subidx__13625 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__13629 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__13629, subidx__13625, null);
        return ret__13629
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__13632 = this;
  return new cljs.core.TransientVector(this__13632.cnt, this__13632.shift, cljs.core.tv_editable_root.call(null, this__13632.root), cljs.core.tv_editable_tail.call(null, this__13632.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13633 = this;
  var h__2093__auto____13634 = this__13633.__hash;
  if(!(h__2093__auto____13634 == null)) {
    return h__2093__auto____13634
  }else {
    var h__2093__auto____13635 = cljs.core.hash_coll.call(null, coll);
    this__13633.__hash = h__2093__auto____13635;
    return h__2093__auto____13635
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13636 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13637 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__13638 = this;
  if(function() {
    var and__3822__auto____13639 = 0 <= k;
    if(and__3822__auto____13639) {
      return k < this__13638.cnt
    }else {
      return and__3822__auto____13639
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__13640 = this__13638.tail.slice();
      new_tail__13640[k & 31] = v;
      return new cljs.core.PersistentVector(this__13638.meta, this__13638.cnt, this__13638.shift, this__13638.root, new_tail__13640, null)
    }else {
      return new cljs.core.PersistentVector(this__13638.meta, this__13638.cnt, this__13638.shift, cljs.core.do_assoc.call(null, coll, this__13638.shift, this__13638.root, k, v), this__13638.tail, null)
    }
  }else {
    if(k === this__13638.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__13638.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__13688 = null;
  var G__13688__2 = function(this_sym13641, k) {
    var this__13643 = this;
    var this_sym13641__13644 = this;
    var coll__13645 = this_sym13641__13644;
    return coll__13645.cljs$core$ILookup$_lookup$arity$2(coll__13645, k)
  };
  var G__13688__3 = function(this_sym13642, k, not_found) {
    var this__13643 = this;
    var this_sym13642__13646 = this;
    var coll__13647 = this_sym13642__13646;
    return coll__13647.cljs$core$ILookup$_lookup$arity$3(coll__13647, k, not_found)
  };
  G__13688 = function(this_sym13642, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13688__2.call(this, this_sym13642, k);
      case 3:
        return G__13688__3.call(this, this_sym13642, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13688
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym13630, args13631) {
  var this__13648 = this;
  return this_sym13630.call.apply(this_sym13630, [this_sym13630].concat(args13631.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__13649 = this;
  var step_init__13650 = [0, init];
  var i__13651 = 0;
  while(true) {
    if(i__13651 < this__13649.cnt) {
      var arr__13652 = cljs.core.array_for.call(null, v, i__13651);
      var len__13653 = arr__13652.length;
      var init__13657 = function() {
        var j__13654 = 0;
        var init__13655 = step_init__13650[1];
        while(true) {
          if(j__13654 < len__13653) {
            var init__13656 = f.call(null, init__13655, j__13654 + i__13651, arr__13652[j__13654]);
            if(cljs.core.reduced_QMARK_.call(null, init__13656)) {
              return init__13656
            }else {
              var G__13689 = j__13654 + 1;
              var G__13690 = init__13656;
              j__13654 = G__13689;
              init__13655 = G__13690;
              continue
            }
          }else {
            step_init__13650[0] = len__13653;
            step_init__13650[1] = init__13655;
            return init__13655
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__13657)) {
        return cljs.core.deref.call(null, init__13657)
      }else {
        var G__13691 = i__13651 + step_init__13650[0];
        i__13651 = G__13691;
        continue
      }
    }else {
      return step_init__13650[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13658 = this;
  if(this__13658.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__13659 = this__13658.tail.slice();
    new_tail__13659.push(o);
    return new cljs.core.PersistentVector(this__13658.meta, this__13658.cnt + 1, this__13658.shift, this__13658.root, new_tail__13659, null)
  }else {
    var root_overflow_QMARK___13660 = this__13658.cnt >>> 5 > 1 << this__13658.shift;
    var new_shift__13661 = root_overflow_QMARK___13660 ? this__13658.shift + 5 : this__13658.shift;
    var new_root__13663 = root_overflow_QMARK___13660 ? function() {
      var n_r__13662 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__13662, 0, this__13658.root);
      cljs.core.pv_aset.call(null, n_r__13662, 1, cljs.core.new_path.call(null, null, this__13658.shift, new cljs.core.VectorNode(null, this__13658.tail)));
      return n_r__13662
    }() : cljs.core.push_tail.call(null, coll, this__13658.shift, this__13658.root, new cljs.core.VectorNode(null, this__13658.tail));
    return new cljs.core.PersistentVector(this__13658.meta, this__13658.cnt + 1, new_shift__13661, new_root__13663, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__13664 = this;
  if(this__13664.cnt > 0) {
    return new cljs.core.RSeq(coll, this__13664.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__13665 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__13666 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__13667 = this;
  var this__13668 = this;
  return cljs.core.pr_str.call(null, this__13668)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__13669 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__13670 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13671 = this;
  if(this__13671.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13672 = this;
  return this__13672.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__13673 = this;
  if(this__13673.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__13673.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__13674 = this;
  if(this__13674.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__13674.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__13674.meta)
    }else {
      if(1 < this__13674.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__13674.meta, this__13674.cnt - 1, this__13674.shift, this__13674.root, this__13674.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__13675 = cljs.core.array_for.call(null, coll, this__13674.cnt - 2);
          var nr__13676 = cljs.core.pop_tail.call(null, coll, this__13674.shift, this__13674.root);
          var new_root__13677 = nr__13676 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__13676;
          var cnt_1__13678 = this__13674.cnt - 1;
          if(function() {
            var and__3822__auto____13679 = 5 < this__13674.shift;
            if(and__3822__auto____13679) {
              return cljs.core.pv_aget.call(null, new_root__13677, 1) == null
            }else {
              return and__3822__auto____13679
            }
          }()) {
            return new cljs.core.PersistentVector(this__13674.meta, cnt_1__13678, this__13674.shift - 5, cljs.core.pv_aget.call(null, new_root__13677, 0), new_tail__13675, null)
          }else {
            return new cljs.core.PersistentVector(this__13674.meta, cnt_1__13678, this__13674.shift, new_root__13677, new_tail__13675, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__13680 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13681 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13682 = this;
  return new cljs.core.PersistentVector(meta, this__13682.cnt, this__13682.shift, this__13682.root, this__13682.tail, this__13682.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13683 = this;
  return this__13683.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__13684 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__13685 = this;
  if(function() {
    var and__3822__auto____13686 = 0 <= n;
    if(and__3822__auto____13686) {
      return n < this__13685.cnt
    }else {
      return and__3822__auto____13686
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13687 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__13687.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__13692 = xs.length;
  var xs__13693 = no_clone === true ? xs : xs.slice();
  if(l__13692 < 32) {
    return new cljs.core.PersistentVector(null, l__13692, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__13693, null)
  }else {
    var node__13694 = xs__13693.slice(0, 32);
    var v__13695 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__13694, null);
    var i__13696 = 32;
    var out__13697 = cljs.core._as_transient.call(null, v__13695);
    while(true) {
      if(i__13696 < l__13692) {
        var G__13698 = i__13696 + 1;
        var G__13699 = cljs.core.conj_BANG_.call(null, out__13697, xs__13693[i__13696]);
        i__13696 = G__13698;
        out__13697 = G__13699;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__13697)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__13700) {
    var args = cljs.core.seq(arglist__13700);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__13701 = this;
  if(this__13701.off + 1 < this__13701.node.length) {
    var s__13702 = cljs.core.chunked_seq.call(null, this__13701.vec, this__13701.node, this__13701.i, this__13701.off + 1);
    if(s__13702 == null) {
      return null
    }else {
      return s__13702
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13703 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13704 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__13705 = this;
  return this__13705.node[this__13705.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__13706 = this;
  if(this__13706.off + 1 < this__13706.node.length) {
    var s__13707 = cljs.core.chunked_seq.call(null, this__13706.vec, this__13706.node, this__13706.i, this__13706.off + 1);
    if(s__13707 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__13707
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__13708 = this;
  var l__13709 = this__13708.node.length;
  var s__13710 = this__13708.i + l__13709 < cljs.core._count.call(null, this__13708.vec) ? cljs.core.chunked_seq.call(null, this__13708.vec, this__13708.i + l__13709, 0) : null;
  if(s__13710 == null) {
    return null
  }else {
    return s__13710
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13711 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__13712 = this;
  return cljs.core.chunked_seq.call(null, this__13712.vec, this__13712.node, this__13712.i, this__13712.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__13713 = this;
  return this__13713.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13714 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__13714.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__13715 = this;
  return cljs.core.array_chunk.call(null, this__13715.node, this__13715.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__13716 = this;
  var l__13717 = this__13716.node.length;
  var s__13718 = this__13716.i + l__13717 < cljs.core._count.call(null, this__13716.vec) ? cljs.core.chunked_seq.call(null, this__13716.vec, this__13716.i + l__13717, 0) : null;
  if(s__13718 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__13718
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13721 = this;
  var h__2093__auto____13722 = this__13721.__hash;
  if(!(h__2093__auto____13722 == null)) {
    return h__2093__auto____13722
  }else {
    var h__2093__auto____13723 = cljs.core.hash_coll.call(null, coll);
    this__13721.__hash = h__2093__auto____13723;
    return h__2093__auto____13723
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13724 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13725 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__13726 = this;
  var v_pos__13727 = this__13726.start + key;
  return new cljs.core.Subvec(this__13726.meta, cljs.core._assoc.call(null, this__13726.v, v_pos__13727, val), this__13726.start, this__13726.end > v_pos__13727 + 1 ? this__13726.end : v_pos__13727 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__13753 = null;
  var G__13753__2 = function(this_sym13728, k) {
    var this__13730 = this;
    var this_sym13728__13731 = this;
    var coll__13732 = this_sym13728__13731;
    return coll__13732.cljs$core$ILookup$_lookup$arity$2(coll__13732, k)
  };
  var G__13753__3 = function(this_sym13729, k, not_found) {
    var this__13730 = this;
    var this_sym13729__13733 = this;
    var coll__13734 = this_sym13729__13733;
    return coll__13734.cljs$core$ILookup$_lookup$arity$3(coll__13734, k, not_found)
  };
  G__13753 = function(this_sym13729, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13753__2.call(this, this_sym13729, k);
      case 3:
        return G__13753__3.call(this, this_sym13729, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13753
}();
cljs.core.Subvec.prototype.apply = function(this_sym13719, args13720) {
  var this__13735 = this;
  return this_sym13719.call.apply(this_sym13719, [this_sym13719].concat(args13720.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13736 = this;
  return new cljs.core.Subvec(this__13736.meta, cljs.core._assoc_n.call(null, this__13736.v, this__13736.end, o), this__13736.start, this__13736.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__13737 = this;
  var this__13738 = this;
  return cljs.core.pr_str.call(null, this__13738)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__13739 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__13740 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13741 = this;
  var subvec_seq__13742 = function subvec_seq(i) {
    if(i === this__13741.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__13741.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__13742.call(null, this__13741.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13743 = this;
  return this__13743.end - this__13743.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__13744 = this;
  return cljs.core._nth.call(null, this__13744.v, this__13744.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__13745 = this;
  if(this__13745.start === this__13745.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__13745.meta, this__13745.v, this__13745.start, this__13745.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__13746 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13747 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13748 = this;
  return new cljs.core.Subvec(meta, this__13748.v, this__13748.start, this__13748.end, this__13748.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13749 = this;
  return this__13749.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__13750 = this;
  return cljs.core._nth.call(null, this__13750.v, this__13750.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__13751 = this;
  return cljs.core._nth.call(null, this__13751.v, this__13751.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13752 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__13752.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__13755 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__13755, 0, tl.length);
  return ret__13755
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__13759 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__13760 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__13759, subidx__13760, level === 5 ? tail_node : function() {
    var child__13761 = cljs.core.pv_aget.call(null, ret__13759, subidx__13760);
    if(!(child__13761 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__13761, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__13759
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__13766 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__13767 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__13768 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__13766, subidx__13767));
    if(function() {
      var and__3822__auto____13769 = new_child__13768 == null;
      if(and__3822__auto____13769) {
        return subidx__13767 === 0
      }else {
        return and__3822__auto____13769
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__13766, subidx__13767, new_child__13768);
      return node__13766
    }
  }else {
    if(subidx__13767 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__13766, subidx__13767, null);
        return node__13766
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____13774 = 0 <= i;
    if(and__3822__auto____13774) {
      return i < tv.cnt
    }else {
      return and__3822__auto____13774
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__13775 = tv.root;
      var node__13776 = root__13775;
      var level__13777 = tv.shift;
      while(true) {
        if(level__13777 > 0) {
          var G__13778 = cljs.core.tv_ensure_editable.call(null, root__13775.edit, cljs.core.pv_aget.call(null, node__13776, i >>> level__13777 & 31));
          var G__13779 = level__13777 - 5;
          node__13776 = G__13778;
          level__13777 = G__13779;
          continue
        }else {
          return node__13776.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__13819 = null;
  var G__13819__2 = function(this_sym13782, k) {
    var this__13784 = this;
    var this_sym13782__13785 = this;
    var coll__13786 = this_sym13782__13785;
    return coll__13786.cljs$core$ILookup$_lookup$arity$2(coll__13786, k)
  };
  var G__13819__3 = function(this_sym13783, k, not_found) {
    var this__13784 = this;
    var this_sym13783__13787 = this;
    var coll__13788 = this_sym13783__13787;
    return coll__13788.cljs$core$ILookup$_lookup$arity$3(coll__13788, k, not_found)
  };
  G__13819 = function(this_sym13783, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13819__2.call(this, this_sym13783, k);
      case 3:
        return G__13819__3.call(this, this_sym13783, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13819
}();
cljs.core.TransientVector.prototype.apply = function(this_sym13780, args13781) {
  var this__13789 = this;
  return this_sym13780.call.apply(this_sym13780, [this_sym13780].concat(args13781.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13790 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13791 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__13792 = this;
  if(this__13792.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__13793 = this;
  if(function() {
    var and__3822__auto____13794 = 0 <= n;
    if(and__3822__auto____13794) {
      return n < this__13793.cnt
    }else {
      return and__3822__auto____13794
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13795 = this;
  if(this__13795.root.edit) {
    return this__13795.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__13796 = this;
  if(this__13796.root.edit) {
    if(function() {
      var and__3822__auto____13797 = 0 <= n;
      if(and__3822__auto____13797) {
        return n < this__13796.cnt
      }else {
        return and__3822__auto____13797
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__13796.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__13802 = function go(level, node) {
          var node__13800 = cljs.core.tv_ensure_editable.call(null, this__13796.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__13800, n & 31, val);
            return node__13800
          }else {
            var subidx__13801 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__13800, subidx__13801, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__13800, subidx__13801)));
            return node__13800
          }
        }.call(null, this__13796.shift, this__13796.root);
        this__13796.root = new_root__13802;
        return tcoll
      }
    }else {
      if(n === this__13796.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__13796.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__13803 = this;
  if(this__13803.root.edit) {
    if(this__13803.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__13803.cnt) {
        this__13803.cnt = 0;
        return tcoll
      }else {
        if((this__13803.cnt - 1 & 31) > 0) {
          this__13803.cnt = this__13803.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__13804 = cljs.core.editable_array_for.call(null, tcoll, this__13803.cnt - 2);
            var new_root__13806 = function() {
              var nr__13805 = cljs.core.tv_pop_tail.call(null, tcoll, this__13803.shift, this__13803.root);
              if(!(nr__13805 == null)) {
                return nr__13805
              }else {
                return new cljs.core.VectorNode(this__13803.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____13807 = 5 < this__13803.shift;
              if(and__3822__auto____13807) {
                return cljs.core.pv_aget.call(null, new_root__13806, 1) == null
              }else {
                return and__3822__auto____13807
              }
            }()) {
              var new_root__13808 = cljs.core.tv_ensure_editable.call(null, this__13803.root.edit, cljs.core.pv_aget.call(null, new_root__13806, 0));
              this__13803.root = new_root__13808;
              this__13803.shift = this__13803.shift - 5;
              this__13803.cnt = this__13803.cnt - 1;
              this__13803.tail = new_tail__13804;
              return tcoll
            }else {
              this__13803.root = new_root__13806;
              this__13803.cnt = this__13803.cnt - 1;
              this__13803.tail = new_tail__13804;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__13809 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__13810 = this;
  if(this__13810.root.edit) {
    if(this__13810.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__13810.tail[this__13810.cnt & 31] = o;
      this__13810.cnt = this__13810.cnt + 1;
      return tcoll
    }else {
      var tail_node__13811 = new cljs.core.VectorNode(this__13810.root.edit, this__13810.tail);
      var new_tail__13812 = cljs.core.make_array.call(null, 32);
      new_tail__13812[0] = o;
      this__13810.tail = new_tail__13812;
      if(this__13810.cnt >>> 5 > 1 << this__13810.shift) {
        var new_root_array__13813 = cljs.core.make_array.call(null, 32);
        var new_shift__13814 = this__13810.shift + 5;
        new_root_array__13813[0] = this__13810.root;
        new_root_array__13813[1] = cljs.core.new_path.call(null, this__13810.root.edit, this__13810.shift, tail_node__13811);
        this__13810.root = new cljs.core.VectorNode(this__13810.root.edit, new_root_array__13813);
        this__13810.shift = new_shift__13814;
        this__13810.cnt = this__13810.cnt + 1;
        return tcoll
      }else {
        var new_root__13815 = cljs.core.tv_push_tail.call(null, tcoll, this__13810.shift, this__13810.root, tail_node__13811);
        this__13810.root = new_root__13815;
        this__13810.cnt = this__13810.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__13816 = this;
  if(this__13816.root.edit) {
    this__13816.root.edit = null;
    var len__13817 = this__13816.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__13818 = cljs.core.make_array.call(null, len__13817);
    cljs.core.array_copy.call(null, this__13816.tail, 0, trimmed_tail__13818, 0, len__13817);
    return new cljs.core.PersistentVector(null, this__13816.cnt, this__13816.shift, this__13816.root, trimmed_tail__13818, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13820 = this;
  var h__2093__auto____13821 = this__13820.__hash;
  if(!(h__2093__auto____13821 == null)) {
    return h__2093__auto____13821
  }else {
    var h__2093__auto____13822 = cljs.core.hash_coll.call(null, coll);
    this__13820.__hash = h__2093__auto____13822;
    return h__2093__auto____13822
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13823 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__13824 = this;
  var this__13825 = this;
  return cljs.core.pr_str.call(null, this__13825)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13826 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__13827 = this;
  return cljs.core._first.call(null, this__13827.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__13828 = this;
  var temp__3971__auto____13829 = cljs.core.next.call(null, this__13828.front);
  if(temp__3971__auto____13829) {
    var f1__13830 = temp__3971__auto____13829;
    return new cljs.core.PersistentQueueSeq(this__13828.meta, f1__13830, this__13828.rear, null)
  }else {
    if(this__13828.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__13828.meta, this__13828.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13831 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13832 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__13832.front, this__13832.rear, this__13832.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13833 = this;
  return this__13833.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13834 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__13834.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13835 = this;
  var h__2093__auto____13836 = this__13835.__hash;
  if(!(h__2093__auto____13836 == null)) {
    return h__2093__auto____13836
  }else {
    var h__2093__auto____13837 = cljs.core.hash_coll.call(null, coll);
    this__13835.__hash = h__2093__auto____13837;
    return h__2093__auto____13837
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13838 = this;
  if(cljs.core.truth_(this__13838.front)) {
    return new cljs.core.PersistentQueue(this__13838.meta, this__13838.count + 1, this__13838.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____13839 = this__13838.rear;
      if(cljs.core.truth_(or__3824__auto____13839)) {
        return or__3824__auto____13839
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__13838.meta, this__13838.count + 1, cljs.core.conj.call(null, this__13838.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__13840 = this;
  var this__13841 = this;
  return cljs.core.pr_str.call(null, this__13841)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13842 = this;
  var rear__13843 = cljs.core.seq.call(null, this__13842.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____13844 = this__13842.front;
    if(cljs.core.truth_(or__3824__auto____13844)) {
      return or__3824__auto____13844
    }else {
      return rear__13843
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__13842.front, cljs.core.seq.call(null, rear__13843), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13845 = this;
  return this__13845.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__13846 = this;
  return cljs.core._first.call(null, this__13846.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__13847 = this;
  if(cljs.core.truth_(this__13847.front)) {
    var temp__3971__auto____13848 = cljs.core.next.call(null, this__13847.front);
    if(temp__3971__auto____13848) {
      var f1__13849 = temp__3971__auto____13848;
      return new cljs.core.PersistentQueue(this__13847.meta, this__13847.count - 1, f1__13849, this__13847.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__13847.meta, this__13847.count - 1, cljs.core.seq.call(null, this__13847.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__13850 = this;
  return cljs.core.first.call(null, this__13850.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__13851 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13852 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13853 = this;
  return new cljs.core.PersistentQueue(meta, this__13853.count, this__13853.front, this__13853.rear, this__13853.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13854 = this;
  return this__13854.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13855 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__13856 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__13859 = array.length;
  var i__13860 = 0;
  while(true) {
    if(i__13860 < len__13859) {
      if(k === array[i__13860]) {
        return i__13860
      }else {
        var G__13861 = i__13860 + incr;
        i__13860 = G__13861;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__13864 = cljs.core.hash.call(null, a);
  var b__13865 = cljs.core.hash.call(null, b);
  if(a__13864 < b__13865) {
    return-1
  }else {
    if(a__13864 > b__13865) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__13873 = m.keys;
  var len__13874 = ks__13873.length;
  var so__13875 = m.strobj;
  var out__13876 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__13877 = 0;
  var out__13878 = cljs.core.transient$.call(null, out__13876);
  while(true) {
    if(i__13877 < len__13874) {
      var k__13879 = ks__13873[i__13877];
      var G__13880 = i__13877 + 1;
      var G__13881 = cljs.core.assoc_BANG_.call(null, out__13878, k__13879, so__13875[k__13879]);
      i__13877 = G__13880;
      out__13878 = G__13881;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__13878, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__13887 = {};
  var l__13888 = ks.length;
  var i__13889 = 0;
  while(true) {
    if(i__13889 < l__13888) {
      var k__13890 = ks[i__13889];
      new_obj__13887[k__13890] = obj[k__13890];
      var G__13891 = i__13889 + 1;
      i__13889 = G__13891;
      continue
    }else {
    }
    break
  }
  return new_obj__13887
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__13894 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13895 = this;
  var h__2093__auto____13896 = this__13895.__hash;
  if(!(h__2093__auto____13896 == null)) {
    return h__2093__auto____13896
  }else {
    var h__2093__auto____13897 = cljs.core.hash_imap.call(null, coll);
    this__13895.__hash = h__2093__auto____13897;
    return h__2093__auto____13897
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13898 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13899 = this;
  if(function() {
    var and__3822__auto____13900 = goog.isString(k);
    if(and__3822__auto____13900) {
      return!(cljs.core.scan_array.call(null, 1, k, this__13899.keys) == null)
    }else {
      return and__3822__auto____13900
    }
  }()) {
    return this__13899.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__13901 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____13902 = this__13901.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____13902) {
        return or__3824__auto____13902
      }else {
        return this__13901.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__13901.keys) == null)) {
        var new_strobj__13903 = cljs.core.obj_clone.call(null, this__13901.strobj, this__13901.keys);
        new_strobj__13903[k] = v;
        return new cljs.core.ObjMap(this__13901.meta, this__13901.keys, new_strobj__13903, this__13901.update_count + 1, null)
      }else {
        var new_strobj__13904 = cljs.core.obj_clone.call(null, this__13901.strobj, this__13901.keys);
        var new_keys__13905 = this__13901.keys.slice();
        new_strobj__13904[k] = v;
        new_keys__13905.push(k);
        return new cljs.core.ObjMap(this__13901.meta, new_keys__13905, new_strobj__13904, this__13901.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__13906 = this;
  if(function() {
    var and__3822__auto____13907 = goog.isString(k);
    if(and__3822__auto____13907) {
      return!(cljs.core.scan_array.call(null, 1, k, this__13906.keys) == null)
    }else {
      return and__3822__auto____13907
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__13929 = null;
  var G__13929__2 = function(this_sym13908, k) {
    var this__13910 = this;
    var this_sym13908__13911 = this;
    var coll__13912 = this_sym13908__13911;
    return coll__13912.cljs$core$ILookup$_lookup$arity$2(coll__13912, k)
  };
  var G__13929__3 = function(this_sym13909, k, not_found) {
    var this__13910 = this;
    var this_sym13909__13913 = this;
    var coll__13914 = this_sym13909__13913;
    return coll__13914.cljs$core$ILookup$_lookup$arity$3(coll__13914, k, not_found)
  };
  G__13929 = function(this_sym13909, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13929__2.call(this, this_sym13909, k);
      case 3:
        return G__13929__3.call(this, this_sym13909, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13929
}();
cljs.core.ObjMap.prototype.apply = function(this_sym13892, args13893) {
  var this__13915 = this;
  return this_sym13892.call.apply(this_sym13892, [this_sym13892].concat(args13893.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__13916 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__13917 = this;
  var this__13918 = this;
  return cljs.core.pr_str.call(null, this__13918)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13919 = this;
  if(this__13919.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__13882_SHARP_) {
      return cljs.core.vector.call(null, p1__13882_SHARP_, this__13919.strobj[p1__13882_SHARP_])
    }, this__13919.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13920 = this;
  return this__13920.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13921 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13922 = this;
  return new cljs.core.ObjMap(meta, this__13922.keys, this__13922.strobj, this__13922.update_count, this__13922.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13923 = this;
  return this__13923.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13924 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__13924.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__13925 = this;
  if(function() {
    var and__3822__auto____13926 = goog.isString(k);
    if(and__3822__auto____13926) {
      return!(cljs.core.scan_array.call(null, 1, k, this__13925.keys) == null)
    }else {
      return and__3822__auto____13926
    }
  }()) {
    var new_keys__13927 = this__13925.keys.slice();
    var new_strobj__13928 = cljs.core.obj_clone.call(null, this__13925.strobj, this__13925.keys);
    new_keys__13927.splice(cljs.core.scan_array.call(null, 1, k, new_keys__13927), 1);
    cljs.core.js_delete.call(null, new_strobj__13928, k);
    return new cljs.core.ObjMap(this__13925.meta, new_keys__13927, new_strobj__13928, this__13925.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13933 = this;
  var h__2093__auto____13934 = this__13933.__hash;
  if(!(h__2093__auto____13934 == null)) {
    return h__2093__auto____13934
  }else {
    var h__2093__auto____13935 = cljs.core.hash_imap.call(null, coll);
    this__13933.__hash = h__2093__auto____13935;
    return h__2093__auto____13935
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13936 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13937 = this;
  var bucket__13938 = this__13937.hashobj[cljs.core.hash.call(null, k)];
  var i__13939 = cljs.core.truth_(bucket__13938) ? cljs.core.scan_array.call(null, 2, k, bucket__13938) : null;
  if(cljs.core.truth_(i__13939)) {
    return bucket__13938[i__13939 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__13940 = this;
  var h__13941 = cljs.core.hash.call(null, k);
  var bucket__13942 = this__13940.hashobj[h__13941];
  if(cljs.core.truth_(bucket__13942)) {
    var new_bucket__13943 = bucket__13942.slice();
    var new_hashobj__13944 = goog.object.clone(this__13940.hashobj);
    new_hashobj__13944[h__13941] = new_bucket__13943;
    var temp__3971__auto____13945 = cljs.core.scan_array.call(null, 2, k, new_bucket__13943);
    if(cljs.core.truth_(temp__3971__auto____13945)) {
      var i__13946 = temp__3971__auto____13945;
      new_bucket__13943[i__13946 + 1] = v;
      return new cljs.core.HashMap(this__13940.meta, this__13940.count, new_hashobj__13944, null)
    }else {
      new_bucket__13943.push(k, v);
      return new cljs.core.HashMap(this__13940.meta, this__13940.count + 1, new_hashobj__13944, null)
    }
  }else {
    var new_hashobj__13947 = goog.object.clone(this__13940.hashobj);
    new_hashobj__13947[h__13941] = [k, v];
    return new cljs.core.HashMap(this__13940.meta, this__13940.count + 1, new_hashobj__13947, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__13948 = this;
  var bucket__13949 = this__13948.hashobj[cljs.core.hash.call(null, k)];
  var i__13950 = cljs.core.truth_(bucket__13949) ? cljs.core.scan_array.call(null, 2, k, bucket__13949) : null;
  if(cljs.core.truth_(i__13950)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__13975 = null;
  var G__13975__2 = function(this_sym13951, k) {
    var this__13953 = this;
    var this_sym13951__13954 = this;
    var coll__13955 = this_sym13951__13954;
    return coll__13955.cljs$core$ILookup$_lookup$arity$2(coll__13955, k)
  };
  var G__13975__3 = function(this_sym13952, k, not_found) {
    var this__13953 = this;
    var this_sym13952__13956 = this;
    var coll__13957 = this_sym13952__13956;
    return coll__13957.cljs$core$ILookup$_lookup$arity$3(coll__13957, k, not_found)
  };
  G__13975 = function(this_sym13952, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13975__2.call(this, this_sym13952, k);
      case 3:
        return G__13975__3.call(this, this_sym13952, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13975
}();
cljs.core.HashMap.prototype.apply = function(this_sym13931, args13932) {
  var this__13958 = this;
  return this_sym13931.call.apply(this_sym13931, [this_sym13931].concat(args13932.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__13959 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__13960 = this;
  var this__13961 = this;
  return cljs.core.pr_str.call(null, this__13961)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13962 = this;
  if(this__13962.count > 0) {
    var hashes__13963 = cljs.core.js_keys.call(null, this__13962.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__13930_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__13962.hashobj[p1__13930_SHARP_]))
    }, hashes__13963)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13964 = this;
  return this__13964.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13965 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13966 = this;
  return new cljs.core.HashMap(meta, this__13966.count, this__13966.hashobj, this__13966.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13967 = this;
  return this__13967.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13968 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__13968.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__13969 = this;
  var h__13970 = cljs.core.hash.call(null, k);
  var bucket__13971 = this__13969.hashobj[h__13970];
  var i__13972 = cljs.core.truth_(bucket__13971) ? cljs.core.scan_array.call(null, 2, k, bucket__13971) : null;
  if(cljs.core.not.call(null, i__13972)) {
    return coll
  }else {
    var new_hashobj__13973 = goog.object.clone(this__13969.hashobj);
    if(3 > bucket__13971.length) {
      cljs.core.js_delete.call(null, new_hashobj__13973, h__13970)
    }else {
      var new_bucket__13974 = bucket__13971.slice();
      new_bucket__13974.splice(i__13972, 2);
      new_hashobj__13973[h__13970] = new_bucket__13974
    }
    return new cljs.core.HashMap(this__13969.meta, this__13969.count - 1, new_hashobj__13973, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__13976 = ks.length;
  var i__13977 = 0;
  var out__13978 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__13977 < len__13976) {
      var G__13979 = i__13977 + 1;
      var G__13980 = cljs.core.assoc.call(null, out__13978, ks[i__13977], vs[i__13977]);
      i__13977 = G__13979;
      out__13978 = G__13980;
      continue
    }else {
      return out__13978
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__13984 = m.arr;
  var len__13985 = arr__13984.length;
  var i__13986 = 0;
  while(true) {
    if(len__13985 <= i__13986) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__13984[i__13986], k)) {
        return i__13986
      }else {
        if("\ufdd0'else") {
          var G__13987 = i__13986 + 2;
          i__13986 = G__13987;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__13990 = this;
  return new cljs.core.TransientArrayMap({}, this__13990.arr.length, this__13990.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13991 = this;
  var h__2093__auto____13992 = this__13991.__hash;
  if(!(h__2093__auto____13992 == null)) {
    return h__2093__auto____13992
  }else {
    var h__2093__auto____13993 = cljs.core.hash_imap.call(null, coll);
    this__13991.__hash = h__2093__auto____13993;
    return h__2093__auto____13993
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13994 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13995 = this;
  var idx__13996 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__13996 === -1) {
    return not_found
  }else {
    return this__13995.arr[idx__13996 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__13997 = this;
  var idx__13998 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__13998 === -1) {
    if(this__13997.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__13997.meta, this__13997.cnt + 1, function() {
        var G__13999__14000 = this__13997.arr.slice();
        G__13999__14000.push(k);
        G__13999__14000.push(v);
        return G__13999__14000
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__13997.arr[idx__13998 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__13997.meta, this__13997.cnt, function() {
          var G__14001__14002 = this__13997.arr.slice();
          G__14001__14002[idx__13998 + 1] = v;
          return G__14001__14002
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__14003 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__14035 = null;
  var G__14035__2 = function(this_sym14004, k) {
    var this__14006 = this;
    var this_sym14004__14007 = this;
    var coll__14008 = this_sym14004__14007;
    return coll__14008.cljs$core$ILookup$_lookup$arity$2(coll__14008, k)
  };
  var G__14035__3 = function(this_sym14005, k, not_found) {
    var this__14006 = this;
    var this_sym14005__14009 = this;
    var coll__14010 = this_sym14005__14009;
    return coll__14010.cljs$core$ILookup$_lookup$arity$3(coll__14010, k, not_found)
  };
  G__14035 = function(this_sym14005, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14035__2.call(this, this_sym14005, k);
      case 3:
        return G__14035__3.call(this, this_sym14005, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14035
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym13988, args13989) {
  var this__14011 = this;
  return this_sym13988.call.apply(this_sym13988, [this_sym13988].concat(args13989.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__14012 = this;
  var len__14013 = this__14012.arr.length;
  var i__14014 = 0;
  var init__14015 = init;
  while(true) {
    if(i__14014 < len__14013) {
      var init__14016 = f.call(null, init__14015, this__14012.arr[i__14014], this__14012.arr[i__14014 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__14016)) {
        return cljs.core.deref.call(null, init__14016)
      }else {
        var G__14036 = i__14014 + 2;
        var G__14037 = init__14016;
        i__14014 = G__14036;
        init__14015 = G__14037;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__14017 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__14018 = this;
  var this__14019 = this;
  return cljs.core.pr_str.call(null, this__14019)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14020 = this;
  if(this__14020.cnt > 0) {
    var len__14021 = this__14020.arr.length;
    var array_map_seq__14022 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__14021) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__14020.arr[i], this__14020.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__14022.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14023 = this;
  return this__14023.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14024 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14025 = this;
  return new cljs.core.PersistentArrayMap(meta, this__14025.cnt, this__14025.arr, this__14025.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14026 = this;
  return this__14026.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14027 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__14027.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__14028 = this;
  var idx__14029 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__14029 >= 0) {
    var len__14030 = this__14028.arr.length;
    var new_len__14031 = len__14030 - 2;
    if(new_len__14031 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__14032 = cljs.core.make_array.call(null, new_len__14031);
      var s__14033 = 0;
      var d__14034 = 0;
      while(true) {
        if(s__14033 >= len__14030) {
          return new cljs.core.PersistentArrayMap(this__14028.meta, this__14028.cnt - 1, new_arr__14032, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__14028.arr[s__14033])) {
            var G__14038 = s__14033 + 2;
            var G__14039 = d__14034;
            s__14033 = G__14038;
            d__14034 = G__14039;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__14032[d__14034] = this__14028.arr[s__14033];
              new_arr__14032[d__14034 + 1] = this__14028.arr[s__14033 + 1];
              var G__14040 = s__14033 + 2;
              var G__14041 = d__14034 + 2;
              s__14033 = G__14040;
              d__14034 = G__14041;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__14042 = cljs.core.count.call(null, ks);
  var i__14043 = 0;
  var out__14044 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__14043 < len__14042) {
      var G__14045 = i__14043 + 1;
      var G__14046 = cljs.core.assoc_BANG_.call(null, out__14044, ks[i__14043], vs[i__14043]);
      i__14043 = G__14045;
      out__14044 = G__14046;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__14044)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__14047 = this;
  if(cljs.core.truth_(this__14047.editable_QMARK_)) {
    var idx__14048 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__14048 >= 0) {
      this__14047.arr[idx__14048] = this__14047.arr[this__14047.len - 2];
      this__14047.arr[idx__14048 + 1] = this__14047.arr[this__14047.len - 1];
      var G__14049__14050 = this__14047.arr;
      G__14049__14050.pop();
      G__14049__14050.pop();
      G__14049__14050;
      this__14047.len = this__14047.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__14051 = this;
  if(cljs.core.truth_(this__14051.editable_QMARK_)) {
    var idx__14052 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__14052 === -1) {
      if(this__14051.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__14051.len = this__14051.len + 2;
        this__14051.arr.push(key);
        this__14051.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__14051.len, this__14051.arr), key, val)
      }
    }else {
      if(val === this__14051.arr[idx__14052 + 1]) {
        return tcoll
      }else {
        this__14051.arr[idx__14052 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__14053 = this;
  if(cljs.core.truth_(this__14053.editable_QMARK_)) {
    if(function() {
      var G__14054__14055 = o;
      if(G__14054__14055) {
        if(function() {
          var or__3824__auto____14056 = G__14054__14055.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____14056) {
            return or__3824__auto____14056
          }else {
            return G__14054__14055.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__14054__14055.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__14054__14055)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__14054__14055)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__14057 = cljs.core.seq.call(null, o);
      var tcoll__14058 = tcoll;
      while(true) {
        var temp__3971__auto____14059 = cljs.core.first.call(null, es__14057);
        if(cljs.core.truth_(temp__3971__auto____14059)) {
          var e__14060 = temp__3971__auto____14059;
          var G__14066 = cljs.core.next.call(null, es__14057);
          var G__14067 = tcoll__14058.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__14058, cljs.core.key.call(null, e__14060), cljs.core.val.call(null, e__14060));
          es__14057 = G__14066;
          tcoll__14058 = G__14067;
          continue
        }else {
          return tcoll__14058
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__14061 = this;
  if(cljs.core.truth_(this__14061.editable_QMARK_)) {
    this__14061.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__14061.len, 2), this__14061.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__14062 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__14063 = this;
  if(cljs.core.truth_(this__14063.editable_QMARK_)) {
    var idx__14064 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__14064 === -1) {
      return not_found
    }else {
      return this__14063.arr[idx__14064 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__14065 = this;
  if(cljs.core.truth_(this__14065.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__14065.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__14070 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__14071 = 0;
  while(true) {
    if(i__14071 < len) {
      var G__14072 = cljs.core.assoc_BANG_.call(null, out__14070, arr[i__14071], arr[i__14071 + 1]);
      var G__14073 = i__14071 + 2;
      out__14070 = G__14072;
      i__14071 = G__14073;
      continue
    }else {
      return out__14070
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2211__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__14078__14079 = arr.slice();
    G__14078__14079[i] = a;
    return G__14078__14079
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__14080__14081 = arr.slice();
    G__14080__14081[i] = a;
    G__14080__14081[j] = b;
    return G__14080__14081
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__14083 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__14083, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__14083, 2 * i, new_arr__14083.length - 2 * i);
  return new_arr__14083
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__14086 = inode.ensure_editable(edit);
    editable__14086.arr[i] = a;
    return editable__14086
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__14087 = inode.ensure_editable(edit);
    editable__14087.arr[i] = a;
    editable__14087.arr[j] = b;
    return editable__14087
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__14094 = arr.length;
  var i__14095 = 0;
  var init__14096 = init;
  while(true) {
    if(i__14095 < len__14094) {
      var init__14099 = function() {
        var k__14097 = arr[i__14095];
        if(!(k__14097 == null)) {
          return f.call(null, init__14096, k__14097, arr[i__14095 + 1])
        }else {
          var node__14098 = arr[i__14095 + 1];
          if(!(node__14098 == null)) {
            return node__14098.kv_reduce(f, init__14096)
          }else {
            return init__14096
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__14099)) {
        return cljs.core.deref.call(null, init__14099)
      }else {
        var G__14100 = i__14095 + 2;
        var G__14101 = init__14099;
        i__14095 = G__14100;
        init__14096 = G__14101;
        continue
      }
    }else {
      return init__14096
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__14102 = this;
  var inode__14103 = this;
  if(this__14102.bitmap === bit) {
    return null
  }else {
    var editable__14104 = inode__14103.ensure_editable(e);
    var earr__14105 = editable__14104.arr;
    var len__14106 = earr__14105.length;
    editable__14104.bitmap = bit ^ editable__14104.bitmap;
    cljs.core.array_copy.call(null, earr__14105, 2 * (i + 1), earr__14105, 2 * i, len__14106 - 2 * (i + 1));
    earr__14105[len__14106 - 2] = null;
    earr__14105[len__14106 - 1] = null;
    return editable__14104
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__14107 = this;
  var inode__14108 = this;
  var bit__14109 = 1 << (hash >>> shift & 31);
  var idx__14110 = cljs.core.bitmap_indexed_node_index.call(null, this__14107.bitmap, bit__14109);
  if((this__14107.bitmap & bit__14109) === 0) {
    var n__14111 = cljs.core.bit_count.call(null, this__14107.bitmap);
    if(2 * n__14111 < this__14107.arr.length) {
      var editable__14112 = inode__14108.ensure_editable(edit);
      var earr__14113 = editable__14112.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__14113, 2 * idx__14110, earr__14113, 2 * (idx__14110 + 1), 2 * (n__14111 - idx__14110));
      earr__14113[2 * idx__14110] = key;
      earr__14113[2 * idx__14110 + 1] = val;
      editable__14112.bitmap = editable__14112.bitmap | bit__14109;
      return editable__14112
    }else {
      if(n__14111 >= 16) {
        var nodes__14114 = cljs.core.make_array.call(null, 32);
        var jdx__14115 = hash >>> shift & 31;
        nodes__14114[jdx__14115] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__14116 = 0;
        var j__14117 = 0;
        while(true) {
          if(i__14116 < 32) {
            if((this__14107.bitmap >>> i__14116 & 1) === 0) {
              var G__14170 = i__14116 + 1;
              var G__14171 = j__14117;
              i__14116 = G__14170;
              j__14117 = G__14171;
              continue
            }else {
              nodes__14114[i__14116] = !(this__14107.arr[j__14117] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__14107.arr[j__14117]), this__14107.arr[j__14117], this__14107.arr[j__14117 + 1], added_leaf_QMARK_) : this__14107.arr[j__14117 + 1];
              var G__14172 = i__14116 + 1;
              var G__14173 = j__14117 + 2;
              i__14116 = G__14172;
              j__14117 = G__14173;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__14111 + 1, nodes__14114)
      }else {
        if("\ufdd0'else") {
          var new_arr__14118 = cljs.core.make_array.call(null, 2 * (n__14111 + 4));
          cljs.core.array_copy.call(null, this__14107.arr, 0, new_arr__14118, 0, 2 * idx__14110);
          new_arr__14118[2 * idx__14110] = key;
          new_arr__14118[2 * idx__14110 + 1] = val;
          cljs.core.array_copy.call(null, this__14107.arr, 2 * idx__14110, new_arr__14118, 2 * (idx__14110 + 1), 2 * (n__14111 - idx__14110));
          added_leaf_QMARK_.val = true;
          var editable__14119 = inode__14108.ensure_editable(edit);
          editable__14119.arr = new_arr__14118;
          editable__14119.bitmap = editable__14119.bitmap | bit__14109;
          return editable__14119
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__14120 = this__14107.arr[2 * idx__14110];
    var val_or_node__14121 = this__14107.arr[2 * idx__14110 + 1];
    if(key_or_nil__14120 == null) {
      var n__14122 = val_or_node__14121.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__14122 === val_or_node__14121) {
        return inode__14108
      }else {
        return cljs.core.edit_and_set.call(null, inode__14108, edit, 2 * idx__14110 + 1, n__14122)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__14120)) {
        if(val === val_or_node__14121) {
          return inode__14108
        }else {
          return cljs.core.edit_and_set.call(null, inode__14108, edit, 2 * idx__14110 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__14108, edit, 2 * idx__14110, null, 2 * idx__14110 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__14120, val_or_node__14121, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__14123 = this;
  var inode__14124 = this;
  return cljs.core.create_inode_seq.call(null, this__14123.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__14125 = this;
  var inode__14126 = this;
  var bit__14127 = 1 << (hash >>> shift & 31);
  if((this__14125.bitmap & bit__14127) === 0) {
    return inode__14126
  }else {
    var idx__14128 = cljs.core.bitmap_indexed_node_index.call(null, this__14125.bitmap, bit__14127);
    var key_or_nil__14129 = this__14125.arr[2 * idx__14128];
    var val_or_node__14130 = this__14125.arr[2 * idx__14128 + 1];
    if(key_or_nil__14129 == null) {
      var n__14131 = val_or_node__14130.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__14131 === val_or_node__14130) {
        return inode__14126
      }else {
        if(!(n__14131 == null)) {
          return cljs.core.edit_and_set.call(null, inode__14126, edit, 2 * idx__14128 + 1, n__14131)
        }else {
          if(this__14125.bitmap === bit__14127) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__14126.edit_and_remove_pair(edit, bit__14127, idx__14128)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__14129)) {
        removed_leaf_QMARK_[0] = true;
        return inode__14126.edit_and_remove_pair(edit, bit__14127, idx__14128)
      }else {
        if("\ufdd0'else") {
          return inode__14126
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__14132 = this;
  var inode__14133 = this;
  if(e === this__14132.edit) {
    return inode__14133
  }else {
    var n__14134 = cljs.core.bit_count.call(null, this__14132.bitmap);
    var new_arr__14135 = cljs.core.make_array.call(null, n__14134 < 0 ? 4 : 2 * (n__14134 + 1));
    cljs.core.array_copy.call(null, this__14132.arr, 0, new_arr__14135, 0, 2 * n__14134);
    return new cljs.core.BitmapIndexedNode(e, this__14132.bitmap, new_arr__14135)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__14136 = this;
  var inode__14137 = this;
  return cljs.core.inode_kv_reduce.call(null, this__14136.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__14138 = this;
  var inode__14139 = this;
  var bit__14140 = 1 << (hash >>> shift & 31);
  if((this__14138.bitmap & bit__14140) === 0) {
    return not_found
  }else {
    var idx__14141 = cljs.core.bitmap_indexed_node_index.call(null, this__14138.bitmap, bit__14140);
    var key_or_nil__14142 = this__14138.arr[2 * idx__14141];
    var val_or_node__14143 = this__14138.arr[2 * idx__14141 + 1];
    if(key_or_nil__14142 == null) {
      return val_or_node__14143.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__14142)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__14142, val_or_node__14143], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__14144 = this;
  var inode__14145 = this;
  var bit__14146 = 1 << (hash >>> shift & 31);
  if((this__14144.bitmap & bit__14146) === 0) {
    return inode__14145
  }else {
    var idx__14147 = cljs.core.bitmap_indexed_node_index.call(null, this__14144.bitmap, bit__14146);
    var key_or_nil__14148 = this__14144.arr[2 * idx__14147];
    var val_or_node__14149 = this__14144.arr[2 * idx__14147 + 1];
    if(key_or_nil__14148 == null) {
      var n__14150 = val_or_node__14149.inode_without(shift + 5, hash, key);
      if(n__14150 === val_or_node__14149) {
        return inode__14145
      }else {
        if(!(n__14150 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__14144.bitmap, cljs.core.clone_and_set.call(null, this__14144.arr, 2 * idx__14147 + 1, n__14150))
        }else {
          if(this__14144.bitmap === bit__14146) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__14144.bitmap ^ bit__14146, cljs.core.remove_pair.call(null, this__14144.arr, idx__14147))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__14148)) {
        return new cljs.core.BitmapIndexedNode(null, this__14144.bitmap ^ bit__14146, cljs.core.remove_pair.call(null, this__14144.arr, idx__14147))
      }else {
        if("\ufdd0'else") {
          return inode__14145
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__14151 = this;
  var inode__14152 = this;
  var bit__14153 = 1 << (hash >>> shift & 31);
  var idx__14154 = cljs.core.bitmap_indexed_node_index.call(null, this__14151.bitmap, bit__14153);
  if((this__14151.bitmap & bit__14153) === 0) {
    var n__14155 = cljs.core.bit_count.call(null, this__14151.bitmap);
    if(n__14155 >= 16) {
      var nodes__14156 = cljs.core.make_array.call(null, 32);
      var jdx__14157 = hash >>> shift & 31;
      nodes__14156[jdx__14157] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__14158 = 0;
      var j__14159 = 0;
      while(true) {
        if(i__14158 < 32) {
          if((this__14151.bitmap >>> i__14158 & 1) === 0) {
            var G__14174 = i__14158 + 1;
            var G__14175 = j__14159;
            i__14158 = G__14174;
            j__14159 = G__14175;
            continue
          }else {
            nodes__14156[i__14158] = !(this__14151.arr[j__14159] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__14151.arr[j__14159]), this__14151.arr[j__14159], this__14151.arr[j__14159 + 1], added_leaf_QMARK_) : this__14151.arr[j__14159 + 1];
            var G__14176 = i__14158 + 1;
            var G__14177 = j__14159 + 2;
            i__14158 = G__14176;
            j__14159 = G__14177;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__14155 + 1, nodes__14156)
    }else {
      var new_arr__14160 = cljs.core.make_array.call(null, 2 * (n__14155 + 1));
      cljs.core.array_copy.call(null, this__14151.arr, 0, new_arr__14160, 0, 2 * idx__14154);
      new_arr__14160[2 * idx__14154] = key;
      new_arr__14160[2 * idx__14154 + 1] = val;
      cljs.core.array_copy.call(null, this__14151.arr, 2 * idx__14154, new_arr__14160, 2 * (idx__14154 + 1), 2 * (n__14155 - idx__14154));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__14151.bitmap | bit__14153, new_arr__14160)
    }
  }else {
    var key_or_nil__14161 = this__14151.arr[2 * idx__14154];
    var val_or_node__14162 = this__14151.arr[2 * idx__14154 + 1];
    if(key_or_nil__14161 == null) {
      var n__14163 = val_or_node__14162.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__14163 === val_or_node__14162) {
        return inode__14152
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__14151.bitmap, cljs.core.clone_and_set.call(null, this__14151.arr, 2 * idx__14154 + 1, n__14163))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__14161)) {
        if(val === val_or_node__14162) {
          return inode__14152
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__14151.bitmap, cljs.core.clone_and_set.call(null, this__14151.arr, 2 * idx__14154 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__14151.bitmap, cljs.core.clone_and_set.call(null, this__14151.arr, 2 * idx__14154, null, 2 * idx__14154 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__14161, val_or_node__14162, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__14164 = this;
  var inode__14165 = this;
  var bit__14166 = 1 << (hash >>> shift & 31);
  if((this__14164.bitmap & bit__14166) === 0) {
    return not_found
  }else {
    var idx__14167 = cljs.core.bitmap_indexed_node_index.call(null, this__14164.bitmap, bit__14166);
    var key_or_nil__14168 = this__14164.arr[2 * idx__14167];
    var val_or_node__14169 = this__14164.arr[2 * idx__14167 + 1];
    if(key_or_nil__14168 == null) {
      return val_or_node__14169.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__14168)) {
        return val_or_node__14169
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__14185 = array_node.arr;
  var len__14186 = 2 * (array_node.cnt - 1);
  var new_arr__14187 = cljs.core.make_array.call(null, len__14186);
  var i__14188 = 0;
  var j__14189 = 1;
  var bitmap__14190 = 0;
  while(true) {
    if(i__14188 < len__14186) {
      if(function() {
        var and__3822__auto____14191 = !(i__14188 === idx);
        if(and__3822__auto____14191) {
          return!(arr__14185[i__14188] == null)
        }else {
          return and__3822__auto____14191
        }
      }()) {
        new_arr__14187[j__14189] = arr__14185[i__14188];
        var G__14192 = i__14188 + 1;
        var G__14193 = j__14189 + 2;
        var G__14194 = bitmap__14190 | 1 << i__14188;
        i__14188 = G__14192;
        j__14189 = G__14193;
        bitmap__14190 = G__14194;
        continue
      }else {
        var G__14195 = i__14188 + 1;
        var G__14196 = j__14189;
        var G__14197 = bitmap__14190;
        i__14188 = G__14195;
        j__14189 = G__14196;
        bitmap__14190 = G__14197;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__14190, new_arr__14187)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__14198 = this;
  var inode__14199 = this;
  var idx__14200 = hash >>> shift & 31;
  var node__14201 = this__14198.arr[idx__14200];
  if(node__14201 == null) {
    var editable__14202 = cljs.core.edit_and_set.call(null, inode__14199, edit, idx__14200, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__14202.cnt = editable__14202.cnt + 1;
    return editable__14202
  }else {
    var n__14203 = node__14201.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__14203 === node__14201) {
      return inode__14199
    }else {
      return cljs.core.edit_and_set.call(null, inode__14199, edit, idx__14200, n__14203)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__14204 = this;
  var inode__14205 = this;
  return cljs.core.create_array_node_seq.call(null, this__14204.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__14206 = this;
  var inode__14207 = this;
  var idx__14208 = hash >>> shift & 31;
  var node__14209 = this__14206.arr[idx__14208];
  if(node__14209 == null) {
    return inode__14207
  }else {
    var n__14210 = node__14209.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__14210 === node__14209) {
      return inode__14207
    }else {
      if(n__14210 == null) {
        if(this__14206.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__14207, edit, idx__14208)
        }else {
          var editable__14211 = cljs.core.edit_and_set.call(null, inode__14207, edit, idx__14208, n__14210);
          editable__14211.cnt = editable__14211.cnt - 1;
          return editable__14211
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__14207, edit, idx__14208, n__14210)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__14212 = this;
  var inode__14213 = this;
  if(e === this__14212.edit) {
    return inode__14213
  }else {
    return new cljs.core.ArrayNode(e, this__14212.cnt, this__14212.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__14214 = this;
  var inode__14215 = this;
  var len__14216 = this__14214.arr.length;
  var i__14217 = 0;
  var init__14218 = init;
  while(true) {
    if(i__14217 < len__14216) {
      var node__14219 = this__14214.arr[i__14217];
      if(!(node__14219 == null)) {
        var init__14220 = node__14219.kv_reduce(f, init__14218);
        if(cljs.core.reduced_QMARK_.call(null, init__14220)) {
          return cljs.core.deref.call(null, init__14220)
        }else {
          var G__14239 = i__14217 + 1;
          var G__14240 = init__14220;
          i__14217 = G__14239;
          init__14218 = G__14240;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__14218
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__14221 = this;
  var inode__14222 = this;
  var idx__14223 = hash >>> shift & 31;
  var node__14224 = this__14221.arr[idx__14223];
  if(!(node__14224 == null)) {
    return node__14224.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__14225 = this;
  var inode__14226 = this;
  var idx__14227 = hash >>> shift & 31;
  var node__14228 = this__14225.arr[idx__14227];
  if(!(node__14228 == null)) {
    var n__14229 = node__14228.inode_without(shift + 5, hash, key);
    if(n__14229 === node__14228) {
      return inode__14226
    }else {
      if(n__14229 == null) {
        if(this__14225.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__14226, null, idx__14227)
        }else {
          return new cljs.core.ArrayNode(null, this__14225.cnt - 1, cljs.core.clone_and_set.call(null, this__14225.arr, idx__14227, n__14229))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__14225.cnt, cljs.core.clone_and_set.call(null, this__14225.arr, idx__14227, n__14229))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__14226
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__14230 = this;
  var inode__14231 = this;
  var idx__14232 = hash >>> shift & 31;
  var node__14233 = this__14230.arr[idx__14232];
  if(node__14233 == null) {
    return new cljs.core.ArrayNode(null, this__14230.cnt + 1, cljs.core.clone_and_set.call(null, this__14230.arr, idx__14232, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__14234 = node__14233.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__14234 === node__14233) {
      return inode__14231
    }else {
      return new cljs.core.ArrayNode(null, this__14230.cnt, cljs.core.clone_and_set.call(null, this__14230.arr, idx__14232, n__14234))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__14235 = this;
  var inode__14236 = this;
  var idx__14237 = hash >>> shift & 31;
  var node__14238 = this__14235.arr[idx__14237];
  if(!(node__14238 == null)) {
    return node__14238.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__14243 = 2 * cnt;
  var i__14244 = 0;
  while(true) {
    if(i__14244 < lim__14243) {
      if(cljs.core.key_test.call(null, key, arr[i__14244])) {
        return i__14244
      }else {
        var G__14245 = i__14244 + 2;
        i__14244 = G__14245;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__14246 = this;
  var inode__14247 = this;
  if(hash === this__14246.collision_hash) {
    var idx__14248 = cljs.core.hash_collision_node_find_index.call(null, this__14246.arr, this__14246.cnt, key);
    if(idx__14248 === -1) {
      if(this__14246.arr.length > 2 * this__14246.cnt) {
        var editable__14249 = cljs.core.edit_and_set.call(null, inode__14247, edit, 2 * this__14246.cnt, key, 2 * this__14246.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__14249.cnt = editable__14249.cnt + 1;
        return editable__14249
      }else {
        var len__14250 = this__14246.arr.length;
        var new_arr__14251 = cljs.core.make_array.call(null, len__14250 + 2);
        cljs.core.array_copy.call(null, this__14246.arr, 0, new_arr__14251, 0, len__14250);
        new_arr__14251[len__14250] = key;
        new_arr__14251[len__14250 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__14247.ensure_editable_array(edit, this__14246.cnt + 1, new_arr__14251)
      }
    }else {
      if(this__14246.arr[idx__14248 + 1] === val) {
        return inode__14247
      }else {
        return cljs.core.edit_and_set.call(null, inode__14247, edit, idx__14248 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__14246.collision_hash >>> shift & 31), [null, inode__14247, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__14252 = this;
  var inode__14253 = this;
  return cljs.core.create_inode_seq.call(null, this__14252.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__14254 = this;
  var inode__14255 = this;
  var idx__14256 = cljs.core.hash_collision_node_find_index.call(null, this__14254.arr, this__14254.cnt, key);
  if(idx__14256 === -1) {
    return inode__14255
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__14254.cnt === 1) {
      return null
    }else {
      var editable__14257 = inode__14255.ensure_editable(edit);
      var earr__14258 = editable__14257.arr;
      earr__14258[idx__14256] = earr__14258[2 * this__14254.cnt - 2];
      earr__14258[idx__14256 + 1] = earr__14258[2 * this__14254.cnt - 1];
      earr__14258[2 * this__14254.cnt - 1] = null;
      earr__14258[2 * this__14254.cnt - 2] = null;
      editable__14257.cnt = editable__14257.cnt - 1;
      return editable__14257
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__14259 = this;
  var inode__14260 = this;
  if(e === this__14259.edit) {
    return inode__14260
  }else {
    var new_arr__14261 = cljs.core.make_array.call(null, 2 * (this__14259.cnt + 1));
    cljs.core.array_copy.call(null, this__14259.arr, 0, new_arr__14261, 0, 2 * this__14259.cnt);
    return new cljs.core.HashCollisionNode(e, this__14259.collision_hash, this__14259.cnt, new_arr__14261)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__14262 = this;
  var inode__14263 = this;
  return cljs.core.inode_kv_reduce.call(null, this__14262.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__14264 = this;
  var inode__14265 = this;
  var idx__14266 = cljs.core.hash_collision_node_find_index.call(null, this__14264.arr, this__14264.cnt, key);
  if(idx__14266 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__14264.arr[idx__14266])) {
      return cljs.core.PersistentVector.fromArray([this__14264.arr[idx__14266], this__14264.arr[idx__14266 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__14267 = this;
  var inode__14268 = this;
  var idx__14269 = cljs.core.hash_collision_node_find_index.call(null, this__14267.arr, this__14267.cnt, key);
  if(idx__14269 === -1) {
    return inode__14268
  }else {
    if(this__14267.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__14267.collision_hash, this__14267.cnt - 1, cljs.core.remove_pair.call(null, this__14267.arr, cljs.core.quot.call(null, idx__14269, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__14270 = this;
  var inode__14271 = this;
  if(hash === this__14270.collision_hash) {
    var idx__14272 = cljs.core.hash_collision_node_find_index.call(null, this__14270.arr, this__14270.cnt, key);
    if(idx__14272 === -1) {
      var len__14273 = this__14270.arr.length;
      var new_arr__14274 = cljs.core.make_array.call(null, len__14273 + 2);
      cljs.core.array_copy.call(null, this__14270.arr, 0, new_arr__14274, 0, len__14273);
      new_arr__14274[len__14273] = key;
      new_arr__14274[len__14273 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__14270.collision_hash, this__14270.cnt + 1, new_arr__14274)
    }else {
      if(cljs.core._EQ_.call(null, this__14270.arr[idx__14272], val)) {
        return inode__14271
      }else {
        return new cljs.core.HashCollisionNode(null, this__14270.collision_hash, this__14270.cnt, cljs.core.clone_and_set.call(null, this__14270.arr, idx__14272 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__14270.collision_hash >>> shift & 31), [null, inode__14271])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__14275 = this;
  var inode__14276 = this;
  var idx__14277 = cljs.core.hash_collision_node_find_index.call(null, this__14275.arr, this__14275.cnt, key);
  if(idx__14277 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__14275.arr[idx__14277])) {
      return this__14275.arr[idx__14277 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__14278 = this;
  var inode__14279 = this;
  if(e === this__14278.edit) {
    this__14278.arr = array;
    this__14278.cnt = count;
    return inode__14279
  }else {
    return new cljs.core.HashCollisionNode(this__14278.edit, this__14278.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__14284 = cljs.core.hash.call(null, key1);
    if(key1hash__14284 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__14284, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___14285 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__14284, key1, val1, added_leaf_QMARK___14285).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___14285)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__14286 = cljs.core.hash.call(null, key1);
    if(key1hash__14286 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__14286, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___14287 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__14286, key1, val1, added_leaf_QMARK___14287).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___14287)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14288 = this;
  var h__2093__auto____14289 = this__14288.__hash;
  if(!(h__2093__auto____14289 == null)) {
    return h__2093__auto____14289
  }else {
    var h__2093__auto____14290 = cljs.core.hash_coll.call(null, coll);
    this__14288.__hash = h__2093__auto____14290;
    return h__2093__auto____14290
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14291 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__14292 = this;
  var this__14293 = this;
  return cljs.core.pr_str.call(null, this__14293)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__14294 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__14295 = this;
  if(this__14295.s == null) {
    return cljs.core.PersistentVector.fromArray([this__14295.nodes[this__14295.i], this__14295.nodes[this__14295.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__14295.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__14296 = this;
  if(this__14296.s == null) {
    return cljs.core.create_inode_seq.call(null, this__14296.nodes, this__14296.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__14296.nodes, this__14296.i, cljs.core.next.call(null, this__14296.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14297 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14298 = this;
  return new cljs.core.NodeSeq(meta, this__14298.nodes, this__14298.i, this__14298.s, this__14298.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14299 = this;
  return this__14299.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14300 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__14300.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__14307 = nodes.length;
      var j__14308 = i;
      while(true) {
        if(j__14308 < len__14307) {
          if(!(nodes[j__14308] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__14308, null, null)
          }else {
            var temp__3971__auto____14309 = nodes[j__14308 + 1];
            if(cljs.core.truth_(temp__3971__auto____14309)) {
              var node__14310 = temp__3971__auto____14309;
              var temp__3971__auto____14311 = node__14310.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____14311)) {
                var node_seq__14312 = temp__3971__auto____14311;
                return new cljs.core.NodeSeq(null, nodes, j__14308 + 2, node_seq__14312, null)
              }else {
                var G__14313 = j__14308 + 2;
                j__14308 = G__14313;
                continue
              }
            }else {
              var G__14314 = j__14308 + 2;
              j__14308 = G__14314;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14315 = this;
  var h__2093__auto____14316 = this__14315.__hash;
  if(!(h__2093__auto____14316 == null)) {
    return h__2093__auto____14316
  }else {
    var h__2093__auto____14317 = cljs.core.hash_coll.call(null, coll);
    this__14315.__hash = h__2093__auto____14317;
    return h__2093__auto____14317
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14318 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__14319 = this;
  var this__14320 = this;
  return cljs.core.pr_str.call(null, this__14320)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__14321 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__14322 = this;
  return cljs.core.first.call(null, this__14322.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__14323 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__14323.nodes, this__14323.i, cljs.core.next.call(null, this__14323.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14324 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14325 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__14325.nodes, this__14325.i, this__14325.s, this__14325.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14326 = this;
  return this__14326.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14327 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__14327.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__14334 = nodes.length;
      var j__14335 = i;
      while(true) {
        if(j__14335 < len__14334) {
          var temp__3971__auto____14336 = nodes[j__14335];
          if(cljs.core.truth_(temp__3971__auto____14336)) {
            var nj__14337 = temp__3971__auto____14336;
            var temp__3971__auto____14338 = nj__14337.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____14338)) {
              var ns__14339 = temp__3971__auto____14338;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__14335 + 1, ns__14339, null)
            }else {
              var G__14340 = j__14335 + 1;
              j__14335 = G__14340;
              continue
            }
          }else {
            var G__14341 = j__14335 + 1;
            j__14335 = G__14341;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__14344 = this;
  return new cljs.core.TransientHashMap({}, this__14344.root, this__14344.cnt, this__14344.has_nil_QMARK_, this__14344.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14345 = this;
  var h__2093__auto____14346 = this__14345.__hash;
  if(!(h__2093__auto____14346 == null)) {
    return h__2093__auto____14346
  }else {
    var h__2093__auto____14347 = cljs.core.hash_imap.call(null, coll);
    this__14345.__hash = h__2093__auto____14347;
    return h__2093__auto____14347
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__14348 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__14349 = this;
  if(k == null) {
    if(this__14349.has_nil_QMARK_) {
      return this__14349.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__14349.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__14349.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__14350 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____14351 = this__14350.has_nil_QMARK_;
      if(and__3822__auto____14351) {
        return v === this__14350.nil_val
      }else {
        return and__3822__auto____14351
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__14350.meta, this__14350.has_nil_QMARK_ ? this__14350.cnt : this__14350.cnt + 1, this__14350.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___14352 = new cljs.core.Box(false);
    var new_root__14353 = (this__14350.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__14350.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___14352);
    if(new_root__14353 === this__14350.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__14350.meta, added_leaf_QMARK___14352.val ? this__14350.cnt + 1 : this__14350.cnt, new_root__14353, this__14350.has_nil_QMARK_, this__14350.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__14354 = this;
  if(k == null) {
    return this__14354.has_nil_QMARK_
  }else {
    if(this__14354.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__14354.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__14377 = null;
  var G__14377__2 = function(this_sym14355, k) {
    var this__14357 = this;
    var this_sym14355__14358 = this;
    var coll__14359 = this_sym14355__14358;
    return coll__14359.cljs$core$ILookup$_lookup$arity$2(coll__14359, k)
  };
  var G__14377__3 = function(this_sym14356, k, not_found) {
    var this__14357 = this;
    var this_sym14356__14360 = this;
    var coll__14361 = this_sym14356__14360;
    return coll__14361.cljs$core$ILookup$_lookup$arity$3(coll__14361, k, not_found)
  };
  G__14377 = function(this_sym14356, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14377__2.call(this, this_sym14356, k);
      case 3:
        return G__14377__3.call(this, this_sym14356, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14377
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym14342, args14343) {
  var this__14362 = this;
  return this_sym14342.call.apply(this_sym14342, [this_sym14342].concat(args14343.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__14363 = this;
  var init__14364 = this__14363.has_nil_QMARK_ ? f.call(null, init, null, this__14363.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__14364)) {
    return cljs.core.deref.call(null, init__14364)
  }else {
    if(!(this__14363.root == null)) {
      return this__14363.root.kv_reduce(f, init__14364)
    }else {
      if("\ufdd0'else") {
        return init__14364
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__14365 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__14366 = this;
  var this__14367 = this;
  return cljs.core.pr_str.call(null, this__14367)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14368 = this;
  if(this__14368.cnt > 0) {
    var s__14369 = !(this__14368.root == null) ? this__14368.root.inode_seq() : null;
    if(this__14368.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__14368.nil_val], true), s__14369)
    }else {
      return s__14369
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14370 = this;
  return this__14370.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14371 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14372 = this;
  return new cljs.core.PersistentHashMap(meta, this__14372.cnt, this__14372.root, this__14372.has_nil_QMARK_, this__14372.nil_val, this__14372.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14373 = this;
  return this__14373.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14374 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__14374.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__14375 = this;
  if(k == null) {
    if(this__14375.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__14375.meta, this__14375.cnt - 1, this__14375.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__14375.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__14376 = this__14375.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__14376 === this__14375.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__14375.meta, this__14375.cnt - 1, new_root__14376, this__14375.has_nil_QMARK_, this__14375.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__14378 = ks.length;
  var i__14379 = 0;
  var out__14380 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__14379 < len__14378) {
      var G__14381 = i__14379 + 1;
      var G__14382 = cljs.core.assoc_BANG_.call(null, out__14380, ks[i__14379], vs[i__14379]);
      i__14379 = G__14381;
      out__14380 = G__14382;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__14380)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__14383 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__14384 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__14385 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__14386 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__14387 = this;
  if(k == null) {
    if(this__14387.has_nil_QMARK_) {
      return this__14387.nil_val
    }else {
      return null
    }
  }else {
    if(this__14387.root == null) {
      return null
    }else {
      return this__14387.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__14388 = this;
  if(k == null) {
    if(this__14388.has_nil_QMARK_) {
      return this__14388.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__14388.root == null) {
      return not_found
    }else {
      return this__14388.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14389 = this;
  if(this__14389.edit) {
    return this__14389.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__14390 = this;
  var tcoll__14391 = this;
  if(this__14390.edit) {
    if(function() {
      var G__14392__14393 = o;
      if(G__14392__14393) {
        if(function() {
          var or__3824__auto____14394 = G__14392__14393.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____14394) {
            return or__3824__auto____14394
          }else {
            return G__14392__14393.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__14392__14393.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__14392__14393)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__14392__14393)
      }
    }()) {
      return tcoll__14391.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__14395 = cljs.core.seq.call(null, o);
      var tcoll__14396 = tcoll__14391;
      while(true) {
        var temp__3971__auto____14397 = cljs.core.first.call(null, es__14395);
        if(cljs.core.truth_(temp__3971__auto____14397)) {
          var e__14398 = temp__3971__auto____14397;
          var G__14409 = cljs.core.next.call(null, es__14395);
          var G__14410 = tcoll__14396.assoc_BANG_(cljs.core.key.call(null, e__14398), cljs.core.val.call(null, e__14398));
          es__14395 = G__14409;
          tcoll__14396 = G__14410;
          continue
        }else {
          return tcoll__14396
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__14399 = this;
  var tcoll__14400 = this;
  if(this__14399.edit) {
    if(k == null) {
      if(this__14399.nil_val === v) {
      }else {
        this__14399.nil_val = v
      }
      if(this__14399.has_nil_QMARK_) {
      }else {
        this__14399.count = this__14399.count + 1;
        this__14399.has_nil_QMARK_ = true
      }
      return tcoll__14400
    }else {
      var added_leaf_QMARK___14401 = new cljs.core.Box(false);
      var node__14402 = (this__14399.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__14399.root).inode_assoc_BANG_(this__14399.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___14401);
      if(node__14402 === this__14399.root) {
      }else {
        this__14399.root = node__14402
      }
      if(added_leaf_QMARK___14401.val) {
        this__14399.count = this__14399.count + 1
      }else {
      }
      return tcoll__14400
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__14403 = this;
  var tcoll__14404 = this;
  if(this__14403.edit) {
    if(k == null) {
      if(this__14403.has_nil_QMARK_) {
        this__14403.has_nil_QMARK_ = false;
        this__14403.nil_val = null;
        this__14403.count = this__14403.count - 1;
        return tcoll__14404
      }else {
        return tcoll__14404
      }
    }else {
      if(this__14403.root == null) {
        return tcoll__14404
      }else {
        var removed_leaf_QMARK___14405 = new cljs.core.Box(false);
        var node__14406 = this__14403.root.inode_without_BANG_(this__14403.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___14405);
        if(node__14406 === this__14403.root) {
        }else {
          this__14403.root = node__14406
        }
        if(cljs.core.truth_(removed_leaf_QMARK___14405[0])) {
          this__14403.count = this__14403.count - 1
        }else {
        }
        return tcoll__14404
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__14407 = this;
  var tcoll__14408 = this;
  if(this__14407.edit) {
    this__14407.edit = null;
    return new cljs.core.PersistentHashMap(null, this__14407.count, this__14407.root, this__14407.has_nil_QMARK_, this__14407.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__14413 = node;
  var stack__14414 = stack;
  while(true) {
    if(!(t__14413 == null)) {
      var G__14415 = ascending_QMARK_ ? t__14413.left : t__14413.right;
      var G__14416 = cljs.core.conj.call(null, stack__14414, t__14413);
      t__14413 = G__14415;
      stack__14414 = G__14416;
      continue
    }else {
      return stack__14414
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14417 = this;
  var h__2093__auto____14418 = this__14417.__hash;
  if(!(h__2093__auto____14418 == null)) {
    return h__2093__auto____14418
  }else {
    var h__2093__auto____14419 = cljs.core.hash_coll.call(null, coll);
    this__14417.__hash = h__2093__auto____14419;
    return h__2093__auto____14419
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14420 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__14421 = this;
  var this__14422 = this;
  return cljs.core.pr_str.call(null, this__14422)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__14423 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14424 = this;
  if(this__14424.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__14424.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__14425 = this;
  return cljs.core.peek.call(null, this__14425.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__14426 = this;
  var t__14427 = cljs.core.first.call(null, this__14426.stack);
  var next_stack__14428 = cljs.core.tree_map_seq_push.call(null, this__14426.ascending_QMARK_ ? t__14427.right : t__14427.left, cljs.core.next.call(null, this__14426.stack), this__14426.ascending_QMARK_);
  if(!(next_stack__14428 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__14428, this__14426.ascending_QMARK_, this__14426.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14429 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14430 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__14430.stack, this__14430.ascending_QMARK_, this__14430.cnt, this__14430.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14431 = this;
  return this__14431.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____14433 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____14433) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____14433
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____14435 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____14435) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____14435
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__14439 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__14439)) {
    return cljs.core.deref.call(null, init__14439)
  }else {
    var init__14440 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__14439) : init__14439;
    if(cljs.core.reduced_QMARK_.call(null, init__14440)) {
      return cljs.core.deref.call(null, init__14440)
    }else {
      var init__14441 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__14440) : init__14440;
      if(cljs.core.reduced_QMARK_.call(null, init__14441)) {
        return cljs.core.deref.call(null, init__14441)
      }else {
        return init__14441
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14444 = this;
  var h__2093__auto____14445 = this__14444.__hash;
  if(!(h__2093__auto____14445 == null)) {
    return h__2093__auto____14445
  }else {
    var h__2093__auto____14446 = cljs.core.hash_coll.call(null, coll);
    this__14444.__hash = h__2093__auto____14446;
    return h__2093__auto____14446
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__14447 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__14448 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__14449 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__14449.key, this__14449.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__14497 = null;
  var G__14497__2 = function(this_sym14450, k) {
    var this__14452 = this;
    var this_sym14450__14453 = this;
    var node__14454 = this_sym14450__14453;
    return node__14454.cljs$core$ILookup$_lookup$arity$2(node__14454, k)
  };
  var G__14497__3 = function(this_sym14451, k, not_found) {
    var this__14452 = this;
    var this_sym14451__14455 = this;
    var node__14456 = this_sym14451__14455;
    return node__14456.cljs$core$ILookup$_lookup$arity$3(node__14456, k, not_found)
  };
  G__14497 = function(this_sym14451, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14497__2.call(this, this_sym14451, k);
      case 3:
        return G__14497__3.call(this, this_sym14451, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14497
}();
cljs.core.BlackNode.prototype.apply = function(this_sym14442, args14443) {
  var this__14457 = this;
  return this_sym14442.call.apply(this_sym14442, [this_sym14442].concat(args14443.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__14458 = this;
  return cljs.core.PersistentVector.fromArray([this__14458.key, this__14458.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__14459 = this;
  return this__14459.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__14460 = this;
  return this__14460.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__14461 = this;
  var node__14462 = this;
  return ins.balance_right(node__14462)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__14463 = this;
  var node__14464 = this;
  return new cljs.core.RedNode(this__14463.key, this__14463.val, this__14463.left, this__14463.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__14465 = this;
  var node__14466 = this;
  return cljs.core.balance_right_del.call(null, this__14465.key, this__14465.val, this__14465.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__14467 = this;
  var node__14468 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__14469 = this;
  var node__14470 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__14470, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__14471 = this;
  var node__14472 = this;
  return cljs.core.balance_left_del.call(null, this__14471.key, this__14471.val, del, this__14471.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__14473 = this;
  var node__14474 = this;
  return ins.balance_left(node__14474)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__14475 = this;
  var node__14476 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__14476, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__14498 = null;
  var G__14498__0 = function() {
    var this__14477 = this;
    var this__14479 = this;
    return cljs.core.pr_str.call(null, this__14479)
  };
  G__14498 = function() {
    switch(arguments.length) {
      case 0:
        return G__14498__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14498
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__14480 = this;
  var node__14481 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__14481, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__14482 = this;
  var node__14483 = this;
  return node__14483
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__14484 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__14485 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__14486 = this;
  return cljs.core.list.call(null, this__14486.key, this__14486.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__14487 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__14488 = this;
  return this__14488.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__14489 = this;
  return cljs.core.PersistentVector.fromArray([this__14489.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__14490 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__14490.key, this__14490.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14491 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__14492 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__14492.key, this__14492.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__14493 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__14494 = this;
  if(n === 0) {
    return this__14494.key
  }else {
    if(n === 1) {
      return this__14494.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__14495 = this;
  if(n === 0) {
    return this__14495.key
  }else {
    if(n === 1) {
      return this__14495.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__14496 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14501 = this;
  var h__2093__auto____14502 = this__14501.__hash;
  if(!(h__2093__auto____14502 == null)) {
    return h__2093__auto____14502
  }else {
    var h__2093__auto____14503 = cljs.core.hash_coll.call(null, coll);
    this__14501.__hash = h__2093__auto____14503;
    return h__2093__auto____14503
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__14504 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__14505 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__14506 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__14506.key, this__14506.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__14554 = null;
  var G__14554__2 = function(this_sym14507, k) {
    var this__14509 = this;
    var this_sym14507__14510 = this;
    var node__14511 = this_sym14507__14510;
    return node__14511.cljs$core$ILookup$_lookup$arity$2(node__14511, k)
  };
  var G__14554__3 = function(this_sym14508, k, not_found) {
    var this__14509 = this;
    var this_sym14508__14512 = this;
    var node__14513 = this_sym14508__14512;
    return node__14513.cljs$core$ILookup$_lookup$arity$3(node__14513, k, not_found)
  };
  G__14554 = function(this_sym14508, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14554__2.call(this, this_sym14508, k);
      case 3:
        return G__14554__3.call(this, this_sym14508, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14554
}();
cljs.core.RedNode.prototype.apply = function(this_sym14499, args14500) {
  var this__14514 = this;
  return this_sym14499.call.apply(this_sym14499, [this_sym14499].concat(args14500.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__14515 = this;
  return cljs.core.PersistentVector.fromArray([this__14515.key, this__14515.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__14516 = this;
  return this__14516.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__14517 = this;
  return this__14517.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__14518 = this;
  var node__14519 = this;
  return new cljs.core.RedNode(this__14518.key, this__14518.val, this__14518.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__14520 = this;
  var node__14521 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__14522 = this;
  var node__14523 = this;
  return new cljs.core.RedNode(this__14522.key, this__14522.val, this__14522.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__14524 = this;
  var node__14525 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__14526 = this;
  var node__14527 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__14527, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__14528 = this;
  var node__14529 = this;
  return new cljs.core.RedNode(this__14528.key, this__14528.val, del, this__14528.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__14530 = this;
  var node__14531 = this;
  return new cljs.core.RedNode(this__14530.key, this__14530.val, ins, this__14530.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__14532 = this;
  var node__14533 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__14532.left)) {
    return new cljs.core.RedNode(this__14532.key, this__14532.val, this__14532.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__14532.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__14532.right)) {
      return new cljs.core.RedNode(this__14532.right.key, this__14532.right.val, new cljs.core.BlackNode(this__14532.key, this__14532.val, this__14532.left, this__14532.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__14532.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__14533, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__14555 = null;
  var G__14555__0 = function() {
    var this__14534 = this;
    var this__14536 = this;
    return cljs.core.pr_str.call(null, this__14536)
  };
  G__14555 = function() {
    switch(arguments.length) {
      case 0:
        return G__14555__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14555
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__14537 = this;
  var node__14538 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__14537.right)) {
    return new cljs.core.RedNode(this__14537.key, this__14537.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__14537.left, null), this__14537.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__14537.left)) {
      return new cljs.core.RedNode(this__14537.left.key, this__14537.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__14537.left.left, null), new cljs.core.BlackNode(this__14537.key, this__14537.val, this__14537.left.right, this__14537.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__14538, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__14539 = this;
  var node__14540 = this;
  return new cljs.core.BlackNode(this__14539.key, this__14539.val, this__14539.left, this__14539.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__14541 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__14542 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__14543 = this;
  return cljs.core.list.call(null, this__14543.key, this__14543.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__14544 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__14545 = this;
  return this__14545.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__14546 = this;
  return cljs.core.PersistentVector.fromArray([this__14546.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__14547 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__14547.key, this__14547.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14548 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__14549 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__14549.key, this__14549.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__14550 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__14551 = this;
  if(n === 0) {
    return this__14551.key
  }else {
    if(n === 1) {
      return this__14551.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__14552 = this;
  if(n === 0) {
    return this__14552.key
  }else {
    if(n === 1) {
      return this__14552.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__14553 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__14559 = comp.call(null, k, tree.key);
    if(c__14559 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__14559 < 0) {
        var ins__14560 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__14560 == null)) {
          return tree.add_left(ins__14560)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__14561 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__14561 == null)) {
            return tree.add_right(ins__14561)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__14564 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__14564)) {
            return new cljs.core.RedNode(app__14564.key, app__14564.val, new cljs.core.RedNode(left.key, left.val, left.left, app__14564.left, null), new cljs.core.RedNode(right.key, right.val, app__14564.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__14564, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__14565 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__14565)) {
              return new cljs.core.RedNode(app__14565.key, app__14565.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__14565.left, null), new cljs.core.BlackNode(right.key, right.val, app__14565.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__14565, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__14571 = comp.call(null, k, tree.key);
    if(c__14571 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__14571 < 0) {
        var del__14572 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____14573 = !(del__14572 == null);
          if(or__3824__auto____14573) {
            return or__3824__auto____14573
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__14572, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__14572, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__14574 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____14575 = !(del__14574 == null);
            if(or__3824__auto____14575) {
              return or__3824__auto____14575
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__14574)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__14574, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__14578 = tree.key;
  var c__14579 = comp.call(null, k, tk__14578);
  if(c__14579 === 0) {
    return tree.replace(tk__14578, v, tree.left, tree.right)
  }else {
    if(c__14579 < 0) {
      return tree.replace(tk__14578, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__14578, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14582 = this;
  var h__2093__auto____14583 = this__14582.__hash;
  if(!(h__2093__auto____14583 == null)) {
    return h__2093__auto____14583
  }else {
    var h__2093__auto____14584 = cljs.core.hash_imap.call(null, coll);
    this__14582.__hash = h__2093__auto____14584;
    return h__2093__auto____14584
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__14585 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__14586 = this;
  var n__14587 = coll.entry_at(k);
  if(!(n__14587 == null)) {
    return n__14587.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__14588 = this;
  var found__14589 = [null];
  var t__14590 = cljs.core.tree_map_add.call(null, this__14588.comp, this__14588.tree, k, v, found__14589);
  if(t__14590 == null) {
    var found_node__14591 = cljs.core.nth.call(null, found__14589, 0);
    if(cljs.core._EQ_.call(null, v, found_node__14591.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__14588.comp, cljs.core.tree_map_replace.call(null, this__14588.comp, this__14588.tree, k, v), this__14588.cnt, this__14588.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__14588.comp, t__14590.blacken(), this__14588.cnt + 1, this__14588.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__14592 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__14626 = null;
  var G__14626__2 = function(this_sym14593, k) {
    var this__14595 = this;
    var this_sym14593__14596 = this;
    var coll__14597 = this_sym14593__14596;
    return coll__14597.cljs$core$ILookup$_lookup$arity$2(coll__14597, k)
  };
  var G__14626__3 = function(this_sym14594, k, not_found) {
    var this__14595 = this;
    var this_sym14594__14598 = this;
    var coll__14599 = this_sym14594__14598;
    return coll__14599.cljs$core$ILookup$_lookup$arity$3(coll__14599, k, not_found)
  };
  G__14626 = function(this_sym14594, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14626__2.call(this, this_sym14594, k);
      case 3:
        return G__14626__3.call(this, this_sym14594, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14626
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym14580, args14581) {
  var this__14600 = this;
  return this_sym14580.call.apply(this_sym14580, [this_sym14580].concat(args14581.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__14601 = this;
  if(!(this__14601.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__14601.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__14602 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__14603 = this;
  if(this__14603.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__14603.tree, false, this__14603.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__14604 = this;
  var this__14605 = this;
  return cljs.core.pr_str.call(null, this__14605)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__14606 = this;
  var coll__14607 = this;
  var t__14608 = this__14606.tree;
  while(true) {
    if(!(t__14608 == null)) {
      var c__14609 = this__14606.comp.call(null, k, t__14608.key);
      if(c__14609 === 0) {
        return t__14608
      }else {
        if(c__14609 < 0) {
          var G__14627 = t__14608.left;
          t__14608 = G__14627;
          continue
        }else {
          if("\ufdd0'else") {
            var G__14628 = t__14608.right;
            t__14608 = G__14628;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__14610 = this;
  if(this__14610.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__14610.tree, ascending_QMARK_, this__14610.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__14611 = this;
  if(this__14611.cnt > 0) {
    var stack__14612 = null;
    var t__14613 = this__14611.tree;
    while(true) {
      if(!(t__14613 == null)) {
        var c__14614 = this__14611.comp.call(null, k, t__14613.key);
        if(c__14614 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__14612, t__14613), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__14614 < 0) {
              var G__14629 = cljs.core.conj.call(null, stack__14612, t__14613);
              var G__14630 = t__14613.left;
              stack__14612 = G__14629;
              t__14613 = G__14630;
              continue
            }else {
              var G__14631 = stack__14612;
              var G__14632 = t__14613.right;
              stack__14612 = G__14631;
              t__14613 = G__14632;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__14614 > 0) {
                var G__14633 = cljs.core.conj.call(null, stack__14612, t__14613);
                var G__14634 = t__14613.right;
                stack__14612 = G__14633;
                t__14613 = G__14634;
                continue
              }else {
                var G__14635 = stack__14612;
                var G__14636 = t__14613.left;
                stack__14612 = G__14635;
                t__14613 = G__14636;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__14612 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__14612, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__14615 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__14616 = this;
  return this__14616.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14617 = this;
  if(this__14617.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__14617.tree, true, this__14617.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14618 = this;
  return this__14618.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14619 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14620 = this;
  return new cljs.core.PersistentTreeMap(this__14620.comp, this__14620.tree, this__14620.cnt, meta, this__14620.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14621 = this;
  return this__14621.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14622 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__14622.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__14623 = this;
  var found__14624 = [null];
  var t__14625 = cljs.core.tree_map_remove.call(null, this__14623.comp, this__14623.tree, k, found__14624);
  if(t__14625 == null) {
    if(cljs.core.nth.call(null, found__14624, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__14623.comp, null, 0, this__14623.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__14623.comp, t__14625.blacken(), this__14623.cnt - 1, this__14623.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__14639 = cljs.core.seq.call(null, keyvals);
    var out__14640 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__14639) {
        var G__14641 = cljs.core.nnext.call(null, in__14639);
        var G__14642 = cljs.core.assoc_BANG_.call(null, out__14640, cljs.core.first.call(null, in__14639), cljs.core.second.call(null, in__14639));
        in__14639 = G__14641;
        out__14640 = G__14642;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__14640)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__14643) {
    var keyvals = cljs.core.seq(arglist__14643);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__14644) {
    var keyvals = cljs.core.seq(arglist__14644);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__14648 = [];
    var obj__14649 = {};
    var kvs__14650 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__14650) {
        ks__14648.push(cljs.core.first.call(null, kvs__14650));
        obj__14649[cljs.core.first.call(null, kvs__14650)] = cljs.core.second.call(null, kvs__14650);
        var G__14651 = cljs.core.nnext.call(null, kvs__14650);
        kvs__14650 = G__14651;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__14648, obj__14649)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__14652) {
    var keyvals = cljs.core.seq(arglist__14652);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__14655 = cljs.core.seq.call(null, keyvals);
    var out__14656 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__14655) {
        var G__14657 = cljs.core.nnext.call(null, in__14655);
        var G__14658 = cljs.core.assoc.call(null, out__14656, cljs.core.first.call(null, in__14655), cljs.core.second.call(null, in__14655));
        in__14655 = G__14657;
        out__14656 = G__14658;
        continue
      }else {
        return out__14656
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__14659) {
    var keyvals = cljs.core.seq(arglist__14659);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__14662 = cljs.core.seq.call(null, keyvals);
    var out__14663 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__14662) {
        var G__14664 = cljs.core.nnext.call(null, in__14662);
        var G__14665 = cljs.core.assoc.call(null, out__14663, cljs.core.first.call(null, in__14662), cljs.core.second.call(null, in__14662));
        in__14662 = G__14664;
        out__14663 = G__14665;
        continue
      }else {
        return out__14663
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__14666) {
    var comparator = cljs.core.first(arglist__14666);
    var keyvals = cljs.core.rest(arglist__14666);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__14667_SHARP_, p2__14668_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____14670 = p1__14667_SHARP_;
          if(cljs.core.truth_(or__3824__auto____14670)) {
            return or__3824__auto____14670
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__14668_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__14671) {
    var maps = cljs.core.seq(arglist__14671);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__14679 = function(m, e) {
        var k__14677 = cljs.core.first.call(null, e);
        var v__14678 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__14677)) {
          return cljs.core.assoc.call(null, m, k__14677, f.call(null, cljs.core._lookup.call(null, m, k__14677, null), v__14678))
        }else {
          return cljs.core.assoc.call(null, m, k__14677, v__14678)
        }
      };
      var merge2__14681 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__14679, function() {
          var or__3824__auto____14680 = m1;
          if(cljs.core.truth_(or__3824__auto____14680)) {
            return or__3824__auto____14680
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__14681, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__14682) {
    var f = cljs.core.first(arglist__14682);
    var maps = cljs.core.rest(arglist__14682);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__14687 = cljs.core.ObjMap.EMPTY;
  var keys__14688 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__14688) {
      var key__14689 = cljs.core.first.call(null, keys__14688);
      var entry__14690 = cljs.core._lookup.call(null, map, key__14689, "\ufdd0'cljs.core/not-found");
      var G__14691 = cljs.core.not_EQ_.call(null, entry__14690, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__14687, key__14689, entry__14690) : ret__14687;
      var G__14692 = cljs.core.next.call(null, keys__14688);
      ret__14687 = G__14691;
      keys__14688 = G__14692;
      continue
    }else {
      return ret__14687
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__14696 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__14696.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14697 = this;
  var h__2093__auto____14698 = this__14697.__hash;
  if(!(h__2093__auto____14698 == null)) {
    return h__2093__auto____14698
  }else {
    var h__2093__auto____14699 = cljs.core.hash_iset.call(null, coll);
    this__14697.__hash = h__2093__auto____14699;
    return h__2093__auto____14699
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__14700 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__14701 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__14701.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__14722 = null;
  var G__14722__2 = function(this_sym14702, k) {
    var this__14704 = this;
    var this_sym14702__14705 = this;
    var coll__14706 = this_sym14702__14705;
    return coll__14706.cljs$core$ILookup$_lookup$arity$2(coll__14706, k)
  };
  var G__14722__3 = function(this_sym14703, k, not_found) {
    var this__14704 = this;
    var this_sym14703__14707 = this;
    var coll__14708 = this_sym14703__14707;
    return coll__14708.cljs$core$ILookup$_lookup$arity$3(coll__14708, k, not_found)
  };
  G__14722 = function(this_sym14703, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14722__2.call(this, this_sym14703, k);
      case 3:
        return G__14722__3.call(this, this_sym14703, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14722
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym14694, args14695) {
  var this__14709 = this;
  return this_sym14694.call.apply(this_sym14694, [this_sym14694].concat(args14695.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14710 = this;
  return new cljs.core.PersistentHashSet(this__14710.meta, cljs.core.assoc.call(null, this__14710.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__14711 = this;
  var this__14712 = this;
  return cljs.core.pr_str.call(null, this__14712)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14713 = this;
  return cljs.core.keys.call(null, this__14713.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__14714 = this;
  return new cljs.core.PersistentHashSet(this__14714.meta, cljs.core.dissoc.call(null, this__14714.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14715 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14716 = this;
  var and__3822__auto____14717 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____14717) {
    var and__3822__auto____14718 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____14718) {
      return cljs.core.every_QMARK_.call(null, function(p1__14693_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__14693_SHARP_)
      }, other)
    }else {
      return and__3822__auto____14718
    }
  }else {
    return and__3822__auto____14717
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14719 = this;
  return new cljs.core.PersistentHashSet(meta, this__14719.hash_map, this__14719.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14720 = this;
  return this__14720.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14721 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__14721.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__14723 = cljs.core.count.call(null, items);
  var i__14724 = 0;
  var out__14725 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__14724 < len__14723) {
      var G__14726 = i__14724 + 1;
      var G__14727 = cljs.core.conj_BANG_.call(null, out__14725, items[i__14724]);
      i__14724 = G__14726;
      out__14725 = G__14727;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__14725)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__14745 = null;
  var G__14745__2 = function(this_sym14731, k) {
    var this__14733 = this;
    var this_sym14731__14734 = this;
    var tcoll__14735 = this_sym14731__14734;
    if(cljs.core._lookup.call(null, this__14733.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__14745__3 = function(this_sym14732, k, not_found) {
    var this__14733 = this;
    var this_sym14732__14736 = this;
    var tcoll__14737 = this_sym14732__14736;
    if(cljs.core._lookup.call(null, this__14733.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__14745 = function(this_sym14732, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14745__2.call(this, this_sym14732, k);
      case 3:
        return G__14745__3.call(this, this_sym14732, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14745
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym14729, args14730) {
  var this__14738 = this;
  return this_sym14729.call.apply(this_sym14729, [this_sym14729].concat(args14730.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__14739 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__14740 = this;
  if(cljs.core._lookup.call(null, this__14740.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__14741 = this;
  return cljs.core.count.call(null, this__14741.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__14742 = this;
  this__14742.transient_map = cljs.core.dissoc_BANG_.call(null, this__14742.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__14743 = this;
  this__14743.transient_map = cljs.core.assoc_BANG_.call(null, this__14743.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__14744 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__14744.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14748 = this;
  var h__2093__auto____14749 = this__14748.__hash;
  if(!(h__2093__auto____14749 == null)) {
    return h__2093__auto____14749
  }else {
    var h__2093__auto____14750 = cljs.core.hash_iset.call(null, coll);
    this__14748.__hash = h__2093__auto____14750;
    return h__2093__auto____14750
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__14751 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__14752 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__14752.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__14778 = null;
  var G__14778__2 = function(this_sym14753, k) {
    var this__14755 = this;
    var this_sym14753__14756 = this;
    var coll__14757 = this_sym14753__14756;
    return coll__14757.cljs$core$ILookup$_lookup$arity$2(coll__14757, k)
  };
  var G__14778__3 = function(this_sym14754, k, not_found) {
    var this__14755 = this;
    var this_sym14754__14758 = this;
    var coll__14759 = this_sym14754__14758;
    return coll__14759.cljs$core$ILookup$_lookup$arity$3(coll__14759, k, not_found)
  };
  G__14778 = function(this_sym14754, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14778__2.call(this, this_sym14754, k);
      case 3:
        return G__14778__3.call(this, this_sym14754, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14778
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym14746, args14747) {
  var this__14760 = this;
  return this_sym14746.call.apply(this_sym14746, [this_sym14746].concat(args14747.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14761 = this;
  return new cljs.core.PersistentTreeSet(this__14761.meta, cljs.core.assoc.call(null, this__14761.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__14762 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__14762.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__14763 = this;
  var this__14764 = this;
  return cljs.core.pr_str.call(null, this__14764)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__14765 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__14765.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__14766 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__14766.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__14767 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__14768 = this;
  return cljs.core._comparator.call(null, this__14768.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14769 = this;
  return cljs.core.keys.call(null, this__14769.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__14770 = this;
  return new cljs.core.PersistentTreeSet(this__14770.meta, cljs.core.dissoc.call(null, this__14770.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14771 = this;
  return cljs.core.count.call(null, this__14771.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14772 = this;
  var and__3822__auto____14773 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____14773) {
    var and__3822__auto____14774 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____14774) {
      return cljs.core.every_QMARK_.call(null, function(p1__14728_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__14728_SHARP_)
      }, other)
    }else {
      return and__3822__auto____14774
    }
  }else {
    return and__3822__auto____14773
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14775 = this;
  return new cljs.core.PersistentTreeSet(meta, this__14775.tree_map, this__14775.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14776 = this;
  return this__14776.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14777 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__14777.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__14783__delegate = function(keys) {
      var in__14781 = cljs.core.seq.call(null, keys);
      var out__14782 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__14781)) {
          var G__14784 = cljs.core.next.call(null, in__14781);
          var G__14785 = cljs.core.conj_BANG_.call(null, out__14782, cljs.core.first.call(null, in__14781));
          in__14781 = G__14784;
          out__14782 = G__14785;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__14782)
        }
        break
      }
    };
    var G__14783 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__14783__delegate.call(this, keys)
    };
    G__14783.cljs$lang$maxFixedArity = 0;
    G__14783.cljs$lang$applyTo = function(arglist__14786) {
      var keys = cljs.core.seq(arglist__14786);
      return G__14783__delegate(keys)
    };
    G__14783.cljs$lang$arity$variadic = G__14783__delegate;
    return G__14783
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__14787) {
    var keys = cljs.core.seq(arglist__14787);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__14789) {
    var comparator = cljs.core.first(arglist__14789);
    var keys = cljs.core.rest(arglist__14789);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__14795 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____14796 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____14796)) {
        var e__14797 = temp__3971__auto____14796;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__14797))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__14795, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__14788_SHARP_) {
      var temp__3971__auto____14798 = cljs.core.find.call(null, smap, p1__14788_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____14798)) {
        var e__14799 = temp__3971__auto____14798;
        return cljs.core.second.call(null, e__14799)
      }else {
        return p1__14788_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__14829 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__14822, seen) {
        while(true) {
          var vec__14823__14824 = p__14822;
          var f__14825 = cljs.core.nth.call(null, vec__14823__14824, 0, null);
          var xs__14826 = vec__14823__14824;
          var temp__3974__auto____14827 = cljs.core.seq.call(null, xs__14826);
          if(temp__3974__auto____14827) {
            var s__14828 = temp__3974__auto____14827;
            if(cljs.core.contains_QMARK_.call(null, seen, f__14825)) {
              var G__14830 = cljs.core.rest.call(null, s__14828);
              var G__14831 = seen;
              p__14822 = G__14830;
              seen = G__14831;
              continue
            }else {
              return cljs.core.cons.call(null, f__14825, step.call(null, cljs.core.rest.call(null, s__14828), cljs.core.conj.call(null, seen, f__14825)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__14829.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__14834 = cljs.core.PersistentVector.EMPTY;
  var s__14835 = s;
  while(true) {
    if(cljs.core.next.call(null, s__14835)) {
      var G__14836 = cljs.core.conj.call(null, ret__14834, cljs.core.first.call(null, s__14835));
      var G__14837 = cljs.core.next.call(null, s__14835);
      ret__14834 = G__14836;
      s__14835 = G__14837;
      continue
    }else {
      return cljs.core.seq.call(null, ret__14834)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____14840 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____14840) {
        return or__3824__auto____14840
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__14841 = x.lastIndexOf("/");
      if(i__14841 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__14841 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____14844 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____14844) {
      return or__3824__auto____14844
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__14845 = x.lastIndexOf("/");
    if(i__14845 > -1) {
      return cljs.core.subs.call(null, x, 2, i__14845)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__14852 = cljs.core.ObjMap.EMPTY;
  var ks__14853 = cljs.core.seq.call(null, keys);
  var vs__14854 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____14855 = ks__14853;
      if(and__3822__auto____14855) {
        return vs__14854
      }else {
        return and__3822__auto____14855
      }
    }()) {
      var G__14856 = cljs.core.assoc.call(null, map__14852, cljs.core.first.call(null, ks__14853), cljs.core.first.call(null, vs__14854));
      var G__14857 = cljs.core.next.call(null, ks__14853);
      var G__14858 = cljs.core.next.call(null, vs__14854);
      map__14852 = G__14856;
      ks__14853 = G__14857;
      vs__14854 = G__14858;
      continue
    }else {
      return map__14852
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__14861__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__14846_SHARP_, p2__14847_SHARP_) {
        return max_key.call(null, k, p1__14846_SHARP_, p2__14847_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__14861 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14861__delegate.call(this, k, x, y, more)
    };
    G__14861.cljs$lang$maxFixedArity = 3;
    G__14861.cljs$lang$applyTo = function(arglist__14862) {
      var k = cljs.core.first(arglist__14862);
      var x = cljs.core.first(cljs.core.next(arglist__14862));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14862)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__14862)));
      return G__14861__delegate(k, x, y, more)
    };
    G__14861.cljs$lang$arity$variadic = G__14861__delegate;
    return G__14861
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__14863__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__14859_SHARP_, p2__14860_SHARP_) {
        return min_key.call(null, k, p1__14859_SHARP_, p2__14860_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__14863 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14863__delegate.call(this, k, x, y, more)
    };
    G__14863.cljs$lang$maxFixedArity = 3;
    G__14863.cljs$lang$applyTo = function(arglist__14864) {
      var k = cljs.core.first(arglist__14864);
      var x = cljs.core.first(cljs.core.next(arglist__14864));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14864)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__14864)));
      return G__14863__delegate(k, x, y, more)
    };
    G__14863.cljs$lang$arity$variadic = G__14863__delegate;
    return G__14863
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____14867 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____14867) {
        var s__14868 = temp__3974__auto____14867;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__14868), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__14868)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____14871 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____14871) {
      var s__14872 = temp__3974__auto____14871;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__14872)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__14872), take_while.call(null, pred, cljs.core.rest.call(null, s__14872)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__14874 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__14874.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__14886 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____14887 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____14887)) {
        var vec__14888__14889 = temp__3974__auto____14887;
        var e__14890 = cljs.core.nth.call(null, vec__14888__14889, 0, null);
        var s__14891 = vec__14888__14889;
        if(cljs.core.truth_(include__14886.call(null, e__14890))) {
          return s__14891
        }else {
          return cljs.core.next.call(null, s__14891)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__14886, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____14892 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____14892)) {
      var vec__14893__14894 = temp__3974__auto____14892;
      var e__14895 = cljs.core.nth.call(null, vec__14893__14894, 0, null);
      var s__14896 = vec__14893__14894;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__14895)) ? s__14896 : cljs.core.next.call(null, s__14896))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__14908 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____14909 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____14909)) {
        var vec__14910__14911 = temp__3974__auto____14909;
        var e__14912 = cljs.core.nth.call(null, vec__14910__14911, 0, null);
        var s__14913 = vec__14910__14911;
        if(cljs.core.truth_(include__14908.call(null, e__14912))) {
          return s__14913
        }else {
          return cljs.core.next.call(null, s__14913)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__14908, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____14914 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____14914)) {
      var vec__14915__14916 = temp__3974__auto____14914;
      var e__14917 = cljs.core.nth.call(null, vec__14915__14916, 0, null);
      var s__14918 = vec__14915__14916;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__14917)) ? s__14918 : cljs.core.next.call(null, s__14918))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__14919 = this;
  var h__2093__auto____14920 = this__14919.__hash;
  if(!(h__2093__auto____14920 == null)) {
    return h__2093__auto____14920
  }else {
    var h__2093__auto____14921 = cljs.core.hash_coll.call(null, rng);
    this__14919.__hash = h__2093__auto____14921;
    return h__2093__auto____14921
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__14922 = this;
  if(this__14922.step > 0) {
    if(this__14922.start + this__14922.step < this__14922.end) {
      return new cljs.core.Range(this__14922.meta, this__14922.start + this__14922.step, this__14922.end, this__14922.step, null)
    }else {
      return null
    }
  }else {
    if(this__14922.start + this__14922.step > this__14922.end) {
      return new cljs.core.Range(this__14922.meta, this__14922.start + this__14922.step, this__14922.end, this__14922.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__14923 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__14924 = this;
  var this__14925 = this;
  return cljs.core.pr_str.call(null, this__14925)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__14926 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__14927 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__14928 = this;
  if(this__14928.step > 0) {
    if(this__14928.start < this__14928.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__14928.start > this__14928.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__14929 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__14929.end - this__14929.start) / this__14929.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__14930 = this;
  return this__14930.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__14931 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__14931.meta, this__14931.start + this__14931.step, this__14931.end, this__14931.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__14932 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__14933 = this;
  return new cljs.core.Range(meta, this__14933.start, this__14933.end, this__14933.step, this__14933.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__14934 = this;
  return this__14934.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__14935 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__14935.start + n * this__14935.step
  }else {
    if(function() {
      var and__3822__auto____14936 = this__14935.start > this__14935.end;
      if(and__3822__auto____14936) {
        return this__14935.step === 0
      }else {
        return and__3822__auto____14936
      }
    }()) {
      return this__14935.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__14937 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__14937.start + n * this__14937.step
  }else {
    if(function() {
      var and__3822__auto____14938 = this__14937.start > this__14937.end;
      if(and__3822__auto____14938) {
        return this__14937.step === 0
      }else {
        return and__3822__auto____14938
      }
    }()) {
      return this__14937.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__14939 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__14939.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____14942 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____14942) {
      var s__14943 = temp__3974__auto____14942;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__14943), take_nth.call(null, n, cljs.core.drop.call(null, n, s__14943)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____14950 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____14950) {
      var s__14951 = temp__3974__auto____14950;
      var fst__14952 = cljs.core.first.call(null, s__14951);
      var fv__14953 = f.call(null, fst__14952);
      var run__14954 = cljs.core.cons.call(null, fst__14952, cljs.core.take_while.call(null, function(p1__14944_SHARP_) {
        return cljs.core._EQ_.call(null, fv__14953, f.call(null, p1__14944_SHARP_))
      }, cljs.core.next.call(null, s__14951)));
      return cljs.core.cons.call(null, run__14954, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__14954), s__14951))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____14969 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____14969) {
        var s__14970 = temp__3971__auto____14969;
        return reductions.call(null, f, cljs.core.first.call(null, s__14970), cljs.core.rest.call(null, s__14970))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____14971 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____14971) {
        var s__14972 = temp__3974__auto____14971;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__14972)), cljs.core.rest.call(null, s__14972))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__14975 = null;
      var G__14975__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__14975__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__14975__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__14975__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__14975__4 = function() {
        var G__14976__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__14976 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14976__delegate.call(this, x, y, z, args)
        };
        G__14976.cljs$lang$maxFixedArity = 3;
        G__14976.cljs$lang$applyTo = function(arglist__14977) {
          var x = cljs.core.first(arglist__14977);
          var y = cljs.core.first(cljs.core.next(arglist__14977));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14977)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__14977)));
          return G__14976__delegate(x, y, z, args)
        };
        G__14976.cljs$lang$arity$variadic = G__14976__delegate;
        return G__14976
      }();
      G__14975 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14975__0.call(this);
          case 1:
            return G__14975__1.call(this, x);
          case 2:
            return G__14975__2.call(this, x, y);
          case 3:
            return G__14975__3.call(this, x, y, z);
          default:
            return G__14975__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__14975.cljs$lang$maxFixedArity = 3;
      G__14975.cljs$lang$applyTo = G__14975__4.cljs$lang$applyTo;
      return G__14975
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__14978 = null;
      var G__14978__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__14978__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__14978__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__14978__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__14978__4 = function() {
        var G__14979__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__14979 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14979__delegate.call(this, x, y, z, args)
        };
        G__14979.cljs$lang$maxFixedArity = 3;
        G__14979.cljs$lang$applyTo = function(arglist__14980) {
          var x = cljs.core.first(arglist__14980);
          var y = cljs.core.first(cljs.core.next(arglist__14980));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14980)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__14980)));
          return G__14979__delegate(x, y, z, args)
        };
        G__14979.cljs$lang$arity$variadic = G__14979__delegate;
        return G__14979
      }();
      G__14978 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14978__0.call(this);
          case 1:
            return G__14978__1.call(this, x);
          case 2:
            return G__14978__2.call(this, x, y);
          case 3:
            return G__14978__3.call(this, x, y, z);
          default:
            return G__14978__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__14978.cljs$lang$maxFixedArity = 3;
      G__14978.cljs$lang$applyTo = G__14978__4.cljs$lang$applyTo;
      return G__14978
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__14981 = null;
      var G__14981__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__14981__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__14981__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__14981__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__14981__4 = function() {
        var G__14982__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__14982 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14982__delegate.call(this, x, y, z, args)
        };
        G__14982.cljs$lang$maxFixedArity = 3;
        G__14982.cljs$lang$applyTo = function(arglist__14983) {
          var x = cljs.core.first(arglist__14983);
          var y = cljs.core.first(cljs.core.next(arglist__14983));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14983)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__14983)));
          return G__14982__delegate(x, y, z, args)
        };
        G__14982.cljs$lang$arity$variadic = G__14982__delegate;
        return G__14982
      }();
      G__14981 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14981__0.call(this);
          case 1:
            return G__14981__1.call(this, x);
          case 2:
            return G__14981__2.call(this, x, y);
          case 3:
            return G__14981__3.call(this, x, y, z);
          default:
            return G__14981__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__14981.cljs$lang$maxFixedArity = 3;
      G__14981.cljs$lang$applyTo = G__14981__4.cljs$lang$applyTo;
      return G__14981
    }()
  };
  var juxt__4 = function() {
    var G__14984__delegate = function(f, g, h, fs) {
      var fs__14974 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__14985 = null;
        var G__14985__0 = function() {
          return cljs.core.reduce.call(null, function(p1__14955_SHARP_, p2__14956_SHARP_) {
            return cljs.core.conj.call(null, p1__14955_SHARP_, p2__14956_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__14974)
        };
        var G__14985__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__14957_SHARP_, p2__14958_SHARP_) {
            return cljs.core.conj.call(null, p1__14957_SHARP_, p2__14958_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__14974)
        };
        var G__14985__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__14959_SHARP_, p2__14960_SHARP_) {
            return cljs.core.conj.call(null, p1__14959_SHARP_, p2__14960_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__14974)
        };
        var G__14985__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__14961_SHARP_, p2__14962_SHARP_) {
            return cljs.core.conj.call(null, p1__14961_SHARP_, p2__14962_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__14974)
        };
        var G__14985__4 = function() {
          var G__14986__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__14963_SHARP_, p2__14964_SHARP_) {
              return cljs.core.conj.call(null, p1__14963_SHARP_, cljs.core.apply.call(null, p2__14964_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__14974)
          };
          var G__14986 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__14986__delegate.call(this, x, y, z, args)
          };
          G__14986.cljs$lang$maxFixedArity = 3;
          G__14986.cljs$lang$applyTo = function(arglist__14987) {
            var x = cljs.core.first(arglist__14987);
            var y = cljs.core.first(cljs.core.next(arglist__14987));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14987)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__14987)));
            return G__14986__delegate(x, y, z, args)
          };
          G__14986.cljs$lang$arity$variadic = G__14986__delegate;
          return G__14986
        }();
        G__14985 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__14985__0.call(this);
            case 1:
              return G__14985__1.call(this, x);
            case 2:
              return G__14985__2.call(this, x, y);
            case 3:
              return G__14985__3.call(this, x, y, z);
            default:
              return G__14985__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__14985.cljs$lang$maxFixedArity = 3;
        G__14985.cljs$lang$applyTo = G__14985__4.cljs$lang$applyTo;
        return G__14985
      }()
    };
    var G__14984 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14984__delegate.call(this, f, g, h, fs)
    };
    G__14984.cljs$lang$maxFixedArity = 3;
    G__14984.cljs$lang$applyTo = function(arglist__14988) {
      var f = cljs.core.first(arglist__14988);
      var g = cljs.core.first(cljs.core.next(arglist__14988));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14988)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__14988)));
      return G__14984__delegate(f, g, h, fs)
    };
    G__14984.cljs$lang$arity$variadic = G__14984__delegate;
    return G__14984
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__14991 = cljs.core.next.call(null, coll);
        coll = G__14991;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____14990 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____14990) {
          return n > 0
        }else {
          return and__3822__auto____14990
        }
      }())) {
        var G__14992 = n - 1;
        var G__14993 = cljs.core.next.call(null, coll);
        n = G__14992;
        coll = G__14993;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__14995 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__14995), s)) {
    if(cljs.core.count.call(null, matches__14995) === 1) {
      return cljs.core.first.call(null, matches__14995)
    }else {
      return cljs.core.vec.call(null, matches__14995)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__14997 = re.exec(s);
  if(matches__14997 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__14997) === 1) {
      return cljs.core.first.call(null, matches__14997)
    }else {
      return cljs.core.vec.call(null, matches__14997)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__15002 = cljs.core.re_find.call(null, re, s);
  var match_idx__15003 = s.search(re);
  var match_str__15004 = cljs.core.coll_QMARK_.call(null, match_data__15002) ? cljs.core.first.call(null, match_data__15002) : match_data__15002;
  var post_match__15005 = cljs.core.subs.call(null, s, match_idx__15003 + cljs.core.count.call(null, match_str__15004));
  if(cljs.core.truth_(match_data__15002)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__15002, re_seq.call(null, re, post_match__15005))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__15012__15013 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___15014 = cljs.core.nth.call(null, vec__15012__15013, 0, null);
  var flags__15015 = cljs.core.nth.call(null, vec__15012__15013, 1, null);
  var pattern__15016 = cljs.core.nth.call(null, vec__15012__15013, 2, null);
  return new RegExp(pattern__15016, flags__15015)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__15006_SHARP_) {
    return print_one.call(null, p1__15006_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____15026 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____15026)) {
            var and__3822__auto____15030 = function() {
              var G__15027__15028 = obj;
              if(G__15027__15028) {
                if(function() {
                  var or__3824__auto____15029 = G__15027__15028.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____15029) {
                    return or__3824__auto____15029
                  }else {
                    return G__15027__15028.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__15027__15028.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__15027__15028)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__15027__15028)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____15030)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____15030
            }
          }else {
            return and__3822__auto____15026
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____15031 = !(obj == null);
          if(and__3822__auto____15031) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____15031
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__15032__15033 = obj;
          if(G__15032__15033) {
            if(function() {
              var or__3824__auto____15034 = G__15032__15033.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____15034) {
                return or__3824__auto____15034
              }else {
                return G__15032__15033.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__15032__15033.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__15032__15033)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__15032__15033)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__15054 = new goog.string.StringBuffer;
  var G__15055__15056 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__15055__15056) {
    var string__15057 = cljs.core.first.call(null, G__15055__15056);
    var G__15055__15058 = G__15055__15056;
    while(true) {
      sb__15054.append(string__15057);
      var temp__3974__auto____15059 = cljs.core.next.call(null, G__15055__15058);
      if(temp__3974__auto____15059) {
        var G__15055__15060 = temp__3974__auto____15059;
        var G__15073 = cljs.core.first.call(null, G__15055__15060);
        var G__15074 = G__15055__15060;
        string__15057 = G__15073;
        G__15055__15058 = G__15074;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__15061__15062 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__15061__15062) {
    var obj__15063 = cljs.core.first.call(null, G__15061__15062);
    var G__15061__15064 = G__15061__15062;
    while(true) {
      sb__15054.append(" ");
      var G__15065__15066 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__15063, opts));
      if(G__15065__15066) {
        var string__15067 = cljs.core.first.call(null, G__15065__15066);
        var G__15065__15068 = G__15065__15066;
        while(true) {
          sb__15054.append(string__15067);
          var temp__3974__auto____15069 = cljs.core.next.call(null, G__15065__15068);
          if(temp__3974__auto____15069) {
            var G__15065__15070 = temp__3974__auto____15069;
            var G__15075 = cljs.core.first.call(null, G__15065__15070);
            var G__15076 = G__15065__15070;
            string__15067 = G__15075;
            G__15065__15068 = G__15076;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____15071 = cljs.core.next.call(null, G__15061__15064);
      if(temp__3974__auto____15071) {
        var G__15061__15072 = temp__3974__auto____15071;
        var G__15077 = cljs.core.first.call(null, G__15061__15072);
        var G__15078 = G__15061__15072;
        obj__15063 = G__15077;
        G__15061__15064 = G__15078;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__15054
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__15080 = cljs.core.pr_sb.call(null, objs, opts);
  sb__15080.append("\n");
  return[cljs.core.str(sb__15080)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__15099__15100 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__15099__15100) {
    var string__15101 = cljs.core.first.call(null, G__15099__15100);
    var G__15099__15102 = G__15099__15100;
    while(true) {
      cljs.core.string_print.call(null, string__15101);
      var temp__3974__auto____15103 = cljs.core.next.call(null, G__15099__15102);
      if(temp__3974__auto____15103) {
        var G__15099__15104 = temp__3974__auto____15103;
        var G__15117 = cljs.core.first.call(null, G__15099__15104);
        var G__15118 = G__15099__15104;
        string__15101 = G__15117;
        G__15099__15102 = G__15118;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__15105__15106 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__15105__15106) {
    var obj__15107 = cljs.core.first.call(null, G__15105__15106);
    var G__15105__15108 = G__15105__15106;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__15109__15110 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__15107, opts));
      if(G__15109__15110) {
        var string__15111 = cljs.core.first.call(null, G__15109__15110);
        var G__15109__15112 = G__15109__15110;
        while(true) {
          cljs.core.string_print.call(null, string__15111);
          var temp__3974__auto____15113 = cljs.core.next.call(null, G__15109__15112);
          if(temp__3974__auto____15113) {
            var G__15109__15114 = temp__3974__auto____15113;
            var G__15119 = cljs.core.first.call(null, G__15109__15114);
            var G__15120 = G__15109__15114;
            string__15111 = G__15119;
            G__15109__15112 = G__15120;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____15115 = cljs.core.next.call(null, G__15105__15108);
      if(temp__3974__auto____15115) {
        var G__15105__15116 = temp__3974__auto____15115;
        var G__15121 = cljs.core.first.call(null, G__15105__15116);
        var G__15122 = G__15105__15116;
        obj__15107 = G__15121;
        G__15105__15108 = G__15122;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__15123) {
    var objs = cljs.core.seq(arglist__15123);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__15124) {
    var objs = cljs.core.seq(arglist__15124);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__15125) {
    var objs = cljs.core.seq(arglist__15125);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__15126) {
    var objs = cljs.core.seq(arglist__15126);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__15127) {
    var objs = cljs.core.seq(arglist__15127);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__15128) {
    var objs = cljs.core.seq(arglist__15128);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__15129) {
    var objs = cljs.core.seq(arglist__15129);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__15130) {
    var objs = cljs.core.seq(arglist__15130);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__15131) {
    var fmt = cljs.core.first(arglist__15131);
    var args = cljs.core.rest(arglist__15131);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__15132 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__15132, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__15133 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__15133, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__15134 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__15134, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____15135 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____15135)) {
        var nspc__15136 = temp__3974__auto____15135;
        return[cljs.core.str(nspc__15136), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____15137 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____15137)) {
          var nspc__15138 = temp__3974__auto____15137;
          return[cljs.core.str(nspc__15138), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__15139 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__15139, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__15141 = function(n, len) {
    var ns__15140 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__15140) < len) {
        var G__15143 = [cljs.core.str("0"), cljs.core.str(ns__15140)].join("");
        ns__15140 = G__15143;
        continue
      }else {
        return ns__15140
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__15141.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__15141.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__15141.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__15141.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__15141.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__15141.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__15142 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__15142, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__15144 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__15145 = this;
  var G__15146__15147 = cljs.core.seq.call(null, this__15145.watches);
  if(G__15146__15147) {
    var G__15149__15151 = cljs.core.first.call(null, G__15146__15147);
    var vec__15150__15152 = G__15149__15151;
    var key__15153 = cljs.core.nth.call(null, vec__15150__15152, 0, null);
    var f__15154 = cljs.core.nth.call(null, vec__15150__15152, 1, null);
    var G__15146__15155 = G__15146__15147;
    var G__15149__15156 = G__15149__15151;
    var G__15146__15157 = G__15146__15155;
    while(true) {
      var vec__15158__15159 = G__15149__15156;
      var key__15160 = cljs.core.nth.call(null, vec__15158__15159, 0, null);
      var f__15161 = cljs.core.nth.call(null, vec__15158__15159, 1, null);
      var G__15146__15162 = G__15146__15157;
      f__15161.call(null, key__15160, this$, oldval, newval);
      var temp__3974__auto____15163 = cljs.core.next.call(null, G__15146__15162);
      if(temp__3974__auto____15163) {
        var G__15146__15164 = temp__3974__auto____15163;
        var G__15171 = cljs.core.first.call(null, G__15146__15164);
        var G__15172 = G__15146__15164;
        G__15149__15156 = G__15171;
        G__15146__15157 = G__15172;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__15165 = this;
  return this$.watches = cljs.core.assoc.call(null, this__15165.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__15166 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__15166.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__15167 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__15167.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__15168 = this;
  return this__15168.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__15169 = this;
  return this__15169.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__15170 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__15184__delegate = function(x, p__15173) {
      var map__15179__15180 = p__15173;
      var map__15179__15181 = cljs.core.seq_QMARK_.call(null, map__15179__15180) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15179__15180) : map__15179__15180;
      var validator__15182 = cljs.core._lookup.call(null, map__15179__15181, "\ufdd0'validator", null);
      var meta__15183 = cljs.core._lookup.call(null, map__15179__15181, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__15183, validator__15182, null)
    };
    var G__15184 = function(x, var_args) {
      var p__15173 = null;
      if(goog.isDef(var_args)) {
        p__15173 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__15184__delegate.call(this, x, p__15173)
    };
    G__15184.cljs$lang$maxFixedArity = 1;
    G__15184.cljs$lang$applyTo = function(arglist__15185) {
      var x = cljs.core.first(arglist__15185);
      var p__15173 = cljs.core.rest(arglist__15185);
      return G__15184__delegate(x, p__15173)
    };
    G__15184.cljs$lang$arity$variadic = G__15184__delegate;
    return G__15184
  }();
  atom = function(x, var_args) {
    var p__15173 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____15189 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____15189)) {
    var validate__15190 = temp__3974__auto____15189;
    if(cljs.core.truth_(validate__15190.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440))))].join(""));
    }
  }else {
  }
  var old_value__15191 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__15191, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__15192__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__15192 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__15192__delegate.call(this, a, f, x, y, z, more)
    };
    G__15192.cljs$lang$maxFixedArity = 5;
    G__15192.cljs$lang$applyTo = function(arglist__15193) {
      var a = cljs.core.first(arglist__15193);
      var f = cljs.core.first(cljs.core.next(arglist__15193));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15193)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__15193))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__15193)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__15193)))));
      return G__15192__delegate(a, f, x, y, z, more)
    };
    G__15192.cljs$lang$arity$variadic = G__15192__delegate;
    return G__15192
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__15194) {
    var iref = cljs.core.first(arglist__15194);
    var f = cljs.core.first(cljs.core.next(arglist__15194));
    var args = cljs.core.rest(cljs.core.next(arglist__15194));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__15195 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__15195.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__15196 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__15196.state, function(p__15197) {
    var map__15198__15199 = p__15197;
    var map__15198__15200 = cljs.core.seq_QMARK_.call(null, map__15198__15199) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15198__15199) : map__15198__15199;
    var curr_state__15201 = map__15198__15200;
    var done__15202 = cljs.core._lookup.call(null, map__15198__15200, "\ufdd0'done", null);
    if(cljs.core.truth_(done__15202)) {
      return curr_state__15201
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__15196.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__15223__15224 = options;
    var map__15223__15225 = cljs.core.seq_QMARK_.call(null, map__15223__15224) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15223__15224) : map__15223__15224;
    var keywordize_keys__15226 = cljs.core._lookup.call(null, map__15223__15225, "\ufdd0'keywordize-keys", null);
    var keyfn__15227 = cljs.core.truth_(keywordize_keys__15226) ? cljs.core.keyword : cljs.core.str;
    var f__15242 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2363__auto____15241 = function iter__15235(s__15236) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__15236__15239 = s__15236;
                    while(true) {
                      if(cljs.core.seq.call(null, s__15236__15239)) {
                        var k__15240 = cljs.core.first.call(null, s__15236__15239);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__15227.call(null, k__15240), thisfn.call(null, x[k__15240])], true), iter__15235.call(null, cljs.core.rest.call(null, s__15236__15239)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2363__auto____15241.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__15242.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__15243) {
    var x = cljs.core.first(arglist__15243);
    var options = cljs.core.rest(arglist__15243);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__15248 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__15252__delegate = function(args) {
      var temp__3971__auto____15249 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__15248), args, null);
      if(cljs.core.truth_(temp__3971__auto____15249)) {
        var v__15250 = temp__3971__auto____15249;
        return v__15250
      }else {
        var ret__15251 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__15248, cljs.core.assoc, args, ret__15251);
        return ret__15251
      }
    };
    var G__15252 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__15252__delegate.call(this, args)
    };
    G__15252.cljs$lang$maxFixedArity = 0;
    G__15252.cljs$lang$applyTo = function(arglist__15253) {
      var args = cljs.core.seq(arglist__15253);
      return G__15252__delegate(args)
    };
    G__15252.cljs$lang$arity$variadic = G__15252__delegate;
    return G__15252
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__15255 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__15255)) {
        var G__15256 = ret__15255;
        f = G__15256;
        continue
      }else {
        return ret__15255
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__15257__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__15257 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__15257__delegate.call(this, f, args)
    };
    G__15257.cljs$lang$maxFixedArity = 1;
    G__15257.cljs$lang$applyTo = function(arglist__15258) {
      var f = cljs.core.first(arglist__15258);
      var args = cljs.core.rest(arglist__15258);
      return G__15257__delegate(f, args)
    };
    G__15257.cljs$lang$arity$variadic = G__15257__delegate;
    return G__15257
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__15260 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__15260, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__15260, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____15269 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____15269) {
      return or__3824__auto____15269
    }else {
      var or__3824__auto____15270 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____15270) {
        return or__3824__auto____15270
      }else {
        var and__3822__auto____15271 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____15271) {
          var and__3822__auto____15272 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____15272) {
            var and__3822__auto____15273 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____15273) {
              var ret__15274 = true;
              var i__15275 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____15276 = cljs.core.not.call(null, ret__15274);
                  if(or__3824__auto____15276) {
                    return or__3824__auto____15276
                  }else {
                    return i__15275 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__15274
                }else {
                  var G__15277 = isa_QMARK_.call(null, h, child.call(null, i__15275), parent.call(null, i__15275));
                  var G__15278 = i__15275 + 1;
                  ret__15274 = G__15277;
                  i__15275 = G__15278;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____15273
            }
          }else {
            return and__3822__auto____15272
          }
        }else {
          return and__3822__auto____15271
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728))))].join(""));
    }
    var tp__15287 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__15288 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__15289 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__15290 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____15291 = cljs.core.contains_QMARK_.call(null, tp__15287.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__15289.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__15289.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__15287, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__15290.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__15288, parent, ta__15289), "\ufdd0'descendants":tf__15290.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__15289, tag, td__15288)})
    }();
    if(cljs.core.truth_(or__3824__auto____15291)) {
      return or__3824__auto____15291
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__15296 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__15297 = cljs.core.truth_(parentMap__15296.call(null, tag)) ? cljs.core.disj.call(null, parentMap__15296.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__15298 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__15297)) ? cljs.core.assoc.call(null, parentMap__15296, tag, childsParents__15297) : cljs.core.dissoc.call(null, parentMap__15296, tag);
    var deriv_seq__15299 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__15279_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__15279_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__15279_SHARP_), cljs.core.second.call(null, p1__15279_SHARP_)))
    }, cljs.core.seq.call(null, newParents__15298)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__15296.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__15280_SHARP_, p2__15281_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__15280_SHARP_, p2__15281_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__15299))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__15307 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____15309 = cljs.core.truth_(function() {
    var and__3822__auto____15308 = xprefs__15307;
    if(cljs.core.truth_(and__3822__auto____15308)) {
      return xprefs__15307.call(null, y)
    }else {
      return and__3822__auto____15308
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____15309)) {
    return or__3824__auto____15309
  }else {
    var or__3824__auto____15311 = function() {
      var ps__15310 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__15310) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__15310), prefer_table))) {
          }else {
          }
          var G__15314 = cljs.core.rest.call(null, ps__15310);
          ps__15310 = G__15314;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____15311)) {
      return or__3824__auto____15311
    }else {
      var or__3824__auto____15313 = function() {
        var ps__15312 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__15312) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__15312), y, prefer_table))) {
            }else {
            }
            var G__15315 = cljs.core.rest.call(null, ps__15312);
            ps__15312 = G__15315;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____15313)) {
        return or__3824__auto____15313
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____15317 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____15317)) {
    return or__3824__auto____15317
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__15335 = cljs.core.reduce.call(null, function(be, p__15327) {
    var vec__15328__15329 = p__15327;
    var k__15330 = cljs.core.nth.call(null, vec__15328__15329, 0, null);
    var ___15331 = cljs.core.nth.call(null, vec__15328__15329, 1, null);
    var e__15332 = vec__15328__15329;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__15330)) {
      var be2__15334 = cljs.core.truth_(function() {
        var or__3824__auto____15333 = be == null;
        if(or__3824__auto____15333) {
          return or__3824__auto____15333
        }else {
          return cljs.core.dominates.call(null, k__15330, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__15332 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__15334), k__15330, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__15330), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__15334)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__15334
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__15335)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__15335));
      return cljs.core.second.call(null, best_entry__15335)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____15340 = mf;
    if(and__3822__auto____15340) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____15340
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2264__auto____15341 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15342 = cljs.core._reset[goog.typeOf(x__2264__auto____15341)];
      if(or__3824__auto____15342) {
        return or__3824__auto____15342
      }else {
        var or__3824__auto____15343 = cljs.core._reset["_"];
        if(or__3824__auto____15343) {
          return or__3824__auto____15343
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____15348 = mf;
    if(and__3822__auto____15348) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____15348
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2264__auto____15349 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15350 = cljs.core._add_method[goog.typeOf(x__2264__auto____15349)];
      if(or__3824__auto____15350) {
        return or__3824__auto____15350
      }else {
        var or__3824__auto____15351 = cljs.core._add_method["_"];
        if(or__3824__auto____15351) {
          return or__3824__auto____15351
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____15356 = mf;
    if(and__3822__auto____15356) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____15356
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2264__auto____15357 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15358 = cljs.core._remove_method[goog.typeOf(x__2264__auto____15357)];
      if(or__3824__auto____15358) {
        return or__3824__auto____15358
      }else {
        var or__3824__auto____15359 = cljs.core._remove_method["_"];
        if(or__3824__auto____15359) {
          return or__3824__auto____15359
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____15364 = mf;
    if(and__3822__auto____15364) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____15364
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2264__auto____15365 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15366 = cljs.core._prefer_method[goog.typeOf(x__2264__auto____15365)];
      if(or__3824__auto____15366) {
        return or__3824__auto____15366
      }else {
        var or__3824__auto____15367 = cljs.core._prefer_method["_"];
        if(or__3824__auto____15367) {
          return or__3824__auto____15367
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____15372 = mf;
    if(and__3822__auto____15372) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____15372
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2264__auto____15373 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15374 = cljs.core._get_method[goog.typeOf(x__2264__auto____15373)];
      if(or__3824__auto____15374) {
        return or__3824__auto____15374
      }else {
        var or__3824__auto____15375 = cljs.core._get_method["_"];
        if(or__3824__auto____15375) {
          return or__3824__auto____15375
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____15380 = mf;
    if(and__3822__auto____15380) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____15380
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2264__auto____15381 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15382 = cljs.core._methods[goog.typeOf(x__2264__auto____15381)];
      if(or__3824__auto____15382) {
        return or__3824__auto____15382
      }else {
        var or__3824__auto____15383 = cljs.core._methods["_"];
        if(or__3824__auto____15383) {
          return or__3824__auto____15383
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____15388 = mf;
    if(and__3822__auto____15388) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____15388
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2264__auto____15389 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15390 = cljs.core._prefers[goog.typeOf(x__2264__auto____15389)];
      if(or__3824__auto____15390) {
        return or__3824__auto____15390
      }else {
        var or__3824__auto____15391 = cljs.core._prefers["_"];
        if(or__3824__auto____15391) {
          return or__3824__auto____15391
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____15396 = mf;
    if(and__3822__auto____15396) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____15396
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2264__auto____15397 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15398 = cljs.core._dispatch[goog.typeOf(x__2264__auto____15397)];
      if(or__3824__auto____15398) {
        return or__3824__auto____15398
      }else {
        var or__3824__auto____15399 = cljs.core._dispatch["_"];
        if(or__3824__auto____15399) {
          return or__3824__auto____15399
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__15402 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__15403 = cljs.core._get_method.call(null, mf, dispatch_val__15402);
  if(cljs.core.truth_(target_fn__15403)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__15402)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__15403, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__15404 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__15405 = this;
  cljs.core.swap_BANG_.call(null, this__15405.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__15405.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__15405.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__15405.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__15406 = this;
  cljs.core.swap_BANG_.call(null, this__15406.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__15406.method_cache, this__15406.method_table, this__15406.cached_hierarchy, this__15406.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__15407 = this;
  cljs.core.swap_BANG_.call(null, this__15407.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__15407.method_cache, this__15407.method_table, this__15407.cached_hierarchy, this__15407.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__15408 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__15408.cached_hierarchy), cljs.core.deref.call(null, this__15408.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__15408.method_cache, this__15408.method_table, this__15408.cached_hierarchy, this__15408.hierarchy)
  }
  var temp__3971__auto____15409 = cljs.core.deref.call(null, this__15408.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____15409)) {
    var target_fn__15410 = temp__3971__auto____15409;
    return target_fn__15410
  }else {
    var temp__3971__auto____15411 = cljs.core.find_and_cache_best_method.call(null, this__15408.name, dispatch_val, this__15408.hierarchy, this__15408.method_table, this__15408.prefer_table, this__15408.method_cache, this__15408.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____15411)) {
      var target_fn__15412 = temp__3971__auto____15411;
      return target_fn__15412
    }else {
      return cljs.core.deref.call(null, this__15408.method_table).call(null, this__15408.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__15413 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__15413.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__15413.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__15413.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__15413.method_cache, this__15413.method_table, this__15413.cached_hierarchy, this__15413.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__15414 = this;
  return cljs.core.deref.call(null, this__15414.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__15415 = this;
  return cljs.core.deref.call(null, this__15415.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__15416 = this;
  return cljs.core.do_dispatch.call(null, mf, this__15416.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__15418__delegate = function(_, args) {
    var self__15417 = this;
    return cljs.core._dispatch.call(null, self__15417, args)
  };
  var G__15418 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__15418__delegate.call(this, _, args)
  };
  G__15418.cljs$lang$maxFixedArity = 1;
  G__15418.cljs$lang$applyTo = function(arglist__15419) {
    var _ = cljs.core.first(arglist__15419);
    var args = cljs.core.rest(arglist__15419);
    return G__15418__delegate(_, args)
  };
  G__15418.cljs$lang$arity$variadic = G__15418__delegate;
  return G__15418
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__15420 = this;
  return cljs.core._dispatch.call(null, self__15420, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__15421 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_15423, _) {
  var this__15422 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__15422.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__15424 = this;
  var and__3822__auto____15425 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____15425) {
    return this__15424.uuid === other.uuid
  }else {
    return and__3822__auto____15425
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__15426 = this;
  var this__15427 = this;
  return cljs.core.pr_str.call(null, this__15427)
};
cljs.core.UUID;
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3822__auto____16630 = reader;
    if(and__3822__auto____16630) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3822__auto____16630
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__2264__auto____16631 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____16632 = cljs.reader.read_char[goog.typeOf(x__2264__auto____16631)];
      if(or__3824__auto____16632) {
        return or__3824__auto____16632
      }else {
        var or__3824__auto____16633 = cljs.reader.read_char["_"];
        if(or__3824__auto____16633) {
          return or__3824__auto____16633
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3822__auto____16638 = reader;
    if(and__3822__auto____16638) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3822__auto____16638
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__2264__auto____16639 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____16640 = cljs.reader.unread[goog.typeOf(x__2264__auto____16639)];
      if(or__3824__auto____16640) {
        return or__3824__auto____16640
      }else {
        var or__3824__auto____16641 = cljs.reader.unread["_"];
        if(or__3824__auto____16641) {
          return or__3824__auto____16641
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
cljs.reader.StringPushbackReader = function(s, index_atom, buffer_atom) {
  this.s = s;
  this.index_atom = index_atom;
  this.buffer_atom = buffer_atom
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var this__16642 = this;
  if(cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, this__16642.buffer_atom))) {
    var idx__16643 = cljs.core.deref.call(null, this__16642.index_atom);
    cljs.core.swap_BANG_.call(null, this__16642.index_atom, cljs.core.inc);
    return this__16642.s[idx__16643]
  }else {
    var buf__16644 = cljs.core.deref.call(null, this__16642.buffer_atom);
    cljs.core.swap_BANG_.call(null, this__16642.buffer_atom, cljs.core.rest);
    return cljs.core.first.call(null, buf__16644)
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var this__16645 = this;
  return cljs.core.swap_BANG_.call(null, this__16645.buffer_atom, function(p1__16625_SHARP_) {
    return cljs.core.cons.call(null, ch, p1__16625_SHARP_)
  })
};
cljs.reader.StringPushbackReader;
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3824__auto____16647 = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3824__auto____16647)) {
    return or__3824__auto____16647
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3824__auto____16652 = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3824__auto____16652) {
    return or__3824__auto____16652
  }else {
    var and__3822__auto____16654 = function() {
      var or__3824__auto____16653 = "+" === initch;
      if(or__3824__auto____16653) {
        return or__3824__auto____16653
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3822__auto____16654)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch__16655 = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch__16655);
        return next_ch__16655
      }())
    }else {
      return and__3822__auto____16654
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(goog.isDef(var_args)) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__16656) {
    var rdr = cljs.core.first(arglist__16656);
    var msg = cljs.core.rest(arglist__16656);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$lang$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3822__auto____16660 = !(ch === "#");
  if(and__3822__auto____16660) {
    var and__3822__auto____16661 = !(ch === "'");
    if(and__3822__auto____16661) {
      var and__3822__auto____16662 = !(ch === ":");
      if(and__3822__auto____16662) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3822__auto____16662
      }
    }else {
      return and__3822__auto____16661
    }
  }else {
    return and__3822__auto____16660
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb__16667 = new goog.string.StringBuffer(initch);
  var ch__16668 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3824__auto____16669 = ch__16668 == null;
      if(or__3824__auto____16669) {
        return or__3824__auto____16669
      }else {
        var or__3824__auto____16670 = cljs.reader.whitespace_QMARK_.call(null, ch__16668);
        if(or__3824__auto____16670) {
          return or__3824__auto____16670
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch__16668)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch__16668);
      return sb__16667.toString()
    }else {
      var G__16671 = function() {
        sb__16667.append(ch__16668);
        return sb__16667
      }();
      var G__16672 = cljs.reader.read_char.call(null, rdr);
      sb__16667 = G__16671;
      ch__16668 = G__16672;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch__16676 = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3824__auto____16677 = ch__16676 === "n";
      if(or__3824__auto____16677) {
        return or__3824__auto____16677
      }else {
        var or__3824__auto____16678 = ch__16676 === "r";
        if(or__3824__auto____16678) {
          return or__3824__auto____16678
        }else {
          return ch__16676 == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches__16680 = re.exec(s);
  if(matches__16680 == null) {
    return null
  }else {
    if(matches__16680.length === 1) {
      return matches__16680[0]
    }else {
      return matches__16680
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups__16688 = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3__16689 = groups__16688[2];
  if(!function() {
    var or__3824__auto____16690 = group3__16689 == null;
    if(or__3824__auto____16690) {
      return or__3824__auto____16690
    }else {
      return group3__16689.length < 1
    }
  }()) {
    return 0
  }else {
    var negate__16691 = "-" === groups__16688[1] ? -1 : 1;
    var a__16692 = cljs.core.truth_(groups__16688[3]) ? [groups__16688[3], 10] : cljs.core.truth_(groups__16688[4]) ? [groups__16688[4], 16] : cljs.core.truth_(groups__16688[5]) ? [groups__16688[5], 8] : cljs.core.truth_(groups__16688[7]) ? [groups__16688[7], parseInt(groups__16688[7])] : "\ufdd0'default" ? [null, null] : null;
    var n__16693 = a__16692[0];
    var radix__16694 = a__16692[1];
    if(n__16693 == null) {
      return null
    }else {
      return negate__16691 * parseInt(n__16693, radix__16694)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups__16698 = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator__16699 = groups__16698[1];
  var denominator__16700 = groups__16698[2];
  return parseInt(numinator__16699) / parseInt(denominator__16700)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches__16703 = re.exec(s);
  if(function() {
    var and__3822__auto____16704 = !(matches__16703 == null);
    if(and__3822__auto____16704) {
      return matches__16703[0] === s
    }else {
      return and__3822__auto____16704
    }
  }()) {
    if(matches__16703.length === 1) {
      return matches__16703[0]
    }else {
      return matches__16703
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\u0008"
            }else {
              if(c === "f") {
                return"\u000c"
              }else {
                if("\ufdd0'else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code__16706 = parseInt(code_str, 16);
  return String.fromCharCode(code__16706)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch__16709 = cljs.reader.read_char.call(null, reader);
  var mapresult__16710 = cljs.reader.escape_char_map.call(null, ch__16709);
  if(cljs.core.truth_(mapresult__16710)) {
    return mapresult__16710
  }else {
    if(ch__16709 === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch__16709, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch__16709 === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch__16709, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch__16709)) {
          return String.fromCharCode(ch__16709)
        }else {
          if("\ufdd0'else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch__16709)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch__16712 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch__16712))) {
      var G__16713 = cljs.reader.read_char.call(null, rdr);
      ch__16712 = G__16713;
      continue
    }else {
      return ch__16712
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a__16720 = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch__16721 = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch__16721)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF")
    }
    if(delim === ch__16721) {
      return cljs.core.persistent_BANG_.call(null, a__16720)
    }else {
      var temp__3971__auto____16722 = cljs.reader.macros.call(null, ch__16721);
      if(cljs.core.truth_(temp__3971__auto____16722)) {
        var macrofn__16723 = temp__3971__auto____16722;
        var mret__16724 = macrofn__16723.call(null, rdr, ch__16721);
        var G__16726 = mret__16724 === rdr ? a__16720 : cljs.core.conj_BANG_.call(null, a__16720, mret__16724);
        a__16720 = G__16726;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch__16721);
        var o__16725 = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__16727 = o__16725 === rdr ? a__16720 : cljs.core.conj_BANG_.call(null, a__16720, o__16725);
        a__16720 = G__16727;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch__16732 = cljs.reader.read_char.call(null, rdr);
  var dm__16733 = cljs.reader.dispatch_macros.call(null, ch__16732);
  if(cljs.core.truth_(dm__16733)) {
    return dm__16733.call(null, rdr, _)
  }else {
    var temp__3971__auto____16734 = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch__16732);
    if(cljs.core.truth_(temp__3971__auto____16734)) {
      var obj__16735 = temp__3971__auto____16734;
      return obj__16735
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch__16732)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l__16737 = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l__16737))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l__16737)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer__16744 = new goog.string.StringBuffer(initch);
  var ch__16745 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____16746 = ch__16745 == null;
      if(or__3824__auto____16746) {
        return or__3824__auto____16746
      }else {
        var or__3824__auto____16747 = cljs.reader.whitespace_QMARK_.call(null, ch__16745);
        if(or__3824__auto____16747) {
          return or__3824__auto____16747
        }else {
          return cljs.reader.macros.call(null, ch__16745)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch__16745);
      var s__16748 = buffer__16744.toString();
      var or__3824__auto____16749 = cljs.reader.match_number.call(null, s__16748);
      if(cljs.core.truth_(or__3824__auto____16749)) {
        return or__3824__auto____16749
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s__16748, "]")
      }
    }else {
      var G__16750 = function() {
        buffer__16744.append(ch__16745);
        return buffer__16744
      }();
      var G__16751 = cljs.reader.read_char.call(null, reader);
      buffer__16744 = G__16750;
      ch__16745 = G__16751;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer__16754 = new goog.string.StringBuffer;
  var ch__16755 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch__16755 == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading string")
    }else {
      if("\\" === ch__16755) {
        var G__16756 = function() {
          buffer__16754.append(cljs.reader.escape_char.call(null, buffer__16754, reader));
          return buffer__16754
        }();
        var G__16757 = cljs.reader.read_char.call(null, reader);
        buffer__16754 = G__16756;
        ch__16755 = G__16757;
        continue
      }else {
        if('"' === ch__16755) {
          return buffer__16754.toString()
        }else {
          if("\ufdd0'default") {
            var G__16758 = function() {
              buffer__16754.append(ch__16755);
              return buffer__16754
            }();
            var G__16759 = cljs.reader.read_char.call(null, reader);
            buffer__16754 = G__16758;
            ch__16755 = G__16759;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token__16761 = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token__16761, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token__16761, 0, token__16761.indexOf("/")), cljs.core.subs.call(null, token__16761, token__16761.indexOf("/") + 1, token__16761.length))
  }else {
    return cljs.reader.special_symbols.call(null, token__16761, cljs.core.symbol.call(null, token__16761))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token__16771 = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a__16772 = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token__16771);
  var token__16773 = a__16772[0];
  var ns__16774 = a__16772[1];
  var name__16775 = a__16772[2];
  if(cljs.core.truth_(function() {
    var or__3824__auto____16777 = function() {
      var and__3822__auto____16776 = !(void 0 === ns__16774);
      if(and__3822__auto____16776) {
        return ns__16774.substring(ns__16774.length - 2, ns__16774.length) === ":/"
      }else {
        return and__3822__auto____16776
      }
    }();
    if(cljs.core.truth_(or__3824__auto____16777)) {
      return or__3824__auto____16777
    }else {
      var or__3824__auto____16778 = name__16775[name__16775.length - 1] === ":";
      if(or__3824__auto____16778) {
        return or__3824__auto____16778
      }else {
        return!(token__16773.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__16773)
  }else {
    if(function() {
      var and__3822__auto____16779 = !(ns__16774 == null);
      if(and__3822__auto____16779) {
        return ns__16774.length > 0
      }else {
        return and__3822__auto____16779
      }
    }()) {
      return cljs.core.keyword.call(null, ns__16774.substring(0, ns__16774.indexOf("/")), name__16775)
    }else {
      return cljs.core.keyword.call(null, token__16773)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(cljs.core.symbol_QMARK_.call(null, f)) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArrays([f], [true])
      }else {
        if("\ufdd0'else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m__16785 = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m__16785)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o__16786 = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__16787__16788 = o__16786;
    if(G__16787__16788) {
      if(function() {
        var or__3824__auto____16789 = G__16787__16788.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3824__auto____16789) {
          return or__3824__auto____16789
        }else {
          return G__16787__16788.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__16787__16788.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__16787__16788)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__16787__16788)
    }
  }()) {
    return cljs.core.with_meta.call(null, o__16786, cljs.core.merge.call(null, cljs.core.meta.call(null, o__16786), m__16785))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, "\ufdd1'quote")
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, "\ufdd1'deref")
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0'else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "<") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0'else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch__16793 = cljs.reader.read_char.call(null, reader);
    if(ch__16793 == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch__16793)) {
        var G__16796 = reader;
        var G__16797 = eof_is_error;
        var G__16798 = sentinel;
        var G__16799 = is_recursive;
        reader = G__16796;
        eof_is_error = G__16797;
        sentinel = G__16798;
        is_recursive = G__16799;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch__16793)) {
          var G__16800 = cljs.reader.read_comment.call(null, reader, ch__16793);
          var G__16801 = eof_is_error;
          var G__16802 = sentinel;
          var G__16803 = is_recursive;
          reader = G__16800;
          eof_is_error = G__16801;
          sentinel = G__16802;
          is_recursive = G__16803;
          continue
        }else {
          if("\ufdd0'else") {
            var f__16794 = cljs.reader.macros.call(null, ch__16793);
            var res__16795 = cljs.core.truth_(f__16794) ? f__16794.call(null, reader, ch__16793) : cljs.reader.number_literal_QMARK_.call(null, reader, ch__16793) ? cljs.reader.read_number.call(null, reader, ch__16793) : "\ufdd0'else" ? cljs.reader.read_symbol.call(null, reader, ch__16793) : null;
            if(res__16795 === reader) {
              var G__16804 = reader;
              var G__16805 = eof_is_error;
              var G__16806 = sentinel;
              var G__16807 = is_recursive;
              reader = G__16804;
              eof_is_error = G__16805;
              sentinel = G__16806;
              is_recursive = G__16807;
              continue
            }else {
              return res__16795
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r__16809 = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r__16809, true, null, false)
};
cljs.reader.zero_fill_right = function zero_fill_right(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return s.substring(0, width)
    }else {
      if("\ufdd0'else") {
        var b__16811 = new goog.string.StringBuffer(s);
        while(true) {
          if(b__16811.getLength() < width) {
            var G__16812 = b__16811.append("0");
            b__16811 = G__16812;
            continue
          }else {
            return b__16811.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return num % div === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3822__auto____16815 = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3822__auto____16815)) {
    var or__3824__auto____16816 = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3824__auto____16816)) {
      return or__3824__auto____16816
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3822__auto____16815
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm__16821 = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap__16822 = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core._lookup.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap__16822 : dim_norm__16821, month, null)
  }
}();
cljs.reader.parse_and_validate_timestamp = function() {
  var timestamp__16823 = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
  var check__16825 = function(low, n, high, msg) {
    if(function() {
      var and__3822__auto____16824 = low <= n;
      if(and__3822__auto____16824) {
        return n <= high
      }else {
        return and__3822__auto____16824
      }
    }()) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'<=", "\ufdd1'low", "\ufdd1'n", "\ufdd1'high"), cljs.core.hash_map("\ufdd0'line", 474))))].join(""));
    }
    return n
  };
  return function(ts) {
    var temp__3974__auto____16826 = cljs.core.map.call(null, cljs.core.vec, cljs.core.split_at.call(null, 8, cljs.core.re_matches.call(null, timestamp__16823, ts)));
    if(cljs.core.truth_(temp__3974__auto____16826)) {
      var vec__16827__16830 = temp__3974__auto____16826;
      var vec__16828__16831 = cljs.core.nth.call(null, vec__16827__16830, 0, null);
      var ___16832 = cljs.core.nth.call(null, vec__16828__16831, 0, null);
      var years__16833 = cljs.core.nth.call(null, vec__16828__16831, 1, null);
      var months__16834 = cljs.core.nth.call(null, vec__16828__16831, 2, null);
      var days__16835 = cljs.core.nth.call(null, vec__16828__16831, 3, null);
      var hours__16836 = cljs.core.nth.call(null, vec__16828__16831, 4, null);
      var minutes__16837 = cljs.core.nth.call(null, vec__16828__16831, 5, null);
      var seconds__16838 = cljs.core.nth.call(null, vec__16828__16831, 6, null);
      var milliseconds__16839 = cljs.core.nth.call(null, vec__16828__16831, 7, null);
      var vec__16829__16840 = cljs.core.nth.call(null, vec__16827__16830, 1, null);
      var ___16841 = cljs.core.nth.call(null, vec__16829__16840, 0, null);
      var ___16842 = cljs.core.nth.call(null, vec__16829__16840, 1, null);
      var ___16843 = cljs.core.nth.call(null, vec__16829__16840, 2, null);
      var V__16844 = vec__16827__16830;
      var vec__16845__16848 = cljs.core.map.call(null, function(v) {
        return cljs.core.map.call(null, function(p1__16820_SHARP_) {
          return parseInt(p1__16820_SHARP_, 10)
        }, v)
      }, cljs.core.map.call(null, function(p1__16818_SHARP_, p2__16817_SHARP_) {
        return cljs.core.update_in.call(null, p2__16817_SHARP_, cljs.core.PersistentVector.fromArray([0], true), p1__16818_SHARP_)
      }, cljs.core.PersistentVector.fromArray([cljs.core.constantly.call(null, null), function(p1__16819_SHARP_) {
        if(cljs.core._EQ_.call(null, p1__16819_SHARP_, "-")) {
          return"-1"
        }else {
          return"1"
        }
      }], true), V__16844));
      var vec__16846__16849 = cljs.core.nth.call(null, vec__16845__16848, 0, null);
      var ___16850 = cljs.core.nth.call(null, vec__16846__16849, 0, null);
      var y__16851 = cljs.core.nth.call(null, vec__16846__16849, 1, null);
      var mo__16852 = cljs.core.nth.call(null, vec__16846__16849, 2, null);
      var d__16853 = cljs.core.nth.call(null, vec__16846__16849, 3, null);
      var h__16854 = cljs.core.nth.call(null, vec__16846__16849, 4, null);
      var m__16855 = cljs.core.nth.call(null, vec__16846__16849, 5, null);
      var s__16856 = cljs.core.nth.call(null, vec__16846__16849, 6, null);
      var ms__16857 = cljs.core.nth.call(null, vec__16846__16849, 7, null);
      var vec__16847__16858 = cljs.core.nth.call(null, vec__16845__16848, 1, null);
      var offset_sign__16859 = cljs.core.nth.call(null, vec__16847__16858, 0, null);
      var offset_hours__16860 = cljs.core.nth.call(null, vec__16847__16858, 1, null);
      var offset_minutes__16861 = cljs.core.nth.call(null, vec__16847__16858, 2, null);
      var offset__16862 = offset_sign__16859 * (offset_hours__16860 * 60 + offset_minutes__16861);
      return cljs.core.PersistentVector.fromArray([cljs.core.not.call(null, years__16833) ? 1970 : y__16851, cljs.core.not.call(null, months__16834) ? 1 : check__16825.call(null, 1, mo__16852, 12, "timestamp month field must be in range 1..12"), cljs.core.not.call(null, days__16835) ? 1 : check__16825.call(null, 1, d__16853, cljs.reader.days_in_month.call(null, mo__16852, cljs.reader.leap_year_QMARK_.call(null, y__16851)), "timestamp day field must be in range 1..last day in month"), cljs.core.not.call(null, 
      hours__16836) ? 0 : check__16825.call(null, 0, h__16854, 23, "timestamp hour field must be in range 0..23"), cljs.core.not.call(null, minutes__16837) ? 0 : check__16825.call(null, 0, m__16855, 59, "timestamp minute field must be in range 0..59"), cljs.core.not.call(null, seconds__16838) ? 0 : check__16825.call(null, 0, s__16856, cljs.core._EQ_.call(null, m__16855, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.core.not.call(null, milliseconds__16839) ? 0 : check__16825.call(null, 
      0, ms__16857, 999, "timestamp millisecond field must be in range 0..999"), offset__16862], true)
    }else {
      return null
    }
  }
}();
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__3971__auto____16874 = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__3971__auto____16874)) {
    var vec__16875__16876 = temp__3971__auto____16874;
    var years__16877 = cljs.core.nth.call(null, vec__16875__16876, 0, null);
    var months__16878 = cljs.core.nth.call(null, vec__16875__16876, 1, null);
    var days__16879 = cljs.core.nth.call(null, vec__16875__16876, 2, null);
    var hours__16880 = cljs.core.nth.call(null, vec__16875__16876, 3, null);
    var minutes__16881 = cljs.core.nth.call(null, vec__16875__16876, 4, null);
    var seconds__16882 = cljs.core.nth.call(null, vec__16875__16876, 5, null);
    var ms__16883 = cljs.core.nth.call(null, vec__16875__16876, 6, null);
    var offset__16884 = cljs.core.nth.call(null, vec__16875__16876, 7, null);
    return new Date(Date.UTC(years__16877, months__16878 - 1, days__16879, hours__16880, minutes__16881, seconds__16882, ms__16883) - offset__16884 * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["inst", "uuid", "queue"], {"inst":cljs.reader.read_date, "uuid":cljs.reader.read_uuid, "queue":cljs.reader.read_queue}));
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag__16888 = cljs.reader.read_symbol.call(null, rdr, initch);
  var temp__3971__auto____16889 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), cljs.core.name.call(null, tag__16888), null);
  if(cljs.core.truth_(temp__3971__auto____16889)) {
    var pfn__16890 = temp__3971__auto____16889;
    return pfn__16890.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", cljs.core.name.call(null, tag__16888), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__16893 = cljs.core.name.call(null, tag);
  var old_parser__16894 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__16893, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__16893, f);
  return old_parser__16894
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__16897 = cljs.core.name.call(null, tag);
  var old_parser__16898 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__16897, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__16897);
  return old_parser__16898
};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
MESSAGE:"message", CONNECT:"connect"};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.disposeInternal = function() {
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isVersion("9"), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = new Function("a", "return a");
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      try {
        goog.reflect.sinkValue(relatedTarget.nodeName)
      }catch(err) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.structs.SimplePool");
goog.require("goog.Disposable");
goog.structs.SimplePool = function(initialCount, maxCount) {
  goog.Disposable.call(this);
  this.maxCount_ = maxCount;
  this.freeQueue_ = [];
  this.createInitial_(initialCount)
};
goog.inherits(goog.structs.SimplePool, goog.Disposable);
goog.structs.SimplePool.prototype.createObjectFn_ = null;
goog.structs.SimplePool.prototype.disposeObjectFn_ = null;
goog.structs.SimplePool.prototype.setCreateObjectFn = function(createObjectFn) {
  this.createObjectFn_ = createObjectFn
};
goog.structs.SimplePool.prototype.setDisposeObjectFn = function(disposeObjectFn) {
  this.disposeObjectFn_ = disposeObjectFn
};
goog.structs.SimplePool.prototype.getObject = function() {
  if(this.freeQueue_.length) {
    return this.freeQueue_.pop()
  }
  return this.createObject()
};
goog.structs.SimplePool.prototype.releaseObject = function(obj) {
  if(this.freeQueue_.length < this.maxCount_) {
    this.freeQueue_.push(obj)
  }else {
    this.disposeObject(obj)
  }
};
goog.structs.SimplePool.prototype.createInitial_ = function(initialCount) {
  if(initialCount > this.maxCount_) {
    throw Error("[goog.structs.SimplePool] Initial cannot be greater than max");
  }
  for(var i = 0;i < initialCount;i++) {
    this.freeQueue_.push(this.createObject())
  }
};
goog.structs.SimplePool.prototype.createObject = function() {
  if(this.createObjectFn_) {
    return this.createObjectFn_()
  }else {
    return{}
  }
};
goog.structs.SimplePool.prototype.disposeObject = function(obj) {
  if(this.disposeObjectFn_) {
    this.disposeObjectFn_(obj)
  }else {
    if(goog.isObject(obj)) {
      if(goog.isFunction(obj.dispose)) {
        obj.dispose()
      }else {
        for(var i in obj) {
          delete obj[i]
        }
      }
    }
  }
};
goog.structs.SimplePool.prototype.disposeInternal = function() {
  goog.structs.SimplePool.superClass_.disposeInternal.call(this);
  var freeQueue = this.freeQueue_;
  while(freeQueue.length) {
    this.disposeObject(freeQueue.pop())
  }
  delete this.freeQueue_
};
goog.provide("goog.events.pools");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Listener");
goog.require("goog.structs.SimplePool");
goog.require("goog.userAgent.jscript");
goog.events.ASSUME_GOOD_GC = false;
goog.events.pools.getObject;
goog.events.pools.releaseObject;
goog.events.pools.getArray;
goog.events.pools.releaseArray;
goog.events.pools.getProxy;
goog.events.pools.setProxyCallbackFunction;
goog.events.pools.releaseProxy;
goog.events.pools.getListener;
goog.events.pools.releaseListener;
goog.events.pools.getEvent;
goog.events.pools.releaseEvent;
(function() {
  var BAD_GC = !goog.events.ASSUME_GOOD_GC && goog.userAgent.jscript.HAS_JSCRIPT && !goog.userAgent.jscript.isVersion("5.7");
  function getObject() {
    return{count_:0, remaining_:0}
  }
  function getArray() {
    return[]
  }
  var proxyCallbackFunction;
  goog.events.pools.setProxyCallbackFunction = function(cb) {
    proxyCallbackFunction = cb
  };
  function getProxy() {
    var f = function(eventObject) {
      return proxyCallbackFunction.call(f.src, f.key, eventObject)
    };
    return f
  }
  function getListener() {
    return new goog.events.Listener
  }
  function getEvent() {
    return new goog.events.BrowserEvent
  }
  if(!BAD_GC) {
    goog.events.pools.getObject = getObject;
    goog.events.pools.releaseObject = goog.nullFunction;
    goog.events.pools.getArray = getArray;
    goog.events.pools.releaseArray = goog.nullFunction;
    goog.events.pools.getProxy = getProxy;
    goog.events.pools.releaseProxy = goog.nullFunction;
    goog.events.pools.getListener = getListener;
    goog.events.pools.releaseListener = goog.nullFunction;
    goog.events.pools.getEvent = getEvent;
    goog.events.pools.releaseEvent = goog.nullFunction
  }else {
    goog.events.pools.getObject = function() {
      return objectPool.getObject()
    };
    goog.events.pools.releaseObject = function(obj) {
      objectPool.releaseObject(obj)
    };
    goog.events.pools.getArray = function() {
      return arrayPool.getObject()
    };
    goog.events.pools.releaseArray = function(obj) {
      arrayPool.releaseObject(obj)
    };
    goog.events.pools.getProxy = function() {
      return proxyPool.getObject()
    };
    goog.events.pools.releaseProxy = function(obj) {
      proxyPool.releaseObject(getProxy())
    };
    goog.events.pools.getListener = function() {
      return listenerPool.getObject()
    };
    goog.events.pools.releaseListener = function(obj) {
      listenerPool.releaseObject(obj)
    };
    goog.events.pools.getEvent = function() {
      return eventPool.getObject()
    };
    goog.events.pools.releaseEvent = function(obj) {
      eventPool.releaseObject(obj)
    };
    var OBJECT_POOL_INITIAL_COUNT = 0;
    var OBJECT_POOL_MAX_COUNT = 600;
    var objectPool = new goog.structs.SimplePool(OBJECT_POOL_INITIAL_COUNT, OBJECT_POOL_MAX_COUNT);
    objectPool.setCreateObjectFn(getObject);
    var ARRAY_POOL_INITIAL_COUNT = 0;
    var ARRAY_POOL_MAX_COUNT = 600;
    var arrayPool = new goog.structs.SimplePool(ARRAY_POOL_INITIAL_COUNT, ARRAY_POOL_MAX_COUNT);
    arrayPool.setCreateObjectFn(getArray);
    var HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT = 0;
    var HANDLE_EVENT_PROXY_POOL_MAX_COUNT = 600;
    var proxyPool = new goog.structs.SimplePool(HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT, HANDLE_EVENT_PROXY_POOL_MAX_COUNT);
    proxyPool.setCreateObjectFn(getProxy);
    var LISTENER_POOL_INITIAL_COUNT = 0;
    var LISTENER_POOL_MAX_COUNT = 600;
    var listenerPool = new goog.structs.SimplePool(LISTENER_POOL_INITIAL_COUNT, LISTENER_POOL_MAX_COUNT);
    listenerPool.setCreateObjectFn(getListener);
    var EVENT_POOL_INITIAL_COUNT = 0;
    var EVENT_POOL_MAX_COUNT = 600;
    var eventPool = new goog.structs.SimplePool(EVENT_POOL_INITIAL_COUNT, EVENT_POOL_MAX_COUNT);
    eventPool.setCreateObjectFn(getEvent)
  }
})();
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.pools");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.requiresSyntheticEventPropagation_;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = goog.events.pools.getObject()
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = goog.events.pools.getObject();
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = goog.events.pools.getArray();
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.pools.getProxy();
      proxy.src = src;
      listenerObj = goog.events.pools.getListener();
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = goog.events.pools.getArray()
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          goog.events.pools.releaseProxy(proxy);
          goog.events.pools.releaseListener(listenerArray[oldIndex]);
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        goog.events.pools.releaseArray(listenerArray);
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type][capture]);
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type]);
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(goog.events.synthesizeEventPropagation_()) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = goog.events.pools.getEvent();
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = goog.events.pools.getArray();
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0;
        goog.events.pools.releaseArray(ancestors)
      }
      evt.dispose();
      goog.events.pools.releaseEvent(evt)
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_);
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.events.synthesizeEventPropagation_ = function() {
  if(goog.events.requiresSyntheticEventPropagation_ === undefined) {
    goog.events.requiresSyntheticEventPropagation_ = goog.userAgent.IE && !goog.global["addEventListener"]
  }
  return goog.events.requiresSyntheticEventPropagation_
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
clojure.browser.event.EventType = {};
clojure.browser.event.event_types = function event_types(this$) {
  if(function() {
    var and__3822__auto____17148 = this$;
    if(and__3822__auto____17148) {
      return this$.clojure$browser$event$EventType$event_types$arity$1
    }else {
      return and__3822__auto____17148
    }
  }()) {
    return this$.clojure$browser$event$EventType$event_types$arity$1(this$)
  }else {
    var x__2264__auto____17149 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____17150 = clojure.browser.event.event_types[goog.typeOf(x__2264__auto____17149)];
      if(or__3824__auto____17150) {
        return or__3824__auto____17150
      }else {
        var or__3824__auto____17151 = clojure.browser.event.event_types["_"];
        if(or__3824__auto____17151) {
          return or__3824__auto____17151
        }else {
          throw cljs.core.missing_protocol.call(null, "EventType.event-types", this$);
        }
      }
    }().call(null, this$)
  }
};
Element.prototype.clojure$browser$event$EventType$ = true;
Element.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__17152) {
    var vec__17153__17154 = p__17152;
    var k__17155 = cljs.core.nth.call(null, vec__17153__17154, 0, null);
    var v__17156 = cljs.core.nth.call(null, vec__17153__17154, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__17155.toLowerCase()), v__17156], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
goog.events.EventTarget.prototype.clojure$browser$event$EventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__17157) {
    var vec__17158__17159 = p__17157;
    var k__17160 = cljs.core.nth.call(null, vec__17158__17159, 0, null);
    var v__17161 = cljs.core.nth.call(null, vec__17158__17159, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__17160.toLowerCase()), v__17161], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false)
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen.cljs$lang$arity$3 = listen__3;
  listen.cljs$lang$arity$4 = listen__4;
  return listen
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false)
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once.cljs$lang$arity$3 = listen_once__3;
  listen_once.cljs$lang$arity$4 = listen_once__4;
  return listen_once
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false)
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten.cljs$lang$arity$3 = unlisten__3;
  unlisten.cljs$lang$arity$4 = unlisten__4;
  return unlisten
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key)
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event)
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e)
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount()
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.serialize = function(object) {
  return(new goog.json.Serializer).serialize(object)
};
goog.json.Serializer = function() {
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    this.serialize_(arr[i], sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.setIgnoreCase(opt_ignoreCase == null ? opt_uri.getIgnoreCase() : opt_ignoreCase);
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQuery(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.queryData_ = new goog.Uri.QueryData(null, this, this.ignoreCase_)
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  if(this.cachedToString_) {
    return this.cachedToString_
  }
  var out = [];
  if(this.scheme_) {
    out.push(goog.Uri.encodeSpecialChars_(this.scheme_, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  if(this.domain_) {
    out.push("//");
    if(this.userInfo_) {
      out.push(goog.Uri.encodeSpecialChars_(this.userInfo_, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.Uri.encodeString_(this.domain_));
    if(this.port_ != null) {
      out.push(":", String(this.getPort()))
    }
  }
  if(this.path_) {
    if(this.hasDomain() && this.path_.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(this.path_, goog.Uri.reDisallowedInPath_))
  }
  var query = String(this.queryData_);
  if(query) {
    out.push("?", query)
  }
  if(this.fragment_) {
    out.push("#", goog.Uri.encodeSpecialChars_(this.fragment_, goog.Uri.reDisallowedInFragment_))
  }
  return this.cachedToString_ = out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQuery(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return goog.Uri.create(this.scheme_, this.userInfo_, this.domain_, this.port_, this.path_, this.queryData_.clone(), this.fragment_, this.ignoreCase_)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.uri_ = this;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, this, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeString_ = function(unescapedPart) {
  if(goog.isString(unescapedPart)) {
    return encodeURIComponent(unescapedPart)
  }
  return null
};
goog.Uri.encodeSpecialRegExp_ = /^[a-zA-Z0-9\-_.!~*'():\/;?]*$/;
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  var ret = null;
  if(goog.isString(unescapedPart)) {
    ret = unescapedPart;
    if(!goog.Uri.encodeSpecialRegExp_.test(ret)) {
      ret = encodeURI(unescapedPart)
    }
    if(ret.search(extra) >= 0) {
      ret = ret.replace(extra, goog.Uri.encodeChar_)
    }
  }
  return ret
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInPath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.uri_ = opt_uri || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("&");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("=");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  return goog.Uri.QueryData.createFromKeysValues(keys, goog.structs.getValues(map), opt_uri, opt_ignoreCase)
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, opt_uri, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.decodedQuery_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(!this.containsKey(key)) {
    this.keyMap_.set(key, value)
  }else {
    var current = this.keyMap_.get(key);
    if(goog.isArray(current)) {
      current.push(value)
    }else {
      this.keyMap_.set(key, [current, value])
    }
  }
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  if(this.keyMap_) {
    this.keyMap_.clear()
  }
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        rv.push(keys[i])
      }
    }else {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv;
  if(opt_key) {
    var key = this.getKeyName_(opt_key);
    if(this.containsKey(key)) {
      var value = this.keyMap_.get(key);
      if(goog.isArray(value)) {
        return value
      }else {
        rv = [];
        rv.push(value)
      }
    }else {
      rv = []
    }
  }else {
    var vals = this.keyMap_.getValues();
    rv = [];
    for(var i = 0;i < vals.length;i++) {
      var val = vals[i];
      if(goog.isArray(val)) {
        goog.array.extend(rv, val)
      }else {
        rv.push(val)
      }
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  this.keyMap_.set(key, value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      return val[0]
    }else {
      return val
    }
  }else {
    return opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  if(values.length > 0) {
    this.keyMap_.set(key, values);
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var count = 0;
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        if(count > 0) {
          sb.push("&")
        }
        sb.push(encodedKey);
        if(val[j] !== "") {
          sb.push("=", goog.string.urlEncode(val[j]))
        }
        count++
      }
    }else {
      if(count > 0) {
        sb.push("&")
      }
      sb.push(encodedKey);
      if(val !== "") {
        sb.push("=", goog.string.urlEncode(val))
      }
      count++
    }
  }
  return this.encodedQuery_ = sb.join("")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  if(!this.decodedQuery_) {
    this.decodedQuery_ = goog.Uri.decodeOrEmpty_(this.toString())
  }
  return this.decodedQuery_
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  delete this.decodedQuery_;
  delete this.encodedQuery_;
  if(this.uri_) {
    delete this.uri_.cachedToString_
  }
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  if(this.decodedQuery_) {
    rv.decodedQuery_ = this.decodedQuery_
  }
  if(this.encodedQuery_) {
    rv.encodedQuery_ = this.encodedQuery_
  }
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone()
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key, map) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.add(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isVersion("9"), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isVersion("9") || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            element[key] = val
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc;
  if(goog.userAgent.WEBKIT) {
    doc = frame.document || frame.contentWindow.document
  }else {
    doc = frame.contentDocument || frame.contentWindow.document
  }
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    for(var i = 0, child;child = root.childNodes[i];i++) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.userAgent.IE) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return Boolean(opt_cancel)
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.getFunctionName = function(fn) {
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.logToSpeedTracer_ = function(msg) {
  if(goog.global["console"] && goog.global["console"]["markTimeline"]) {
    goog.global["console"]["markTimeline"](msg)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  this.logToSpeedTracer_("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.debug.Logger");
goog.require("goog.json");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.base(this);
  this.services_ = {}
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.debug.Logger.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if(opt_connectCb) {
    opt_connectCb()
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload}
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if(!service) {
    return
  }
  payload = this.decodePayload(serviceName, payload, service.objectPayload);
  if(goog.isDefAndNotNull(payload)) {
    service.callback(payload)
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if(service) {
    return service
  }else {
    if(this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload}
    }
  }
  this.logger.warning('Unknown service name "' + serviceName + '"');
  return null
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if(objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload)
    }catch(err) {
      this.logger.warning("Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null
    }
  }else {
    if(!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload)
    }
  }
  return payload
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  goog.dispose(this.logger);
  delete this.logger;
  delete this.services_;
  delete this.defaultService_
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.debug.Logger");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.channels_ = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while(length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength))
  }
  return s
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.debug.Logger.getLogger("goog.net.xpc");
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.net.xpc");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper()
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow()
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || ""
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this)
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER) {
    this.iframeElm_ = this.channel_.iframeElement_;
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this)
  }else {
    this.attemptSetup_()
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if(!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement
    }
    if(this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(retry) {
    if(!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this)
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected_()
  }else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if(!this.recursive_ && this.queue_.length == 0) {
    this.channel_.deliver_(serviceName, payload)
  }else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if(this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1)
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while(this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.deliver_(msg.serviceName, msg.payload)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null
};
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = []
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg"
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack"
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  goog.net.xpc.logger.fine("transport connect called");
  if(!this.initialized_) {
    goog.net.xpc.logger.fine("initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true
  }
  this.checkForeignFramesReady_()
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name]
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.net.xpc.logger.finest("constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr
};
goog.net.xpc.IframePollingTransport.prototype.innerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("innerPeerReconnect called");
  this.channel_.name = goog.net.xpc.getRandomString(10);
  goog.net.xpc.logger.finest("switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name)
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("outerPeerReconnect called");
  var frames = this.channel_.peerWindowObject_.frames;
  var length = frames.length;
  for(var i = 0;i < length;i++) {
    var frameName;
    try {
      if(frames[i] && frames[i].name) {
        frameName = frames[i].name
      }
    }catch(e) {
    }
    if(!frameName) {
      continue
    }
    var message = frameName.split("_");
    if(message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.net.xpc.logger.finest("deconstructSenderFrames called");
  if(this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null
  }
  if(this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if(!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.net.xpc.logger.finest("foreign frames not (yet) present");
    if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.INNER && !this.reconnectFrame_) {
      this.innerPeerReconnect_()
    }else {
      if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER) {
        this.outerPeerReconnect_()
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100)
  }else {
    goog.net.xpc.logger.fine("foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getMsgFrameName_()], goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getAckFrameName_()], goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_()
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.net.xpc.logger.finest("checking for receive frame: " + frameName);
  try {
    var winObj = this.channel_.peerWindowObject_.frames[frameName];
    if(!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false
    }
  }catch(e) {
    return false
  }
  return true
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.channel_.peerWindowObject_.frames;
  if(!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if(!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this)
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.net.xpc.logger.fine("local frames not (yet) present")
  }else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.net.xpc.logger.fine("local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.net.xpc.logger.fine("SETUP sent")
    }, this), 100)
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if(this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected_();
    if(this.deliveryQueue_) {
      goog.net.xpc.logger.fine("delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for(var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.deliver_(m.service, m.payload)
      }
      delete this.deliveryQueue_
    }
  }else {
    goog.net.xpc.logger.finest("checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_)
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.net.xpc.logger.finest("msg received: " + raw);
  if(raw == goog.net.xpc.SETUP) {
    if(!this.ackSender_) {
      return
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.net.xpc.logger.finest("SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if(pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame)
      }else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if(part0 == 1) {
          this.parts_ = []
        }
        this.parts_.push(frame);
        if(part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_
        }
      }
    }else {
      goog.net.xpc.logger.warning("received msg, but channel is not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.net.xpc.logger.finest("ack received: " + msgStr);
  if(msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected()) {
      if(!this.waitForAck_) {
        goog.net.xpc.logger.warning("got unexpected ack");
        return
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if(seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_()
      }else {
        goog.net.xpc.logger.warning("got ack with wrong sequence")
      }
    }else {
      goog.net.xpc.logger.warning("received ack, but channel not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if(this.waitForAck_ || !this.sendQueue_.length) {
    return
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.net.xpc.logger.finest("msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if(!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.net.xpc.logger.finest("queued delivery")
  }else {
    this.channel_.deliver_(service, payload)
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if(!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame)
  }else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while(pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_
    }
  }
  this.sendNextFrame_()
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var rcvd = false;
  try {
    for(var i = 0, l = goog.net.xpc.IframePollingTransport.receivers_.length;i < l;i++) {
      rcvd = rcvd || goog.net.xpc.IframePollingTransport.receivers_[i].receive()
    }
  }catch(e) {
    goog.net.xpc.logger.info("receive_() failed: " + e);
    goog.net.xpc.IframePollingTransport.receivers_[i].transport_.channel_.notifyTransportError_();
    if(!goog.net.xpc.IframePollingTransport.receivers_.length) {
      return
    }
  }
  var now = goog.now();
  if(rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t)
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.net.xpc.logger.fine("starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if(goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_)
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_)
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if(goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url
    }else {
      this.sendFrame_.location.replace(url)
    }
  }catch(e) {
    goog.net.xpc.logger.severe("sending failed", e)
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if(loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if(payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload))
    }
    return true
  }else {
    return false
  }
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_()
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if(goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if(!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_()
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while(goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.net.xpc.logger.finest("iframe removed")
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_()
  }
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if(!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP)
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if(!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  }else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if(!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0}
    }
    if(goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if(fragmentInfo.received != fragmentInfo.expected) {
      return
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr]
  }
  goog.net.xpc.channels_[channelName].deliver_(service, decodeURIComponent(payload))
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if(payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected_()
  }else {
    if(payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected_()
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if(goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for(var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr)
    }
  }else {
    this.send_(service, encodedPayload)
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if(goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    div.innerHTML = '<iframe onload="this.xpcOnload()"></iframe>';
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_
  }else {
    var ifr = this.getWindow().document.createElement("iframe");
    if(goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr})
    }else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_)
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if(this.peerIframeId_) {
    url += "," + this.peerIframeId_
  }
  url += "|" + service;
  if(opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.net.xpc.logger.finest("msg sent: " + url)
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.net.xpc.logger.finest("iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0)
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerHostname_ = peerHostname || "*"
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if(!goog.isNumber(value)) {
    value = 0
  }
  if(value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if(headDelim == -1 || serviceDelim == -1) {
    return false
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.net.xpc.logger.fine("messageReceived: channel=" + channelName + ", service=" + service + ", payload=" + payload);
  var channel = goog.net.xpc.channels_[channelName];
  if(channel) {
    channel.deliver_(service, payload, msgEvt.getBrowserEvent().origin);
    return true
  }
  for(var staleChannelName in goog.net.xpc.channels_) {
    var staleChannel = goog.net.xpc.channels_[staleChannelName];
    if(staleChannel.getRole() == goog.net.xpc.CrossPageChannel.Role.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && payload == goog.net.xpc.SETUP) {
      goog.net.xpc.logger.fine("changing channel name to " + channelName);
      staleChannel.name = channelName;
      delete goog.net.xpc.channels_[staleChannelName];
      goog.net.xpc.channels_[channelName] = staleChannel;
      staleChannel.deliver_(service, payload);
      return true
    }
  }
  goog.net.xpc.logger.info('channel name mismatch; message ignored"');
  return false
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  switch(payload) {
    case goog.net.xpc.SETUP:
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      break;
    case goog.net.xpc.SETUP_ACK_:
      this.channel_.notifyConnected_();
      break
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.connectWithRetries_()
};
goog.net.xpc.NativeMessagingTransport.prototype.connectWithRetries_ = function() {
  if(this.channel_.isConnected() || this.isDisposed()) {
    return
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  this.getWindow().setTimeout(goog.bind(this.connectWithRetries_, this), 100)
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.peerWindowObject_;
  if(!win) {
    goog.net.xpc.logger.fine("send(): window not ready");
    return
  }
  var obj = win.postMessage ? win : win.document;
  this.send = function(service, payload) {
    goog.net.xpc.logger.fine("send(): payload=" + payload + " to hostname=" + this.peerHostname_);
    obj.postMessage(this.channel_.name + "|" + service + ":" + payload, this.peerHostname_)
  };
  this.send(service, payload)
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if(value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
    }
  }
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if(listenWindow["nix_setup_complete"]) {
    return
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport = transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth = auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken = m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap = New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " = wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting global setup: " + e)
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER) {
    this.attemptOuterSetup_()
  }else {
    this.attemptInnerSetup_()
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  var innerFrame = this.channel_.iframeElement_;
  try {
    innerFrame.contentWindow.opener = this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_);
    this.localSetupCompleted_ = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  try {
    var opener = this.getWindow().opener;
    if(opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if(remoteAuthToken != this.remoteAuthToken_) {
        goog.net.xpc.logger.severe("Invalid auth token from other party");
        return
      }
      this.nixChannel_["CreateChannel"](this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
    return
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if(typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.net.xpc.logger.severe("Invalid NIX channel given to createChannel_")
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if(remoteAuthToken != this.remoteAuthToken_) {
    goog.net.xpc.logger.severe("Invalid auth token from other party");
    return
  }
  this.channel_.notifyConnected_()
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  function deliveryHandler() {
    this.channel_.deliver_(serviceName, payload)
  }
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1)
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if(typeof this.nixChannel_ !== "unknown") {
    goog.net.xpc.logger.severe("NIX channel not connected")
  }
  this.nixChannel_["SendMessage"](service, payload)
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.nixChannel_ = null
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.provide("goog.net.xpc.CrossPageChannel.Role");
goog.require("goog.Disposable");
goog.require("goog.Uri");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.json");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.base(this);
  for(var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if(uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  goog.net.xpc.channels_[this.name] = this;
  goog.events.listen(window, "unload", goog.net.xpc.CrossPageChannel.disposeAll_);
  goog.net.xpc.logger.info("CrossPageChannel created: " + this.name)
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if(goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING
  }else {
    if(goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD
    }else {
      if(goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY
      }else {
        if(goog.userAgent.IE) {
          transportType = goog.net.xpc.TransportTypes.NIX
        }else {
          if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI] && this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
            transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING
          }
        }
      }
    }
  }
  return transportType
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if(this.transport_) {
    return
  }
  if(!this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    this.cfg_[goog.net.xpc.CfgFields.TRANSPORT] = this.determineTransportType_()
  }
  switch(this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME], this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break
  }
  if(this.transport_) {
    goog.net.xpc.logger.info("Transport created: " + this.transport_.getName())
  }else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType()
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName()
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]
  }
  return peerCfg
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4)
  }
  var iframeElm = goog.dom.createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if(opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm)
  }else {
    iframeElm.style.width = iframeElm.style.height = "100%"
  }
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if(goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri)
  }
  if(opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()))
  }
  if(goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    this.deferConnect_ = true;
    window.setTimeout(goog.bind(function() {
      this.deferConnect_ = false;
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")");
      if(this.connectDeferred_) {
        this.connect(this.connectCb_)
      }
    }, this), 1)
  }else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")")
  }
  return iframeElm
};
goog.net.xpc.CrossPageChannel.prototype.deferConnect_ = false;
goog.net.xpc.CrossPageChannel.prototype.connectDeferred_ = false;
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if(this.deferConnect_) {
    goog.net.xpc.logger.info("connect() deferred");
    this.connectDeferred_ = true;
    return
  }
  goog.net.xpc.logger.info("connect()");
  if(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID])
  }
  if(this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if(!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]]
    }
    this.setPeerWindowObject(winObj)
  }
  if(!this.peerWindowObject_) {
    if(window == top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    }else {
      this.setPeerWindowObject(window.parent)
    }
  }
  this.createTransport_();
  this.transport_.connect()
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  if(!this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  this.transport_.dispose();
  this.transport_ = null;
  goog.net.xpc.logger.info('Channel "' + this.name + '" closed')
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = function() {
  if(this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.net.xpc.logger.info('Channel "' + this.name + '" connected');
  this.connectCb_()
};
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError_ = function() {
  goog.net.xpc.logger.info("Transport Error");
  this.close()
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if(!this.isConnected()) {
    goog.net.xpc.logger.severe("Can't send. Channel not connected.");
    return
  }
  if(this.peerWindowObject_.closed) {
    goog.net.xpc.logger.severe("Peer has disappeared.");
    this.close();
    return
  }
  if(goog.isObject(payload)) {
    payload = goog.json.serialize(payload)
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload)
};
goog.net.xpc.CrossPageChannel.prototype.deliver_ = function(serviceName, payload, opt_origin) {
  if(!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.net.xpc.logger.warning('Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return
  }
  if(this.isDisposed()) {
    goog.net.xpc.logger.warning("CrossPageChannel::deliver_(): Disposed.")
  }else {
    if(!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload)
    }else {
      if(this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload)
      }else {
        goog.net.xpc.logger.info("CrossPageChannel::deliver_(): Not connected.")
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name
  }
  return name.replace(/[%:|]/g, encodeURIComponent)
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1)
  }else {
    return name
  }
};
goog.net.xpc.CrossPageChannel.Role = {OUTER:0, INNER:1};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannel.Role.INNER : goog.net.xpc.CrossPageChannel.Role.OUTER
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME]
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels_[this.name]
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for(var name in goog.net.xpc.channels_) {
    var ch = goog.net.xpc.channels_[name];
    if(ch) {
      ch.dispose()
    }
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method || "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : new goog.net.XmlHttp
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    return this.xhr_ && this.xhr_.response
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.json");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__17011) {
  var vec__17012__17013 = p__17011;
  var k__17014 = cljs.core.nth.call(null, vec__17012__17013, 0, null);
  var v__17015 = cljs.core.nth.call(null, vec__17012__17013, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__17014.toLowerCase()), v__17015], true)
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = {};
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if(function() {
      var and__3822__auto____17032 = this$;
      if(and__3822__auto____17032) {
        return this$.clojure$browser$net$IConnection$connect$arity$1
      }else {
        return and__3822__auto____17032
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$)
    }else {
      var x__2264__auto____17033 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____17034 = clojure.browser.net.connect[goog.typeOf(x__2264__auto____17033)];
        if(or__3824__auto____17034) {
          return or__3824__auto____17034
        }else {
          var or__3824__auto____17035 = clojure.browser.net.connect["_"];
          if(or__3824__auto____17035) {
            return or__3824__auto____17035
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var connect__2 = function(this$, opt1) {
    if(function() {
      var and__3822__auto____17036 = this$;
      if(and__3822__auto____17036) {
        return this$.clojure$browser$net$IConnection$connect$arity$2
      }else {
        return and__3822__auto____17036
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1)
    }else {
      var x__2264__auto____17037 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____17038 = clojure.browser.net.connect[goog.typeOf(x__2264__auto____17037)];
        if(or__3824__auto____17038) {
          return or__3824__auto____17038
        }else {
          var or__3824__auto____17039 = clojure.browser.net.connect["_"];
          if(or__3824__auto____17039) {
            return or__3824__auto____17039
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1)
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if(function() {
      var and__3822__auto____17040 = this$;
      if(and__3822__auto____17040) {
        return this$.clojure$browser$net$IConnection$connect$arity$3
      }else {
        return and__3822__auto____17040
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2)
    }else {
      var x__2264__auto____17041 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____17042 = clojure.browser.net.connect[goog.typeOf(x__2264__auto____17041)];
        if(or__3824__auto____17042) {
          return or__3824__auto____17042
        }else {
          var or__3824__auto____17043 = clojure.browser.net.connect["_"];
          if(or__3824__auto____17043) {
            return or__3824__auto____17043
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2)
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if(function() {
      var and__3822__auto____17044 = this$;
      if(and__3822__auto____17044) {
        return this$.clojure$browser$net$IConnection$connect$arity$4
      }else {
        return and__3822__auto____17044
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3)
    }else {
      var x__2264__auto____17045 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____17046 = clojure.browser.net.connect[goog.typeOf(x__2264__auto____17045)];
        if(or__3824__auto____17046) {
          return or__3824__auto____17046
        }else {
          var or__3824__auto____17047 = clojure.browser.net.connect["_"];
          if(or__3824__auto____17047) {
            return or__3824__auto____17047
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3)
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3)
    }
    throw"Invalid arity: " + arguments.length;
  };
  connect.cljs$lang$arity$1 = connect__1;
  connect.cljs$lang$arity$2 = connect__2;
  connect.cljs$lang$arity$3 = connect__3;
  connect.cljs$lang$arity$4 = connect__4;
  return connect
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if(function() {
      var and__3822__auto____17068 = this$;
      if(and__3822__auto____17068) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2
      }else {
        return and__3822__auto____17068
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt)
    }else {
      var x__2264__auto____17069 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____17070 = clojure.browser.net.transmit[goog.typeOf(x__2264__auto____17069)];
        if(or__3824__auto____17070) {
          return or__3824__auto____17070
        }else {
          var or__3824__auto____17071 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____17071) {
            return or__3824__auto____17071
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt)
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if(function() {
      var and__3822__auto____17072 = this$;
      if(and__3822__auto____17072) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3
      }else {
        return and__3822__auto____17072
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2)
    }else {
      var x__2264__auto____17073 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____17074 = clojure.browser.net.transmit[goog.typeOf(x__2264__auto____17073)];
        if(or__3824__auto____17074) {
          return or__3824__auto____17074
        }else {
          var or__3824__auto____17075 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____17075) {
            return or__3824__auto____17075
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2)
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if(function() {
      var and__3822__auto____17076 = this$;
      if(and__3822__auto____17076) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4
      }else {
        return and__3822__auto____17076
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3)
    }else {
      var x__2264__auto____17077 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____17078 = clojure.browser.net.transmit[goog.typeOf(x__2264__auto____17077)];
        if(or__3824__auto____17078) {
          return or__3824__auto____17078
        }else {
          var or__3824__auto____17079 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____17079) {
            return or__3824__auto____17079
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3)
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if(function() {
      var and__3822__auto____17080 = this$;
      if(and__3822__auto____17080) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5
      }else {
        return and__3822__auto____17080
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4)
    }else {
      var x__2264__auto____17081 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____17082 = clojure.browser.net.transmit[goog.typeOf(x__2264__auto____17081)];
        if(or__3824__auto____17082) {
          return or__3824__auto____17082
        }else {
          var or__3824__auto____17083 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____17083) {
            return or__3824__auto____17083
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4)
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if(function() {
      var and__3822__auto____17084 = this$;
      if(and__3822__auto____17084) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6
      }else {
        return and__3822__auto____17084
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5)
    }else {
      var x__2264__auto____17085 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____17086 = clojure.browser.net.transmit[goog.typeOf(x__2264__auto____17085)];
        if(or__3824__auto____17086) {
          return or__3824__auto____17086
        }else {
          var or__3824__auto____17087 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____17087) {
            return or__3824__auto____17087
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5)
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5)
    }
    throw"Invalid arity: " + arguments.length;
  };
  transmit.cljs$lang$arity$2 = transmit__2;
  transmit.cljs$lang$arity$3 = transmit__3;
  transmit.cljs$lang$arity$4 = transmit__4;
  transmit.cljs$lang$arity$5 = transmit__5;
  transmit.cljs$lang$arity$6 = transmit__6;
  return transmit
}();
clojure.browser.net.close = function close(this$) {
  if(function() {
    var and__3822__auto____17092 = this$;
    if(and__3822__auto____17092) {
      return this$.clojure$browser$net$IConnection$close$arity$1
    }else {
      return and__3822__auto____17092
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$)
  }else {
    var x__2264__auto____17093 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____17094 = clojure.browser.net.close[goog.typeOf(x__2264__auto____17093)];
      if(or__3824__auto____17094) {
        return or__3824__auto____17094
      }else {
        var or__3824__auto____17095 = clojure.browser.net.close["_"];
        if(or__3824__auto____17095) {
          return or__3824__auto____17095
        }else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$)
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__17096) {
    var vec__17097__17098 = p__17096;
    var k__17099 = cljs.core.nth.call(null, vec__17097__17098, 0, null);
    var v__17100 = cljs.core.nth.call(null, vec__17097__17098, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__17099.toLowerCase()), v__17100], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))))
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  return clojure.browser.net.transmit.call(null, this$, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  this$.setTimeoutInterval(timeout);
  return this$.send(uri, method, content, headers)
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__17101) {
  var vec__17102__17103 = p__17101;
  var k__17104 = cljs.core.nth.call(null, vec__17102__17103, 0, null);
  var v__17105 = cljs.core.nth.call(null, vec__17102__17103, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__17104.toLowerCase()), v__17105], true)
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo
};
clojure.browser.net.ICrossPageChannel = {};
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if(function() {
      var and__3822__auto____17114 = this$;
      if(and__3822__auto____17114) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3
      }else {
        return and__3822__auto____17114
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn)
    }else {
      var x__2264__auto____17115 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____17116 = clojure.browser.net.register_service[goog.typeOf(x__2264__auto____17115)];
        if(or__3824__auto____17116) {
          return or__3824__auto____17116
        }else {
          var or__3824__auto____17117 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____17117) {
            return or__3824__auto____17117
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn)
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if(function() {
      var and__3822__auto____17118 = this$;
      if(and__3822__auto____17118) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4
      }else {
        return and__3822__auto____17118
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_)
    }else {
      var x__2264__auto____17119 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____17120 = clojure.browser.net.register_service[goog.typeOf(x__2264__auto____17119)];
        if(or__3824__auto____17120) {
          return or__3824__auto____17120
        }else {
          var or__3824__auto____17121 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____17121) {
            return or__3824__auto____17121
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_)
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  register_service.cljs$lang$arity$3 = register_service__3;
  register_service.cljs$lang$arity$4 = register_service__4;
  return register_service
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  return clojure.browser.net.connect.call(null, this$, null)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  return clojure.browser.net.connect.call(null, this$, on_connect_fn, config_iframe_fn, document.body)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  this$.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  return this$.send(cljs.core.name.call(null, service_name), payload)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  return this$.close(cljs.core.List.EMPTY)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  return clojure.browser.net.register_service.call(null, this$, service_name, fn, false)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  return this$.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_)
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__3974__auto____17133 = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if(cljs.core.truth_(temp__3974__auto____17133)) {
      var config__17134 = temp__3974__auto____17133;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config__17134))
    }else {
      return null
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__17135) {
      var vec__17136__17137 = p__17135;
      var k__17138 = cljs.core.nth.call(null, vec__17136__17137, 0, null);
      var v__17139 = cljs.core.nth.call(null, vec__17136__17137, 1, null);
      var temp__3971__auto____17140 = cljs.core._lookup.call(null, clojure.browser.net.xpc_config_fields, k__17138, null);
      if(cljs.core.truth_(temp__3971__auto____17140)) {
        var field__17141 = temp__3971__auto____17140;
        var G__17142__17143 = sum;
        G__17142__17143[field__17141] = v__17139;
        return G__17142__17143
      }else {
        return sum
      }
    }, {}, config))
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config)
    }
    throw"Invalid arity: " + arguments.length;
  };
  xpc_connection.cljs$lang$arity$0 = xpc_connection__0;
  xpc_connection.cljs$lang$arity$1 = xpc_connection__1;
  return xpc_connection
}();
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.repl_print = function repl_print(data) {
  var temp__3971__auto____16993 = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  if(cljs.core.truth_(temp__3971__auto____16993)) {
    var conn__16994 = temp__3971__auto____16993;
    return clojure.browser.net.transmit.call(null, conn__16994, "\ufdd0'print", cljs.core.pr_str.call(null, data))
  }else {
    return null
  }
};
clojure.browser.repl.evaluate_javascript = function evaluate_javascript(conn, block) {
  var result__17000 = function() {
    try {
      return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value"], {"\ufdd0'status":"\ufdd0'success", "\ufdd0'value":[cljs.core.str(eval(block))].join("")})
    }catch(e16998) {
      if(cljs.core.instance_QMARK_.call(null, Error, e16998)) {
        var e__16999 = e16998;
        return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value", "\ufdd0'stacktrace"], {"\ufdd0'status":"\ufdd0'exception", "\ufdd0'value":cljs.core.pr_str.call(null, e__16999), "\ufdd0'stacktrace":cljs.core.truth_(e__16999.hasOwnProperty("stack")) ? e__16999.stack : "No stacktrace available."})
      }else {
        if("\ufdd0'else") {
          throw e16998;
        }else {
          return null
        }
      }
    }
  }();
  return cljs.core.pr_str.call(null, result__17000)
};
clojure.browser.repl.send_result = function send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0)
};
clojure.browser.repl.send_print = function() {
  var send_print = null;
  var send_print__2 = function(url, data) {
    return send_print.call(null, url, data, 0)
  };
  var send_print__3 = function(url, data, n) {
    var conn__17002 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, conn__17002, "\ufdd0'error", function(_) {
      if(n < 10) {
        return send_print.call(null, url, data, n + 1)
      }else {
        return console.log([cljs.core.str("Could not send "), cljs.core.str(data), cljs.core.str(" after "), cljs.core.str(n), cljs.core.str(" attempts.")].join(""))
      }
    });
    return clojure.browser.net.transmit.call(null, conn__17002, url, "POST", data, null, 0)
  };
  send_print = function(url, data, n) {
    switch(arguments.length) {
      case 2:
        return send_print__2.call(this, url, data);
      case 3:
        return send_print__3.call(this, url, data, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  send_print.cljs$lang$arity$2 = send_print__2;
  send_print.cljs$lang$arity$3 = send_print__3;
  return send_print
}();
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function wrap_message(t, data) {
  return cljs.core.pr_str.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'content", "\ufdd0'order"], {"\ufdd0'type":t, "\ufdd0'content":data, "\ufdd0'order":cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)}))
};
clojure.browser.repl.start_evaluator = function start_evaluator(url) {
  var temp__3971__auto____17006 = clojure.browser.net.xpc_connection.call(null);
  if(cljs.core.truth_(temp__3971__auto____17006)) {
    var repl_connection__17007 = temp__3971__auto____17006;
    var connection__17008 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, connection__17008, "\ufdd0'success", function(e) {
      return clojure.browser.net.transmit.call(null, repl_connection__17007, "\ufdd0'evaluate-javascript", e.currentTarget.getResponseText(cljs.core.List.EMPTY))
    });
    clojure.browser.net.register_service.call(null, repl_connection__17007, "\ufdd0'send-result", function(data) {
      return clojure.browser.repl.send_result.call(null, connection__17008, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'result", data))
    });
    clojure.browser.net.register_service.call(null, repl_connection__17007, "\ufdd0'print", function(data) {
      return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'print", data))
    });
    clojure.browser.net.connect.call(null, repl_connection__17007, cljs.core.constantly.call(null, null));
    return setTimeout(function() {
      return clojure.browser.repl.send_result.call(null, connection__17008, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'ready", "ready"))
    }, 50)
  }else {
    return alert("No 'xpc' param provided to child iframe.")
  }
};
clojure.browser.repl.connect = function connect(repl_server_url) {
  var repl_connection__17010 = clojure.browser.net.xpc_connection.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'peer_uri"], {"\ufdd0'peer_uri":repl_server_url}));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection__17010));
  clojure.browser.net.register_service.call(null, repl_connection__17010, "\ufdd0'evaluate-javascript", function(js) {
    return clojure.browser.net.transmit.call(null, repl_connection__17010, "\ufdd0'send-result", clojure.browser.repl.evaluate_javascript.call(null, repl_connection__17010, js))
  });
  return clojure.browser.net.connect.call(null, repl_connection__17010, cljs.core.constantly.call(null, null), function(iframe) {
    return iframe.style.display = "none"
  })
};
goog.provide("shoreleave.brepl");
goog.require("cljs.core");
goog.require("clojure.browser.repl");
shoreleave.brepl.connect = function connect() {
  return clojure.browser.repl.connect.call(null, "http://localhost:9000/repl")
};
goog.provide("shoreleave.common");
goog.require("cljs.core");
goog.require("shoreleave.brepl");
shoreleave.common.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        var out__16953 = {};
        var G__16954__16955 = cljs.core.seq.call(null, x);
        if(G__16954__16955) {
          var G__16957__16959 = cljs.core.first.call(null, G__16954__16955);
          var vec__16958__16960 = G__16957__16959;
          var k__16961 = cljs.core.nth.call(null, vec__16958__16960, 0, null);
          var v__16962 = cljs.core.nth.call(null, vec__16958__16960, 1, null);
          var G__16954__16963 = G__16954__16955;
          var G__16957__16964 = G__16957__16959;
          var G__16954__16965 = G__16954__16963;
          while(true) {
            var vec__16966__16967 = G__16957__16964;
            var k__16968 = cljs.core.nth.call(null, vec__16966__16967, 0, null);
            var v__16969 = cljs.core.nth.call(null, vec__16966__16967, 1, null);
            var G__16954__16970 = G__16954__16965;
            out__16953[cljs.core.name.call(null, k__16968)] = clj__GT_js.call(null, v__16969);
            var temp__3974__auto____16971 = cljs.core.next.call(null, G__16954__16970);
            if(temp__3974__auto____16971) {
              var G__16954__16972 = temp__3974__auto____16971;
              var G__16973 = cljs.core.first.call(null, G__16954__16972);
              var G__16974 = G__16954__16972;
              G__16957__16964 = G__16973;
              G__16954__16965 = G__16974;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return out__16953
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
        }else {
          if("\ufdd0'else") {
            return x
          }else {
            return null
          }
        }
      }
    }
  }
};
shoreleave.common.args_map = function args_map(location_str) {
  var query_args_obj__16976 = new goog.Uri.QueryData(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["#", "?"]), cljs.core._lookup.call(null, location_str, 0, null)) ? cljs.core.subs.call(null, location_str, 1) : location_str);
  return cljs.core.zipmap.call(null, cljs.core.map.call(null, cljs.core.keyword, query_args_obj__16976.getKeys()), query_args_obj__16976.getValues())
};
shoreleave.common.query_args_map = function query_args_map() {
  return shoreleave.common.args_map.call(null, window.location.search)
};
shoreleave.common.hash_args_map = function hash_args_map() {
  return shoreleave.common.args_map.call(null, window.location.hash)
};
shoreleave.common.set_window_hash_args = function set_window_hash_args(args_map) {
  var hash_str__16989 = cljs.core.reduce.call(null, function(old_str, p__16984) {
    var vec__16985__16986 = p__16984;
    var k__16987 = cljs.core.nth.call(null, vec__16985__16986, 0, null);
    var v__16988 = cljs.core.nth.call(null, vec__16985__16986, 1, null);
    return[cljs.core.str(old_str), cljs.core.str(cljs.core.name.call(null, k__16987)), cljs.core.str("="), cljs.core.str(v__16988), cljs.core.str("&")].join("")
  }, "#", args_map);
  var clean_hash_str__16990 = cljs.core.subs.call(null, hash_str__16989, 0, cljs.core.count.call(null, hash_str__16989) - 1);
  window.location.hash = clean_hash_str__16990;
  return args_map
};
shoreleave.common.toggle_brepl = function() {
  var toggle_brepl = null;
  var toggle_brepl__0 = function() {
    return toggle_brepl.call(null, shoreleave.common.query_args_map.call(null))
  };
  var toggle_brepl__1 = function(query_map) {
    return toggle_brepl.call(null, query_map, "\ufdd0'brepl")
  };
  var toggle_brepl__2 = function(query_map, query_key) {
    if(cljs.core.truth_(query_map.call(null, query_key))) {
      return shoreleave.brepl.connect.call(null)
    }else {
      return null
    }
  };
  toggle_brepl = function(query_map, query_key) {
    switch(arguments.length) {
      case 0:
        return toggle_brepl__0.call(this);
      case 1:
        return toggle_brepl__1.call(this, query_map);
      case 2:
        return toggle_brepl__2.call(this, query_map, query_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  toggle_brepl.cljs$lang$arity$0 = toggle_brepl__0;
  toggle_brepl.cljs$lang$arity$1 = toggle_brepl__1;
  toggle_brepl.cljs$lang$arity$2 = toggle_brepl__2;
  return toggle_brepl
}();
goog.provide("goog.net.Cookies");
goog.provide("goog.net.cookies");
goog.require("goog.userAgent");
goog.net.Cookies = function(context) {
  this.document_ = context
};
goog.net.Cookies.MAX_COOKIE_LENGTH = 3950;
goog.net.Cookies.SPLIT_RE_ = /\s*;\s*/;
goog.net.Cookies.TEST_COOKIE_NAME_ = "COOKIES_TEST_";
goog.net.Cookies.prototype.isEnabled = function() {
  var isEnabled = this.isNavigatorCookieEnabled_();
  if(isEnabled && goog.userAgent.WEBKIT) {
    var cookieName = goog.net.Cookies.TEST_COOKIE_NAME_ + goog.now();
    goog.net.cookies.set(cookieName, "1");
    if(!this.get(cookieName)) {
      return false
    }
    this.remove(cookieName)
  }
  return isEnabled
};
goog.net.Cookies.prototype.isValidName = function(name) {
  return!/[;=\s]/.test(name)
};
goog.net.Cookies.prototype.isValidValue = function(value) {
  return!/[;\r\n]/.test(value)
};
goog.net.Cookies.prototype.set = function(name, value, opt_maxAge, opt_path, opt_domain, opt_secure) {
  if(!this.isValidName(name)) {
    throw Error('Invalid cookie name "' + name + '"');
  }
  if(!this.isValidValue(value)) {
    throw Error('Invalid cookie value "' + value + '"');
  }
  if(!goog.isDef(opt_maxAge)) {
    opt_maxAge = -1
  }
  var domainStr = opt_domain ? ";domain=" + opt_domain : "";
  var pathStr = opt_path ? ";path=" + opt_path : "";
  var secureStr = opt_secure ? ";secure" : "";
  var expiresStr;
  if(opt_maxAge < 0) {
    expiresStr = ""
  }else {
    if(opt_maxAge == 0) {
      var pastDate = new Date(1970, 1, 1);
      expiresStr = ";expires=" + pastDate.toUTCString()
    }else {
      var futureDate = new Date(goog.now() + opt_maxAge * 1E3);
      expiresStr = ";expires=" + futureDate.toUTCString()
    }
  }
  this.setCookie_(name + "=" + value + domainStr + pathStr + expiresStr + secureStr)
};
goog.net.Cookies.prototype.get = function(name, opt_default) {
  var nameEq = name + "=";
  var parts = this.getParts_();
  for(var i = 0, part;part = parts[i];i++) {
    if(part.indexOf(nameEq) == 0) {
      return part.substr(nameEq.length)
    }
  }
  return opt_default
};
goog.net.Cookies.prototype.remove = function(name, opt_path, opt_domain) {
  var rv = this.containsKey(name);
  this.set(name, "", 0, opt_path, opt_domain);
  return rv
};
goog.net.Cookies.prototype.getKeys = function() {
  return this.getKeyValues_().keys
};
goog.net.Cookies.prototype.getValues = function() {
  return this.getKeyValues_().values
};
goog.net.Cookies.prototype.isEmpty = function() {
  return!this.getCookie_()
};
goog.net.Cookies.prototype.getCount = function() {
  var cookie = this.getCookie_();
  if(!cookie) {
    return 0
  }
  return this.getParts_().length
};
goog.net.Cookies.prototype.containsKey = function(key) {
  return goog.isDef(this.get(key))
};
goog.net.Cookies.prototype.containsValue = function(value) {
  var values = this.getKeyValues_().values;
  for(var i = 0;i < values.length;i++) {
    if(values[i] == value) {
      return true
    }
  }
  return false
};
goog.net.Cookies.prototype.clear = function() {
  var keys = this.getKeyValues_().keys;
  for(var i = keys.length - 1;i >= 0;i--) {
    this.remove(keys[i])
  }
};
goog.net.Cookies.prototype.setCookie_ = function(s) {
  this.document_.cookie = s
};
goog.net.Cookies.prototype.getCookie_ = function() {
  return this.document_.cookie
};
goog.net.Cookies.prototype.getParts_ = function() {
  return(this.getCookie_() || "").split(goog.net.Cookies.SPLIT_RE_)
};
goog.net.Cookies.prototype.isNavigatorCookieEnabled_ = function() {
  return navigator.cookieEnabled
};
goog.net.Cookies.prototype.getKeyValues_ = function() {
  var parts = this.getParts_();
  var keys = [], values = [], index, part;
  for(var i = 0;part = parts[i];i++) {
    index = part.indexOf("=");
    if(index == -1) {
      keys.push("");
      values.push(part)
    }else {
      keys.push(part.substring(0, index));
      values.push(part.substring(index + 1))
    }
  }
  return{keys:keys, values:values}
};
goog.net.cookies = new goog.net.Cookies(document);
goog.net.cookies.MAX_COOKIE_LENGTH = goog.net.Cookies.MAX_COOKIE_LENGTH;
goog.provide("shoreleave.browser.cookies");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.net.Cookies");
goog.net.Cookies.prototype.cljs$core$IHash$ = true;
goog.net.Cookies.prototype.cljs$core$IHash$_hash$arity$1 = function(c) {
  return cljs.core._hash.call(null, cljs.core._persistent_BANG_.call(null, c))
};
goog.net.Cookies.prototype.cljs$core$ILookup$ = true;
goog.net.Cookies.prototype.cljs$core$ILookup$_lookup$arity$2 = function(c, k) {
  return cljs.core._lookup.call(null, c, k, null)
};
goog.net.Cookies.prototype.cljs$core$ILookup$_lookup$arity$3 = function(c, k, not_found) {
  var v__17184 = c.get(cljs.core.name.call(null, k), not_found);
  if(cljs.core.string_QMARK_.call(null, v__17184)) {
    return goog.string.urlDecode(v__17184)
  }else {
    return v__17184
  }
};
goog.net.Cookies.prototype.cljs$core$IAssociative$ = true;
goog.net.Cookies.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(c, k, v) {
  return cljs.core._assoc.call(null, cljs.core._persistent_BANG_.call(null, c), k, v)
};
goog.net.Cookies.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(c, k) {
  return c.containsKey(cljs.core.name.call(null, k))
};
goog.net.Cookies.prototype.cljs$core$IFn$ = true;
goog.net.Cookies.prototype.call = function() {
  var G__17209 = null;
  var G__17209__2 = function(this_sym17185, k) {
    var this_sym17185__17187 = this;
    var c__17188 = this_sym17185__17187;
    return cljs.core._lookup.call(null, c__17188, k)
  };
  var G__17209__3 = function(this_sym17186, k, not_found) {
    var this_sym17186__17189 = this;
    var c__17190 = this_sym17186__17189;
    return cljs.core._lookup.call(null, c__17190, k, not_found)
  };
  G__17209 = function(this_sym17186, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17209__2.call(this, this_sym17186, k);
      case 3:
        return G__17209__3.call(this, this_sym17186, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__17209
}();
goog.net.Cookies.prototype.apply = function(this_sym17182, args17183) {
  return this_sym17182.call.apply(this_sym17182, [this_sym17182].concat(args17183.slice()))
};
goog.net.Cookies.prototype.cljs$core$ITransientMap$ = true;
goog.net.Cookies.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$4 = function() {
  var G__17210__delegate = function(c, k, opts) {
    var temp__3974__auto____17192 = function() {
      var and__3822__auto____17191 = c.isValidName(cljs.core.name.call(null, k));
      if(cljs.core.truth_(and__3822__auto____17191)) {
        return cljs.core.name.call(null, k)
      }else {
        return and__3822__auto____17191
      }
    }();
    if(cljs.core.truth_(temp__3974__auto____17192)) {
      var k__17193 = temp__3974__auto____17192;
      var map__17194__17195 = cljs.core.apply.call(null, cljs.core.hash_map, opts);
      var map__17194__17196 = cljs.core.seq_QMARK_.call(null, map__17194__17195) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17194__17195) : map__17194__17195;
      var domain__17197 = cljs.core._lookup.call(null, map__17194__17196, "\ufdd0'domain", null);
      var path__17198 = cljs.core._lookup.call(null, map__17194__17196, "\ufdd0'path", null);
      return c.remove(k__17193, path__17198, domain__17197)
    }else {
      return null
    }
  };
  var G__17210 = function(c, k, var_args) {
    var opts = null;
    if(goog.isDef(var_args)) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return G__17210__delegate.call(this, c, k, opts)
  };
  G__17210.cljs$lang$maxFixedArity = 2;
  G__17210.cljs$lang$applyTo = function(arglist__17211) {
    var c = cljs.core.first(arglist__17211);
    var k = cljs.core.first(cljs.core.next(arglist__17211));
    var opts = cljs.core.rest(cljs.core.next(arglist__17211));
    return G__17210__delegate(c, k, opts)
  };
  G__17210.cljs$lang$arity$variadic = G__17210__delegate;
  return G__17210
}();
goog.net.Cookies.prototype.cljs$core$ISeqable$ = true;
goog.net.Cookies.prototype.cljs$core$ISeqable$_seq$arity$1 = function(c) {
  return cljs.core.map.call(null, cljs.core.vector, c.getKeys(), c.getValues())
};
goog.net.Cookies.prototype.cljs$core$IPrintable$ = true;
goog.net.Cookies.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(c, opts) {
  return cljs.core._pr_seq.call(null, cljs.core._persistent_BANG_.call(null, c), opts)
};
goog.net.Cookies.prototype.cljs$core$ICounted$ = true;
goog.net.Cookies.prototype.cljs$core$ICounted$_count$arity$1 = function(c) {
  return c.getCount()
};
goog.net.Cookies.prototype.cljs$core$ITransientCollection$ = true;
goog.net.Cookies.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(c) {
  return shoreleave.browser.cookies.as_hash_map.call(null, c)
};
goog.net.Cookies.prototype.cljs$core$ITransientAssociative$ = true;
goog.net.Cookies.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$5 = function() {
  var G__17212__delegate = function(c, k, v, opts) {
    var temp__3974__auto____17200 = function() {
      var and__3822__auto____17199 = c.isValidName(cljs.core.name.call(null, k));
      if(cljs.core.truth_(and__3822__auto____17199)) {
        return cljs.core.name.call(null, k)
      }else {
        return and__3822__auto____17199
      }
    }();
    if(cljs.core.truth_(temp__3974__auto____17200)) {
      var k__17201 = temp__3974__auto____17200;
      var map__17202__17203 = cljs.core.apply.call(null, cljs.core.hash_map, opts);
      var map__17202__17204 = cljs.core.seq_QMARK_.call(null, map__17202__17203) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17202__17203) : map__17202__17203;
      var secure_QMARK___17205 = cljs.core._lookup.call(null, map__17202__17204, "\ufdd0'secure?", null);
      var domain__17206 = cljs.core._lookup.call(null, map__17202__17204, "\ufdd0'domain", null);
      var path__17207 = cljs.core._lookup.call(null, map__17202__17204, "\ufdd0'path", null);
      var max_age__17208 = cljs.core._lookup.call(null, map__17202__17204, "\ufdd0'max-age", null);
      return c.set(k__17201, v, max_age__17208, path__17207, domain__17206, secure_QMARK___17205)
    }else {
      return null
    }
  };
  var G__17212 = function(c, k, v, var_args) {
    var opts = null;
    if(goog.isDef(var_args)) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return G__17212__delegate.call(this, c, k, v, opts)
  };
  G__17212.cljs$lang$maxFixedArity = 3;
  G__17212.cljs$lang$applyTo = function(arglist__17213) {
    var c = cljs.core.first(arglist__17213);
    var k = cljs.core.first(cljs.core.next(arglist__17213));
    var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__17213)));
    var opts = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__17213)));
    return G__17212__delegate(c, k, v, opts)
  };
  G__17212.cljs$lang$arity$variadic = G__17212__delegate;
  return G__17212
}();
shoreleave.browser.cookies.cookies = new goog.net.Cookies(document);
shoreleave.browser.cookies.as_hash_map = function() {
  var as_hash_map = null;
  var as_hash_map__0 = function() {
    return as_hash_map.call(null, shoreleave.browser.cookies.cookies)
  };
  var as_hash_map__1 = function(cks) {
    return cljs.core.zipmap.call(null, cks.getKeys(), cks.getValues())
  };
  as_hash_map = function(cks) {
    switch(arguments.length) {
      case 0:
        return as_hash_map__0.call(this);
      case 1:
        return as_hash_map__1.call(this, cks)
    }
    throw"Invalid arity: " + arguments.length;
  };
  as_hash_map.cljs$lang$arity$0 = as_hash_map__0;
  as_hash_map.cljs$lang$arity$1 = as_hash_map__1;
  return as_hash_map
}();
shoreleave.browser.cookies.cookies_enabled_QMARK_ = function() {
  var cookies_enabled_QMARK_ = null;
  var cookies_enabled_QMARK___0 = function() {
    return cookies_enabled_QMARK_.call(null, shoreleave.browser.cookies.cookies)
  };
  var cookies_enabled_QMARK___1 = function(cks) {
    return cks.isEnabled()
  };
  cookies_enabled_QMARK_ = function(cks) {
    switch(arguments.length) {
      case 0:
        return cookies_enabled_QMARK___0.call(this);
      case 1:
        return cookies_enabled_QMARK___1.call(this, cks)
    }
    throw"Invalid arity: " + arguments.length;
  };
  cookies_enabled_QMARK_.cljs$lang$arity$0 = cookies_enabled_QMARK___0;
  cookies_enabled_QMARK_.cljs$lang$arity$1 = cookies_enabled_QMARK___1;
  return cookies_enabled_QMARK_
}();
shoreleave.browser.cookies.empty_BANG_ = function empty_BANG_(cks) {
  return cks.clear()
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__11452 = s;
      var limit__11453 = limit;
      var parts__11454 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__11453, 1)) {
          return cljs.core.conj.call(null, parts__11454, s__11452)
        }else {
          var temp__3971__auto____11455 = cljs.core.re_find.call(null, re, s__11452);
          if(cljs.core.truth_(temp__3971__auto____11455)) {
            var m__11456 = temp__3971__auto____11455;
            var index__11457 = s__11452.indexOf(m__11456);
            var G__11458 = s__11452.substring(index__11457 + cljs.core.count.call(null, m__11456));
            var G__11459 = limit__11453 - 1;
            var G__11460 = cljs.core.conj.call(null, parts__11454, s__11452.substring(0, index__11457));
            s__11452 = G__11458;
            limit__11453 = G__11459;
            parts__11454 = G__11460;
            continue
          }else {
            return cljs.core.conj.call(null, parts__11454, s__11452)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__11464 = s.length;
  while(true) {
    if(index__11464 === 0) {
      return""
    }else {
      var ch__11465 = cljs.core._lookup.call(null, s, index__11464 - 1, null);
      if(function() {
        var or__3824__auto____11466 = cljs.core._EQ_.call(null, ch__11465, "\n");
        if(or__3824__auto____11466) {
          return or__3824__auto____11466
        }else {
          return cljs.core._EQ_.call(null, ch__11465, "\r")
        }
      }()) {
        var G__11467 = index__11464 - 1;
        index__11464 = G__11467;
        continue
      }else {
        return s.substring(0, index__11464)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__11471 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____11472 = cljs.core.not.call(null, s__11471);
    if(or__3824__auto____11472) {
      return or__3824__auto____11472
    }else {
      var or__3824__auto____11473 = cljs.core._EQ_.call(null, "", s__11471);
      if(or__3824__auto____11473) {
        return or__3824__auto____11473
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__11471)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__11480 = new goog.string.StringBuffer;
  var length__11481 = s.length;
  var index__11482 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__11481, index__11482)) {
      return buffer__11480.toString()
    }else {
      var ch__11483 = s.charAt(index__11482);
      var temp__3971__auto____11484 = cljs.core._lookup.call(null, cmap, ch__11483, null);
      if(cljs.core.truth_(temp__3971__auto____11484)) {
        var replacement__11485 = temp__3971__auto____11484;
        buffer__11480.append([cljs.core.str(replacement__11485)].join(""))
      }else {
        buffer__11480.append(ch__11483)
      }
      var G__11486 = index__11482 + 1;
      index__11482 = G__11486;
      continue
    }
    break
  }
};
goog.provide("shoreleave.remotes.common");
goog.require("cljs.core");
goog.require("shoreleave.common");
goog.require("shoreleave.common");
goog.require("shoreleave.browser.cookies");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.Uri.QueryData");
goog.require("clojure.string");
shoreleave.remotes.common.rand_id_str = function rand_id_str() {
  return goog.string.getRandomString()
};
shoreleave.remotes.common.__GT_url_method = function __GT_url_method(m) {
  return clojure.string.upper_case.call(null, cljs.core.name.call(null, m))
};
shoreleave.remotes.common.parse_route = function parse_route(route) {
  if(cljs.core.string_QMARK_.call(null, route)) {
    return cljs.core.PersistentVector.fromArray(["GET", route], true)
  }else {
    if(cljs.core.vector_QMARK_.call(null, route)) {
      var vec__17166__17167 = route;
      var m__17168 = cljs.core.nth.call(null, vec__17166__17167, 0, null);
      var u__17169 = cljs.core.nth.call(null, vec__17166__17167, 1, null);
      return cljs.core.PersistentVector.fromArray([shoreleave.remotes.common.__GT_url_method.call(null, m__17168), u__17169], true)
    }else {
      if("\ufdd0'else") {
        return cljs.core.PersistentVector.fromArray(["GET", route], true)
      }else {
        return null
      }
    }
  }
};
shoreleave.remotes.common.__GT_simple_callback = function __GT_simple_callback(callback) {
  if(cljs.core.truth_(callback)) {
    return function(req) {
      var data__17171 = req.getResponseText();
      return callback.call(null, data__17171)
    }
  }else {
    return null
  }
};
shoreleave.remotes.common.csrf_protected = function csrf_protected(content_map, method) {
  var temp__3971__auto____17176 = function() {
    var and__3822__auto____17175 = cljs.core._EQ_.call(null, method, "POST");
    if(and__3822__auto____17175) {
      return(new cljs.core.Keyword("\ufdd0'__anti-forgery-token")).call(null, shoreleave.browser.cookies.cookies)
    }else {
      return and__3822__auto____17175
    }
  }();
  if(cljs.core.truth_(temp__3971__auto____17176)) {
    var anti_forgery_token__17177 = temp__3971__auto____17176;
    return cljs.core.merge.call(null, content_map, cljs.core.ObjMap.fromObject(["\ufdd0'__anti-forgery-token"], {"\ufdd0'__anti-forgery-token":anti_forgery_token__17177}))
  }else {
    return content_map
  }
};
shoreleave.remotes.common.__GT_data_str = function __GT_data_str(d) {
  var cur__17180 = shoreleave.common.clj__GT_js.call(null, d);
  var query__17181 = goog.Uri.QueryData.createFromMap(new goog.structs.Map(cur__17180));
  return[cljs.core.str(query__17181)].join("")
};
goog.provide("shoreleave.remotes.xhr");
goog.require("cljs.core");
goog.require("shoreleave.common");
goog.require("shoreleave.common");
goog.require("shoreleave.remotes.common");
goog.require("goog.events");
goog.require("goog.net.XhrIo");
shoreleave.remotes.xhr.xhr = function() {
  var xhr__delegate = function(route, opts) {
    var req__16920 = new goog.net.XhrIo;
    var vec__16918__16921 = shoreleave.remotes.common.parse_route.call(null, route);
    var method__16922 = cljs.core.nth.call(null, vec__16918__16921, 0, null);
    var uri__16923 = cljs.core.nth.call(null, vec__16918__16921, 1, null);
    var map__16919__16924 = cljs.core.apply.call(null, cljs.core.hash_map, opts);
    var map__16919__16925 = cljs.core.seq_QMARK_.call(null, map__16919__16924) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16919__16924) : map__16919__16924;
    var headers__16926 = cljs.core._lookup.call(null, map__16919__16925, "\ufdd0'headers", null);
    var content__16927 = cljs.core._lookup.call(null, map__16919__16925, "\ufdd0'content", null);
    var on_success__16928 = cljs.core._lookup.call(null, map__16919__16925, "\ufdd0'on-success", null);
    var content__16929 = shoreleave.remotes.common.csrf_protected.call(null, content__16927, method__16922);
    var data__16930 = shoreleave.remotes.common.__GT_data_str.call(null, content__16929);
    var callback__16931 = shoreleave.remotes.common.__GT_simple_callback.call(null, on_success__16928);
    if(cljs.core.truth_(callback__16931)) {
      goog.events.listen(req__16920, goog.net.EventType.COMPLETE, function() {
        return callback__16931.call(null, req__16920)
      })
    }else {
    }
    return req__16920.send(uri__16923, method__16922, data__16930, cljs.core.truth_(headers__16926) ? shoreleave.common.clj__GT_js.call(null, headers__16926) : null)
  };
  var xhr = function(route, var_args) {
    var opts = null;
    if(goog.isDef(var_args)) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return xhr__delegate.call(this, route, opts)
  };
  xhr.cljs$lang$maxFixedArity = 1;
  xhr.cljs$lang$applyTo = function(arglist__16932) {
    var route = cljs.core.first(arglist__16932);
    var opts = cljs.core.rest(arglist__16932);
    return xhr__delegate(route, opts)
  };
  xhr.cljs$lang$arity$variadic = xhr__delegate;
  return xhr
}();
goog.provide("shoreleave.remotes.http_rpc");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("shoreleave.remotes.xhr");
shoreleave.remotes.http_rpc._STAR_remote_uri_STAR_ = "/_fetch";
shoreleave.remotes.http_rpc.remote_callback = function() {
  var remote_callback__delegate = function(remote, params, callback, extra_content) {
    return shoreleave.remotes.xhr.xhr.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'post", shoreleave.remotes.http_rpc._STAR_remote_uri_STAR_], true), "\ufdd0'content", cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'remote", "\ufdd0'params"], {"\ufdd0'remote":remote, "\ufdd0'params":cljs.core.pr_str.call(null, params)}), cljs.core.apply.call(null, cljs.core.hash_map, extra_content)), "\ufdd0'on-success", cljs.core.truth_(callback) ? function(data) {
      var data__16902 = cljs.core._EQ_.call(null, data, "") ? "nil" : data;
      return callback.call(null, cljs.reader.read_string.call(null, data__16902))
    } : null)
  };
  var remote_callback = function(remote, params, callback, var_args) {
    var extra_content = null;
    if(goog.isDef(var_args)) {
      extra_content = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return remote_callback__delegate.call(this, remote, params, callback, extra_content)
  };
  remote_callback.cljs$lang$maxFixedArity = 3;
  remote_callback.cljs$lang$applyTo = function(arglist__16903) {
    var remote = cljs.core.first(arglist__16903);
    var params = cljs.core.first(cljs.core.next(arglist__16903));
    var callback = cljs.core.first(cljs.core.next(cljs.core.next(arglist__16903)));
    var extra_content = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__16903)));
    return remote_callback__delegate(remote, params, callback, extra_content)
  };
  remote_callback.cljs$lang$arity$variadic = remote_callback__delegate;
  return remote_callback
}();
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isVersion(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var scrollEl = dom.getDocumentScrollElement();
  var inContainer;
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el.scrollWidth != el.clientWidth || el.scrollHeight != el.clientHeight) && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
      inContainer = inContainer || el != scrollEl
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  if(goog.userAgent.WEBKIT) {
    visibleRect.left += scrollX;
    visibleRect.top += scrollY
  }else {
    visibleRect.left = Math.max(visibleRect.left, scrollX);
    visibleRect.top = Math.max(visibleRect.top, scrollY)
  }
  if(!inContainer || goog.userAgent.WEBKIT) {
    visibleRect.right += scrollX;
    visibleRect.bottom += scrollY
  }
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return new goog.math.Size(element.offsetWidth, element.offsetHeight)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var originalWidth = element.offsetWidth;
  var originalHeight = element.offsetHeight;
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return new goog.math.Size(originalWidth, originalHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function() {
  var mockElement = goog.dom.createElement("div");
  mockElement.style.cssText = "visibility:hidden;overflow:scroll;" + "position:absolute;top:0;width:100px;height:100px";
  goog.dom.appendChild(goog.dom.getDocument().body, mockElement);
  var width = mockElement.offsetWidth - mockElement.clientWidth;
  goog.dom.removeNode(mockElement);
  return width
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("&")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    var type = el.type.toLowerCase();
    switch(type) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "=" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, opt_value);
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, opt_value);
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, opt_value);
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
var array_p, explode_p, ignore_p, key_prefix, map_p, namespace_tag, number_p, p, re_svg_tags, re_tag, re_whitespace, string_p, unify_p, whitespace_node_p, xmlns, __hasProp = {}.hasOwnProperty;
goog.require("goog.string");
goog.provide("singult.coffee");
goog.provide("singult.coffee.Unify");
goog.provide("singult.coffee.Ignore");
p = function(x) {
  console.log(x);
  return x
};
re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
re_svg_tags = /^(svg|g|rect|circle|clipPath|path|line|polygon|polyline|text|textPath)$/;
re_whitespace = /^\s+$/;
key_prefix = "\x00";
xmlns = {xhtml:"http://www.w3.org/1999/xhtml", svg:"http://www.w3.org/2000/svg"};
namespace_tag = function(tag_str) {
  var nsp, tag, _ref;
  _ref = tag_str.split(":"), nsp = _ref[0], tag = _ref[1];
  if(tag != null) {
    return[xmlns[nsp] || nsp, tag]
  }else {
    if(tag_str.match(re_svg_tags)) {
      return[xmlns.svg, tag_str]
    }else {
      return[xmlns.xhtml, tag_str]
    }
  }
};
explode_p = function(v) {
  return v[0] === ":*:"
};
unify_p = function(x) {
  return x != null && x instanceof singult.coffee.Unify
};
ignore_p = function(x) {
  return x != null && x instanceof singult.coffee.Ignore
};
array_p = function(x) {
  return x != null && x.forEach != null
};
map_p = function(x) {
  return x != null && !array_p(x) && !unify_p(x) && !ignore_p(x) && x instanceof Object
};
string_p = function(x) {
  return x != null && x.substring != null
};
number_p = function(x) {
  return x != null && x.toFixed != null
};
whitespace_node_p = function($n) {
  return $n.nodeType === 8 || $n.nodeType === 3 && $n.textContent.match(re_whitespace)
};
singult.coffee.style = function($e, m) {
  var k, v, _results;
  _results = [];
  for(k in m) {
    if(!__hasProp.call(m, k)) {
      continue
    }
    v = m[k];
    _results.push($e.style[goog.string.toCamelCase(k)] = v)
  }
  return _results
};
singult.coffee.properties = function($e, m) {
  var prop, v, _results;
  _results = [];
  for(prop in m) {
    if(!__hasProp.call(m, prop)) {
      continue
    }
    v = m[prop];
    _results.push($e[prop] = v)
  }
  return _results
};
singult.coffee.attr = function($e, attr_map) {
  var k, v, _results;
  if(attr_map["style"] != null) {
    singult.coffee.style($e, attr_map["style"]);
    delete attr_map["style"]
  }
  if(attr_map["properties"] != null) {
    singult.coffee.properties($e, attr_map["properties"]);
    delete attr_map["properties"]
  }
  if(array_p(attr_map["class"])) {
    $e.setAttribute("class", attr_map["class"].join(" "));
    delete attr_map["class"]
  }
  _results = [];
  for(k in attr_map) {
    if(!__hasProp.call(attr_map, k)) {
      continue
    }
    v = attr_map[k];
    if(v != null) {
      _results.push($e.setAttribute(k, v))
    }else {
      _results.push($e.removeAttribute(k))
    }
  }
  return _results
};
singult.coffee.node_data = function($e, d) {
  if(d != null) {
    return $e["__singult_data__"] = d
  }else {
    return $e["__singult_data__"]
  }
};
singult.coffee.canonicalize = function(x) {
  if(number_p(x)) {
    return x.toString()
  }else {
    if(array_p(x)) {
      return singult.coffee.canonicalize_hiccup(x)
    }else {
      return x
    }
  }
};
singult.coffee.canonicalize_hiccup = function(v) {
  var abbreviated_classes, attr, canonical, canonical_children, children, cls_str, id, nsp, tag, tag_str, _, _ref, _ref1, _ref2;
  tag = v[0];
  _ref = map_p(v[1]) ? [v[1], v.slice(2)] : [{}, v.slice(1)], attr = _ref[0], children = _ref[1];
  _ref1 = tag.match(re_tag), _ = _ref1[0], tag_str = _ref1[1], id = _ref1[2], cls_str = _ref1[3];
  if(id != null) {
    attr["id"] = id
  }
  if(cls_str != null) {
    abbreviated_classes = cls_str.split(".");
    if(array_p(attr["class"])) {
      attr["class"] = attr["class"].concat(abbreviated_classes)
    }else {
      if(string_p(attr["class"])) {
        attr["class"] = abbreviated_classes.concat([attr["class"]])
      }else {
        if(!(attr["class"] != null)) {
          attr["class"] = abbreviated_classes
        }
      }
    }
  }
  _ref2 = namespace_tag(tag_str), nsp = _ref2[0], tag = _ref2[1];
  canonical_children = [];
  children.forEach(function(v) {
    if(v != null) {
      if(explode_p(v)) {
        return v.slice(1).forEach(function(v) {
          return canonical_children.push(singult.coffee.canonicalize(v))
        })
      }else {
        return canonical_children.push(singult.coffee.canonicalize(v))
      }
    }
  });
  canonical = {nsp:nsp, tag:tag, attr:attr, children:canonical_children};
  return canonical
};
singult.coffee.render = function(m) {
  var $e, c;
  if(unify_p(m)) {
    throw new Error("Unify must be the first and only child of its parent.");
  }else {
    if(ignore_p(m)) {
      return null
    }else {
      if(string_p(m)) {
        return document.createTextNode(m)
      }else {
        $e = document.createElementNS(m.nsp, m.tag);
        singult.coffee.attr($e, m.attr);
        if(unify_p(c = m.children[0])) {
          if(c.enter != null) {
            c.data.forEach(function(d) {
              var $el;
              $el = c.enter(d);
              singult.coffee.node_data($el, d);
              return $e.appendChild($el)
            })
          }else {
            c.data.forEach(function(d) {
              var $el;
              $el = singult.coffee.render(singult.coffee.canonicalize(c.mapping(d)));
              singult.coffee.node_data($el, d);
              return $e.appendChild($el)
            })
          }
        }else {
          m.children.forEach(function(c) {
            var $c;
            $c = singult.coffee.render(c);
            if($c != null) {
              return $e.appendChild($c)
            }
          })
        }
        return $e
      }
    }
  }
};
singult.coffee.Unify = function(data, mapping, key_fn, enter, update, exit, force_update_p) {
  this.data = data;
  this.mapping = mapping;
  this.key_fn = key_fn;
  this.enter = enter;
  this.update = update;
  this.exit = exit;
  this.force_update_p = force_update_p;
  return this
};
singult.coffee.Ignore = function() {
  return this
};
singult.coffee.unify_ = function($container, u) {
  var $n, $nodes, enter, exit, i, key, key_fn, nodes_by_key, update, _;
  enter = u.enter || function(d) {
    var $el;
    $el = singult.coffee.render(singult.coffee.canonicalize(u.mapping(d)));
    $container.appendChild($el);
    return $el
  };
  update = u.update || function($n, d) {
    return singult.coffee.merge($n, singult.coffee.canonicalize(u.mapping(d)))
  };
  exit = u.exit || function($n) {
    return $container.removeChild($n)
  };
  key_fn = u.key_fn || function(d, idx) {
    return idx
  };
  $nodes = $container.childNodes;
  nodes_by_key = {};
  i = 0;
  while(i < $nodes.length) {
    key = key_prefix + key_fn(singult.coffee.node_data($nodes[i]), i);
    nodes_by_key[key] = $nodes[i];
    i += 1
  }
  u.data.forEach(function(d, i) {
    var $el, $n, identical_data_p, old_data;
    key = key_prefix + key_fn(d, i);
    if($n = nodes_by_key[key]) {
      if(u.force_update_p) {
        $el = update($n, d);
        singult.coffee.node_data($el, d)
      }else {
        old_data = singult.coffee.node_data($n);
        identical_data_p = old_data.cljs$core$IEquiv$_equiv$arity$2 != null ? old_data.cljs$core$IEquiv$_equiv$arity$2(old_data, d) : old_data === d;
        if(!identical_data_p) {
          $el = update($n, d);
          singult.coffee.node_data($el, d)
        }
      }
      return delete nodes_by_key[key]
    }else {
      $el = enter(d);
      return singult.coffee.node_data($el, d)
    }
  });
  for(_ in nodes_by_key) {
    $n = nodes_by_key[_];
    exit($n)
  }
  return null
};
singult.coffee.merge = function($e, m) {
  var $c, c, i, _i, _j, _ref, _ref1;
  if(unify_p(m)) {
    singult.coffee.unify_($e, m)
  }else {
    if(ignore_p(m)) {
    }else {
      if($e.nodeName.toLowerCase() !== m.tag.toLowerCase()) {
        p($e);
        p(m);
        throw new Error("Cannot merge $e into node of different type");
      }
      singult.coffee.attr($e, m.attr);
      if($e.hasChildNodes()) {
        for(i = _i = _ref = $e.childNodes.length - 1;_ref <= 0 ? _i <= 0 : _i >= 0;i = _ref <= 0 ? ++_i : --_i) {
          $c = $e.childNodes[i];
          if(whitespace_node_p($c)) {
            $e.removeChild($c)
          }
        }
      }
      if(unify_p(m.children[0])) {
        singult.coffee.merge($e, m.children[0])
      }else {
        if($e.childNodes.length > m.children.length) {
          for(i = _j = _ref1 = $e.childNodes.length - 1;_ref1 <= 0 ? _j <= 0 : _j >= 0;i = _ref1 <= 0 ? ++_j : --_j) {
            $e.removeChild($e.childNodes[i])
          }
        }
        i = 0;
        while(i < m.children.length) {
          c = m.children[i] || "";
          $c = $e.childNodes[i];
          if(string_p(c)) {
            if($c != null) {
              $c.textContent = c
            }else {
              $e.appendChild(document.createTextNode(c))
            }
          }else {
            if(ignore_p(c)) {
            }else {
              if(map_p(c)) {
                if($c != null) {
                  singult.coffee.merge($c, c)
                }else {
                  $e.appendChild(singult.coffee.render(c))
                }
              }else {
                p($c);
                p(c);
                throw new Error("Cannot merge children");
              }
            }
          }
          i += 1
        }
      }
    }
  }
  return $e
};
goog.provide("singult.core");
goog.require("cljs.core");
goog.require("singult.coffee");
singult.core.Unify = function(data, mapping, key_fn, enter, update, exit, force_update_QMARK_, __meta, __extmap) {
  this.data = data;
  this.mapping = mapping;
  this.key_fn = key_fn;
  this.enter = enter;
  this.update = update;
  this.exit = exit;
  this.force_update_QMARK_ = force_update_QMARK_;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054858;
  if(arguments.length > 7) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
singult.core.Unify.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__15828 = this;
  var h__2093__auto____15829 = this__15828.__hash;
  if(!(h__2093__auto____15829 == null)) {
    return h__2093__auto____15829
  }else {
    var h__2093__auto____15830 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__15828.__hash = h__2093__auto____15830;
    return h__2093__auto____15830
  }
};
singult.core.Unify.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__15831 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
singult.core.Unify.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k15826, else__2227__auto__) {
  var this__15832 = this;
  if(k15826 === "\ufdd0'data") {
    return this__15832.data
  }else {
    if(k15826 === "\ufdd0'mapping") {
      return this__15832.mapping
    }else {
      if(k15826 === "\ufdd0'key-fn") {
        return this__15832.key_fn
      }else {
        if(k15826 === "\ufdd0'enter") {
          return this__15832.enter
        }else {
          if(k15826 === "\ufdd0'update") {
            return this__15832.update
          }else {
            if(k15826 === "\ufdd0'exit") {
              return this__15832.exit
            }else {
              if(k15826 === "\ufdd0'force-update?") {
                return this__15832.force_update_QMARK_
              }else {
                if("\ufdd0'else") {
                  return cljs.core._lookup.call(null, this__15832.__extmap, k15826, else__2227__auto__)
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
singult.core.Unify.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__15825) {
  var this__15833 = this;
  var pred__15834__15837 = cljs.core.identical_QMARK_;
  var expr__15835__15838 = k__2232__auto__;
  if(pred__15834__15837.call(null, "\ufdd0'data", expr__15835__15838)) {
    return new singult.core.Unify(G__15825, this__15833.mapping, this__15833.key_fn, this__15833.enter, this__15833.update, this__15833.exit, this__15833.force_update_QMARK_, this__15833.__meta, this__15833.__extmap, null)
  }else {
    if(pred__15834__15837.call(null, "\ufdd0'mapping", expr__15835__15838)) {
      return new singult.core.Unify(this__15833.data, G__15825, this__15833.key_fn, this__15833.enter, this__15833.update, this__15833.exit, this__15833.force_update_QMARK_, this__15833.__meta, this__15833.__extmap, null)
    }else {
      if(pred__15834__15837.call(null, "\ufdd0'key-fn", expr__15835__15838)) {
        return new singult.core.Unify(this__15833.data, this__15833.mapping, G__15825, this__15833.enter, this__15833.update, this__15833.exit, this__15833.force_update_QMARK_, this__15833.__meta, this__15833.__extmap, null)
      }else {
        if(pred__15834__15837.call(null, "\ufdd0'enter", expr__15835__15838)) {
          return new singult.core.Unify(this__15833.data, this__15833.mapping, this__15833.key_fn, G__15825, this__15833.update, this__15833.exit, this__15833.force_update_QMARK_, this__15833.__meta, this__15833.__extmap, null)
        }else {
          if(pred__15834__15837.call(null, "\ufdd0'update", expr__15835__15838)) {
            return new singult.core.Unify(this__15833.data, this__15833.mapping, this__15833.key_fn, this__15833.enter, G__15825, this__15833.exit, this__15833.force_update_QMARK_, this__15833.__meta, this__15833.__extmap, null)
          }else {
            if(pred__15834__15837.call(null, "\ufdd0'exit", expr__15835__15838)) {
              return new singult.core.Unify(this__15833.data, this__15833.mapping, this__15833.key_fn, this__15833.enter, this__15833.update, G__15825, this__15833.force_update_QMARK_, this__15833.__meta, this__15833.__extmap, null)
            }else {
              if(pred__15834__15837.call(null, "\ufdd0'force-update?", expr__15835__15838)) {
                return new singult.core.Unify(this__15833.data, this__15833.mapping, this__15833.key_fn, this__15833.enter, this__15833.update, this__15833.exit, G__15825, this__15833.__meta, this__15833.__extmap, null)
              }else {
                return new singult.core.Unify(this__15833.data, this__15833.mapping, this__15833.key_fn, this__15833.enter, this__15833.update, this__15833.exit, this__15833.force_update_QMARK_, this__15833.__meta, cljs.core.assoc.call(null, this__15833.__extmap, k__2232__auto__, G__15825), null)
              }
            }
          }
        }
      }
    }
  }
};
singult.core.Unify.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__15839 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
singult.core.Unify.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__15840 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'data", this__15840.data), cljs.core.vector.call(null, "\ufdd0'mapping", this__15840.mapping), cljs.core.vector.call(null, "\ufdd0'key-fn", this__15840.key_fn), cljs.core.vector.call(null, "\ufdd0'enter", this__15840.enter), cljs.core.vector.call(null, "\ufdd0'update", this__15840.update), cljs.core.vector.call(null, "\ufdd0'exit", this__15840.exit), cljs.core.vector.call(null, 
  "\ufdd0'force-update?", this__15840.force_update_QMARK_)], true), this__15840.__extmap))
};
singult.core.Unify.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__15841 = this;
  var pr_pair__2240__auto____15842 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____15842, [cljs.core.str("#"), cljs.core.str("Unify"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'data", this__15841.data), cljs.core.vector.call(null, "\ufdd0'mapping", this__15841.mapping), cljs.core.vector.call(null, "\ufdd0'key-fn", this__15841.key_fn), cljs.core.vector.call(null, "\ufdd0'enter", this__15841.enter), 
  cljs.core.vector.call(null, "\ufdd0'update", this__15841.update), cljs.core.vector.call(null, "\ufdd0'exit", this__15841.exit), cljs.core.vector.call(null, "\ufdd0'force-update?", this__15841.force_update_QMARK_)], true), this__15841.__extmap))
};
singult.core.Unify.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__15843 = this;
  return 7 + cljs.core.count.call(null, this__15843.__extmap)
};
singult.core.Unify.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__15844 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____15845 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____15845)) {
      var and__3822__auto____15846 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____15846) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____15846
      }
    }else {
      return and__3822__auto____15845
    }
  }())) {
    return true
  }else {
    return false
  }
};
singult.core.Unify.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__15825) {
  var this__15847 = this;
  return new singult.core.Unify(this__15847.data, this__15847.mapping, this__15847.key_fn, this__15847.enter, this__15847.update, this__15847.exit, this__15847.force_update_QMARK_, G__15825, this__15847.__extmap, this__15847.__hash)
};
singult.core.Unify.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__15848 = this;
  return this__15848.__meta
};
singult.core.Unify.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__15849 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'data", "\ufdd0'force-update?", "\ufdd0'enter", "\ufdd0'exit", "\ufdd0'key-fn", "\ufdd0'update", "\ufdd0'mapping"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__15849.__meta), k__2234__auto__)
  }else {
    return new singult.core.Unify(this__15849.data, this__15849.mapping, this__15849.key_fn, this__15849.enter, this__15849.update, this__15849.exit, this__15849.force_update_QMARK_, this__15849.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__15849.__extmap, k__2234__auto__)), null)
  }
};
singult.core.Unify.cljs$lang$type = true;
singult.core.Unify.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "singult.core/Unify")
};
singult.core.__GT_Unify = function __GT_Unify(data, mapping, key_fn, enter, update, exit, force_update_QMARK_) {
  return new singult.core.Unify(data, mapping, key_fn, enter, update, exit, force_update_QMARK_)
};
singult.core.map__GT_Unify = function map__GT_Unify(G__15827) {
  return new singult.core.Unify((new cljs.core.Keyword("\ufdd0'data")).call(null, G__15827), (new cljs.core.Keyword("\ufdd0'mapping")).call(null, G__15827), (new cljs.core.Keyword("\ufdd0'key-fn")).call(null, G__15827), (new cljs.core.Keyword("\ufdd0'enter")).call(null, G__15827), (new cljs.core.Keyword("\ufdd0'update")).call(null, G__15827), (new cljs.core.Keyword("\ufdd0'exit")).call(null, G__15827), (new cljs.core.Keyword("\ufdd0'force-update?")).call(null, G__15827), null, cljs.core.dissoc.call(null, 
  G__15827, "\ufdd0'data", "\ufdd0'mapping", "\ufdd0'key-fn", "\ufdd0'enter", "\ufdd0'update", "\ufdd0'exit", "\ufdd0'force-update?"))
};
singult.core.Unify;
singult.core.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.instance_QMARK_.call(null, singult.core.Unify, x)) {
    var map__15903__15904 = x;
    var map__15903__15905 = cljs.core.seq_QMARK_.call(null, map__15903__15904) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15903__15904) : map__15903__15904;
    var force_update_QMARK___15906 = cljs.core._lookup.call(null, map__15903__15905, "\ufdd0'force-update?", null);
    var exit__15907 = cljs.core._lookup.call(null, map__15903__15905, "\ufdd0'exit", null);
    var update__15908 = cljs.core._lookup.call(null, map__15903__15905, "\ufdd0'update", null);
    var enter__15909 = cljs.core._lookup.call(null, map__15903__15905, "\ufdd0'enter", null);
    var key_fn__15910 = cljs.core._lookup.call(null, map__15903__15905, "\ufdd0'key-fn", null);
    var mapping__15911 = cljs.core._lookup.call(null, map__15903__15905, "\ufdd0'mapping", null);
    var data__15912 = cljs.core._lookup.call(null, map__15903__15905, "\ufdd0'data", null);
    var data_arr__15920 = function() {
      var a__15913 = [];
      var G__15914__15915 = cljs.core.seq.call(null, data__15912);
      if(G__15914__15915) {
        var d__15916 = cljs.core.first.call(null, G__15914__15915);
        var G__15914__15917 = G__15914__15915;
        while(true) {
          a__15913.push(d__15916);
          var temp__3974__auto____15918 = cljs.core.next.call(null, G__15914__15917);
          if(temp__3974__auto____15918) {
            var G__15914__15919 = temp__3974__auto____15918;
            var G__15956 = cljs.core.first.call(null, G__15914__15919);
            var G__15957 = G__15914__15919;
            d__15916 = G__15956;
            G__15914__15917 = G__15957;
            continue
          }else {
          }
          break
        }
      }else {
      }
      return a__15913
    }();
    return new singult.coffee.Unify(data_arr__15920, function(p1__15824_SHARP_) {
      return clj__GT_js.call(null, mapping__15911.call(null, p1__15824_SHARP_))
    }, key_fn__15910, enter__15909, update__15908, exit__15907, force_update_QMARK___15906)
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        var o__15921 = {};
        var G__15922__15923 = cljs.core.seq.call(null, x);
        if(G__15922__15923) {
          var G__15925__15927 = cljs.core.first.call(null, G__15922__15923);
          var vec__15926__15928 = G__15925__15927;
          var k__15929 = cljs.core.nth.call(null, vec__15926__15928, 0, null);
          var v__15930 = cljs.core.nth.call(null, vec__15926__15928, 1, null);
          var G__15922__15931 = G__15922__15923;
          var G__15925__15932 = G__15925__15927;
          var G__15922__15933 = G__15922__15931;
          while(true) {
            var vec__15934__15935 = G__15925__15932;
            var k__15936 = cljs.core.nth.call(null, vec__15934__15935, 0, null);
            var v__15937 = cljs.core.nth.call(null, vec__15934__15935, 1, null);
            var G__15922__15938 = G__15922__15933;
            var key__15939 = clj__GT_js.call(null, k__15936);
            if(cljs.core.string_QMARK_.call(null, key__15939)) {
            }else {
              throw"Cannot convert; JavaScript map keys must be strings";
            }
            o__15921[key__15939] = clj__GT_js.call(null, v__15937);
            var temp__3974__auto____15940 = cljs.core.next.call(null, G__15922__15938);
            if(temp__3974__auto____15940) {
              var G__15922__15941 = temp__3974__auto____15940;
              var G__15958 = cljs.core.first.call(null, G__15922__15941);
              var G__15959 = G__15922__15941;
              G__15925__15932 = G__15958;
              G__15922__15933 = G__15959;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return o__15921
      }else {
        if(cljs.core.seq_QMARK_.call(null, x)) {
          var a__15942 = [];
          a__15942.push(":*:");
          var G__15943__15944 = cljs.core.seq.call(null, x);
          if(G__15943__15944) {
            var item__15945 = cljs.core.first.call(null, G__15943__15944);
            var G__15943__15946 = G__15943__15944;
            while(true) {
              a__15942.push(clj__GT_js.call(null, item__15945));
              var temp__3974__auto____15947 = cljs.core.next.call(null, G__15943__15946);
              if(temp__3974__auto____15947) {
                var G__15943__15948 = temp__3974__auto____15947;
                var G__15960 = cljs.core.first.call(null, G__15943__15948);
                var G__15961 = G__15943__15948;
                item__15945 = G__15960;
                G__15943__15946 = G__15961;
                continue
              }else {
              }
              break
            }
          }else {
          }
          return a__15942
        }else {
          if(cljs.core.coll_QMARK_.call(null, x)) {
            var a__15949 = [];
            var G__15950__15951 = cljs.core.seq.call(null, x);
            if(G__15950__15951) {
              var item__15952 = cljs.core.first.call(null, G__15950__15951);
              var G__15950__15953 = G__15950__15951;
              while(true) {
                a__15949.push(clj__GT_js.call(null, item__15952));
                var temp__3974__auto____15954 = cljs.core.next.call(null, G__15950__15953);
                if(temp__3974__auto____15954) {
                  var G__15950__15955 = temp__3974__auto____15954;
                  var G__15962 = cljs.core.first.call(null, G__15950__15955);
                  var G__15963 = G__15950__15955;
                  item__15952 = G__15962;
                  G__15950__15953 = G__15963;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return a__15949
          }else {
            if("\ufdd0'else") {
              return x
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
singult.core.node_data = singult.coffee.node_data;
singult.core.attr = function attr($n, m) {
  return singult.coffee.attr.call(null, $n, singult.core.clj__GT_js.call(null, m))
};
singult.core.render = function render(v) {
  return singult.coffee.render.call(null, singult.coffee.canonicalize.call(null, singult.core.clj__GT_js.call(null, v)))
};
singult.core.merge_BANG_ = function merge_BANG_($n, v) {
  if(v == null) {
    return null
  }else {
    return singult.coffee.merge.call(null, $n, singult.coffee.canonicalize.call(null, singult.core.clj__GT_js.call(null, v)))
  }
};
singult.core.unify = function() {
  var unify__delegate = function(data, mapping, p__15964) {
    var map__15973__15974 = p__15964;
    var map__15973__15975 = cljs.core.seq_QMARK_.call(null, map__15973__15974) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15973__15974) : map__15973__15974;
    var force_update_QMARK___15976 = cljs.core._lookup.call(null, map__15973__15975, "\ufdd0'force-update?", null);
    var exit__15977 = cljs.core._lookup.call(null, map__15973__15975, "\ufdd0'exit", null);
    var update__15978 = cljs.core._lookup.call(null, map__15973__15975, "\ufdd0'update", null);
    var enter__15979 = cljs.core._lookup.call(null, map__15973__15975, "\ufdd0'enter", null);
    var key_fn__15980 = cljs.core._lookup.call(null, map__15973__15975, "\ufdd0'key-fn", null);
    return new singult.core.Unify(data, mapping, key_fn__15980, enter__15979, update__15978, exit__15977, force_update_QMARK___15976)
  };
  var unify = function(data, mapping, var_args) {
    var p__15964 = null;
    if(goog.isDef(var_args)) {
      p__15964 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unify__delegate.call(this, data, mapping, p__15964)
  };
  unify.cljs$lang$maxFixedArity = 2;
  unify.cljs$lang$applyTo = function(arglist__15981) {
    var data = cljs.core.first(arglist__15981);
    var mapping = cljs.core.first(cljs.core.next(arglist__15981));
    var p__15964 = cljs.core.rest(cljs.core.next(arglist__15981));
    return unify__delegate(data, mapping, p__15964)
  };
  unify.cljs$lang$arity$variadic = unify__delegate;
  return unify
}();
singult.core.ignore = function ignore() {
  return new singult.coffee.Ignore
};
goog.provide("c2.dom");
goog.require("cljs.core");
goog.require("goog.style");
goog.require("goog.dom.classes");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("singult.core");
goog.require("clojure.string");
NodeList.prototype.cljs$core$ISeqable$ = true;
NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
HTMLCollection.prototype.cljs$core$ISeqable$ = true;
HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
Node.prototype.cljs$core$IHash$ = true;
Node.prototype.cljs$core$IHash$_hash$arity$1 = function(x) {
  return x
};
c2.dom.IDom = {};
c2.dom.__GT_dom = function __GT_dom(x) {
  if(function() {
    var and__3822__auto____15986 = x;
    if(and__3822__auto____15986) {
      return x.c2$dom$IDom$__GT_dom$arity$1
    }else {
      return and__3822__auto____15986
    }
  }()) {
    return x.c2$dom$IDom$__GT_dom$arity$1(x)
  }else {
    var x__2264__auto____15987 = x == null ? null : x;
    return function() {
      var or__3824__auto____15988 = c2.dom.__GT_dom[goog.typeOf(x__2264__auto____15987)];
      if(or__3824__auto____15988) {
        return or__3824__auto____15988
      }else {
        var or__3824__auto____15989 = c2.dom.__GT_dom["_"];
        if(or__3824__auto____15989) {
          return or__3824__auto____15989
        }else {
          throw cljs.core.missing_protocol.call(null, "IDom.->dom", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.PersistentVector.prototype.c2$dom$IDom$ = true;
cljs.core.PersistentVector.prototype.c2$dom$IDom$__GT_dom$arity$1 = function(v) {
  return singult.core.render.call(null, v)
};
Node.prototype.c2$dom$IDom$ = true;
Node.prototype.c2$dom$IDom$__GT_dom$arity$1 = function(node) {
  return node
};
c2.dom.IDom["string"] = true;
c2.dom.__GT_dom["string"] = function(selector) {
  return c2.dom.select.call(null, selector)
};
c2.dom.select = function() {
  var select = null;
  var select__1 = function(selector) {
    return document.querySelector(selector)
  };
  var select__2 = function(selector, container) {
    return c2.dom.__GT_dom.call(null, container).querySelector(selector)
  };
  select = function(selector, container) {
    switch(arguments.length) {
      case 1:
        return select__1.call(this, selector);
      case 2:
        return select__2.call(this, selector, container)
    }
    throw"Invalid arity: " + arguments.length;
  };
  select.cljs$lang$arity$1 = select__1;
  select.cljs$lang$arity$2 = select__2;
  return select
}();
c2.dom.select_all = function() {
  var select_all = null;
  var select_all__1 = function(selector) {
    return document.querySelectorAll(selector)
  };
  var select_all__2 = function(selector, container) {
    return c2.dom.__GT_dom.call(null, container).querySelectorAll(selector)
  };
  select_all = function(selector, container) {
    switch(arguments.length) {
      case 1:
        return select_all__1.call(this, selector);
      case 2:
        return select_all__2.call(this, selector, container)
    }
    throw"Invalid arity: " + arguments.length;
  };
  select_all.cljs$lang$arity$1 = select_all__1;
  select_all.cljs$lang$arity$2 = select_all__2;
  return select_all
}();
c2.dom.matches_selector_QMARK_ = function matches_selector_QMARK_(node, selector) {
  return node.webkitMatchesSelector(selector)
};
c2.dom.children = function children(node) {
  return c2.dom.__GT_dom.call(null, node).children
};
c2.dom.parent = function parent(node) {
  return c2.dom.__GT_dom.call(null, node).parentNode
};
c2.dom.append_BANG_ = function append_BANG_(container, el) {
  var el__15991 = c2.dom.__GT_dom.call(null, el);
  goog.dom.appendChild(c2.dom.__GT_dom.call(null, container), el__15991);
  return el__15991
};
c2.dom.prepend_BANG_ = function prepend_BANG_(container, el) {
  var el__15993 = c2.dom.__GT_dom.call(null, el);
  goog.dom.insertChildAt(c2.dom.__GT_dom.call(null, container), el__15993, 0);
  return el__15993
};
c2.dom.remove_BANG_ = function remove_BANG_(el) {
  return goog.dom.removeNode(c2.dom.__GT_dom.call(null, el))
};
c2.dom.replace_BANG_ = function replace_BANG_(old, new$) {
  var new__15995 = c2.dom.__GT_dom.call(null, new$);
  goog.dom.replaceNode(new__15995, c2.dom.__GT_dom.call(null, old));
  return new__15995
};
c2.dom.style = function() {
  var style = null;
  var style__1 = function(el) {
    throw new Error("TODO: return map of element styles");
  };
  var style__2 = function(el, x) {
    var el__16028 = c2.dom.__GT_dom.call(null, el);
    try {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        var k__16053 = x;
        return goog.style.getComputedStyle(el__16028, cljs.core.name.call(null, k__16053))
      }else {
        if("\ufdd0'else") {
          throw 0;
        }else {
          return null
        }
      }
    }catch(e__7036__auto__) {
      if(e__7036__auto__ === 0) {
        try {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m__16033 = x;
            var G__16034__16035 = cljs.core.seq.call(null, m__16033);
            if(G__16034__16035) {
              var G__16037__16039 = cljs.core.first.call(null, G__16034__16035);
              var vec__16038__16040 = G__16037__16039;
              var k__16041 = cljs.core.nth.call(null, vec__16038__16040, 0, null);
              var v__16042 = cljs.core.nth.call(null, vec__16038__16040, 1, null);
              var G__16034__16043 = G__16034__16035;
              var G__16037__16044 = G__16037__16039;
              var G__16034__16045 = G__16034__16043;
              while(true) {
                var vec__16046__16047 = G__16037__16044;
                var k__16048 = cljs.core.nth.call(null, vec__16046__16047, 0, null);
                var v__16049 = cljs.core.nth.call(null, vec__16046__16047, 1, null);
                var G__16034__16050 = G__16034__16045;
                style.call(null, el__16028, k__16048, v__16049);
                var temp__3974__auto____16051 = cljs.core.next.call(null, G__16034__16050);
                if(temp__3974__auto____16051) {
                  var G__16034__16052 = temp__3974__auto____16051;
                  var G__16060 = cljs.core.first.call(null, G__16034__16052);
                  var G__16061 = G__16034__16052;
                  G__16037__16044 = G__16060;
                  G__16034__16045 = G__16061;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return el__16028
          }else {
            if("\ufdd0'else") {
              throw 0;
            }else {
              return null
            }
          }
        }catch(e__7036__auto__) {
          if(e__7036__auto__ === 0) {
            var G__16029__16032 = x;
            return null
          }else {
            throw e__7036__auto__;
          }
        }
      }else {
        throw e__7036__auto__;
      }
    }
  };
  var style__3 = function(el, k, v) {
    goog.style.setStyle(c2.dom.__GT_dom.call(null, el), cljs.core.name.call(null, k), function() {
      try {
        if(cljs.core.string_QMARK_.call(null, v)) {
          var s__16059 = v;
          return s__16059
        }else {
          if("\ufdd0'else") {
            throw 0;
          }else {
            return null
          }
        }
      }catch(e__7036__auto__) {
        if(e__7036__auto__ === 0) {
          try {
            if(cljs.core.number_QMARK_.call(null, v)) {
              var n__16058 = v;
              if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray(["\ufdd0'bottom", "\ufdd0'width", "\ufdd0'top", "\ufdd0'right", "\ufdd0'left", "\ufdd0'height"]).call(null, cljs.core.keyword.call(null, k)))) {
                return[cljs.core.str(n__16058), cljs.core.str("px")].join("")
              }else {
                return n__16058
              }
            }else {
              if("\ufdd0'else") {
                throw 0;
              }else {
                return null
              }
            }
          }catch(e__7036__auto__) {
            if(e__7036__auto__ === 0) {
              var G__16054__16057 = v;
              return null
            }else {
              throw e__7036__auto__;
            }
          }
        }else {
          throw e__7036__auto__;
        }
      }
    }());
    return el
  };
  style = function(el, k, v) {
    switch(arguments.length) {
      case 1:
        return style__1.call(this, el);
      case 2:
        return style__2.call(this, el, k);
      case 3:
        return style__3.call(this, el, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  style.cljs$lang$arity$1 = style__1;
  style.cljs$lang$arity$2 = style__2;
  style.cljs$lang$arity$3 = style__3;
  return style
}();
c2.dom.attr = function() {
  var attr = null;
  var attr__1 = function(el) {
    var attrs__16097 = c2.dom.__GT_dom.call(null, el).attributes;
    return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
      var iter__2363__auto____16104 = function iter__16098(s__16099) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__16099__16102 = s__16099;
          while(true) {
            if(cljs.core.seq.call(null, s__16099__16102)) {
              var i__16103 = cljs.core.first.call(null, s__16099__16102);
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, attrs__16097[i__16103].name), attrs__16097[i__16103].value], true), iter__16098.call(null, cljs.core.rest.call(null, s__16099__16102)))
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__2363__auto____16104.call(null, cljs.core.range.call(null, attrs__16097.length))
    }())
  };
  var attr__2 = function(el, x) {
    var el__16105 = c2.dom.__GT_dom.call(null, el);
    try {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        var k__16130 = x;
        return el__16105.getAttribute(cljs.core.name.call(null, k__16130))
      }else {
        if("\ufdd0'else") {
          throw 0;
        }else {
          return null
        }
      }
    }catch(e__7036__auto__) {
      if(e__7036__auto__ === 0) {
        try {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m__16110 = x;
            var G__16111__16112 = cljs.core.seq.call(null, m__16110);
            if(G__16111__16112) {
              var G__16114__16116 = cljs.core.first.call(null, G__16111__16112);
              var vec__16115__16117 = G__16114__16116;
              var k__16118 = cljs.core.nth.call(null, vec__16115__16117, 0, null);
              var v__16119 = cljs.core.nth.call(null, vec__16115__16117, 1, null);
              var G__16111__16120 = G__16111__16112;
              var G__16114__16121 = G__16114__16116;
              var G__16111__16122 = G__16111__16120;
              while(true) {
                var vec__16123__16124 = G__16114__16121;
                var k__16125 = cljs.core.nth.call(null, vec__16123__16124, 0, null);
                var v__16126 = cljs.core.nth.call(null, vec__16123__16124, 1, null);
                var G__16111__16127 = G__16111__16122;
                attr.call(null, el__16105, k__16125, v__16126);
                var temp__3974__auto____16128 = cljs.core.next.call(null, G__16111__16127);
                if(temp__3974__auto____16128) {
                  var G__16111__16129 = temp__3974__auto____16128;
                  var G__16132 = cljs.core.first.call(null, G__16111__16129);
                  var G__16133 = G__16111__16129;
                  G__16114__16121 = G__16132;
                  G__16111__16122 = G__16133;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return el__16105
          }else {
            if("\ufdd0'else") {
              throw 0;
            }else {
              return null
            }
          }
        }catch(e__7036__auto__) {
          if(e__7036__auto__ === 0) {
            var G__16106__16109 = x;
            return null
          }else {
            throw e__7036__auto__;
          }
        }
      }else {
        throw e__7036__auto__;
      }
    }
  };
  var attr__3 = function(el, k, v) {
    var el__16131 = c2.dom.__GT_dom.call(null, el);
    if(v == null) {
      el__16131.removeAttribute(cljs.core.name.call(null, k))
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0'style", k)) {
        c2.dom.style.call(null, el__16131, v)
      }else {
        el__16131.setAttribute(cljs.core.name.call(null, k), v)
      }
    }
    return el__16131
  };
  attr = function(el, k, v) {
    switch(arguments.length) {
      case 1:
        return attr__1.call(this, el);
      case 2:
        return attr__2.call(this, el, k);
      case 3:
        return attr__3.call(this, el, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  attr.cljs$lang$arity$1 = attr__1;
  attr.cljs$lang$arity$2 = attr__2;
  attr.cljs$lang$arity$3 = attr__3;
  return attr
}();
c2.dom.text = function() {
  var text = null;
  var text__1 = function(el) {
    return goog.dom.getTextContent(c2.dom.__GT_dom.call(null, el))
  };
  var text__2 = function(el, v) {
    var el__16135 = c2.dom.__GT_dom.call(null, el);
    goog.dom.setTextContent(el__16135, v);
    return el__16135
  };
  text = function(el, v) {
    switch(arguments.length) {
      case 1:
        return text__1.call(this, el);
      case 2:
        return text__2.call(this, el, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  text.cljs$lang$arity$1 = text__1;
  text.cljs$lang$arity$2 = text__2;
  return text
}();
c2.dom.val = function() {
  var val = null;
  var val__1 = function(el) {
    return goog.dom.forms.getValue(c2.dom.__GT_dom.call(null, el))
  };
  var val__2 = function(el, v) {
    var el__16137 = c2.dom.__GT_dom.call(null, el);
    goog.dom.forms.setValue(el__16137, v);
    return el__16137
  };
  val = function(el, v) {
    switch(arguments.length) {
      case 1:
        return val__1.call(this, el);
      case 2:
        return val__2.call(this, el, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  val.cljs$lang$arity$1 = val__1;
  val.cljs$lang$arity$2 = val__2;
  return val
}();
c2.dom.classed_BANG_ = function classed_BANG_(el, class$, classed_QMARK_) {
  return goog.dom.classes.enable(c2.dom.__GT_dom.call(null, el), cljs.core.name.call(null, class$), classed_QMARK_)
};
c2.dom.add_class_BANG_ = function add_class_BANG_(el, class$) {
  return c2.dom.classed_BANG_.call(null, el, class$, true)
};
c2.dom.remove_class_BANG_ = function remove_class_BANG_(el, class$) {
  return c2.dom.classed_BANG_.call(null, el, class$, false)
};
c2.dom.request_animation_frame = function() {
  var or__3824__auto____16139 = window.requestAnimationFrame;
  if(cljs.core.truth_(or__3824__auto____16139)) {
    return or__3824__auto____16139
  }else {
    var or__3824__auto____16140 = window.webkitRequestAnimationFrame;
    if(cljs.core.truth_(or__3824__auto____16140)) {
      return or__3824__auto____16140
    }else {
      return function(p1__16138_SHARP_) {
        return setTimeout(function() {
          return p1__16138_SHARP_.call(null)
        }, 10)
      }
    }
  }
}();
goog.provide("aahru.ui");
goog.require("cljs.core");
goog.require("shoreleave.remotes.http_rpc");
goog.require("c2.dom");
goog.require("clojure.string");
aahru.ui.set_navigation = function set_navigation() {
  var loc__18329 = cljs.core.last.call(null, clojure.string.split.call(null, window.location.toString(cljs.core.List.EMPTY), /\//));
  var G__18330__18331 = cljs.core.seq.call(null, c2.dom.children.call(null, c2.dom.select.call(null, "#top-navbar")));
  if(G__18330__18331) {
    var list_item__18332 = cljs.core.first.call(null, G__18330__18331);
    var G__18330__18333 = G__18330__18331;
    while(true) {
      if(cljs.core._EQ_.call(null, [cljs.core.str("/"), cljs.core.str(loc__18329)].join(""), c2.dom.attr.call(null, cljs.core.first.call(null, c2.dom.children.call(null, list_item__18332)), "\ufdd0'href"))) {
        c2.dom.add_class_BANG_.call(null, list_item__18332, "active")
      }else {
        c2.dom.remove_class_BANG_.call(null, list_item__18332, "active")
      }
      var temp__3974__auto____18334 = cljs.core.next.call(null, G__18330__18333);
      if(temp__3974__auto____18334) {
        var G__18330__18335 = temp__3974__auto____18334;
        var G__18336 = cljs.core.first.call(null, G__18330__18335);
        var G__18337 = G__18330__18335;
        list_item__18332 = G__18336;
        G__18330__18333 = G__18337;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
goog.exportSymbol("aahru.ui.set_navigation", aahru.ui.set_navigation);
aahru.ui.logged_in_dropdown = function logged_in_dropdown(user) {
  return cljs.core.PersistentVector.fromArray(["\ufdd0'ul", cljs.core.ObjMap.fromObject(["\ufdd0'class", "\ufdd0'id"], {"\ufdd0'class":"nav pull-right", "\ufdd0'id":"user-dropdown"}), cljs.core.PersistentVector.fromArray(["\ufdd0'li", cljs.core.ObjMap.fromObject(["\ufdd0'class"], {"\ufdd0'class":"divider-vertical"})], true), cljs.core.PersistentVector.fromArray(["\ufdd0'li", cljs.core.ObjMap.fromObject(["\ufdd0'class"], {"\ufdd0'class":"dropdown"}), cljs.core.PersistentVector.fromArray(["\ufdd0'a", 
  cljs.core.ObjMap.fromObject(["\ufdd0'href", "\ufdd0'class", "\ufdd0'data-toggle"], {"\ufdd0'href":"#", "\ufdd0'class":"dropdown-toggle", "\ufdd0'data-toggle":"dropdown"}), cljs.core.PersistentVector.fromArray(["\ufdd0'i", cljs.core.ObjMap.fromObject(["\ufdd0'class", "\ufdd0'style"], {"\ufdd0'class":"icon-user icon-white", "\ufdd0'style":"margin-right: 6px"})], true), user, cljs.core.PersistentVector.fromArray(["\ufdd0'span", cljs.core.ObjMap.fromObject(["\ufdd0'class", "\ufdd0'style"], {"\ufdd0'class":"caret", 
  "\ufdd0'style":"margin-left: 6px"})], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'ul", cljs.core.ObjMap.fromObject(["\ufdd0'class"], {"\ufdd0'class":"dropdown-menu"}), cljs.core.PersistentVector.fromArray(["\ufdd0'li", cljs.core.PersistentVector.fromArray(["\ufdd0'a", cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'href"], {"\ufdd0'id":"logout-btn", "\ufdd0'href":"/logout"}), "Logout"], true)], true)], true)], true)], true)
};
aahru.ui.set_user = function set_user() {
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "meta/username", cljs.core.PersistentVector.EMPTY, function(username) {
    if(cljs.core.truth_(username)) {
      return c2.dom.replace_BANG_.call(null, "#user-dropdown", aahru.ui.logged_in_dropdown.call(null, username))
    }else {
      return null
    }
  })
};
goog.provide("reflex.core");
goog.require("cljs.core");
reflex.core.capture_derefed = function capture_derefed(f) {
  var _BANG_recently_derefed16212__16213 = reflex.core._BANG_recently_derefed;
  try {
    reflex.core._BANG_recently_derefed = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY, "\ufdd0'meta", cljs.core.ObjMap.fromObject(["\ufdd0'no-deref-monitor"], {"\ufdd0'no-deref-monitor":true}));
    var res__16215 = f.call(null);
    return cljs.core.ObjMap.fromObject(["\ufdd0'res", "\ufdd0'derefed"], {"\ufdd0'res":res__16215, "\ufdd0'derefed":cljs.core.deref.call(null, reflex.core._BANG_recently_derefed)})
  }finally {
    reflex.core._BANG_recently_derefed = _BANG_recently_derefed16212__16213
  }
};
reflex.core.notify_deref_watcher_BANG_ = function notify_deref_watcher_BANG_(derefable) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____16217 = reflex.core._BANG_recently_derefed;
    if(cljs.core.truth_(and__3822__auto____16217)) {
      return cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'no-deref-monitor")).call(null, cljs.core.meta.call(null, derefable)))
    }else {
      return and__3822__auto____16217
    }
  }())) {
    return cljs.core.swap_BANG_.call(null, reflex.core._BANG_recently_derefed, function(p1__16207_SHARP_) {
      return cljs.core.conj.call(null, p1__16207_SHARP_, derefable)
    })
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IDeref$ = true;
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  reflex.core.notify_deref_watcher_BANG_.call(null, this$);
  return this$.state
};
reflex.core.IDisposable = {};
reflex.core.dispose_BANG_ = function dispose_BANG_(this$) {
  if(function() {
    var and__3822__auto____16222 = this$;
    if(and__3822__auto____16222) {
      return this$.reflex$core$IDisposable$dispose_BANG_$arity$1
    }else {
      return and__3822__auto____16222
    }
  }()) {
    return this$.reflex$core$IDisposable$dispose_BANG_$arity$1(this$)
  }else {
    var x__2264__auto____16223 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____16224 = reflex.core.dispose_BANG_[goog.typeOf(x__2264__auto____16223)];
      if(or__3824__auto____16224) {
        return or__3824__auto____16224
      }else {
        var or__3824__auto____16225 = reflex.core.dispose_BANG_["_"];
        if(or__3824__auto____16225) {
          return or__3824__auto____16225
        }else {
          throw cljs.core.missing_protocol.call(null, "IDisposable.dispose!", this$);
        }
      }
    }().call(null, this$)
  }
};
reflex.core.ComputedObservable = function(state, dirty_QMARK_, f, key, parent_watchables, watches, __meta, __extmap) {
  this.state = state;
  this.dirty_QMARK_ = dirty_QMARK_;
  this.f = f;
  this.key = key;
  this.parent_watchables = parent_watchables;
  this.watches = watches;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2766571274;
  if(arguments.length > 6) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__16229 = this;
  var h__2093__auto____16230 = this__16229.__hash;
  if(!(h__2093__auto____16230 == null)) {
    return h__2093__auto____16230
  }else {
    var h__2093__auto____16231 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__16229.__hash = h__2093__auto____16231;
    return h__2093__auto____16231
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__16232 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
reflex.core.ComputedObservable.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k16227, else__2227__auto__) {
  var this__16233 = this;
  if(k16227 === "\ufdd0'state") {
    return this__16233.state
  }else {
    if(k16227 === "\ufdd0'dirty?") {
      return this__16233.dirty_QMARK_
    }else {
      if(k16227 === "\ufdd0'f") {
        return this__16233.f
      }else {
        if(k16227 === "\ufdd0'key") {
          return this__16233.key
        }else {
          if(k16227 === "\ufdd0'parent-watchables") {
            return this__16233.parent_watchables
          }else {
            if(k16227 === "\ufdd0'watches") {
              return this__16233.watches
            }else {
              if("\ufdd0'else") {
                return cljs.core._lookup.call(null, this__16233.__extmap, k16227, else__2227__auto__)
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__16226) {
  var this__16234 = this;
  var pred__16235__16238 = cljs.core.identical_QMARK_;
  var expr__16236__16239 = k__2232__auto__;
  if(pred__16235__16238.call(null, "\ufdd0'state", expr__16236__16239)) {
    return new reflex.core.ComputedObservable(G__16226, this__16234.dirty_QMARK_, this__16234.f, this__16234.key, this__16234.parent_watchables, this__16234.watches, this__16234.__meta, this__16234.__extmap, null)
  }else {
    if(pred__16235__16238.call(null, "\ufdd0'dirty?", expr__16236__16239)) {
      return new reflex.core.ComputedObservable(this__16234.state, G__16226, this__16234.f, this__16234.key, this__16234.parent_watchables, this__16234.watches, this__16234.__meta, this__16234.__extmap, null)
    }else {
      if(pred__16235__16238.call(null, "\ufdd0'f", expr__16236__16239)) {
        return new reflex.core.ComputedObservable(this__16234.state, this__16234.dirty_QMARK_, G__16226, this__16234.key, this__16234.parent_watchables, this__16234.watches, this__16234.__meta, this__16234.__extmap, null)
      }else {
        if(pred__16235__16238.call(null, "\ufdd0'key", expr__16236__16239)) {
          return new reflex.core.ComputedObservable(this__16234.state, this__16234.dirty_QMARK_, this__16234.f, G__16226, this__16234.parent_watchables, this__16234.watches, this__16234.__meta, this__16234.__extmap, null)
        }else {
          if(pred__16235__16238.call(null, "\ufdd0'parent-watchables", expr__16236__16239)) {
            return new reflex.core.ComputedObservable(this__16234.state, this__16234.dirty_QMARK_, this__16234.f, this__16234.key, G__16226, this__16234.watches, this__16234.__meta, this__16234.__extmap, null)
          }else {
            if(pred__16235__16238.call(null, "\ufdd0'watches", expr__16236__16239)) {
              return new reflex.core.ComputedObservable(this__16234.state, this__16234.dirty_QMARK_, this__16234.f, this__16234.key, this__16234.parent_watchables, G__16226, this__16234.__meta, this__16234.__extmap, null)
            }else {
              return new reflex.core.ComputedObservable(this__16234.state, this__16234.dirty_QMARK_, this__16234.f, this__16234.key, this__16234.parent_watchables, this__16234.watches, this__16234.__meta, cljs.core.assoc.call(null, this__16234.__extmap, k__2232__auto__, G__16226), null)
            }
          }
        }
      }
    }
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var this__16240 = this;
  reflex.core.notify_deref_watcher_BANG_.call(null, this$);
  if(cljs.core.not.call(null, this__16240.dirty_QMARK_)) {
    return this$.state
  }else {
    var map__16241__16242 = reflex.core.capture_derefed.call(null, this__16240.f);
    var map__16241__16243 = cljs.core.seq_QMARK_.call(null, map__16241__16242) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16241__16242) : map__16241__16242;
    var derefed__16244 = cljs.core._lookup.call(null, map__16241__16243, "\ufdd0'derefed", null);
    var res__16245 = cljs.core._lookup.call(null, map__16241__16243, "\ufdd0'res", null);
    var G__16246__16247 = cljs.core.seq.call(null, this__16240.parent_watchables);
    if(G__16246__16247) {
      var w__16248 = cljs.core.first.call(null, G__16246__16247);
      var G__16246__16249 = G__16246__16247;
      while(true) {
        cljs.core.remove_watch.call(null, w__16248, this__16240.key);
        var temp__3974__auto____16250 = cljs.core.next.call(null, G__16246__16249);
        if(temp__3974__auto____16250) {
          var G__16246__16251 = temp__3974__auto____16250;
          var G__16299 = cljs.core.first.call(null, G__16246__16251);
          var G__16300 = G__16246__16251;
          w__16248 = G__16299;
          G__16246__16249 = G__16300;
          continue
        }else {
        }
        break
      }
    }else {
    }
    this$.parent_watchables = derefed__16244;
    var G__16252__16253 = cljs.core.seq.call(null, derefed__16244);
    if(G__16252__16253) {
      var w__16254 = cljs.core.first.call(null, G__16252__16253);
      var G__16252__16255 = G__16252__16253;
      while(true) {
        cljs.core.add_watch.call(null, w__16254, this__16240.key, function(w__16254, G__16252__16255) {
          return function() {
            this$.dirty_QMARK_ = true;
            return cljs.core._notify_watches.call(null, this$, null, null)
          }
        }(w__16254, G__16252__16255));
        var temp__3974__auto____16256 = cljs.core.next.call(null, G__16252__16255);
        if(temp__3974__auto____16256) {
          var G__16252__16257 = temp__3974__auto____16256;
          var G__16301 = cljs.core.first.call(null, G__16252__16257);
          var G__16302 = G__16252__16257;
          w__16254 = G__16301;
          G__16252__16255 = G__16302;
          continue
        }else {
        }
        break
      }
    }else {
    }
    this$.state = res__16245;
    this$.dirty_QMARK_ = false;
    return res__16245
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__16258 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, _16260, _) {
  var this__16259 = this;
  var G__16261__16262 = cljs.core.seq.call(null, this__16259.watches);
  if(G__16261__16262) {
    var G__16264__16266 = cljs.core.first.call(null, G__16261__16262);
    var vec__16265__16267 = G__16264__16266;
    var key__16268 = cljs.core.nth.call(null, vec__16265__16267, 0, null);
    var wf__16269 = cljs.core.nth.call(null, vec__16265__16267, 1, null);
    var G__16261__16270 = G__16261__16262;
    var G__16264__16271 = G__16264__16266;
    var G__16261__16272 = G__16261__16270;
    while(true) {
      var vec__16273__16274 = G__16264__16271;
      var key__16275 = cljs.core.nth.call(null, vec__16273__16274, 0, null);
      var wf__16276 = cljs.core.nth.call(null, vec__16273__16274, 1, null);
      var G__16261__16277 = G__16261__16272;
      wf__16276.call(null);
      var temp__3974__auto____16278 = cljs.core.next.call(null, G__16261__16277);
      if(temp__3974__auto____16278) {
        var G__16261__16279 = temp__3974__auto____16278;
        var G__16303 = cljs.core.first.call(null, G__16261__16279);
        var G__16304 = G__16261__16279;
        G__16264__16271 = G__16303;
        G__16261__16272 = G__16304;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, wf) {
  var this__16280 = this;
  return this$.watches = cljs.core.assoc.call(null, this__16280.watches, key, wf)
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__16281 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__16281.watches, key)
};
reflex.core.ComputedObservable.prototype.reflex$core$IDisposable$ = true;
reflex.core.ComputedObservable.prototype.reflex$core$IDisposable$dispose_BANG_$arity$1 = function(this$) {
  var this__16282 = this;
  var G__16283__16284 = cljs.core.seq.call(null, this__16282.parent_watchables);
  if(G__16283__16284) {
    var w__16285 = cljs.core.first.call(null, G__16283__16284);
    var G__16283__16286 = G__16283__16284;
    while(true) {
      cljs.core.remove_watch.call(null, w__16285, this__16282.key);
      var temp__3974__auto____16287 = cljs.core.next.call(null, G__16283__16286);
      if(temp__3974__auto____16287) {
        var G__16283__16288 = temp__3974__auto____16287;
        var G__16305 = cljs.core.first.call(null, G__16283__16288);
        var G__16306 = G__16283__16288;
        w__16285 = G__16305;
        G__16283__16286 = G__16306;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return this$.watches = null
};
reflex.core.ComputedObservable.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__16289 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'state", this__16289.state), cljs.core.vector.call(null, "\ufdd0'dirty?", this__16289.dirty_QMARK_), cljs.core.vector.call(null, "\ufdd0'f", this__16289.f), cljs.core.vector.call(null, "\ufdd0'key", this__16289.key), cljs.core.vector.call(null, "\ufdd0'parent-watchables", this__16289.parent_watchables), cljs.core.vector.call(null, "\ufdd0'watches", this__16289.watches)], 
  true), this__16289.__extmap))
};
reflex.core.ComputedObservable.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__16290 = this;
  var pr_pair__2240__auto____16291 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____16291, [cljs.core.str("#"), cljs.core.str("ComputedObservable"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'state", this__16290.state), cljs.core.vector.call(null, "\ufdd0'dirty?", this__16290.dirty_QMARK_), cljs.core.vector.call(null, "\ufdd0'f", this__16290.f), cljs.core.vector.call(null, "\ufdd0'key", this__16290.key), 
  cljs.core.vector.call(null, "\ufdd0'parent-watchables", this__16290.parent_watchables), cljs.core.vector.call(null, "\ufdd0'watches", this__16290.watches)], true), this__16290.__extmap))
};
reflex.core.ComputedObservable.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__16292 = this;
  return 6 + cljs.core.count.call(null, this__16292.__extmap)
};
reflex.core.ComputedObservable.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__16293 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____16294 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____16294)) {
      var and__3822__auto____16295 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____16295) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____16295
      }
    }else {
      return and__3822__auto____16294
    }
  }())) {
    return true
  }else {
    return false
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__16226) {
  var this__16296 = this;
  return new reflex.core.ComputedObservable(this__16296.state, this__16296.dirty_QMARK_, this__16296.f, this__16296.key, this__16296.parent_watchables, this__16296.watches, G__16226, this__16296.__extmap, this__16296.__hash)
};
reflex.core.ComputedObservable.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__16297 = this;
  return this__16297.__meta
};
reflex.core.ComputedObservable.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__16298 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'dirty?", "\ufdd0'state", "\ufdd0'key", "\ufdd0'f", "\ufdd0'watches", "\ufdd0'parent-watchables"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__16298.__meta), k__2234__auto__)
  }else {
    return new reflex.core.ComputedObservable(this__16298.state, this__16298.dirty_QMARK_, this__16298.f, this__16298.key, this__16298.parent_watchables, this__16298.watches, this__16298.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__16298.__extmap, k__2234__auto__)), null)
  }
};
reflex.core.ComputedObservable.cljs$lang$type = true;
reflex.core.ComputedObservable.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "reflex.core/ComputedObservable")
};
reflex.core.__GT_ComputedObservable = function __GT_ComputedObservable(state, dirty_QMARK_, f, key, parent_watchables, watches) {
  return new reflex.core.ComputedObservable(state, dirty_QMARK_, f, key, parent_watchables, watches)
};
reflex.core.map__GT_ComputedObservable = function map__GT_ComputedObservable(G__16228) {
  return new reflex.core.ComputedObservable((new cljs.core.Keyword("\ufdd0'state")).call(null, G__16228), (new cljs.core.Keyword("\ufdd0'dirty?")).call(null, G__16228), (new cljs.core.Keyword("\ufdd0'f")).call(null, G__16228), (new cljs.core.Keyword("\ufdd0'key")).call(null, G__16228), (new cljs.core.Keyword("\ufdd0'parent-watchables")).call(null, G__16228), (new cljs.core.Keyword("\ufdd0'watches")).call(null, G__16228), null, cljs.core.dissoc.call(null, G__16228, "\ufdd0'state", "\ufdd0'dirty?", 
  "\ufdd0'f", "\ufdd0'key", "\ufdd0'parent-watchables", "\ufdd0'watches"))
};
reflex.core.ComputedObservable;
reflex.core.ComputedObservable.prototype.cljs$core$IHash$ = true;
reflex.core.ComputedObservable.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  return this$.key
};
goog.provide("dubstep.pubsub");
goog.require("cljs.core");
dubstep.pubsub._STAR__BANG_channel_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
goog.provide("c2.util");
goog.require("cljs.core");
goog.require("singult.core");
c2.util.clj__GT_js = singult.core.clj__GT_js;
c2.util.__GT_coll = function __GT_coll(x) {
  if(cljs.core.coll_QMARK_.call(null, x)) {
    return x
  }else {
    return cljs.core.PersistentVector.fromArray([x], true)
  }
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max__16309 = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max__16309, cljs.core.remove.call(null, function(p1__16307_SHARP_) {
    return max__16309 === p1__16307_SHARP_
  }, coll))
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var union__1 = function(s1) {
    return s1
  };
  var union__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2)
    }
  };
  var union__3 = function() {
    var G__16313__delegate = function(s1, s2, sets) {
      var bubbled_sets__16312 = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets__16312), cljs.core.rest.call(null, bubbled_sets__16312))
    };
    var G__16313 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16313__delegate.call(this, s1, s2, sets)
    };
    G__16313.cljs$lang$maxFixedArity = 2;
    G__16313.cljs$lang$applyTo = function(arglist__16314) {
      var s1 = cljs.core.first(arglist__16314);
      var s2 = cljs.core.first(cljs.core.next(arglist__16314));
      var sets = cljs.core.rest(cljs.core.next(arglist__16314));
      return G__16313__delegate(s1, s2, sets)
    };
    G__16313.cljs$lang$arity$variadic = G__16313__delegate;
    return G__16313
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$lang$arity$0 = union__0;
  union.cljs$lang$arity$1 = union__1;
  union.cljs$lang$arity$2 = union__2;
  union.cljs$lang$arity$variadic = union__3.cljs$lang$arity$variadic;
  return union
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1
  };
  var intersection__2 = function(s1, s2) {
    while(true) {
      if(cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__16317 = s2;
        var G__16318 = s1;
        s1 = G__16317;
        s2 = G__16318;
        continue
      }else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if(cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result
            }else {
              return cljs.core.disj.call(null, result, item)
            }
          }
        }(s1, s2), s1, s1)
      }
      break
    }
  };
  var intersection__3 = function() {
    var G__16319__delegate = function(s1, s2, sets) {
      var bubbled_sets__16316 = clojure.set.bubble_max_key.call(null, function(p1__16310_SHARP_) {
        return-cljs.core.count.call(null, p1__16310_SHARP_)
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets__16316), cljs.core.rest.call(null, bubbled_sets__16316))
    };
    var G__16319 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16319__delegate.call(this, s1, s2, sets)
    };
    G__16319.cljs$lang$maxFixedArity = 2;
    G__16319.cljs$lang$applyTo = function(arglist__16320) {
      var s1 = cljs.core.first(arglist__16320);
      var s2 = cljs.core.first(cljs.core.next(arglist__16320));
      var sets = cljs.core.rest(cljs.core.next(arglist__16320));
      return G__16319__delegate(s1, s2, sets)
    };
    G__16319.cljs$lang$arity$variadic = G__16319__delegate;
    return G__16319
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$lang$arity$1 = intersection__1;
  intersection.cljs$lang$arity$2 = intersection__2;
  intersection.cljs$lang$arity$variadic = intersection__3.cljs$lang$arity$variadic;
  return intersection
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1
  };
  var difference__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if(cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item)
        }else {
          return result
        }
      }, s1, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2)
    }
  };
  var difference__3 = function() {
    var G__16321__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2))
    };
    var G__16321 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16321__delegate.call(this, s1, s2, sets)
    };
    G__16321.cljs$lang$maxFixedArity = 2;
    G__16321.cljs$lang$applyTo = function(arglist__16322) {
      var s1 = cljs.core.first(arglist__16322);
      var s2 = cljs.core.first(cljs.core.next(arglist__16322));
      var sets = cljs.core.rest(cljs.core.next(arglist__16322));
      return G__16321__delegate(s1, s2, sets)
    };
    G__16321.cljs$lang$arity$variadic = G__16321__delegate;
    return G__16321
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$lang$arity$1 = difference__1;
  difference.cljs$lang$arity$2 = difference__2;
  difference.cljs$lang$arity$variadic = difference__3.cljs$lang$arity$variadic;
  return difference
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if(cljs.core.truth_(pred.call(null, k))) {
      return s
    }else {
      return cljs.core.disj.call(null, s, k)
    }
  }, xset, xset)
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__16323_SHARP_) {
    return cljs.core.select_keys.call(null, p1__16323_SHARP_, ks)
  }, xrel))
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__16331) {
    var vec__16332__16333 = p__16331;
    var old__16334 = cljs.core.nth.call(null, vec__16332__16333, 0, null);
    var new__16335 = cljs.core.nth.call(null, vec__16332__16333, 1, null);
    if(function() {
      var and__3822__auto____16336 = cljs.core.not_EQ_.call(null, old__16334, new__16335);
      if(and__3822__auto____16336) {
        return cljs.core.contains_QMARK_.call(null, m, old__16334)
      }else {
        return and__3822__auto____16336
      }
    }()) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, m, new__16335, cljs.core._lookup.call(null, m, old__16334, null)), old__16334)
    }else {
      return m
    }
  }, map, kmap)
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__16324_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__16324_SHARP_, kmap)
  }, xrel))
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik__16338 = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik__16338, cljs.core.conj.call(null, cljs.core._lookup.call(null, m, ik__16338, cljs.core.PersistentHashSet.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, xrel)
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m, p__16348) {
    var vec__16349__16350 = p__16348;
    var k__16351 = cljs.core.nth.call(null, vec__16349__16350, 0, null);
    var v__16352 = cljs.core.nth.call(null, vec__16349__16350, 1, null);
    return cljs.core.assoc.call(null, m, v__16352, k__16351)
  }, cljs.core.ObjMap.EMPTY, m)
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if(function() {
      var and__3822__auto____16369 = cljs.core.seq.call(null, xrel);
      if(and__3822__auto____16369) {
        return cljs.core.seq.call(null, yrel)
      }else {
        return and__3822__auto____16369
      }
    }()) {
      var ks__16371 = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__16370__16372 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel], true) : cljs.core.PersistentVector.fromArray([yrel, xrel], true);
      var r__16373 = cljs.core.nth.call(null, vec__16370__16372, 0, null);
      var s__16374 = cljs.core.nth.call(null, vec__16370__16372, 1, null);
      var idx__16375 = clojure.set.index.call(null, r__16373, ks__16371);
      return cljs.core.reduce.call(null, function(ret, x) {
        var found__16376 = idx__16375.call(null, cljs.core.select_keys.call(null, x, ks__16371));
        if(cljs.core.truth_(found__16376)) {
          return cljs.core.reduce.call(null, function(p1__16339_SHARP_, p2__16340_SHARP_) {
            return cljs.core.conj.call(null, p1__16339_SHARP_, cljs.core.merge.call(null, p2__16340_SHARP_, x))
          }, ret, found__16376)
        }else {
          return ret
        }
      }, cljs.core.PersistentHashSet.EMPTY, s__16374)
    }else {
      return cljs.core.PersistentHashSet.EMPTY
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__16377__16378 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel, clojure.set.map_invert.call(null, km)], true) : cljs.core.PersistentVector.fromArray([yrel, xrel, km], true);
    var r__16379 = cljs.core.nth.call(null, vec__16377__16378, 0, null);
    var s__16380 = cljs.core.nth.call(null, vec__16377__16378, 1, null);
    var k__16381 = cljs.core.nth.call(null, vec__16377__16378, 2, null);
    var idx__16382 = clojure.set.index.call(null, r__16379, cljs.core.vals.call(null, k__16381));
    return cljs.core.reduce.call(null, function(ret, x) {
      var found__16383 = idx__16382.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k__16381)), k__16381));
      if(cljs.core.truth_(found__16383)) {
        return cljs.core.reduce.call(null, function(p1__16341_SHARP_, p2__16342_SHARP_) {
          return cljs.core.conj.call(null, p1__16341_SHARP_, cljs.core.merge.call(null, p2__16342_SHARP_, x))
        }, ret, found__16383)
      }else {
        return ret
      }
    }, cljs.core.PersistentHashSet.EMPTY, s__16380)
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$2 = join__2;
  join.cljs$lang$arity$3 = join__3;
  return join
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  var and__3822__auto____16386 = cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2);
  if(and__3822__auto____16386) {
    return cljs.core.every_QMARK_.call(null, function(p1__16353_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set2, p1__16353_SHARP_)
    }, set1)
  }else {
    return and__3822__auto____16386
  }
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  var and__3822__auto____16388 = cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2);
  if(and__3822__auto____16388) {
    return cljs.core.every_QMARK_.call(null, function(p1__16384_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set1, p1__16384_SHARP_)
    }, set2)
  }else {
    return and__3822__auto____16388
  }
};
goog.provide("vcfvis.core");
goog.require("cljs.core");
goog.require("c2.util");
goog.require("dubstep.pubsub");
goog.require("reflex.core");
goog.require("clojure.set");
goog.require("c2.util");
vcfvis.core._BANG_context = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
vcfvis.core._BANG_vcfs = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
vcfvis.core.check_new_vcfs_BANG_ = function check_new_vcfs_BANG_(new_vcfs) {
  if(cljs.core.seq.call(null, new_vcfs)) {
    cljs.core.reset_BANG_.call(null, vcfvis.core._BANG_vcfs, cljs.core.vec.call(null, cljs.core.filter.call(null, function(p1__46078_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, new_vcfs, (new cljs.core.Keyword("\ufdd0'file-url")).call(null, p1__46078_SHARP_))
    }, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs))));
    return clojure.set.difference.call(null, new_vcfs, cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.map.call(null, "\ufdd0'file-url", cljs.core.deref.call(null, vcfvis.core._BANG_vcfs))))
  }else {
    return cljs.core.reset_BANG_.call(null, vcfvis.core._BANG_vcfs, cljs.core.PersistentVector.EMPTY)
  }
};
vcfvis.core._BANG_available_files = function() {
  var co__6205__auto____46079 = new reflex.core.ComputedObservable(null, true, function() {
    return cljs.core._lookup.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_context), "\ufdd0'files", cljs.core.PersistentVector.EMPTY)
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6205__auto____46079);
  return co__6205__auto____46079
}();
vcfvis.core.intersection = function() {
  var intersection = null;
  var intersection__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var intersection__1 = function() {
    var G__46080__delegate = function(args) {
      return cljs.core.apply.call(null, clojure.set.intersection, args)
    };
    var G__46080 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__46080__delegate.call(this, args)
    };
    G__46080.cljs$lang$maxFixedArity = 0;
    G__46080.cljs$lang$applyTo = function(arglist__46081) {
      var args = cljs.core.seq(arglist__46081);
      return G__46080__delegate(args)
    };
    G__46080.cljs$lang$arity$variadic = G__46080__delegate;
    return G__46080
  }();
  intersection = function(var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 0:
        return intersection__0.call(this);
      default:
        return intersection__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  intersection.cljs$lang$maxFixedArity = 0;
  intersection.cljs$lang$applyTo = intersection__1.cljs$lang$applyTo;
  intersection.cljs$lang$arity$0 = intersection__0;
  intersection.cljs$lang$arity$variadic = intersection__1.cljs$lang$arity$variadic;
  return intersection
}();
vcfvis.core._BANG_shared_metrics = function() {
  var co__6205__auto____46082 = new reflex.core.ComputedObservable(null, true, function() {
    return cljs.core.reduce.call(null, vcfvis.core.intersection, cljs.core.map.call(null, "\ufdd0'available-metrics", cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)))
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6205__auto____46082);
  return co__6205__auto____46082
}();
vcfvis.core._BANG_metric = cljs.core.atom.call(null, null);
vcfvis.core.select_metric_BANG_ = function select_metric_BANG_(metric) {
  return cljs.core.reset_BANG_.call(null, vcfvis.core._BANG_metric, metric)
};
var co__6211__auto____46085 = function() {
  var co__6205__auto____46084 = new reflex.core.ComputedObservable(null, true, function() {
    var shared__46083 = cljs.core.deref.call(null, vcfvis.core._BANG_shared_metrics);
    if(cljs.core.seq.call(null, shared__46083)) {
      if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([cljs.core.deref.call(null, vcfvis.core._BANG_metric)]), shared__46083))) {
        return null
      }else {
        return vcfvis.core.select_metric_BANG_.call(null, cljs.core.first.call(null, shared__46083))
      }
    }else {
      return null
    }
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6205__auto____46084);
  return co__6205__auto____46084
}();
cljs.core.add_watch.call(null, co__6211__auto____46085, "\ufdd0'reflex-constraint", function() {
  var shared__46086 = cljs.core.deref.call(null, vcfvis.core._BANG_shared_metrics);
  if(cljs.core.seq.call(null, shared__46086)) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([cljs.core.deref.call(null, vcfvis.core._BANG_metric)]), shared__46086))) {
      return null
    }else {
      return vcfvis.core.select_metric_BANG_.call(null, cljs.core.first.call(null, shared__46086))
    }
  }else {
    return null
  }
});
co__6211__auto____46085;
vcfvis.core._BANG_filters = function() {
  var co__6205__auto____46089 = new reflex.core.ComputedObservable(null, true, function() {
    return cljs.core.reduce.call(null, function(filters, m) {
      var temp__3971__auto____46087 = cljs.core.deref.call(null, m.call(null, "\ufdd0'!filter-extent"));
      if(cljs.core.truth_(temp__3971__auto____46087)) {
        var extent__46088 = temp__3971__auto____46087;
        return cljs.core.assoc.call(null, filters, m.call(null, "\ufdd0'id"), extent__46088)
      }else {
        return filters
      }
    }, cljs.core.ObjMap.EMPTY, cljs.core.deref.call(null, vcfvis.core._BANG_shared_metrics))
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6205__auto____46089);
  return co__6205__auto____46089
}();
vcfvis.core._BANG_cat_filters = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
vcfvis.core._BANG_visible_metrics = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY, "\ufdd0'validator", function(ms) {
  if(cljs.core.contains_QMARK_.call(null, ms, cljs.core.deref.call(null, vcfvis.core._BANG_metric))) {
    throw new Error("Selected metric doesn't need a mini-histogram.");
  }else {
    return true
  }
});
var co__6211__auto____46092 = function() {
  var co__6205__auto____46091 = new reflex.core.ComputedObservable(null, true, function() {
    var m__46090 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
    if(cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_visible_metrics), m__46090)) {
      return cljs.core.swap_BANG_.call(null, vcfvis.core._BANG_visible_metrics, cljs.core.disj, m__46090)
    }else {
      return null
    }
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6205__auto____46091);
  return co__6205__auto____46091
}();
cljs.core.add_watch.call(null, co__6211__auto____46092, "\ufdd0'reflex-constraint", function() {
  var m__46093 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
  if(cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_visible_metrics), m__46093)) {
    return cljs.core.swap_BANG_.call(null, vcfvis.core._BANG_visible_metrics, cljs.core.disj, m__46093)
  }else {
    return null
  }
});
co__6211__auto____46092;
vcfvis.core.visible_metric_QMARK_ = function visible_metric_QMARK_(m) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_visible_metrics), m)
};
vcfvis.core.toggle_visible_metric_BANG_ = function toggle_visible_metric_BANG_(m) {
  return cljs.core.swap_BANG_.call(null, vcfvis.core._BANG_visible_metrics, cljs.core.truth_(vcfvis.core.visible_metric_QMARK_.call(null, m)) ? cljs.core.disj : cljs.core.conj, m)
};
vcfvis.core.update_metric_BANG_ = function update_metric_BANG_(m, extent) {
  var vec__46111__46112 = m.call(null, "\ufdd0'range");
  var min__46113 = cljs.core.nth.call(null, vec__46111__46112, 0, null);
  var max__46114 = cljs.core.nth.call(null, vec__46111__46112, 1, null);
  var extent__46115 = cljs.core.apply.call(null, cljs.core._, extent) === 0 ? null : cljs.core._EQ_.call(null, extent, cljs.core.PersistentVector.fromArray([min__46113, max__46114], true)) ? cljs.core.PersistentVector.fromArray([-Infinity, Infinity], true) : cljs.core._EQ_.call(null, cljs.core.first.call(null, extent), min__46113) ? cljs.core.PersistentVector.fromArray([-Infinity, cljs.core.second.call(null, extent)], true) : cljs.core._EQ_.call(null, cljs.core.second.call(null, extent), max__46114) ? 
  cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, extent), Infinity], true) : "\ufdd0'else" ? extent : null;
  var G__46116__46117 = cljs.core.seq.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs));
  if(G__46116__46117) {
    var vcf__46118 = cljs.core.first.call(null, G__46116__46117);
    var G__46116__46119 = G__46116__46117;
    while(true) {
      cljs.core.get_in.call(null, vcf__46118, cljs.core.PersistentVector.fromArray(["\ufdd0'cf", m.call(null, "\ufdd0'id"), "\ufdd0'dimension"], true)).filter(c2.util.clj__GT_js.call(null, extent__46115));
      var temp__3974__auto____46120 = cljs.core.next.call(null, G__46116__46119);
      if(temp__3974__auto____46120) {
        var G__46116__46121 = temp__3974__auto____46120;
        var G__46128 = cljs.core.first.call(null, G__46116__46121);
        var G__46129 = G__46116__46121;
        vcf__46118 = G__46128;
        G__46116__46119 = G__46129;
        continue
      }else {
      }
      break
    }
  }else {
  }
  cljs.core.reset_BANG_.call(null, m.call(null, "\ufdd0'!filter-extent"), extent__46115);
  var G__46122__46123 = cljs.core.seq.call(null, cljs.core.deref.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_));
  if(G__46122__46123) {
    var s__8951__auto____46124 = cljs.core.first.call(null, G__46122__46123);
    var G__46122__46125 = G__46122__46123;
    while(true) {
      s__8951__auto____46124.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'filter-updated"], {"\ufdd0'filter-updated":m}));
      var temp__3974__auto____46126 = cljs.core.next.call(null, G__46122__46125);
      if(temp__3974__auto____46126) {
        var G__46122__46127 = temp__3974__auto____46126;
        var G__46130 = cljs.core.first.call(null, G__46122__46127);
        var G__46131 = G__46122__46127;
        s__8951__auto____46124 = G__46130;
        G__46122__46125 = G__46131;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.swap_BANG_.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_, cljs.core.conj, function(m__8957__auto__) {
  try {
    if(function() {
      var G__46137__46138 = m__8957__auto__;
      if(G__46137__46138) {
        if(function() {
          var or__3824__auto____46139 = G__46137__46138.cljs$lang$protocol_mask$partition0$ & 256;
          if(or__3824__auto____46139) {
            return or__3824__auto____46139
          }else {
            return G__46137__46138.cljs$core$ILookup$
          }
        }()) {
          return true
        }else {
          if(!G__46137__46138.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__46137__46138)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__46137__46138)
      }
    }()) {
      var extent__46141 = function() {
        var val__6595__auto____46140 = cljs.core._lookup.call(null, m__8957__auto__, "\ufdd0'extent", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6595__auto____46140, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6595__auto____46140
        }
      }();
      var metric__46143 = function() {
        var val__6595__auto____46142 = cljs.core._lookup.call(null, m__8957__auto__, "\ufdd0'metric-brushed", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6595__auto____46142, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6595__auto____46142
        }
      }();
      return vcfvis.core.update_metric_BANG_.call(null, metric__46143, extent__46141)
    }else {
      if("\ufdd0'else") {
        throw 0;
      }else {
        return null
      }
    }
  }catch(e__7028__auto__) {
    if(e__7028__auto__ === 0) {
      var G__46132__46136 = m__8957__auto__;
      return null
    }else {
      throw e__7028__auto__;
    }
  }
});
goog.provide("vcfvis.ui");
goog.require("cljs.core");
goog.require("aahru.ui");
goog.require("c2.dom");
goog.require("vcfvis.core");
vcfvis.ui.set_user = aahru.ui.set_user;
vcfvis.ui.set_navigation = aahru.ui.set_navigation;
vcfvis.ui.hist_margin = 20;
vcfvis.ui.inter_hist_margin = 20;
vcfvis.ui.axis_height = parseFloat(c2.dom.style.call(null, "#hist-axis", "\ufdd0'height"));
vcfvis.ui.hist_height = parseFloat(c2.dom.style.call(null, "#histograms", "\ufdd0'height"));
vcfvis.ui.hist_width = parseFloat(c2.dom.style.call(null, "#histograms", "\ufdd0'width")) - 2 * vcfvis.ui.hist_margin;
vcfvis.ui.hist_bins = 100;
goog.provide("chosen.jquery");
goog.require("cljs.core");
jQuery.prototype.cljs$core$IReduce$ = true;
jQuery.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  return cljs.core.ci_reduce.call(null, this$, f)
};
jQuery.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  return cljs.core.ci_reduce.call(null, this$, f, start)
};
jQuery.prototype.cljs$core$ILookup$ = true;
jQuery.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var or__3824__auto____11487 = this$.slice(k, k + 1);
  if(cljs.core.truth_(or__3824__auto____11487)) {
    return or__3824__auto____11487
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  return cljs.core._nth.call(null, this$, k, not_found)
};
jQuery.prototype.cljs$core$ISequential$ = true;
jQuery.prototype.cljs$core$IIndexed$ = true;
jQuery.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    if(void 0 === not_found) {
      return null
    }else {
      return not_found
    }
  }
};
jQuery.prototype.cljs$core$ICounted$ = true;
jQuery.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  return this$.size()
};
jQuery.prototype.cljs$core$ISeq$ = true;
jQuery.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  return this$.get(0)
};
jQuery.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  if(cljs.core.count.call(null, this$) > 1) {
    return this$.slice(1)
  }else {
    return cljs.core.list.call(null)
  }
};
jQuery.prototype.cljs$core$ISeqable$ = true;
jQuery.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  if(cljs.core.truth_(this$.get(0))) {
    return this$
  }else {
    return null
  }
};
goog.provide("chosen.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("chosen.jquery");
goog.require("goog.string");
goog.require("clojure.string");
chosen.core.ISelectable = {};
chosen.core.selected = function() {
  var selected = null;
  var selected__1 = function(this$) {
    if(function() {
      var and__3822__auto____11281 = this$;
      if(and__3822__auto____11281) {
        return this$.chosen$core$ISelectable$selected$arity$1
      }else {
        return and__3822__auto____11281
      }
    }()) {
      return this$.chosen$core$ISelectable$selected$arity$1(this$)
    }else {
      var x__2264__auto____11282 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11283 = chosen.core.selected[goog.typeOf(x__2264__auto____11282)];
        if(or__3824__auto____11283) {
          return or__3824__auto____11283
        }else {
          var or__3824__auto____11284 = chosen.core.selected["_"];
          if(or__3824__auto____11284) {
            return or__3824__auto____11284
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelectable.selected", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var selected__2 = function(this$, values) {
    if(function() {
      var and__3822__auto____11285 = this$;
      if(and__3822__auto____11285) {
        return this$.chosen$core$ISelectable$selected$arity$2
      }else {
        return and__3822__auto____11285
      }
    }()) {
      return this$.chosen$core$ISelectable$selected$arity$2(this$, values)
    }else {
      var x__2264__auto____11286 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11287 = chosen.core.selected[goog.typeOf(x__2264__auto____11286)];
        if(or__3824__auto____11287) {
          return or__3824__auto____11287
        }else {
          var or__3824__auto____11288 = chosen.core.selected["_"];
          if(or__3824__auto____11288) {
            return or__3824__auto____11288
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelectable.selected", this$);
          }
        }
      }().call(null, this$, values)
    }
  };
  selected = function(this$, values) {
    switch(arguments.length) {
      case 1:
        return selected__1.call(this, this$);
      case 2:
        return selected__2.call(this, this$, values)
    }
    throw"Invalid arity: " + arguments.length;
  };
  selected.cljs$lang$arity$1 = selected__1;
  selected.cljs$lang$arity$2 = selected__2;
  return selected
}();
chosen.core.IOptions = {};
chosen.core.options = function() {
  var options = null;
  var options__1 = function(this$) {
    if(function() {
      var and__3822__auto____11297 = this$;
      if(and__3822__auto____11297) {
        return this$.chosen$core$IOptions$options$arity$1
      }else {
        return and__3822__auto____11297
      }
    }()) {
      return this$.chosen$core$IOptions$options$arity$1(this$)
    }else {
      var x__2264__auto____11298 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11299 = chosen.core.options[goog.typeOf(x__2264__auto____11298)];
        if(or__3824__auto____11299) {
          return or__3824__auto____11299
        }else {
          var or__3824__auto____11300 = chosen.core.options["_"];
          if(or__3824__auto____11300) {
            return or__3824__auto____11300
          }else {
            throw cljs.core.missing_protocol.call(null, "IOptions.options", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var options__2 = function(this$, opts) {
    if(function() {
      var and__3822__auto____11301 = this$;
      if(and__3822__auto____11301) {
        return this$.chosen$core$IOptions$options$arity$2
      }else {
        return and__3822__auto____11301
      }
    }()) {
      return this$.chosen$core$IOptions$options$arity$2(this$, opts)
    }else {
      var x__2264__auto____11302 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11303 = chosen.core.options[goog.typeOf(x__2264__auto____11302)];
        if(or__3824__auto____11303) {
          return or__3824__auto____11303
        }else {
          var or__3824__auto____11304 = chosen.core.options["_"];
          if(or__3824__auto____11304) {
            return or__3824__auto____11304
          }else {
            throw cljs.core.missing_protocol.call(null, "IOptions.options", this$);
          }
        }
      }().call(null, this$, opts)
    }
  };
  options = function(this$, opts) {
    switch(arguments.length) {
      case 1:
        return options__1.call(this, this$);
      case 2:
        return options__2.call(this, this$, opts)
    }
    throw"Invalid arity: " + arguments.length;
  };
  options.cljs$lang$arity$1 = options__1;
  options.cljs$lang$arity$2 = options__2;
  return options
}();
chosen.core.__GT_coll = function __GT_coll(c) {
  if(!function() {
    var or__3824__auto____11307 = cljs.core.set_QMARK_.call(null, c);
    if(or__3824__auto____11307) {
      return or__3824__auto____11307
    }else {
      return cljs.core.sequential_QMARK_.call(null, c)
    }
  }()) {
    return cljs.core.PersistentVector.fromArray([c], true)
  }else {
    return c
  }
};
chosen.core.option_values = function option_values(option_els) {
  return cljs.core.map.call(null, function(p1__11305_SHARP_) {
    return p1__11305_SHARP_.value
  }, option_els)
};
chosen.core.selected_values = function selected_values(el) {
  return cljs.core.set.call(null, chosen.core.option_values.call(null, $(el).find("option:selected")))
};
chosen.core.el_options = function el_options(el) {
  return cljs.core.map.call(null, function(e) {
    var $e__11310 = $(e);
    var group__11311 = $e__11310.parent("optgroup").attr("label");
    return cljs.core.ObjMap.fromObject(["\ufdd0'text", "\ufdd0'value", "\ufdd0'selected", "\ufdd0'disabled", "\ufdd0'group"], {"\ufdd0'text":$e__11310.text(), "\ufdd0'value":$e__11310.val(), "\ufdd0'selected":e.selected, "\ufdd0'disabled":e.disabled, "\ufdd0'group":void 0 === group__11311 ? null : group__11311})
  }, $(el).find("option"))
};
chosen.core.opt__GT_html = function opt__GT_html(o) {
  var map__11322__11323 = o;
  var map__11322__11324 = cljs.core.seq_QMARK_.call(null, map__11322__11323) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11322__11323) : map__11322__11323;
  var style__11325 = cljs.core._lookup.call(null, map__11322__11324, "\ufdd0'style", null);
  var group__11326 = cljs.core._lookup.call(null, map__11322__11324, "\ufdd0'group", null);
  var disabled__11327 = cljs.core._lookup.call(null, map__11322__11324, "\ufdd0'disabled", null);
  var selected__11328 = cljs.core._lookup.call(null, map__11322__11324, "\ufdd0'selected", null);
  var text__11329 = cljs.core._lookup.call(null, map__11322__11324, "\ufdd0'text", null);
  var value__11330 = cljs.core._lookup.call(null, map__11322__11324, "\ufdd0'value", null);
  return[cljs.core.str(clojure.string.join.call(null, " ", cljs.core.PersistentVector.fromArray(["<option", [cljs.core.str('value="'), cljs.core.str(goog.string.htmlEscape(function() {
    var or__3824__auto____11331 = value__11330;
    if(cljs.core.truth_(or__3824__auto____11331)) {
      return or__3824__auto____11331
    }else {
      return text__11329
    }
  }())), cljs.core.str('"')].join(""), cljs.core.truth_(style__11325) ? [cljs.core.str("style='"), cljs.core.str(goog.string.htmlEscape(style__11325)), cljs.core.str("'")].join("") : null, cljs.core.truth_(disabled__11327) ? "disabled='disabled'" : null, cljs.core.truth_(selected__11328) ? "selected='selected'" : null, ">"], true))), cljs.core.str(text__11329), cljs.core.str("</option>")].join("")
};
chosen.core.optionify = function optionify(x) {
  if(cljs.core.map_QMARK_.call(null, x)) {
    return x
  }else {
    return cljs.core.ObjMap.fromObject(["\ufdd0'value", "\ufdd0'text"], {"\ufdd0'value":x, "\ufdd0'text":[cljs.core.str(x)].join("")})
  }
};
chosen.core.reset_dom_options_BANG_ = function reset_dom_options_BANG_($el, options) {
  $el.children().remove();
  var G__11352__11353 = cljs.core.seq.call(null, cljs.core.group_by.call(null, "\ufdd0'group", cljs.core.map.call(null, chosen.core.optionify, chosen.core.__GT_coll.call(null, options))));
  if(G__11352__11353) {
    var G__11355__11357 = cljs.core.first.call(null, G__11352__11353);
    var vec__11356__11358 = G__11355__11357;
    var group__11359 = cljs.core.nth.call(null, vec__11356__11358, 0, null);
    var opts__11360 = cljs.core.nth.call(null, vec__11356__11358, 1, null);
    var G__11352__11361 = G__11352__11353;
    var G__11355__11362 = G__11355__11357;
    var G__11352__11363 = G__11352__11361;
    while(true) {
      var vec__11364__11365 = G__11355__11362;
      var group__11366 = cljs.core.nth.call(null, vec__11364__11365, 0, null);
      var opts__11367 = cljs.core.nth.call(null, vec__11364__11365, 1, null);
      var G__11352__11368 = G__11352__11363;
      var opts_html__11369 = clojure.string.join.call(null, "\n", cljs.core.map.call(null, chosen.core.opt__GT_html, opts__11367));
      if(group__11366 == null) {
        $el.append(opts_html__11369)
      }else {
        $el.append([cljs.core.str("<optgroup label='"), cljs.core.str(goog.string.htmlEscape(cljs.core.name.call(null, group__11366))), cljs.core.str("'>"), cljs.core.str(opts_html__11369), cljs.core.str("</optgroup>")].join(""))
      }
      var temp__3974__auto____11370 = cljs.core.next.call(null, G__11352__11368);
      if(temp__3974__auto____11370) {
        var G__11352__11371 = temp__3974__auto____11370;
        var G__11372 = cljs.core.first.call(null, G__11352__11371);
        var G__11373 = G__11352__11371;
        G__11355__11362 = G__11372;
        G__11352__11363 = G__11373;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
chosen.core.Chosen = function($el, _BANG_a, multiple_QMARK_) {
  this.$el = $el;
  this._BANG_a = _BANG_a;
  this.multiple_QMARK_ = multiple_QMARK_;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147516416
};
chosen.core.Chosen.cljs$lang$type = true;
chosen.core.Chosen.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "chosen.core/Chosen")
};
chosen.core.Chosen.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(_11375, _11376, _) {
  var this__11374 = this;
  return null
};
chosen.core.Chosen.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(_, key, f) {
  var this__11377 = this;
  return cljs.core.add_watch.call(null, this__11377._BANG_a, key, function(_11380, _, p__11378, p__11379) {
    var map__11381__11383 = p__11378;
    var map__11381__11384 = cljs.core.seq_QMARK_.call(null, map__11381__11383) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11381__11383) : map__11381__11383;
    var old_sel__11385 = cljs.core._lookup.call(null, map__11381__11384, "\ufdd0'selected", null);
    var map__11382__11386 = p__11379;
    var map__11382__11387 = cljs.core.seq_QMARK_.call(null, map__11382__11386) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11382__11386) : map__11382__11386;
    var sel__11388 = cljs.core._lookup.call(null, map__11382__11387, "\ufdd0'selected", null);
    if(cljs.core.not_EQ_.call(null, old_sel__11385, sel__11388)) {
      return f.call(null, cljs.core.truth_(this__11377.multiple_QMARK_) ? sel__11388 : cljs.core.first.call(null, sel__11388))
    }else {
      return null
    }
  })
};
chosen.core.Chosen.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(_, key) {
  var this__11389 = this;
  return cljs.core.remove_watch.call(null, this__11389._BANG_a, key)
};
chosen.core.Chosen.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var this__11390 = this;
  return this$.chosen$core$ISelectable$selected$arity$1(this$)
};
chosen.core.Chosen.prototype.chosen$core$IOptions$ = true;
chosen.core.Chosen.prototype.chosen$core$IOptions$options$arity$1 = function(_) {
  var this__11391 = this;
  return(new cljs.core.Keyword("\ufdd0'options")).call(null, cljs.core.deref.call(null, this__11391._BANG_a))
};
chosen.core.Chosen.prototype.chosen$core$IOptions$options$arity$2 = function(_, opts) {
  var this__11392 = this;
  chosen.core.reset_dom_options_BANG_.call(null, this__11392.$el, opts);
  return cljs.core.swap_BANG_.call(null, this__11392._BANG_a, cljs.core.assoc, "\ufdd0'options", chosen.core.el_options.call(null, this__11392.$el))
};
chosen.core.Chosen.prototype.chosen$core$ISelectable$ = true;
chosen.core.Chosen.prototype.chosen$core$ISelectable$selected$arity$1 = function(_) {
  var this__11393 = this;
  var sel__11394 = (new cljs.core.Keyword("\ufdd0'selected")).call(null, cljs.core.deref.call(null, this__11393._BANG_a));
  if(cljs.core.truth_(this__11393.multiple_QMARK_)) {
    return sel__11394
  }else {
    return cljs.core.first.call(null, sel__11394)
  }
};
chosen.core.Chosen.prototype.chosen$core$ISelectable$selected$arity$2 = function(_, values) {
  var this__11395 = this;
  return cljs.core.swap_BANG_.call(null, this__11395._BANG_a, cljs.core.assoc, "\ufdd0'selected", chosen.core.__GT_coll.call(null, values))
};
chosen.core.Chosen;
chosen.core.ichooseu_BANG_ = function() {
  var ichooseu_BANG___delegate = function(el, p__11396) {
    var map__11420__11421 = p__11396;
    var map__11420__11422 = cljs.core.seq_QMARK_.call(null, map__11420__11421) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11420__11421) : map__11420__11421;
    var search_contains__11423 = cljs.core._lookup.call(null, map__11420__11422, "\ufdd0'search-contains", false);
    var $el__11424 = $(el);
    var multiple_QMARK___11425 = cljs.core._EQ_.call(null, "multiple", $el__11424.attr("multiple"));
    var _BANG_a__11426 = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'options", "\ufdd0'selected"], {"\ufdd0'options":chosen.core.el_options.call(null, $el__11424), "\ufdd0'selected":chosen.core.selected_values.call(null, $el__11424)}));
    $el__11424.chosen(function() {
      var G__11427__11428 = {};
      G__11427__11428["search_contains"] = search_contains__11423;
      return G__11427__11428
    }()).on("change", function() {
      return cljs.core.swap_BANG_.call(null, _BANG_a__11426, cljs.core.assoc, "\ufdd0'selected", chosen.core.selected_values.call(null, $el__11424))
    });
    cljs.core.add_watch.call(null, _BANG_a__11426, "\ufdd0'_update-dom", function(_11430, _11431, _, p__11429) {
      var map__11432__11433 = p__11429;
      var map__11432__11434 = cljs.core.seq_QMARK_.call(null, map__11432__11433) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11432__11433) : map__11432__11433;
      var selected__11435 = cljs.core._lookup.call(null, map__11432__11434, "\ufdd0'selected", null);
      $el__11424.find("option[selected='selected']").removeAttr("selected");
      var G__11436__11437 = cljs.core.seq.call(null, selected__11435);
      if(G__11436__11437) {
        var val__11438 = cljs.core.first.call(null, G__11436__11437);
        var G__11436__11439 = G__11436__11437;
        while(true) {
          $el__11424.find([cljs.core.str("option[value='"), cljs.core.str(val__11438), cljs.core.str("']")].join("")).first().attr("selected", "selected");
          var temp__3974__auto____11440 = cljs.core.next.call(null, G__11436__11439);
          if(temp__3974__auto____11440) {
            var G__11436__11441 = temp__3974__auto____11440;
            var G__11443 = cljs.core.first.call(null, G__11436__11441);
            var G__11444 = G__11436__11441;
            val__11438 = G__11443;
            G__11436__11439 = G__11444;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var dom_selected__11442 = chosen.core.selected_values.call(null, $el__11424);
      if(cljs.core.not_EQ_.call(null, selected__11435, dom_selected__11442)) {
        cljs.core.swap_BANG_.call(null, _BANG_a__11426, cljs.core.assoc, "\ufdd0'selected", dom_selected__11442)
      }else {
      }
      return $el__11424.trigger("liszt:updated")
    });
    return new chosen.core.Chosen($el__11424, _BANG_a__11426, multiple_QMARK___11425)
  };
  var ichooseu_BANG_ = function(el, var_args) {
    var p__11396 = null;
    if(goog.isDef(var_args)) {
      p__11396 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return ichooseu_BANG___delegate.call(this, el, p__11396)
  };
  ichooseu_BANG_.cljs$lang$maxFixedArity = 1;
  ichooseu_BANG_.cljs$lang$applyTo = function(arglist__11445) {
    var el = cljs.core.first(arglist__11445);
    var p__11396 = cljs.core.rest(arglist__11445);
    return ichooseu_BANG___delegate(el, p__11396)
  };
  ichooseu_BANG_.cljs$lang$arity$variadic = ichooseu_BANG___delegate;
  return ichooseu_BANG_
}();
goog.provide("c2.core");
goog.require("cljs.core");
goog.require("reflex.core");
goog.require("c2.dom");
goog.require("singult.core");
c2.core.node_data = singult.core.node_data;
c2.core.unify = function() {
  var unify__delegate = function(data, mapping, args) {
    if(cljs.core.seq.call(null, data)) {
      mapping.call(null, cljs.core.first.call(null, data))
    }else {
    }
    return cljs.core.apply.call(null, singult.core.unify, data, mapping, args)
  };
  var unify = function(data, mapping, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unify__delegate.call(this, data, mapping, args)
  };
  unify.cljs$lang$maxFixedArity = 2;
  unify.cljs$lang$applyTo = function(arglist__15460) {
    var data = cljs.core.first(arglist__15460);
    var mapping = cljs.core.first(cljs.core.next(arglist__15460));
    var args = cljs.core.rest(cljs.core.next(arglist__15460));
    return unify__delegate(data, mapping, args)
  };
  unify.cljs$lang$arity$variadic = unify__delegate;
  return unify
}();
goog.provide("c2.event");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("c2.core");
goog.require("goog.events");
goog.require("c2.dom");
goog.require("c2.core");
goog.require("cljs.reader");
c2.event.on_load = function on_load(f) {
  return goog.events.listen(window, goog.events.EventType.LOAD, f)
};
c2.event.on_raw = function() {
  var on_raw__delegate = function(node, event_type, f, p__15428) {
    var map__15433__15434 = p__15428;
    var map__15433__15435 = cljs.core.seq_QMARK_.call(null, map__15433__15434) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15433__15434) : map__15433__15434;
    var capture__15436 = cljs.core._lookup.call(null, map__15433__15435, "\ufdd0'capture", false);
    return goog.events.listen(c2.dom.__GT_dom.call(null, node), cljs.core.name.call(null, event_type), f, capture__15436)
  };
  var on_raw = function(node, event_type, f, var_args) {
    var p__15428 = null;
    if(goog.isDef(var_args)) {
      p__15428 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return on_raw__delegate.call(this, node, event_type, f, p__15428)
  };
  on_raw.cljs$lang$maxFixedArity = 3;
  on_raw.cljs$lang$applyTo = function(arglist__15437) {
    var node = cljs.core.first(arglist__15437);
    var event_type = cljs.core.first(cljs.core.next(arglist__15437));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15437)));
    var p__15428 = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__15437)));
    return on_raw__delegate(node, event_type, f, p__15428)
  };
  on_raw.cljs$lang$arity$variadic = on_raw__delegate;
  return on_raw
}();
c2.event.on = function() {
  var on = null;
  var on__3 = function(node, event_type, f) {
    return on.call(null, node, "*", event_type, f)
  };
  var on__5 = function() {
    var G__15457__delegate = function(node, selector, event_type, f, p__15438) {
      var map__15448__15449 = p__15438;
      var map__15448__15450 = cljs.core.seq_QMARK_.call(null, map__15448__15449) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15448__15449) : map__15448__15449;
      var capture__15451 = cljs.core._lookup.call(null, map__15448__15450, "\ufdd0'capture", false);
      return goog.events.listen(c2.dom.__GT_dom.call(null, node), cljs.core.name.call(null, event_type), function(event) {
        if(cljs.core.truth_(c2.dom.matches_selector_QMARK_.call(null, event.target, selector))) {
          var $node__15452 = event.target;
          while(true) {
            var temp__3971__auto____15453 = c2.core.node_data.call(null, $node__15452);
            if(cljs.core.truth_(temp__3971__auto____15453)) {
              var d__15454 = temp__3971__auto____15453;
              return f.call(null, d__15454, $node__15452, event)
            }else {
              var temp__3971__auto____15455 = c2.dom.parent.call(null, $node__15452);
              if(cljs.core.truth_(temp__3971__auto____15455)) {
                var parent__15456 = temp__3971__auto____15455;
                var G__15458 = parent__15456;
                $node__15452 = G__15458;
                continue
              }else {
                return null
              }
            }
            break
          }
        }else {
          return null
        }
      }, capture__15451)
    };
    var G__15457 = function(node, selector, event_type, f, var_args) {
      var p__15438 = null;
      if(goog.isDef(var_args)) {
        p__15438 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__15457__delegate.call(this, node, selector, event_type, f, p__15438)
    };
    G__15457.cljs$lang$maxFixedArity = 4;
    G__15457.cljs$lang$applyTo = function(arglist__15459) {
      var node = cljs.core.first(arglist__15459);
      var selector = cljs.core.first(cljs.core.next(arglist__15459));
      var event_type = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15459)));
      var f = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__15459))));
      var p__15438 = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__15459))));
      return G__15457__delegate(node, selector, event_type, f, p__15438)
    };
    G__15457.cljs$lang$arity$variadic = G__15457__delegate;
    return G__15457
  }();
  on = function(node, selector, event_type, f, var_args) {
    var p__15438 = var_args;
    switch(arguments.length) {
      case 3:
        return on__3.call(this, node, selector, event_type);
      default:
        return on__5.cljs$lang$arity$variadic(node, selector, event_type, f, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  on.cljs$lang$maxFixedArity = 4;
  on.cljs$lang$applyTo = on__5.cljs$lang$applyTo;
  on.cljs$lang$arity$3 = on__3;
  on.cljs$lang$arity$variadic = on__5.cljs$lang$arity$variadic;
  return on
}();
goog.provide("c2.maths");
goog.require("cljs.core");
c2.maths.Pi = Math.PI;
c2.maths.Tau = 2 * c2.maths.Pi;
c2.maths.e = Math.E;
c2.maths.radians_per_degree = c2.maths.Pi / 180;
c2.maths.rad = function rad(x) {
  return c2.maths.radians_per_degree * x
};
c2.maths.sin = function sin(x) {
  return Math.sin.call(null, x)
};
c2.maths.asin = function asin(x) {
  return Math.asin.call(null, x)
};
c2.maths.cos = function cos(x) {
  return Math.cos.call(null, x)
};
c2.maths.acos = function acos(x) {
  return Math.acos.call(null, x)
};
c2.maths.tan = function tan(x) {
  return Math.tan.call(null, x)
};
c2.maths.atan = function atan(x) {
  return Math.atan.call(null, x)
};
c2.maths.expt = function() {
  var expt = null;
  var expt__1 = function(x) {
    return Math.exp.call(null, x)
  };
  var expt__2 = function(x, y) {
    return Math.pow.call(null, x, y)
  };
  expt = function(x, y) {
    switch(arguments.length) {
      case 1:
        return expt__1.call(this, x);
      case 2:
        return expt__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  expt.cljs$lang$arity$1 = expt__1;
  expt.cljs$lang$arity$2 = expt__2;
  return expt
}();
c2.maths.sq = function sq(x) {
  return c2.maths.expt.call(null, x, 2)
};
c2.maths.sqrt = function sqrt(x) {
  return Math.sqrt.call(null, x)
};
c2.maths.floor = function floor(x) {
  return Math.floor.call(null, x)
};
c2.maths.ceil = function ceil(x) {
  return Math.ceil.call(null, x)
};
c2.maths.abs = function abs(x) {
  return Math.abs.call(null, x)
};
c2.maths.log = function() {
  var log = null;
  var log__1 = function(x) {
    return Math.log.call(null, x)
  };
  var log__2 = function(base, x) {
    return Math.log.call(null, x) / Math.log.call(null, base)
  };
  log = function(base, x) {
    switch(arguments.length) {
      case 1:
        return log__1.call(this, base);
      case 2:
        return log__2.call(this, base, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  log.cljs$lang$arity$1 = log__1;
  log.cljs$lang$arity$2 = log__2;
  return log
}();
c2.maths.log10 = function log10(x) {
  return Math.log(x) / Math.LN10
};
c2.maths.extent = function extent(xs) {
  return cljs.core.PersistentVector.fromArray([cljs.core.apply.call(null, cljs.core.min, xs), cljs.core.apply.call(null, cljs.core.max, xs)], true)
};
c2.maths.mean = function mean(xs) {
  return cljs.core.reduce.call(null, cljs.core._PLUS_, xs) / cljs.core.count.call(null, xs)
};
c2.maths.median = function median(xs) {
  var sorted__17603 = cljs.core.sort.call(null, xs);
  var n__17604 = cljs.core.count.call(null, xs);
  if(cljs.core._EQ_.call(null, n__17604, 1)) {
    return cljs.core.first.call(null, sorted__17603)
  }else {
    if(cljs.core.odd_QMARK_.call(null, n__17604)) {
      return cljs.core.nth.call(null, sorted__17603, (n__17604 + 1) / 2)
    }else {
      if("\ufdd0'else") {
        var mid__17605 = n__17604 / 2;
        return c2.maths.mean.call(null, cljs.core.PersistentVector.fromArray([cljs.core.nth.call(null, sorted__17603, c2.maths.floor.call(null, mid__17605)), cljs.core.nth.call(null, sorted__17603, c2.maths.ceil.call(null, mid__17605))], true))
      }else {
        return null
      }
    }
  }
};
c2.maths.irange = function() {
  var irange = null;
  var irange__1 = function(start) {
    return cljs.core.range.call(null, start)
  };
  var irange__2 = function(start, end) {
    return cljs.core.concat.call(null, cljs.core.range.call(null, start, end), cljs.core.PersistentVector.fromArray([end], true))
  };
  var irange__3 = function(start, end, step) {
    var r__17607 = cljs.core.range.call(null, start, end, step);
    if(cljs.core.first.call(null, r__17607) % step === end % step) {
      return cljs.core.concat.call(null, r__17607, cljs.core.PersistentVector.fromArray([end], true))
    }else {
      return r__17607
    }
  };
  irange = function(start, end, step) {
    switch(arguments.length) {
      case 1:
        return irange__1.call(this, start);
      case 2:
        return irange__2.call(this, start, end);
      case 3:
        return irange__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  irange.cljs$lang$arity$1 = irange__1;
  irange.cljs$lang$arity$2 = irange__2;
  irange.cljs$lang$arity$3 = irange__3;
  return irange
}();
c2.maths.within_QMARK_ = function within_QMARK_(x, p__17608) {
  var vec__17614__17615 = p__17608;
  var bottom__17616 = cljs.core.nth.call(null, vec__17614__17615, 0, null);
  var top__17617 = cljs.core.nth.call(null, vec__17614__17615, 1, null);
  var and__3822__auto____17618 = bottom__17616 <= x;
  if(and__3822__auto____17618) {
    return x <= top__17617
  }else {
    return and__3822__auto____17618
  }
};
c2.maths.add = function() {
  var add__delegate = function(args) {
    return cljs.core.reduce.call(null, function(A, B) {
      if(function() {
        var and__3822__auto____17623 = cljs.core.number_QMARK_.call(null, A);
        if(and__3822__auto____17623) {
          return cljs.core.number_QMARK_.call(null, B)
        }else {
          return and__3822__auto____17623
        }
      }()) {
        return A + B
      }else {
        if(function() {
          var and__3822__auto____17624 = cljs.core.coll_QMARK_.call(null, A);
          if(and__3822__auto____17624) {
            return cljs.core.coll_QMARK_.call(null, B)
          }else {
            return and__3822__auto____17624
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._PLUS_, A, B)
        }else {
          if(function() {
            var and__3822__auto____17625 = cljs.core.number_QMARK_.call(null, A);
            if(and__3822__auto____17625) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____17625
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._PLUS_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
          }else {
            if(function() {
              var and__3822__auto____17626 = cljs.core.coll_QMARK_.call(null, A);
              if(and__3822__auto____17626) {
                return cljs.core.number_QMARK_.call(null, B)
              }else {
                return and__3822__auto____17626
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._PLUS_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
            }else {
              return null
            }
          }
        }
      }
    }, args)
  };
  var add = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return add__delegate.call(this, args)
  };
  add.cljs$lang$maxFixedArity = 0;
  add.cljs$lang$applyTo = function(arglist__17627) {
    var args = cljs.core.seq(arglist__17627);
    return add__delegate(args)
  };
  add.cljs$lang$arity$variadic = add__delegate;
  return add
}();
c2.maths.sub = function() {
  var sub__delegate = function(args) {
    if(cljs.core._EQ_.call(null, cljs.core.count.call(null, args), 1)) {
      if(function() {
        var and__3822__auto____17636 = cljs.core.number_QMARK_.call(null, 0);
        if(and__3822__auto____17636) {
          return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
        }else {
          return and__3822__auto____17636
        }
      }()) {
        return 0 - cljs.core.first.call(null, args)
      }else {
        if(function() {
          var and__3822__auto____17637 = cljs.core.coll_QMARK_.call(null, 0);
          if(and__3822__auto____17637) {
            return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
          }else {
            return and__3822__auto____17637
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._, 0, cljs.core.first.call(null, args))
        }else {
          if(function() {
            var and__3822__auto____17638 = cljs.core.number_QMARK_.call(null, 0);
            if(and__3822__auto____17638) {
              return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
            }else {
              return and__3822__auto____17638
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._, cljs.core.replicate.call(null, cljs.core.count.call(null, cljs.core.first.call(null, args)), 0), cljs.core.first.call(null, args))
          }else {
            if(function() {
              var and__3822__auto____17639 = cljs.core.coll_QMARK_.call(null, 0);
              if(and__3822__auto____17639) {
                return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
              }else {
                return and__3822__auto____17639
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._, 0, cljs.core.replicate.call(null, cljs.core.count.call(null, 0), cljs.core.first.call(null, args)))
            }else {
              return null
            }
          }
        }
      }
    }else {
      return cljs.core.reduce.call(null, function(A, B) {
        if(function() {
          var and__3822__auto____17640 = cljs.core.number_QMARK_.call(null, A);
          if(and__3822__auto____17640) {
            return cljs.core.number_QMARK_.call(null, B)
          }else {
            return and__3822__auto____17640
          }
        }()) {
          return A - B
        }else {
          if(function() {
            var and__3822__auto____17641 = cljs.core.coll_QMARK_.call(null, A);
            if(and__3822__auto____17641) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____17641
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._, A, B)
          }else {
            if(function() {
              var and__3822__auto____17642 = cljs.core.number_QMARK_.call(null, A);
              if(and__3822__auto____17642) {
                return cljs.core.coll_QMARK_.call(null, B)
              }else {
                return and__3822__auto____17642
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
            }else {
              if(function() {
                var and__3822__auto____17643 = cljs.core.coll_QMARK_.call(null, A);
                if(and__3822__auto____17643) {
                  return cljs.core.number_QMARK_.call(null, B)
                }else {
                  return and__3822__auto____17643
                }
              }()) {
                return cljs.core.map.call(null, cljs.core._, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
              }else {
                return null
              }
            }
          }
        }
      }, args)
    }
  };
  var sub = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sub__delegate.call(this, args)
  };
  sub.cljs$lang$maxFixedArity = 0;
  sub.cljs$lang$applyTo = function(arglist__17644) {
    var args = cljs.core.seq(arglist__17644);
    return sub__delegate(args)
  };
  sub.cljs$lang$arity$variadic = sub__delegate;
  return sub
}();
c2.maths.mul = function() {
  var mul__delegate = function(args) {
    return cljs.core.reduce.call(null, function(A, B) {
      if(function() {
        var and__3822__auto____17649 = cljs.core.number_QMARK_.call(null, A);
        if(and__3822__auto____17649) {
          return cljs.core.number_QMARK_.call(null, B)
        }else {
          return and__3822__auto____17649
        }
      }()) {
        return A * B
      }else {
        if(function() {
          var and__3822__auto____17650 = cljs.core.coll_QMARK_.call(null, A);
          if(and__3822__auto____17650) {
            return cljs.core.coll_QMARK_.call(null, B)
          }else {
            return and__3822__auto____17650
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._STAR_, A, B)
        }else {
          if(function() {
            var and__3822__auto____17651 = cljs.core.number_QMARK_.call(null, A);
            if(and__3822__auto____17651) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____17651
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._STAR_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
          }else {
            if(function() {
              var and__3822__auto____17652 = cljs.core.coll_QMARK_.call(null, A);
              if(and__3822__auto____17652) {
                return cljs.core.number_QMARK_.call(null, B)
              }else {
                return and__3822__auto____17652
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._STAR_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
            }else {
              return null
            }
          }
        }
      }
    }, args)
  };
  var mul = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return mul__delegate.call(this, args)
  };
  mul.cljs$lang$maxFixedArity = 0;
  mul.cljs$lang$applyTo = function(arglist__17653) {
    var args = cljs.core.seq(arglist__17653);
    return mul__delegate(args)
  };
  mul.cljs$lang$arity$variadic = mul__delegate;
  return mul
}();
c2.maths.div = function() {
  var div__delegate = function(args) {
    if(cljs.core._EQ_.call(null, cljs.core.count.call(null, args), 1)) {
      if(function() {
        var and__3822__auto____17662 = cljs.core.number_QMARK_.call(null, 1);
        if(and__3822__auto____17662) {
          return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
        }else {
          return and__3822__auto____17662
        }
      }()) {
        return 1 / cljs.core.first.call(null, args)
      }else {
        if(function() {
          var and__3822__auto____17663 = cljs.core.coll_QMARK_.call(null, 1);
          if(and__3822__auto____17663) {
            return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
          }else {
            return and__3822__auto____17663
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._SLASH_, 1, cljs.core.first.call(null, args))
        }else {
          if(function() {
            var and__3822__auto____17664 = cljs.core.number_QMARK_.call(null, 1);
            if(and__3822__auto____17664) {
              return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
            }else {
              return and__3822__auto____17664
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._SLASH_, cljs.core.replicate.call(null, cljs.core.count.call(null, cljs.core.first.call(null, args)), 1), cljs.core.first.call(null, args))
          }else {
            if(function() {
              var and__3822__auto____17665 = cljs.core.coll_QMARK_.call(null, 1);
              if(and__3822__auto____17665) {
                return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
              }else {
                return and__3822__auto____17665
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._SLASH_, 1, cljs.core.replicate.call(null, cljs.core.count.call(null, 1), cljs.core.first.call(null, args)))
            }else {
              return null
            }
          }
        }
      }
    }else {
      return cljs.core.reduce.call(null, function(A, B) {
        if(function() {
          var and__3822__auto____17666 = cljs.core.number_QMARK_.call(null, A);
          if(and__3822__auto____17666) {
            return cljs.core.number_QMARK_.call(null, B)
          }else {
            return and__3822__auto____17666
          }
        }()) {
          return A / B
        }else {
          if(function() {
            var and__3822__auto____17667 = cljs.core.coll_QMARK_.call(null, A);
            if(and__3822__auto____17667) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____17667
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._SLASH_, A, B)
          }else {
            if(function() {
              var and__3822__auto____17668 = cljs.core.number_QMARK_.call(null, A);
              if(and__3822__auto____17668) {
                return cljs.core.coll_QMARK_.call(null, B)
              }else {
                return and__3822__auto____17668
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._SLASH_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
            }else {
              if(function() {
                var and__3822__auto____17669 = cljs.core.coll_QMARK_.call(null, A);
                if(and__3822__auto____17669) {
                  return cljs.core.number_QMARK_.call(null, B)
                }else {
                  return and__3822__auto____17669
                }
              }()) {
                return cljs.core.map.call(null, cljs.core._SLASH_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
              }else {
                return null
              }
            }
          }
        }
      }, args)
    }
  };
  var div = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return div__delegate.call(this, args)
  };
  div.cljs$lang$maxFixedArity = 0;
  div.cljs$lang$applyTo = function(arglist__17670) {
    var args = cljs.core.seq(arglist__17670);
    return div__delegate(args)
  };
  div.cljs$lang$arity$variadic = div__delegate;
  return div
}();
c2.maths.quantile = function() {
  var quantile__delegate = function(data, p__17671) {
    var map__17693__17694 = p__17671;
    var map__17693__17695 = cljs.core.seq_QMARK_.call(null, map__17693__17694) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17693__17694) : map__17693__17694;
    var probs__17696 = cljs.core._lookup.call(null, map__17693__17695, "\ufdd0'probs", cljs.core.PersistentVector.fromArray([0, 0.25, 0.5, 0.75, 1], true));
    var xs__17697 = cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.sort.call(null, data));
    var n_1__17698 = cljs.core.count.call(null, xs__17697) - 1;
    var iter__2363__auto____17713 = function iter__17699(s__17700) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__17700__17707 = s__17700;
        while(true) {
          if(cljs.core.seq.call(null, s__17700__17707)) {
            var q__17708 = cljs.core.first.call(null, s__17700__17707);
            return cljs.core.cons.call(null, function() {
              var index__17709 = q__17708 * n_1__17698 + 1;
              var lo__17710 = cljs.core.int$.call(null, c2.maths.floor.call(null, index__17709));
              var h__17711 = index__17709 - lo__17710;
              var a__17712 = xs__17697.call(null, lo__17710 - 1);
              if(cljs.core._EQ_.call(null, h__17711, 0)) {
                return a__17712
              }else {
                return a__17712 + h__17711 * (xs__17697.call(null, lo__17710) - a__17712)
              }
            }(), iter__17699.call(null, cljs.core.rest.call(null, s__17700__17707)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____17713.call(null, probs__17696)
  };
  var quantile = function(data, var_args) {
    var p__17671 = null;
    if(goog.isDef(var_args)) {
      p__17671 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return quantile__delegate.call(this, data, p__17671)
  };
  quantile.cljs$lang$maxFixedArity = 1;
  quantile.cljs$lang$applyTo = function(arglist__17714) {
    var data = cljs.core.first(arglist__17714);
    var p__17671 = cljs.core.rest(arglist__17714);
    return quantile__delegate(data, p__17671)
  };
  quantile.cljs$lang$arity$variadic = quantile__delegate;
  return quantile
}();
goog.provide("c2.scale");
goog.require("cljs.core");
goog.require("c2.maths");
goog.require("c2.maths");
goog.require("c2.maths");
c2.scale.IInvertable = {};
c2.scale.invert = function invert(scale) {
  if(function() {
    var and__3822__auto____16393 = scale;
    if(and__3822__auto____16393) {
      return scale.c2$scale$IInvertable$invert$arity$1
    }else {
      return and__3822__auto____16393
    }
  }()) {
    return scale.c2$scale$IInvertable$invert$arity$1(scale)
  }else {
    var x__2264__auto____16394 = scale == null ? null : scale;
    return function() {
      var or__3824__auto____16395 = c2.scale.invert[goog.typeOf(x__2264__auto____16394)];
      if(or__3824__auto____16395) {
        return or__3824__auto____16395
      }else {
        var or__3824__auto____16396 = c2.scale.invert["_"];
        if(or__3824__auto____16396) {
          return or__3824__auto____16396
        }else {
          throw cljs.core.missing_protocol.call(null, "IInvertable.invert", scale);
        }
      }
    }().call(null, scale)
  }
};
c2.scale._linear = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054859;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
c2.scale._linear.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__16402 = this;
  var h__2093__auto____16403 = this__16402.__hash;
  if(!(h__2093__auto____16403 == null)) {
    return h__2093__auto____16403
  }else {
    var h__2093__auto____16404 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__16402.__hash = h__2093__auto____16404;
    return h__2093__auto____16404
  }
};
c2.scale._linear.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__16405 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
c2.scale._linear.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k16398, else__2227__auto__) {
  var this__16406 = this;
  if(k16398 === "\ufdd0'domain") {
    return this__16406.domain
  }else {
    if(k16398 === "\ufdd0'range") {
      return this__16406.range
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__16406.__extmap, k16398, else__2227__auto__)
      }else {
        return null
      }
    }
  }
};
c2.scale._linear.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__16397) {
  var this__16407 = this;
  var pred__16408__16411 = cljs.core.identical_QMARK_;
  var expr__16409__16412 = k__2232__auto__;
  if(pred__16408__16411.call(null, "\ufdd0'domain", expr__16409__16412)) {
    return new c2.scale._linear(G__16397, this__16407.range, this__16407.__meta, this__16407.__extmap, null)
  }else {
    if(pred__16408__16411.call(null, "\ufdd0'range", expr__16409__16412)) {
      return new c2.scale._linear(this__16407.domain, G__16397, this__16407.__meta, this__16407.__extmap, null)
    }else {
      return new c2.scale._linear(this__16407.domain, this__16407.range, this__16407.__meta, cljs.core.assoc.call(null, this__16407.__extmap, k__2232__auto__, G__16397), null)
    }
  }
};
c2.scale._linear.prototype.call = function(this_sym16413, x) {
  var this__16414 = this;
  var this_sym16413__16415 = this;
  var ___16416 = this_sym16413__16415;
  var domain_length__16417 = cljs.core.last.call(null, this__16414.domain) - cljs.core.first.call(null, this__16414.domain);
  var range_length__16418 = cljs.core.last.call(null, this__16414.range) - cljs.core.first.call(null, this__16414.range);
  return cljs.core.first.call(null, this__16414.range) + range_length__16418 * ((x - cljs.core.first.call(null, this__16414.domain)) / domain_length__16417)
};
c2.scale._linear.prototype.apply = function(this_sym16400, args16401) {
  var this__16419 = this;
  return this_sym16400.call.apply(this_sym16400, [this_sym16400].concat(args16401.slice()))
};
c2.scale._linear.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__16420 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
c2.scale._linear.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__16421 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__16421.domain), cljs.core.vector.call(null, "\ufdd0'range", this__16421.range)], true), this__16421.__extmap))
};
c2.scale._linear.prototype.c2$scale$IInvertable$ = true;
c2.scale._linear.prototype.c2$scale$IInvertable$invert$arity$1 = function(this$) {
  var this__16422 = this;
  return cljs.core.assoc.call(null, this$, "\ufdd0'domain", this__16422.range, "\ufdd0'range", this__16422.domain)
};
c2.scale._linear.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__16423 = this;
  var pr_pair__2240__auto____16424 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____16424, [cljs.core.str("#"), cljs.core.str("_linear"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__16423.domain), cljs.core.vector.call(null, "\ufdd0'range", this__16423.range)], true), this__16423.__extmap))
};
c2.scale._linear.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__16425 = this;
  return 2 + cljs.core.count.call(null, this__16425.__extmap)
};
c2.scale._linear.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__16426 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____16427 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____16427)) {
      var and__3822__auto____16428 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____16428) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____16428
      }
    }else {
      return and__3822__auto____16427
    }
  }())) {
    return true
  }else {
    return false
  }
};
c2.scale._linear.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__16397) {
  var this__16429 = this;
  return new c2.scale._linear(this__16429.domain, this__16429.range, G__16397, this__16429.__extmap, this__16429.__hash)
};
c2.scale._linear.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__16430 = this;
  return this__16430.__meta
};
c2.scale._linear.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__16431 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'domain", "\ufdd0'range"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__16431.__meta), k__2234__auto__)
  }else {
    return new c2.scale._linear(this__16431.domain, this__16431.range, this__16431.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__16431.__extmap, k__2234__auto__)), null)
  }
};
c2.scale._linear.cljs$lang$type = true;
c2.scale._linear.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "c2.scale/_linear")
};
c2.scale.__GT__linear = function __GT__linear(domain, range) {
  return new c2.scale._linear(domain, range)
};
c2.scale.map__GT__linear = function map__GT__linear(G__16399) {
  return new c2.scale._linear((new cljs.core.Keyword("\ufdd0'domain")).call(null, G__16399), (new cljs.core.Keyword("\ufdd0'range")).call(null, G__16399), null, cljs.core.dissoc.call(null, G__16399, "\ufdd0'domain", "\ufdd0'range"))
};
c2.scale._linear;
c2.scale.linear = function() {
  var linear__delegate = function(kwargs) {
    return c2.scale.map__GT__linear.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'domain", "\ufdd0'range"], {"\ufdd0'domain":cljs.core.PersistentVector.fromArray([0, 1], true), "\ufdd0'range":cljs.core.PersistentVector.fromArray([0, 1], true)}), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)))
  };
  var linear = function(var_args) {
    var kwargs = null;
    if(goog.isDef(var_args)) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return linear__delegate.call(this, kwargs)
  };
  linear.cljs$lang$maxFixedArity = 0;
  linear.cljs$lang$applyTo = function(arglist__16432) {
    var kwargs = cljs.core.seq(arglist__16432);
    return linear__delegate(kwargs)
  };
  linear.cljs$lang$arity$variadic = linear__delegate;
  return linear
}();
c2.scale._power = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054859;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
c2.scale._power.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__16438 = this;
  var h__2093__auto____16439 = this__16438.__hash;
  if(!(h__2093__auto____16439 == null)) {
    return h__2093__auto____16439
  }else {
    var h__2093__auto____16440 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__16438.__hash = h__2093__auto____16440;
    return h__2093__auto____16440
  }
};
c2.scale._power.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__16441 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
c2.scale._power.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k16434, else__2227__auto__) {
  var this__16442 = this;
  if(k16434 === "\ufdd0'domain") {
    return this__16442.domain
  }else {
    if(k16434 === "\ufdd0'range") {
      return this__16442.range
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__16442.__extmap, k16434, else__2227__auto__)
      }else {
        return null
      }
    }
  }
};
c2.scale._power.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__16433) {
  var this__16443 = this;
  var pred__16444__16447 = cljs.core.identical_QMARK_;
  var expr__16445__16448 = k__2232__auto__;
  if(pred__16444__16447.call(null, "\ufdd0'domain", expr__16445__16448)) {
    return new c2.scale._power(G__16433, this__16443.range, this__16443.__meta, this__16443.__extmap, null)
  }else {
    if(pred__16444__16447.call(null, "\ufdd0'range", expr__16445__16448)) {
      return new c2.scale._power(this__16443.domain, G__16433, this__16443.__meta, this__16443.__extmap, null)
    }else {
      return new c2.scale._power(this__16443.domain, this__16443.range, this__16443.__meta, cljs.core.assoc.call(null, this__16443.__extmap, k__2232__auto__, G__16433), null)
    }
  }
};
c2.scale._power.prototype.call = function(this_sym16449, x) {
  var this__16450 = this;
  var this_sym16449__16451 = this;
  var ___16452 = this_sym16449__16451;
  return cljs.core.comp.call(null, c2.scale.linear.call(null, "\ufdd0'domain", cljs.core.map.call(null, c2.maths.expt, this__16450.domain), "\ufdd0'range", this__16450.range), c2.maths.expt).call(null, x)
};
c2.scale._power.prototype.apply = function(this_sym16436, args16437) {
  var this__16453 = this;
  return this_sym16436.call.apply(this_sym16436, [this_sym16436].concat(args16437.slice()))
};
c2.scale._power.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__16454 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
c2.scale._power.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__16455 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__16455.domain), cljs.core.vector.call(null, "\ufdd0'range", this__16455.range)], true), this__16455.__extmap))
};
c2.scale._power.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__16456 = this;
  var pr_pair__2240__auto____16457 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____16457, [cljs.core.str("#"), cljs.core.str("_power"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__16456.domain), cljs.core.vector.call(null, "\ufdd0'range", this__16456.range)], true), this__16456.__extmap))
};
c2.scale._power.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__16458 = this;
  return 2 + cljs.core.count.call(null, this__16458.__extmap)
};
c2.scale._power.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__16459 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____16460 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____16460)) {
      var and__3822__auto____16461 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____16461) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____16461
      }
    }else {
      return and__3822__auto____16460
    }
  }())) {
    return true
  }else {
    return false
  }
};
c2.scale._power.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__16433) {
  var this__16462 = this;
  return new c2.scale._power(this__16462.domain, this__16462.range, G__16433, this__16462.__extmap, this__16462.__hash)
};
c2.scale._power.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__16463 = this;
  return this__16463.__meta
};
c2.scale._power.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__16464 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'domain", "\ufdd0'range"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__16464.__meta), k__2234__auto__)
  }else {
    return new c2.scale._power(this__16464.domain, this__16464.range, this__16464.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__16464.__extmap, k__2234__auto__)), null)
  }
};
c2.scale._power.cljs$lang$type = true;
c2.scale._power.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "c2.scale/_power")
};
c2.scale.__GT__power = function __GT__power(domain, range) {
  return new c2.scale._power(domain, range)
};
c2.scale.map__GT__power = function map__GT__power(G__16435) {
  return new c2.scale._power((new cljs.core.Keyword("\ufdd0'domain")).call(null, G__16435), (new cljs.core.Keyword("\ufdd0'range")).call(null, G__16435), null, cljs.core.dissoc.call(null, G__16435, "\ufdd0'domain", "\ufdd0'range"))
};
c2.scale._power;
c2.scale.power = function() {
  var power__delegate = function(kwargs) {
    return c2.scale.map__GT__power.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'domain", "\ufdd0'range"], {"\ufdd0'domain":cljs.core.PersistentVector.fromArray([0, 1], true), "\ufdd0'range":cljs.core.PersistentVector.fromArray([0, 1], true)}), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)))
  };
  var power = function(var_args) {
    var kwargs = null;
    if(goog.isDef(var_args)) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return power__delegate.call(this, kwargs)
  };
  power.cljs$lang$maxFixedArity = 0;
  power.cljs$lang$applyTo = function(arglist__16465) {
    var kwargs = cljs.core.seq(arglist__16465);
    return power__delegate(kwargs)
  };
  power.cljs$lang$arity$variadic = power__delegate;
  return power
}();
c2.scale._log = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054859;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
c2.scale._log.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__16471 = this;
  var h__2093__auto____16472 = this__16471.__hash;
  if(!(h__2093__auto____16472 == null)) {
    return h__2093__auto____16472
  }else {
    var h__2093__auto____16473 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__16471.__hash = h__2093__auto____16473;
    return h__2093__auto____16473
  }
};
c2.scale._log.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__16474 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
c2.scale._log.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k16467, else__2227__auto__) {
  var this__16475 = this;
  if(k16467 === "\ufdd0'domain") {
    return this__16475.domain
  }else {
    if(k16467 === "\ufdd0'range") {
      return this__16475.range
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__16475.__extmap, k16467, else__2227__auto__)
      }else {
        return null
      }
    }
  }
};
c2.scale._log.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__16466) {
  var this__16476 = this;
  var pred__16477__16480 = cljs.core.identical_QMARK_;
  var expr__16478__16481 = k__2232__auto__;
  if(pred__16477__16480.call(null, "\ufdd0'domain", expr__16478__16481)) {
    return new c2.scale._log(G__16466, this__16476.range, this__16476.__meta, this__16476.__extmap, null)
  }else {
    if(pred__16477__16480.call(null, "\ufdd0'range", expr__16478__16481)) {
      return new c2.scale._log(this__16476.domain, G__16466, this__16476.__meta, this__16476.__extmap, null)
    }else {
      return new c2.scale._log(this__16476.domain, this__16476.range, this__16476.__meta, cljs.core.assoc.call(null, this__16476.__extmap, k__2232__auto__, G__16466), null)
    }
  }
};
c2.scale._log.prototype.call = function(this_sym16482, x) {
  var this__16483 = this;
  var this_sym16482__16484 = this;
  var ___16485 = this_sym16482__16484;
  return cljs.core.comp.call(null, c2.scale.linear.call(null, "\ufdd0'domain", cljs.core.map.call(null, c2.maths.log, this__16483.domain), "\ufdd0'range", this__16483.range), c2.maths.log).call(null, x)
};
c2.scale._log.prototype.apply = function(this_sym16469, args16470) {
  var this__16486 = this;
  return this_sym16469.call.apply(this_sym16469, [this_sym16469].concat(args16470.slice()))
};
c2.scale._log.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__16487 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
c2.scale._log.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__16488 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__16488.domain), cljs.core.vector.call(null, "\ufdd0'range", this__16488.range)], true), this__16488.__extmap))
};
c2.scale._log.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__16489 = this;
  var pr_pair__2240__auto____16490 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____16490, [cljs.core.str("#"), cljs.core.str("_log"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__16489.domain), cljs.core.vector.call(null, "\ufdd0'range", this__16489.range)], true), this__16489.__extmap))
};
c2.scale._log.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__16491 = this;
  return 2 + cljs.core.count.call(null, this__16491.__extmap)
};
c2.scale._log.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__16492 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____16493 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____16493)) {
      var and__3822__auto____16494 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____16494) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____16494
      }
    }else {
      return and__3822__auto____16493
    }
  }())) {
    return true
  }else {
    return false
  }
};
c2.scale._log.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__16466) {
  var this__16495 = this;
  return new c2.scale._log(this__16495.domain, this__16495.range, G__16466, this__16495.__extmap, this__16495.__hash)
};
c2.scale._log.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__16496 = this;
  return this__16496.__meta
};
c2.scale._log.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__16497 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'domain", "\ufdd0'range"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__16497.__meta), k__2234__auto__)
  }else {
    return new c2.scale._log(this__16497.domain, this__16497.range, this__16497.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__16497.__extmap, k__2234__auto__)), null)
  }
};
c2.scale._log.cljs$lang$type = true;
c2.scale._log.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "c2.scale/_log")
};
c2.scale.__GT__log = function __GT__log(domain, range) {
  return new c2.scale._log(domain, range)
};
c2.scale.map__GT__log = function map__GT__log(G__16468) {
  return new c2.scale._log((new cljs.core.Keyword("\ufdd0'domain")).call(null, G__16468), (new cljs.core.Keyword("\ufdd0'range")).call(null, G__16468), null, cljs.core.dissoc.call(null, G__16468, "\ufdd0'domain", "\ufdd0'range"))
};
c2.scale._log;
c2.scale.log = function() {
  var log__delegate = function(kwargs) {
    return c2.scale.map__GT__log.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'domain", "\ufdd0'range"], {"\ufdd0'domain":cljs.core.PersistentVector.fromArray([1, 10], true), "\ufdd0'range":cljs.core.PersistentVector.fromArray([0, 1], true)}), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)))
  };
  var log = function(var_args) {
    var kwargs = null;
    if(goog.isDef(var_args)) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, kwargs)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__16498) {
    var kwargs = cljs.core.seq(arglist__16498);
    return log__delegate(kwargs)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
goog.provide("c2.ticks");
goog.require("cljs.core");
goog.require("c2.maths");
goog.require("c2.maths");
c2.ticks.Q = cljs.core.PersistentVector.fromArray([1, 5, 2, 2.5, 4, 3], true);
c2.ticks.index_of = function index_of(x, coll) {
  return cljs.core.first.call(null, function() {
    var iter__2363__auto____16524 = function iter__16512(s__16513) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__16513__16519 = s__16513;
        while(true) {
          if(cljs.core.seq.call(null, s__16513__16519)) {
            var vec__16520__16521 = cljs.core.first.call(null, s__16513__16519);
            var idx__16522 = cljs.core.nth.call(null, vec__16520__16521, 0, null);
            var y__16523 = cljs.core.nth.call(null, vec__16520__16521, 1, null);
            if(cljs.core._EQ_.call(null, y__16523, x)) {
              return cljs.core.cons.call(null, idx__16522, iter__16512.call(null, cljs.core.rest.call(null, s__16513__16519)))
            }else {
              var G__16525 = cljs.core.rest.call(null, s__16513__16519);
              s__16513__16519 = G__16525;
              continue
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____16524.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, coll))
  }())
};
c2.ticks.label_range_contains_zero_QMARK_ = function label_range_contains_zero_QMARK_(l_min, l_max, l_step) {
  var and__3822__auto____16528 = l_max > 0;
  if(and__3822__auto____16528) {
    var and__3822__auto____16529 = l_min < 0;
    if(and__3822__auto____16529) {
      return l_min % l_step === 0
    }else {
      return and__3822__auto____16529
    }
  }else {
    return and__3822__auto____16528
  }
};
c2.ticks.simplicity = function simplicity(q, j, label_range_contains_zero) {
  var v__16531 = cljs.core.truth_(label_range_contains_zero) ? 1 : 0;
  if(cljs.core.count.call(null, c2.ticks.Q) <= 1) {
    return 1 - j + v__16531
  }else {
    return 1 - c2.ticks.index_of.call(null, q, c2.ticks.Q) / (cljs.core.count.call(null, c2.ticks.Q) - 1) - j + v__16531
  }
};
c2.ticks.max_simplicity = function max_simplicity(q, j) {
  return c2.ticks.simplicity.call(null, q, j, true)
};
c2.ticks.coverage = function coverage(d_min, d_max, l_min, l_max) {
  return 1 - 0.5 * ((c2.maths.sq.call(null, d_max - l_max) + c2.maths.sq.call(null, d_min - l_min)) / c2.maths.sq.call(null, 0.1 * (d_max - d_min)))
};
c2.ticks.max_coverage = function max_coverage(d_min, d_max, span) {
  var d_range__16533 = d_max - d_min;
  if(span > d_range__16533) {
    return 1 - c2.maths.sq.call(null, (span - d_range__16533) / (0.2 * d_range__16533))
  }else {
    return 1
  }
};
c2.ticks.density = function density(r, rt) {
  return 2 - (r / rt > rt / r ? r / rt : rt / r)
};
c2.ticks.max_density = function max_density(r, rt) {
  if(r >= rt) {
    return 2 - r / rt
  }else {
    return 1
  }
};
c2.ticks.w = function w(p__16534) {
  var vec__16542__16543 = p__16534;
  var simplicity__16544 = cljs.core.nth.call(null, vec__16542__16543, 0, null);
  var coverage__16545 = cljs.core.nth.call(null, vec__16542__16543, 1, null);
  var density__16546 = cljs.core.nth.call(null, vec__16542__16543, 2, null);
  var legibility__16547 = cljs.core.nth.call(null, vec__16542__16543, 3, null);
  var w__16548 = cljs.core.PersistentVector.fromArray([0.2, 0.25, 0.5, 0.05], true);
  return simplicity__16544 * w__16548.call(null, 0) + coverage__16545 * w__16548.call(null, 1) + density__16546 * w__16548.call(null, 2) + legibility__16547 * w__16548.call(null, 3)
};
c2.ticks.search = function() {
  var search__delegate = function(p__16549, p__16550) {
    var vec__16585__16587 = p__16549;
    var d_min__16588 = cljs.core.nth.call(null, vec__16585__16587, 0, null);
    var d_max__16589 = cljs.core.nth.call(null, vec__16585__16587, 1, null);
    var map__16586__16590 = p__16550;
    var map__16586__16591 = cljs.core.seq_QMARK_.call(null, map__16586__16590) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16586__16590) : map__16586__16590;
    var clamp_QMARK___16592 = cljs.core._lookup.call(null, map__16586__16591, "\ufdd0'clamp?", false);
    var length__16593 = cljs.core._lookup.call(null, map__16586__16591, "\ufdd0'length", 500);
    var target_density__16594 = cljs.core._lookup.call(null, map__16586__16591, "\ufdd0'target-density", 0.01);
    var best_score__16595 = cljs.core.atom.call(null, -2);
    var label__16596 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
    var G__16597__16598 = c2.ticks.Q;
    while(true) {
      if(cljs.core.empty_QMARK_.call(null, G__16597__16598)) {
      }else {
        if(true) {
          var q__16599 = cljs.core.first.call(null, G__16597__16598);
          var j__16600 = 1;
          while(true) {
            if(null) {
            }else {
              if(true) {
                var ms__16601 = c2.ticks.max_simplicity.call(null, q__16599, j__16600);
                if(c2.ticks.w.call(null, cljs.core.PersistentVector.fromArray([ms__16601, 1, 1, 1], true)) < cljs.core.deref.call(null, best_score__16595)) {
                }else {
                  var k__16602 = 2;
                  while(true) {
                    if(null) {
                    }else {
                      if(true) {
                        var md__16603 = c2.ticks.max_density.call(null, k__16602 / length__16593, target_density__16594);
                        if(c2.ticks.w.call(null, cljs.core.PersistentVector.fromArray([ms__16601, 1, md__16603, 1], true)) < cljs.core.deref.call(null, best_score__16595)) {
                        }else {
                          var delta__16604 = (d_max__16589 - d_min__16588) / ((k__16602 + 1) * j__16600 * k__16602);
                          var z__16605 = c2.maths.ceil.call(null, c2.maths.log10.call(null, delta__16604));
                          while(true) {
                            if(null) {
                            }else {
                              if(true) {
                                var l_step__16606 = q__16599 * j__16600 * c2.maths.expt.call(null, 10, z__16605);
                                var mc__16607 = c2.ticks.max_coverage.call(null, d_min__16588, d_max__16589, (k__16602 - 1) * l_step__16606);
                                if(c2.ticks.w.call(null, cljs.core.PersistentVector.fromArray([ms__16601, mc__16607, md__16603, 1], true)) < cljs.core.deref.call(null, best_score__16595)) {
                                }else {
                                  var G__16608__16609 = d_min__16588 / l_step__16606;
                                  var start__16610 = c2.maths.floor.call(null, d_max__16589 / l_step__16606) - (k__16602 - 1);
                                  while(true) {
                                    if(start__16610 > G__16608__16609) {
                                    }else {
                                      if(true) {
                                        var l_min__16611 = start__16610 * l_step__16606;
                                        var l_max__16612 = l_min__16611 + (k__16602 - 1) * l_step__16606;
                                        var s__16613 = c2.ticks.simplicity.call(null, q__16599, j__16600, c2.ticks.label_range_contains_zero_QMARK_.call(null, l_min__16611, l_max__16612, l_step__16606));
                                        var c__16614 = c2.ticks.coverage.call(null, d_min__16588, d_max__16589, l_min__16611, l_max__16612);
                                        var d__16615 = c2.ticks.density.call(null, k__16602 / length__16593, target_density__16594);
                                        var score__16616 = c2.ticks.w.call(null, cljs.core.PersistentVector.fromArray([s__16613, c__16614, d__16615, 1], true));
                                        if(score__16616 < cljs.core.deref.call(null, best_score__16595)) {
                                        }else {
                                          cljs.core.reset_BANG_.call(null, best_score__16595, score__16616);
                                          cljs.core.reset_BANG_.call(null, label__16596, cljs.core.ObjMap.fromObject(["\ufdd0'min", "\ufdd0'max", "\ufdd0'step"], {"\ufdd0'min":l_min__16611, "\ufdd0'max":l_max__16612, "\ufdd0'step":l_step__16606}));
                                          var G__16619 = start__16610 + 1 / j__16600;
                                          start__16610 = G__16619;
                                          continue
                                        }
                                      }else {
                                      }
                                    }
                                    break
                                  }
                                  var G__16620 = z__16605 + 1;
                                  z__16605 = G__16620;
                                  continue
                                }
                              }else {
                              }
                            }
                            break
                          }
                          var G__16621 = k__16602 + 1;
                          k__16602 = G__16621;
                          continue
                        }
                      }else {
                      }
                    }
                    break
                  }
                  var G__16622 = j__16600 + 1;
                  j__16600 = G__16622;
                  continue
                }
              }else {
              }
            }
            break
          }
          var G__16623 = cljs.core.next.call(null, G__16597__16598);
          G__16597__16598 = G__16623;
          continue
        }else {
        }
      }
      break
    }
    var l__16617 = cljs.core.deref.call(null, label__16596);
    var extent__16618 = cljs.core.PersistentVector.fromArray([cljs.core.truth_(clamp_QMARK___16592) ? d_min__16588 : (new cljs.core.Keyword("\ufdd0'min")).call(null, l__16617) < d_min__16588 ? (new cljs.core.Keyword("\ufdd0'min")).call(null, l__16617) : d_min__16588, cljs.core.truth_(clamp_QMARK___16592) ? d_max__16589 : (new cljs.core.Keyword("\ufdd0'max")).call(null, l__16617) > d_max__16589 ? (new cljs.core.Keyword("\ufdd0'max")).call(null, l__16617) : d_max__16589], true);
    return cljs.core.ObjMap.fromObject(["\ufdd0'extent", "\ufdd0'min", "\ufdd0'max", "\ufdd0'ticks"], {"\ufdd0'extent":extent__16618, "\ufdd0'min":cljs.core.first.call(null, extent__16618), "\ufdd0'max":cljs.core.second.call(null, extent__16618), "\ufdd0'ticks":cljs.core.filter.call(null, function(p1__155990_SHARP_) {
      return c2.maths.within_QMARK_.call(null, p1__155990_SHARP_, extent__16618)
    }, c2.maths.irange.call(null, (new cljs.core.Keyword("\ufdd0'min")).call(null, l__16617), (new cljs.core.Keyword("\ufdd0'max")).call(null, l__16617), (new cljs.core.Keyword("\ufdd0'step")).call(null, l__16617)))})
  };
  var search = function(p__16549, var_args) {
    var p__16550 = null;
    if(goog.isDef(var_args)) {
      p__16550 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return search__delegate.call(this, p__16549, p__16550)
  };
  search.cljs$lang$maxFixedArity = 1;
  search.cljs$lang$applyTo = function(arglist__16624) {
    var p__16549 = cljs.core.first(arglist__16624);
    var p__16550 = cljs.core.rest(arglist__16624);
    return search__delegate(p__16549, p__16550)
  };
  search.cljs$lang$arity$variadic = search__delegate;
  return search
}();
goog.provide("vcfvis.data");
goog.require("cljs.core");
goog.require("c2.util");
goog.require("cljs.reader");
goog.require("c2.ticks");
goog.require("c2.scale");
goog.require("shoreleave.remotes.http_rpc");
goog.require("vcfvis.ui");
goog.require("vcfvis.core");
goog.require("cljs.reader");
goog.require("c2.util");
vcfvis.data.expand_metric = function expand_metric(metric) {
  if(cljs.core.truth_(metric.call(null, "\ufdd0'range"))) {
    return cljs.core.assoc.call(null, metric, "\ufdd0'bin-width", function() {
      var vec__10246__10247 = metric.call(null, "\ufdd0'range");
      var start__10248 = cljs.core.nth.call(null, vec__10246__10247, 0, null);
      var end__10249 = cljs.core.nth.call(null, vec__10246__10247, 1, null);
      return(end__10249 - start__10248) / vcfvis.ui.hist_bins
    }(), "\ufdd0'!filter-extent", cljs.core.atom.call(null, null), "\ufdd0'scale-x", function() {
      var map__10250__10251 = c2.ticks.search.call(null, metric.call(null, "\ufdd0'range"), "\ufdd0'clamp?", true, "\ufdd0'length", vcfvis.ui.hist_width);
      var map__10250__10252 = cljs.core.seq_QMARK_.call(null, map__10250__10251) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10250__10251) : map__10250__10251;
      var ticks__10253 = cljs.core._lookup.call(null, map__10250__10252, "\ufdd0'ticks", null);
      var x__10254 = c2.scale.linear.call(null, "\ufdd0'domain", metric.call(null, "\ufdd0'range"), "\ufdd0'range", cljs.core.PersistentVector.fromArray([0, vcfvis.ui.hist_width], true));
      return cljs.core.assoc.call(null, x__10254, "\ufdd0'ticks", ticks__10253)
    }())
  }else {
    return metric
  }
};
vcfvis.data.add_metric_w_xscale = function add_metric_w_xscale(xscale_type) {
  return function(res, m) {
    if(cljs.core._EQ_.call(null, cljs.core.get_in.call(null, m, cljs.core.PersistentVector.fromArray(["\ufdd0'x-scale", "\ufdd0'type"], true), "\ufdd0'linear"), xscale_type)) {
      return cljs.core.assoc.call(null, res, (new cljs.core.Keyword("\ufdd0'id")).call(null, m), vcfvis.data.expand_metric.call(null, m))
    }else {
      return res
    }
  }
};
vcfvis.data.prep_context = function prep_context(context) {
  return cljs.core.assoc.call(null, cljs.core.update_in.call(null, context, cljs.core.PersistentVector.fromArray(["\ufdd0'metrics"], true), function(p1__10255_SHARP_) {
    return cljs.core.reduce.call(null, vcfvis.data.add_metric_w_xscale.call(null, "\ufdd0'linear"), cljs.core.ObjMap.EMPTY, p1__10255_SHARP_)
  }), "\ufdd0'categories", cljs.core.reduce.call(null, vcfvis.data.add_metric_w_xscale.call(null, "\ufdd0'category"), cljs.core.ObjMap.EMPTY, (new cljs.core.Keyword("\ufdd0'metrics")).call(null, context)))
};
vcfvis.data.collect_cur_metrics = function collect_cur_metrics(core_kw, orig_metrics) {
  var core_metrics__10259 = cljs.core._lookup.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_context), core_kw, null);
  return cljs.core.reduce.call(null, function(ms, m) {
    if(cljs.core.contains_QMARK_.call(null, core_metrics__10259, (new cljs.core.Keyword("\ufdd0'id")).call(null, m))) {
      return cljs.core.conj.call(null, ms, vcfvis.data.expand_metric.call(null, m))
    }else {
      return ms
    }
  }, cljs.core.PersistentHashSet.EMPTY, orig_metrics)
};
vcfvis.data.prep_vcf_json = function prep_vcf_json(vcf_json) {
  var input__10305 = cljs.reader.read_string.call(null, vcf_json["clj"]);
  var info__10306 = cljs.core.assoc.call(null, cljs.core.update_in.call(null, input__10305, cljs.core.PersistentVector.fromArray(["\ufdd0'available-metrics"], true), cljs.core.partial.call(null, vcfvis.data.collect_cur_metrics, "\ufdd0'metrics")), "\ufdd0'available-categories", vcfvis.data.collect_cur_metrics.call(null, "\ufdd0'categories", (new cljs.core.Keyword("\ufdd0'available-metrics")).call(null, input__10305)));
  var cf__10307 = crossfilter(vcf_json["raw"]);
  return cljs.core.assoc.call(null, info__10306, "\ufdd0'cf", cljs.core.into.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'crossfilter", "\ufdd0'all"], {"\ufdd0'crossfilter":cf__10307, "\ufdd0'all":cf__10307.groupAll()}), cljs.core.concat.call(null, function() {
    var iter__2355__auto____10336 = function iter__10308(s__10309) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__10309__10323 = s__10309;
        while(true) {
          if(cljs.core.seq.call(null, s__10309__10323)) {
            var map__10324__10325 = cljs.core.first.call(null, s__10309__10323);
            var map__10324__10326 = cljs.core.seq_QMARK_.call(null, map__10324__10325) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10324__10325) : map__10324__10325;
            var bin_width__10327 = cljs.core._lookup.call(null, map__10324__10326, "\ufdd0'bin-width", null);
            var range__10328 = cljs.core._lookup.call(null, map__10324__10326, "\ufdd0'range", null);
            var id__10329 = cljs.core._lookup.call(null, map__10324__10326, "\ufdd0'id", null);
            return cljs.core.cons.call(null, function() {
              var vec__10330__10331 = range__10328;
              var start__10332 = cljs.core.nth.call(null, vec__10330__10331, 0, null);
              var end__10333 = cljs.core.nth.call(null, vec__10330__10331, 1, null);
              var dim__10334 = cf__10307.dimension(function(map__10324__10325, map__10324__10326, bin_width__10327, range__10328, id__10329) {
                return function(p1__10256_SHARP_) {
                  return p1__10256_SHARP_[id__10329]
                }
              }(map__10324__10325, map__10324__10326, bin_width__10327, range__10328, id__10329));
              var binned__10335 = dim__10334.group(function(map__10324__10325, map__10324__10326, bin_width__10327, range__10328, id__10329) {
                return function(x) {
                  return start__10332 + bin_width__10327 * (Math.floor.call(null, (x - start__10332) / bin_width__10327) < vcfvis.ui.hist_bins - 1 ? Math.floor.call(null, (x - start__10332) / bin_width__10327) : vcfvis.ui.hist_bins - 1)
                }
              }(map__10324__10325, map__10324__10326, bin_width__10327, range__10328, id__10329));
              return cljs.core.PersistentVector.fromArray([id__10329, cljs.core.ObjMap.fromObject(["\ufdd0'bin-width", "\ufdd0'dimension", "\ufdd0'binned"], {"\ufdd0'bin-width":bin_width__10327, "\ufdd0'dimension":dim__10334, "\ufdd0'binned":binned__10335})], true)
            }(), iter__10308.call(null, cljs.core.rest.call(null, s__10309__10323)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2355__auto____10336.call(null, info__10306.call(null, "\ufdd0'available-metrics"))
  }(), function() {
    var iter__2355__auto____10349 = function iter__10337(s__10338) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__10338__10344 = s__10338;
        while(true) {
          if(cljs.core.seq.call(null, s__10338__10344)) {
            var map__10345__10346 = cljs.core.first.call(null, s__10338__10344);
            var map__10345__10347 = cljs.core.seq_QMARK_.call(null, map__10345__10346) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10345__10346) : map__10345__10346;
            var id__10348 = cljs.core._lookup.call(null, map__10345__10347, "\ufdd0'id", null);
            return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([id__10348, cljs.core.ObjMap.fromObject(["\ufdd0'dimension"], {"\ufdd0'dimension":cf__10307.dimension(function(map__10345__10346, map__10345__10347, id__10348) {
              return function(p1__10257_SHARP_) {
                return p1__10257_SHARP_[id__10348]
              }
            }(map__10345__10346, map__10345__10347, id__10348))})], true), iter__10337.call(null, cljs.core.rest.call(null, s__10338__10344)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2355__auto____10349.call(null, info__10306.call(null, "\ufdd0'available-categories"))
  }())))
};
vcfvis.data.load_context = function load_context(callback) {
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "variant/context", cljs.core.PersistentVector.EMPTY, function(res) {
    return callback.call(null, vcfvis.data.prep_context.call(null, res))
  })
};
vcfvis.data.load_vcf = function load_vcf(file_url, callback) {
  return jQuery.getJSON("/api/vcf", c2.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'file-url"], {"\ufdd0'file-url":file_url})), function(res) {
    return callback.call(null, vcfvis.data.prep_vcf_json.call(null, res))
  })
};
vcfvis.data._BANG_analysis_status = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
cljs.core.swap_BANG_.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_, cljs.core.conj, function(m__8957__auto__) {
  try {
    if(function() {
      var G__10355__10356 = m__8957__auto__;
      if(G__10355__10356) {
        if(function() {
          var or__3824__auto____10357 = G__10355__10356.cljs$lang$protocol_mask$partition0$ & 256;
          if(or__3824__auto____10357) {
            return or__3824__auto____10357
          }else {
            return G__10355__10356.cljs$core$ILookup$
          }
        }()) {
          return true
        }else {
          if(!G__10355__10356.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__10355__10356)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__10355__10356)
      }
    }()) {
      var G__10350__10359 = function() {
        var val__6595__auto____10358 = cljs.core._lookup.call(null, m__8957__auto__, "\ufdd0'filter-updated", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6595__auto____10358, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6595__auto____10358
        }
      }();
      return cljs.core.reset_BANG_.call(null, vcfvis.data._BANG_analysis_status, cljs.core.ObjMap.EMPTY)
    }else {
      if("\ufdd0'else") {
        throw 0;
      }else {
        return null
      }
    }
  }catch(e__7028__auto__) {
    if(e__7028__auto__ === 0) {
      var G__10351__10354 = m__8957__auto__;
      return null
    }else {
      throw e__7028__auto__;
    }
  }
});
vcfvis.data.update_status_BANG_ = function update_status_BANG_(filename, status) {
  return cljs.core.swap_BANG_.call(null, vcfvis.data._BANG_analysis_status, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([filename], true), status)
};
vcfvis.data.reset_statuses_BANG_ = function reset_statuses_BANG_() {
  return cljs.core.reset_BANG_.call(null, vcfvis.data._BANG_analysis_status, cljs.core.ObjMap.EMPTY)
};
vcfvis.data.filter_analysis = function filter_analysis(file_url, metrics) {
  vcfvis.data.update_status_BANG_.call(null, file_url, "\ufdd0'running");
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "run/filter", cljs.core.PersistentVector.fromArray([file_url, metrics], true), function(res) {
    return vcfvis.data.update_status_BANG_.call(null, file_url, "\ufdd0'completed")
  })
};
goog.provide("c2.svg");
goog.require("cljs.core");
goog.require("c2.core");
goog.require("c2.maths");
goog.require("c2.dom");
goog.require("c2.maths");
goog.require("c2.core");
c2.svg.__GT_xy = function __GT_xy(coordinates) {
  try {
    if(cljs.core.vector_QMARK_.call(null, coordinates)) {
      try {
        if(function() {
          var and__3822__auto____17240 = cljs.core.vector_QMARK_.call(null, coordinates);
          if(and__3822__auto____17240) {
            return cljs.core._EQ_.call(null, cljs.core.count.call(null, coordinates), 2)
          }else {
            return and__3822__auto____17240
          }
        }()) {
          var x__17241 = cljs.core.nth.call(null, coordinates, 0);
          var y__17242 = cljs.core.nth.call(null, coordinates, 1);
          return cljs.core.PersistentVector.fromArray([x__17241, y__17242], true)
        }else {
          if("\ufdd0'else") {
            throw 0;
          }else {
            return null
          }
        }
      }catch(e__7036__auto__) {
        if(e__7036__auto__ === 0) {
          throw 0;
        }else {
          throw e__7036__auto__;
        }
      }
    }else {
      if(function() {
        var G__17243__17244 = coordinates;
        if(G__17243__17244) {
          if(function() {
            var or__3824__auto____17245 = G__17243__17244.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3824__auto____17245) {
              return or__3824__auto____17245
            }else {
              return G__17243__17244.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__17243__17244.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__17243__17244)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__17243__17244)
        }
      }()) {
        var y__17247 = function() {
          var val__6603__auto____17246 = cljs.core._lookup.call(null, coordinates, "\ufdd0'y", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6603__auto____17246, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6603__auto____17246
          }
        }();
        var x__17249 = function() {
          var val__6603__auto____17248 = cljs.core._lookup.call(null, coordinates, "\ufdd0'x", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6603__auto____17248, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6603__auto____17248
          }
        }();
        return cljs.core.PersistentVector.fromArray([x__17249, y__17247], true)
      }else {
        if("\ufdd0'else") {
          throw 0;
        }else {
          return null
        }
      }
    }
  }catch(e__7036__auto__) {
    if(e__7036__auto__ === 0) {
      var G__17232__17238 = coordinates;
      return null
    }else {
      throw e__7036__auto__;
    }
  }
};
c2.svg.translate = function translate(coordinates) {
  var vec__17254__17255 = c2.svg.__GT_xy.call(null, coordinates);
  var x__17256 = cljs.core.nth.call(null, vec__17254__17255, 0, null);
  var y__17257 = cljs.core.nth.call(null, vec__17254__17255, 1, null);
  return[cljs.core.str("translate("), cljs.core.str(x__17256), cljs.core.str(","), cljs.core.str(y__17257), cljs.core.str(")")].join("")
};
c2.svg.scale = function scale(coordinates) {
  while(true) {
    if(cljs.core.vector_QMARK_.call(null, coordinates)) {
      if(function() {
        var and__3822__auto____17279 = cljs.core.vector_QMARK_.call(null, coordinates);
        if(and__3822__auto____17279) {
          return cljs.core._EQ_.call(null, cljs.core.count.call(null, coordinates), 2)
        }else {
          return and__3822__auto____17279
        }
      }()) {
        var x__17280 = cljs.core.nth.call(null, coordinates, 0);
        var y__17281 = cljs.core.nth.call(null, coordinates, 1);
        return[cljs.core.str("scale("), cljs.core.str(x__17280), cljs.core.str(","), cljs.core.str(y__17281), cljs.core.str(")")].join("")
      }else {
        if("\ufdd0'else") {
          throw new java.lang.Exception([cljs.core.str("No match found. "), cljs.core.str("Followed "), cljs.core.str(1), cljs.core.str(" branches."), cljs.core.str(" Breadcrumbs: "), cljs.core.str(cljs.core.vec([cljs.core.list("\ufdd1'clojure.core/vector?", "\ufdd1'coordinates")]))].join(""));
        }else {
          return null
        }
      }
    }else {
      if(function() {
        var G__17282__17283 = coordinates;
        if(G__17282__17283) {
          if(function() {
            var or__3824__auto____17284 = G__17282__17283.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3824__auto____17284) {
              return or__3824__auto____17284
            }else {
              return G__17282__17283.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__17282__17283.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__17282__17283)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__17282__17283)
        }
      }()) {
        var y__17286 = function() {
          var val__6603__auto____17285 = cljs.core._lookup.call(null, coordinates, "\ufdd0'y", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6603__auto____17285, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6603__auto____17285
          }
        }();
        var x__17288 = function() {
          var val__6603__auto____17287 = cljs.core._lookup.call(null, coordinates, "\ufdd0'x", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6603__auto____17287, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6603__auto____17287
          }
        }();
        var G__17290 = cljs.core.PersistentVector.fromArray([x__17288, y__17286], true);
        coordinates = G__17290;
        continue
      }else {
        if("\ufdd0'else") {
          var s__17289 = coordinates;
          return[cljs.core.str("scale("), cljs.core.str(s__17289), cljs.core.str(")")].join("")
        }else {
          return null
        }
      }
    }
    break
  }
};
c2.svg.rotate = function() {
  var rotate = null;
  var rotate__1 = function(angle) {
    return rotate.call(null, angle, cljs.core.PersistentVector.fromArray([0, 0], true))
  };
  var rotate__2 = function(angle, coordinates) {
    var vec__17295__17296 = c2.svg.__GT_xy.call(null, coordinates);
    var x__17297 = cljs.core.nth.call(null, vec__17295__17296, 0, null);
    var y__17298 = cljs.core.nth.call(null, vec__17295__17296, 1, null);
    return[cljs.core.str("rotate("), cljs.core.str(angle), cljs.core.str(","), cljs.core.str(x__17297), cljs.core.str(","), cljs.core.str(y__17298), cljs.core.str(")")].join("")
  };
  rotate = function(angle, coordinates) {
    switch(arguments.length) {
      case 1:
        return rotate__1.call(this, angle);
      case 2:
        return rotate__2.call(this, angle, coordinates)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rotate.cljs$lang$arity$1 = rotate__1;
  rotate.cljs$lang$arity$2 = rotate__2;
  return rotate
}();
c2.svg.get_bounds = function get_bounds($svg_el) {
  var b__17300 = $svg_el.getBBox();
  return cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'y", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":b__17300.x, "\ufdd0'y":b__17300.y, "\ufdd0'width":b__17300.width, "\ufdd0'height":b__17300.height})
};
c2.svg.transform_to_center = function transform_to_center(element, container) {
  var map__17314__17316 = element;
  var map__17314__17317 = cljs.core.seq_QMARK_.call(null, map__17314__17316) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17314__17316) : map__17314__17316;
  var ew__17318 = cljs.core._lookup.call(null, map__17314__17317, "\ufdd0'width", null);
  var eh__17319 = cljs.core._lookup.call(null, map__17314__17317, "\ufdd0'height", null);
  var x__17320 = cljs.core._lookup.call(null, map__17314__17317, "\ufdd0'x", null);
  var y__17321 = cljs.core._lookup.call(null, map__17314__17317, "\ufdd0'y", null);
  var map__17315__17322 = container;
  var map__17315__17323 = cljs.core.seq_QMARK_.call(null, map__17315__17322) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17315__17322) : map__17315__17322;
  var w__17324 = cljs.core._lookup.call(null, map__17315__17323, "\ufdd0'width", null);
  var h__17325 = cljs.core._lookup.call(null, map__17315__17323, "\ufdd0'height", null);
  var s__17326 = h__17325 / eh__17319 < w__17324 / ew__17318 ? h__17325 / eh__17319 : w__17324 / ew__17318;
  return[cljs.core.str(c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([w__17324 / 2 - s__17326 * (ew__17318 / 2), h__17325 / 2 - s__17326 * (eh__17319 / 2)], true))), cljs.core.str(" "), cljs.core.str(c2.svg.scale.call(null, s__17326)), cljs.core.str(" "), cljs.core.str(c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([-x__17320, -y__17321], true)))].join("")
};
c2.svg.transform_to_center_BANG_ = function transform_to_center_BANG_($svg_el) {
  var $svg__17329 = $svg_el.ownerSVGElement;
  var t__17330 = c2.svg.transform_to_center.call(null, c2.svg.get_bounds.call(null, $svg_el), cljs.core.ObjMap.fromObject(["\ufdd0'width", "\ufdd0'height"], {"\ufdd0'width":parseFloat(c2.dom.attr.call(null, $svg__17329, "\ufdd0'width")), "\ufdd0'height":parseFloat(c2.dom.attr.call(null, $svg__17329, "\ufdd0'height"))}));
  return c2.dom.attr.call(null, $svg_el, "\ufdd0'transform", t__17330)
};
c2.svg.axis = function() {
  var axis__delegate = function(scale, ticks, p__17331) {
    var map__17356__17357 = p__17331;
    var map__17356__17358 = cljs.core.seq_QMARK_.call(null, map__17356__17357) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17356__17357) : map__17356__17357;
    var label_margin__17359 = cljs.core._lookup.call(null, map__17356__17358, "\ufdd0'label-margin", 28);
    var label__17360 = cljs.core._lookup.call(null, map__17356__17358, "\ufdd0'label", null);
    var text_margin__17361 = cljs.core._lookup.call(null, map__17356__17358, "\ufdd0'text-margin", 9);
    var major_tick_width__17362 = cljs.core._lookup.call(null, map__17356__17358, "\ufdd0'major-tick-width", 6);
    var formatter__17363 = cljs.core._lookup.call(null, map__17356__17358, "\ufdd0'formatter", cljs.core.str);
    var orientation__17364 = cljs.core._lookup.call(null, map__17356__17358, "\ufdd0'orientation", "\ufdd0'left");
    var vec__17365__17368 = function() {
      var G__17366__17367 = orientation__17364;
      if(cljs.core._EQ_.call(null, "\ufdd0'bottom", G__17366__17367)) {
        return cljs.core.PersistentVector.fromArray(["\ufdd0'y", "\ufdd0'x", "\ufdd0'y1", "\ufdd0'y2", "\ufdd0'x1", "\ufdd0'x2"], true)
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'top", G__17366__17367)) {
          return cljs.core.PersistentVector.fromArray(["\ufdd0'y", "\ufdd0'x", "\ufdd0'y1", "\ufdd0'y2", "\ufdd0'x1", "\ufdd0'x2"], true)
        }else {
          if(cljs.core._EQ_.call(null, "\ufdd0'right", G__17366__17367)) {
            return cljs.core.PersistentVector.fromArray(["\ufdd0'x", "\ufdd0'y", "\ufdd0'x1", "\ufdd0'x2", "\ufdd0'y1", "\ufdd0'y2"], true)
          }else {
            if(cljs.core._EQ_.call(null, "\ufdd0'left", G__17366__17367)) {
              return cljs.core.PersistentVector.fromArray(["\ufdd0'x", "\ufdd0'y", "\ufdd0'x1", "\ufdd0'x2", "\ufdd0'y1", "\ufdd0'y2"], true)
            }else {
              if("\ufdd0'else") {
                throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(orientation__17364)].join(""));
              }else {
                return null
              }
            }
          }
        }
      }
    }();
    var x__17369 = cljs.core.nth.call(null, vec__17365__17368, 0, null);
    var y__17370 = cljs.core.nth.call(null, vec__17365__17368, 1, null);
    var x1__17371 = cljs.core.nth.call(null, vec__17365__17368, 2, null);
    var x2__17372 = cljs.core.nth.call(null, vec__17365__17368, 3, null);
    var y1__17373 = cljs.core.nth.call(null, vec__17365__17368, 4, null);
    var y2__17374 = cljs.core.nth.call(null, vec__17365__17368, 5, null);
    var parity__17377 = function() {
      var G__17375__17376 = orientation__17364;
      if(cljs.core._EQ_.call(null, "\ufdd0'bottom", G__17375__17376)) {
        return 1
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'right", G__17375__17376)) {
          return 1
        }else {
          if(cljs.core._EQ_.call(null, "\ufdd0'top", G__17375__17376)) {
            return-1
          }else {
            if(cljs.core._EQ_.call(null, "\ufdd0'left", G__17375__17376)) {
              return-1
            }else {
              if("\ufdd0'else") {
                throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(orientation__17364)].join(""));
              }else {
                return null
              }
            }
          }
        }
      }
    }();
    return cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.ObjMap.fromObject(["\ufdd0'class"], {"\ufdd0'class":[cljs.core.str("axis "), cljs.core.str(cljs.core.name.call(null, orientation__17364))].join("")}), cljs.core.PersistentVector.fromArray(["\ufdd0'line.rule", cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.interleave.call(null, cljs.core.PersistentVector.fromArray([y1__17373, y2__17374], true), (new cljs.core.Keyword("\ufdd0'range")).call(null, scale)))], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.ticks", 
    c2.core.unify.call(null, ticks, function(d) {
      return cljs.core.PersistentVector.fromArray(["\ufdd0'g.tick.major-tick", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentArrayMap.fromArrays([x__17369, y__17370], [0, scale.call(null, d)]))}), cljs.core.PersistentVector.fromArray(["\ufdd0'text", cljs.core.PersistentArrayMap.fromArrays([x__17369], [parity__17377 * text_margin__17361]), formatter__17363.call(null, d)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'line", 
      cljs.core.PersistentArrayMap.fromArrays([x1__17371, x2__17372], [0, parity__17377 * major_tick_width__17362])], true)], true)
    })], true), cljs.core.truth_(label__17360) ? cljs.core.PersistentVector.fromArray(["\ufdd0'text.label", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":[cljs.core.str(c2.svg.translate.call(null, cljs.core.PersistentArrayMap.fromArrays([x__17369, y__17370], [parity__17377 * label_margin__17359, c2.maths.mean.call(null, (new cljs.core.Keyword("\ufdd0'range")).call(null, scale))]))), cljs.core.str(" "), cljs.core.str(function() {
      var G__17378__17379 = orientation__17364;
      if(cljs.core._EQ_.call(null, "\ufdd0'right", G__17378__17379)) {
        return c2.svg.rotate.call(null, 90)
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'left", G__17378__17379)) {
          return c2.svg.rotate.call(null, -90)
        }else {
          if("\ufdd0'else") {
            return""
          }else {
            return null
          }
        }
      }
    }())].join("")}), label__17360], true) : null], true)
  };
  var axis = function(scale, ticks, var_args) {
    var p__17331 = null;
    if(goog.isDef(var_args)) {
      p__17331 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return axis__delegate.call(this, scale, ticks, p__17331)
  };
  axis.cljs$lang$maxFixedArity = 2;
  axis.cljs$lang$applyTo = function(arglist__17380) {
    var scale = cljs.core.first(arglist__17380);
    var ticks = cljs.core.first(cljs.core.next(arglist__17380));
    var p__17331 = cljs.core.rest(cljs.core.next(arglist__17380));
    return axis__delegate(scale, ticks, p__17331)
  };
  axis.cljs$lang$arity$variadic = axis__delegate;
  return axis
}();
c2.svg.ArcMax = c2.maths.Tau - 1.0E-7;
c2.svg.circle = function() {
  var circle = null;
  var circle__1 = function(radius) {
    return circle.call(null, cljs.core.PersistentVector.fromArray([0, 0], true), radius)
  };
  var circle__2 = function(coordinates, radius) {
    var vec__17385__17386 = c2.svg.__GT_xy.call(null, coordinates);
    var x__17387 = cljs.core.nth.call(null, vec__17385__17386, 0, null);
    var y__17388 = cljs.core.nth.call(null, vec__17385__17386, 1, null);
    return[cljs.core.str("M"), cljs.core.str(x__17387 + radius), cljs.core.str(","), cljs.core.str(y__17388), cljs.core.str("A"), cljs.core.str(x__17387 + radius), cljs.core.str(","), cljs.core.str(y__17388 + radius), cljs.core.str(" 0 1,1"), cljs.core.str(-(x__17387 + radius)), cljs.core.str(","), cljs.core.str(y__17388), cljs.core.str("A"), cljs.core.str(x__17387 + radius), cljs.core.str(","), cljs.core.str(y__17388 + radius), cljs.core.str(" 0 1,1"), cljs.core.str(x__17387 + radius), cljs.core.str(","), 
    cljs.core.str(y__17388)].join("")
  };
  circle = function(coordinates, radius) {
    switch(arguments.length) {
      case 1:
        return circle__1.call(this, coordinates);
      case 2:
        return circle__2.call(this, coordinates, radius)
    }
    throw"Invalid arity: " + arguments.length;
  };
  circle.cljs$lang$arity$1 = circle__1;
  circle.cljs$lang$arity$2 = circle__2;
  return circle
}();
c2.svg.arc = function() {
  var arc__delegate = function(p__17389) {
    var map__17410__17411 = p__17389;
    var map__17410__17412 = cljs.core.seq_QMARK_.call(null, map__17410__17411) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17410__17411) : map__17410__17411;
    var angle_offset__17413 = cljs.core._lookup.call(null, map__17410__17412, "\ufdd0'angle-offset", 0);
    var end_angle__17414 = cljs.core._lookup.call(null, map__17410__17412, "\ufdd0'end-angle", c2.maths.Pi);
    var start_angle__17415 = cljs.core._lookup.call(null, map__17410__17412, "\ufdd0'start-angle", 0);
    var outer_radius__17416 = cljs.core._lookup.call(null, map__17410__17412, "\ufdd0'outer-radius", 1);
    var inner_radius__17417 = cljs.core._lookup.call(null, map__17410__17412, "\ufdd0'inner-radius", 0);
    var r0__17419 = inner_radius__17417;
    var r1__17420 = outer_radius__17416;
    var vec__17418__17421 = cljs.core.sort.call(null, cljs.core.PersistentVector.fromArray([angle_offset__17413 + start_angle__17415, angle_offset__17413 + end_angle__17414], true));
    var a0__17422 = cljs.core.nth.call(null, vec__17418__17421, 0, null);
    var a1__17423 = cljs.core.nth.call(null, vec__17418__17421, 1, null);
    var da__17424 = a1__17423 - a0__17422;
    var large_arc_flag__17425 = da__17424 < c2.maths.Pi ? "0" : "1";
    var s0__17426 = c2.maths.sin.call(null, a0__17422);
    var c0__17427 = c2.maths.cos.call(null, a0__17422);
    var s1__17428 = c2.maths.sin.call(null, a1__17423);
    var c1__17429 = c2.maths.cos.call(null, a1__17423);
    if(da__17424 >= c2.svg.ArcMax) {
      return[cljs.core.str("M0,"), cljs.core.str(r1__17420), cljs.core.str("A"), cljs.core.str(r1__17420), cljs.core.str(","), cljs.core.str(r1__17420), cljs.core.str(" 0 1,1 0,"), cljs.core.str(-r1__17420), cljs.core.str("A"), cljs.core.str(r1__17420), cljs.core.str(","), cljs.core.str(r1__17420), cljs.core.str(" 0 1,1 0,"), cljs.core.str(r1__17420), cljs.core.str(cljs.core.not_EQ_.call(null, 0, r0__17419) ? [cljs.core.str("M0,"), cljs.core.str(r0__17419), cljs.core.str("A"), cljs.core.str(r0__17419), 
      cljs.core.str(","), cljs.core.str(r0__17419), cljs.core.str(" 0 1,0 0,"), cljs.core.str(-r0__17419), cljs.core.str("A"), cljs.core.str(r0__17419), cljs.core.str(","), cljs.core.str(r0__17419), cljs.core.str(" 0 1,0 0,"), cljs.core.str(r0__17419)].join("") : null), cljs.core.str("Z")].join("")
    }else {
      return[cljs.core.str("M"), cljs.core.str(r1__17420 * c0__17427), cljs.core.str(","), cljs.core.str(r1__17420 * s0__17426), cljs.core.str("A"), cljs.core.str(r1__17420), cljs.core.str(","), cljs.core.str(r1__17420), cljs.core.str(" 0 "), cljs.core.str(large_arc_flag__17425), cljs.core.str(",1 "), cljs.core.str(r1__17420 * c1__17429), cljs.core.str(","), cljs.core.str(r1__17420 * s1__17428), cljs.core.str(cljs.core.not_EQ_.call(null, 0, r0__17419) ? [cljs.core.str("L"), cljs.core.str(r0__17419 * 
      c1__17429), cljs.core.str(","), cljs.core.str(r0__17419 * s1__17428), cljs.core.str("A"), cljs.core.str(r0__17419), cljs.core.str(","), cljs.core.str(r0__17419), cljs.core.str(" 0 "), cljs.core.str(large_arc_flag__17425), cljs.core.str(",0 "), cljs.core.str(r0__17419 * c0__17427), cljs.core.str(","), cljs.core.str(r0__17419 * s0__17426)].join("") : "L0,0"), cljs.core.str("Z")].join("")
    }
  };
  var arc = function(var_args) {
    var p__17389 = null;
    if(goog.isDef(var_args)) {
      p__17389 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return arc__delegate.call(this, p__17389)
  };
  arc.cljs$lang$maxFixedArity = 0;
  arc.cljs$lang$applyTo = function(arglist__17430) {
    var p__17389 = cljs.core.seq(arglist__17430);
    return arc__delegate(p__17389)
  };
  arc.cljs$lang$arity$variadic = arc__delegate;
  return arc
}();
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.events.EventWrapper");
goog.require("goog.object");
goog.require("goog.structs.SimplePool");
goog.events.EventHandler = function(opt_handler) {
  goog.Disposable.call(this);
  this.handler_ = opt_handler
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.KEY_POOL_INITIAL_COUNT = 0;
goog.events.EventHandler.KEY_POOL_MAX_COUNT = 100;
goog.events.EventHandler.keyPool_ = new goog.structs.SimplePool(goog.events.EventHandler.KEY_POOL_INITIAL_COUNT, goog.events.EventHandler.KEY_POOL_MAX_COUNT);
goog.events.EventHandler.keys_ = null;
goog.events.EventHandler.key_ = null;
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(!goog.isArray(type)) {
    goog.events.EventHandler.typeArray_[0] = type;
    type = goog.events.EventHandler.typeArray_
  }
  for(var i = 0;i < type.length;i++) {
    var key = goog.events.listen(src, type[i], opt_fn || this, opt_capture || false, opt_handler || this.handler_ || this);
    this.recordListenerKey_(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.listenOnce(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var key = goog.events.listenOnce(src, type, opt_fn || this, opt_capture || false, opt_handler || this.handler_ || this);
    this.recordListenerKey_(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler || this.handler_, this);
  return this
};
goog.events.EventHandler.prototype.recordListenerKey_ = function(key) {
  if(this.keys_) {
    this.keys_[key] = true
  }else {
    if(this.key_) {
      this.keys_ = goog.events.EventHandler.keyPool_.getObject();
      this.keys_[this.key_] = true;
      this.key_ = null;
      this.keys_[key] = true
    }else {
      this.key_ = key
    }
  }
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(this.key_ || this.keys_) {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        this.unlisten(src, type[i], opt_fn, opt_capture, opt_handler)
      }
    }else {
      var listener = goog.events.getListener(src, type, opt_fn || this, opt_capture || false, opt_handler || this.handler_ || this);
      if(listener) {
        var key = listener.key;
        goog.events.unlistenByKey(key);
        if(this.keys_) {
          goog.object.remove(this.keys_, key)
        }else {
          if(this.key_ == key) {
            this.key_ = null
          }
        }
      }
    }
  }
  return this
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler || this.handler_, this);
  return this
};
goog.events.EventHandler.prototype.removeAll = function() {
  if(this.keys_) {
    for(var key in this.keys_) {
      goog.events.unlistenByKey(key);
      delete this.keys_[key]
    }
    goog.events.EventHandler.keyPool_.releaseObject(this.keys_);
    this.keys_ = null
  }else {
    if(this.key_) {
      goog.events.unlistenByKey(this.key_)
    }
  }
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll()
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.fx.DragEvent");
goog.provide("goog.fx.Dragger");
goog.provide("goog.fx.Dragger.EventType");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.Event");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.userAgent");
goog.fx.Dragger = function(target, opt_handle, opt_limits) {
  goog.events.EventTarget.call(this);
  this.target = target;
  this.handle = opt_handle || target;
  this.limits = opt_limits || new goog.math.Rect(NaN, NaN, NaN, NaN);
  this.document_ = goog.dom.getOwnerDocument(target);
  this.eventHandler_ = new goog.events.EventHandler(this);
  goog.events.listen(this.handle, [goog.events.EventType.TOUCHSTART, goog.events.EventType.MOUSEDOWN], this.startDrag, false, this)
};
goog.inherits(goog.fx.Dragger, goog.events.EventTarget);
goog.fx.Dragger.HAS_SET_CAPTURE_ = goog.userAgent.IE || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.3");
goog.fx.Dragger.EventType = {START:"start", BEFOREDRAG:"beforedrag", DRAG:"drag", END:"end"};
goog.fx.Dragger.prototype.target;
goog.fx.Dragger.prototype.handle;
goog.fx.Dragger.prototype.limits;
goog.fx.Dragger.prototype.clientX = 0;
goog.fx.Dragger.prototype.clientY = 0;
goog.fx.Dragger.prototype.screenX = 0;
goog.fx.Dragger.prototype.screenY = 0;
goog.fx.Dragger.prototype.startX = 0;
goog.fx.Dragger.prototype.startY = 0;
goog.fx.Dragger.prototype.deltaX = 0;
goog.fx.Dragger.prototype.deltaY = 0;
goog.fx.Dragger.prototype.pageScroll;
goog.fx.Dragger.prototype.enabled_ = true;
goog.fx.Dragger.prototype.dragging_ = false;
goog.fx.Dragger.prototype.hysteresisDistanceSquared_ = 0;
goog.fx.Dragger.prototype.mouseDownTime_ = 0;
goog.fx.Dragger.prototype.document_;
goog.fx.Dragger.prototype.eventHandler_;
goog.fx.Dragger.prototype.scrollTarget_;
goog.fx.Dragger.prototype.ieDragStartCancellingOn_ = false;
goog.fx.Dragger.prototype.getHandler = function() {
  return this.eventHandler_
};
goog.fx.Dragger.prototype.setLimits = function(limits) {
  this.limits = limits || new goog.math.Rect(NaN, NaN, NaN, NaN)
};
goog.fx.Dragger.prototype.setHysteresis = function(distance) {
  this.hysteresisDistanceSquared_ = Math.pow(distance, 2)
};
goog.fx.Dragger.prototype.getHysteresis = function() {
  return Math.sqrt(this.hysteresisDistanceSquared_)
};
goog.fx.Dragger.prototype.setScrollTarget = function(scrollTarget) {
  this.scrollTarget_ = scrollTarget
};
goog.fx.Dragger.prototype.setCancelIeDragStart = function(cancelIeDragStart) {
  this.ieDragStartCancellingOn_ = cancelIeDragStart
};
goog.fx.Dragger.prototype.getEnabled = function() {
  return this.enabled_
};
goog.fx.Dragger.prototype.setEnabled = function(enabled) {
  this.enabled_ = enabled
};
goog.fx.Dragger.prototype.disposeInternal = function() {
  goog.fx.Dragger.superClass_.disposeInternal.call(this);
  goog.events.unlisten(this.handle, [goog.events.EventType.TOUCHSTART, goog.events.EventType.MOUSEDOWN], this.startDrag, false, this);
  this.eventHandler_.dispose();
  delete this.target;
  delete this.handle;
  delete this.eventHandler_
};
goog.fx.Dragger.prototype.startDrag = function(e) {
  var isMouseDown = e.type == goog.events.EventType.MOUSEDOWN;
  if(this.enabled_ && !this.dragging_ && (!isMouseDown || e.isMouseActionButton())) {
    this.maybeReinitTouchEvent_(e);
    if(this.hysteresisDistanceSquared_ == 0) {
      this.initializeDrag_(e);
      if(this.dragging_) {
        e.preventDefault()
      }else {
        return
      }
    }else {
      e.preventDefault()
    }
    this.setupDragHandlers();
    this.clientX = this.startX = e.clientX;
    this.clientY = this.startY = e.clientY;
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    this.deltaX = this.target.offsetLeft;
    this.deltaY = this.target.offsetTop;
    this.pageScroll = goog.dom.getDomHelper(this.document_).getDocumentScroll();
    this.mouseDownTime_ = goog.now()
  }
};
goog.fx.Dragger.prototype.setupDragHandlers = function() {
  var doc = this.document_;
  var docEl = doc.documentElement;
  var useCapture = !goog.fx.Dragger.HAS_SET_CAPTURE_;
  this.eventHandler_.listen(doc, [goog.events.EventType.TOUCHMOVE, goog.events.EventType.MOUSEMOVE], this.handleMove_, useCapture);
  this.eventHandler_.listen(doc, [goog.events.EventType.TOUCHEND, goog.events.EventType.MOUSEUP], this.endDrag, useCapture);
  if(goog.fx.Dragger.HAS_SET_CAPTURE_) {
    docEl.setCapture(false);
    this.eventHandler_.listen(docEl, goog.events.EventType.LOSECAPTURE, this.endDrag)
  }else {
    this.eventHandler_.listen(goog.dom.getWindow(doc), goog.events.EventType.BLUR, this.endDrag)
  }
  if(goog.userAgent.IE && this.ieDragStartCancellingOn_) {
    this.eventHandler_.listen(doc, goog.events.EventType.DRAGSTART, goog.events.Event.preventDefault)
  }
  if(this.scrollTarget_) {
    this.eventHandler_.listen(this.scrollTarget_, goog.events.EventType.SCROLL, this.onScroll_, useCapture)
  }
};
goog.fx.Dragger.prototype.initializeDrag_ = function(e) {
  var rv = this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.START, this, e.clientX, e.clientY, e));
  if(rv !== false) {
    this.dragging_ = true
  }
};
goog.fx.Dragger.prototype.endDrag = function(e, opt_dragCanceled) {
  this.eventHandler_.removeAll();
  if(goog.fx.Dragger.HAS_SET_CAPTURE_) {
    this.document_.releaseCapture()
  }
  if(this.dragging_) {
    this.maybeReinitTouchEvent_(e);
    this.dragging_ = false;
    var x = this.limitX(this.deltaX);
    var y = this.limitY(this.deltaY);
    var dragCancelled = opt_dragCanceled || e.type == goog.events.EventType.TOUCHCANCEL;
    this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.END, this, e.clientX, e.clientY, e, x, y, dragCancelled))
  }
  if(e.type == goog.events.EventType.TOUCHEND || e.type == goog.events.EventType.TOUCHCANCEL) {
    e.preventDefault()
  }
};
goog.fx.Dragger.prototype.endDragCancel = function(e) {
  this.endDrag(e, true)
};
goog.fx.Dragger.prototype.maybeReinitTouchEvent_ = function(e) {
  var type = e.type;
  if(type == goog.events.EventType.TOUCHSTART || type == goog.events.EventType.TOUCHMOVE) {
    e.init(e.getBrowserEvent().targetTouches[0], e.currentTarget)
  }else {
    if(type == goog.events.EventType.TOUCHEND || type == goog.events.EventType.TOUCHCANCEL) {
      e.init(e.getBrowserEvent().changedTouches[0], e.currentTarget)
    }
  }
};
goog.fx.Dragger.prototype.handleMove_ = function(e) {
  if(this.enabled_) {
    this.maybeReinitTouchEvent_(e);
    var dx = e.clientX - this.clientX;
    var dy = e.clientY - this.clientY;
    this.clientX = e.clientX;
    this.clientY = e.clientY;
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    if(!this.dragging_) {
      var diffX = this.startX - this.clientX;
      var diffY = this.startY - this.clientY;
      var distance = diffX * diffX + diffY * diffY;
      if(distance > this.hysteresisDistanceSquared_) {
        this.initializeDrag_(e);
        if(!this.dragging_) {
          this.endDrag(e);
          return
        }
      }
    }
    var pos = this.calculatePosition_(dx, dy);
    var x = pos.x;
    var y = pos.y;
    if(this.dragging_) {
      var rv = this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.BEFOREDRAG, this, e.clientX, e.clientY, e, x, y));
      if(rv !== false) {
        this.doDrag(e, x, y, false);
        e.preventDefault()
      }
    }
  }
};
goog.fx.Dragger.prototype.calculatePosition_ = function(dx, dy) {
  var pageScroll = goog.dom.getDomHelper(this.document_).getDocumentScroll();
  dx += pageScroll.x - this.pageScroll.x;
  dy += pageScroll.y - this.pageScroll.y;
  this.pageScroll = pageScroll;
  this.deltaX += dx;
  this.deltaY += dy;
  var x = this.limitX(this.deltaX);
  var y = this.limitY(this.deltaY);
  return new goog.math.Coordinate(x, y)
};
goog.fx.Dragger.prototype.onScroll_ = function(e) {
  var pos = this.calculatePosition_(0, 0);
  e.clientX = this.pageScroll.x - this.clientX;
  e.clientY = this.pageScroll.y - this.clientY;
  this.doDrag(e, pos.x, pos.y, true)
};
goog.fx.Dragger.prototype.doDrag = function(e, x, y, dragFromScroll) {
  this.defaultAction(x, y);
  this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.DRAG, this, e.clientX, e.clientY, e, x, y))
};
goog.fx.Dragger.prototype.limitX = function(x) {
  var rect = this.limits;
  var left = !isNaN(rect.left) ? rect.left : null;
  var width = !isNaN(rect.width) ? rect.width : 0;
  var maxX = left != null ? left + width : Infinity;
  var minX = left != null ? left : -Infinity;
  return Math.min(maxX, Math.max(minX, x))
};
goog.fx.Dragger.prototype.limitY = function(y) {
  var rect = this.limits;
  var top = !isNaN(rect.top) ? rect.top : null;
  var height = !isNaN(rect.height) ? rect.height : 0;
  var maxY = top != null ? top + height : Infinity;
  var minY = top != null ? top : -Infinity;
  return Math.min(maxY, Math.max(minY, y))
};
goog.fx.Dragger.prototype.defaultAction = function(x, y) {
  this.target.style.left = x + "px";
  this.target.style.top = y + "px"
};
goog.fx.DragEvent = function(type, dragobj, clientX, clientY, browserEvent, opt_actX, opt_actY, opt_dragCanceled) {
  goog.events.Event.call(this, type);
  this.clientX = clientX;
  this.clientY = clientY;
  this.browserEvent = browserEvent;
  this.left = goog.isDef(opt_actX) ? opt_actX : dragobj.deltaX;
  this.top = goog.isDef(opt_actY) ? opt_actY : dragobj.deltaY;
  this.dragger = dragobj;
  this.dragCanceled = !!opt_dragCanceled
};
goog.inherits(goog.fx.DragEvent, goog.events.Event);
goog.provide("vcfvis.brush");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.fx.Dragger");
goog.require("c2.svg");
goog.require("c2.scale");
goog.require("c2.dom");
vcfvis.brush.SVGDrag = function SVGDrag(el) {
  return goog.fx.Dragger.call(this, el)
};
goog.inherits(vcfvis.brush.SVGDrag, goog.fx.Dragger);
vcfvis.brush.SVGDrag.prototype.defaultAction = function(x, y) {
  return"Do nothing"
};
vcfvis.brush.mouse_point = function mouse_point($container, e) {
  var point__10836 = function() {
    var or__3824__auto____10835 = $container.ownerSVGElement;
    if(cljs.core.truth_(or__3824__auto____10835)) {
      return or__3824__auto____10835
    }else {
      return $container
    }
  }().createSVGPoint();
  point__10836.x = e.clientX;
  point__10836.y = e.clientY;
  var point__10837 = point__10836.matrixTransform($container.getScreenCTM().inverse());
  return cljs.core.PersistentVector.fromArray([point__10837.x, point__10837.y], true)
};
vcfvis.brush.resize_path_d = function resize_path_d(height, direction) {
  var vec__10845__10848 = function() {
    var G__10846__10847 = direction;
    if(cljs.core._EQ_.call(null, "\ufdd0'east", G__10846__10847)) {
      return cljs.core.PersistentVector.fromArray([1, 1], true)
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0'west", G__10846__10847)) {
        return cljs.core.PersistentVector.fromArray([-1, 0], true)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(direction)].join(""));
        }else {
          return null
        }
      }
    }
  }();
  var x__10849 = cljs.core.nth.call(null, vec__10845__10848, 0, null);
  var e__10850 = cljs.core.nth.call(null, vec__10845__10848, 1, null);
  return[cljs.core.str("M"), cljs.core.str(0.5 * x__10849), cljs.core.str(","), cljs.core.str(height), cljs.core.str("A6,6 0 0 "), cljs.core.str(e__10850), cljs.core.str(" "), cljs.core.str(6.5 * x__10849), cljs.core.str(","), cljs.core.str(height + 6), cljs.core.str("V"), cljs.core.str(2 * height - 6), cljs.core.str("A6,6 0 0 "), cljs.core.str(e__10850), cljs.core.str(" "), cljs.core.str(0.5 * x__10849), cljs.core.str(","), cljs.core.str(2 * height), cljs.core.str("Z"), cljs.core.str("M"), cljs.core.str(2.5 * 
  x__10849), cljs.core.str(","), cljs.core.str(height + 8), cljs.core.str("V"), cljs.core.str(2 * height - 8), cljs.core.str("M"), cljs.core.str(4.5 * x__10849), cljs.core.str(","), cljs.core.str(height + 8), cljs.core.str("V"), cljs.core.str(2 * height - 8)].join("")
};
vcfvis.brush.init_BANG_ = function init_BANG_(el, scale_x, scale_y) {
  var width__10929 = function() {
    var vec__10925__10926 = (new cljs.core.Keyword("\ufdd0'range")).call(null, scale_x);
    var xmin__10927 = cljs.core.nth.call(null, vec__10925__10926, 0, null);
    var xmax__10928 = cljs.core.nth.call(null, vec__10925__10926, 1, null);
    return xmax__10928 - xmin__10927
  }();
  var ix__10930 = c2.scale.invert.call(null, scale_x);
  var height__10935 = function() {
    var vec__10931__10932 = (new cljs.core.Keyword("\ufdd0'range")).call(null, scale_y);
    var ymin__10933 = cljs.core.nth.call(null, vec__10931__10932, 0, null);
    var ymax__10934 = cljs.core.nth.call(null, vec__10931__10932, 1, null);
    return ymax__10934 - ymin__10933
  }();
  var _BANG_extent__10936 = cljs.core.atom.call(null, cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([0, 0], true), cljs.core.PersistentVector.fromArray([0, 0], true)], true));
  var $brush__10937 = c2.dom.append_BANG_.call(null, el, cljs.core.PersistentVector.fromArray(["\ufdd0'g.brush"], true));
  var co__7961__auto____10949 = function() {
    var co__6213__auto____10948 = new reflex.core.ComputedObservable(null, true, function() {
      var vec__10938__10941 = cljs.core.deref.call(null, _BANG_extent__10936);
      var vec__10939__10942 = cljs.core.nth.call(null, vec__10938__10941, 0, null);
      var x1__10943 = cljs.core.nth.call(null, vec__10939__10942, 0, null);
      var x2__10944 = cljs.core.nth.call(null, vec__10939__10942, 1, null);
      var vec__10940__10945 = cljs.core.nth.call(null, vec__10938__10941, 1, null);
      var y1__10946 = cljs.core.nth.call(null, vec__10940__10945, 0, null);
      var y2__10947 = cljs.core.nth.call(null, vec__10940__10945, 1, null);
      return cljs.core.PersistentVector.fromArray(["\ufdd0'g.brush", cljs.core.ObjMap.fromObject(["\ufdd0'style"], {"\ufdd0'style":cljs.core.ObjMap.fromObject(["\ufdd0'visibility"], {"\ufdd0'visibility":x1__10943 - x2__10944 === 0 ? "hidden" : null})}), cljs.core.PersistentVector.fromArray(["\ufdd0'rect.background", cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":0, "\ufdd0'width":width__10929, "\ufdd0'height":height__10935})], true), cljs.core.PersistentVector.fromArray(["\ufdd0'rect.extent", 
      cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":scale_x.call(null, x1__10943), "\ufdd0'width":scale_x.call(null, x2__10944) - scale_x.call(null, x1__10943), "\ufdd0'height":height__10935})], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.resize.w", cljs.core.PersistentVector.fromArray(["\ufdd0'path", cljs.core.ObjMap.fromObject(["\ufdd0'transform", "\ufdd0'd"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([scale_x.call(null, 
      x1__10943), 0], true)), "\ufdd0'd":vcfvis.brush.resize_path_d.call(null, height__10935 / 3, "\ufdd0'west")})], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.resize.e", cljs.core.PersistentVector.fromArray(["\ufdd0'path", cljs.core.ObjMap.fromObject(["\ufdd0'transform", "\ufdd0'd"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([scale_x.call(null, x2__10944), 0], true)), "\ufdd0'd":vcfvis.brush.resize_path_d.call(null, height__10935 / 3, 
      "\ufdd0'east")})], true)], true)], true)
    }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
    cljs.core.deref.call(null, co__6213__auto____10948);
    return co__6213__auto____10948
  }();
  var $el__7962__auto____10950 = c2.dom.__GT_dom.call(null, $brush__10937);
  singult.core.merge_BANG_.call(null, $el__7962__auto____10950, cljs.core.deref.call(null, co__7961__auto____10949));
  cljs.core.add_watch.call(null, co__7961__auto____10949, "\ufdd0'update-dom", function() {
    return singult.core.merge_BANG_.call(null, $el__7962__auto____10950, cljs.core.deref.call(null, co__7961__auto____10949))
  });
  co__7961__auto____10949;
  var $background__10951 = c2.dom.select.call(null, ".background", $brush__10937);
  var _BANG_creating_QMARK___10952 = cljs.core.atom.call(null, false);
  goog.events.listen($background__10951, "mousedown", function(e) {
    cljs.core.reset_BANG_.call(null, _BANG_creating_QMARK___10952, true);
    var vec__10953__10954 = vcfvis.brush.mouse_point.call(null, $background__10951, e);
    var x__10955 = cljs.core.nth.call(null, vec__10953__10954, 0, null);
    var y__10956 = cljs.core.nth.call(null, vec__10953__10954, 1, null);
    var x__10957 = ix__10930.call(null, x__10955);
    return cljs.core.swap_BANG_.call(null, _BANG_extent__10936, function(p1__10838_SHARP_) {
      return cljs.core.assoc_in.call(null, p1__10838_SHARP_, cljs.core.PersistentVector.fromArray([0], true), cljs.core.PersistentVector.fromArray([x__10957, x__10957], true))
    })
  });
  goog.events.listen($brush__10937, "mouseup", function(_) {
    return cljs.core.reset_BANG_.call(null, _BANG_creating_QMARK___10952, false)
  });
  goog.events.listen($brush__10937, "mousemove", function(e) {
    if(cljs.core.truth_(cljs.core.deref.call(null, _BANG_creating_QMARK___10952))) {
      var vec__10958__10959 = vcfvis.brush.mouse_point.call(null, $background__10951, e);
      var x__10960 = cljs.core.nth.call(null, vec__10958__10959, 0, null);
      var y__10961 = cljs.core.nth.call(null, vec__10958__10959, 1, null);
      var x__10962 = ix__10930.call(null, x__10960);
      return cljs.core.swap_BANG_.call(null, _BANG_extent__10936, function(p__10963) {
        var vec__10964__10966 = p__10963;
        var vec__10965__10967 = cljs.core.nth.call(null, vec__10964__10966, 0, null);
        var x1__10968 = cljs.core.nth.call(null, vec__10965__10967, 0, null);
        var x2__10969 = cljs.core.nth.call(null, vec__10965__10967, 1, null);
        var ys__10970 = cljs.core.nth.call(null, vec__10964__10966, 1, null);
        return cljs.core.PersistentVector.fromArray([x__10962 > x1__10968 ? cljs.core.PersistentVector.fromArray([x1__10968, x__10962], true) : cljs.core.PersistentVector.fromArray([x__10962, x2__10969], true), ys__10970], true)
      })
    }else {
      return null
    }
  });
  goog.events.listen($brush__10937, "mouseout", function(e) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____10971 = e.relatedTarget;
      if(cljs.core.truth_(and__3822__auto____10971)) {
        return goog.dom.contains($brush__10937, e.relatedTarget)
      }else {
        return and__3822__auto____10971
      }
    }())) {
      return null
    }else {
      return cljs.core.reset_BANG_.call(null, _BANG_creating_QMARK___10952, false)
    }
  });
  var _BANG_extent_at_start__10973 = cljs.core.atom.call(null, null);
  var vec__10972__10974 = (new cljs.core.Keyword("\ufdd0'domain")).call(null, scale_x);
  var xmin__10975 = cljs.core.nth.call(null, vec__10972__10974, 0, null);
  var xmax__10976 = cljs.core.nth.call(null, vec__10972__10974, 1, null);
  var min_extent__10977 = ix__10930.call(null, 10);
  var start_drag_BANG___10978 = function() {
    return cljs.core.reset_BANG_.call(null, _BANG_extent_at_start__10973, cljs.core.deref.call(null, _BANG_extent__10936))
  };
  var drag_fn_BANG___10989 = function(dragger, transform_x) {
    return goog.events.listen(dragger, goog.fx.Dragger.EventType.DRAG, function(e) {
      var vec__10979__10981 = cljs.core.deref.call(null, _BANG_extent_at_start__10973);
      var vec__10980__10982 = cljs.core.nth.call(null, vec__10979__10981, 0, null);
      var x1__10983 = cljs.core.nth.call(null, vec__10980__10982, 0, null);
      var x2__10984 = cljs.core.nth.call(null, vec__10980__10982, 1, null);
      var ys__10985 = cljs.core.nth.call(null, vec__10979__10981, 1, null);
      var w__10986 = x2__10984 - x1__10983;
      var dx__10987 = ix__10930.call(null, e.left) - ix__10930.call(null, 0);
      var xs__10988 = transform_x.call(null, dx__10987, x1__10983, x2__10984, w__10986);
      return cljs.core.reset_BANG_.call(null, _BANG_extent__10936, cljs.core.PersistentVector.fromArray([xs__10988, ys__10985], true))
    })
  };
  var dragger__10990 = new vcfvis.brush.SVGDrag(c2.dom.select.call(null, ".extent", $brush__10937));
  var left__10991 = new vcfvis.brush.SVGDrag(c2.dom.select.call(null, ".resize.w", $brush__10937));
  var right__10992 = new vcfvis.brush.SVGDrag(c2.dom.select.call(null, ".resize.e", $brush__10937));
  var G__10993__10994 = cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([dragger__10990, left__10991, right__10992], true));
  if(G__10993__10994) {
    var d__10995 = cljs.core.first.call(null, G__10993__10994);
    var G__10993__10996 = G__10993__10994;
    while(true) {
      goog.events.listen(d__10995, goog.fx.Dragger.EventType.START, start_drag_BANG___10978);
      var temp__3974__auto____10997 = cljs.core.next.call(null, G__10993__10996);
      if(temp__3974__auto____10997) {
        var G__10993__10998 = temp__3974__auto____10997;
        var G__10999 = cljs.core.first.call(null, G__10993__10998);
        var G__11000 = G__10993__10998;
        d__10995 = G__10999;
        G__10993__10996 = G__11000;
        continue
      }else {
      }
      break
    }
  }else {
  }
  drag_fn_BANG___10989.call(null, dragger__10990, function(dx, x1, x2, w) {
    if(dx + x1 < xmin__10975) {
      return cljs.core.PersistentVector.fromArray([xmin__10975, xmin__10975 + w], true)
    }else {
      if(dx + x2 > xmax__10976) {
        return cljs.core.PersistentVector.fromArray([xmax__10976 - w, xmax__10976], true)
      }else {
        if("\ufdd0'else") {
          return cljs.core.PersistentVector.fromArray([dx + x1, dx + x2], true)
        }else {
          return null
        }
      }
    }
  });
  drag_fn_BANG___10989.call(null, left__10991, function(dx, x1, x2, w) {
    if(dx + x1 < xmin__10975) {
      return cljs.core.PersistentVector.fromArray([xmin__10975, x2], true)
    }else {
      if(dx + x1 > x2) {
        return cljs.core.PersistentVector.fromArray([x2 - min_extent__10977, x2], true)
      }else {
        if("\ufdd0'else") {
          return cljs.core.PersistentVector.fromArray([dx + x1, x2], true)
        }else {
          return null
        }
      }
    }
  });
  drag_fn_BANG___10989.call(null, right__10992, function(dx, x1, x2, w) {
    if(dx + x2 > xmax__10976) {
      return cljs.core.PersistentVector.fromArray([x1, xmax__10976], true)
    }else {
      if(dx + x2 < x1) {
        return cljs.core.PersistentVector.fromArray([x1, x1 + min_extent__10977], true)
      }else {
        if("\ufdd0'else") {
          return cljs.core.PersistentVector.fromArray([x1, dx + x2], true)
        }else {
          return null
        }
      }
    }
  });
  return _BANG_extent__10936
};
goog.provide("vcfvis.histogram");
goog.require("cljs.core");
goog.require("c2.core");
goog.require("c2.maths");
goog.require("c2.scale");
goog.require("singult.core");
goog.require("c2.event");
goog.require("c2.core");
goog.require("vcfvis.data");
goog.require("vcfvis.ui");
goog.require("c2.dom");
goog.require("c2.svg");
goog.require("c2.maths");
goog.require("goog.string");
goog.require("vcfvis.brush");
goog.require("vcfvis.core");
vcfvis.histogram.height = vcfvis.ui.hist_height;
vcfvis.histogram.width = vcfvis.ui.hist_width;
vcfvis.histogram.margin = vcfvis.ui.hist_margin;
vcfvis.histogram.inter_hist_margin = vcfvis.ui.inter_hist_margin;
vcfvis.histogram.axis_height = vcfvis.ui.axis_height;
vcfvis.histogram.hist_g_STAR_ = function() {
  var hist_g_STAR___delegate = function(vcf, metric, p__10360) {
    var map__10399__10400 = p__10360;
    var map__10399__10401 = cljs.core.seq_QMARK_.call(null, map__10399__10400) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10399__10400) : map__10399__10400;
    var bars_QMARK___10402 = cljs.core._lookup.call(null, map__10399__10401, "\ufdd0'bars?", true);
    var width__10403 = cljs.core._lookup.call(null, map__10399__10401, "\ufdd0'width", null);
    var height__10404 = cljs.core._lookup.call(null, map__10399__10401, "\ufdd0'height", null);
    var map__10405__10407 = metric;
    var map__10405__10408 = cljs.core.seq_QMARK_.call(null, map__10405__10407) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10405__10407) : map__10405__10407;
    var metric_id__10409 = cljs.core._lookup.call(null, map__10405__10408, "\ufdd0'id", null);
    var scale_x__10410 = cljs.core._lookup.call(null, map__10405__10408, "\ufdd0'scale-x", null);
    var map__10406__10411 = cljs.core.get_in.call(null, vcf, cljs.core.PersistentVector.fromArray(["\ufdd0'cf", metric_id__10409], true));
    var map__10406__10412 = cljs.core.seq_QMARK_.call(null, map__10406__10411) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10406__10411) : map__10406__10411;
    var bin_width__10413 = cljs.core._lookup.call(null, map__10406__10412, "\ufdd0'bin-width", null);
    var binned__10414 = cljs.core._lookup.call(null, map__10406__10412, "\ufdd0'binned", null);
    var dimension__10415 = cljs.core._lookup.call(null, map__10406__10412, "\ufdd0'dimension", null);
    var max_val__10416 = cljs.core.first.call(null, binned__10414.top(1))["value"];
    var no_data_QMARK___10417 = max_val__10416 === 0;
    var scale_y__10420 = function() {
      var G__10418__10419 = cljs.core.get_in.call(null, metric, cljs.core.PersistentVector.fromArray(["\ufdd0'y-scale", "\ufdd0'type"], true), "\ufdd0'linear");
      if(cljs.core._EQ_.call(null, "\ufdd0'log", G__10418__10419)) {
        return c2.scale.log.call(null, "\ufdd0'domain", cljs.core.PersistentVector.fromArray([1, max_val__10416], true), "\ufdd0'range", cljs.core.PersistentVector.fromArray([0, height__10404], true))
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'linear", G__10418__10419)) {
          return c2.scale.linear.call(null, "\ufdd0'domain", cljs.core.PersistentVector.fromArray([0, max_val__10416], true), "\ufdd0'range", cljs.core.PersistentVector.fromArray([0, height__10404], true))
        }else {
          if("\ufdd0'else") {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.core.get_in.call(null, metric, cljs.core.PersistentVector.fromArray(["\ufdd0'y-scale", "\ufdd0'type"], true), "\ufdd0'linear"))].join(""));
          }else {
            return null
          }
        }
      }
    }();
    var scale_x__10421 = cljs.core.assoc_in.call(null, scale_x__10410, cljs.core.PersistentVector.fromArray(["\ufdd0'range", 1], true), width__10403);
    var dx__10422 = scale_x__10421.call(null, bin_width__10413) - scale_x__10421.call(null, 0);
    return cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.PersistentVector.fromArray(["\ufdd0'text.message", cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'y"], {"\ufdd0'x":width__10403 / 2, "\ufdd0'y":height__10404 / 2}), no_data_QMARK___10417 ? "No available data; try clearing filters on other dimensions." : null], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.data-frame", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":[cljs.core.str(c2.svg.translate.call(null, 
    cljs.core.PersistentVector.fromArray([0, height__10404], true))), cljs.core.str(c2.svg.scale.call(null, cljs.core.PersistentVector.fromArray([1, -1], true)))].join("")}), cljs.core.PersistentVector.fromArray(["\ufdd0'g.distribution", no_data_QMARK___10417 ? null : cljs.core.truth_(bars_QMARK___10402) ? function() {
      var iter__2355__auto____10433 = function iter__10423(s__10424) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__10424__10429 = s__10424;
          while(true) {
            if(cljs.core.seq.call(null, s__10424__10429)) {
              var d__10430 = cljs.core.first.call(null, s__10424__10429);
              return cljs.core.cons.call(null, function() {
                var x__10431 = d__10430["key"];
                var count__10432 = d__10430["value"];
                return cljs.core.PersistentVector.fromArray(["\ufdd0'rect.bar", cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":scale_x__10421.call(null, x__10431), "\ufdd0'width":dx__10422, "\ufdd0'height":scale_y__10420.call(null, count__10432)})], true)
              }(), iter__10423.call(null, cljs.core.rest.call(null, s__10424__10429)))
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__2355__auto____10433.call(null, binned__10414.all())
    }() : cljs.core.PersistentVector.fromArray(["\ufdd0'path", cljs.core.ObjMap.fromObject(["\ufdd0'd"], {"\ufdd0'd":[cljs.core.str("M"), cljs.core.str(binned__10414.all().map(function(d) {
      var x__10434 = d["key"];
      var count__10435 = d["value"];
      var h__10436 = scale_y__10420.call(null, count__10435);
      return[cljs.core.str(scale_x__10421.call(null, x__10434)), cljs.core.str(","), cljs.core.str(h__10436)].join("")
    }).join("L"))].join("")})], true)], true)], true)], true)
  };
  var hist_g_STAR_ = function(vcf, metric, var_args) {
    var p__10360 = null;
    if(goog.isDef(var_args)) {
      p__10360 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return hist_g_STAR___delegate.call(this, vcf, metric, p__10360)
  };
  hist_g_STAR_.cljs$lang$maxFixedArity = 2;
  hist_g_STAR_.cljs$lang$applyTo = function(arglist__10437) {
    var vcf = cljs.core.first(arglist__10437);
    var metric = cljs.core.first(cljs.core.next(arglist__10437));
    var p__10360 = cljs.core.rest(cljs.core.next(arglist__10437));
    return hist_g_STAR___delegate(vcf, metric, p__10360)
  };
  hist_g_STAR_.cljs$lang$arity$variadic = hist_g_STAR___delegate;
  return hist_g_STAR_
}();
vcfvis.histogram.draw_mini_hist_for_metric_BANG_ = function draw_mini_hist_for_metric_BANG_(m) {
  var vcfs__10455 = cljs.core.deref.call(null, vcfvis.core._BANG_vcfs);
  var n__10456 = cljs.core.count.call(null, vcfs__10455);
  var mini_width__10457 = parseFloat(c2.dom.style.call(null, "#metrics-content", "\ufdd0'width"));
  var mini_height__10458 = 100;
  return singult.core.merge_BANG_.call(null, c2.dom.select.call(null, [cljs.core.str("#metric-"), cljs.core.str((new cljs.core.Keyword("\ufdd0'id")).call(null, m)), cljs.core.str(" .mini-hist")].join("")), cljs.core.PersistentVector.fromArray(["\ufdd0'div.mini-hist", cljs.core.PersistentVector.fromArray(["\ufdd0'svg", cljs.core.ObjMap.fromObject(["\ufdd0'width", "\ufdd0'height"], {"\ufdd0'width":vcfvis.histogram.width, "\ufdd0'height":n__10456 * mini_height__10458 + (n__10456 - 1) * vcfvis.histogram.inter_hist_margin}), 
  function() {
    var iter__2355__auto____10471 = function iter__10459(s__10460) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__10460__10466 = s__10460;
        while(true) {
          if(cljs.core.seq.call(null, s__10460__10466)) {
            var vec__10467__10468 = cljs.core.first.call(null, s__10460__10466);
            var vcf__10469 = cljs.core.nth.call(null, vec__10467__10468, 0, null);
            var idx__10470 = cljs.core.nth.call(null, vec__10467__10468, 1, null);
            return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([0, idx__10470 * (mini_height__10458 + vcfvis.histogram.inter_hist_margin)], true))}), vcfvis.histogram.hist_g_STAR_.call(null, vcf__10469, m, "\ufdd0'height", mini_height__10458, "\ufdd0'width", mini_width__10457, "\ufdd0'bars?", true)], true), iter__10459.call(null, cljs.core.rest.call(null, 
            s__10460__10466)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2355__auto____10471.call(null, cljs.core.map.call(null, cljs.core.vector, vcfs__10455, cljs.core.range.call(null)))
  }()], true)], true))
};
vcfvis.histogram.draw_histogram_BANG_ = function draw_histogram_BANG_(vcfs, metric) {
  var map__10529__10530 = metric;
  var map__10529__10531 = cljs.core.seq_QMARK_.call(null, map__10529__10530) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10529__10530) : map__10529__10530;
  var x__10532 = cljs.core._lookup.call(null, map__10529__10531, "\ufdd0'scale-x", null);
  var tick_range__10533 = -cljs.core.apply.call(null, cljs.core._, (new cljs.core.Keyword("\ufdd0'domain")).call(null, x__10532)) / cljs.core.count.call(null, (new cljs.core.Keyword("\ufdd0'ticks")).call(null, x__10532));
  var n__10534 = cljs.core.count.call(null, vcfs);
  var hist_height__10535 = (vcfvis.histogram.height - n__10534 * (vcfvis.histogram.inter_hist_margin - 1)) / n__10534;
  singult.core.merge_BANG_.call(null, c2.dom.select.call(null, "#main-hist"), cljs.core.PersistentVector.fromArray(["\ufdd0'div#main-hist", cljs.core.PersistentVector.fromArray(["\ufdd0'div#histograms", cljs.core.PersistentVector.fromArray(["\ufdd0'div.labels", function() {
    var iter__2355__auto____10548 = function iter__10536(s__10537) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__10537__10543 = s__10537;
        while(true) {
          if(cljs.core.seq.call(null, s__10537__10543)) {
            var vec__10544__10545 = cljs.core.first.call(null, s__10537__10543);
            var vcf__10546 = cljs.core.nth.call(null, vec__10544__10545, 0, null);
            var idx__10547 = cljs.core.nth.call(null, vec__10544__10545, 1, null);
            return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'span.label", cljs.core.ObjMap.fromObject(["\ufdd0'style"], {"\ufdd0'style":cljs.core.ObjMap.fromObject(["\ufdd0'top"], {"\ufdd0'top":[cljs.core.str(idx__10547 * (hist_height__10535 + vcfvis.histogram.inter_hist_margin)), cljs.core.str("px")].join("")})}), vcf__10546.call(null, "\ufdd0'file-url")], true), iter__10536.call(null, cljs.core.rest.call(null, s__10537__10543)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2355__auto____10548.call(null, cljs.core.map.call(null, cljs.core.vector, vcfs, cljs.core.range.call(null)))
  }()], true), cljs.core.PersistentVector.fromArray(["\ufdd0'svg.histogram", cljs.core.ObjMap.fromObject(["\ufdd0'width", "\ufdd0'height"], {"\ufdd0'width":vcfvis.histogram.width + 2 * vcfvis.histogram.margin, "\ufdd0'height":vcfvis.histogram.height + (n__10534 - 1) * vcfvis.histogram.inter_hist_margin}), cljs.core.PersistentVector.fromArray(["\ufdd0'g.hist-container", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([vcfvis.histogram.margin, 
  0], true))}), function() {
    var iter__2355__auto____10561 = function iter__10549(s__10550) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__10550__10556 = s__10550;
        while(true) {
          if(cljs.core.seq.call(null, s__10550__10556)) {
            var vec__10557__10558 = cljs.core.first.call(null, s__10550__10556);
            var vcf__10559 = cljs.core.nth.call(null, vec__10557__10558, 0, null);
            var idx__10560 = cljs.core.nth.call(null, vec__10557__10558, 1, null);
            return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([0, idx__10560 * (hist_height__10535 + vcfvis.histogram.inter_hist_margin)], true))}), vcfvis.histogram.hist_g_STAR_.call(null, vcf__10559, metric, "\ufdd0'height", hist_height__10535, "\ufdd0'width", vcfvis.histogram.width)], true), iter__10549.call(null, cljs.core.rest.call(null, 
            s__10550__10556)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2355__auto____10561.call(null, cljs.core.map.call(null, cljs.core.vector, vcfs, cljs.core.range.call(null)))
  }()], true)], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'div#hist-axis", cljs.core.PersistentVector.fromArray(["\ufdd0'div.axis.abscissa", cljs.core.PersistentVector.fromArray(["\ufdd0'svg", cljs.core.ObjMap.fromObject(["\ufdd0'width", "\ufdd0'height"], {"\ufdd0'width":vcfvis.histogram.width + 2 * vcfvis.histogram.margin, "\ufdd0'height":vcfvis.histogram.axis_height}), cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, 
  cljs.core.PersistentVector.fromArray([vcfvis.histogram.margin, 2], true))}), c2.svg.axis.call(null, x__10532, (new cljs.core.Keyword("\ufdd0'ticks")).call(null, x__10532), "\ufdd0'orientation", "\ufdd0'bottom", "\ufdd0'formatter", cljs.core.partial.call(null, goog.string.format, tick_range__10533 < 0.075 ? "%.2f" : "%.1f"))], true)], true)], true)], true)], true));
  var _BANG_b__10562 = vcfvis.brush.init_BANG_.call(null, "#histograms svg .hist-container", x__10532, c2.scale.linear.call(null, "\ufdd0'range", cljs.core.PersistentVector.fromArray([0, vcfvis.histogram.height], true)));
  var temp__3974__auto____10563 = cljs.core.deref.call(null, metric.call(null, "\ufdd0'!filter-extent"));
  if(cljs.core.truth_(temp__3974__auto____10563)) {
    var initial_extent__10564 = temp__3974__auto____10563;
    var vec__10565__10567 = metric.call(null, "\ufdd0'range");
    var r_min__10568 = cljs.core.nth.call(null, vec__10565__10567, 0, null);
    var r_max__10569 = cljs.core.nth.call(null, vec__10565__10567, 1, null);
    var vec__10566__10570 = initial_extent__10564;
    var start__10571 = cljs.core.nth.call(null, vec__10566__10570, 0, null);
    var end__10572 = cljs.core.nth.call(null, vec__10566__10570, 1, null);
    cljs.core.reset_BANG_.call(null, _BANG_b__10562, cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([start__10571 > r_min__10568 ? start__10571 : r_min__10568, end__10572 < r_max__10569 ? end__10572 : r_max__10569], true), cljs.core.PersistentVector.fromArray([0, 0], true)], true))
  }else {
  }
  return cljs.core.add_watch.call(null, _BANG_b__10562, "\ufdd0'onbrush", function(_10574, _10575, _, p__10573) {
    var vec__10576__10577 = p__10573;
    var xs__10578 = cljs.core.nth.call(null, vec__10576__10577, 0, null);
    var ___10579 = cljs.core.nth.call(null, vec__10576__10577, 1, null);
    var G__10580__10581 = cljs.core.seq.call(null, cljs.core.deref.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_));
    if(G__10580__10581) {
      var s__8951__auto____10582 = cljs.core.first.call(null, G__10580__10581);
      var G__10580__10583 = G__10580__10581;
      while(true) {
        s__8951__auto____10582.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'metric-brushed", "\ufdd0'extent"], {"\ufdd0'metric-brushed":metric, "\ufdd0'extent":xs__10578}));
        var temp__3974__auto____10584 = cljs.core.next.call(null, G__10580__10583);
        if(temp__3974__auto____10584) {
          var G__10580__10585 = temp__3974__auto____10584;
          var G__10586 = cljs.core.first.call(null, G__10580__10585);
          var G__10587 = G__10580__10585;
          s__8951__auto____10582 = G__10586;
          G__10580__10583 = G__10587;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  })
};
vcfvis.histogram.clear_histogram_BANG_ = function clear_histogram_BANG_() {
  singult.core.merge_BANG_.call(null, c2.dom.select.call(null, "#main-hist"), cljs.core.PersistentVector.fromArray(["\ufdd0'div#main-hist", cljs.core.PersistentVector.fromArray(["\ufdd0'div#histograms"], true), cljs.core.PersistentVector.fromArray(["\ufdd0'div#hist-axis"], true)], true));
  var G__10594__10595 = cljs.core.seq.call(null, cljs.core.deref.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_));
  if(G__10594__10595) {
    var s__8951__auto____10596 = cljs.core.first.call(null, G__10594__10595);
    var G__10594__10597 = G__10594__10595;
    while(true) {
      s__8951__auto____10596.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'count-updated"], {"\ufdd0'count-updated":null}));
      var temp__3974__auto____10598 = cljs.core.next.call(null, G__10594__10597);
      if(temp__3974__auto____10598) {
        var G__10594__10599 = temp__3974__auto____10598;
        var G__10600 = cljs.core.first.call(null, G__10594__10599);
        var G__10601 = G__10594__10599;
        s__8951__auto____10596 = G__10600;
        G__10594__10597 = G__10601;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
vcfvis.histogram.draw_mini_hists_BANG_ = function draw_mini_hists_BANG_() {
  var G__10608__10609 = cljs.core.seq.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_visible_metrics));
  if(G__10608__10609) {
    var m__10610 = cljs.core.first.call(null, G__10608__10609);
    var G__10608__10611 = G__10608__10609;
    while(true) {
      vcfvis.histogram.draw_mini_hist_for_metric_BANG_.call(null, m__10610);
      var temp__3974__auto____10612 = cljs.core.next.call(null, G__10608__10611);
      if(temp__3974__auto____10612) {
        var G__10608__10613 = temp__3974__auto____10612;
        var G__10614 = cljs.core.first.call(null, G__10608__10613);
        var G__10615 = G__10608__10613;
        m__10610 = G__10614;
        G__10608__10611 = G__10615;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
var co__6211__auto____10619 = function() {
  var co__6205__auto____10618 = new reflex.core.ComputedObservable(null, true, function() {
    var vcfs__10616 = cljs.core.deref.call(null, vcfvis.core._BANG_vcfs);
    var metric__10617 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
    vcfvis.histogram.clear_histogram_BANG_.call(null);
    if(cljs.core.seq.call(null, vcfs__10616)) {
      vcfvis.histogram.draw_histogram_BANG_.call(null, vcfs__10616, metric__10617);
      return vcfvis.histogram.draw_mini_hists_BANG_.call(null)
    }else {
      return null
    }
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6205__auto____10618);
  return co__6205__auto____10618
}();
cljs.core.add_watch.call(null, co__6211__auto____10619, "\ufdd0'reflex-constraint", function() {
  var vcfs__10620 = cljs.core.deref.call(null, vcfvis.core._BANG_vcfs);
  var metric__10621 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
  vcfvis.histogram.clear_histogram_BANG_.call(null);
  if(cljs.core.seq.call(null, vcfs__10620)) {
    vcfvis.histogram.draw_histogram_BANG_.call(null, vcfs__10620, metric__10621);
    return vcfvis.histogram.draw_mini_hists_BANG_.call(null)
  }else {
    return null
  }
});
co__6211__auto____10619;
goog.provide("vcfvis.controls");
goog.require("cljs.core");
goog.require("singult.core");
goog.require("c2.util");
goog.require("chosen.core");
goog.require("c2.core");
goog.require("chosen.core");
goog.require("c2.event");
goog.require("c2.core");
goog.require("vcfvis.data");
goog.require("c2.dom");
goog.require("c2.util");
goog.require("vcfvis.histogram");
goog.require("singult.core");
goog.require("goog.string");
goog.require("vcfvis.core");
vcfvis.controls.file_selector = function() {
  var $selector__83305 = c2.dom.append_BANG_.call(null, "#file-selector", cljs.core.PersistentVector.fromArray(["\ufdd0'select", cljs.core.ObjMap.fromObject(["\ufdd0'multiple", "\ufdd0'data-placeholder"], {"\ufdd0'multiple":"multiple", "\ufdd0'data-placeholder":"Select VCF files"})], true));
  var _BANG_c__83306 = chosen.core.ichooseu_BANG_.call(null, $selector__83305, "\ufdd0'search-contains", true);
  var co__6211__auto____83315 = function() {
    var co__6205__auto____83314 = new reflex.core.ComputedObservable(null, true, function() {
      return chosen.core.options.call(null, _BANG_c__83306, cljs.core.map.call(null, function(p__83307) {
        var map__83308__83309 = p__83307;
        var map__83308__83310 = cljs.core.seq_QMARK_.call(null, map__83308__83309) ? cljs.core.apply.call(null, cljs.core.hash_map, map__83308__83309) : map__83308__83309;
        var id__83311 = cljs.core._lookup.call(null, map__83308__83310, "\ufdd0'id", null);
        var folder__83312 = cljs.core._lookup.call(null, map__83308__83310, "\ufdd0'folder", null);
        var filename__83313 = cljs.core._lookup.call(null, map__83308__83310, "\ufdd0'filename", null);
        return cljs.core.ObjMap.fromObject(["\ufdd0'text", "\ufdd0'value", "\ufdd0'group"], {"\ufdd0'text":filename__83313, "\ufdd0'value":id__83311, "\ufdd0'group":folder__83312})
      }, cljs.core.deref.call(null, vcfvis.core._BANG_available_files)))
    }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
    cljs.core.deref.call(null, co__6205__auto____83314);
    return co__6205__auto____83314
  }();
  cljs.core.add_watch.call(null, co__6211__auto____83315, "\ufdd0'reflex-constraint", function() {
    return chosen.core.options.call(null, _BANG_c__83306, cljs.core.map.call(null, function(p__83316) {
      var map__83317__83318 = p__83316;
      var map__83317__83319 = cljs.core.seq_QMARK_.call(null, map__83317__83318) ? cljs.core.apply.call(null, cljs.core.hash_map, map__83317__83318) : map__83317__83318;
      var id__83320 = cljs.core._lookup.call(null, map__83317__83319, "\ufdd0'id", null);
      var folder__83321 = cljs.core._lookup.call(null, map__83317__83319, "\ufdd0'folder", null);
      var filename__83322 = cljs.core._lookup.call(null, map__83317__83319, "\ufdd0'filename", null);
      return cljs.core.ObjMap.fromObject(["\ufdd0'text", "\ufdd0'value", "\ufdd0'group"], {"\ufdd0'text":filename__83322, "\ufdd0'value":id__83320, "\ufdd0'group":folder__83321})
    }, cljs.core.deref.call(null, vcfvis.core._BANG_available_files)))
  });
  co__6211__auto____83315;
  return _BANG_c__83306
}();
var co__7953__auto____83343 = function() {
  var co__6205__auto____83342 = new reflex.core.ComputedObservable(null, true, function() {
    var shared__83323 = cljs.core.set.call(null, cljs.core.map.call(null, "\ufdd0'id", cljs.core.deref.call(null, vcfvis.core._BANG_shared_metrics)));
    var selected_metric__83324 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
    var metrics__83332 = function() {
      var iter__2355__auto____83331 = function iter__83325(s__83326) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__83326__83329 = s__83326;
          while(true) {
            if(cljs.core.seq.call(null, s__83326__83329)) {
              var m__83330 = cljs.core.first.call(null, s__83326__83329);
              return cljs.core.cons.call(null, cljs.core.assoc.call(null, m__83330, "\ufdd0'selected?", cljs.core._EQ_.call(null, m__83330, selected_metric__83324), "\ufdd0'visible?", vcfvis.core.visible_metric_QMARK_.call(null, m__83330), "\ufdd0'shared?", cljs.core.contains_QMARK_.call(null, shared__83323, m__83330.call(null, "\ufdd0'id"))), iter__83325.call(null, cljs.core.rest.call(null, s__83326__83329)))
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__2355__auto____83331.call(null, cljs.core.vals.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_context).call(null, "\ufdd0'metrics")))
    }();
    return cljs.core.PersistentVector.fromArray(["\ufdd0'div#metrics", c2.core.unify.call(null, metrics__83332, function(p__83333) {
      var map__83334__83335 = p__83333;
      var map__83334__83336 = cljs.core.seq_QMARK_.call(null, map__83334__83335) ? cljs.core.apply.call(null, cljs.core.hash_map, map__83334__83335) : map__83334__83335;
      var shared_QMARK___83337 = cljs.core._lookup.call(null, map__83334__83336, "\ufdd0'shared?", null);
      var visible_QMARK___83338 = cljs.core._lookup.call(null, map__83334__83336, "\ufdd0'visible?", null);
      var selected_QMARK___83339 = cljs.core._lookup.call(null, map__83334__83336, "\ufdd0'selected?", null);
      var desc__83340 = cljs.core._lookup.call(null, map__83334__83336, "\ufdd0'desc", null);
      var id__83341 = cljs.core._lookup.call(null, map__83334__83336, "\ufdd0'id", null);
      return cljs.core.PersistentVector.fromArray(["\ufdd0'div.metric", cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":[cljs.core.str("metric-"), cljs.core.str(id__83341)].join(""), "\ufdd0'class":[cljs.core.str(cljs.core.truth_(selected_QMARK___83339) ? "selected" : null), cljs.core.str(" "), cljs.core.str(cljs.core.truth_(visible_QMARK___83338) ? "expanded" : null), cljs.core.str(" "), cljs.core.str(cljs.core.truth_(shared_QMARK___83337) ? null : "disabled")].join("")}), 
      cljs.core.PersistentVector.fromArray(["\ufdd0'h2", id__83341], true), cljs.core.PersistentVector.fromArray(["\ufdd0'button.expand-btn", "V"], true), cljs.core.PersistentVector.fromArray(["\ufdd0'span.desc", desc__83340], true), cljs.core.PersistentVector.fromArray(["\ufdd0'div.mini-hist", singult.core.ignore.call(null)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'div.sort-handle"], true)], true)
    }, "\ufdd0'key-fn", function(p1__83304_SHARP_) {
      return(new cljs.core.Keyword("\ufdd0'id")).call(null, p1__83304_SHARP_)
    })], true)
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6205__auto____83342);
  return co__6205__auto____83342
}();
var $el__7954__auto____83344 = c2.dom.__GT_dom.call(null, "#metrics");
singult.core.merge_BANG_.call(null, $el__7954__auto____83344, cljs.core.deref.call(null, co__7953__auto____83343));
cljs.core.add_watch.call(null, co__7953__auto____83343, "\ufdd0'update-dom", function() {
  return singult.core.merge_BANG_.call(null, $el__7954__auto____83344, cljs.core.deref.call(null, co__7953__auto____83343))
});
co__7953__auto____83343;
jQuery("#metrics").sortable({"handle":".sort-handle"});
c2.event.on.call(null, "#metrics", "\ufdd0'click", function(d, _, e) {
  if(cljs.core.truth_(c2.dom.matches_selector_QMARK_.call(null, e.target, ".expand-btn"))) {
    return null
  }else {
    return vcfvis.core.select_metric_BANG_.call(null, cljs.core.dissoc.call(null, d, "\ufdd0'selected?", "\ufdd0'shared?", "\ufdd0'visible?"))
  }
});
c2.event.on.call(null, "#metrics", ".expand-btn", "\ufdd0'click", function(d) {
  var m__83345 = cljs.core.dissoc.call(null, d, "\ufdd0'selected?", "\ufdd0'shared?", "\ufdd0'visible?");
  if(cljs.core.truth_(vcfvis.core.visible_metric_QMARK_.call(null, m__83345))) {
  }else {
    vcfvis.histogram.draw_mini_hist_for_metric_BANG_.call(null, m__83345)
  }
  return vcfvis.core.toggle_visible_metric_BANG_.call(null, m__83345)
});
cljs.core.swap_BANG_.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_, cljs.core.conj, function(m__8957__auto__) {
  try {
    if(function() {
      var G__83350__83351 = m__8957__auto__;
      if(G__83350__83351) {
        if(function() {
          var or__3824__auto____83352 = G__83350__83351.cljs$lang$protocol_mask$partition0$ & 256;
          if(or__3824__auto____83352) {
            return or__3824__auto____83352
          }else {
            return G__83350__83351.cljs$core$ILookup$
          }
        }()) {
          return true
        }else {
          if(!G__83350__83351.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__83350__83351)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__83350__83351)
      }
    }()) {
      var m__83354 = function() {
        var val__6595__auto____83353 = cljs.core._lookup.call(null, m__8957__auto__, "\ufdd0'filter-updated", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6595__auto____83353, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6595__auto____83353
        }
      }();
      if(cljs.core._EQ_.call(null, "\ufdd0'category", cljs.core.get_in.call(null, m__83354, cljs.core.PersistentVector.fromArray(["\ufdd0'x-scale", "\ufdd0'type"], true)))) {
        vcfvis.histogram.draw_histogram_BANG_.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs), cljs.core.deref.call(null, vcfvis.core._BANG_metric))
      }else {
      }
      vcfvis.histogram.draw_mini_hists_BANG_.call(null);
      var G__83355__83356 = cljs.core.seq.call(null, cljs.core.deref.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_));
      if(G__83355__83356) {
        var s__8951__auto____83357 = cljs.core.first.call(null, G__83355__83356);
        var G__83355__83358 = G__83355__83356;
        while(true) {
          s__8951__auto____83357.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'count-updated"], {"\ufdd0'count-updated":cljs.core.get_in.call(null, cljs.core.first.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)), cljs.core.PersistentVector.fromArray(["\ufdd0'cf", "\ufdd0'all"], true)).value()}));
          var temp__3974__auto____83359 = cljs.core.next.call(null, G__83355__83358);
          if(temp__3974__auto____83359) {
            var G__83355__83360 = temp__3974__auto____83359;
            var G__83361 = cljs.core.first.call(null, G__83355__83360);
            var G__83362 = G__83355__83360;
            s__8951__auto____83357 = G__83361;
            G__83355__83358 = G__83362;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    }else {
      if("\ufdd0'else") {
        throw 0;
      }else {
        return null
      }
    }
  }catch(e__7028__auto__) {
    if(e__7028__auto__ === 0) {
      var G__83346__83349 = m__8957__auto__;
      return null
    }else {
      throw e__7028__auto__;
    }
  }
});
cljs.core.swap_BANG_.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_, cljs.core.conj, function(m__8957__auto__) {
  try {
    if(function() {
      var G__83367__83368 = m__8957__auto__;
      if(G__83367__83368) {
        if(function() {
          var or__3824__auto____83369 = G__83367__83368.cljs$lang$protocol_mask$partition0$ & 256;
          if(or__3824__auto____83369) {
            return or__3824__auto____83369
          }else {
            return G__83367__83368.cljs$core$ILookup$
          }
        }()) {
          return true
        }else {
          if(!G__83367__83368.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__83367__83368)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__83367__83368)
      }
    }()) {
      var x__83371 = function() {
        var val__6595__auto____83370 = cljs.core._lookup.call(null, m__8957__auto__, "\ufdd0'count-updated", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6595__auto____83370, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6595__auto____83370
        }
      }();
      c2.dom.text.call(null, "#count", x__83371);
      return c2.dom.style.call(null, "#count", "\ufdd0'visibility", x__83371 == null ? "hidden" : "visible")
    }else {
      if("\ufdd0'else") {
        throw 0;
      }else {
        return null
      }
    }
  }catch(e__7028__auto__) {
    if(e__7028__auto__ === 0) {
      var G__83363__83366 = m__8957__auto__;
      return null
    }else {
      throw e__7028__auto__;
    }
  }
});
var co__7953__auto____83402 = function() {
  var co__6205__auto____83401 = new reflex.core.ComputedObservable(null, true, function() {
    var cs__83372 = cljs.core.reduce.call(null, vcfvis.core.intersection, cljs.core.map.call(null, "\ufdd0'available-categories", cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)));
    return cljs.core.PersistentVector.fromArray(["\ufdd0'div#cat-filters", c2.core.unify.call(null, cs__83372, function(p__83373) {
      var map__83374__83375 = p__83373;
      var map__83374__83376 = cljs.core.seq_QMARK_.call(null, map__83374__83375) ? cljs.core.apply.call(null, cljs.core.hash_map, map__83374__83375) : map__83374__83375;
      var choices__83377 = cljs.core._lookup.call(null, map__83374__83376, "\ufdd0'choices", null);
      var desc__83378 = cljs.core._lookup.call(null, map__83374__83376, "\ufdd0'desc", null);
      var id__83379 = cljs.core._lookup.call(null, map__83374__83376, "\ufdd0'id", null);
      return cljs.core.PersistentVector.fromArray(["\ufdd0'div.filter.metric", cljs.core.ObjMap.fromObject(["\ufdd0'id"], {"\ufdd0'id":[cljs.core.str("filter-"), cljs.core.str(id__83379)].join("")}), cljs.core.PersistentVector.fromArray(["\ufdd0'span.desc", desc__83378], true), function() {
        var iter__2355__auto____83400 = function iter__83380(s__83381) {
          return new cljs.core.LazySeq(null, false, function() {
            var s__83381__83391 = s__83381;
            while(true) {
              if(cljs.core.seq.call(null, s__83381__83391)) {
                var group_choices__83392 = cljs.core.first.call(null, s__83381__83391);
                return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'div.btn-group", cljs.core.ObjMap.fromObject(["\ufdd0'data-toggle"], {"\ufdd0'data-toggle":"buttons-checkbox"}), function() {
                  var iter__2355__auto____83399 = function(group_choices__83392) {
                    return function iter__83393(s__83394) {
                      return new cljs.core.LazySeq(null, false, function(group_choices__83392) {
                        return function() {
                          var s__83394__83397 = s__83394;
                          while(true) {
                            if(cljs.core.seq.call(null, s__83394__83397)) {
                              var x__83398 = cljs.core.first.call(null, s__83394__83397);
                              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'btn.btn.filter-btn", x__83398], true), iter__83393.call(null, cljs.core.rest.call(null, s__83394__83397)))
                            }else {
                              return null
                            }
                            break
                          }
                        }
                      }(group_choices__83392), null)
                    }
                  }(group_choices__83392);
                  return iter__2355__auto____83399.call(null, group_choices__83392)
                }()], true), iter__83380.call(null, cljs.core.rest.call(null, s__83381__83391)))
              }else {
                return null
              }
              break
            }
          }, null)
        };
        return iter__2355__auto____83400.call(null, cljs.core.partition_all.call(null, 3, cljs.core.sort.call(null, choices__83377)))
      }()], true)
    })], true)
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6205__auto____83401);
  return co__6205__auto____83401
}();
var $el__7954__auto____83403 = c2.dom.__GT_dom.call(null, "#cat-filters");
singult.core.merge_BANG_.call(null, $el__7954__auto____83403, cljs.core.deref.call(null, co__7953__auto____83402));
cljs.core.add_watch.call(null, co__7953__auto____83402, "\ufdd0'update-dom", function() {
  return singult.core.merge_BANG_.call(null, $el__7954__auto____83403, cljs.core.deref.call(null, co__7953__auto____83402))
});
co__7953__auto____83402;
vcfvis.controls.update_category_filter_BANG_ = function update_category_filter_BANG_(cat, val, off_QMARK_) {
  var orig__83419 = cljs.core._lookup.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_cat_filters), (new cljs.core.Keyword("\ufdd0'id")).call(null, cat), cljs.core.PersistentHashSet.EMPTY);
  var new__83420 = cljs.core.truth_(off_QMARK_) ? cljs.core.disj.call(null, orig__83419, val) : cljs.core.conj.call(null, orig__83419, val);
  cljs.core.swap_BANG_.call(null, vcfvis.core._BANG_cat_filters, cljs.core.assoc, (new cljs.core.Keyword("\ufdd0'id")).call(null, cat), new__83420);
  var G__83421__83422 = cljs.core.seq.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs));
  if(G__83421__83422) {
    var vcf__83423 = cljs.core.first.call(null, G__83421__83422);
    var G__83421__83424 = G__83421__83422;
    while(true) {
      cljs.core.get_in.call(null, vcf__83423, cljs.core.PersistentVector.fromArray(["\ufdd0'cf", (new cljs.core.Keyword("\ufdd0'id")).call(null, cat), "\ufdd0'dimension"], true)).filter(function(vcf__83423, G__83421__83424) {
        return function(d) {
          var or__3824__auto____83425 = cljs.core.empty_QMARK_.call(null, new__83420);
          if(or__3824__auto____83425) {
            return or__3824__auto____83425
          }else {
            return!cljs.core.empty_QMARK_.call(null, vcfvis.core.intersection.call(null, cljs.core.set.call(null, d), new__83420))
          }
        }
      }(vcf__83423, G__83421__83424));
      var temp__3974__auto____83426 = cljs.core.next.call(null, G__83421__83424);
      if(temp__3974__auto____83426) {
        var G__83421__83427 = temp__3974__auto____83426;
        var G__83434 = cljs.core.first.call(null, G__83421__83427);
        var G__83435 = G__83421__83427;
        vcf__83423 = G__83434;
        G__83421__83424 = G__83435;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__83428__83429 = cljs.core.seq.call(null, cljs.core.deref.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_));
  if(G__83428__83429) {
    var s__8951__auto____83430 = cljs.core.first.call(null, G__83428__83429);
    var G__83428__83431 = G__83428__83429;
    while(true) {
      s__8951__auto____83430.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'filter-updated"], {"\ufdd0'filter-updated":cat}));
      var temp__3974__auto____83432 = cljs.core.next.call(null, G__83428__83431);
      if(temp__3974__auto____83432) {
        var G__83428__83433 = temp__3974__auto____83432;
        var G__83436 = cljs.core.first.call(null, G__83428__83433);
        var G__83437 = G__83428__83433;
        s__8951__auto____83430 = G__83436;
        G__83428__83431 = G__83437;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
c2.event.on.call(null, "#cat-filters", "\ufdd0'click", function(d, _, e) {
  return vcfvis.controls.update_category_filter_BANG_.call(null, d, c2.dom.text.call(null, e.target), goog.string.contains(c2.dom.attr.call(null, e.target, "\ufdd0'class"), "active"))
});
var $btn__83438 = c2.dom.select.call(null, "#filter-btn");
var co__7953__auto____83442 = function() {
  var co__6205__auto____83441 = new reflex.core.ComputedObservable(null, true, function() {
    var G__83439__83440 = cljs.core._lookup.call(null, cljs.core.deref.call(null, vcfvis.data._BANG_analysis_status), cljs.core._lookup.call(null, cljs.core.first.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)), "\ufdd0'file-url", null), null);
    if(cljs.core._EQ_.call(null, null, G__83439__83440)) {
      return cljs.core.PersistentVector.fromArray(["\ufdd0'button#filter-btn.btn", cljs.core.ObjMap.fromObject(["\ufdd0'properties"], {"\ufdd0'properties":cljs.core.ObjMap.fromObject(["\ufdd0'disabled"], {"\ufdd0'disabled":false})}), "Export subset"], true)
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0'running", G__83439__83440)) {
        return cljs.core.PersistentVector.fromArray(["\ufdd0'button#filter-btn.btn", cljs.core.ObjMap.fromObject(["\ufdd0'properties"], {"\ufdd0'properties":cljs.core.ObjMap.fromObject(["\ufdd0'disabled"], {"\ufdd0'disabled":true})}), "Running..."], true)
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'completed", G__83439__83440)) {
          return cljs.core.PersistentVector.fromArray(["\ufdd0'button#filter-btn.btn", cljs.core.ObjMap.fromObject(["\ufdd0'properties"], {"\ufdd0'properties":cljs.core.ObjMap.fromObject(["\ufdd0'disabled"], {"\ufdd0'disabled":true})}), "Completed"], true)
        }else {
          if("\ufdd0'else") {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.core._lookup.call(null, cljs.core.deref.call(null, vcfvis.data._BANG_analysis_status), cljs.core._lookup.call(null, cljs.core.first.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)), "\ufdd0'file-url", null), null))].join(""));
          }else {
            return null
          }
        }
      }
    }
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6205__auto____83441);
  return co__6205__auto____83441
}();
var $el__7954__auto____83443 = c2.dom.__GT_dom.call(null, $btn__83438);
singult.core.merge_BANG_.call(null, $el__7954__auto____83443, cljs.core.deref.call(null, co__7953__auto____83442));
cljs.core.add_watch.call(null, co__7953__auto____83442, "\ufdd0'update-dom", function() {
  return singult.core.merge_BANG_.call(null, $el__7954__auto____83443, cljs.core.deref.call(null, co__7953__auto____83442))
});
co__7953__auto____83442;
c2.event.on_raw.call(null, $btn__83438, "\ufdd0'click", function(_) {
  return vcfvis.data.filter_analysis.call(null, cljs.core._lookup.call(null, cljs.core.first.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)), "\ufdd0'file-url", null), cljs.core.deref.call(null, vcfvis.core._BANG_filters))
});
goog.provide("vcfvis.main");
goog.require("cljs.core");
goog.require("c2.util");
goog.require("vcfvis.controls");
goog.require("vcfvis.ui");
goog.require("vcfvis.data");
goog.require("vcfvis.core");
goog.require("c2.util");
cljs.core.add_watch.call(null, vcfvis.controls.file_selector, "\ufdd0'load-metrics", function(files) {
  var new_files__57157 = vcfvis.core.check_new_vcfs_BANG_.call(null, files);
  if(cljs.core.seq.call(null, new_files__57157)) {
    jQuery("#waiting-modal").modal("show");
    var G__57158__57159 = cljs.core.seq.call(null, new_files__57157);
    if(G__57158__57159) {
      var f__57160 = cljs.core.first.call(null, G__57158__57159);
      var G__57158__57161 = G__57158__57159;
      while(true) {
        vcfvis.data.load_vcf.call(null, f__57160, function(f__57160, G__57158__57161) {
          return function(vcf) {
            jQuery("#waiting-modal").modal("hide");
            return cljs.core.swap_BANG_.call(null, vcfvis.core._BANG_vcfs, cljs.core.conj, vcf)
          }
        }(f__57160, G__57158__57161));
        var temp__3974__auto____57162 = cljs.core.next.call(null, G__57158__57161);
        if(temp__3974__auto____57162) {
          var G__57158__57163 = temp__3974__auto____57162;
          var G__57164 = cljs.core.first.call(null, G__57158__57163);
          var G__57165 = G__57158__57163;
          f__57160 = G__57164;
          G__57158__57161 = G__57165;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  }else {
    return null
  }
});
jQuery("#waiting-modal").modal(c2.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'backdrop", "\ufdd0'keyboard", "\ufdd0'show"], {"\ufdd0'backdrop":"static", "\ufdd0'keyboard":false, "\ufdd0'show":true})));
vcfvis.data.load_context.call(null, function(context) {
  vcfvis.ui.set_user.call(null);
  vcfvis.ui.set_navigation.call(null);
  jQuery("#waiting-modal").modal("hide");
  return cljs.core.reset_BANG_.call(null, vcfvis.core._BANG_context, context)
});
