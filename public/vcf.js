var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__10498 = x == null ? null : x;
  if(p[goog.typeOf(x__10498)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__10499__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__10499 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10499__delegate.call(this, array, i, idxs)
    };
    G__10499.cljs$lang$maxFixedArity = 2;
    G__10499.cljs$lang$applyTo = function(arglist__10500) {
      var array = cljs.core.first(arglist__10500);
      var i = cljs.core.first(cljs.core.next(arglist__10500));
      var idxs = cljs.core.rest(cljs.core.next(arglist__10500));
      return G__10499__delegate(array, i, idxs)
    };
    G__10499.cljs$lang$arity$variadic = G__10499__delegate;
    return G__10499
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____10585 = this$;
      if(and__3822__auto____10585) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____10585
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2264__auto____10586 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10587 = cljs.core._invoke[goog.typeOf(x__2264__auto____10586)];
        if(or__3824__auto____10587) {
          return or__3824__auto____10587
        }else {
          var or__3824__auto____10588 = cljs.core._invoke["_"];
          if(or__3824__auto____10588) {
            return or__3824__auto____10588
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____10589 = this$;
      if(and__3822__auto____10589) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____10589
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2264__auto____10590 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10591 = cljs.core._invoke[goog.typeOf(x__2264__auto____10590)];
        if(or__3824__auto____10591) {
          return or__3824__auto____10591
        }else {
          var or__3824__auto____10592 = cljs.core._invoke["_"];
          if(or__3824__auto____10592) {
            return or__3824__auto____10592
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____10593 = this$;
      if(and__3822__auto____10593) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____10593
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2264__auto____10594 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10595 = cljs.core._invoke[goog.typeOf(x__2264__auto____10594)];
        if(or__3824__auto____10595) {
          return or__3824__auto____10595
        }else {
          var or__3824__auto____10596 = cljs.core._invoke["_"];
          if(or__3824__auto____10596) {
            return or__3824__auto____10596
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____10597 = this$;
      if(and__3822__auto____10597) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____10597
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2264__auto____10598 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10599 = cljs.core._invoke[goog.typeOf(x__2264__auto____10598)];
        if(or__3824__auto____10599) {
          return or__3824__auto____10599
        }else {
          var or__3824__auto____10600 = cljs.core._invoke["_"];
          if(or__3824__auto____10600) {
            return or__3824__auto____10600
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____10601 = this$;
      if(and__3822__auto____10601) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____10601
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2264__auto____10602 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10603 = cljs.core._invoke[goog.typeOf(x__2264__auto____10602)];
        if(or__3824__auto____10603) {
          return or__3824__auto____10603
        }else {
          var or__3824__auto____10604 = cljs.core._invoke["_"];
          if(or__3824__auto____10604) {
            return or__3824__auto____10604
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____10605 = this$;
      if(and__3822__auto____10605) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____10605
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2264__auto____10606 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10607 = cljs.core._invoke[goog.typeOf(x__2264__auto____10606)];
        if(or__3824__auto____10607) {
          return or__3824__auto____10607
        }else {
          var or__3824__auto____10608 = cljs.core._invoke["_"];
          if(or__3824__auto____10608) {
            return or__3824__auto____10608
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____10609 = this$;
      if(and__3822__auto____10609) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____10609
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2264__auto____10610 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10611 = cljs.core._invoke[goog.typeOf(x__2264__auto____10610)];
        if(or__3824__auto____10611) {
          return or__3824__auto____10611
        }else {
          var or__3824__auto____10612 = cljs.core._invoke["_"];
          if(or__3824__auto____10612) {
            return or__3824__auto____10612
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____10613 = this$;
      if(and__3822__auto____10613) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____10613
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2264__auto____10614 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10615 = cljs.core._invoke[goog.typeOf(x__2264__auto____10614)];
        if(or__3824__auto____10615) {
          return or__3824__auto____10615
        }else {
          var or__3824__auto____10616 = cljs.core._invoke["_"];
          if(or__3824__auto____10616) {
            return or__3824__auto____10616
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____10617 = this$;
      if(and__3822__auto____10617) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____10617
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2264__auto____10618 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10619 = cljs.core._invoke[goog.typeOf(x__2264__auto____10618)];
        if(or__3824__auto____10619) {
          return or__3824__auto____10619
        }else {
          var or__3824__auto____10620 = cljs.core._invoke["_"];
          if(or__3824__auto____10620) {
            return or__3824__auto____10620
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____10621 = this$;
      if(and__3822__auto____10621) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____10621
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2264__auto____10622 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10623 = cljs.core._invoke[goog.typeOf(x__2264__auto____10622)];
        if(or__3824__auto____10623) {
          return or__3824__auto____10623
        }else {
          var or__3824__auto____10624 = cljs.core._invoke["_"];
          if(or__3824__auto____10624) {
            return or__3824__auto____10624
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____10625 = this$;
      if(and__3822__auto____10625) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____10625
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2264__auto____10626 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10627 = cljs.core._invoke[goog.typeOf(x__2264__auto____10626)];
        if(or__3824__auto____10627) {
          return or__3824__auto____10627
        }else {
          var or__3824__auto____10628 = cljs.core._invoke["_"];
          if(or__3824__auto____10628) {
            return or__3824__auto____10628
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____10629 = this$;
      if(and__3822__auto____10629) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____10629
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2264__auto____10630 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10631 = cljs.core._invoke[goog.typeOf(x__2264__auto____10630)];
        if(or__3824__auto____10631) {
          return or__3824__auto____10631
        }else {
          var or__3824__auto____10632 = cljs.core._invoke["_"];
          if(or__3824__auto____10632) {
            return or__3824__auto____10632
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____10633 = this$;
      if(and__3822__auto____10633) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____10633
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2264__auto____10634 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10635 = cljs.core._invoke[goog.typeOf(x__2264__auto____10634)];
        if(or__3824__auto____10635) {
          return or__3824__auto____10635
        }else {
          var or__3824__auto____10636 = cljs.core._invoke["_"];
          if(or__3824__auto____10636) {
            return or__3824__auto____10636
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____10637 = this$;
      if(and__3822__auto____10637) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____10637
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2264__auto____10638 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10639 = cljs.core._invoke[goog.typeOf(x__2264__auto____10638)];
        if(or__3824__auto____10639) {
          return or__3824__auto____10639
        }else {
          var or__3824__auto____10640 = cljs.core._invoke["_"];
          if(or__3824__auto____10640) {
            return or__3824__auto____10640
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____10641 = this$;
      if(and__3822__auto____10641) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____10641
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2264__auto____10642 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10643 = cljs.core._invoke[goog.typeOf(x__2264__auto____10642)];
        if(or__3824__auto____10643) {
          return or__3824__auto____10643
        }else {
          var or__3824__auto____10644 = cljs.core._invoke["_"];
          if(or__3824__auto____10644) {
            return or__3824__auto____10644
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____10645 = this$;
      if(and__3822__auto____10645) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____10645
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2264__auto____10646 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10647 = cljs.core._invoke[goog.typeOf(x__2264__auto____10646)];
        if(or__3824__auto____10647) {
          return or__3824__auto____10647
        }else {
          var or__3824__auto____10648 = cljs.core._invoke["_"];
          if(or__3824__auto____10648) {
            return or__3824__auto____10648
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____10649 = this$;
      if(and__3822__auto____10649) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____10649
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2264__auto____10650 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10651 = cljs.core._invoke[goog.typeOf(x__2264__auto____10650)];
        if(or__3824__auto____10651) {
          return or__3824__auto____10651
        }else {
          var or__3824__auto____10652 = cljs.core._invoke["_"];
          if(or__3824__auto____10652) {
            return or__3824__auto____10652
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____10653 = this$;
      if(and__3822__auto____10653) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____10653
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2264__auto____10654 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10655 = cljs.core._invoke[goog.typeOf(x__2264__auto____10654)];
        if(or__3824__auto____10655) {
          return or__3824__auto____10655
        }else {
          var or__3824__auto____10656 = cljs.core._invoke["_"];
          if(or__3824__auto____10656) {
            return or__3824__auto____10656
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____10657 = this$;
      if(and__3822__auto____10657) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____10657
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2264__auto____10658 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10659 = cljs.core._invoke[goog.typeOf(x__2264__auto____10658)];
        if(or__3824__auto____10659) {
          return or__3824__auto____10659
        }else {
          var or__3824__auto____10660 = cljs.core._invoke["_"];
          if(or__3824__auto____10660) {
            return or__3824__auto____10660
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____10661 = this$;
      if(and__3822__auto____10661) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____10661
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2264__auto____10662 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10663 = cljs.core._invoke[goog.typeOf(x__2264__auto____10662)];
        if(or__3824__auto____10663) {
          return or__3824__auto____10663
        }else {
          var or__3824__auto____10664 = cljs.core._invoke["_"];
          if(or__3824__auto____10664) {
            return or__3824__auto____10664
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____10665 = this$;
      if(and__3822__auto____10665) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____10665
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2264__auto____10666 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10667 = cljs.core._invoke[goog.typeOf(x__2264__auto____10666)];
        if(or__3824__auto____10667) {
          return or__3824__auto____10667
        }else {
          var or__3824__auto____10668 = cljs.core._invoke["_"];
          if(or__3824__auto____10668) {
            return or__3824__auto____10668
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____10673 = coll;
    if(and__3822__auto____10673) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____10673
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2264__auto____10674 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10675 = cljs.core._count[goog.typeOf(x__2264__auto____10674)];
      if(or__3824__auto____10675) {
        return or__3824__auto____10675
      }else {
        var or__3824__auto____10676 = cljs.core._count["_"];
        if(or__3824__auto____10676) {
          return or__3824__auto____10676
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____10681 = coll;
    if(and__3822__auto____10681) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____10681
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2264__auto____10682 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10683 = cljs.core._empty[goog.typeOf(x__2264__auto____10682)];
      if(or__3824__auto____10683) {
        return or__3824__auto____10683
      }else {
        var or__3824__auto____10684 = cljs.core._empty["_"];
        if(or__3824__auto____10684) {
          return or__3824__auto____10684
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____10689 = coll;
    if(and__3822__auto____10689) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____10689
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2264__auto____10690 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10691 = cljs.core._conj[goog.typeOf(x__2264__auto____10690)];
      if(or__3824__auto____10691) {
        return or__3824__auto____10691
      }else {
        var or__3824__auto____10692 = cljs.core._conj["_"];
        if(or__3824__auto____10692) {
          return or__3824__auto____10692
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____10701 = coll;
      if(and__3822__auto____10701) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____10701
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2264__auto____10702 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____10703 = cljs.core._nth[goog.typeOf(x__2264__auto____10702)];
        if(or__3824__auto____10703) {
          return or__3824__auto____10703
        }else {
          var or__3824__auto____10704 = cljs.core._nth["_"];
          if(or__3824__auto____10704) {
            return or__3824__auto____10704
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____10705 = coll;
      if(and__3822__auto____10705) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____10705
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2264__auto____10706 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____10707 = cljs.core._nth[goog.typeOf(x__2264__auto____10706)];
        if(or__3824__auto____10707) {
          return or__3824__auto____10707
        }else {
          var or__3824__auto____10708 = cljs.core._nth["_"];
          if(or__3824__auto____10708) {
            return or__3824__auto____10708
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____10713 = coll;
    if(and__3822__auto____10713) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____10713
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2264__auto____10714 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10715 = cljs.core._first[goog.typeOf(x__2264__auto____10714)];
      if(or__3824__auto____10715) {
        return or__3824__auto____10715
      }else {
        var or__3824__auto____10716 = cljs.core._first["_"];
        if(or__3824__auto____10716) {
          return or__3824__auto____10716
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____10721 = coll;
    if(and__3822__auto____10721) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____10721
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2264__auto____10722 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10723 = cljs.core._rest[goog.typeOf(x__2264__auto____10722)];
      if(or__3824__auto____10723) {
        return or__3824__auto____10723
      }else {
        var or__3824__auto____10724 = cljs.core._rest["_"];
        if(or__3824__auto____10724) {
          return or__3824__auto____10724
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____10729 = coll;
    if(and__3822__auto____10729) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____10729
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2264__auto____10730 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10731 = cljs.core._next[goog.typeOf(x__2264__auto____10730)];
      if(or__3824__auto____10731) {
        return or__3824__auto____10731
      }else {
        var or__3824__auto____10732 = cljs.core._next["_"];
        if(or__3824__auto____10732) {
          return or__3824__auto____10732
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____10741 = o;
      if(and__3822__auto____10741) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____10741
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2264__auto____10742 = o == null ? null : o;
      return function() {
        var or__3824__auto____10743 = cljs.core._lookup[goog.typeOf(x__2264__auto____10742)];
        if(or__3824__auto____10743) {
          return or__3824__auto____10743
        }else {
          var or__3824__auto____10744 = cljs.core._lookup["_"];
          if(or__3824__auto____10744) {
            return or__3824__auto____10744
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____10745 = o;
      if(and__3822__auto____10745) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____10745
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2264__auto____10746 = o == null ? null : o;
      return function() {
        var or__3824__auto____10747 = cljs.core._lookup[goog.typeOf(x__2264__auto____10746)];
        if(or__3824__auto____10747) {
          return or__3824__auto____10747
        }else {
          var or__3824__auto____10748 = cljs.core._lookup["_"];
          if(or__3824__auto____10748) {
            return or__3824__auto____10748
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____10753 = coll;
    if(and__3822__auto____10753) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____10753
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2264__auto____10754 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10755 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2264__auto____10754)];
      if(or__3824__auto____10755) {
        return or__3824__auto____10755
      }else {
        var or__3824__auto____10756 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____10756) {
          return or__3824__auto____10756
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____10761 = coll;
    if(and__3822__auto____10761) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____10761
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2264__auto____10762 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10763 = cljs.core._assoc[goog.typeOf(x__2264__auto____10762)];
      if(or__3824__auto____10763) {
        return or__3824__auto____10763
      }else {
        var or__3824__auto____10764 = cljs.core._assoc["_"];
        if(or__3824__auto____10764) {
          return or__3824__auto____10764
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____10769 = coll;
    if(and__3822__auto____10769) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____10769
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2264__auto____10770 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10771 = cljs.core._dissoc[goog.typeOf(x__2264__auto____10770)];
      if(or__3824__auto____10771) {
        return or__3824__auto____10771
      }else {
        var or__3824__auto____10772 = cljs.core._dissoc["_"];
        if(or__3824__auto____10772) {
          return or__3824__auto____10772
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____10777 = coll;
    if(and__3822__auto____10777) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____10777
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2264__auto____10778 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10779 = cljs.core._key[goog.typeOf(x__2264__auto____10778)];
      if(or__3824__auto____10779) {
        return or__3824__auto____10779
      }else {
        var or__3824__auto____10780 = cljs.core._key["_"];
        if(or__3824__auto____10780) {
          return or__3824__auto____10780
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____10785 = coll;
    if(and__3822__auto____10785) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____10785
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2264__auto____10786 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10787 = cljs.core._val[goog.typeOf(x__2264__auto____10786)];
      if(or__3824__auto____10787) {
        return or__3824__auto____10787
      }else {
        var or__3824__auto____10788 = cljs.core._val["_"];
        if(or__3824__auto____10788) {
          return or__3824__auto____10788
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____10793 = coll;
    if(and__3822__auto____10793) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____10793
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2264__auto____10794 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10795 = cljs.core._disjoin[goog.typeOf(x__2264__auto____10794)];
      if(or__3824__auto____10795) {
        return or__3824__auto____10795
      }else {
        var or__3824__auto____10796 = cljs.core._disjoin["_"];
        if(or__3824__auto____10796) {
          return or__3824__auto____10796
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____10801 = coll;
    if(and__3822__auto____10801) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____10801
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2264__auto____10802 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10803 = cljs.core._peek[goog.typeOf(x__2264__auto____10802)];
      if(or__3824__auto____10803) {
        return or__3824__auto____10803
      }else {
        var or__3824__auto____10804 = cljs.core._peek["_"];
        if(or__3824__auto____10804) {
          return or__3824__auto____10804
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____10809 = coll;
    if(and__3822__auto____10809) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____10809
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2264__auto____10810 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10811 = cljs.core._pop[goog.typeOf(x__2264__auto____10810)];
      if(or__3824__auto____10811) {
        return or__3824__auto____10811
      }else {
        var or__3824__auto____10812 = cljs.core._pop["_"];
        if(or__3824__auto____10812) {
          return or__3824__auto____10812
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____10817 = coll;
    if(and__3822__auto____10817) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____10817
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2264__auto____10818 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10819 = cljs.core._assoc_n[goog.typeOf(x__2264__auto____10818)];
      if(or__3824__auto____10819) {
        return or__3824__auto____10819
      }else {
        var or__3824__auto____10820 = cljs.core._assoc_n["_"];
        if(or__3824__auto____10820) {
          return or__3824__auto____10820
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____10825 = o;
    if(and__3822__auto____10825) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____10825
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2264__auto____10826 = o == null ? null : o;
    return function() {
      var or__3824__auto____10827 = cljs.core._deref[goog.typeOf(x__2264__auto____10826)];
      if(or__3824__auto____10827) {
        return or__3824__auto____10827
      }else {
        var or__3824__auto____10828 = cljs.core._deref["_"];
        if(or__3824__auto____10828) {
          return or__3824__auto____10828
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____10833 = o;
    if(and__3822__auto____10833) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____10833
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2264__auto____10834 = o == null ? null : o;
    return function() {
      var or__3824__auto____10835 = cljs.core._deref_with_timeout[goog.typeOf(x__2264__auto____10834)];
      if(or__3824__auto____10835) {
        return or__3824__auto____10835
      }else {
        var or__3824__auto____10836 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____10836) {
          return or__3824__auto____10836
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____10841 = o;
    if(and__3822__auto____10841) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____10841
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2264__auto____10842 = o == null ? null : o;
    return function() {
      var or__3824__auto____10843 = cljs.core._meta[goog.typeOf(x__2264__auto____10842)];
      if(or__3824__auto____10843) {
        return or__3824__auto____10843
      }else {
        var or__3824__auto____10844 = cljs.core._meta["_"];
        if(or__3824__auto____10844) {
          return or__3824__auto____10844
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____10849 = o;
    if(and__3822__auto____10849) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____10849
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2264__auto____10850 = o == null ? null : o;
    return function() {
      var or__3824__auto____10851 = cljs.core._with_meta[goog.typeOf(x__2264__auto____10850)];
      if(or__3824__auto____10851) {
        return or__3824__auto____10851
      }else {
        var or__3824__auto____10852 = cljs.core._with_meta["_"];
        if(or__3824__auto____10852) {
          return or__3824__auto____10852
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____10861 = coll;
      if(and__3822__auto____10861) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____10861
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2264__auto____10862 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____10863 = cljs.core._reduce[goog.typeOf(x__2264__auto____10862)];
        if(or__3824__auto____10863) {
          return or__3824__auto____10863
        }else {
          var or__3824__auto____10864 = cljs.core._reduce["_"];
          if(or__3824__auto____10864) {
            return or__3824__auto____10864
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____10865 = coll;
      if(and__3822__auto____10865) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____10865
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2264__auto____10866 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____10867 = cljs.core._reduce[goog.typeOf(x__2264__auto____10866)];
        if(or__3824__auto____10867) {
          return or__3824__auto____10867
        }else {
          var or__3824__auto____10868 = cljs.core._reduce["_"];
          if(or__3824__auto____10868) {
            return or__3824__auto____10868
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____10873 = coll;
    if(and__3822__auto____10873) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____10873
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2264__auto____10874 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10875 = cljs.core._kv_reduce[goog.typeOf(x__2264__auto____10874)];
      if(or__3824__auto____10875) {
        return or__3824__auto____10875
      }else {
        var or__3824__auto____10876 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____10876) {
          return or__3824__auto____10876
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____10881 = o;
    if(and__3822__auto____10881) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____10881
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2264__auto____10882 = o == null ? null : o;
    return function() {
      var or__3824__auto____10883 = cljs.core._equiv[goog.typeOf(x__2264__auto____10882)];
      if(or__3824__auto____10883) {
        return or__3824__auto____10883
      }else {
        var or__3824__auto____10884 = cljs.core._equiv["_"];
        if(or__3824__auto____10884) {
          return or__3824__auto____10884
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____10889 = o;
    if(and__3822__auto____10889) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____10889
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2264__auto____10890 = o == null ? null : o;
    return function() {
      var or__3824__auto____10891 = cljs.core._hash[goog.typeOf(x__2264__auto____10890)];
      if(or__3824__auto____10891) {
        return or__3824__auto____10891
      }else {
        var or__3824__auto____10892 = cljs.core._hash["_"];
        if(or__3824__auto____10892) {
          return or__3824__auto____10892
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____10897 = o;
    if(and__3822__auto____10897) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____10897
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2264__auto____10898 = o == null ? null : o;
    return function() {
      var or__3824__auto____10899 = cljs.core._seq[goog.typeOf(x__2264__auto____10898)];
      if(or__3824__auto____10899) {
        return or__3824__auto____10899
      }else {
        var or__3824__auto____10900 = cljs.core._seq["_"];
        if(or__3824__auto____10900) {
          return or__3824__auto____10900
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____10905 = coll;
    if(and__3822__auto____10905) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____10905
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2264__auto____10906 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10907 = cljs.core._rseq[goog.typeOf(x__2264__auto____10906)];
      if(or__3824__auto____10907) {
        return or__3824__auto____10907
      }else {
        var or__3824__auto____10908 = cljs.core._rseq["_"];
        if(or__3824__auto____10908) {
          return or__3824__auto____10908
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____10913 = coll;
    if(and__3822__auto____10913) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____10913
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2264__auto____10914 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10915 = cljs.core._sorted_seq[goog.typeOf(x__2264__auto____10914)];
      if(or__3824__auto____10915) {
        return or__3824__auto____10915
      }else {
        var or__3824__auto____10916 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____10916) {
          return or__3824__auto____10916
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____10921 = coll;
    if(and__3822__auto____10921) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____10921
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2264__auto____10922 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10923 = cljs.core._sorted_seq_from[goog.typeOf(x__2264__auto____10922)];
      if(or__3824__auto____10923) {
        return or__3824__auto____10923
      }else {
        var or__3824__auto____10924 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____10924) {
          return or__3824__auto____10924
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____10929 = coll;
    if(and__3822__auto____10929) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____10929
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2264__auto____10930 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10931 = cljs.core._entry_key[goog.typeOf(x__2264__auto____10930)];
      if(or__3824__auto____10931) {
        return or__3824__auto____10931
      }else {
        var or__3824__auto____10932 = cljs.core._entry_key["_"];
        if(or__3824__auto____10932) {
          return or__3824__auto____10932
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____10937 = coll;
    if(and__3822__auto____10937) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____10937
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2264__auto____10938 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10939 = cljs.core._comparator[goog.typeOf(x__2264__auto____10938)];
      if(or__3824__auto____10939) {
        return or__3824__auto____10939
      }else {
        var or__3824__auto____10940 = cljs.core._comparator["_"];
        if(or__3824__auto____10940) {
          return or__3824__auto____10940
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____10945 = o;
    if(and__3822__auto____10945) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____10945
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2264__auto____10946 = o == null ? null : o;
    return function() {
      var or__3824__auto____10947 = cljs.core._pr_seq[goog.typeOf(x__2264__auto____10946)];
      if(or__3824__auto____10947) {
        return or__3824__auto____10947
      }else {
        var or__3824__auto____10948 = cljs.core._pr_seq["_"];
        if(or__3824__auto____10948) {
          return or__3824__auto____10948
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____10953 = d;
    if(and__3822__auto____10953) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____10953
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2264__auto____10954 = d == null ? null : d;
    return function() {
      var or__3824__auto____10955 = cljs.core._realized_QMARK_[goog.typeOf(x__2264__auto____10954)];
      if(or__3824__auto____10955) {
        return or__3824__auto____10955
      }else {
        var or__3824__auto____10956 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____10956) {
          return or__3824__auto____10956
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____10961 = this$;
    if(and__3822__auto____10961) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____10961
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2264__auto____10962 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____10963 = cljs.core._notify_watches[goog.typeOf(x__2264__auto____10962)];
      if(or__3824__auto____10963) {
        return or__3824__auto____10963
      }else {
        var or__3824__auto____10964 = cljs.core._notify_watches["_"];
        if(or__3824__auto____10964) {
          return or__3824__auto____10964
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____10969 = this$;
    if(and__3822__auto____10969) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____10969
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2264__auto____10970 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____10971 = cljs.core._add_watch[goog.typeOf(x__2264__auto____10970)];
      if(or__3824__auto____10971) {
        return or__3824__auto____10971
      }else {
        var or__3824__auto____10972 = cljs.core._add_watch["_"];
        if(or__3824__auto____10972) {
          return or__3824__auto____10972
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____10977 = this$;
    if(and__3822__auto____10977) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____10977
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2264__auto____10978 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____10979 = cljs.core._remove_watch[goog.typeOf(x__2264__auto____10978)];
      if(or__3824__auto____10979) {
        return or__3824__auto____10979
      }else {
        var or__3824__auto____10980 = cljs.core._remove_watch["_"];
        if(or__3824__auto____10980) {
          return or__3824__auto____10980
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____10985 = coll;
    if(and__3822__auto____10985) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____10985
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2264__auto____10986 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10987 = cljs.core._as_transient[goog.typeOf(x__2264__auto____10986)];
      if(or__3824__auto____10987) {
        return or__3824__auto____10987
      }else {
        var or__3824__auto____10988 = cljs.core._as_transient["_"];
        if(or__3824__auto____10988) {
          return or__3824__auto____10988
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____10993 = tcoll;
    if(and__3822__auto____10993) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____10993
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2264__auto____10994 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____10995 = cljs.core._conj_BANG_[goog.typeOf(x__2264__auto____10994)];
      if(or__3824__auto____10995) {
        return or__3824__auto____10995
      }else {
        var or__3824__auto____10996 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____10996) {
          return or__3824__auto____10996
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____11001 = tcoll;
    if(and__3822__auto____11001) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____11001
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2264__auto____11002 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____11003 = cljs.core._persistent_BANG_[goog.typeOf(x__2264__auto____11002)];
      if(or__3824__auto____11003) {
        return or__3824__auto____11003
      }else {
        var or__3824__auto____11004 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____11004) {
          return or__3824__auto____11004
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____11009 = tcoll;
    if(and__3822__auto____11009) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____11009
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2264__auto____11010 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____11011 = cljs.core._assoc_BANG_[goog.typeOf(x__2264__auto____11010)];
      if(or__3824__auto____11011) {
        return or__3824__auto____11011
      }else {
        var or__3824__auto____11012 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____11012) {
          return or__3824__auto____11012
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____11017 = tcoll;
    if(and__3822__auto____11017) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____11017
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2264__auto____11018 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____11019 = cljs.core._dissoc_BANG_[goog.typeOf(x__2264__auto____11018)];
      if(or__3824__auto____11019) {
        return or__3824__auto____11019
      }else {
        var or__3824__auto____11020 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____11020) {
          return or__3824__auto____11020
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____11025 = tcoll;
    if(and__3822__auto____11025) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____11025
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2264__auto____11026 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____11027 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2264__auto____11026)];
      if(or__3824__auto____11027) {
        return or__3824__auto____11027
      }else {
        var or__3824__auto____11028 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____11028) {
          return or__3824__auto____11028
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____11033 = tcoll;
    if(and__3822__auto____11033) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____11033
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2264__auto____11034 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____11035 = cljs.core._pop_BANG_[goog.typeOf(x__2264__auto____11034)];
      if(or__3824__auto____11035) {
        return or__3824__auto____11035
      }else {
        var or__3824__auto____11036 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____11036) {
          return or__3824__auto____11036
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____11041 = tcoll;
    if(and__3822__auto____11041) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____11041
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2264__auto____11042 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____11043 = cljs.core._disjoin_BANG_[goog.typeOf(x__2264__auto____11042)];
      if(or__3824__auto____11043) {
        return or__3824__auto____11043
      }else {
        var or__3824__auto____11044 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____11044) {
          return or__3824__auto____11044
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____11049 = x;
    if(and__3822__auto____11049) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____11049
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2264__auto____11050 = x == null ? null : x;
    return function() {
      var or__3824__auto____11051 = cljs.core._compare[goog.typeOf(x__2264__auto____11050)];
      if(or__3824__auto____11051) {
        return or__3824__auto____11051
      }else {
        var or__3824__auto____11052 = cljs.core._compare["_"];
        if(or__3824__auto____11052) {
          return or__3824__auto____11052
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____11057 = coll;
    if(and__3822__auto____11057) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____11057
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2264__auto____11058 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11059 = cljs.core._drop_first[goog.typeOf(x__2264__auto____11058)];
      if(or__3824__auto____11059) {
        return or__3824__auto____11059
      }else {
        var or__3824__auto____11060 = cljs.core._drop_first["_"];
        if(or__3824__auto____11060) {
          return or__3824__auto____11060
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____11065 = coll;
    if(and__3822__auto____11065) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____11065
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2264__auto____11066 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11067 = cljs.core._chunked_first[goog.typeOf(x__2264__auto____11066)];
      if(or__3824__auto____11067) {
        return or__3824__auto____11067
      }else {
        var or__3824__auto____11068 = cljs.core._chunked_first["_"];
        if(or__3824__auto____11068) {
          return or__3824__auto____11068
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____11073 = coll;
    if(and__3822__auto____11073) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____11073
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2264__auto____11074 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11075 = cljs.core._chunked_rest[goog.typeOf(x__2264__auto____11074)];
      if(or__3824__auto____11075) {
        return or__3824__auto____11075
      }else {
        var or__3824__auto____11076 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____11076) {
          return or__3824__auto____11076
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____11081 = coll;
    if(and__3822__auto____11081) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____11081
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2264__auto____11082 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11083 = cljs.core._chunked_next[goog.typeOf(x__2264__auto____11082)];
      if(or__3824__auto____11083) {
        return or__3824__auto____11083
      }else {
        var or__3824__auto____11084 = cljs.core._chunked_next["_"];
        if(or__3824__auto____11084) {
          return or__3824__auto____11084
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____11086 = x === y;
    if(or__3824__auto____11086) {
      return or__3824__auto____11086
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__11087__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__11088 = y;
            var G__11089 = cljs.core.first.call(null, more);
            var G__11090 = cljs.core.next.call(null, more);
            x = G__11088;
            y = G__11089;
            more = G__11090;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__11087 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11087__delegate.call(this, x, y, more)
    };
    G__11087.cljs$lang$maxFixedArity = 2;
    G__11087.cljs$lang$applyTo = function(arglist__11091) {
      var x = cljs.core.first(arglist__11091);
      var y = cljs.core.first(cljs.core.next(arglist__11091));
      var more = cljs.core.rest(cljs.core.next(arglist__11091));
      return G__11087__delegate(x, y, more)
    };
    G__11087.cljs$lang$arity$variadic = G__11087__delegate;
    return G__11087
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__11092 = null;
  var G__11092__2 = function(o, k) {
    return null
  };
  var G__11092__3 = function(o, k, not_found) {
    return not_found
  };
  G__11092 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11092__2.call(this, o, k);
      case 3:
        return G__11092__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11092
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__11093 = null;
  var G__11093__2 = function(_, f) {
    return f.call(null)
  };
  var G__11093__3 = function(_, f, start) {
    return start
  };
  G__11093 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__11093__2.call(this, _, f);
      case 3:
        return G__11093__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11093
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__11094 = null;
  var G__11094__2 = function(_, n) {
    return null
  };
  var G__11094__3 = function(_, n, not_found) {
    return not_found
  };
  G__11094 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11094__2.call(this, _, n);
      case 3:
        return G__11094__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11094
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____11095 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____11095) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____11095
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__11108 = cljs.core._count.call(null, cicoll);
    if(cnt__11108 === 0) {
      return f.call(null)
    }else {
      var val__11109 = cljs.core._nth.call(null, cicoll, 0);
      var n__11110 = 1;
      while(true) {
        if(n__11110 < cnt__11108) {
          var nval__11111 = f.call(null, val__11109, cljs.core._nth.call(null, cicoll, n__11110));
          if(cljs.core.reduced_QMARK_.call(null, nval__11111)) {
            return cljs.core.deref.call(null, nval__11111)
          }else {
            var G__11120 = nval__11111;
            var G__11121 = n__11110 + 1;
            val__11109 = G__11120;
            n__11110 = G__11121;
            continue
          }
        }else {
          return val__11109
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__11112 = cljs.core._count.call(null, cicoll);
    var val__11113 = val;
    var n__11114 = 0;
    while(true) {
      if(n__11114 < cnt__11112) {
        var nval__11115 = f.call(null, val__11113, cljs.core._nth.call(null, cicoll, n__11114));
        if(cljs.core.reduced_QMARK_.call(null, nval__11115)) {
          return cljs.core.deref.call(null, nval__11115)
        }else {
          var G__11122 = nval__11115;
          var G__11123 = n__11114 + 1;
          val__11113 = G__11122;
          n__11114 = G__11123;
          continue
        }
      }else {
        return val__11113
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__11116 = cljs.core._count.call(null, cicoll);
    var val__11117 = val;
    var n__11118 = idx;
    while(true) {
      if(n__11118 < cnt__11116) {
        var nval__11119 = f.call(null, val__11117, cljs.core._nth.call(null, cicoll, n__11118));
        if(cljs.core.reduced_QMARK_.call(null, nval__11119)) {
          return cljs.core.deref.call(null, nval__11119)
        }else {
          var G__11124 = nval__11119;
          var G__11125 = n__11118 + 1;
          val__11117 = G__11124;
          n__11118 = G__11125;
          continue
        }
      }else {
        return val__11117
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__11138 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__11139 = arr[0];
      var n__11140 = 1;
      while(true) {
        if(n__11140 < cnt__11138) {
          var nval__11141 = f.call(null, val__11139, arr[n__11140]);
          if(cljs.core.reduced_QMARK_.call(null, nval__11141)) {
            return cljs.core.deref.call(null, nval__11141)
          }else {
            var G__11150 = nval__11141;
            var G__11151 = n__11140 + 1;
            val__11139 = G__11150;
            n__11140 = G__11151;
            continue
          }
        }else {
          return val__11139
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__11142 = arr.length;
    var val__11143 = val;
    var n__11144 = 0;
    while(true) {
      if(n__11144 < cnt__11142) {
        var nval__11145 = f.call(null, val__11143, arr[n__11144]);
        if(cljs.core.reduced_QMARK_.call(null, nval__11145)) {
          return cljs.core.deref.call(null, nval__11145)
        }else {
          var G__11152 = nval__11145;
          var G__11153 = n__11144 + 1;
          val__11143 = G__11152;
          n__11144 = G__11153;
          continue
        }
      }else {
        return val__11143
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__11146 = arr.length;
    var val__11147 = val;
    var n__11148 = idx;
    while(true) {
      if(n__11148 < cnt__11146) {
        var nval__11149 = f.call(null, val__11147, arr[n__11148]);
        if(cljs.core.reduced_QMARK_.call(null, nval__11149)) {
          return cljs.core.deref.call(null, nval__11149)
        }else {
          var G__11154 = nval__11149;
          var G__11155 = n__11148 + 1;
          val__11147 = G__11154;
          n__11148 = G__11155;
          continue
        }
      }else {
        return val__11147
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11156 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__11157 = this;
  if(this__11157.i + 1 < this__11157.a.length) {
    return new cljs.core.IndexedSeq(this__11157.a, this__11157.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11158 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__11159 = this;
  var c__11160 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__11160 > 0) {
    return new cljs.core.RSeq(coll, c__11160 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__11161 = this;
  var this__11162 = this;
  return cljs.core.pr_str.call(null, this__11162)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__11163 = this;
  if(cljs.core.counted_QMARK_.call(null, this__11163.a)) {
    return cljs.core.ci_reduce.call(null, this__11163.a, f, this__11163.a[this__11163.i], this__11163.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__11163.a[this__11163.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__11164 = this;
  if(cljs.core.counted_QMARK_.call(null, this__11164.a)) {
    return cljs.core.ci_reduce.call(null, this__11164.a, f, start, this__11164.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__11165 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__11166 = this;
  return this__11166.a.length - this__11166.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__11167 = this;
  return this__11167.a[this__11167.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__11168 = this;
  if(this__11168.i + 1 < this__11168.a.length) {
    return new cljs.core.IndexedSeq(this__11168.a, this__11168.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11169 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__11170 = this;
  var i__11171 = n + this__11170.i;
  if(i__11171 < this__11170.a.length) {
    return this__11170.a[i__11171]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__11172 = this;
  var i__11173 = n + this__11172.i;
  if(i__11173 < this__11172.a.length) {
    return this__11172.a[i__11173]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__11174 = null;
  var G__11174__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__11174__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__11174 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__11174__2.call(this, array, f);
      case 3:
        return G__11174__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11174
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__11175 = null;
  var G__11175__2 = function(array, k) {
    return array[k]
  };
  var G__11175__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__11175 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11175__2.call(this, array, k);
      case 3:
        return G__11175__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11175
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__11176 = null;
  var G__11176__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__11176__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__11176 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11176__2.call(this, array, n);
      case 3:
        return G__11176__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11176
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11177 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11178 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__11179 = this;
  var this__11180 = this;
  return cljs.core.pr_str.call(null, this__11180)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11181 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11182 = this;
  return this__11182.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11183 = this;
  return cljs.core._nth.call(null, this__11183.ci, this__11183.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11184 = this;
  if(this__11184.i > 0) {
    return new cljs.core.RSeq(this__11184.ci, this__11184.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11185 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__11186 = this;
  return new cljs.core.RSeq(this__11186.ci, this__11186.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11187 = this;
  return this__11187.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__11191__11192 = coll;
      if(G__11191__11192) {
        if(function() {
          var or__3824__auto____11193 = G__11191__11192.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____11193) {
            return or__3824__auto____11193
          }else {
            return G__11191__11192.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__11191__11192.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__11191__11192)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__11191__11192)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__11198__11199 = coll;
      if(G__11198__11199) {
        if(function() {
          var or__3824__auto____11200 = G__11198__11199.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____11200) {
            return or__3824__auto____11200
          }else {
            return G__11198__11199.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__11198__11199.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__11198__11199)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__11198__11199)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__11201 = cljs.core.seq.call(null, coll);
      if(s__11201 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__11201)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__11206__11207 = coll;
      if(G__11206__11207) {
        if(function() {
          var or__3824__auto____11208 = G__11206__11207.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____11208) {
            return or__3824__auto____11208
          }else {
            return G__11206__11207.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__11206__11207.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__11206__11207)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__11206__11207)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__11209 = cljs.core.seq.call(null, coll);
      if(!(s__11209 == null)) {
        return cljs.core._rest.call(null, s__11209)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__11213__11214 = coll;
      if(G__11213__11214) {
        if(function() {
          var or__3824__auto____11215 = G__11213__11214.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____11215) {
            return or__3824__auto____11215
          }else {
            return G__11213__11214.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__11213__11214.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__11213__11214)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__11213__11214)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__11217 = cljs.core.next.call(null, s);
    if(!(sn__11217 == null)) {
      var G__11218 = sn__11217;
      s = G__11218;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__11219__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__11220 = conj.call(null, coll, x);
          var G__11221 = cljs.core.first.call(null, xs);
          var G__11222 = cljs.core.next.call(null, xs);
          coll = G__11220;
          x = G__11221;
          xs = G__11222;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__11219 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11219__delegate.call(this, coll, x, xs)
    };
    G__11219.cljs$lang$maxFixedArity = 2;
    G__11219.cljs$lang$applyTo = function(arglist__11223) {
      var coll = cljs.core.first(arglist__11223);
      var x = cljs.core.first(cljs.core.next(arglist__11223));
      var xs = cljs.core.rest(cljs.core.next(arglist__11223));
      return G__11219__delegate(coll, x, xs)
    };
    G__11219.cljs$lang$arity$variadic = G__11219__delegate;
    return G__11219
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__11226 = cljs.core.seq.call(null, coll);
  var acc__11227 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__11226)) {
      return acc__11227 + cljs.core._count.call(null, s__11226)
    }else {
      var G__11228 = cljs.core.next.call(null, s__11226);
      var G__11229 = acc__11227 + 1;
      s__11226 = G__11228;
      acc__11227 = G__11229;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__11236__11237 = coll;
        if(G__11236__11237) {
          if(function() {
            var or__3824__auto____11238 = G__11236__11237.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____11238) {
              return or__3824__auto____11238
            }else {
              return G__11236__11237.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__11236__11237.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__11236__11237)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__11236__11237)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__11239__11240 = coll;
        if(G__11239__11240) {
          if(function() {
            var or__3824__auto____11241 = G__11239__11240.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____11241) {
              return or__3824__auto____11241
            }else {
              return G__11239__11240.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__11239__11240.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__11239__11240)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__11239__11240)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__11244__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__11243 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__11245 = ret__11243;
          var G__11246 = cljs.core.first.call(null, kvs);
          var G__11247 = cljs.core.second.call(null, kvs);
          var G__11248 = cljs.core.nnext.call(null, kvs);
          coll = G__11245;
          k = G__11246;
          v = G__11247;
          kvs = G__11248;
          continue
        }else {
          return ret__11243
        }
        break
      }
    };
    var G__11244 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11244__delegate.call(this, coll, k, v, kvs)
    };
    G__11244.cljs$lang$maxFixedArity = 3;
    G__11244.cljs$lang$applyTo = function(arglist__11249) {
      var coll = cljs.core.first(arglist__11249);
      var k = cljs.core.first(cljs.core.next(arglist__11249));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11249)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11249)));
      return G__11244__delegate(coll, k, v, kvs)
    };
    G__11244.cljs$lang$arity$variadic = G__11244__delegate;
    return G__11244
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__11252__delegate = function(coll, k, ks) {
      while(true) {
        var ret__11251 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__11253 = ret__11251;
          var G__11254 = cljs.core.first.call(null, ks);
          var G__11255 = cljs.core.next.call(null, ks);
          coll = G__11253;
          k = G__11254;
          ks = G__11255;
          continue
        }else {
          return ret__11251
        }
        break
      }
    };
    var G__11252 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11252__delegate.call(this, coll, k, ks)
    };
    G__11252.cljs$lang$maxFixedArity = 2;
    G__11252.cljs$lang$applyTo = function(arglist__11256) {
      var coll = cljs.core.first(arglist__11256);
      var k = cljs.core.first(cljs.core.next(arglist__11256));
      var ks = cljs.core.rest(cljs.core.next(arglist__11256));
      return G__11252__delegate(coll, k, ks)
    };
    G__11252.cljs$lang$arity$variadic = G__11252__delegate;
    return G__11252
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__11260__11261 = o;
    if(G__11260__11261) {
      if(function() {
        var or__3824__auto____11262 = G__11260__11261.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____11262) {
          return or__3824__auto____11262
        }else {
          return G__11260__11261.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__11260__11261.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11260__11261)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11260__11261)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__11265__delegate = function(coll, k, ks) {
      while(true) {
        var ret__11264 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__11266 = ret__11264;
          var G__11267 = cljs.core.first.call(null, ks);
          var G__11268 = cljs.core.next.call(null, ks);
          coll = G__11266;
          k = G__11267;
          ks = G__11268;
          continue
        }else {
          return ret__11264
        }
        break
      }
    };
    var G__11265 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11265__delegate.call(this, coll, k, ks)
    };
    G__11265.cljs$lang$maxFixedArity = 2;
    G__11265.cljs$lang$applyTo = function(arglist__11269) {
      var coll = cljs.core.first(arglist__11269);
      var k = cljs.core.first(cljs.core.next(arglist__11269));
      var ks = cljs.core.rest(cljs.core.next(arglist__11269));
      return G__11265__delegate(coll, k, ks)
    };
    G__11265.cljs$lang$arity$variadic = G__11265__delegate;
    return G__11265
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__11271 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__11271;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__11271
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__11273 = cljs.core.string_hash_cache[k];
  if(!(h__11273 == null)) {
    return h__11273
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____11275 = goog.isString(o);
      if(and__3822__auto____11275) {
        return check_cache
      }else {
        return and__3822__auto____11275
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__11279__11280 = x;
    if(G__11279__11280) {
      if(function() {
        var or__3824__auto____11281 = G__11279__11280.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____11281) {
          return or__3824__auto____11281
        }else {
          return G__11279__11280.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__11279__11280.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__11279__11280)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__11279__11280)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__11285__11286 = x;
    if(G__11285__11286) {
      if(function() {
        var or__3824__auto____11287 = G__11285__11286.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____11287) {
          return or__3824__auto____11287
        }else {
          return G__11285__11286.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__11285__11286.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__11285__11286)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__11285__11286)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__11291__11292 = x;
  if(G__11291__11292) {
    if(function() {
      var or__3824__auto____11293 = G__11291__11292.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____11293) {
        return or__3824__auto____11293
      }else {
        return G__11291__11292.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__11291__11292.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__11291__11292)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__11291__11292)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__11297__11298 = x;
  if(G__11297__11298) {
    if(function() {
      var or__3824__auto____11299 = G__11297__11298.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____11299) {
        return or__3824__auto____11299
      }else {
        return G__11297__11298.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__11297__11298.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__11297__11298)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__11297__11298)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__11303__11304 = x;
  if(G__11303__11304) {
    if(function() {
      var or__3824__auto____11305 = G__11303__11304.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____11305) {
        return or__3824__auto____11305
      }else {
        return G__11303__11304.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__11303__11304.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__11303__11304)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__11303__11304)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__11309__11310 = x;
  if(G__11309__11310) {
    if(function() {
      var or__3824__auto____11311 = G__11309__11310.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____11311) {
        return or__3824__auto____11311
      }else {
        return G__11309__11310.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__11309__11310.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__11309__11310)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__11309__11310)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__11315__11316 = x;
  if(G__11315__11316) {
    if(function() {
      var or__3824__auto____11317 = G__11315__11316.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____11317) {
        return or__3824__auto____11317
      }else {
        return G__11315__11316.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__11315__11316.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__11315__11316)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__11315__11316)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__11321__11322 = x;
    if(G__11321__11322) {
      if(function() {
        var or__3824__auto____11323 = G__11321__11322.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____11323) {
          return or__3824__auto____11323
        }else {
          return G__11321__11322.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__11321__11322.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__11321__11322)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__11321__11322)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__11327__11328 = x;
  if(G__11327__11328) {
    if(function() {
      var or__3824__auto____11329 = G__11327__11328.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____11329) {
        return or__3824__auto____11329
      }else {
        return G__11327__11328.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__11327__11328.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__11327__11328)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__11327__11328)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__11333__11334 = x;
  if(G__11333__11334) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____11335 = null;
      if(cljs.core.truth_(or__3824__auto____11335)) {
        return or__3824__auto____11335
      }else {
        return G__11333__11334.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__11333__11334.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__11333__11334)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__11333__11334)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__11336__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__11336 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__11336__delegate.call(this, keyvals)
    };
    G__11336.cljs$lang$maxFixedArity = 0;
    G__11336.cljs$lang$applyTo = function(arglist__11337) {
      var keyvals = cljs.core.seq(arglist__11337);
      return G__11336__delegate(keyvals)
    };
    G__11336.cljs$lang$arity$variadic = G__11336__delegate;
    return G__11336
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__11339 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__11339.push(key)
  });
  return keys__11339
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__11343 = i;
  var j__11344 = j;
  var len__11345 = len;
  while(true) {
    if(len__11345 === 0) {
      return to
    }else {
      to[j__11344] = from[i__11343];
      var G__11346 = i__11343 + 1;
      var G__11347 = j__11344 + 1;
      var G__11348 = len__11345 - 1;
      i__11343 = G__11346;
      j__11344 = G__11347;
      len__11345 = G__11348;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__11352 = i + (len - 1);
  var j__11353 = j + (len - 1);
  var len__11354 = len;
  while(true) {
    if(len__11354 === 0) {
      return to
    }else {
      to[j__11353] = from[i__11352];
      var G__11355 = i__11352 - 1;
      var G__11356 = j__11353 - 1;
      var G__11357 = len__11354 - 1;
      i__11352 = G__11355;
      j__11353 = G__11356;
      len__11354 = G__11357;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__11361__11362 = s;
    if(G__11361__11362) {
      if(function() {
        var or__3824__auto____11363 = G__11361__11362.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____11363) {
          return or__3824__auto____11363
        }else {
          return G__11361__11362.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__11361__11362.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__11361__11362)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__11361__11362)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__11367__11368 = s;
  if(G__11367__11368) {
    if(function() {
      var or__3824__auto____11369 = G__11367__11368.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____11369) {
        return or__3824__auto____11369
      }else {
        return G__11367__11368.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__11367__11368.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11367__11368)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11367__11368)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____11372 = goog.isString(x);
  if(and__3822__auto____11372) {
    return!function() {
      var or__3824__auto____11373 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____11373) {
        return or__3824__auto____11373
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____11372
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____11375 = goog.isString(x);
  if(and__3822__auto____11375) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____11375
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____11377 = goog.isString(x);
  if(and__3822__auto____11377) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____11377
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____11382 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____11382) {
    return or__3824__auto____11382
  }else {
    var G__11383__11384 = f;
    if(G__11383__11384) {
      if(function() {
        var or__3824__auto____11385 = G__11383__11384.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____11385) {
          return or__3824__auto____11385
        }else {
          return G__11383__11384.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__11383__11384.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__11383__11384)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__11383__11384)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____11387 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____11387) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____11387
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____11390 = coll;
    if(cljs.core.truth_(and__3822__auto____11390)) {
      var and__3822__auto____11391 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____11391) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____11391
      }
    }else {
      return and__3822__auto____11390
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__11400__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__11396 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__11397 = more;
        while(true) {
          var x__11398 = cljs.core.first.call(null, xs__11397);
          var etc__11399 = cljs.core.next.call(null, xs__11397);
          if(cljs.core.truth_(xs__11397)) {
            if(cljs.core.contains_QMARK_.call(null, s__11396, x__11398)) {
              return false
            }else {
              var G__11401 = cljs.core.conj.call(null, s__11396, x__11398);
              var G__11402 = etc__11399;
              s__11396 = G__11401;
              xs__11397 = G__11402;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__11400 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11400__delegate.call(this, x, y, more)
    };
    G__11400.cljs$lang$maxFixedArity = 2;
    G__11400.cljs$lang$applyTo = function(arglist__11403) {
      var x = cljs.core.first(arglist__11403);
      var y = cljs.core.first(cljs.core.next(arglist__11403));
      var more = cljs.core.rest(cljs.core.next(arglist__11403));
      return G__11400__delegate(x, y, more)
    };
    G__11400.cljs$lang$arity$variadic = G__11400__delegate;
    return G__11400
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__11407__11408 = x;
            if(G__11407__11408) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____11409 = null;
                if(cljs.core.truth_(or__3824__auto____11409)) {
                  return or__3824__auto____11409
                }else {
                  return G__11407__11408.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__11407__11408.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__11407__11408)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__11407__11408)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__11414 = cljs.core.count.call(null, xs);
    var yl__11415 = cljs.core.count.call(null, ys);
    if(xl__11414 < yl__11415) {
      return-1
    }else {
      if(xl__11414 > yl__11415) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__11414, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__11416 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____11417 = d__11416 === 0;
        if(and__3822__auto____11417) {
          return n + 1 < len
        }else {
          return and__3822__auto____11417
        }
      }()) {
        var G__11418 = xs;
        var G__11419 = ys;
        var G__11420 = len;
        var G__11421 = n + 1;
        xs = G__11418;
        ys = G__11419;
        len = G__11420;
        n = G__11421;
        continue
      }else {
        return d__11416
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__11423 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__11423)) {
        return r__11423
      }else {
        if(cljs.core.truth_(r__11423)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__11425 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__11425, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__11425)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____11431 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____11431) {
      var s__11432 = temp__3971__auto____11431;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__11432), cljs.core.next.call(null, s__11432))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__11433 = val;
    var coll__11434 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__11434) {
        var nval__11435 = f.call(null, val__11433, cljs.core.first.call(null, coll__11434));
        if(cljs.core.reduced_QMARK_.call(null, nval__11435)) {
          return cljs.core.deref.call(null, nval__11435)
        }else {
          var G__11436 = nval__11435;
          var G__11437 = cljs.core.next.call(null, coll__11434);
          val__11433 = G__11436;
          coll__11434 = G__11437;
          continue
        }
      }else {
        return val__11433
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__11439 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__11439);
  return cljs.core.vec.call(null, a__11439)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__11446__11447 = coll;
      if(G__11446__11447) {
        if(function() {
          var or__3824__auto____11448 = G__11446__11447.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____11448) {
            return or__3824__auto____11448
          }else {
            return G__11446__11447.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__11446__11447.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__11446__11447)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__11446__11447)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__11449__11450 = coll;
      if(G__11449__11450) {
        if(function() {
          var or__3824__auto____11451 = G__11449__11450.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____11451) {
            return or__3824__auto____11451
          }else {
            return G__11449__11450.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__11449__11450.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__11449__11450)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__11449__11450)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__11452 = this;
  return this__11452.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__11453__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__11453 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11453__delegate.call(this, x, y, more)
    };
    G__11453.cljs$lang$maxFixedArity = 2;
    G__11453.cljs$lang$applyTo = function(arglist__11454) {
      var x = cljs.core.first(arglist__11454);
      var y = cljs.core.first(cljs.core.next(arglist__11454));
      var more = cljs.core.rest(cljs.core.next(arglist__11454));
      return G__11453__delegate(x, y, more)
    };
    G__11453.cljs$lang$arity$variadic = G__11453__delegate;
    return G__11453
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__11455__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__11455 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11455__delegate.call(this, x, y, more)
    };
    G__11455.cljs$lang$maxFixedArity = 2;
    G__11455.cljs$lang$applyTo = function(arglist__11456) {
      var x = cljs.core.first(arglist__11456);
      var y = cljs.core.first(cljs.core.next(arglist__11456));
      var more = cljs.core.rest(cljs.core.next(arglist__11456));
      return G__11455__delegate(x, y, more)
    };
    G__11455.cljs$lang$arity$variadic = G__11455__delegate;
    return G__11455
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__11457__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__11457 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11457__delegate.call(this, x, y, more)
    };
    G__11457.cljs$lang$maxFixedArity = 2;
    G__11457.cljs$lang$applyTo = function(arglist__11458) {
      var x = cljs.core.first(arglist__11458);
      var y = cljs.core.first(cljs.core.next(arglist__11458));
      var more = cljs.core.rest(cljs.core.next(arglist__11458));
      return G__11457__delegate(x, y, more)
    };
    G__11457.cljs$lang$arity$variadic = G__11457__delegate;
    return G__11457
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__11459__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__11459 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11459__delegate.call(this, x, y, more)
    };
    G__11459.cljs$lang$maxFixedArity = 2;
    G__11459.cljs$lang$applyTo = function(arglist__11460) {
      var x = cljs.core.first(arglist__11460);
      var y = cljs.core.first(cljs.core.next(arglist__11460));
      var more = cljs.core.rest(cljs.core.next(arglist__11460));
      return G__11459__delegate(x, y, more)
    };
    G__11459.cljs$lang$arity$variadic = G__11459__delegate;
    return G__11459
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__11461__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__11462 = y;
            var G__11463 = cljs.core.first.call(null, more);
            var G__11464 = cljs.core.next.call(null, more);
            x = G__11462;
            y = G__11463;
            more = G__11464;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__11461 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11461__delegate.call(this, x, y, more)
    };
    G__11461.cljs$lang$maxFixedArity = 2;
    G__11461.cljs$lang$applyTo = function(arglist__11465) {
      var x = cljs.core.first(arglist__11465);
      var y = cljs.core.first(cljs.core.next(arglist__11465));
      var more = cljs.core.rest(cljs.core.next(arglist__11465));
      return G__11461__delegate(x, y, more)
    };
    G__11461.cljs$lang$arity$variadic = G__11461__delegate;
    return G__11461
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__11466__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__11467 = y;
            var G__11468 = cljs.core.first.call(null, more);
            var G__11469 = cljs.core.next.call(null, more);
            x = G__11467;
            y = G__11468;
            more = G__11469;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__11466 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11466__delegate.call(this, x, y, more)
    };
    G__11466.cljs$lang$maxFixedArity = 2;
    G__11466.cljs$lang$applyTo = function(arglist__11470) {
      var x = cljs.core.first(arglist__11470);
      var y = cljs.core.first(cljs.core.next(arglist__11470));
      var more = cljs.core.rest(cljs.core.next(arglist__11470));
      return G__11466__delegate(x, y, more)
    };
    G__11466.cljs$lang$arity$variadic = G__11466__delegate;
    return G__11466
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__11471__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__11472 = y;
            var G__11473 = cljs.core.first.call(null, more);
            var G__11474 = cljs.core.next.call(null, more);
            x = G__11472;
            y = G__11473;
            more = G__11474;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__11471 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11471__delegate.call(this, x, y, more)
    };
    G__11471.cljs$lang$maxFixedArity = 2;
    G__11471.cljs$lang$applyTo = function(arglist__11475) {
      var x = cljs.core.first(arglist__11475);
      var y = cljs.core.first(cljs.core.next(arglist__11475));
      var more = cljs.core.rest(cljs.core.next(arglist__11475));
      return G__11471__delegate(x, y, more)
    };
    G__11471.cljs$lang$arity$variadic = G__11471__delegate;
    return G__11471
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__11476__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__11477 = y;
            var G__11478 = cljs.core.first.call(null, more);
            var G__11479 = cljs.core.next.call(null, more);
            x = G__11477;
            y = G__11478;
            more = G__11479;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__11476 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11476__delegate.call(this, x, y, more)
    };
    G__11476.cljs$lang$maxFixedArity = 2;
    G__11476.cljs$lang$applyTo = function(arglist__11480) {
      var x = cljs.core.first(arglist__11480);
      var y = cljs.core.first(cljs.core.next(arglist__11480));
      var more = cljs.core.rest(cljs.core.next(arglist__11480));
      return G__11476__delegate(x, y, more)
    };
    G__11476.cljs$lang$arity$variadic = G__11476__delegate;
    return G__11476
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__11481__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__11481 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11481__delegate.call(this, x, y, more)
    };
    G__11481.cljs$lang$maxFixedArity = 2;
    G__11481.cljs$lang$applyTo = function(arglist__11482) {
      var x = cljs.core.first(arglist__11482);
      var y = cljs.core.first(cljs.core.next(arglist__11482));
      var more = cljs.core.rest(cljs.core.next(arglist__11482));
      return G__11481__delegate(x, y, more)
    };
    G__11481.cljs$lang$arity$variadic = G__11481__delegate;
    return G__11481
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__11483__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__11483 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11483__delegate.call(this, x, y, more)
    };
    G__11483.cljs$lang$maxFixedArity = 2;
    G__11483.cljs$lang$applyTo = function(arglist__11484) {
      var x = cljs.core.first(arglist__11484);
      var y = cljs.core.first(cljs.core.next(arglist__11484));
      var more = cljs.core.rest(cljs.core.next(arglist__11484));
      return G__11483__delegate(x, y, more)
    };
    G__11483.cljs$lang$arity$variadic = G__11483__delegate;
    return G__11483
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__11486 = n % d;
  return cljs.core.fix.call(null, (n - rem__11486) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__11488 = cljs.core.quot.call(null, n, d);
  return n - d * q__11488
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__11491 = v - (v >> 1 & 1431655765);
  var v__11492 = (v__11491 & 858993459) + (v__11491 >> 2 & 858993459);
  return(v__11492 + (v__11492 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__11493__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__11494 = y;
            var G__11495 = cljs.core.first.call(null, more);
            var G__11496 = cljs.core.next.call(null, more);
            x = G__11494;
            y = G__11495;
            more = G__11496;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__11493 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11493__delegate.call(this, x, y, more)
    };
    G__11493.cljs$lang$maxFixedArity = 2;
    G__11493.cljs$lang$applyTo = function(arglist__11497) {
      var x = cljs.core.first(arglist__11497);
      var y = cljs.core.first(cljs.core.next(arglist__11497));
      var more = cljs.core.rest(cljs.core.next(arglist__11497));
      return G__11493__delegate(x, y, more)
    };
    G__11493.cljs$lang$arity$variadic = G__11493__delegate;
    return G__11493
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__11501 = n;
  var xs__11502 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____11503 = xs__11502;
      if(and__3822__auto____11503) {
        return n__11501 > 0
      }else {
        return and__3822__auto____11503
      }
    }())) {
      var G__11504 = n__11501 - 1;
      var G__11505 = cljs.core.next.call(null, xs__11502);
      n__11501 = G__11504;
      xs__11502 = G__11505;
      continue
    }else {
      return xs__11502
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__11506__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__11507 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__11508 = cljs.core.next.call(null, more);
            sb = G__11507;
            more = G__11508;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__11506 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11506__delegate.call(this, x, ys)
    };
    G__11506.cljs$lang$maxFixedArity = 1;
    G__11506.cljs$lang$applyTo = function(arglist__11509) {
      var x = cljs.core.first(arglist__11509);
      var ys = cljs.core.rest(arglist__11509);
      return G__11506__delegate(x, ys)
    };
    G__11506.cljs$lang$arity$variadic = G__11506__delegate;
    return G__11506
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__11510__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__11511 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__11512 = cljs.core.next.call(null, more);
            sb = G__11511;
            more = G__11512;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__11510 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11510__delegate.call(this, x, ys)
    };
    G__11510.cljs$lang$maxFixedArity = 1;
    G__11510.cljs$lang$applyTo = function(arglist__11513) {
      var x = cljs.core.first(arglist__11513);
      var ys = cljs.core.rest(arglist__11513);
      return G__11510__delegate(x, ys)
    };
    G__11510.cljs$lang$arity$variadic = G__11510__delegate;
    return G__11510
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__11514) {
    var fmt = cljs.core.first(arglist__11514);
    var args = cljs.core.rest(arglist__11514);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__11517 = cljs.core.seq.call(null, x);
    var ys__11518 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__11517 == null) {
        return ys__11518 == null
      }else {
        if(ys__11518 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__11517), cljs.core.first.call(null, ys__11518))) {
            var G__11519 = cljs.core.next.call(null, xs__11517);
            var G__11520 = cljs.core.next.call(null, ys__11518);
            xs__11517 = G__11519;
            ys__11518 = G__11520;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__11521_SHARP_, p2__11522_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__11521_SHARP_, cljs.core.hash.call(null, p2__11522_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__11526 = 0;
  var s__11527 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__11527) {
      var e__11528 = cljs.core.first.call(null, s__11527);
      var G__11529 = (h__11526 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__11528)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__11528)))) % 4503599627370496;
      var G__11530 = cljs.core.next.call(null, s__11527);
      h__11526 = G__11529;
      s__11527 = G__11530;
      continue
    }else {
      return h__11526
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__11534 = 0;
  var s__11535 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__11535) {
      var e__11536 = cljs.core.first.call(null, s__11535);
      var G__11537 = (h__11534 + cljs.core.hash.call(null, e__11536)) % 4503599627370496;
      var G__11538 = cljs.core.next.call(null, s__11535);
      h__11534 = G__11537;
      s__11535 = G__11538;
      continue
    }else {
      return h__11534
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__11559__11560 = cljs.core.seq.call(null, fn_map);
  if(G__11559__11560) {
    var G__11562__11564 = cljs.core.first.call(null, G__11559__11560);
    var vec__11563__11565 = G__11562__11564;
    var key_name__11566 = cljs.core.nth.call(null, vec__11563__11565, 0, null);
    var f__11567 = cljs.core.nth.call(null, vec__11563__11565, 1, null);
    var G__11559__11568 = G__11559__11560;
    var G__11562__11569 = G__11562__11564;
    var G__11559__11570 = G__11559__11568;
    while(true) {
      var vec__11571__11572 = G__11562__11569;
      var key_name__11573 = cljs.core.nth.call(null, vec__11571__11572, 0, null);
      var f__11574 = cljs.core.nth.call(null, vec__11571__11572, 1, null);
      var G__11559__11575 = G__11559__11570;
      var str_name__11576 = cljs.core.name.call(null, key_name__11573);
      obj[str_name__11576] = f__11574;
      var temp__3974__auto____11577 = cljs.core.next.call(null, G__11559__11575);
      if(temp__3974__auto____11577) {
        var G__11559__11578 = temp__3974__auto____11577;
        var G__11579 = cljs.core.first.call(null, G__11559__11578);
        var G__11580 = G__11559__11578;
        G__11562__11569 = G__11579;
        G__11559__11570 = G__11580;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11581 = this;
  var h__2093__auto____11582 = this__11581.__hash;
  if(!(h__2093__auto____11582 == null)) {
    return h__2093__auto____11582
  }else {
    var h__2093__auto____11583 = cljs.core.hash_coll.call(null, coll);
    this__11581.__hash = h__2093__auto____11583;
    return h__2093__auto____11583
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__11584 = this;
  if(this__11584.count === 1) {
    return null
  }else {
    return this__11584.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11585 = this;
  return new cljs.core.List(this__11585.meta, o, coll, this__11585.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__11586 = this;
  var this__11587 = this;
  return cljs.core.pr_str.call(null, this__11587)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11588 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11589 = this;
  return this__11589.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__11590 = this;
  return this__11590.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__11591 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11592 = this;
  return this__11592.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11593 = this;
  if(this__11593.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__11593.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11594 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11595 = this;
  return new cljs.core.List(meta, this__11595.first, this__11595.rest, this__11595.count, this__11595.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11596 = this;
  return this__11596.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11597 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11598 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__11599 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11600 = this;
  return new cljs.core.List(this__11600.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__11601 = this;
  var this__11602 = this;
  return cljs.core.pr_str.call(null, this__11602)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11603 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11604 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__11605 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__11606 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11607 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11608 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11609 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11610 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11611 = this;
  return this__11611.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11612 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__11616__11617 = coll;
  if(G__11616__11617) {
    if(function() {
      var or__3824__auto____11618 = G__11616__11617.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____11618) {
        return or__3824__auto____11618
      }else {
        return G__11616__11617.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__11616__11617.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__11616__11617)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__11616__11617)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__11619__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__11619 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11619__delegate.call(this, x, y, z, items)
    };
    G__11619.cljs$lang$maxFixedArity = 3;
    G__11619.cljs$lang$applyTo = function(arglist__11620) {
      var x = cljs.core.first(arglist__11620);
      var y = cljs.core.first(cljs.core.next(arglist__11620));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11620)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11620)));
      return G__11619__delegate(x, y, z, items)
    };
    G__11619.cljs$lang$arity$variadic = G__11619__delegate;
    return G__11619
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11621 = this;
  var h__2093__auto____11622 = this__11621.__hash;
  if(!(h__2093__auto____11622 == null)) {
    return h__2093__auto____11622
  }else {
    var h__2093__auto____11623 = cljs.core.hash_coll.call(null, coll);
    this__11621.__hash = h__2093__auto____11623;
    return h__2093__auto____11623
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__11624 = this;
  if(this__11624.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__11624.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11625 = this;
  return new cljs.core.Cons(null, o, coll, this__11625.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__11626 = this;
  var this__11627 = this;
  return cljs.core.pr_str.call(null, this__11627)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11628 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11629 = this;
  return this__11629.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11630 = this;
  if(this__11630.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__11630.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11631 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11632 = this;
  return new cljs.core.Cons(meta, this__11632.first, this__11632.rest, this__11632.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11633 = this;
  return this__11633.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11634 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__11634.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____11639 = coll == null;
    if(or__3824__auto____11639) {
      return or__3824__auto____11639
    }else {
      var G__11640__11641 = coll;
      if(G__11640__11641) {
        if(function() {
          var or__3824__auto____11642 = G__11640__11641.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____11642) {
            return or__3824__auto____11642
          }else {
            return G__11640__11641.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__11640__11641.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__11640__11641)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__11640__11641)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__11646__11647 = x;
  if(G__11646__11647) {
    if(function() {
      var or__3824__auto____11648 = G__11646__11647.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____11648) {
        return or__3824__auto____11648
      }else {
        return G__11646__11647.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__11646__11647.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__11646__11647)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__11646__11647)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__11649 = null;
  var G__11649__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__11649__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__11649 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__11649__2.call(this, string, f);
      case 3:
        return G__11649__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11649
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__11650 = null;
  var G__11650__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__11650__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__11650 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11650__2.call(this, string, k);
      case 3:
        return G__11650__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11650
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__11651 = null;
  var G__11651__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__11651__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__11651 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11651__2.call(this, string, n);
      case 3:
        return G__11651__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11651
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__11663 = null;
  var G__11663__2 = function(this_sym11654, coll) {
    var this__11656 = this;
    var this_sym11654__11657 = this;
    var ___11658 = this_sym11654__11657;
    if(coll == null) {
      return null
    }else {
      var strobj__11659 = coll.strobj;
      if(strobj__11659 == null) {
        return cljs.core._lookup.call(null, coll, this__11656.k, null)
      }else {
        return strobj__11659[this__11656.k]
      }
    }
  };
  var G__11663__3 = function(this_sym11655, coll, not_found) {
    var this__11656 = this;
    var this_sym11655__11660 = this;
    var ___11661 = this_sym11655__11660;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__11656.k, not_found)
    }
  };
  G__11663 = function(this_sym11655, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11663__2.call(this, this_sym11655, coll);
      case 3:
        return G__11663__3.call(this, this_sym11655, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11663
}();
cljs.core.Keyword.prototype.apply = function(this_sym11652, args11653) {
  var this__11662 = this;
  return this_sym11652.call.apply(this_sym11652, [this_sym11652].concat(args11653.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__11672 = null;
  var G__11672__2 = function(this_sym11666, coll) {
    var this_sym11666__11668 = this;
    var this__11669 = this_sym11666__11668;
    return cljs.core._lookup.call(null, coll, this__11669.toString(), null)
  };
  var G__11672__3 = function(this_sym11667, coll, not_found) {
    var this_sym11667__11670 = this;
    var this__11671 = this_sym11667__11670;
    return cljs.core._lookup.call(null, coll, this__11671.toString(), not_found)
  };
  G__11672 = function(this_sym11667, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11672__2.call(this, this_sym11667, coll);
      case 3:
        return G__11672__3.call(this, this_sym11667, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11672
}();
String.prototype.apply = function(this_sym11664, args11665) {
  return this_sym11664.call.apply(this_sym11664, [this_sym11664].concat(args11665.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__11674 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__11674
  }else {
    lazy_seq.x = x__11674.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11675 = this;
  var h__2093__auto____11676 = this__11675.__hash;
  if(!(h__2093__auto____11676 == null)) {
    return h__2093__auto____11676
  }else {
    var h__2093__auto____11677 = cljs.core.hash_coll.call(null, coll);
    this__11675.__hash = h__2093__auto____11677;
    return h__2093__auto____11677
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__11678 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11679 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__11680 = this;
  var this__11681 = this;
  return cljs.core.pr_str.call(null, this__11681)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11682 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11683 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11684 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11685 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11686 = this;
  return new cljs.core.LazySeq(meta, this__11686.realized, this__11686.x, this__11686.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11687 = this;
  return this__11687.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11688 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__11688.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__11689 = this;
  return this__11689.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__11690 = this;
  var ___11691 = this;
  this__11690.buf[this__11690.end] = o;
  return this__11690.end = this__11690.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__11692 = this;
  var ___11693 = this;
  var ret__11694 = new cljs.core.ArrayChunk(this__11692.buf, 0, this__11692.end);
  this__11692.buf = null;
  return ret__11694
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__11695 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__11695.arr[this__11695.off], this__11695.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__11696 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__11696.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__11697 = this;
  if(this__11697.off === this__11697.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__11697.arr, this__11697.off + 1, this__11697.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__11698 = this;
  return this__11698.arr[this__11698.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__11699 = this;
  if(function() {
    var and__3822__auto____11700 = i >= 0;
    if(and__3822__auto____11700) {
      return i < this__11699.end - this__11699.off
    }else {
      return and__3822__auto____11700
    }
  }()) {
    return this__11699.arr[this__11699.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__11701 = this;
  return this__11701.end - this__11701.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__11702 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11703 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11704 = this;
  return cljs.core._nth.call(null, this__11704.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11705 = this;
  if(cljs.core._count.call(null, this__11705.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__11705.chunk), this__11705.more, this__11705.meta)
  }else {
    if(this__11705.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__11705.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__11706 = this;
  if(this__11706.more == null) {
    return null
  }else {
    return this__11706.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11707 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__11708 = this;
  return new cljs.core.ChunkedCons(this__11708.chunk, this__11708.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11709 = this;
  return this__11709.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__11710 = this;
  return this__11710.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__11711 = this;
  if(this__11711.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__11711.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__11715__11716 = s;
    if(G__11715__11716) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____11717 = null;
        if(cljs.core.truth_(or__3824__auto____11717)) {
          return or__3824__auto____11717
        }else {
          return G__11715__11716.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__11715__11716.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__11715__11716)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__11715__11716)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__11720 = [];
  var s__11721 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__11721)) {
      ary__11720.push(cljs.core.first.call(null, s__11721));
      var G__11722 = cljs.core.next.call(null, s__11721);
      s__11721 = G__11722;
      continue
    }else {
      return ary__11720
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__11726 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__11727 = 0;
  var xs__11728 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__11728) {
      ret__11726[i__11727] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__11728));
      var G__11729 = i__11727 + 1;
      var G__11730 = cljs.core.next.call(null, xs__11728);
      i__11727 = G__11729;
      xs__11728 = G__11730;
      continue
    }else {
    }
    break
  }
  return ret__11726
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__11738 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__11739 = cljs.core.seq.call(null, init_val_or_seq);
      var i__11740 = 0;
      var s__11741 = s__11739;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____11742 = s__11741;
          if(and__3822__auto____11742) {
            return i__11740 < size
          }else {
            return and__3822__auto____11742
          }
        }())) {
          a__11738[i__11740] = cljs.core.first.call(null, s__11741);
          var G__11745 = i__11740 + 1;
          var G__11746 = cljs.core.next.call(null, s__11741);
          i__11740 = G__11745;
          s__11741 = G__11746;
          continue
        }else {
          return a__11738
        }
        break
      }
    }else {
      var n__2428__auto____11743 = size;
      var i__11744 = 0;
      while(true) {
        if(i__11744 < n__2428__auto____11743) {
          a__11738[i__11744] = init_val_or_seq;
          var G__11747 = i__11744 + 1;
          i__11744 = G__11747;
          continue
        }else {
        }
        break
      }
      return a__11738
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__11755 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__11756 = cljs.core.seq.call(null, init_val_or_seq);
      var i__11757 = 0;
      var s__11758 = s__11756;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____11759 = s__11758;
          if(and__3822__auto____11759) {
            return i__11757 < size
          }else {
            return and__3822__auto____11759
          }
        }())) {
          a__11755[i__11757] = cljs.core.first.call(null, s__11758);
          var G__11762 = i__11757 + 1;
          var G__11763 = cljs.core.next.call(null, s__11758);
          i__11757 = G__11762;
          s__11758 = G__11763;
          continue
        }else {
          return a__11755
        }
        break
      }
    }else {
      var n__2428__auto____11760 = size;
      var i__11761 = 0;
      while(true) {
        if(i__11761 < n__2428__auto____11760) {
          a__11755[i__11761] = init_val_or_seq;
          var G__11764 = i__11761 + 1;
          i__11761 = G__11764;
          continue
        }else {
        }
        break
      }
      return a__11755
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__11772 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__11773 = cljs.core.seq.call(null, init_val_or_seq);
      var i__11774 = 0;
      var s__11775 = s__11773;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____11776 = s__11775;
          if(and__3822__auto____11776) {
            return i__11774 < size
          }else {
            return and__3822__auto____11776
          }
        }())) {
          a__11772[i__11774] = cljs.core.first.call(null, s__11775);
          var G__11779 = i__11774 + 1;
          var G__11780 = cljs.core.next.call(null, s__11775);
          i__11774 = G__11779;
          s__11775 = G__11780;
          continue
        }else {
          return a__11772
        }
        break
      }
    }else {
      var n__2428__auto____11777 = size;
      var i__11778 = 0;
      while(true) {
        if(i__11778 < n__2428__auto____11777) {
          a__11772[i__11778] = init_val_or_seq;
          var G__11781 = i__11778 + 1;
          i__11778 = G__11781;
          continue
        }else {
        }
        break
      }
      return a__11772
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__11786 = s;
    var i__11787 = n;
    var sum__11788 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____11789 = i__11787 > 0;
        if(and__3822__auto____11789) {
          return cljs.core.seq.call(null, s__11786)
        }else {
          return and__3822__auto____11789
        }
      }())) {
        var G__11790 = cljs.core.next.call(null, s__11786);
        var G__11791 = i__11787 - 1;
        var G__11792 = sum__11788 + 1;
        s__11786 = G__11790;
        i__11787 = G__11791;
        sum__11788 = G__11792;
        continue
      }else {
        return sum__11788
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__11797 = cljs.core.seq.call(null, x);
      if(s__11797) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__11797)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__11797), concat.call(null, cljs.core.chunk_rest.call(null, s__11797), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__11797), concat.call(null, cljs.core.rest.call(null, s__11797), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__11801__delegate = function(x, y, zs) {
      var cat__11800 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__11799 = cljs.core.seq.call(null, xys);
          if(xys__11799) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__11799)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__11799), cat.call(null, cljs.core.chunk_rest.call(null, xys__11799), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__11799), cat.call(null, cljs.core.rest.call(null, xys__11799), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__11800.call(null, concat.call(null, x, y), zs)
    };
    var G__11801 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11801__delegate.call(this, x, y, zs)
    };
    G__11801.cljs$lang$maxFixedArity = 2;
    G__11801.cljs$lang$applyTo = function(arglist__11802) {
      var x = cljs.core.first(arglist__11802);
      var y = cljs.core.first(cljs.core.next(arglist__11802));
      var zs = cljs.core.rest(cljs.core.next(arglist__11802));
      return G__11801__delegate(x, y, zs)
    };
    G__11801.cljs$lang$arity$variadic = G__11801__delegate;
    return G__11801
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__11803__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__11803 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__11803__delegate.call(this, a, b, c, d, more)
    };
    G__11803.cljs$lang$maxFixedArity = 4;
    G__11803.cljs$lang$applyTo = function(arglist__11804) {
      var a = cljs.core.first(arglist__11804);
      var b = cljs.core.first(cljs.core.next(arglist__11804));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11804)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11804))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11804))));
      return G__11803__delegate(a, b, c, d, more)
    };
    G__11803.cljs$lang$arity$variadic = G__11803__delegate;
    return G__11803
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__11846 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__11847 = cljs.core._first.call(null, args__11846);
    var args__11848 = cljs.core._rest.call(null, args__11846);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__11847)
      }else {
        return f.call(null, a__11847)
      }
    }else {
      var b__11849 = cljs.core._first.call(null, args__11848);
      var args__11850 = cljs.core._rest.call(null, args__11848);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__11847, b__11849)
        }else {
          return f.call(null, a__11847, b__11849)
        }
      }else {
        var c__11851 = cljs.core._first.call(null, args__11850);
        var args__11852 = cljs.core._rest.call(null, args__11850);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__11847, b__11849, c__11851)
          }else {
            return f.call(null, a__11847, b__11849, c__11851)
          }
        }else {
          var d__11853 = cljs.core._first.call(null, args__11852);
          var args__11854 = cljs.core._rest.call(null, args__11852);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__11847, b__11849, c__11851, d__11853)
            }else {
              return f.call(null, a__11847, b__11849, c__11851, d__11853)
            }
          }else {
            var e__11855 = cljs.core._first.call(null, args__11854);
            var args__11856 = cljs.core._rest.call(null, args__11854);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__11847, b__11849, c__11851, d__11853, e__11855)
              }else {
                return f.call(null, a__11847, b__11849, c__11851, d__11853, e__11855)
              }
            }else {
              var f__11857 = cljs.core._first.call(null, args__11856);
              var args__11858 = cljs.core._rest.call(null, args__11856);
              if(argc === 6) {
                if(f__11857.cljs$lang$arity$6) {
                  return f__11857.cljs$lang$arity$6(a__11847, b__11849, c__11851, d__11853, e__11855, f__11857)
                }else {
                  return f__11857.call(null, a__11847, b__11849, c__11851, d__11853, e__11855, f__11857)
                }
              }else {
                var g__11859 = cljs.core._first.call(null, args__11858);
                var args__11860 = cljs.core._rest.call(null, args__11858);
                if(argc === 7) {
                  if(f__11857.cljs$lang$arity$7) {
                    return f__11857.cljs$lang$arity$7(a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859)
                  }else {
                    return f__11857.call(null, a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859)
                  }
                }else {
                  var h__11861 = cljs.core._first.call(null, args__11860);
                  var args__11862 = cljs.core._rest.call(null, args__11860);
                  if(argc === 8) {
                    if(f__11857.cljs$lang$arity$8) {
                      return f__11857.cljs$lang$arity$8(a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861)
                    }else {
                      return f__11857.call(null, a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861)
                    }
                  }else {
                    var i__11863 = cljs.core._first.call(null, args__11862);
                    var args__11864 = cljs.core._rest.call(null, args__11862);
                    if(argc === 9) {
                      if(f__11857.cljs$lang$arity$9) {
                        return f__11857.cljs$lang$arity$9(a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863)
                      }else {
                        return f__11857.call(null, a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863)
                      }
                    }else {
                      var j__11865 = cljs.core._first.call(null, args__11864);
                      var args__11866 = cljs.core._rest.call(null, args__11864);
                      if(argc === 10) {
                        if(f__11857.cljs$lang$arity$10) {
                          return f__11857.cljs$lang$arity$10(a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863, j__11865)
                        }else {
                          return f__11857.call(null, a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863, j__11865)
                        }
                      }else {
                        var k__11867 = cljs.core._first.call(null, args__11866);
                        var args__11868 = cljs.core._rest.call(null, args__11866);
                        if(argc === 11) {
                          if(f__11857.cljs$lang$arity$11) {
                            return f__11857.cljs$lang$arity$11(a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863, j__11865, k__11867)
                          }else {
                            return f__11857.call(null, a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863, j__11865, k__11867)
                          }
                        }else {
                          var l__11869 = cljs.core._first.call(null, args__11868);
                          var args__11870 = cljs.core._rest.call(null, args__11868);
                          if(argc === 12) {
                            if(f__11857.cljs$lang$arity$12) {
                              return f__11857.cljs$lang$arity$12(a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863, j__11865, k__11867, l__11869)
                            }else {
                              return f__11857.call(null, a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863, j__11865, k__11867, l__11869)
                            }
                          }else {
                            var m__11871 = cljs.core._first.call(null, args__11870);
                            var args__11872 = cljs.core._rest.call(null, args__11870);
                            if(argc === 13) {
                              if(f__11857.cljs$lang$arity$13) {
                                return f__11857.cljs$lang$arity$13(a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863, j__11865, k__11867, l__11869, m__11871)
                              }else {
                                return f__11857.call(null, a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863, j__11865, k__11867, l__11869, m__11871)
                              }
                            }else {
                              var n__11873 = cljs.core._first.call(null, args__11872);
                              var args__11874 = cljs.core._rest.call(null, args__11872);
                              if(argc === 14) {
                                if(f__11857.cljs$lang$arity$14) {
                                  return f__11857.cljs$lang$arity$14(a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863, j__11865, k__11867, l__11869, m__11871, n__11873)
                                }else {
                                  return f__11857.call(null, a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863, j__11865, k__11867, l__11869, m__11871, n__11873)
                                }
                              }else {
                                var o__11875 = cljs.core._first.call(null, args__11874);
                                var args__11876 = cljs.core._rest.call(null, args__11874);
                                if(argc === 15) {
                                  if(f__11857.cljs$lang$arity$15) {
                                    return f__11857.cljs$lang$arity$15(a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863, j__11865, k__11867, l__11869, m__11871, n__11873, o__11875)
                                  }else {
                                    return f__11857.call(null, a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863, j__11865, k__11867, l__11869, m__11871, n__11873, o__11875)
                                  }
                                }else {
                                  var p__11877 = cljs.core._first.call(null, args__11876);
                                  var args__11878 = cljs.core._rest.call(null, args__11876);
                                  if(argc === 16) {
                                    if(f__11857.cljs$lang$arity$16) {
                                      return f__11857.cljs$lang$arity$16(a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863, j__11865, k__11867, l__11869, m__11871, n__11873, o__11875, p__11877)
                                    }else {
                                      return f__11857.call(null, a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863, j__11865, k__11867, l__11869, m__11871, n__11873, o__11875, p__11877)
                                    }
                                  }else {
                                    var q__11879 = cljs.core._first.call(null, args__11878);
                                    var args__11880 = cljs.core._rest.call(null, args__11878);
                                    if(argc === 17) {
                                      if(f__11857.cljs$lang$arity$17) {
                                        return f__11857.cljs$lang$arity$17(a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863, j__11865, k__11867, l__11869, m__11871, n__11873, o__11875, p__11877, q__11879)
                                      }else {
                                        return f__11857.call(null, a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863, j__11865, k__11867, l__11869, m__11871, n__11873, o__11875, p__11877, q__11879)
                                      }
                                    }else {
                                      var r__11881 = cljs.core._first.call(null, args__11880);
                                      var args__11882 = cljs.core._rest.call(null, args__11880);
                                      if(argc === 18) {
                                        if(f__11857.cljs$lang$arity$18) {
                                          return f__11857.cljs$lang$arity$18(a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863, j__11865, k__11867, l__11869, m__11871, n__11873, o__11875, p__11877, q__11879, r__11881)
                                        }else {
                                          return f__11857.call(null, a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863, j__11865, k__11867, l__11869, m__11871, n__11873, o__11875, p__11877, q__11879, r__11881)
                                        }
                                      }else {
                                        var s__11883 = cljs.core._first.call(null, args__11882);
                                        var args__11884 = cljs.core._rest.call(null, args__11882);
                                        if(argc === 19) {
                                          if(f__11857.cljs$lang$arity$19) {
                                            return f__11857.cljs$lang$arity$19(a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863, j__11865, k__11867, l__11869, m__11871, n__11873, o__11875, p__11877, q__11879, r__11881, s__11883)
                                          }else {
                                            return f__11857.call(null, a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863, j__11865, k__11867, l__11869, m__11871, n__11873, o__11875, p__11877, q__11879, r__11881, s__11883)
                                          }
                                        }else {
                                          var t__11885 = cljs.core._first.call(null, args__11884);
                                          var args__11886 = cljs.core._rest.call(null, args__11884);
                                          if(argc === 20) {
                                            if(f__11857.cljs$lang$arity$20) {
                                              return f__11857.cljs$lang$arity$20(a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863, j__11865, k__11867, l__11869, m__11871, n__11873, o__11875, p__11877, q__11879, r__11881, s__11883, t__11885)
                                            }else {
                                              return f__11857.call(null, a__11847, b__11849, c__11851, d__11853, e__11855, f__11857, g__11859, h__11861, i__11863, j__11865, k__11867, l__11869, m__11871, n__11873, o__11875, p__11877, q__11879, r__11881, s__11883, t__11885)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__11901 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__11902 = cljs.core.bounded_count.call(null, args, fixed_arity__11901 + 1);
      if(bc__11902 <= fixed_arity__11901) {
        return cljs.core.apply_to.call(null, f, bc__11902, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__11903 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__11904 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__11905 = cljs.core.bounded_count.call(null, arglist__11903, fixed_arity__11904 + 1);
      if(bc__11905 <= fixed_arity__11904) {
        return cljs.core.apply_to.call(null, f, bc__11905, arglist__11903)
      }else {
        return f.cljs$lang$applyTo(arglist__11903)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__11903))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__11906 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__11907 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__11908 = cljs.core.bounded_count.call(null, arglist__11906, fixed_arity__11907 + 1);
      if(bc__11908 <= fixed_arity__11907) {
        return cljs.core.apply_to.call(null, f, bc__11908, arglist__11906)
      }else {
        return f.cljs$lang$applyTo(arglist__11906)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__11906))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__11909 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__11910 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__11911 = cljs.core.bounded_count.call(null, arglist__11909, fixed_arity__11910 + 1);
      if(bc__11911 <= fixed_arity__11910) {
        return cljs.core.apply_to.call(null, f, bc__11911, arglist__11909)
      }else {
        return f.cljs$lang$applyTo(arglist__11909)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__11909))
    }
  };
  var apply__6 = function() {
    var G__11915__delegate = function(f, a, b, c, d, args) {
      var arglist__11912 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__11913 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__11914 = cljs.core.bounded_count.call(null, arglist__11912, fixed_arity__11913 + 1);
        if(bc__11914 <= fixed_arity__11913) {
          return cljs.core.apply_to.call(null, f, bc__11914, arglist__11912)
        }else {
          return f.cljs$lang$applyTo(arglist__11912)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__11912))
      }
    };
    var G__11915 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__11915__delegate.call(this, f, a, b, c, d, args)
    };
    G__11915.cljs$lang$maxFixedArity = 5;
    G__11915.cljs$lang$applyTo = function(arglist__11916) {
      var f = cljs.core.first(arglist__11916);
      var a = cljs.core.first(cljs.core.next(arglist__11916));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11916)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11916))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11916)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11916)))));
      return G__11915__delegate(f, a, b, c, d, args)
    };
    G__11915.cljs$lang$arity$variadic = G__11915__delegate;
    return G__11915
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__11917) {
    var obj = cljs.core.first(arglist__11917);
    var f = cljs.core.first(cljs.core.next(arglist__11917));
    var args = cljs.core.rest(cljs.core.next(arglist__11917));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__11918__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__11918 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11918__delegate.call(this, x, y, more)
    };
    G__11918.cljs$lang$maxFixedArity = 2;
    G__11918.cljs$lang$applyTo = function(arglist__11919) {
      var x = cljs.core.first(arglist__11919);
      var y = cljs.core.first(cljs.core.next(arglist__11919));
      var more = cljs.core.rest(cljs.core.next(arglist__11919));
      return G__11918__delegate(x, y, more)
    };
    G__11918.cljs$lang$arity$variadic = G__11918__delegate;
    return G__11918
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__11920 = pred;
        var G__11921 = cljs.core.next.call(null, coll);
        pred = G__11920;
        coll = G__11921;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____11923 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____11923)) {
        return or__3824__auto____11923
      }else {
        var G__11924 = pred;
        var G__11925 = cljs.core.next.call(null, coll);
        pred = G__11924;
        coll = G__11925;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__11926 = null;
    var G__11926__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__11926__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__11926__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__11926__3 = function() {
      var G__11927__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__11927 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__11927__delegate.call(this, x, y, zs)
      };
      G__11927.cljs$lang$maxFixedArity = 2;
      G__11927.cljs$lang$applyTo = function(arglist__11928) {
        var x = cljs.core.first(arglist__11928);
        var y = cljs.core.first(cljs.core.next(arglist__11928));
        var zs = cljs.core.rest(cljs.core.next(arglist__11928));
        return G__11927__delegate(x, y, zs)
      };
      G__11927.cljs$lang$arity$variadic = G__11927__delegate;
      return G__11927
    }();
    G__11926 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__11926__0.call(this);
        case 1:
          return G__11926__1.call(this, x);
        case 2:
          return G__11926__2.call(this, x, y);
        default:
          return G__11926__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__11926.cljs$lang$maxFixedArity = 2;
    G__11926.cljs$lang$applyTo = G__11926__3.cljs$lang$applyTo;
    return G__11926
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__11929__delegate = function(args) {
      return x
    };
    var G__11929 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__11929__delegate.call(this, args)
    };
    G__11929.cljs$lang$maxFixedArity = 0;
    G__11929.cljs$lang$applyTo = function(arglist__11930) {
      var args = cljs.core.seq(arglist__11930);
      return G__11929__delegate(args)
    };
    G__11929.cljs$lang$arity$variadic = G__11929__delegate;
    return G__11929
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__11937 = null;
      var G__11937__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__11937__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__11937__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__11937__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__11937__4 = function() {
        var G__11938__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__11938 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11938__delegate.call(this, x, y, z, args)
        };
        G__11938.cljs$lang$maxFixedArity = 3;
        G__11938.cljs$lang$applyTo = function(arglist__11939) {
          var x = cljs.core.first(arglist__11939);
          var y = cljs.core.first(cljs.core.next(arglist__11939));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11939)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11939)));
          return G__11938__delegate(x, y, z, args)
        };
        G__11938.cljs$lang$arity$variadic = G__11938__delegate;
        return G__11938
      }();
      G__11937 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11937__0.call(this);
          case 1:
            return G__11937__1.call(this, x);
          case 2:
            return G__11937__2.call(this, x, y);
          case 3:
            return G__11937__3.call(this, x, y, z);
          default:
            return G__11937__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11937.cljs$lang$maxFixedArity = 3;
      G__11937.cljs$lang$applyTo = G__11937__4.cljs$lang$applyTo;
      return G__11937
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__11940 = null;
      var G__11940__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__11940__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__11940__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__11940__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__11940__4 = function() {
        var G__11941__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__11941 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11941__delegate.call(this, x, y, z, args)
        };
        G__11941.cljs$lang$maxFixedArity = 3;
        G__11941.cljs$lang$applyTo = function(arglist__11942) {
          var x = cljs.core.first(arglist__11942);
          var y = cljs.core.first(cljs.core.next(arglist__11942));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11942)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11942)));
          return G__11941__delegate(x, y, z, args)
        };
        G__11941.cljs$lang$arity$variadic = G__11941__delegate;
        return G__11941
      }();
      G__11940 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11940__0.call(this);
          case 1:
            return G__11940__1.call(this, x);
          case 2:
            return G__11940__2.call(this, x, y);
          case 3:
            return G__11940__3.call(this, x, y, z);
          default:
            return G__11940__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11940.cljs$lang$maxFixedArity = 3;
      G__11940.cljs$lang$applyTo = G__11940__4.cljs$lang$applyTo;
      return G__11940
    }()
  };
  var comp__4 = function() {
    var G__11943__delegate = function(f1, f2, f3, fs) {
      var fs__11934 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__11944__delegate = function(args) {
          var ret__11935 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__11934), args);
          var fs__11936 = cljs.core.next.call(null, fs__11934);
          while(true) {
            if(fs__11936) {
              var G__11945 = cljs.core.first.call(null, fs__11936).call(null, ret__11935);
              var G__11946 = cljs.core.next.call(null, fs__11936);
              ret__11935 = G__11945;
              fs__11936 = G__11946;
              continue
            }else {
              return ret__11935
            }
            break
          }
        };
        var G__11944 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__11944__delegate.call(this, args)
        };
        G__11944.cljs$lang$maxFixedArity = 0;
        G__11944.cljs$lang$applyTo = function(arglist__11947) {
          var args = cljs.core.seq(arglist__11947);
          return G__11944__delegate(args)
        };
        G__11944.cljs$lang$arity$variadic = G__11944__delegate;
        return G__11944
      }()
    };
    var G__11943 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11943__delegate.call(this, f1, f2, f3, fs)
    };
    G__11943.cljs$lang$maxFixedArity = 3;
    G__11943.cljs$lang$applyTo = function(arglist__11948) {
      var f1 = cljs.core.first(arglist__11948);
      var f2 = cljs.core.first(cljs.core.next(arglist__11948));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11948)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11948)));
      return G__11943__delegate(f1, f2, f3, fs)
    };
    G__11943.cljs$lang$arity$variadic = G__11943__delegate;
    return G__11943
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__11949__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__11949 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__11949__delegate.call(this, args)
      };
      G__11949.cljs$lang$maxFixedArity = 0;
      G__11949.cljs$lang$applyTo = function(arglist__11950) {
        var args = cljs.core.seq(arglist__11950);
        return G__11949__delegate(args)
      };
      G__11949.cljs$lang$arity$variadic = G__11949__delegate;
      return G__11949
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__11951__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__11951 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__11951__delegate.call(this, args)
      };
      G__11951.cljs$lang$maxFixedArity = 0;
      G__11951.cljs$lang$applyTo = function(arglist__11952) {
        var args = cljs.core.seq(arglist__11952);
        return G__11951__delegate(args)
      };
      G__11951.cljs$lang$arity$variadic = G__11951__delegate;
      return G__11951
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__11953__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__11953 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__11953__delegate.call(this, args)
      };
      G__11953.cljs$lang$maxFixedArity = 0;
      G__11953.cljs$lang$applyTo = function(arglist__11954) {
        var args = cljs.core.seq(arglist__11954);
        return G__11953__delegate(args)
      };
      G__11953.cljs$lang$arity$variadic = G__11953__delegate;
      return G__11953
    }()
  };
  var partial__5 = function() {
    var G__11955__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__11956__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__11956 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__11956__delegate.call(this, args)
        };
        G__11956.cljs$lang$maxFixedArity = 0;
        G__11956.cljs$lang$applyTo = function(arglist__11957) {
          var args = cljs.core.seq(arglist__11957);
          return G__11956__delegate(args)
        };
        G__11956.cljs$lang$arity$variadic = G__11956__delegate;
        return G__11956
      }()
    };
    var G__11955 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__11955__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__11955.cljs$lang$maxFixedArity = 4;
    G__11955.cljs$lang$applyTo = function(arglist__11958) {
      var f = cljs.core.first(arglist__11958);
      var arg1 = cljs.core.first(cljs.core.next(arglist__11958));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11958)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11958))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11958))));
      return G__11955__delegate(f, arg1, arg2, arg3, more)
    };
    G__11955.cljs$lang$arity$variadic = G__11955__delegate;
    return G__11955
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__11959 = null;
      var G__11959__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__11959__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__11959__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__11959__4 = function() {
        var G__11960__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__11960 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11960__delegate.call(this, a, b, c, ds)
        };
        G__11960.cljs$lang$maxFixedArity = 3;
        G__11960.cljs$lang$applyTo = function(arglist__11961) {
          var a = cljs.core.first(arglist__11961);
          var b = cljs.core.first(cljs.core.next(arglist__11961));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11961)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11961)));
          return G__11960__delegate(a, b, c, ds)
        };
        G__11960.cljs$lang$arity$variadic = G__11960__delegate;
        return G__11960
      }();
      G__11959 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__11959__1.call(this, a);
          case 2:
            return G__11959__2.call(this, a, b);
          case 3:
            return G__11959__3.call(this, a, b, c);
          default:
            return G__11959__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11959.cljs$lang$maxFixedArity = 3;
      G__11959.cljs$lang$applyTo = G__11959__4.cljs$lang$applyTo;
      return G__11959
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__11962 = null;
      var G__11962__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__11962__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__11962__4 = function() {
        var G__11963__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__11963 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11963__delegate.call(this, a, b, c, ds)
        };
        G__11963.cljs$lang$maxFixedArity = 3;
        G__11963.cljs$lang$applyTo = function(arglist__11964) {
          var a = cljs.core.first(arglist__11964);
          var b = cljs.core.first(cljs.core.next(arglist__11964));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11964)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11964)));
          return G__11963__delegate(a, b, c, ds)
        };
        G__11963.cljs$lang$arity$variadic = G__11963__delegate;
        return G__11963
      }();
      G__11962 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__11962__2.call(this, a, b);
          case 3:
            return G__11962__3.call(this, a, b, c);
          default:
            return G__11962__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11962.cljs$lang$maxFixedArity = 3;
      G__11962.cljs$lang$applyTo = G__11962__4.cljs$lang$applyTo;
      return G__11962
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__11965 = null;
      var G__11965__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__11965__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__11965__4 = function() {
        var G__11966__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__11966 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11966__delegate.call(this, a, b, c, ds)
        };
        G__11966.cljs$lang$maxFixedArity = 3;
        G__11966.cljs$lang$applyTo = function(arglist__11967) {
          var a = cljs.core.first(arglist__11967);
          var b = cljs.core.first(cljs.core.next(arglist__11967));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11967)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11967)));
          return G__11966__delegate(a, b, c, ds)
        };
        G__11966.cljs$lang$arity$variadic = G__11966__delegate;
        return G__11966
      }();
      G__11965 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__11965__2.call(this, a, b);
          case 3:
            return G__11965__3.call(this, a, b, c);
          default:
            return G__11965__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11965.cljs$lang$maxFixedArity = 3;
      G__11965.cljs$lang$applyTo = G__11965__4.cljs$lang$applyTo;
      return G__11965
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__11983 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____11991 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____11991) {
        var s__11992 = temp__3974__auto____11991;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__11992)) {
          var c__11993 = cljs.core.chunk_first.call(null, s__11992);
          var size__11994 = cljs.core.count.call(null, c__11993);
          var b__11995 = cljs.core.chunk_buffer.call(null, size__11994);
          var n__2428__auto____11996 = size__11994;
          var i__11997 = 0;
          while(true) {
            if(i__11997 < n__2428__auto____11996) {
              cljs.core.chunk_append.call(null, b__11995, f.call(null, idx + i__11997, cljs.core._nth.call(null, c__11993, i__11997)));
              var G__11998 = i__11997 + 1;
              i__11997 = G__11998;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11995), mapi.call(null, idx + size__11994, cljs.core.chunk_rest.call(null, s__11992)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__11992)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__11992)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__11983.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____12008 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____12008) {
      var s__12009 = temp__3974__auto____12008;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__12009)) {
        var c__12010 = cljs.core.chunk_first.call(null, s__12009);
        var size__12011 = cljs.core.count.call(null, c__12010);
        var b__12012 = cljs.core.chunk_buffer.call(null, size__12011);
        var n__2428__auto____12013 = size__12011;
        var i__12014 = 0;
        while(true) {
          if(i__12014 < n__2428__auto____12013) {
            var x__12015 = f.call(null, cljs.core._nth.call(null, c__12010, i__12014));
            if(x__12015 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__12012, x__12015)
            }
            var G__12017 = i__12014 + 1;
            i__12014 = G__12017;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12012), keep.call(null, f, cljs.core.chunk_rest.call(null, s__12009)))
      }else {
        var x__12016 = f.call(null, cljs.core.first.call(null, s__12009));
        if(x__12016 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__12009))
        }else {
          return cljs.core.cons.call(null, x__12016, keep.call(null, f, cljs.core.rest.call(null, s__12009)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__12043 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____12053 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____12053) {
        var s__12054 = temp__3974__auto____12053;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__12054)) {
          var c__12055 = cljs.core.chunk_first.call(null, s__12054);
          var size__12056 = cljs.core.count.call(null, c__12055);
          var b__12057 = cljs.core.chunk_buffer.call(null, size__12056);
          var n__2428__auto____12058 = size__12056;
          var i__12059 = 0;
          while(true) {
            if(i__12059 < n__2428__auto____12058) {
              var x__12060 = f.call(null, idx + i__12059, cljs.core._nth.call(null, c__12055, i__12059));
              if(x__12060 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__12057, x__12060)
              }
              var G__12062 = i__12059 + 1;
              i__12059 = G__12062;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12057), keepi.call(null, idx + size__12056, cljs.core.chunk_rest.call(null, s__12054)))
        }else {
          var x__12061 = f.call(null, idx, cljs.core.first.call(null, s__12054));
          if(x__12061 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__12054))
          }else {
            return cljs.core.cons.call(null, x__12061, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__12054)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__12043.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12148 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12148)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____12148
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12149 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12149)) {
            var and__3822__auto____12150 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____12150)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____12150
            }
          }else {
            return and__3822__auto____12149
          }
        }())
      };
      var ep1__4 = function() {
        var G__12219__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____12151 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____12151)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____12151
            }
          }())
        };
        var G__12219 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12219__delegate.call(this, x, y, z, args)
        };
        G__12219.cljs$lang$maxFixedArity = 3;
        G__12219.cljs$lang$applyTo = function(arglist__12220) {
          var x = cljs.core.first(arglist__12220);
          var y = cljs.core.first(cljs.core.next(arglist__12220));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12220)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12220)));
          return G__12219__delegate(x, y, z, args)
        };
        G__12219.cljs$lang$arity$variadic = G__12219__delegate;
        return G__12219
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12163 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12163)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____12163
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12164 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12164)) {
            var and__3822__auto____12165 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____12165)) {
              var and__3822__auto____12166 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____12166)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____12166
              }
            }else {
              return and__3822__auto____12165
            }
          }else {
            return and__3822__auto____12164
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12167 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12167)) {
            var and__3822__auto____12168 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____12168)) {
              var and__3822__auto____12169 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____12169)) {
                var and__3822__auto____12170 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____12170)) {
                  var and__3822__auto____12171 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____12171)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____12171
                  }
                }else {
                  return and__3822__auto____12170
                }
              }else {
                return and__3822__auto____12169
              }
            }else {
              return and__3822__auto____12168
            }
          }else {
            return and__3822__auto____12167
          }
        }())
      };
      var ep2__4 = function() {
        var G__12221__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____12172 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____12172)) {
              return cljs.core.every_QMARK_.call(null, function(p1__12018_SHARP_) {
                var and__3822__auto____12173 = p1.call(null, p1__12018_SHARP_);
                if(cljs.core.truth_(and__3822__auto____12173)) {
                  return p2.call(null, p1__12018_SHARP_)
                }else {
                  return and__3822__auto____12173
                }
              }, args)
            }else {
              return and__3822__auto____12172
            }
          }())
        };
        var G__12221 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12221__delegate.call(this, x, y, z, args)
        };
        G__12221.cljs$lang$maxFixedArity = 3;
        G__12221.cljs$lang$applyTo = function(arglist__12222) {
          var x = cljs.core.first(arglist__12222);
          var y = cljs.core.first(cljs.core.next(arglist__12222));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12222)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12222)));
          return G__12221__delegate(x, y, z, args)
        };
        G__12221.cljs$lang$arity$variadic = G__12221__delegate;
        return G__12221
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12192 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12192)) {
            var and__3822__auto____12193 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____12193)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____12193
            }
          }else {
            return and__3822__auto____12192
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12194 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12194)) {
            var and__3822__auto____12195 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____12195)) {
              var and__3822__auto____12196 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____12196)) {
                var and__3822__auto____12197 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____12197)) {
                  var and__3822__auto____12198 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____12198)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____12198
                  }
                }else {
                  return and__3822__auto____12197
                }
              }else {
                return and__3822__auto____12196
              }
            }else {
              return and__3822__auto____12195
            }
          }else {
            return and__3822__auto____12194
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12199 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12199)) {
            var and__3822__auto____12200 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____12200)) {
              var and__3822__auto____12201 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____12201)) {
                var and__3822__auto____12202 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____12202)) {
                  var and__3822__auto____12203 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____12203)) {
                    var and__3822__auto____12204 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____12204)) {
                      var and__3822__auto____12205 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____12205)) {
                        var and__3822__auto____12206 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____12206)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____12206
                        }
                      }else {
                        return and__3822__auto____12205
                      }
                    }else {
                      return and__3822__auto____12204
                    }
                  }else {
                    return and__3822__auto____12203
                  }
                }else {
                  return and__3822__auto____12202
                }
              }else {
                return and__3822__auto____12201
              }
            }else {
              return and__3822__auto____12200
            }
          }else {
            return and__3822__auto____12199
          }
        }())
      };
      var ep3__4 = function() {
        var G__12223__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____12207 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____12207)) {
              return cljs.core.every_QMARK_.call(null, function(p1__12019_SHARP_) {
                var and__3822__auto____12208 = p1.call(null, p1__12019_SHARP_);
                if(cljs.core.truth_(and__3822__auto____12208)) {
                  var and__3822__auto____12209 = p2.call(null, p1__12019_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____12209)) {
                    return p3.call(null, p1__12019_SHARP_)
                  }else {
                    return and__3822__auto____12209
                  }
                }else {
                  return and__3822__auto____12208
                }
              }, args)
            }else {
              return and__3822__auto____12207
            }
          }())
        };
        var G__12223 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12223__delegate.call(this, x, y, z, args)
        };
        G__12223.cljs$lang$maxFixedArity = 3;
        G__12223.cljs$lang$applyTo = function(arglist__12224) {
          var x = cljs.core.first(arglist__12224);
          var y = cljs.core.first(cljs.core.next(arglist__12224));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12224)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12224)));
          return G__12223__delegate(x, y, z, args)
        };
        G__12223.cljs$lang$arity$variadic = G__12223__delegate;
        return G__12223
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__12225__delegate = function(p1, p2, p3, ps) {
      var ps__12210 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__12020_SHARP_) {
            return p1__12020_SHARP_.call(null, x)
          }, ps__12210)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__12021_SHARP_) {
            var and__3822__auto____12215 = p1__12021_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____12215)) {
              return p1__12021_SHARP_.call(null, y)
            }else {
              return and__3822__auto____12215
            }
          }, ps__12210)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__12022_SHARP_) {
            var and__3822__auto____12216 = p1__12022_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____12216)) {
              var and__3822__auto____12217 = p1__12022_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____12217)) {
                return p1__12022_SHARP_.call(null, z)
              }else {
                return and__3822__auto____12217
              }
            }else {
              return and__3822__auto____12216
            }
          }, ps__12210)
        };
        var epn__4 = function() {
          var G__12226__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____12218 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____12218)) {
                return cljs.core.every_QMARK_.call(null, function(p1__12023_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__12023_SHARP_, args)
                }, ps__12210)
              }else {
                return and__3822__auto____12218
              }
            }())
          };
          var G__12226 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__12226__delegate.call(this, x, y, z, args)
          };
          G__12226.cljs$lang$maxFixedArity = 3;
          G__12226.cljs$lang$applyTo = function(arglist__12227) {
            var x = cljs.core.first(arglist__12227);
            var y = cljs.core.first(cljs.core.next(arglist__12227));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12227)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12227)));
            return G__12226__delegate(x, y, z, args)
          };
          G__12226.cljs$lang$arity$variadic = G__12226__delegate;
          return G__12226
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__12225 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12225__delegate.call(this, p1, p2, p3, ps)
    };
    G__12225.cljs$lang$maxFixedArity = 3;
    G__12225.cljs$lang$applyTo = function(arglist__12228) {
      var p1 = cljs.core.first(arglist__12228);
      var p2 = cljs.core.first(cljs.core.next(arglist__12228));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12228)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12228)));
      return G__12225__delegate(p1, p2, p3, ps)
    };
    G__12225.cljs$lang$arity$variadic = G__12225__delegate;
    return G__12225
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____12309 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____12309)) {
          return or__3824__auto____12309
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____12310 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____12310)) {
          return or__3824__auto____12310
        }else {
          var or__3824__auto____12311 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____12311)) {
            return or__3824__auto____12311
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__12380__delegate = function(x, y, z, args) {
          var or__3824__auto____12312 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____12312)) {
            return or__3824__auto____12312
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__12380 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12380__delegate.call(this, x, y, z, args)
        };
        G__12380.cljs$lang$maxFixedArity = 3;
        G__12380.cljs$lang$applyTo = function(arglist__12381) {
          var x = cljs.core.first(arglist__12381);
          var y = cljs.core.first(cljs.core.next(arglist__12381));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12381)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12381)));
          return G__12380__delegate(x, y, z, args)
        };
        G__12380.cljs$lang$arity$variadic = G__12380__delegate;
        return G__12380
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____12324 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____12324)) {
          return or__3824__auto____12324
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____12325 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____12325)) {
          return or__3824__auto____12325
        }else {
          var or__3824__auto____12326 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____12326)) {
            return or__3824__auto____12326
          }else {
            var or__3824__auto____12327 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____12327)) {
              return or__3824__auto____12327
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____12328 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____12328)) {
          return or__3824__auto____12328
        }else {
          var or__3824__auto____12329 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____12329)) {
            return or__3824__auto____12329
          }else {
            var or__3824__auto____12330 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____12330)) {
              return or__3824__auto____12330
            }else {
              var or__3824__auto____12331 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____12331)) {
                return or__3824__auto____12331
              }else {
                var or__3824__auto____12332 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____12332)) {
                  return or__3824__auto____12332
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__12382__delegate = function(x, y, z, args) {
          var or__3824__auto____12333 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____12333)) {
            return or__3824__auto____12333
          }else {
            return cljs.core.some.call(null, function(p1__12063_SHARP_) {
              var or__3824__auto____12334 = p1.call(null, p1__12063_SHARP_);
              if(cljs.core.truth_(or__3824__auto____12334)) {
                return or__3824__auto____12334
              }else {
                return p2.call(null, p1__12063_SHARP_)
              }
            }, args)
          }
        };
        var G__12382 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12382__delegate.call(this, x, y, z, args)
        };
        G__12382.cljs$lang$maxFixedArity = 3;
        G__12382.cljs$lang$applyTo = function(arglist__12383) {
          var x = cljs.core.first(arglist__12383);
          var y = cljs.core.first(cljs.core.next(arglist__12383));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12383)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12383)));
          return G__12382__delegate(x, y, z, args)
        };
        G__12382.cljs$lang$arity$variadic = G__12382__delegate;
        return G__12382
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____12353 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____12353)) {
          return or__3824__auto____12353
        }else {
          var or__3824__auto____12354 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____12354)) {
            return or__3824__auto____12354
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____12355 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____12355)) {
          return or__3824__auto____12355
        }else {
          var or__3824__auto____12356 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____12356)) {
            return or__3824__auto____12356
          }else {
            var or__3824__auto____12357 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____12357)) {
              return or__3824__auto____12357
            }else {
              var or__3824__auto____12358 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____12358)) {
                return or__3824__auto____12358
              }else {
                var or__3824__auto____12359 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____12359)) {
                  return or__3824__auto____12359
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____12360 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____12360)) {
          return or__3824__auto____12360
        }else {
          var or__3824__auto____12361 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____12361)) {
            return or__3824__auto____12361
          }else {
            var or__3824__auto____12362 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____12362)) {
              return or__3824__auto____12362
            }else {
              var or__3824__auto____12363 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____12363)) {
                return or__3824__auto____12363
              }else {
                var or__3824__auto____12364 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____12364)) {
                  return or__3824__auto____12364
                }else {
                  var or__3824__auto____12365 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____12365)) {
                    return or__3824__auto____12365
                  }else {
                    var or__3824__auto____12366 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____12366)) {
                      return or__3824__auto____12366
                    }else {
                      var or__3824__auto____12367 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____12367)) {
                        return or__3824__auto____12367
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__12384__delegate = function(x, y, z, args) {
          var or__3824__auto____12368 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____12368)) {
            return or__3824__auto____12368
          }else {
            return cljs.core.some.call(null, function(p1__12064_SHARP_) {
              var or__3824__auto____12369 = p1.call(null, p1__12064_SHARP_);
              if(cljs.core.truth_(or__3824__auto____12369)) {
                return or__3824__auto____12369
              }else {
                var or__3824__auto____12370 = p2.call(null, p1__12064_SHARP_);
                if(cljs.core.truth_(or__3824__auto____12370)) {
                  return or__3824__auto____12370
                }else {
                  return p3.call(null, p1__12064_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__12384 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12384__delegate.call(this, x, y, z, args)
        };
        G__12384.cljs$lang$maxFixedArity = 3;
        G__12384.cljs$lang$applyTo = function(arglist__12385) {
          var x = cljs.core.first(arglist__12385);
          var y = cljs.core.first(cljs.core.next(arglist__12385));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12385)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12385)));
          return G__12384__delegate(x, y, z, args)
        };
        G__12384.cljs$lang$arity$variadic = G__12384__delegate;
        return G__12384
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__12386__delegate = function(p1, p2, p3, ps) {
      var ps__12371 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__12065_SHARP_) {
            return p1__12065_SHARP_.call(null, x)
          }, ps__12371)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__12066_SHARP_) {
            var or__3824__auto____12376 = p1__12066_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____12376)) {
              return or__3824__auto____12376
            }else {
              return p1__12066_SHARP_.call(null, y)
            }
          }, ps__12371)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__12067_SHARP_) {
            var or__3824__auto____12377 = p1__12067_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____12377)) {
              return or__3824__auto____12377
            }else {
              var or__3824__auto____12378 = p1__12067_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____12378)) {
                return or__3824__auto____12378
              }else {
                return p1__12067_SHARP_.call(null, z)
              }
            }
          }, ps__12371)
        };
        var spn__4 = function() {
          var G__12387__delegate = function(x, y, z, args) {
            var or__3824__auto____12379 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____12379)) {
              return or__3824__auto____12379
            }else {
              return cljs.core.some.call(null, function(p1__12068_SHARP_) {
                return cljs.core.some.call(null, p1__12068_SHARP_, args)
              }, ps__12371)
            }
          };
          var G__12387 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__12387__delegate.call(this, x, y, z, args)
          };
          G__12387.cljs$lang$maxFixedArity = 3;
          G__12387.cljs$lang$applyTo = function(arglist__12388) {
            var x = cljs.core.first(arglist__12388);
            var y = cljs.core.first(cljs.core.next(arglist__12388));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12388)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12388)));
            return G__12387__delegate(x, y, z, args)
          };
          G__12387.cljs$lang$arity$variadic = G__12387__delegate;
          return G__12387
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__12386 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12386__delegate.call(this, p1, p2, p3, ps)
    };
    G__12386.cljs$lang$maxFixedArity = 3;
    G__12386.cljs$lang$applyTo = function(arglist__12389) {
      var p1 = cljs.core.first(arglist__12389);
      var p2 = cljs.core.first(cljs.core.next(arglist__12389));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12389)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12389)));
      return G__12386__delegate(p1, p2, p3, ps)
    };
    G__12386.cljs$lang$arity$variadic = G__12386__delegate;
    return G__12386
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____12408 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____12408) {
        var s__12409 = temp__3974__auto____12408;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__12409)) {
          var c__12410 = cljs.core.chunk_first.call(null, s__12409);
          var size__12411 = cljs.core.count.call(null, c__12410);
          var b__12412 = cljs.core.chunk_buffer.call(null, size__12411);
          var n__2428__auto____12413 = size__12411;
          var i__12414 = 0;
          while(true) {
            if(i__12414 < n__2428__auto____12413) {
              cljs.core.chunk_append.call(null, b__12412, f.call(null, cljs.core._nth.call(null, c__12410, i__12414)));
              var G__12426 = i__12414 + 1;
              i__12414 = G__12426;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12412), map.call(null, f, cljs.core.chunk_rest.call(null, s__12409)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__12409)), map.call(null, f, cljs.core.rest.call(null, s__12409)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__12415 = cljs.core.seq.call(null, c1);
      var s2__12416 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____12417 = s1__12415;
        if(and__3822__auto____12417) {
          return s2__12416
        }else {
          return and__3822__auto____12417
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__12415), cljs.core.first.call(null, s2__12416)), map.call(null, f, cljs.core.rest.call(null, s1__12415), cljs.core.rest.call(null, s2__12416)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__12418 = cljs.core.seq.call(null, c1);
      var s2__12419 = cljs.core.seq.call(null, c2);
      var s3__12420 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____12421 = s1__12418;
        if(and__3822__auto____12421) {
          var and__3822__auto____12422 = s2__12419;
          if(and__3822__auto____12422) {
            return s3__12420
          }else {
            return and__3822__auto____12422
          }
        }else {
          return and__3822__auto____12421
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__12418), cljs.core.first.call(null, s2__12419), cljs.core.first.call(null, s3__12420)), map.call(null, f, cljs.core.rest.call(null, s1__12418), cljs.core.rest.call(null, s2__12419), cljs.core.rest.call(null, s3__12420)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__12427__delegate = function(f, c1, c2, c3, colls) {
      var step__12425 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__12424 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__12424)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__12424), step.call(null, map.call(null, cljs.core.rest, ss__12424)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__12229_SHARP_) {
        return cljs.core.apply.call(null, f, p1__12229_SHARP_)
      }, step__12425.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__12427 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__12427__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__12427.cljs$lang$maxFixedArity = 4;
    G__12427.cljs$lang$applyTo = function(arglist__12428) {
      var f = cljs.core.first(arglist__12428);
      var c1 = cljs.core.first(cljs.core.next(arglist__12428));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12428)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12428))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12428))));
      return G__12427__delegate(f, c1, c2, c3, colls)
    };
    G__12427.cljs$lang$arity$variadic = G__12427__delegate;
    return G__12427
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____12431 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____12431) {
        var s__12432 = temp__3974__auto____12431;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__12432), take.call(null, n - 1, cljs.core.rest.call(null, s__12432)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__12438 = function(n, coll) {
    while(true) {
      var s__12436 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____12437 = n > 0;
        if(and__3822__auto____12437) {
          return s__12436
        }else {
          return and__3822__auto____12437
        }
      }())) {
        var G__12439 = n - 1;
        var G__12440 = cljs.core.rest.call(null, s__12436);
        n = G__12439;
        coll = G__12440;
        continue
      }else {
        return s__12436
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__12438.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__12443 = cljs.core.seq.call(null, coll);
  var lead__12444 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__12444) {
      var G__12445 = cljs.core.next.call(null, s__12443);
      var G__12446 = cljs.core.next.call(null, lead__12444);
      s__12443 = G__12445;
      lead__12444 = G__12446;
      continue
    }else {
      return s__12443
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__12452 = function(pred, coll) {
    while(true) {
      var s__12450 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____12451 = s__12450;
        if(and__3822__auto____12451) {
          return pred.call(null, cljs.core.first.call(null, s__12450))
        }else {
          return and__3822__auto____12451
        }
      }())) {
        var G__12453 = pred;
        var G__12454 = cljs.core.rest.call(null, s__12450);
        pred = G__12453;
        coll = G__12454;
        continue
      }else {
        return s__12450
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__12452.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____12457 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____12457) {
      var s__12458 = temp__3974__auto____12457;
      return cljs.core.concat.call(null, s__12458, cycle.call(null, s__12458))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__12463 = cljs.core.seq.call(null, c1);
      var s2__12464 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____12465 = s1__12463;
        if(and__3822__auto____12465) {
          return s2__12464
        }else {
          return and__3822__auto____12465
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__12463), cljs.core.cons.call(null, cljs.core.first.call(null, s2__12464), interleave.call(null, cljs.core.rest.call(null, s1__12463), cljs.core.rest.call(null, s2__12464))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__12467__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__12466 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__12466)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__12466), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__12466)))
        }else {
          return null
        }
      }, null)
    };
    var G__12467 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12467__delegate.call(this, c1, c2, colls)
    };
    G__12467.cljs$lang$maxFixedArity = 2;
    G__12467.cljs$lang$applyTo = function(arglist__12468) {
      var c1 = cljs.core.first(arglist__12468);
      var c2 = cljs.core.first(cljs.core.next(arglist__12468));
      var colls = cljs.core.rest(cljs.core.next(arglist__12468));
      return G__12467__delegate(c1, c2, colls)
    };
    G__12467.cljs$lang$arity$variadic = G__12467__delegate;
    return G__12467
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__12478 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____12476 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____12476) {
        var coll__12477 = temp__3971__auto____12476;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__12477), cat.call(null, cljs.core.rest.call(null, coll__12477), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__12478.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__12479__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__12479 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12479__delegate.call(this, f, coll, colls)
    };
    G__12479.cljs$lang$maxFixedArity = 2;
    G__12479.cljs$lang$applyTo = function(arglist__12480) {
      var f = cljs.core.first(arglist__12480);
      var coll = cljs.core.first(cljs.core.next(arglist__12480));
      var colls = cljs.core.rest(cljs.core.next(arglist__12480));
      return G__12479__delegate(f, coll, colls)
    };
    G__12479.cljs$lang$arity$variadic = G__12479__delegate;
    return G__12479
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____12490 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____12490) {
      var s__12491 = temp__3974__auto____12490;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__12491)) {
        var c__12492 = cljs.core.chunk_first.call(null, s__12491);
        var size__12493 = cljs.core.count.call(null, c__12492);
        var b__12494 = cljs.core.chunk_buffer.call(null, size__12493);
        var n__2428__auto____12495 = size__12493;
        var i__12496 = 0;
        while(true) {
          if(i__12496 < n__2428__auto____12495) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__12492, i__12496)))) {
              cljs.core.chunk_append.call(null, b__12494, cljs.core._nth.call(null, c__12492, i__12496))
            }else {
            }
            var G__12499 = i__12496 + 1;
            i__12496 = G__12499;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12494), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__12491)))
      }else {
        var f__12497 = cljs.core.first.call(null, s__12491);
        var r__12498 = cljs.core.rest.call(null, s__12491);
        if(cljs.core.truth_(pred.call(null, f__12497))) {
          return cljs.core.cons.call(null, f__12497, filter.call(null, pred, r__12498))
        }else {
          return filter.call(null, pred, r__12498)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__12502 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__12502.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__12500_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__12500_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__12506__12507 = to;
    if(G__12506__12507) {
      if(function() {
        var or__3824__auto____12508 = G__12506__12507.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____12508) {
          return or__3824__auto____12508
        }else {
          return G__12506__12507.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__12506__12507.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__12506__12507)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__12506__12507)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__12509__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__12509 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__12509__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__12509.cljs$lang$maxFixedArity = 4;
    G__12509.cljs$lang$applyTo = function(arglist__12510) {
      var f = cljs.core.first(arglist__12510);
      var c1 = cljs.core.first(cljs.core.next(arglist__12510));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12510)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12510))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12510))));
      return G__12509__delegate(f, c1, c2, c3, colls)
    };
    G__12509.cljs$lang$arity$variadic = G__12509__delegate;
    return G__12509
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____12517 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____12517) {
        var s__12518 = temp__3974__auto____12517;
        var p__12519 = cljs.core.take.call(null, n, s__12518);
        if(n === cljs.core.count.call(null, p__12519)) {
          return cljs.core.cons.call(null, p__12519, partition.call(null, n, step, cljs.core.drop.call(null, step, s__12518)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____12520 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____12520) {
        var s__12521 = temp__3974__auto____12520;
        var p__12522 = cljs.core.take.call(null, n, s__12521);
        if(n === cljs.core.count.call(null, p__12522)) {
          return cljs.core.cons.call(null, p__12522, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__12521)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__12522, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__12527 = cljs.core.lookup_sentinel;
    var m__12528 = m;
    var ks__12529 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__12529) {
        var m__12530 = cljs.core._lookup.call(null, m__12528, cljs.core.first.call(null, ks__12529), sentinel__12527);
        if(sentinel__12527 === m__12530) {
          return not_found
        }else {
          var G__12531 = sentinel__12527;
          var G__12532 = m__12530;
          var G__12533 = cljs.core.next.call(null, ks__12529);
          sentinel__12527 = G__12531;
          m__12528 = G__12532;
          ks__12529 = G__12533;
          continue
        }
      }else {
        return m__12528
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__12534, v) {
  var vec__12539__12540 = p__12534;
  var k__12541 = cljs.core.nth.call(null, vec__12539__12540, 0, null);
  var ks__12542 = cljs.core.nthnext.call(null, vec__12539__12540, 1);
  if(cljs.core.truth_(ks__12542)) {
    return cljs.core.assoc.call(null, m, k__12541, assoc_in.call(null, cljs.core._lookup.call(null, m, k__12541, null), ks__12542, v))
  }else {
    return cljs.core.assoc.call(null, m, k__12541, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__12543, f, args) {
    var vec__12548__12549 = p__12543;
    var k__12550 = cljs.core.nth.call(null, vec__12548__12549, 0, null);
    var ks__12551 = cljs.core.nthnext.call(null, vec__12548__12549, 1);
    if(cljs.core.truth_(ks__12551)) {
      return cljs.core.assoc.call(null, m, k__12550, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__12550, null), ks__12551, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__12550, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__12550, null), args))
    }
  };
  var update_in = function(m, p__12543, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__12543, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__12552) {
    var m = cljs.core.first(arglist__12552);
    var p__12543 = cljs.core.first(cljs.core.next(arglist__12552));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12552)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12552)));
    return update_in__delegate(m, p__12543, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12555 = this;
  var h__2093__auto____12556 = this__12555.__hash;
  if(!(h__2093__auto____12556 == null)) {
    return h__2093__auto____12556
  }else {
    var h__2093__auto____12557 = cljs.core.hash_coll.call(null, coll);
    this__12555.__hash = h__2093__auto____12557;
    return h__2093__auto____12557
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__12558 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__12559 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__12560 = this;
  var new_array__12561 = this__12560.array.slice();
  new_array__12561[k] = v;
  return new cljs.core.Vector(this__12560.meta, new_array__12561, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__12592 = null;
  var G__12592__2 = function(this_sym12562, k) {
    var this__12564 = this;
    var this_sym12562__12565 = this;
    var coll__12566 = this_sym12562__12565;
    return coll__12566.cljs$core$ILookup$_lookup$arity$2(coll__12566, k)
  };
  var G__12592__3 = function(this_sym12563, k, not_found) {
    var this__12564 = this;
    var this_sym12563__12567 = this;
    var coll__12568 = this_sym12563__12567;
    return coll__12568.cljs$core$ILookup$_lookup$arity$3(coll__12568, k, not_found)
  };
  G__12592 = function(this_sym12563, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12592__2.call(this, this_sym12563, k);
      case 3:
        return G__12592__3.call(this, this_sym12563, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12592
}();
cljs.core.Vector.prototype.apply = function(this_sym12553, args12554) {
  var this__12569 = this;
  return this_sym12553.call.apply(this_sym12553, [this_sym12553].concat(args12554.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12570 = this;
  var new_array__12571 = this__12570.array.slice();
  new_array__12571.push(o);
  return new cljs.core.Vector(this__12570.meta, new_array__12571, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__12572 = this;
  var this__12573 = this;
  return cljs.core.pr_str.call(null, this__12573)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__12574 = this;
  return cljs.core.ci_reduce.call(null, this__12574.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__12575 = this;
  return cljs.core.ci_reduce.call(null, this__12575.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12576 = this;
  if(this__12576.array.length > 0) {
    var vector_seq__12577 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__12576.array.length) {
          return cljs.core.cons.call(null, this__12576.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__12577.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12578 = this;
  return this__12578.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__12579 = this;
  var count__12580 = this__12579.array.length;
  if(count__12580 > 0) {
    return this__12579.array[count__12580 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__12581 = this;
  if(this__12581.array.length > 0) {
    var new_array__12582 = this__12581.array.slice();
    new_array__12582.pop();
    return new cljs.core.Vector(this__12581.meta, new_array__12582, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__12583 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12584 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12585 = this;
  return new cljs.core.Vector(meta, this__12585.array, this__12585.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12586 = this;
  return this__12586.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__12587 = this;
  if(function() {
    var and__3822__auto____12588 = 0 <= n;
    if(and__3822__auto____12588) {
      return n < this__12587.array.length
    }else {
      return and__3822__auto____12588
    }
  }()) {
    return this__12587.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__12589 = this;
  if(function() {
    var and__3822__auto____12590 = 0 <= n;
    if(and__3822__auto____12590) {
      return n < this__12589.array.length
    }else {
      return and__3822__auto____12590
    }
  }()) {
    return this__12589.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12591 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__12591.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2211__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__12594 = pv.cnt;
  if(cnt__12594 < 32) {
    return 0
  }else {
    return cnt__12594 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__12600 = level;
  var ret__12601 = node;
  while(true) {
    if(ll__12600 === 0) {
      return ret__12601
    }else {
      var embed__12602 = ret__12601;
      var r__12603 = cljs.core.pv_fresh_node.call(null, edit);
      var ___12604 = cljs.core.pv_aset.call(null, r__12603, 0, embed__12602);
      var G__12605 = ll__12600 - 5;
      var G__12606 = r__12603;
      ll__12600 = G__12605;
      ret__12601 = G__12606;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__12612 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__12613 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__12612, subidx__12613, tailnode);
    return ret__12612
  }else {
    var child__12614 = cljs.core.pv_aget.call(null, parent, subidx__12613);
    if(!(child__12614 == null)) {
      var node_to_insert__12615 = push_tail.call(null, pv, level - 5, child__12614, tailnode);
      cljs.core.pv_aset.call(null, ret__12612, subidx__12613, node_to_insert__12615);
      return ret__12612
    }else {
      var node_to_insert__12616 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__12612, subidx__12613, node_to_insert__12616);
      return ret__12612
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____12620 = 0 <= i;
    if(and__3822__auto____12620) {
      return i < pv.cnt
    }else {
      return and__3822__auto____12620
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__12621 = pv.root;
      var level__12622 = pv.shift;
      while(true) {
        if(level__12622 > 0) {
          var G__12623 = cljs.core.pv_aget.call(null, node__12621, i >>> level__12622 & 31);
          var G__12624 = level__12622 - 5;
          node__12621 = G__12623;
          level__12622 = G__12624;
          continue
        }else {
          return node__12621.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__12627 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__12627, i & 31, val);
    return ret__12627
  }else {
    var subidx__12628 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__12627, subidx__12628, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__12628), i, val));
    return ret__12627
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__12634 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__12635 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__12634));
    if(function() {
      var and__3822__auto____12636 = new_child__12635 == null;
      if(and__3822__auto____12636) {
        return subidx__12634 === 0
      }else {
        return and__3822__auto____12636
      }
    }()) {
      return null
    }else {
      var ret__12637 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__12637, subidx__12634, new_child__12635);
      return ret__12637
    }
  }else {
    if(subidx__12634 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__12638 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__12638, subidx__12634, null);
        return ret__12638
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__12641 = this;
  return new cljs.core.TransientVector(this__12641.cnt, this__12641.shift, cljs.core.tv_editable_root.call(null, this__12641.root), cljs.core.tv_editable_tail.call(null, this__12641.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12642 = this;
  var h__2093__auto____12643 = this__12642.__hash;
  if(!(h__2093__auto____12643 == null)) {
    return h__2093__auto____12643
  }else {
    var h__2093__auto____12644 = cljs.core.hash_coll.call(null, coll);
    this__12642.__hash = h__2093__auto____12644;
    return h__2093__auto____12644
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__12645 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__12646 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__12647 = this;
  if(function() {
    var and__3822__auto____12648 = 0 <= k;
    if(and__3822__auto____12648) {
      return k < this__12647.cnt
    }else {
      return and__3822__auto____12648
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__12649 = this__12647.tail.slice();
      new_tail__12649[k & 31] = v;
      return new cljs.core.PersistentVector(this__12647.meta, this__12647.cnt, this__12647.shift, this__12647.root, new_tail__12649, null)
    }else {
      return new cljs.core.PersistentVector(this__12647.meta, this__12647.cnt, this__12647.shift, cljs.core.do_assoc.call(null, coll, this__12647.shift, this__12647.root, k, v), this__12647.tail, null)
    }
  }else {
    if(k === this__12647.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__12647.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__12697 = null;
  var G__12697__2 = function(this_sym12650, k) {
    var this__12652 = this;
    var this_sym12650__12653 = this;
    var coll__12654 = this_sym12650__12653;
    return coll__12654.cljs$core$ILookup$_lookup$arity$2(coll__12654, k)
  };
  var G__12697__3 = function(this_sym12651, k, not_found) {
    var this__12652 = this;
    var this_sym12651__12655 = this;
    var coll__12656 = this_sym12651__12655;
    return coll__12656.cljs$core$ILookup$_lookup$arity$3(coll__12656, k, not_found)
  };
  G__12697 = function(this_sym12651, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12697__2.call(this, this_sym12651, k);
      case 3:
        return G__12697__3.call(this, this_sym12651, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12697
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym12639, args12640) {
  var this__12657 = this;
  return this_sym12639.call.apply(this_sym12639, [this_sym12639].concat(args12640.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__12658 = this;
  var step_init__12659 = [0, init];
  var i__12660 = 0;
  while(true) {
    if(i__12660 < this__12658.cnt) {
      var arr__12661 = cljs.core.array_for.call(null, v, i__12660);
      var len__12662 = arr__12661.length;
      var init__12666 = function() {
        var j__12663 = 0;
        var init__12664 = step_init__12659[1];
        while(true) {
          if(j__12663 < len__12662) {
            var init__12665 = f.call(null, init__12664, j__12663 + i__12660, arr__12661[j__12663]);
            if(cljs.core.reduced_QMARK_.call(null, init__12665)) {
              return init__12665
            }else {
              var G__12698 = j__12663 + 1;
              var G__12699 = init__12665;
              j__12663 = G__12698;
              init__12664 = G__12699;
              continue
            }
          }else {
            step_init__12659[0] = len__12662;
            step_init__12659[1] = init__12664;
            return init__12664
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__12666)) {
        return cljs.core.deref.call(null, init__12666)
      }else {
        var G__12700 = i__12660 + step_init__12659[0];
        i__12660 = G__12700;
        continue
      }
    }else {
      return step_init__12659[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12667 = this;
  if(this__12667.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__12668 = this__12667.tail.slice();
    new_tail__12668.push(o);
    return new cljs.core.PersistentVector(this__12667.meta, this__12667.cnt + 1, this__12667.shift, this__12667.root, new_tail__12668, null)
  }else {
    var root_overflow_QMARK___12669 = this__12667.cnt >>> 5 > 1 << this__12667.shift;
    var new_shift__12670 = root_overflow_QMARK___12669 ? this__12667.shift + 5 : this__12667.shift;
    var new_root__12672 = root_overflow_QMARK___12669 ? function() {
      var n_r__12671 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__12671, 0, this__12667.root);
      cljs.core.pv_aset.call(null, n_r__12671, 1, cljs.core.new_path.call(null, null, this__12667.shift, new cljs.core.VectorNode(null, this__12667.tail)));
      return n_r__12671
    }() : cljs.core.push_tail.call(null, coll, this__12667.shift, this__12667.root, new cljs.core.VectorNode(null, this__12667.tail));
    return new cljs.core.PersistentVector(this__12667.meta, this__12667.cnt + 1, new_shift__12670, new_root__12672, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__12673 = this;
  if(this__12673.cnt > 0) {
    return new cljs.core.RSeq(coll, this__12673.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__12674 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__12675 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__12676 = this;
  var this__12677 = this;
  return cljs.core.pr_str.call(null, this__12677)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__12678 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__12679 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12680 = this;
  if(this__12680.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12681 = this;
  return this__12681.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__12682 = this;
  if(this__12682.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__12682.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__12683 = this;
  if(this__12683.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__12683.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__12683.meta)
    }else {
      if(1 < this__12683.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__12683.meta, this__12683.cnt - 1, this__12683.shift, this__12683.root, this__12683.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__12684 = cljs.core.array_for.call(null, coll, this__12683.cnt - 2);
          var nr__12685 = cljs.core.pop_tail.call(null, coll, this__12683.shift, this__12683.root);
          var new_root__12686 = nr__12685 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__12685;
          var cnt_1__12687 = this__12683.cnt - 1;
          if(function() {
            var and__3822__auto____12688 = 5 < this__12683.shift;
            if(and__3822__auto____12688) {
              return cljs.core.pv_aget.call(null, new_root__12686, 1) == null
            }else {
              return and__3822__auto____12688
            }
          }()) {
            return new cljs.core.PersistentVector(this__12683.meta, cnt_1__12687, this__12683.shift - 5, cljs.core.pv_aget.call(null, new_root__12686, 0), new_tail__12684, null)
          }else {
            return new cljs.core.PersistentVector(this__12683.meta, cnt_1__12687, this__12683.shift, new_root__12686, new_tail__12684, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__12689 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12690 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12691 = this;
  return new cljs.core.PersistentVector(meta, this__12691.cnt, this__12691.shift, this__12691.root, this__12691.tail, this__12691.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12692 = this;
  return this__12692.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__12693 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__12694 = this;
  if(function() {
    var and__3822__auto____12695 = 0 <= n;
    if(and__3822__auto____12695) {
      return n < this__12694.cnt
    }else {
      return and__3822__auto____12695
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12696 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__12696.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__12701 = xs.length;
  var xs__12702 = no_clone === true ? xs : xs.slice();
  if(l__12701 < 32) {
    return new cljs.core.PersistentVector(null, l__12701, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__12702, null)
  }else {
    var node__12703 = xs__12702.slice(0, 32);
    var v__12704 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__12703, null);
    var i__12705 = 32;
    var out__12706 = cljs.core._as_transient.call(null, v__12704);
    while(true) {
      if(i__12705 < l__12701) {
        var G__12707 = i__12705 + 1;
        var G__12708 = cljs.core.conj_BANG_.call(null, out__12706, xs__12702[i__12705]);
        i__12705 = G__12707;
        out__12706 = G__12708;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__12706)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__12709) {
    var args = cljs.core.seq(arglist__12709);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__12710 = this;
  if(this__12710.off + 1 < this__12710.node.length) {
    var s__12711 = cljs.core.chunked_seq.call(null, this__12710.vec, this__12710.node, this__12710.i, this__12710.off + 1);
    if(s__12711 == null) {
      return null
    }else {
      return s__12711
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12712 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12713 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12714 = this;
  return this__12714.node[this__12714.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12715 = this;
  if(this__12715.off + 1 < this__12715.node.length) {
    var s__12716 = cljs.core.chunked_seq.call(null, this__12715.vec, this__12715.node, this__12715.i, this__12715.off + 1);
    if(s__12716 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__12716
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__12717 = this;
  var l__12718 = this__12717.node.length;
  var s__12719 = this__12717.i + l__12718 < cljs.core._count.call(null, this__12717.vec) ? cljs.core.chunked_seq.call(null, this__12717.vec, this__12717.i + l__12718, 0) : null;
  if(s__12719 == null) {
    return null
  }else {
    return s__12719
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12720 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__12721 = this;
  return cljs.core.chunked_seq.call(null, this__12721.vec, this__12721.node, this__12721.i, this__12721.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__12722 = this;
  return this__12722.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12723 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__12723.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__12724 = this;
  return cljs.core.array_chunk.call(null, this__12724.node, this__12724.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__12725 = this;
  var l__12726 = this__12725.node.length;
  var s__12727 = this__12725.i + l__12726 < cljs.core._count.call(null, this__12725.vec) ? cljs.core.chunked_seq.call(null, this__12725.vec, this__12725.i + l__12726, 0) : null;
  if(s__12727 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__12727
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12730 = this;
  var h__2093__auto____12731 = this__12730.__hash;
  if(!(h__2093__auto____12731 == null)) {
    return h__2093__auto____12731
  }else {
    var h__2093__auto____12732 = cljs.core.hash_coll.call(null, coll);
    this__12730.__hash = h__2093__auto____12732;
    return h__2093__auto____12732
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__12733 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__12734 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__12735 = this;
  var v_pos__12736 = this__12735.start + key;
  return new cljs.core.Subvec(this__12735.meta, cljs.core._assoc.call(null, this__12735.v, v_pos__12736, val), this__12735.start, this__12735.end > v_pos__12736 + 1 ? this__12735.end : v_pos__12736 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__12762 = null;
  var G__12762__2 = function(this_sym12737, k) {
    var this__12739 = this;
    var this_sym12737__12740 = this;
    var coll__12741 = this_sym12737__12740;
    return coll__12741.cljs$core$ILookup$_lookup$arity$2(coll__12741, k)
  };
  var G__12762__3 = function(this_sym12738, k, not_found) {
    var this__12739 = this;
    var this_sym12738__12742 = this;
    var coll__12743 = this_sym12738__12742;
    return coll__12743.cljs$core$ILookup$_lookup$arity$3(coll__12743, k, not_found)
  };
  G__12762 = function(this_sym12738, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12762__2.call(this, this_sym12738, k);
      case 3:
        return G__12762__3.call(this, this_sym12738, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12762
}();
cljs.core.Subvec.prototype.apply = function(this_sym12728, args12729) {
  var this__12744 = this;
  return this_sym12728.call.apply(this_sym12728, [this_sym12728].concat(args12729.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12745 = this;
  return new cljs.core.Subvec(this__12745.meta, cljs.core._assoc_n.call(null, this__12745.v, this__12745.end, o), this__12745.start, this__12745.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__12746 = this;
  var this__12747 = this;
  return cljs.core.pr_str.call(null, this__12747)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__12748 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__12749 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12750 = this;
  var subvec_seq__12751 = function subvec_seq(i) {
    if(i === this__12750.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__12750.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__12751.call(null, this__12750.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12752 = this;
  return this__12752.end - this__12752.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__12753 = this;
  return cljs.core._nth.call(null, this__12753.v, this__12753.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__12754 = this;
  if(this__12754.start === this__12754.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__12754.meta, this__12754.v, this__12754.start, this__12754.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__12755 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12756 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12757 = this;
  return new cljs.core.Subvec(meta, this__12757.v, this__12757.start, this__12757.end, this__12757.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12758 = this;
  return this__12758.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__12759 = this;
  return cljs.core._nth.call(null, this__12759.v, this__12759.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__12760 = this;
  return cljs.core._nth.call(null, this__12760.v, this__12760.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12761 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__12761.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__12764 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__12764, 0, tl.length);
  return ret__12764
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__12768 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__12769 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__12768, subidx__12769, level === 5 ? tail_node : function() {
    var child__12770 = cljs.core.pv_aget.call(null, ret__12768, subidx__12769);
    if(!(child__12770 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__12770, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__12768
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__12775 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__12776 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__12777 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__12775, subidx__12776));
    if(function() {
      var and__3822__auto____12778 = new_child__12777 == null;
      if(and__3822__auto____12778) {
        return subidx__12776 === 0
      }else {
        return and__3822__auto____12778
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__12775, subidx__12776, new_child__12777);
      return node__12775
    }
  }else {
    if(subidx__12776 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__12775, subidx__12776, null);
        return node__12775
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____12783 = 0 <= i;
    if(and__3822__auto____12783) {
      return i < tv.cnt
    }else {
      return and__3822__auto____12783
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__12784 = tv.root;
      var node__12785 = root__12784;
      var level__12786 = tv.shift;
      while(true) {
        if(level__12786 > 0) {
          var G__12787 = cljs.core.tv_ensure_editable.call(null, root__12784.edit, cljs.core.pv_aget.call(null, node__12785, i >>> level__12786 & 31));
          var G__12788 = level__12786 - 5;
          node__12785 = G__12787;
          level__12786 = G__12788;
          continue
        }else {
          return node__12785.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__12828 = null;
  var G__12828__2 = function(this_sym12791, k) {
    var this__12793 = this;
    var this_sym12791__12794 = this;
    var coll__12795 = this_sym12791__12794;
    return coll__12795.cljs$core$ILookup$_lookup$arity$2(coll__12795, k)
  };
  var G__12828__3 = function(this_sym12792, k, not_found) {
    var this__12793 = this;
    var this_sym12792__12796 = this;
    var coll__12797 = this_sym12792__12796;
    return coll__12797.cljs$core$ILookup$_lookup$arity$3(coll__12797, k, not_found)
  };
  G__12828 = function(this_sym12792, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12828__2.call(this, this_sym12792, k);
      case 3:
        return G__12828__3.call(this, this_sym12792, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12828
}();
cljs.core.TransientVector.prototype.apply = function(this_sym12789, args12790) {
  var this__12798 = this;
  return this_sym12789.call.apply(this_sym12789, [this_sym12789].concat(args12790.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__12799 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__12800 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__12801 = this;
  if(this__12801.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__12802 = this;
  if(function() {
    var and__3822__auto____12803 = 0 <= n;
    if(and__3822__auto____12803) {
      return n < this__12802.cnt
    }else {
      return and__3822__auto____12803
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12804 = this;
  if(this__12804.root.edit) {
    return this__12804.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__12805 = this;
  if(this__12805.root.edit) {
    if(function() {
      var and__3822__auto____12806 = 0 <= n;
      if(and__3822__auto____12806) {
        return n < this__12805.cnt
      }else {
        return and__3822__auto____12806
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__12805.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__12811 = function go(level, node) {
          var node__12809 = cljs.core.tv_ensure_editable.call(null, this__12805.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__12809, n & 31, val);
            return node__12809
          }else {
            var subidx__12810 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__12809, subidx__12810, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__12809, subidx__12810)));
            return node__12809
          }
        }.call(null, this__12805.shift, this__12805.root);
        this__12805.root = new_root__12811;
        return tcoll
      }
    }else {
      if(n === this__12805.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__12805.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__12812 = this;
  if(this__12812.root.edit) {
    if(this__12812.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__12812.cnt) {
        this__12812.cnt = 0;
        return tcoll
      }else {
        if((this__12812.cnt - 1 & 31) > 0) {
          this__12812.cnt = this__12812.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__12813 = cljs.core.editable_array_for.call(null, tcoll, this__12812.cnt - 2);
            var new_root__12815 = function() {
              var nr__12814 = cljs.core.tv_pop_tail.call(null, tcoll, this__12812.shift, this__12812.root);
              if(!(nr__12814 == null)) {
                return nr__12814
              }else {
                return new cljs.core.VectorNode(this__12812.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____12816 = 5 < this__12812.shift;
              if(and__3822__auto____12816) {
                return cljs.core.pv_aget.call(null, new_root__12815, 1) == null
              }else {
                return and__3822__auto____12816
              }
            }()) {
              var new_root__12817 = cljs.core.tv_ensure_editable.call(null, this__12812.root.edit, cljs.core.pv_aget.call(null, new_root__12815, 0));
              this__12812.root = new_root__12817;
              this__12812.shift = this__12812.shift - 5;
              this__12812.cnt = this__12812.cnt - 1;
              this__12812.tail = new_tail__12813;
              return tcoll
            }else {
              this__12812.root = new_root__12815;
              this__12812.cnt = this__12812.cnt - 1;
              this__12812.tail = new_tail__12813;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__12818 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__12819 = this;
  if(this__12819.root.edit) {
    if(this__12819.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__12819.tail[this__12819.cnt & 31] = o;
      this__12819.cnt = this__12819.cnt + 1;
      return tcoll
    }else {
      var tail_node__12820 = new cljs.core.VectorNode(this__12819.root.edit, this__12819.tail);
      var new_tail__12821 = cljs.core.make_array.call(null, 32);
      new_tail__12821[0] = o;
      this__12819.tail = new_tail__12821;
      if(this__12819.cnt >>> 5 > 1 << this__12819.shift) {
        var new_root_array__12822 = cljs.core.make_array.call(null, 32);
        var new_shift__12823 = this__12819.shift + 5;
        new_root_array__12822[0] = this__12819.root;
        new_root_array__12822[1] = cljs.core.new_path.call(null, this__12819.root.edit, this__12819.shift, tail_node__12820);
        this__12819.root = new cljs.core.VectorNode(this__12819.root.edit, new_root_array__12822);
        this__12819.shift = new_shift__12823;
        this__12819.cnt = this__12819.cnt + 1;
        return tcoll
      }else {
        var new_root__12824 = cljs.core.tv_push_tail.call(null, tcoll, this__12819.shift, this__12819.root, tail_node__12820);
        this__12819.root = new_root__12824;
        this__12819.cnt = this__12819.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__12825 = this;
  if(this__12825.root.edit) {
    this__12825.root.edit = null;
    var len__12826 = this__12825.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__12827 = cljs.core.make_array.call(null, len__12826);
    cljs.core.array_copy.call(null, this__12825.tail, 0, trimmed_tail__12827, 0, len__12826);
    return new cljs.core.PersistentVector(null, this__12825.cnt, this__12825.shift, this__12825.root, trimmed_tail__12827, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12829 = this;
  var h__2093__auto____12830 = this__12829.__hash;
  if(!(h__2093__auto____12830 == null)) {
    return h__2093__auto____12830
  }else {
    var h__2093__auto____12831 = cljs.core.hash_coll.call(null, coll);
    this__12829.__hash = h__2093__auto____12831;
    return h__2093__auto____12831
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12832 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__12833 = this;
  var this__12834 = this;
  return cljs.core.pr_str.call(null, this__12834)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12835 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12836 = this;
  return cljs.core._first.call(null, this__12836.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12837 = this;
  var temp__3971__auto____12838 = cljs.core.next.call(null, this__12837.front);
  if(temp__3971__auto____12838) {
    var f1__12839 = temp__3971__auto____12838;
    return new cljs.core.PersistentQueueSeq(this__12837.meta, f1__12839, this__12837.rear, null)
  }else {
    if(this__12837.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__12837.meta, this__12837.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12840 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12841 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__12841.front, this__12841.rear, this__12841.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12842 = this;
  return this__12842.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12843 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__12843.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12844 = this;
  var h__2093__auto____12845 = this__12844.__hash;
  if(!(h__2093__auto____12845 == null)) {
    return h__2093__auto____12845
  }else {
    var h__2093__auto____12846 = cljs.core.hash_coll.call(null, coll);
    this__12844.__hash = h__2093__auto____12846;
    return h__2093__auto____12846
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12847 = this;
  if(cljs.core.truth_(this__12847.front)) {
    return new cljs.core.PersistentQueue(this__12847.meta, this__12847.count + 1, this__12847.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____12848 = this__12847.rear;
      if(cljs.core.truth_(or__3824__auto____12848)) {
        return or__3824__auto____12848
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__12847.meta, this__12847.count + 1, cljs.core.conj.call(null, this__12847.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__12849 = this;
  var this__12850 = this;
  return cljs.core.pr_str.call(null, this__12850)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12851 = this;
  var rear__12852 = cljs.core.seq.call(null, this__12851.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____12853 = this__12851.front;
    if(cljs.core.truth_(or__3824__auto____12853)) {
      return or__3824__auto____12853
    }else {
      return rear__12852
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__12851.front, cljs.core.seq.call(null, rear__12852), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12854 = this;
  return this__12854.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__12855 = this;
  return cljs.core._first.call(null, this__12855.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__12856 = this;
  if(cljs.core.truth_(this__12856.front)) {
    var temp__3971__auto____12857 = cljs.core.next.call(null, this__12856.front);
    if(temp__3971__auto____12857) {
      var f1__12858 = temp__3971__auto____12857;
      return new cljs.core.PersistentQueue(this__12856.meta, this__12856.count - 1, f1__12858, this__12856.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__12856.meta, this__12856.count - 1, cljs.core.seq.call(null, this__12856.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12859 = this;
  return cljs.core.first.call(null, this__12859.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12860 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12861 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12862 = this;
  return new cljs.core.PersistentQueue(meta, this__12862.count, this__12862.front, this__12862.rear, this__12862.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12863 = this;
  return this__12863.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12864 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__12865 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__12868 = array.length;
  var i__12869 = 0;
  while(true) {
    if(i__12869 < len__12868) {
      if(k === array[i__12869]) {
        return i__12869
      }else {
        var G__12870 = i__12869 + incr;
        i__12869 = G__12870;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__12873 = cljs.core.hash.call(null, a);
  var b__12874 = cljs.core.hash.call(null, b);
  if(a__12873 < b__12874) {
    return-1
  }else {
    if(a__12873 > b__12874) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__12882 = m.keys;
  var len__12883 = ks__12882.length;
  var so__12884 = m.strobj;
  var out__12885 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__12886 = 0;
  var out__12887 = cljs.core.transient$.call(null, out__12885);
  while(true) {
    if(i__12886 < len__12883) {
      var k__12888 = ks__12882[i__12886];
      var G__12889 = i__12886 + 1;
      var G__12890 = cljs.core.assoc_BANG_.call(null, out__12887, k__12888, so__12884[k__12888]);
      i__12886 = G__12889;
      out__12887 = G__12890;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__12887, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__12896 = {};
  var l__12897 = ks.length;
  var i__12898 = 0;
  while(true) {
    if(i__12898 < l__12897) {
      var k__12899 = ks[i__12898];
      new_obj__12896[k__12899] = obj[k__12899];
      var G__12900 = i__12898 + 1;
      i__12898 = G__12900;
      continue
    }else {
    }
    break
  }
  return new_obj__12896
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__12903 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12904 = this;
  var h__2093__auto____12905 = this__12904.__hash;
  if(!(h__2093__auto____12905 == null)) {
    return h__2093__auto____12905
  }else {
    var h__2093__auto____12906 = cljs.core.hash_imap.call(null, coll);
    this__12904.__hash = h__2093__auto____12906;
    return h__2093__auto____12906
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__12907 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__12908 = this;
  if(function() {
    var and__3822__auto____12909 = goog.isString(k);
    if(and__3822__auto____12909) {
      return!(cljs.core.scan_array.call(null, 1, k, this__12908.keys) == null)
    }else {
      return and__3822__auto____12909
    }
  }()) {
    return this__12908.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__12910 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____12911 = this__12910.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____12911) {
        return or__3824__auto____12911
      }else {
        return this__12910.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__12910.keys) == null)) {
        var new_strobj__12912 = cljs.core.obj_clone.call(null, this__12910.strobj, this__12910.keys);
        new_strobj__12912[k] = v;
        return new cljs.core.ObjMap(this__12910.meta, this__12910.keys, new_strobj__12912, this__12910.update_count + 1, null)
      }else {
        var new_strobj__12913 = cljs.core.obj_clone.call(null, this__12910.strobj, this__12910.keys);
        var new_keys__12914 = this__12910.keys.slice();
        new_strobj__12913[k] = v;
        new_keys__12914.push(k);
        return new cljs.core.ObjMap(this__12910.meta, new_keys__12914, new_strobj__12913, this__12910.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__12915 = this;
  if(function() {
    var and__3822__auto____12916 = goog.isString(k);
    if(and__3822__auto____12916) {
      return!(cljs.core.scan_array.call(null, 1, k, this__12915.keys) == null)
    }else {
      return and__3822__auto____12916
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__12938 = null;
  var G__12938__2 = function(this_sym12917, k) {
    var this__12919 = this;
    var this_sym12917__12920 = this;
    var coll__12921 = this_sym12917__12920;
    return coll__12921.cljs$core$ILookup$_lookup$arity$2(coll__12921, k)
  };
  var G__12938__3 = function(this_sym12918, k, not_found) {
    var this__12919 = this;
    var this_sym12918__12922 = this;
    var coll__12923 = this_sym12918__12922;
    return coll__12923.cljs$core$ILookup$_lookup$arity$3(coll__12923, k, not_found)
  };
  G__12938 = function(this_sym12918, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12938__2.call(this, this_sym12918, k);
      case 3:
        return G__12938__3.call(this, this_sym12918, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12938
}();
cljs.core.ObjMap.prototype.apply = function(this_sym12901, args12902) {
  var this__12924 = this;
  return this_sym12901.call.apply(this_sym12901, [this_sym12901].concat(args12902.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__12925 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__12926 = this;
  var this__12927 = this;
  return cljs.core.pr_str.call(null, this__12927)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12928 = this;
  if(this__12928.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__12891_SHARP_) {
      return cljs.core.vector.call(null, p1__12891_SHARP_, this__12928.strobj[p1__12891_SHARP_])
    }, this__12928.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12929 = this;
  return this__12929.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12930 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12931 = this;
  return new cljs.core.ObjMap(meta, this__12931.keys, this__12931.strobj, this__12931.update_count, this__12931.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12932 = this;
  return this__12932.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12933 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__12933.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__12934 = this;
  if(function() {
    var and__3822__auto____12935 = goog.isString(k);
    if(and__3822__auto____12935) {
      return!(cljs.core.scan_array.call(null, 1, k, this__12934.keys) == null)
    }else {
      return and__3822__auto____12935
    }
  }()) {
    var new_keys__12936 = this__12934.keys.slice();
    var new_strobj__12937 = cljs.core.obj_clone.call(null, this__12934.strobj, this__12934.keys);
    new_keys__12936.splice(cljs.core.scan_array.call(null, 1, k, new_keys__12936), 1);
    cljs.core.js_delete.call(null, new_strobj__12937, k);
    return new cljs.core.ObjMap(this__12934.meta, new_keys__12936, new_strobj__12937, this__12934.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12942 = this;
  var h__2093__auto____12943 = this__12942.__hash;
  if(!(h__2093__auto____12943 == null)) {
    return h__2093__auto____12943
  }else {
    var h__2093__auto____12944 = cljs.core.hash_imap.call(null, coll);
    this__12942.__hash = h__2093__auto____12944;
    return h__2093__auto____12944
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__12945 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__12946 = this;
  var bucket__12947 = this__12946.hashobj[cljs.core.hash.call(null, k)];
  var i__12948 = cljs.core.truth_(bucket__12947) ? cljs.core.scan_array.call(null, 2, k, bucket__12947) : null;
  if(cljs.core.truth_(i__12948)) {
    return bucket__12947[i__12948 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__12949 = this;
  var h__12950 = cljs.core.hash.call(null, k);
  var bucket__12951 = this__12949.hashobj[h__12950];
  if(cljs.core.truth_(bucket__12951)) {
    var new_bucket__12952 = bucket__12951.slice();
    var new_hashobj__12953 = goog.object.clone(this__12949.hashobj);
    new_hashobj__12953[h__12950] = new_bucket__12952;
    var temp__3971__auto____12954 = cljs.core.scan_array.call(null, 2, k, new_bucket__12952);
    if(cljs.core.truth_(temp__3971__auto____12954)) {
      var i__12955 = temp__3971__auto____12954;
      new_bucket__12952[i__12955 + 1] = v;
      return new cljs.core.HashMap(this__12949.meta, this__12949.count, new_hashobj__12953, null)
    }else {
      new_bucket__12952.push(k, v);
      return new cljs.core.HashMap(this__12949.meta, this__12949.count + 1, new_hashobj__12953, null)
    }
  }else {
    var new_hashobj__12956 = goog.object.clone(this__12949.hashobj);
    new_hashobj__12956[h__12950] = [k, v];
    return new cljs.core.HashMap(this__12949.meta, this__12949.count + 1, new_hashobj__12956, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__12957 = this;
  var bucket__12958 = this__12957.hashobj[cljs.core.hash.call(null, k)];
  var i__12959 = cljs.core.truth_(bucket__12958) ? cljs.core.scan_array.call(null, 2, k, bucket__12958) : null;
  if(cljs.core.truth_(i__12959)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__12984 = null;
  var G__12984__2 = function(this_sym12960, k) {
    var this__12962 = this;
    var this_sym12960__12963 = this;
    var coll__12964 = this_sym12960__12963;
    return coll__12964.cljs$core$ILookup$_lookup$arity$2(coll__12964, k)
  };
  var G__12984__3 = function(this_sym12961, k, not_found) {
    var this__12962 = this;
    var this_sym12961__12965 = this;
    var coll__12966 = this_sym12961__12965;
    return coll__12966.cljs$core$ILookup$_lookup$arity$3(coll__12966, k, not_found)
  };
  G__12984 = function(this_sym12961, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12984__2.call(this, this_sym12961, k);
      case 3:
        return G__12984__3.call(this, this_sym12961, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12984
}();
cljs.core.HashMap.prototype.apply = function(this_sym12940, args12941) {
  var this__12967 = this;
  return this_sym12940.call.apply(this_sym12940, [this_sym12940].concat(args12941.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__12968 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__12969 = this;
  var this__12970 = this;
  return cljs.core.pr_str.call(null, this__12970)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12971 = this;
  if(this__12971.count > 0) {
    var hashes__12972 = cljs.core.js_keys.call(null, this__12971.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__12939_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__12971.hashobj[p1__12939_SHARP_]))
    }, hashes__12972)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12973 = this;
  return this__12973.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12974 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12975 = this;
  return new cljs.core.HashMap(meta, this__12975.count, this__12975.hashobj, this__12975.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12976 = this;
  return this__12976.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12977 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__12977.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__12978 = this;
  var h__12979 = cljs.core.hash.call(null, k);
  var bucket__12980 = this__12978.hashobj[h__12979];
  var i__12981 = cljs.core.truth_(bucket__12980) ? cljs.core.scan_array.call(null, 2, k, bucket__12980) : null;
  if(cljs.core.not.call(null, i__12981)) {
    return coll
  }else {
    var new_hashobj__12982 = goog.object.clone(this__12978.hashobj);
    if(3 > bucket__12980.length) {
      cljs.core.js_delete.call(null, new_hashobj__12982, h__12979)
    }else {
      var new_bucket__12983 = bucket__12980.slice();
      new_bucket__12983.splice(i__12981, 2);
      new_hashobj__12982[h__12979] = new_bucket__12983
    }
    return new cljs.core.HashMap(this__12978.meta, this__12978.count - 1, new_hashobj__12982, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__12985 = ks.length;
  var i__12986 = 0;
  var out__12987 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__12986 < len__12985) {
      var G__12988 = i__12986 + 1;
      var G__12989 = cljs.core.assoc.call(null, out__12987, ks[i__12986], vs[i__12986]);
      i__12986 = G__12988;
      out__12987 = G__12989;
      continue
    }else {
      return out__12987
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__12993 = m.arr;
  var len__12994 = arr__12993.length;
  var i__12995 = 0;
  while(true) {
    if(len__12994 <= i__12995) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__12993[i__12995], k)) {
        return i__12995
      }else {
        if("\ufdd0'else") {
          var G__12996 = i__12995 + 2;
          i__12995 = G__12996;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__12999 = this;
  return new cljs.core.TransientArrayMap({}, this__12999.arr.length, this__12999.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13000 = this;
  var h__2093__auto____13001 = this__13000.__hash;
  if(!(h__2093__auto____13001 == null)) {
    return h__2093__auto____13001
  }else {
    var h__2093__auto____13002 = cljs.core.hash_imap.call(null, coll);
    this__13000.__hash = h__2093__auto____13002;
    return h__2093__auto____13002
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13003 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13004 = this;
  var idx__13005 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__13005 === -1) {
    return not_found
  }else {
    return this__13004.arr[idx__13005 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__13006 = this;
  var idx__13007 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__13007 === -1) {
    if(this__13006.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__13006.meta, this__13006.cnt + 1, function() {
        var G__13008__13009 = this__13006.arr.slice();
        G__13008__13009.push(k);
        G__13008__13009.push(v);
        return G__13008__13009
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__13006.arr[idx__13007 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__13006.meta, this__13006.cnt, function() {
          var G__13010__13011 = this__13006.arr.slice();
          G__13010__13011[idx__13007 + 1] = v;
          return G__13010__13011
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__13012 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__13044 = null;
  var G__13044__2 = function(this_sym13013, k) {
    var this__13015 = this;
    var this_sym13013__13016 = this;
    var coll__13017 = this_sym13013__13016;
    return coll__13017.cljs$core$ILookup$_lookup$arity$2(coll__13017, k)
  };
  var G__13044__3 = function(this_sym13014, k, not_found) {
    var this__13015 = this;
    var this_sym13014__13018 = this;
    var coll__13019 = this_sym13014__13018;
    return coll__13019.cljs$core$ILookup$_lookup$arity$3(coll__13019, k, not_found)
  };
  G__13044 = function(this_sym13014, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13044__2.call(this, this_sym13014, k);
      case 3:
        return G__13044__3.call(this, this_sym13014, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13044
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym12997, args12998) {
  var this__13020 = this;
  return this_sym12997.call.apply(this_sym12997, [this_sym12997].concat(args12998.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__13021 = this;
  var len__13022 = this__13021.arr.length;
  var i__13023 = 0;
  var init__13024 = init;
  while(true) {
    if(i__13023 < len__13022) {
      var init__13025 = f.call(null, init__13024, this__13021.arr[i__13023], this__13021.arr[i__13023 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__13025)) {
        return cljs.core.deref.call(null, init__13025)
      }else {
        var G__13045 = i__13023 + 2;
        var G__13046 = init__13025;
        i__13023 = G__13045;
        init__13024 = G__13046;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__13026 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__13027 = this;
  var this__13028 = this;
  return cljs.core.pr_str.call(null, this__13028)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13029 = this;
  if(this__13029.cnt > 0) {
    var len__13030 = this__13029.arr.length;
    var array_map_seq__13031 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__13030) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__13029.arr[i], this__13029.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__13031.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13032 = this;
  return this__13032.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13033 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13034 = this;
  return new cljs.core.PersistentArrayMap(meta, this__13034.cnt, this__13034.arr, this__13034.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13035 = this;
  return this__13035.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13036 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__13036.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__13037 = this;
  var idx__13038 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__13038 >= 0) {
    var len__13039 = this__13037.arr.length;
    var new_len__13040 = len__13039 - 2;
    if(new_len__13040 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__13041 = cljs.core.make_array.call(null, new_len__13040);
      var s__13042 = 0;
      var d__13043 = 0;
      while(true) {
        if(s__13042 >= len__13039) {
          return new cljs.core.PersistentArrayMap(this__13037.meta, this__13037.cnt - 1, new_arr__13041, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__13037.arr[s__13042])) {
            var G__13047 = s__13042 + 2;
            var G__13048 = d__13043;
            s__13042 = G__13047;
            d__13043 = G__13048;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__13041[d__13043] = this__13037.arr[s__13042];
              new_arr__13041[d__13043 + 1] = this__13037.arr[s__13042 + 1];
              var G__13049 = s__13042 + 2;
              var G__13050 = d__13043 + 2;
              s__13042 = G__13049;
              d__13043 = G__13050;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__13051 = cljs.core.count.call(null, ks);
  var i__13052 = 0;
  var out__13053 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__13052 < len__13051) {
      var G__13054 = i__13052 + 1;
      var G__13055 = cljs.core.assoc_BANG_.call(null, out__13053, ks[i__13052], vs[i__13052]);
      i__13052 = G__13054;
      out__13053 = G__13055;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__13053)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__13056 = this;
  if(cljs.core.truth_(this__13056.editable_QMARK_)) {
    var idx__13057 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__13057 >= 0) {
      this__13056.arr[idx__13057] = this__13056.arr[this__13056.len - 2];
      this__13056.arr[idx__13057 + 1] = this__13056.arr[this__13056.len - 1];
      var G__13058__13059 = this__13056.arr;
      G__13058__13059.pop();
      G__13058__13059.pop();
      G__13058__13059;
      this__13056.len = this__13056.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__13060 = this;
  if(cljs.core.truth_(this__13060.editable_QMARK_)) {
    var idx__13061 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__13061 === -1) {
      if(this__13060.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__13060.len = this__13060.len + 2;
        this__13060.arr.push(key);
        this__13060.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__13060.len, this__13060.arr), key, val)
      }
    }else {
      if(val === this__13060.arr[idx__13061 + 1]) {
        return tcoll
      }else {
        this__13060.arr[idx__13061 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__13062 = this;
  if(cljs.core.truth_(this__13062.editable_QMARK_)) {
    if(function() {
      var G__13063__13064 = o;
      if(G__13063__13064) {
        if(function() {
          var or__3824__auto____13065 = G__13063__13064.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____13065) {
            return or__3824__auto____13065
          }else {
            return G__13063__13064.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__13063__13064.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__13063__13064)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__13063__13064)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__13066 = cljs.core.seq.call(null, o);
      var tcoll__13067 = tcoll;
      while(true) {
        var temp__3971__auto____13068 = cljs.core.first.call(null, es__13066);
        if(cljs.core.truth_(temp__3971__auto____13068)) {
          var e__13069 = temp__3971__auto____13068;
          var G__13075 = cljs.core.next.call(null, es__13066);
          var G__13076 = tcoll__13067.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__13067, cljs.core.key.call(null, e__13069), cljs.core.val.call(null, e__13069));
          es__13066 = G__13075;
          tcoll__13067 = G__13076;
          continue
        }else {
          return tcoll__13067
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__13070 = this;
  if(cljs.core.truth_(this__13070.editable_QMARK_)) {
    this__13070.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__13070.len, 2), this__13070.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__13071 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__13072 = this;
  if(cljs.core.truth_(this__13072.editable_QMARK_)) {
    var idx__13073 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__13073 === -1) {
      return not_found
    }else {
      return this__13072.arr[idx__13073 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__13074 = this;
  if(cljs.core.truth_(this__13074.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__13074.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__13079 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__13080 = 0;
  while(true) {
    if(i__13080 < len) {
      var G__13081 = cljs.core.assoc_BANG_.call(null, out__13079, arr[i__13080], arr[i__13080 + 1]);
      var G__13082 = i__13080 + 2;
      out__13079 = G__13081;
      i__13080 = G__13082;
      continue
    }else {
      return out__13079
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2211__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__13087__13088 = arr.slice();
    G__13087__13088[i] = a;
    return G__13087__13088
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__13089__13090 = arr.slice();
    G__13089__13090[i] = a;
    G__13089__13090[j] = b;
    return G__13089__13090
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__13092 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__13092, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__13092, 2 * i, new_arr__13092.length - 2 * i);
  return new_arr__13092
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__13095 = inode.ensure_editable(edit);
    editable__13095.arr[i] = a;
    return editable__13095
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__13096 = inode.ensure_editable(edit);
    editable__13096.arr[i] = a;
    editable__13096.arr[j] = b;
    return editable__13096
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__13103 = arr.length;
  var i__13104 = 0;
  var init__13105 = init;
  while(true) {
    if(i__13104 < len__13103) {
      var init__13108 = function() {
        var k__13106 = arr[i__13104];
        if(!(k__13106 == null)) {
          return f.call(null, init__13105, k__13106, arr[i__13104 + 1])
        }else {
          var node__13107 = arr[i__13104 + 1];
          if(!(node__13107 == null)) {
            return node__13107.kv_reduce(f, init__13105)
          }else {
            return init__13105
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__13108)) {
        return cljs.core.deref.call(null, init__13108)
      }else {
        var G__13109 = i__13104 + 2;
        var G__13110 = init__13108;
        i__13104 = G__13109;
        init__13105 = G__13110;
        continue
      }
    }else {
      return init__13105
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__13111 = this;
  var inode__13112 = this;
  if(this__13111.bitmap === bit) {
    return null
  }else {
    var editable__13113 = inode__13112.ensure_editable(e);
    var earr__13114 = editable__13113.arr;
    var len__13115 = earr__13114.length;
    editable__13113.bitmap = bit ^ editable__13113.bitmap;
    cljs.core.array_copy.call(null, earr__13114, 2 * (i + 1), earr__13114, 2 * i, len__13115 - 2 * (i + 1));
    earr__13114[len__13115 - 2] = null;
    earr__13114[len__13115 - 1] = null;
    return editable__13113
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__13116 = this;
  var inode__13117 = this;
  var bit__13118 = 1 << (hash >>> shift & 31);
  var idx__13119 = cljs.core.bitmap_indexed_node_index.call(null, this__13116.bitmap, bit__13118);
  if((this__13116.bitmap & bit__13118) === 0) {
    var n__13120 = cljs.core.bit_count.call(null, this__13116.bitmap);
    if(2 * n__13120 < this__13116.arr.length) {
      var editable__13121 = inode__13117.ensure_editable(edit);
      var earr__13122 = editable__13121.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__13122, 2 * idx__13119, earr__13122, 2 * (idx__13119 + 1), 2 * (n__13120 - idx__13119));
      earr__13122[2 * idx__13119] = key;
      earr__13122[2 * idx__13119 + 1] = val;
      editable__13121.bitmap = editable__13121.bitmap | bit__13118;
      return editable__13121
    }else {
      if(n__13120 >= 16) {
        var nodes__13123 = cljs.core.make_array.call(null, 32);
        var jdx__13124 = hash >>> shift & 31;
        nodes__13123[jdx__13124] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__13125 = 0;
        var j__13126 = 0;
        while(true) {
          if(i__13125 < 32) {
            if((this__13116.bitmap >>> i__13125 & 1) === 0) {
              var G__13179 = i__13125 + 1;
              var G__13180 = j__13126;
              i__13125 = G__13179;
              j__13126 = G__13180;
              continue
            }else {
              nodes__13123[i__13125] = !(this__13116.arr[j__13126] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__13116.arr[j__13126]), this__13116.arr[j__13126], this__13116.arr[j__13126 + 1], added_leaf_QMARK_) : this__13116.arr[j__13126 + 1];
              var G__13181 = i__13125 + 1;
              var G__13182 = j__13126 + 2;
              i__13125 = G__13181;
              j__13126 = G__13182;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__13120 + 1, nodes__13123)
      }else {
        if("\ufdd0'else") {
          var new_arr__13127 = cljs.core.make_array.call(null, 2 * (n__13120 + 4));
          cljs.core.array_copy.call(null, this__13116.arr, 0, new_arr__13127, 0, 2 * idx__13119);
          new_arr__13127[2 * idx__13119] = key;
          new_arr__13127[2 * idx__13119 + 1] = val;
          cljs.core.array_copy.call(null, this__13116.arr, 2 * idx__13119, new_arr__13127, 2 * (idx__13119 + 1), 2 * (n__13120 - idx__13119));
          added_leaf_QMARK_.val = true;
          var editable__13128 = inode__13117.ensure_editable(edit);
          editable__13128.arr = new_arr__13127;
          editable__13128.bitmap = editable__13128.bitmap | bit__13118;
          return editable__13128
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__13129 = this__13116.arr[2 * idx__13119];
    var val_or_node__13130 = this__13116.arr[2 * idx__13119 + 1];
    if(key_or_nil__13129 == null) {
      var n__13131 = val_or_node__13130.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__13131 === val_or_node__13130) {
        return inode__13117
      }else {
        return cljs.core.edit_and_set.call(null, inode__13117, edit, 2 * idx__13119 + 1, n__13131)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__13129)) {
        if(val === val_or_node__13130) {
          return inode__13117
        }else {
          return cljs.core.edit_and_set.call(null, inode__13117, edit, 2 * idx__13119 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__13117, edit, 2 * idx__13119, null, 2 * idx__13119 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__13129, val_or_node__13130, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__13132 = this;
  var inode__13133 = this;
  return cljs.core.create_inode_seq.call(null, this__13132.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__13134 = this;
  var inode__13135 = this;
  var bit__13136 = 1 << (hash >>> shift & 31);
  if((this__13134.bitmap & bit__13136) === 0) {
    return inode__13135
  }else {
    var idx__13137 = cljs.core.bitmap_indexed_node_index.call(null, this__13134.bitmap, bit__13136);
    var key_or_nil__13138 = this__13134.arr[2 * idx__13137];
    var val_or_node__13139 = this__13134.arr[2 * idx__13137 + 1];
    if(key_or_nil__13138 == null) {
      var n__13140 = val_or_node__13139.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__13140 === val_or_node__13139) {
        return inode__13135
      }else {
        if(!(n__13140 == null)) {
          return cljs.core.edit_and_set.call(null, inode__13135, edit, 2 * idx__13137 + 1, n__13140)
        }else {
          if(this__13134.bitmap === bit__13136) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__13135.edit_and_remove_pair(edit, bit__13136, idx__13137)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__13138)) {
        removed_leaf_QMARK_[0] = true;
        return inode__13135.edit_and_remove_pair(edit, bit__13136, idx__13137)
      }else {
        if("\ufdd0'else") {
          return inode__13135
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__13141 = this;
  var inode__13142 = this;
  if(e === this__13141.edit) {
    return inode__13142
  }else {
    var n__13143 = cljs.core.bit_count.call(null, this__13141.bitmap);
    var new_arr__13144 = cljs.core.make_array.call(null, n__13143 < 0 ? 4 : 2 * (n__13143 + 1));
    cljs.core.array_copy.call(null, this__13141.arr, 0, new_arr__13144, 0, 2 * n__13143);
    return new cljs.core.BitmapIndexedNode(e, this__13141.bitmap, new_arr__13144)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__13145 = this;
  var inode__13146 = this;
  return cljs.core.inode_kv_reduce.call(null, this__13145.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__13147 = this;
  var inode__13148 = this;
  var bit__13149 = 1 << (hash >>> shift & 31);
  if((this__13147.bitmap & bit__13149) === 0) {
    return not_found
  }else {
    var idx__13150 = cljs.core.bitmap_indexed_node_index.call(null, this__13147.bitmap, bit__13149);
    var key_or_nil__13151 = this__13147.arr[2 * idx__13150];
    var val_or_node__13152 = this__13147.arr[2 * idx__13150 + 1];
    if(key_or_nil__13151 == null) {
      return val_or_node__13152.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__13151)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__13151, val_or_node__13152], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__13153 = this;
  var inode__13154 = this;
  var bit__13155 = 1 << (hash >>> shift & 31);
  if((this__13153.bitmap & bit__13155) === 0) {
    return inode__13154
  }else {
    var idx__13156 = cljs.core.bitmap_indexed_node_index.call(null, this__13153.bitmap, bit__13155);
    var key_or_nil__13157 = this__13153.arr[2 * idx__13156];
    var val_or_node__13158 = this__13153.arr[2 * idx__13156 + 1];
    if(key_or_nil__13157 == null) {
      var n__13159 = val_or_node__13158.inode_without(shift + 5, hash, key);
      if(n__13159 === val_or_node__13158) {
        return inode__13154
      }else {
        if(!(n__13159 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__13153.bitmap, cljs.core.clone_and_set.call(null, this__13153.arr, 2 * idx__13156 + 1, n__13159))
        }else {
          if(this__13153.bitmap === bit__13155) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__13153.bitmap ^ bit__13155, cljs.core.remove_pair.call(null, this__13153.arr, idx__13156))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__13157)) {
        return new cljs.core.BitmapIndexedNode(null, this__13153.bitmap ^ bit__13155, cljs.core.remove_pair.call(null, this__13153.arr, idx__13156))
      }else {
        if("\ufdd0'else") {
          return inode__13154
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__13160 = this;
  var inode__13161 = this;
  var bit__13162 = 1 << (hash >>> shift & 31);
  var idx__13163 = cljs.core.bitmap_indexed_node_index.call(null, this__13160.bitmap, bit__13162);
  if((this__13160.bitmap & bit__13162) === 0) {
    var n__13164 = cljs.core.bit_count.call(null, this__13160.bitmap);
    if(n__13164 >= 16) {
      var nodes__13165 = cljs.core.make_array.call(null, 32);
      var jdx__13166 = hash >>> shift & 31;
      nodes__13165[jdx__13166] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__13167 = 0;
      var j__13168 = 0;
      while(true) {
        if(i__13167 < 32) {
          if((this__13160.bitmap >>> i__13167 & 1) === 0) {
            var G__13183 = i__13167 + 1;
            var G__13184 = j__13168;
            i__13167 = G__13183;
            j__13168 = G__13184;
            continue
          }else {
            nodes__13165[i__13167] = !(this__13160.arr[j__13168] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__13160.arr[j__13168]), this__13160.arr[j__13168], this__13160.arr[j__13168 + 1], added_leaf_QMARK_) : this__13160.arr[j__13168 + 1];
            var G__13185 = i__13167 + 1;
            var G__13186 = j__13168 + 2;
            i__13167 = G__13185;
            j__13168 = G__13186;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__13164 + 1, nodes__13165)
    }else {
      var new_arr__13169 = cljs.core.make_array.call(null, 2 * (n__13164 + 1));
      cljs.core.array_copy.call(null, this__13160.arr, 0, new_arr__13169, 0, 2 * idx__13163);
      new_arr__13169[2 * idx__13163] = key;
      new_arr__13169[2 * idx__13163 + 1] = val;
      cljs.core.array_copy.call(null, this__13160.arr, 2 * idx__13163, new_arr__13169, 2 * (idx__13163 + 1), 2 * (n__13164 - idx__13163));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__13160.bitmap | bit__13162, new_arr__13169)
    }
  }else {
    var key_or_nil__13170 = this__13160.arr[2 * idx__13163];
    var val_or_node__13171 = this__13160.arr[2 * idx__13163 + 1];
    if(key_or_nil__13170 == null) {
      var n__13172 = val_or_node__13171.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__13172 === val_or_node__13171) {
        return inode__13161
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__13160.bitmap, cljs.core.clone_and_set.call(null, this__13160.arr, 2 * idx__13163 + 1, n__13172))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__13170)) {
        if(val === val_or_node__13171) {
          return inode__13161
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__13160.bitmap, cljs.core.clone_and_set.call(null, this__13160.arr, 2 * idx__13163 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__13160.bitmap, cljs.core.clone_and_set.call(null, this__13160.arr, 2 * idx__13163, null, 2 * idx__13163 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__13170, val_or_node__13171, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__13173 = this;
  var inode__13174 = this;
  var bit__13175 = 1 << (hash >>> shift & 31);
  if((this__13173.bitmap & bit__13175) === 0) {
    return not_found
  }else {
    var idx__13176 = cljs.core.bitmap_indexed_node_index.call(null, this__13173.bitmap, bit__13175);
    var key_or_nil__13177 = this__13173.arr[2 * idx__13176];
    var val_or_node__13178 = this__13173.arr[2 * idx__13176 + 1];
    if(key_or_nil__13177 == null) {
      return val_or_node__13178.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__13177)) {
        return val_or_node__13178
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__13194 = array_node.arr;
  var len__13195 = 2 * (array_node.cnt - 1);
  var new_arr__13196 = cljs.core.make_array.call(null, len__13195);
  var i__13197 = 0;
  var j__13198 = 1;
  var bitmap__13199 = 0;
  while(true) {
    if(i__13197 < len__13195) {
      if(function() {
        var and__3822__auto____13200 = !(i__13197 === idx);
        if(and__3822__auto____13200) {
          return!(arr__13194[i__13197] == null)
        }else {
          return and__3822__auto____13200
        }
      }()) {
        new_arr__13196[j__13198] = arr__13194[i__13197];
        var G__13201 = i__13197 + 1;
        var G__13202 = j__13198 + 2;
        var G__13203 = bitmap__13199 | 1 << i__13197;
        i__13197 = G__13201;
        j__13198 = G__13202;
        bitmap__13199 = G__13203;
        continue
      }else {
        var G__13204 = i__13197 + 1;
        var G__13205 = j__13198;
        var G__13206 = bitmap__13199;
        i__13197 = G__13204;
        j__13198 = G__13205;
        bitmap__13199 = G__13206;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__13199, new_arr__13196)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__13207 = this;
  var inode__13208 = this;
  var idx__13209 = hash >>> shift & 31;
  var node__13210 = this__13207.arr[idx__13209];
  if(node__13210 == null) {
    var editable__13211 = cljs.core.edit_and_set.call(null, inode__13208, edit, idx__13209, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__13211.cnt = editable__13211.cnt + 1;
    return editable__13211
  }else {
    var n__13212 = node__13210.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__13212 === node__13210) {
      return inode__13208
    }else {
      return cljs.core.edit_and_set.call(null, inode__13208, edit, idx__13209, n__13212)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__13213 = this;
  var inode__13214 = this;
  return cljs.core.create_array_node_seq.call(null, this__13213.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__13215 = this;
  var inode__13216 = this;
  var idx__13217 = hash >>> shift & 31;
  var node__13218 = this__13215.arr[idx__13217];
  if(node__13218 == null) {
    return inode__13216
  }else {
    var n__13219 = node__13218.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__13219 === node__13218) {
      return inode__13216
    }else {
      if(n__13219 == null) {
        if(this__13215.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__13216, edit, idx__13217)
        }else {
          var editable__13220 = cljs.core.edit_and_set.call(null, inode__13216, edit, idx__13217, n__13219);
          editable__13220.cnt = editable__13220.cnt - 1;
          return editable__13220
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__13216, edit, idx__13217, n__13219)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__13221 = this;
  var inode__13222 = this;
  if(e === this__13221.edit) {
    return inode__13222
  }else {
    return new cljs.core.ArrayNode(e, this__13221.cnt, this__13221.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__13223 = this;
  var inode__13224 = this;
  var len__13225 = this__13223.arr.length;
  var i__13226 = 0;
  var init__13227 = init;
  while(true) {
    if(i__13226 < len__13225) {
      var node__13228 = this__13223.arr[i__13226];
      if(!(node__13228 == null)) {
        var init__13229 = node__13228.kv_reduce(f, init__13227);
        if(cljs.core.reduced_QMARK_.call(null, init__13229)) {
          return cljs.core.deref.call(null, init__13229)
        }else {
          var G__13248 = i__13226 + 1;
          var G__13249 = init__13229;
          i__13226 = G__13248;
          init__13227 = G__13249;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__13227
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__13230 = this;
  var inode__13231 = this;
  var idx__13232 = hash >>> shift & 31;
  var node__13233 = this__13230.arr[idx__13232];
  if(!(node__13233 == null)) {
    return node__13233.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__13234 = this;
  var inode__13235 = this;
  var idx__13236 = hash >>> shift & 31;
  var node__13237 = this__13234.arr[idx__13236];
  if(!(node__13237 == null)) {
    var n__13238 = node__13237.inode_without(shift + 5, hash, key);
    if(n__13238 === node__13237) {
      return inode__13235
    }else {
      if(n__13238 == null) {
        if(this__13234.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__13235, null, idx__13236)
        }else {
          return new cljs.core.ArrayNode(null, this__13234.cnt - 1, cljs.core.clone_and_set.call(null, this__13234.arr, idx__13236, n__13238))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__13234.cnt, cljs.core.clone_and_set.call(null, this__13234.arr, idx__13236, n__13238))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__13235
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__13239 = this;
  var inode__13240 = this;
  var idx__13241 = hash >>> shift & 31;
  var node__13242 = this__13239.arr[idx__13241];
  if(node__13242 == null) {
    return new cljs.core.ArrayNode(null, this__13239.cnt + 1, cljs.core.clone_and_set.call(null, this__13239.arr, idx__13241, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__13243 = node__13242.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__13243 === node__13242) {
      return inode__13240
    }else {
      return new cljs.core.ArrayNode(null, this__13239.cnt, cljs.core.clone_and_set.call(null, this__13239.arr, idx__13241, n__13243))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__13244 = this;
  var inode__13245 = this;
  var idx__13246 = hash >>> shift & 31;
  var node__13247 = this__13244.arr[idx__13246];
  if(!(node__13247 == null)) {
    return node__13247.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__13252 = 2 * cnt;
  var i__13253 = 0;
  while(true) {
    if(i__13253 < lim__13252) {
      if(cljs.core.key_test.call(null, key, arr[i__13253])) {
        return i__13253
      }else {
        var G__13254 = i__13253 + 2;
        i__13253 = G__13254;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__13255 = this;
  var inode__13256 = this;
  if(hash === this__13255.collision_hash) {
    var idx__13257 = cljs.core.hash_collision_node_find_index.call(null, this__13255.arr, this__13255.cnt, key);
    if(idx__13257 === -1) {
      if(this__13255.arr.length > 2 * this__13255.cnt) {
        var editable__13258 = cljs.core.edit_and_set.call(null, inode__13256, edit, 2 * this__13255.cnt, key, 2 * this__13255.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__13258.cnt = editable__13258.cnt + 1;
        return editable__13258
      }else {
        var len__13259 = this__13255.arr.length;
        var new_arr__13260 = cljs.core.make_array.call(null, len__13259 + 2);
        cljs.core.array_copy.call(null, this__13255.arr, 0, new_arr__13260, 0, len__13259);
        new_arr__13260[len__13259] = key;
        new_arr__13260[len__13259 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__13256.ensure_editable_array(edit, this__13255.cnt + 1, new_arr__13260)
      }
    }else {
      if(this__13255.arr[idx__13257 + 1] === val) {
        return inode__13256
      }else {
        return cljs.core.edit_and_set.call(null, inode__13256, edit, idx__13257 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__13255.collision_hash >>> shift & 31), [null, inode__13256, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__13261 = this;
  var inode__13262 = this;
  return cljs.core.create_inode_seq.call(null, this__13261.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__13263 = this;
  var inode__13264 = this;
  var idx__13265 = cljs.core.hash_collision_node_find_index.call(null, this__13263.arr, this__13263.cnt, key);
  if(idx__13265 === -1) {
    return inode__13264
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__13263.cnt === 1) {
      return null
    }else {
      var editable__13266 = inode__13264.ensure_editable(edit);
      var earr__13267 = editable__13266.arr;
      earr__13267[idx__13265] = earr__13267[2 * this__13263.cnt - 2];
      earr__13267[idx__13265 + 1] = earr__13267[2 * this__13263.cnt - 1];
      earr__13267[2 * this__13263.cnt - 1] = null;
      earr__13267[2 * this__13263.cnt - 2] = null;
      editable__13266.cnt = editable__13266.cnt - 1;
      return editable__13266
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__13268 = this;
  var inode__13269 = this;
  if(e === this__13268.edit) {
    return inode__13269
  }else {
    var new_arr__13270 = cljs.core.make_array.call(null, 2 * (this__13268.cnt + 1));
    cljs.core.array_copy.call(null, this__13268.arr, 0, new_arr__13270, 0, 2 * this__13268.cnt);
    return new cljs.core.HashCollisionNode(e, this__13268.collision_hash, this__13268.cnt, new_arr__13270)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__13271 = this;
  var inode__13272 = this;
  return cljs.core.inode_kv_reduce.call(null, this__13271.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__13273 = this;
  var inode__13274 = this;
  var idx__13275 = cljs.core.hash_collision_node_find_index.call(null, this__13273.arr, this__13273.cnt, key);
  if(idx__13275 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__13273.arr[idx__13275])) {
      return cljs.core.PersistentVector.fromArray([this__13273.arr[idx__13275], this__13273.arr[idx__13275 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__13276 = this;
  var inode__13277 = this;
  var idx__13278 = cljs.core.hash_collision_node_find_index.call(null, this__13276.arr, this__13276.cnt, key);
  if(idx__13278 === -1) {
    return inode__13277
  }else {
    if(this__13276.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__13276.collision_hash, this__13276.cnt - 1, cljs.core.remove_pair.call(null, this__13276.arr, cljs.core.quot.call(null, idx__13278, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__13279 = this;
  var inode__13280 = this;
  if(hash === this__13279.collision_hash) {
    var idx__13281 = cljs.core.hash_collision_node_find_index.call(null, this__13279.arr, this__13279.cnt, key);
    if(idx__13281 === -1) {
      var len__13282 = this__13279.arr.length;
      var new_arr__13283 = cljs.core.make_array.call(null, len__13282 + 2);
      cljs.core.array_copy.call(null, this__13279.arr, 0, new_arr__13283, 0, len__13282);
      new_arr__13283[len__13282] = key;
      new_arr__13283[len__13282 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__13279.collision_hash, this__13279.cnt + 1, new_arr__13283)
    }else {
      if(cljs.core._EQ_.call(null, this__13279.arr[idx__13281], val)) {
        return inode__13280
      }else {
        return new cljs.core.HashCollisionNode(null, this__13279.collision_hash, this__13279.cnt, cljs.core.clone_and_set.call(null, this__13279.arr, idx__13281 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__13279.collision_hash >>> shift & 31), [null, inode__13280])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__13284 = this;
  var inode__13285 = this;
  var idx__13286 = cljs.core.hash_collision_node_find_index.call(null, this__13284.arr, this__13284.cnt, key);
  if(idx__13286 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__13284.arr[idx__13286])) {
      return this__13284.arr[idx__13286 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__13287 = this;
  var inode__13288 = this;
  if(e === this__13287.edit) {
    this__13287.arr = array;
    this__13287.cnt = count;
    return inode__13288
  }else {
    return new cljs.core.HashCollisionNode(this__13287.edit, this__13287.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__13293 = cljs.core.hash.call(null, key1);
    if(key1hash__13293 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__13293, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___13294 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__13293, key1, val1, added_leaf_QMARK___13294).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___13294)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__13295 = cljs.core.hash.call(null, key1);
    if(key1hash__13295 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__13295, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___13296 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__13295, key1, val1, added_leaf_QMARK___13296).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___13296)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13297 = this;
  var h__2093__auto____13298 = this__13297.__hash;
  if(!(h__2093__auto____13298 == null)) {
    return h__2093__auto____13298
  }else {
    var h__2093__auto____13299 = cljs.core.hash_coll.call(null, coll);
    this__13297.__hash = h__2093__auto____13299;
    return h__2093__auto____13299
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13300 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__13301 = this;
  var this__13302 = this;
  return cljs.core.pr_str.call(null, this__13302)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__13303 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__13304 = this;
  if(this__13304.s == null) {
    return cljs.core.PersistentVector.fromArray([this__13304.nodes[this__13304.i], this__13304.nodes[this__13304.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__13304.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__13305 = this;
  if(this__13305.s == null) {
    return cljs.core.create_inode_seq.call(null, this__13305.nodes, this__13305.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__13305.nodes, this__13305.i, cljs.core.next.call(null, this__13305.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13306 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13307 = this;
  return new cljs.core.NodeSeq(meta, this__13307.nodes, this__13307.i, this__13307.s, this__13307.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13308 = this;
  return this__13308.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13309 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__13309.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__13316 = nodes.length;
      var j__13317 = i;
      while(true) {
        if(j__13317 < len__13316) {
          if(!(nodes[j__13317] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__13317, null, null)
          }else {
            var temp__3971__auto____13318 = nodes[j__13317 + 1];
            if(cljs.core.truth_(temp__3971__auto____13318)) {
              var node__13319 = temp__3971__auto____13318;
              var temp__3971__auto____13320 = node__13319.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____13320)) {
                var node_seq__13321 = temp__3971__auto____13320;
                return new cljs.core.NodeSeq(null, nodes, j__13317 + 2, node_seq__13321, null)
              }else {
                var G__13322 = j__13317 + 2;
                j__13317 = G__13322;
                continue
              }
            }else {
              var G__13323 = j__13317 + 2;
              j__13317 = G__13323;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13324 = this;
  var h__2093__auto____13325 = this__13324.__hash;
  if(!(h__2093__auto____13325 == null)) {
    return h__2093__auto____13325
  }else {
    var h__2093__auto____13326 = cljs.core.hash_coll.call(null, coll);
    this__13324.__hash = h__2093__auto____13326;
    return h__2093__auto____13326
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13327 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__13328 = this;
  var this__13329 = this;
  return cljs.core.pr_str.call(null, this__13329)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__13330 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__13331 = this;
  return cljs.core.first.call(null, this__13331.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__13332 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__13332.nodes, this__13332.i, cljs.core.next.call(null, this__13332.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13333 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13334 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__13334.nodes, this__13334.i, this__13334.s, this__13334.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13335 = this;
  return this__13335.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13336 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__13336.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__13343 = nodes.length;
      var j__13344 = i;
      while(true) {
        if(j__13344 < len__13343) {
          var temp__3971__auto____13345 = nodes[j__13344];
          if(cljs.core.truth_(temp__3971__auto____13345)) {
            var nj__13346 = temp__3971__auto____13345;
            var temp__3971__auto____13347 = nj__13346.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____13347)) {
              var ns__13348 = temp__3971__auto____13347;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__13344 + 1, ns__13348, null)
            }else {
              var G__13349 = j__13344 + 1;
              j__13344 = G__13349;
              continue
            }
          }else {
            var G__13350 = j__13344 + 1;
            j__13344 = G__13350;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__13353 = this;
  return new cljs.core.TransientHashMap({}, this__13353.root, this__13353.cnt, this__13353.has_nil_QMARK_, this__13353.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13354 = this;
  var h__2093__auto____13355 = this__13354.__hash;
  if(!(h__2093__auto____13355 == null)) {
    return h__2093__auto____13355
  }else {
    var h__2093__auto____13356 = cljs.core.hash_imap.call(null, coll);
    this__13354.__hash = h__2093__auto____13356;
    return h__2093__auto____13356
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13357 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13358 = this;
  if(k == null) {
    if(this__13358.has_nil_QMARK_) {
      return this__13358.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__13358.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__13358.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__13359 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____13360 = this__13359.has_nil_QMARK_;
      if(and__3822__auto____13360) {
        return v === this__13359.nil_val
      }else {
        return and__3822__auto____13360
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__13359.meta, this__13359.has_nil_QMARK_ ? this__13359.cnt : this__13359.cnt + 1, this__13359.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___13361 = new cljs.core.Box(false);
    var new_root__13362 = (this__13359.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__13359.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___13361);
    if(new_root__13362 === this__13359.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__13359.meta, added_leaf_QMARK___13361.val ? this__13359.cnt + 1 : this__13359.cnt, new_root__13362, this__13359.has_nil_QMARK_, this__13359.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__13363 = this;
  if(k == null) {
    return this__13363.has_nil_QMARK_
  }else {
    if(this__13363.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__13363.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__13386 = null;
  var G__13386__2 = function(this_sym13364, k) {
    var this__13366 = this;
    var this_sym13364__13367 = this;
    var coll__13368 = this_sym13364__13367;
    return coll__13368.cljs$core$ILookup$_lookup$arity$2(coll__13368, k)
  };
  var G__13386__3 = function(this_sym13365, k, not_found) {
    var this__13366 = this;
    var this_sym13365__13369 = this;
    var coll__13370 = this_sym13365__13369;
    return coll__13370.cljs$core$ILookup$_lookup$arity$3(coll__13370, k, not_found)
  };
  G__13386 = function(this_sym13365, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13386__2.call(this, this_sym13365, k);
      case 3:
        return G__13386__3.call(this, this_sym13365, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13386
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym13351, args13352) {
  var this__13371 = this;
  return this_sym13351.call.apply(this_sym13351, [this_sym13351].concat(args13352.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__13372 = this;
  var init__13373 = this__13372.has_nil_QMARK_ ? f.call(null, init, null, this__13372.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__13373)) {
    return cljs.core.deref.call(null, init__13373)
  }else {
    if(!(this__13372.root == null)) {
      return this__13372.root.kv_reduce(f, init__13373)
    }else {
      if("\ufdd0'else") {
        return init__13373
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__13374 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__13375 = this;
  var this__13376 = this;
  return cljs.core.pr_str.call(null, this__13376)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13377 = this;
  if(this__13377.cnt > 0) {
    var s__13378 = !(this__13377.root == null) ? this__13377.root.inode_seq() : null;
    if(this__13377.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__13377.nil_val], true), s__13378)
    }else {
      return s__13378
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13379 = this;
  return this__13379.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13380 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13381 = this;
  return new cljs.core.PersistentHashMap(meta, this__13381.cnt, this__13381.root, this__13381.has_nil_QMARK_, this__13381.nil_val, this__13381.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13382 = this;
  return this__13382.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13383 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__13383.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__13384 = this;
  if(k == null) {
    if(this__13384.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__13384.meta, this__13384.cnt - 1, this__13384.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__13384.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__13385 = this__13384.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__13385 === this__13384.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__13384.meta, this__13384.cnt - 1, new_root__13385, this__13384.has_nil_QMARK_, this__13384.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__13387 = ks.length;
  var i__13388 = 0;
  var out__13389 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__13388 < len__13387) {
      var G__13390 = i__13388 + 1;
      var G__13391 = cljs.core.assoc_BANG_.call(null, out__13389, ks[i__13388], vs[i__13388]);
      i__13388 = G__13390;
      out__13389 = G__13391;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__13389)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__13392 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__13393 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__13394 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__13395 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__13396 = this;
  if(k == null) {
    if(this__13396.has_nil_QMARK_) {
      return this__13396.nil_val
    }else {
      return null
    }
  }else {
    if(this__13396.root == null) {
      return null
    }else {
      return this__13396.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__13397 = this;
  if(k == null) {
    if(this__13397.has_nil_QMARK_) {
      return this__13397.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__13397.root == null) {
      return not_found
    }else {
      return this__13397.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13398 = this;
  if(this__13398.edit) {
    return this__13398.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__13399 = this;
  var tcoll__13400 = this;
  if(this__13399.edit) {
    if(function() {
      var G__13401__13402 = o;
      if(G__13401__13402) {
        if(function() {
          var or__3824__auto____13403 = G__13401__13402.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____13403) {
            return or__3824__auto____13403
          }else {
            return G__13401__13402.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__13401__13402.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__13401__13402)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__13401__13402)
      }
    }()) {
      return tcoll__13400.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__13404 = cljs.core.seq.call(null, o);
      var tcoll__13405 = tcoll__13400;
      while(true) {
        var temp__3971__auto____13406 = cljs.core.first.call(null, es__13404);
        if(cljs.core.truth_(temp__3971__auto____13406)) {
          var e__13407 = temp__3971__auto____13406;
          var G__13418 = cljs.core.next.call(null, es__13404);
          var G__13419 = tcoll__13405.assoc_BANG_(cljs.core.key.call(null, e__13407), cljs.core.val.call(null, e__13407));
          es__13404 = G__13418;
          tcoll__13405 = G__13419;
          continue
        }else {
          return tcoll__13405
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__13408 = this;
  var tcoll__13409 = this;
  if(this__13408.edit) {
    if(k == null) {
      if(this__13408.nil_val === v) {
      }else {
        this__13408.nil_val = v
      }
      if(this__13408.has_nil_QMARK_) {
      }else {
        this__13408.count = this__13408.count + 1;
        this__13408.has_nil_QMARK_ = true
      }
      return tcoll__13409
    }else {
      var added_leaf_QMARK___13410 = new cljs.core.Box(false);
      var node__13411 = (this__13408.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__13408.root).inode_assoc_BANG_(this__13408.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___13410);
      if(node__13411 === this__13408.root) {
      }else {
        this__13408.root = node__13411
      }
      if(added_leaf_QMARK___13410.val) {
        this__13408.count = this__13408.count + 1
      }else {
      }
      return tcoll__13409
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__13412 = this;
  var tcoll__13413 = this;
  if(this__13412.edit) {
    if(k == null) {
      if(this__13412.has_nil_QMARK_) {
        this__13412.has_nil_QMARK_ = false;
        this__13412.nil_val = null;
        this__13412.count = this__13412.count - 1;
        return tcoll__13413
      }else {
        return tcoll__13413
      }
    }else {
      if(this__13412.root == null) {
        return tcoll__13413
      }else {
        var removed_leaf_QMARK___13414 = new cljs.core.Box(false);
        var node__13415 = this__13412.root.inode_without_BANG_(this__13412.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___13414);
        if(node__13415 === this__13412.root) {
        }else {
          this__13412.root = node__13415
        }
        if(cljs.core.truth_(removed_leaf_QMARK___13414[0])) {
          this__13412.count = this__13412.count - 1
        }else {
        }
        return tcoll__13413
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__13416 = this;
  var tcoll__13417 = this;
  if(this__13416.edit) {
    this__13416.edit = null;
    return new cljs.core.PersistentHashMap(null, this__13416.count, this__13416.root, this__13416.has_nil_QMARK_, this__13416.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__13422 = node;
  var stack__13423 = stack;
  while(true) {
    if(!(t__13422 == null)) {
      var G__13424 = ascending_QMARK_ ? t__13422.left : t__13422.right;
      var G__13425 = cljs.core.conj.call(null, stack__13423, t__13422);
      t__13422 = G__13424;
      stack__13423 = G__13425;
      continue
    }else {
      return stack__13423
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13426 = this;
  var h__2093__auto____13427 = this__13426.__hash;
  if(!(h__2093__auto____13427 == null)) {
    return h__2093__auto____13427
  }else {
    var h__2093__auto____13428 = cljs.core.hash_coll.call(null, coll);
    this__13426.__hash = h__2093__auto____13428;
    return h__2093__auto____13428
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13429 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__13430 = this;
  var this__13431 = this;
  return cljs.core.pr_str.call(null, this__13431)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__13432 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13433 = this;
  if(this__13433.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__13433.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__13434 = this;
  return cljs.core.peek.call(null, this__13434.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__13435 = this;
  var t__13436 = cljs.core.first.call(null, this__13435.stack);
  var next_stack__13437 = cljs.core.tree_map_seq_push.call(null, this__13435.ascending_QMARK_ ? t__13436.right : t__13436.left, cljs.core.next.call(null, this__13435.stack), this__13435.ascending_QMARK_);
  if(!(next_stack__13437 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__13437, this__13435.ascending_QMARK_, this__13435.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13438 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13439 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__13439.stack, this__13439.ascending_QMARK_, this__13439.cnt, this__13439.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13440 = this;
  return this__13440.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____13442 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____13442) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____13442
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____13444 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____13444) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____13444
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__13448 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__13448)) {
    return cljs.core.deref.call(null, init__13448)
  }else {
    var init__13449 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__13448) : init__13448;
    if(cljs.core.reduced_QMARK_.call(null, init__13449)) {
      return cljs.core.deref.call(null, init__13449)
    }else {
      var init__13450 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__13449) : init__13449;
      if(cljs.core.reduced_QMARK_.call(null, init__13450)) {
        return cljs.core.deref.call(null, init__13450)
      }else {
        return init__13450
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13453 = this;
  var h__2093__auto____13454 = this__13453.__hash;
  if(!(h__2093__auto____13454 == null)) {
    return h__2093__auto____13454
  }else {
    var h__2093__auto____13455 = cljs.core.hash_coll.call(null, coll);
    this__13453.__hash = h__2093__auto____13455;
    return h__2093__auto____13455
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__13456 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__13457 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__13458 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__13458.key, this__13458.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__13506 = null;
  var G__13506__2 = function(this_sym13459, k) {
    var this__13461 = this;
    var this_sym13459__13462 = this;
    var node__13463 = this_sym13459__13462;
    return node__13463.cljs$core$ILookup$_lookup$arity$2(node__13463, k)
  };
  var G__13506__3 = function(this_sym13460, k, not_found) {
    var this__13461 = this;
    var this_sym13460__13464 = this;
    var node__13465 = this_sym13460__13464;
    return node__13465.cljs$core$ILookup$_lookup$arity$3(node__13465, k, not_found)
  };
  G__13506 = function(this_sym13460, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13506__2.call(this, this_sym13460, k);
      case 3:
        return G__13506__3.call(this, this_sym13460, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13506
}();
cljs.core.BlackNode.prototype.apply = function(this_sym13451, args13452) {
  var this__13466 = this;
  return this_sym13451.call.apply(this_sym13451, [this_sym13451].concat(args13452.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__13467 = this;
  return cljs.core.PersistentVector.fromArray([this__13467.key, this__13467.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__13468 = this;
  return this__13468.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__13469 = this;
  return this__13469.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__13470 = this;
  var node__13471 = this;
  return ins.balance_right(node__13471)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__13472 = this;
  var node__13473 = this;
  return new cljs.core.RedNode(this__13472.key, this__13472.val, this__13472.left, this__13472.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__13474 = this;
  var node__13475 = this;
  return cljs.core.balance_right_del.call(null, this__13474.key, this__13474.val, this__13474.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__13476 = this;
  var node__13477 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__13478 = this;
  var node__13479 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__13479, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__13480 = this;
  var node__13481 = this;
  return cljs.core.balance_left_del.call(null, this__13480.key, this__13480.val, del, this__13480.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__13482 = this;
  var node__13483 = this;
  return ins.balance_left(node__13483)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__13484 = this;
  var node__13485 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__13485, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__13507 = null;
  var G__13507__0 = function() {
    var this__13486 = this;
    var this__13488 = this;
    return cljs.core.pr_str.call(null, this__13488)
  };
  G__13507 = function() {
    switch(arguments.length) {
      case 0:
        return G__13507__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13507
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__13489 = this;
  var node__13490 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__13490, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__13491 = this;
  var node__13492 = this;
  return node__13492
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__13493 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__13494 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__13495 = this;
  return cljs.core.list.call(null, this__13495.key, this__13495.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__13496 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__13497 = this;
  return this__13497.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__13498 = this;
  return cljs.core.PersistentVector.fromArray([this__13498.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__13499 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__13499.key, this__13499.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13500 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__13501 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__13501.key, this__13501.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__13502 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__13503 = this;
  if(n === 0) {
    return this__13503.key
  }else {
    if(n === 1) {
      return this__13503.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__13504 = this;
  if(n === 0) {
    return this__13504.key
  }else {
    if(n === 1) {
      return this__13504.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__13505 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13510 = this;
  var h__2093__auto____13511 = this__13510.__hash;
  if(!(h__2093__auto____13511 == null)) {
    return h__2093__auto____13511
  }else {
    var h__2093__auto____13512 = cljs.core.hash_coll.call(null, coll);
    this__13510.__hash = h__2093__auto____13512;
    return h__2093__auto____13512
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__13513 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__13514 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__13515 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__13515.key, this__13515.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__13563 = null;
  var G__13563__2 = function(this_sym13516, k) {
    var this__13518 = this;
    var this_sym13516__13519 = this;
    var node__13520 = this_sym13516__13519;
    return node__13520.cljs$core$ILookup$_lookup$arity$2(node__13520, k)
  };
  var G__13563__3 = function(this_sym13517, k, not_found) {
    var this__13518 = this;
    var this_sym13517__13521 = this;
    var node__13522 = this_sym13517__13521;
    return node__13522.cljs$core$ILookup$_lookup$arity$3(node__13522, k, not_found)
  };
  G__13563 = function(this_sym13517, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13563__2.call(this, this_sym13517, k);
      case 3:
        return G__13563__3.call(this, this_sym13517, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13563
}();
cljs.core.RedNode.prototype.apply = function(this_sym13508, args13509) {
  var this__13523 = this;
  return this_sym13508.call.apply(this_sym13508, [this_sym13508].concat(args13509.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__13524 = this;
  return cljs.core.PersistentVector.fromArray([this__13524.key, this__13524.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__13525 = this;
  return this__13525.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__13526 = this;
  return this__13526.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__13527 = this;
  var node__13528 = this;
  return new cljs.core.RedNode(this__13527.key, this__13527.val, this__13527.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__13529 = this;
  var node__13530 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__13531 = this;
  var node__13532 = this;
  return new cljs.core.RedNode(this__13531.key, this__13531.val, this__13531.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__13533 = this;
  var node__13534 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__13535 = this;
  var node__13536 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__13536, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__13537 = this;
  var node__13538 = this;
  return new cljs.core.RedNode(this__13537.key, this__13537.val, del, this__13537.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__13539 = this;
  var node__13540 = this;
  return new cljs.core.RedNode(this__13539.key, this__13539.val, ins, this__13539.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__13541 = this;
  var node__13542 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__13541.left)) {
    return new cljs.core.RedNode(this__13541.key, this__13541.val, this__13541.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__13541.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__13541.right)) {
      return new cljs.core.RedNode(this__13541.right.key, this__13541.right.val, new cljs.core.BlackNode(this__13541.key, this__13541.val, this__13541.left, this__13541.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__13541.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__13542, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__13564 = null;
  var G__13564__0 = function() {
    var this__13543 = this;
    var this__13545 = this;
    return cljs.core.pr_str.call(null, this__13545)
  };
  G__13564 = function() {
    switch(arguments.length) {
      case 0:
        return G__13564__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13564
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__13546 = this;
  var node__13547 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__13546.right)) {
    return new cljs.core.RedNode(this__13546.key, this__13546.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__13546.left, null), this__13546.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__13546.left)) {
      return new cljs.core.RedNode(this__13546.left.key, this__13546.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__13546.left.left, null), new cljs.core.BlackNode(this__13546.key, this__13546.val, this__13546.left.right, this__13546.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__13547, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__13548 = this;
  var node__13549 = this;
  return new cljs.core.BlackNode(this__13548.key, this__13548.val, this__13548.left, this__13548.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__13550 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__13551 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__13552 = this;
  return cljs.core.list.call(null, this__13552.key, this__13552.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__13553 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__13554 = this;
  return this__13554.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__13555 = this;
  return cljs.core.PersistentVector.fromArray([this__13555.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__13556 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__13556.key, this__13556.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13557 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__13558 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__13558.key, this__13558.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__13559 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__13560 = this;
  if(n === 0) {
    return this__13560.key
  }else {
    if(n === 1) {
      return this__13560.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__13561 = this;
  if(n === 0) {
    return this__13561.key
  }else {
    if(n === 1) {
      return this__13561.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__13562 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__13568 = comp.call(null, k, tree.key);
    if(c__13568 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__13568 < 0) {
        var ins__13569 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__13569 == null)) {
          return tree.add_left(ins__13569)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__13570 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__13570 == null)) {
            return tree.add_right(ins__13570)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__13573 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__13573)) {
            return new cljs.core.RedNode(app__13573.key, app__13573.val, new cljs.core.RedNode(left.key, left.val, left.left, app__13573.left, null), new cljs.core.RedNode(right.key, right.val, app__13573.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__13573, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__13574 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__13574)) {
              return new cljs.core.RedNode(app__13574.key, app__13574.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__13574.left, null), new cljs.core.BlackNode(right.key, right.val, app__13574.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__13574, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__13580 = comp.call(null, k, tree.key);
    if(c__13580 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__13580 < 0) {
        var del__13581 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____13582 = !(del__13581 == null);
          if(or__3824__auto____13582) {
            return or__3824__auto____13582
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__13581, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__13581, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__13583 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____13584 = !(del__13583 == null);
            if(or__3824__auto____13584) {
              return or__3824__auto____13584
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__13583)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__13583, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__13587 = tree.key;
  var c__13588 = comp.call(null, k, tk__13587);
  if(c__13588 === 0) {
    return tree.replace(tk__13587, v, tree.left, tree.right)
  }else {
    if(c__13588 < 0) {
      return tree.replace(tk__13587, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__13587, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13591 = this;
  var h__2093__auto____13592 = this__13591.__hash;
  if(!(h__2093__auto____13592 == null)) {
    return h__2093__auto____13592
  }else {
    var h__2093__auto____13593 = cljs.core.hash_imap.call(null, coll);
    this__13591.__hash = h__2093__auto____13593;
    return h__2093__auto____13593
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13594 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13595 = this;
  var n__13596 = coll.entry_at(k);
  if(!(n__13596 == null)) {
    return n__13596.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__13597 = this;
  var found__13598 = [null];
  var t__13599 = cljs.core.tree_map_add.call(null, this__13597.comp, this__13597.tree, k, v, found__13598);
  if(t__13599 == null) {
    var found_node__13600 = cljs.core.nth.call(null, found__13598, 0);
    if(cljs.core._EQ_.call(null, v, found_node__13600.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__13597.comp, cljs.core.tree_map_replace.call(null, this__13597.comp, this__13597.tree, k, v), this__13597.cnt, this__13597.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__13597.comp, t__13599.blacken(), this__13597.cnt + 1, this__13597.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__13601 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__13635 = null;
  var G__13635__2 = function(this_sym13602, k) {
    var this__13604 = this;
    var this_sym13602__13605 = this;
    var coll__13606 = this_sym13602__13605;
    return coll__13606.cljs$core$ILookup$_lookup$arity$2(coll__13606, k)
  };
  var G__13635__3 = function(this_sym13603, k, not_found) {
    var this__13604 = this;
    var this_sym13603__13607 = this;
    var coll__13608 = this_sym13603__13607;
    return coll__13608.cljs$core$ILookup$_lookup$arity$3(coll__13608, k, not_found)
  };
  G__13635 = function(this_sym13603, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13635__2.call(this, this_sym13603, k);
      case 3:
        return G__13635__3.call(this, this_sym13603, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13635
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym13589, args13590) {
  var this__13609 = this;
  return this_sym13589.call.apply(this_sym13589, [this_sym13589].concat(args13590.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__13610 = this;
  if(!(this__13610.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__13610.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__13611 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__13612 = this;
  if(this__13612.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__13612.tree, false, this__13612.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__13613 = this;
  var this__13614 = this;
  return cljs.core.pr_str.call(null, this__13614)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__13615 = this;
  var coll__13616 = this;
  var t__13617 = this__13615.tree;
  while(true) {
    if(!(t__13617 == null)) {
      var c__13618 = this__13615.comp.call(null, k, t__13617.key);
      if(c__13618 === 0) {
        return t__13617
      }else {
        if(c__13618 < 0) {
          var G__13636 = t__13617.left;
          t__13617 = G__13636;
          continue
        }else {
          if("\ufdd0'else") {
            var G__13637 = t__13617.right;
            t__13617 = G__13637;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__13619 = this;
  if(this__13619.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__13619.tree, ascending_QMARK_, this__13619.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__13620 = this;
  if(this__13620.cnt > 0) {
    var stack__13621 = null;
    var t__13622 = this__13620.tree;
    while(true) {
      if(!(t__13622 == null)) {
        var c__13623 = this__13620.comp.call(null, k, t__13622.key);
        if(c__13623 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__13621, t__13622), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__13623 < 0) {
              var G__13638 = cljs.core.conj.call(null, stack__13621, t__13622);
              var G__13639 = t__13622.left;
              stack__13621 = G__13638;
              t__13622 = G__13639;
              continue
            }else {
              var G__13640 = stack__13621;
              var G__13641 = t__13622.right;
              stack__13621 = G__13640;
              t__13622 = G__13641;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__13623 > 0) {
                var G__13642 = cljs.core.conj.call(null, stack__13621, t__13622);
                var G__13643 = t__13622.right;
                stack__13621 = G__13642;
                t__13622 = G__13643;
                continue
              }else {
                var G__13644 = stack__13621;
                var G__13645 = t__13622.left;
                stack__13621 = G__13644;
                t__13622 = G__13645;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__13621 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__13621, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__13624 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__13625 = this;
  return this__13625.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13626 = this;
  if(this__13626.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__13626.tree, true, this__13626.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13627 = this;
  return this__13627.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13628 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13629 = this;
  return new cljs.core.PersistentTreeMap(this__13629.comp, this__13629.tree, this__13629.cnt, meta, this__13629.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13630 = this;
  return this__13630.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13631 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__13631.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__13632 = this;
  var found__13633 = [null];
  var t__13634 = cljs.core.tree_map_remove.call(null, this__13632.comp, this__13632.tree, k, found__13633);
  if(t__13634 == null) {
    if(cljs.core.nth.call(null, found__13633, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__13632.comp, null, 0, this__13632.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__13632.comp, t__13634.blacken(), this__13632.cnt - 1, this__13632.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__13648 = cljs.core.seq.call(null, keyvals);
    var out__13649 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__13648) {
        var G__13650 = cljs.core.nnext.call(null, in__13648);
        var G__13651 = cljs.core.assoc_BANG_.call(null, out__13649, cljs.core.first.call(null, in__13648), cljs.core.second.call(null, in__13648));
        in__13648 = G__13650;
        out__13649 = G__13651;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__13649)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__13652) {
    var keyvals = cljs.core.seq(arglist__13652);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__13653) {
    var keyvals = cljs.core.seq(arglist__13653);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__13657 = [];
    var obj__13658 = {};
    var kvs__13659 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__13659) {
        ks__13657.push(cljs.core.first.call(null, kvs__13659));
        obj__13658[cljs.core.first.call(null, kvs__13659)] = cljs.core.second.call(null, kvs__13659);
        var G__13660 = cljs.core.nnext.call(null, kvs__13659);
        kvs__13659 = G__13660;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__13657, obj__13658)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__13661) {
    var keyvals = cljs.core.seq(arglist__13661);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__13664 = cljs.core.seq.call(null, keyvals);
    var out__13665 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__13664) {
        var G__13666 = cljs.core.nnext.call(null, in__13664);
        var G__13667 = cljs.core.assoc.call(null, out__13665, cljs.core.first.call(null, in__13664), cljs.core.second.call(null, in__13664));
        in__13664 = G__13666;
        out__13665 = G__13667;
        continue
      }else {
        return out__13665
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__13668) {
    var keyvals = cljs.core.seq(arglist__13668);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__13671 = cljs.core.seq.call(null, keyvals);
    var out__13672 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__13671) {
        var G__13673 = cljs.core.nnext.call(null, in__13671);
        var G__13674 = cljs.core.assoc.call(null, out__13672, cljs.core.first.call(null, in__13671), cljs.core.second.call(null, in__13671));
        in__13671 = G__13673;
        out__13672 = G__13674;
        continue
      }else {
        return out__13672
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__13675) {
    var comparator = cljs.core.first(arglist__13675);
    var keyvals = cljs.core.rest(arglist__13675);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__13676_SHARP_, p2__13677_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____13679 = p1__13676_SHARP_;
          if(cljs.core.truth_(or__3824__auto____13679)) {
            return or__3824__auto____13679
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__13677_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__13680) {
    var maps = cljs.core.seq(arglist__13680);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__13688 = function(m, e) {
        var k__13686 = cljs.core.first.call(null, e);
        var v__13687 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__13686)) {
          return cljs.core.assoc.call(null, m, k__13686, f.call(null, cljs.core._lookup.call(null, m, k__13686, null), v__13687))
        }else {
          return cljs.core.assoc.call(null, m, k__13686, v__13687)
        }
      };
      var merge2__13690 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__13688, function() {
          var or__3824__auto____13689 = m1;
          if(cljs.core.truth_(or__3824__auto____13689)) {
            return or__3824__auto____13689
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__13690, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__13691) {
    var f = cljs.core.first(arglist__13691);
    var maps = cljs.core.rest(arglist__13691);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__13696 = cljs.core.ObjMap.EMPTY;
  var keys__13697 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__13697) {
      var key__13698 = cljs.core.first.call(null, keys__13697);
      var entry__13699 = cljs.core._lookup.call(null, map, key__13698, "\ufdd0'cljs.core/not-found");
      var G__13700 = cljs.core.not_EQ_.call(null, entry__13699, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__13696, key__13698, entry__13699) : ret__13696;
      var G__13701 = cljs.core.next.call(null, keys__13697);
      ret__13696 = G__13700;
      keys__13697 = G__13701;
      continue
    }else {
      return ret__13696
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__13705 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__13705.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13706 = this;
  var h__2093__auto____13707 = this__13706.__hash;
  if(!(h__2093__auto____13707 == null)) {
    return h__2093__auto____13707
  }else {
    var h__2093__auto____13708 = cljs.core.hash_iset.call(null, coll);
    this__13706.__hash = h__2093__auto____13708;
    return h__2093__auto____13708
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__13709 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__13710 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__13710.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__13731 = null;
  var G__13731__2 = function(this_sym13711, k) {
    var this__13713 = this;
    var this_sym13711__13714 = this;
    var coll__13715 = this_sym13711__13714;
    return coll__13715.cljs$core$ILookup$_lookup$arity$2(coll__13715, k)
  };
  var G__13731__3 = function(this_sym13712, k, not_found) {
    var this__13713 = this;
    var this_sym13712__13716 = this;
    var coll__13717 = this_sym13712__13716;
    return coll__13717.cljs$core$ILookup$_lookup$arity$3(coll__13717, k, not_found)
  };
  G__13731 = function(this_sym13712, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13731__2.call(this, this_sym13712, k);
      case 3:
        return G__13731__3.call(this, this_sym13712, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13731
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym13703, args13704) {
  var this__13718 = this;
  return this_sym13703.call.apply(this_sym13703, [this_sym13703].concat(args13704.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13719 = this;
  return new cljs.core.PersistentHashSet(this__13719.meta, cljs.core.assoc.call(null, this__13719.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__13720 = this;
  var this__13721 = this;
  return cljs.core.pr_str.call(null, this__13721)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13722 = this;
  return cljs.core.keys.call(null, this__13722.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__13723 = this;
  return new cljs.core.PersistentHashSet(this__13723.meta, cljs.core.dissoc.call(null, this__13723.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13724 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13725 = this;
  var and__3822__auto____13726 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____13726) {
    var and__3822__auto____13727 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____13727) {
      return cljs.core.every_QMARK_.call(null, function(p1__13702_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__13702_SHARP_)
      }, other)
    }else {
      return and__3822__auto____13727
    }
  }else {
    return and__3822__auto____13726
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13728 = this;
  return new cljs.core.PersistentHashSet(meta, this__13728.hash_map, this__13728.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13729 = this;
  return this__13729.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13730 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__13730.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__13732 = cljs.core.count.call(null, items);
  var i__13733 = 0;
  var out__13734 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__13733 < len__13732) {
      var G__13735 = i__13733 + 1;
      var G__13736 = cljs.core.conj_BANG_.call(null, out__13734, items[i__13733]);
      i__13733 = G__13735;
      out__13734 = G__13736;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__13734)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__13754 = null;
  var G__13754__2 = function(this_sym13740, k) {
    var this__13742 = this;
    var this_sym13740__13743 = this;
    var tcoll__13744 = this_sym13740__13743;
    if(cljs.core._lookup.call(null, this__13742.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__13754__3 = function(this_sym13741, k, not_found) {
    var this__13742 = this;
    var this_sym13741__13745 = this;
    var tcoll__13746 = this_sym13741__13745;
    if(cljs.core._lookup.call(null, this__13742.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__13754 = function(this_sym13741, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13754__2.call(this, this_sym13741, k);
      case 3:
        return G__13754__3.call(this, this_sym13741, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13754
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym13738, args13739) {
  var this__13747 = this;
  return this_sym13738.call.apply(this_sym13738, [this_sym13738].concat(args13739.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__13748 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__13749 = this;
  if(cljs.core._lookup.call(null, this__13749.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__13750 = this;
  return cljs.core.count.call(null, this__13750.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__13751 = this;
  this__13751.transient_map = cljs.core.dissoc_BANG_.call(null, this__13751.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__13752 = this;
  this__13752.transient_map = cljs.core.assoc_BANG_.call(null, this__13752.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__13753 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__13753.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13757 = this;
  var h__2093__auto____13758 = this__13757.__hash;
  if(!(h__2093__auto____13758 == null)) {
    return h__2093__auto____13758
  }else {
    var h__2093__auto____13759 = cljs.core.hash_iset.call(null, coll);
    this__13757.__hash = h__2093__auto____13759;
    return h__2093__auto____13759
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__13760 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__13761 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__13761.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__13787 = null;
  var G__13787__2 = function(this_sym13762, k) {
    var this__13764 = this;
    var this_sym13762__13765 = this;
    var coll__13766 = this_sym13762__13765;
    return coll__13766.cljs$core$ILookup$_lookup$arity$2(coll__13766, k)
  };
  var G__13787__3 = function(this_sym13763, k, not_found) {
    var this__13764 = this;
    var this_sym13763__13767 = this;
    var coll__13768 = this_sym13763__13767;
    return coll__13768.cljs$core$ILookup$_lookup$arity$3(coll__13768, k, not_found)
  };
  G__13787 = function(this_sym13763, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13787__2.call(this, this_sym13763, k);
      case 3:
        return G__13787__3.call(this, this_sym13763, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13787
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym13755, args13756) {
  var this__13769 = this;
  return this_sym13755.call.apply(this_sym13755, [this_sym13755].concat(args13756.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13770 = this;
  return new cljs.core.PersistentTreeSet(this__13770.meta, cljs.core.assoc.call(null, this__13770.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__13771 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__13771.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__13772 = this;
  var this__13773 = this;
  return cljs.core.pr_str.call(null, this__13773)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__13774 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__13774.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__13775 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__13775.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__13776 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__13777 = this;
  return cljs.core._comparator.call(null, this__13777.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13778 = this;
  return cljs.core.keys.call(null, this__13778.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__13779 = this;
  return new cljs.core.PersistentTreeSet(this__13779.meta, cljs.core.dissoc.call(null, this__13779.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13780 = this;
  return cljs.core.count.call(null, this__13780.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13781 = this;
  var and__3822__auto____13782 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____13782) {
    var and__3822__auto____13783 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____13783) {
      return cljs.core.every_QMARK_.call(null, function(p1__13737_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__13737_SHARP_)
      }, other)
    }else {
      return and__3822__auto____13783
    }
  }else {
    return and__3822__auto____13782
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13784 = this;
  return new cljs.core.PersistentTreeSet(meta, this__13784.tree_map, this__13784.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13785 = this;
  return this__13785.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13786 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__13786.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__13792__delegate = function(keys) {
      var in__13790 = cljs.core.seq.call(null, keys);
      var out__13791 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__13790)) {
          var G__13793 = cljs.core.next.call(null, in__13790);
          var G__13794 = cljs.core.conj_BANG_.call(null, out__13791, cljs.core.first.call(null, in__13790));
          in__13790 = G__13793;
          out__13791 = G__13794;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__13791)
        }
        break
      }
    };
    var G__13792 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__13792__delegate.call(this, keys)
    };
    G__13792.cljs$lang$maxFixedArity = 0;
    G__13792.cljs$lang$applyTo = function(arglist__13795) {
      var keys = cljs.core.seq(arglist__13795);
      return G__13792__delegate(keys)
    };
    G__13792.cljs$lang$arity$variadic = G__13792__delegate;
    return G__13792
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__13796) {
    var keys = cljs.core.seq(arglist__13796);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__13798) {
    var comparator = cljs.core.first(arglist__13798);
    var keys = cljs.core.rest(arglist__13798);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__13804 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____13805 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____13805)) {
        var e__13806 = temp__3971__auto____13805;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__13806))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__13804, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__13797_SHARP_) {
      var temp__3971__auto____13807 = cljs.core.find.call(null, smap, p1__13797_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____13807)) {
        var e__13808 = temp__3971__auto____13807;
        return cljs.core.second.call(null, e__13808)
      }else {
        return p1__13797_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__13838 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__13831, seen) {
        while(true) {
          var vec__13832__13833 = p__13831;
          var f__13834 = cljs.core.nth.call(null, vec__13832__13833, 0, null);
          var xs__13835 = vec__13832__13833;
          var temp__3974__auto____13836 = cljs.core.seq.call(null, xs__13835);
          if(temp__3974__auto____13836) {
            var s__13837 = temp__3974__auto____13836;
            if(cljs.core.contains_QMARK_.call(null, seen, f__13834)) {
              var G__13839 = cljs.core.rest.call(null, s__13837);
              var G__13840 = seen;
              p__13831 = G__13839;
              seen = G__13840;
              continue
            }else {
              return cljs.core.cons.call(null, f__13834, step.call(null, cljs.core.rest.call(null, s__13837), cljs.core.conj.call(null, seen, f__13834)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__13838.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__13843 = cljs.core.PersistentVector.EMPTY;
  var s__13844 = s;
  while(true) {
    if(cljs.core.next.call(null, s__13844)) {
      var G__13845 = cljs.core.conj.call(null, ret__13843, cljs.core.first.call(null, s__13844));
      var G__13846 = cljs.core.next.call(null, s__13844);
      ret__13843 = G__13845;
      s__13844 = G__13846;
      continue
    }else {
      return cljs.core.seq.call(null, ret__13843)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____13849 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____13849) {
        return or__3824__auto____13849
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__13850 = x.lastIndexOf("/");
      if(i__13850 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__13850 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____13853 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____13853) {
      return or__3824__auto____13853
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__13854 = x.lastIndexOf("/");
    if(i__13854 > -1) {
      return cljs.core.subs.call(null, x, 2, i__13854)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__13861 = cljs.core.ObjMap.EMPTY;
  var ks__13862 = cljs.core.seq.call(null, keys);
  var vs__13863 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____13864 = ks__13862;
      if(and__3822__auto____13864) {
        return vs__13863
      }else {
        return and__3822__auto____13864
      }
    }()) {
      var G__13865 = cljs.core.assoc.call(null, map__13861, cljs.core.first.call(null, ks__13862), cljs.core.first.call(null, vs__13863));
      var G__13866 = cljs.core.next.call(null, ks__13862);
      var G__13867 = cljs.core.next.call(null, vs__13863);
      map__13861 = G__13865;
      ks__13862 = G__13866;
      vs__13863 = G__13867;
      continue
    }else {
      return map__13861
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__13870__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__13855_SHARP_, p2__13856_SHARP_) {
        return max_key.call(null, k, p1__13855_SHARP_, p2__13856_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__13870 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13870__delegate.call(this, k, x, y, more)
    };
    G__13870.cljs$lang$maxFixedArity = 3;
    G__13870.cljs$lang$applyTo = function(arglist__13871) {
      var k = cljs.core.first(arglist__13871);
      var x = cljs.core.first(cljs.core.next(arglist__13871));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13871)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13871)));
      return G__13870__delegate(k, x, y, more)
    };
    G__13870.cljs$lang$arity$variadic = G__13870__delegate;
    return G__13870
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__13872__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__13868_SHARP_, p2__13869_SHARP_) {
        return min_key.call(null, k, p1__13868_SHARP_, p2__13869_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__13872 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13872__delegate.call(this, k, x, y, more)
    };
    G__13872.cljs$lang$maxFixedArity = 3;
    G__13872.cljs$lang$applyTo = function(arglist__13873) {
      var k = cljs.core.first(arglist__13873);
      var x = cljs.core.first(cljs.core.next(arglist__13873));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13873)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13873)));
      return G__13872__delegate(k, x, y, more)
    };
    G__13872.cljs$lang$arity$variadic = G__13872__delegate;
    return G__13872
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____13876 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____13876) {
        var s__13877 = temp__3974__auto____13876;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__13877), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__13877)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____13880 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____13880) {
      var s__13881 = temp__3974__auto____13880;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__13881)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__13881), take_while.call(null, pred, cljs.core.rest.call(null, s__13881)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__13883 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__13883.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__13895 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____13896 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____13896)) {
        var vec__13897__13898 = temp__3974__auto____13896;
        var e__13899 = cljs.core.nth.call(null, vec__13897__13898, 0, null);
        var s__13900 = vec__13897__13898;
        if(cljs.core.truth_(include__13895.call(null, e__13899))) {
          return s__13900
        }else {
          return cljs.core.next.call(null, s__13900)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__13895, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____13901 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____13901)) {
      var vec__13902__13903 = temp__3974__auto____13901;
      var e__13904 = cljs.core.nth.call(null, vec__13902__13903, 0, null);
      var s__13905 = vec__13902__13903;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__13904)) ? s__13905 : cljs.core.next.call(null, s__13905))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__13917 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____13918 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____13918)) {
        var vec__13919__13920 = temp__3974__auto____13918;
        var e__13921 = cljs.core.nth.call(null, vec__13919__13920, 0, null);
        var s__13922 = vec__13919__13920;
        if(cljs.core.truth_(include__13917.call(null, e__13921))) {
          return s__13922
        }else {
          return cljs.core.next.call(null, s__13922)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__13917, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____13923 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____13923)) {
      var vec__13924__13925 = temp__3974__auto____13923;
      var e__13926 = cljs.core.nth.call(null, vec__13924__13925, 0, null);
      var s__13927 = vec__13924__13925;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__13926)) ? s__13927 : cljs.core.next.call(null, s__13927))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__13928 = this;
  var h__2093__auto____13929 = this__13928.__hash;
  if(!(h__2093__auto____13929 == null)) {
    return h__2093__auto____13929
  }else {
    var h__2093__auto____13930 = cljs.core.hash_coll.call(null, rng);
    this__13928.__hash = h__2093__auto____13930;
    return h__2093__auto____13930
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__13931 = this;
  if(this__13931.step > 0) {
    if(this__13931.start + this__13931.step < this__13931.end) {
      return new cljs.core.Range(this__13931.meta, this__13931.start + this__13931.step, this__13931.end, this__13931.step, null)
    }else {
      return null
    }
  }else {
    if(this__13931.start + this__13931.step > this__13931.end) {
      return new cljs.core.Range(this__13931.meta, this__13931.start + this__13931.step, this__13931.end, this__13931.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__13932 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__13933 = this;
  var this__13934 = this;
  return cljs.core.pr_str.call(null, this__13934)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__13935 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__13936 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__13937 = this;
  if(this__13937.step > 0) {
    if(this__13937.start < this__13937.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__13937.start > this__13937.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__13938 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__13938.end - this__13938.start) / this__13938.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__13939 = this;
  return this__13939.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__13940 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__13940.meta, this__13940.start + this__13940.step, this__13940.end, this__13940.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__13941 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__13942 = this;
  return new cljs.core.Range(meta, this__13942.start, this__13942.end, this__13942.step, this__13942.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__13943 = this;
  return this__13943.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__13944 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__13944.start + n * this__13944.step
  }else {
    if(function() {
      var and__3822__auto____13945 = this__13944.start > this__13944.end;
      if(and__3822__auto____13945) {
        return this__13944.step === 0
      }else {
        return and__3822__auto____13945
      }
    }()) {
      return this__13944.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__13946 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__13946.start + n * this__13946.step
  }else {
    if(function() {
      var and__3822__auto____13947 = this__13946.start > this__13946.end;
      if(and__3822__auto____13947) {
        return this__13946.step === 0
      }else {
        return and__3822__auto____13947
      }
    }()) {
      return this__13946.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__13948 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__13948.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____13951 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____13951) {
      var s__13952 = temp__3974__auto____13951;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__13952), take_nth.call(null, n, cljs.core.drop.call(null, n, s__13952)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____13959 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____13959) {
      var s__13960 = temp__3974__auto____13959;
      var fst__13961 = cljs.core.first.call(null, s__13960);
      var fv__13962 = f.call(null, fst__13961);
      var run__13963 = cljs.core.cons.call(null, fst__13961, cljs.core.take_while.call(null, function(p1__13953_SHARP_) {
        return cljs.core._EQ_.call(null, fv__13962, f.call(null, p1__13953_SHARP_))
      }, cljs.core.next.call(null, s__13960)));
      return cljs.core.cons.call(null, run__13963, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__13963), s__13960))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____13978 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____13978) {
        var s__13979 = temp__3971__auto____13978;
        return reductions.call(null, f, cljs.core.first.call(null, s__13979), cljs.core.rest.call(null, s__13979))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____13980 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____13980) {
        var s__13981 = temp__3974__auto____13980;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__13981)), cljs.core.rest.call(null, s__13981))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__13984 = null;
      var G__13984__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__13984__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__13984__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__13984__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__13984__4 = function() {
        var G__13985__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__13985 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13985__delegate.call(this, x, y, z, args)
        };
        G__13985.cljs$lang$maxFixedArity = 3;
        G__13985.cljs$lang$applyTo = function(arglist__13986) {
          var x = cljs.core.first(arglist__13986);
          var y = cljs.core.first(cljs.core.next(arglist__13986));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13986)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13986)));
          return G__13985__delegate(x, y, z, args)
        };
        G__13985.cljs$lang$arity$variadic = G__13985__delegate;
        return G__13985
      }();
      G__13984 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13984__0.call(this);
          case 1:
            return G__13984__1.call(this, x);
          case 2:
            return G__13984__2.call(this, x, y);
          case 3:
            return G__13984__3.call(this, x, y, z);
          default:
            return G__13984__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__13984.cljs$lang$maxFixedArity = 3;
      G__13984.cljs$lang$applyTo = G__13984__4.cljs$lang$applyTo;
      return G__13984
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__13987 = null;
      var G__13987__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__13987__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__13987__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__13987__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__13987__4 = function() {
        var G__13988__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__13988 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13988__delegate.call(this, x, y, z, args)
        };
        G__13988.cljs$lang$maxFixedArity = 3;
        G__13988.cljs$lang$applyTo = function(arglist__13989) {
          var x = cljs.core.first(arglist__13989);
          var y = cljs.core.first(cljs.core.next(arglist__13989));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13989)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13989)));
          return G__13988__delegate(x, y, z, args)
        };
        G__13988.cljs$lang$arity$variadic = G__13988__delegate;
        return G__13988
      }();
      G__13987 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13987__0.call(this);
          case 1:
            return G__13987__1.call(this, x);
          case 2:
            return G__13987__2.call(this, x, y);
          case 3:
            return G__13987__3.call(this, x, y, z);
          default:
            return G__13987__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__13987.cljs$lang$maxFixedArity = 3;
      G__13987.cljs$lang$applyTo = G__13987__4.cljs$lang$applyTo;
      return G__13987
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__13990 = null;
      var G__13990__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__13990__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__13990__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__13990__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__13990__4 = function() {
        var G__13991__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__13991 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13991__delegate.call(this, x, y, z, args)
        };
        G__13991.cljs$lang$maxFixedArity = 3;
        G__13991.cljs$lang$applyTo = function(arglist__13992) {
          var x = cljs.core.first(arglist__13992);
          var y = cljs.core.first(cljs.core.next(arglist__13992));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13992)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13992)));
          return G__13991__delegate(x, y, z, args)
        };
        G__13991.cljs$lang$arity$variadic = G__13991__delegate;
        return G__13991
      }();
      G__13990 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13990__0.call(this);
          case 1:
            return G__13990__1.call(this, x);
          case 2:
            return G__13990__2.call(this, x, y);
          case 3:
            return G__13990__3.call(this, x, y, z);
          default:
            return G__13990__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__13990.cljs$lang$maxFixedArity = 3;
      G__13990.cljs$lang$applyTo = G__13990__4.cljs$lang$applyTo;
      return G__13990
    }()
  };
  var juxt__4 = function() {
    var G__13993__delegate = function(f, g, h, fs) {
      var fs__13983 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__13994 = null;
        var G__13994__0 = function() {
          return cljs.core.reduce.call(null, function(p1__13964_SHARP_, p2__13965_SHARP_) {
            return cljs.core.conj.call(null, p1__13964_SHARP_, p2__13965_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__13983)
        };
        var G__13994__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__13966_SHARP_, p2__13967_SHARP_) {
            return cljs.core.conj.call(null, p1__13966_SHARP_, p2__13967_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__13983)
        };
        var G__13994__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__13968_SHARP_, p2__13969_SHARP_) {
            return cljs.core.conj.call(null, p1__13968_SHARP_, p2__13969_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__13983)
        };
        var G__13994__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__13970_SHARP_, p2__13971_SHARP_) {
            return cljs.core.conj.call(null, p1__13970_SHARP_, p2__13971_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__13983)
        };
        var G__13994__4 = function() {
          var G__13995__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__13972_SHARP_, p2__13973_SHARP_) {
              return cljs.core.conj.call(null, p1__13972_SHARP_, cljs.core.apply.call(null, p2__13973_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__13983)
          };
          var G__13995 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__13995__delegate.call(this, x, y, z, args)
          };
          G__13995.cljs$lang$maxFixedArity = 3;
          G__13995.cljs$lang$applyTo = function(arglist__13996) {
            var x = cljs.core.first(arglist__13996);
            var y = cljs.core.first(cljs.core.next(arglist__13996));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13996)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13996)));
            return G__13995__delegate(x, y, z, args)
          };
          G__13995.cljs$lang$arity$variadic = G__13995__delegate;
          return G__13995
        }();
        G__13994 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__13994__0.call(this);
            case 1:
              return G__13994__1.call(this, x);
            case 2:
              return G__13994__2.call(this, x, y);
            case 3:
              return G__13994__3.call(this, x, y, z);
            default:
              return G__13994__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__13994.cljs$lang$maxFixedArity = 3;
        G__13994.cljs$lang$applyTo = G__13994__4.cljs$lang$applyTo;
        return G__13994
      }()
    };
    var G__13993 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13993__delegate.call(this, f, g, h, fs)
    };
    G__13993.cljs$lang$maxFixedArity = 3;
    G__13993.cljs$lang$applyTo = function(arglist__13997) {
      var f = cljs.core.first(arglist__13997);
      var g = cljs.core.first(cljs.core.next(arglist__13997));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13997)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13997)));
      return G__13993__delegate(f, g, h, fs)
    };
    G__13993.cljs$lang$arity$variadic = G__13993__delegate;
    return G__13993
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__14000 = cljs.core.next.call(null, coll);
        coll = G__14000;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____13999 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____13999) {
          return n > 0
        }else {
          return and__3822__auto____13999
        }
      }())) {
        var G__14001 = n - 1;
        var G__14002 = cljs.core.next.call(null, coll);
        n = G__14001;
        coll = G__14002;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__14004 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__14004), s)) {
    if(cljs.core.count.call(null, matches__14004) === 1) {
      return cljs.core.first.call(null, matches__14004)
    }else {
      return cljs.core.vec.call(null, matches__14004)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__14006 = re.exec(s);
  if(matches__14006 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__14006) === 1) {
      return cljs.core.first.call(null, matches__14006)
    }else {
      return cljs.core.vec.call(null, matches__14006)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__14011 = cljs.core.re_find.call(null, re, s);
  var match_idx__14012 = s.search(re);
  var match_str__14013 = cljs.core.coll_QMARK_.call(null, match_data__14011) ? cljs.core.first.call(null, match_data__14011) : match_data__14011;
  var post_match__14014 = cljs.core.subs.call(null, s, match_idx__14012 + cljs.core.count.call(null, match_str__14013));
  if(cljs.core.truth_(match_data__14011)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__14011, re_seq.call(null, re, post_match__14014))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__14021__14022 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___14023 = cljs.core.nth.call(null, vec__14021__14022, 0, null);
  var flags__14024 = cljs.core.nth.call(null, vec__14021__14022, 1, null);
  var pattern__14025 = cljs.core.nth.call(null, vec__14021__14022, 2, null);
  return new RegExp(pattern__14025, flags__14024)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__14015_SHARP_) {
    return print_one.call(null, p1__14015_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____14035 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____14035)) {
            var and__3822__auto____14039 = function() {
              var G__14036__14037 = obj;
              if(G__14036__14037) {
                if(function() {
                  var or__3824__auto____14038 = G__14036__14037.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____14038) {
                    return or__3824__auto____14038
                  }else {
                    return G__14036__14037.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__14036__14037.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__14036__14037)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__14036__14037)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____14039)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____14039
            }
          }else {
            return and__3822__auto____14035
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____14040 = !(obj == null);
          if(and__3822__auto____14040) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____14040
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__14041__14042 = obj;
          if(G__14041__14042) {
            if(function() {
              var or__3824__auto____14043 = G__14041__14042.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____14043) {
                return or__3824__auto____14043
              }else {
                return G__14041__14042.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__14041__14042.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__14041__14042)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__14041__14042)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__14063 = new goog.string.StringBuffer;
  var G__14064__14065 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__14064__14065) {
    var string__14066 = cljs.core.first.call(null, G__14064__14065);
    var G__14064__14067 = G__14064__14065;
    while(true) {
      sb__14063.append(string__14066);
      var temp__3974__auto____14068 = cljs.core.next.call(null, G__14064__14067);
      if(temp__3974__auto____14068) {
        var G__14064__14069 = temp__3974__auto____14068;
        var G__14082 = cljs.core.first.call(null, G__14064__14069);
        var G__14083 = G__14064__14069;
        string__14066 = G__14082;
        G__14064__14067 = G__14083;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__14070__14071 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__14070__14071) {
    var obj__14072 = cljs.core.first.call(null, G__14070__14071);
    var G__14070__14073 = G__14070__14071;
    while(true) {
      sb__14063.append(" ");
      var G__14074__14075 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__14072, opts));
      if(G__14074__14075) {
        var string__14076 = cljs.core.first.call(null, G__14074__14075);
        var G__14074__14077 = G__14074__14075;
        while(true) {
          sb__14063.append(string__14076);
          var temp__3974__auto____14078 = cljs.core.next.call(null, G__14074__14077);
          if(temp__3974__auto____14078) {
            var G__14074__14079 = temp__3974__auto____14078;
            var G__14084 = cljs.core.first.call(null, G__14074__14079);
            var G__14085 = G__14074__14079;
            string__14076 = G__14084;
            G__14074__14077 = G__14085;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____14080 = cljs.core.next.call(null, G__14070__14073);
      if(temp__3974__auto____14080) {
        var G__14070__14081 = temp__3974__auto____14080;
        var G__14086 = cljs.core.first.call(null, G__14070__14081);
        var G__14087 = G__14070__14081;
        obj__14072 = G__14086;
        G__14070__14073 = G__14087;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__14063
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__14089 = cljs.core.pr_sb.call(null, objs, opts);
  sb__14089.append("\n");
  return[cljs.core.str(sb__14089)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__14108__14109 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__14108__14109) {
    var string__14110 = cljs.core.first.call(null, G__14108__14109);
    var G__14108__14111 = G__14108__14109;
    while(true) {
      cljs.core.string_print.call(null, string__14110);
      var temp__3974__auto____14112 = cljs.core.next.call(null, G__14108__14111);
      if(temp__3974__auto____14112) {
        var G__14108__14113 = temp__3974__auto____14112;
        var G__14126 = cljs.core.first.call(null, G__14108__14113);
        var G__14127 = G__14108__14113;
        string__14110 = G__14126;
        G__14108__14111 = G__14127;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__14114__14115 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__14114__14115) {
    var obj__14116 = cljs.core.first.call(null, G__14114__14115);
    var G__14114__14117 = G__14114__14115;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__14118__14119 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__14116, opts));
      if(G__14118__14119) {
        var string__14120 = cljs.core.first.call(null, G__14118__14119);
        var G__14118__14121 = G__14118__14119;
        while(true) {
          cljs.core.string_print.call(null, string__14120);
          var temp__3974__auto____14122 = cljs.core.next.call(null, G__14118__14121);
          if(temp__3974__auto____14122) {
            var G__14118__14123 = temp__3974__auto____14122;
            var G__14128 = cljs.core.first.call(null, G__14118__14123);
            var G__14129 = G__14118__14123;
            string__14120 = G__14128;
            G__14118__14121 = G__14129;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____14124 = cljs.core.next.call(null, G__14114__14117);
      if(temp__3974__auto____14124) {
        var G__14114__14125 = temp__3974__auto____14124;
        var G__14130 = cljs.core.first.call(null, G__14114__14125);
        var G__14131 = G__14114__14125;
        obj__14116 = G__14130;
        G__14114__14117 = G__14131;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__14132) {
    var objs = cljs.core.seq(arglist__14132);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__14133) {
    var objs = cljs.core.seq(arglist__14133);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__14134) {
    var objs = cljs.core.seq(arglist__14134);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__14135) {
    var objs = cljs.core.seq(arglist__14135);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__14136) {
    var objs = cljs.core.seq(arglist__14136);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__14137) {
    var objs = cljs.core.seq(arglist__14137);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__14138) {
    var objs = cljs.core.seq(arglist__14138);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__14139) {
    var objs = cljs.core.seq(arglist__14139);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__14140) {
    var fmt = cljs.core.first(arglist__14140);
    var args = cljs.core.rest(arglist__14140);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__14141 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__14141, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__14142 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__14142, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__14143 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__14143, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____14144 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____14144)) {
        var nspc__14145 = temp__3974__auto____14144;
        return[cljs.core.str(nspc__14145), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____14146 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____14146)) {
          var nspc__14147 = temp__3974__auto____14146;
          return[cljs.core.str(nspc__14147), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__14148 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__14148, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__14150 = function(n, len) {
    var ns__14149 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__14149) < len) {
        var G__14152 = [cljs.core.str("0"), cljs.core.str(ns__14149)].join("");
        ns__14149 = G__14152;
        continue
      }else {
        return ns__14149
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__14150.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__14150.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__14150.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__14150.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__14150.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__14150.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__14151 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__14151, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__14153 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__14154 = this;
  var G__14155__14156 = cljs.core.seq.call(null, this__14154.watches);
  if(G__14155__14156) {
    var G__14158__14160 = cljs.core.first.call(null, G__14155__14156);
    var vec__14159__14161 = G__14158__14160;
    var key__14162 = cljs.core.nth.call(null, vec__14159__14161, 0, null);
    var f__14163 = cljs.core.nth.call(null, vec__14159__14161, 1, null);
    var G__14155__14164 = G__14155__14156;
    var G__14158__14165 = G__14158__14160;
    var G__14155__14166 = G__14155__14164;
    while(true) {
      var vec__14167__14168 = G__14158__14165;
      var key__14169 = cljs.core.nth.call(null, vec__14167__14168, 0, null);
      var f__14170 = cljs.core.nth.call(null, vec__14167__14168, 1, null);
      var G__14155__14171 = G__14155__14166;
      f__14170.call(null, key__14169, this$, oldval, newval);
      var temp__3974__auto____14172 = cljs.core.next.call(null, G__14155__14171);
      if(temp__3974__auto____14172) {
        var G__14155__14173 = temp__3974__auto____14172;
        var G__14180 = cljs.core.first.call(null, G__14155__14173);
        var G__14181 = G__14155__14173;
        G__14158__14165 = G__14180;
        G__14155__14166 = G__14181;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__14174 = this;
  return this$.watches = cljs.core.assoc.call(null, this__14174.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__14175 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__14175.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__14176 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__14176.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__14177 = this;
  return this__14177.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__14178 = this;
  return this__14178.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__14179 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__14193__delegate = function(x, p__14182) {
      var map__14188__14189 = p__14182;
      var map__14188__14190 = cljs.core.seq_QMARK_.call(null, map__14188__14189) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14188__14189) : map__14188__14189;
      var validator__14191 = cljs.core._lookup.call(null, map__14188__14190, "\ufdd0'validator", null);
      var meta__14192 = cljs.core._lookup.call(null, map__14188__14190, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__14192, validator__14191, null)
    };
    var G__14193 = function(x, var_args) {
      var p__14182 = null;
      if(goog.isDef(var_args)) {
        p__14182 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__14193__delegate.call(this, x, p__14182)
    };
    G__14193.cljs$lang$maxFixedArity = 1;
    G__14193.cljs$lang$applyTo = function(arglist__14194) {
      var x = cljs.core.first(arglist__14194);
      var p__14182 = cljs.core.rest(arglist__14194);
      return G__14193__delegate(x, p__14182)
    };
    G__14193.cljs$lang$arity$variadic = G__14193__delegate;
    return G__14193
  }();
  atom = function(x, var_args) {
    var p__14182 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____14198 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____14198)) {
    var validate__14199 = temp__3974__auto____14198;
    if(cljs.core.truth_(validate__14199.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440))))].join(""));
    }
  }else {
  }
  var old_value__14200 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__14200, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__14201__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__14201 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__14201__delegate.call(this, a, f, x, y, z, more)
    };
    G__14201.cljs$lang$maxFixedArity = 5;
    G__14201.cljs$lang$applyTo = function(arglist__14202) {
      var a = cljs.core.first(arglist__14202);
      var f = cljs.core.first(cljs.core.next(arglist__14202));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14202)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__14202))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__14202)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__14202)))));
      return G__14201__delegate(a, f, x, y, z, more)
    };
    G__14201.cljs$lang$arity$variadic = G__14201__delegate;
    return G__14201
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__14203) {
    var iref = cljs.core.first(arglist__14203);
    var f = cljs.core.first(cljs.core.next(arglist__14203));
    var args = cljs.core.rest(cljs.core.next(arglist__14203));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__14204 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__14204.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__14205 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__14205.state, function(p__14206) {
    var map__14207__14208 = p__14206;
    var map__14207__14209 = cljs.core.seq_QMARK_.call(null, map__14207__14208) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14207__14208) : map__14207__14208;
    var curr_state__14210 = map__14207__14209;
    var done__14211 = cljs.core._lookup.call(null, map__14207__14209, "\ufdd0'done", null);
    if(cljs.core.truth_(done__14211)) {
      return curr_state__14210
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__14205.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__14232__14233 = options;
    var map__14232__14234 = cljs.core.seq_QMARK_.call(null, map__14232__14233) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14232__14233) : map__14232__14233;
    var keywordize_keys__14235 = cljs.core._lookup.call(null, map__14232__14234, "\ufdd0'keywordize-keys", null);
    var keyfn__14236 = cljs.core.truth_(keywordize_keys__14235) ? cljs.core.keyword : cljs.core.str;
    var f__14251 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2363__auto____14250 = function iter__14244(s__14245) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__14245__14248 = s__14245;
                    while(true) {
                      if(cljs.core.seq.call(null, s__14245__14248)) {
                        var k__14249 = cljs.core.first.call(null, s__14245__14248);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__14236.call(null, k__14249), thisfn.call(null, x[k__14249])], true), iter__14244.call(null, cljs.core.rest.call(null, s__14245__14248)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2363__auto____14250.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__14251.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__14252) {
    var x = cljs.core.first(arglist__14252);
    var options = cljs.core.rest(arglist__14252);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__14257 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__14261__delegate = function(args) {
      var temp__3971__auto____14258 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__14257), args, null);
      if(cljs.core.truth_(temp__3971__auto____14258)) {
        var v__14259 = temp__3971__auto____14258;
        return v__14259
      }else {
        var ret__14260 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__14257, cljs.core.assoc, args, ret__14260);
        return ret__14260
      }
    };
    var G__14261 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__14261__delegate.call(this, args)
    };
    G__14261.cljs$lang$maxFixedArity = 0;
    G__14261.cljs$lang$applyTo = function(arglist__14262) {
      var args = cljs.core.seq(arglist__14262);
      return G__14261__delegate(args)
    };
    G__14261.cljs$lang$arity$variadic = G__14261__delegate;
    return G__14261
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__14264 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__14264)) {
        var G__14265 = ret__14264;
        f = G__14265;
        continue
      }else {
        return ret__14264
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__14266__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__14266 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__14266__delegate.call(this, f, args)
    };
    G__14266.cljs$lang$maxFixedArity = 1;
    G__14266.cljs$lang$applyTo = function(arglist__14267) {
      var f = cljs.core.first(arglist__14267);
      var args = cljs.core.rest(arglist__14267);
      return G__14266__delegate(f, args)
    };
    G__14266.cljs$lang$arity$variadic = G__14266__delegate;
    return G__14266
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__14269 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__14269, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__14269, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____14278 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____14278) {
      return or__3824__auto____14278
    }else {
      var or__3824__auto____14279 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____14279) {
        return or__3824__auto____14279
      }else {
        var and__3822__auto____14280 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____14280) {
          var and__3822__auto____14281 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____14281) {
            var and__3822__auto____14282 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____14282) {
              var ret__14283 = true;
              var i__14284 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____14285 = cljs.core.not.call(null, ret__14283);
                  if(or__3824__auto____14285) {
                    return or__3824__auto____14285
                  }else {
                    return i__14284 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__14283
                }else {
                  var G__14286 = isa_QMARK_.call(null, h, child.call(null, i__14284), parent.call(null, i__14284));
                  var G__14287 = i__14284 + 1;
                  ret__14283 = G__14286;
                  i__14284 = G__14287;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____14282
            }
          }else {
            return and__3822__auto____14281
          }
        }else {
          return and__3822__auto____14280
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728))))].join(""));
    }
    var tp__14296 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__14297 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__14298 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__14299 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____14300 = cljs.core.contains_QMARK_.call(null, tp__14296.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__14298.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__14298.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__14296, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__14299.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__14297, parent, ta__14298), "\ufdd0'descendants":tf__14299.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__14298, tag, td__14297)})
    }();
    if(cljs.core.truth_(or__3824__auto____14300)) {
      return or__3824__auto____14300
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__14305 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__14306 = cljs.core.truth_(parentMap__14305.call(null, tag)) ? cljs.core.disj.call(null, parentMap__14305.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__14307 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__14306)) ? cljs.core.assoc.call(null, parentMap__14305, tag, childsParents__14306) : cljs.core.dissoc.call(null, parentMap__14305, tag);
    var deriv_seq__14308 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__14288_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__14288_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__14288_SHARP_), cljs.core.second.call(null, p1__14288_SHARP_)))
    }, cljs.core.seq.call(null, newParents__14307)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__14305.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__14289_SHARP_, p2__14290_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__14289_SHARP_, p2__14290_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__14308))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__14316 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____14318 = cljs.core.truth_(function() {
    var and__3822__auto____14317 = xprefs__14316;
    if(cljs.core.truth_(and__3822__auto____14317)) {
      return xprefs__14316.call(null, y)
    }else {
      return and__3822__auto____14317
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____14318)) {
    return or__3824__auto____14318
  }else {
    var or__3824__auto____14320 = function() {
      var ps__14319 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__14319) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__14319), prefer_table))) {
          }else {
          }
          var G__14323 = cljs.core.rest.call(null, ps__14319);
          ps__14319 = G__14323;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____14320)) {
      return or__3824__auto____14320
    }else {
      var or__3824__auto____14322 = function() {
        var ps__14321 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__14321) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__14321), y, prefer_table))) {
            }else {
            }
            var G__14324 = cljs.core.rest.call(null, ps__14321);
            ps__14321 = G__14324;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____14322)) {
        return or__3824__auto____14322
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____14326 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____14326)) {
    return or__3824__auto____14326
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__14344 = cljs.core.reduce.call(null, function(be, p__14336) {
    var vec__14337__14338 = p__14336;
    var k__14339 = cljs.core.nth.call(null, vec__14337__14338, 0, null);
    var ___14340 = cljs.core.nth.call(null, vec__14337__14338, 1, null);
    var e__14341 = vec__14337__14338;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__14339)) {
      var be2__14343 = cljs.core.truth_(function() {
        var or__3824__auto____14342 = be == null;
        if(or__3824__auto____14342) {
          return or__3824__auto____14342
        }else {
          return cljs.core.dominates.call(null, k__14339, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__14341 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__14343), k__14339, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__14339), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__14343)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__14343
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__14344)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__14344));
      return cljs.core.second.call(null, best_entry__14344)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____14349 = mf;
    if(and__3822__auto____14349) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____14349
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2264__auto____14350 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____14351 = cljs.core._reset[goog.typeOf(x__2264__auto____14350)];
      if(or__3824__auto____14351) {
        return or__3824__auto____14351
      }else {
        var or__3824__auto____14352 = cljs.core._reset["_"];
        if(or__3824__auto____14352) {
          return or__3824__auto____14352
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____14357 = mf;
    if(and__3822__auto____14357) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____14357
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2264__auto____14358 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____14359 = cljs.core._add_method[goog.typeOf(x__2264__auto____14358)];
      if(or__3824__auto____14359) {
        return or__3824__auto____14359
      }else {
        var or__3824__auto____14360 = cljs.core._add_method["_"];
        if(or__3824__auto____14360) {
          return or__3824__auto____14360
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____14365 = mf;
    if(and__3822__auto____14365) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____14365
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2264__auto____14366 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____14367 = cljs.core._remove_method[goog.typeOf(x__2264__auto____14366)];
      if(or__3824__auto____14367) {
        return or__3824__auto____14367
      }else {
        var or__3824__auto____14368 = cljs.core._remove_method["_"];
        if(or__3824__auto____14368) {
          return or__3824__auto____14368
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____14373 = mf;
    if(and__3822__auto____14373) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____14373
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2264__auto____14374 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____14375 = cljs.core._prefer_method[goog.typeOf(x__2264__auto____14374)];
      if(or__3824__auto____14375) {
        return or__3824__auto____14375
      }else {
        var or__3824__auto____14376 = cljs.core._prefer_method["_"];
        if(or__3824__auto____14376) {
          return or__3824__auto____14376
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____14381 = mf;
    if(and__3822__auto____14381) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____14381
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2264__auto____14382 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____14383 = cljs.core._get_method[goog.typeOf(x__2264__auto____14382)];
      if(or__3824__auto____14383) {
        return or__3824__auto____14383
      }else {
        var or__3824__auto____14384 = cljs.core._get_method["_"];
        if(or__3824__auto____14384) {
          return or__3824__auto____14384
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____14389 = mf;
    if(and__3822__auto____14389) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____14389
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2264__auto____14390 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____14391 = cljs.core._methods[goog.typeOf(x__2264__auto____14390)];
      if(or__3824__auto____14391) {
        return or__3824__auto____14391
      }else {
        var or__3824__auto____14392 = cljs.core._methods["_"];
        if(or__3824__auto____14392) {
          return or__3824__auto____14392
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____14397 = mf;
    if(and__3822__auto____14397) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____14397
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2264__auto____14398 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____14399 = cljs.core._prefers[goog.typeOf(x__2264__auto____14398)];
      if(or__3824__auto____14399) {
        return or__3824__auto____14399
      }else {
        var or__3824__auto____14400 = cljs.core._prefers["_"];
        if(or__3824__auto____14400) {
          return or__3824__auto____14400
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____14405 = mf;
    if(and__3822__auto____14405) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____14405
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2264__auto____14406 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____14407 = cljs.core._dispatch[goog.typeOf(x__2264__auto____14406)];
      if(or__3824__auto____14407) {
        return or__3824__auto____14407
      }else {
        var or__3824__auto____14408 = cljs.core._dispatch["_"];
        if(or__3824__auto____14408) {
          return or__3824__auto____14408
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__14411 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__14412 = cljs.core._get_method.call(null, mf, dispatch_val__14411);
  if(cljs.core.truth_(target_fn__14412)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__14411)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__14412, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__14413 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__14414 = this;
  cljs.core.swap_BANG_.call(null, this__14414.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__14414.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__14414.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__14414.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__14415 = this;
  cljs.core.swap_BANG_.call(null, this__14415.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__14415.method_cache, this__14415.method_table, this__14415.cached_hierarchy, this__14415.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__14416 = this;
  cljs.core.swap_BANG_.call(null, this__14416.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__14416.method_cache, this__14416.method_table, this__14416.cached_hierarchy, this__14416.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__14417 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__14417.cached_hierarchy), cljs.core.deref.call(null, this__14417.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__14417.method_cache, this__14417.method_table, this__14417.cached_hierarchy, this__14417.hierarchy)
  }
  var temp__3971__auto____14418 = cljs.core.deref.call(null, this__14417.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____14418)) {
    var target_fn__14419 = temp__3971__auto____14418;
    return target_fn__14419
  }else {
    var temp__3971__auto____14420 = cljs.core.find_and_cache_best_method.call(null, this__14417.name, dispatch_val, this__14417.hierarchy, this__14417.method_table, this__14417.prefer_table, this__14417.method_cache, this__14417.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____14420)) {
      var target_fn__14421 = temp__3971__auto____14420;
      return target_fn__14421
    }else {
      return cljs.core.deref.call(null, this__14417.method_table).call(null, this__14417.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__14422 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__14422.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__14422.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__14422.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__14422.method_cache, this__14422.method_table, this__14422.cached_hierarchy, this__14422.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__14423 = this;
  return cljs.core.deref.call(null, this__14423.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__14424 = this;
  return cljs.core.deref.call(null, this__14424.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__14425 = this;
  return cljs.core.do_dispatch.call(null, mf, this__14425.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__14427__delegate = function(_, args) {
    var self__14426 = this;
    return cljs.core._dispatch.call(null, self__14426, args)
  };
  var G__14427 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__14427__delegate.call(this, _, args)
  };
  G__14427.cljs$lang$maxFixedArity = 1;
  G__14427.cljs$lang$applyTo = function(arglist__14428) {
    var _ = cljs.core.first(arglist__14428);
    var args = cljs.core.rest(arglist__14428);
    return G__14427__delegate(_, args)
  };
  G__14427.cljs$lang$arity$variadic = G__14427__delegate;
  return G__14427
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__14429 = this;
  return cljs.core._dispatch.call(null, self__14429, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__14430 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_14432, _) {
  var this__14431 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__14431.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__14433 = this;
  var and__3822__auto____14434 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____14434) {
    return this__14433.uuid === other.uuid
  }else {
    return and__3822__auto____14434
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__14435 = this;
  var this__14436 = this;
  return cljs.core.pr_str.call(null, this__14436)
};
cljs.core.UUID;
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isDocumentModeCache_ = {};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.isDocumentModeCache_[documentMode] || (goog.userAgent.isDocumentModeCache_[documentMode] = goog.userAgent.IE && document.documentMode && document.documentMode >= documentMode)
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x)
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return goog.style.getSizeWithDisplay_(element)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var size = goog.style.getSizeWithDisplay_(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return size
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top)
  }
  return new goog.math.Size(offsetWidth, offsetHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if(opt_className) {
    outerDiv.className = opt_className
  }
  outerDiv.style.cssText = "visiblity:hidden;overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("&")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    var type = el.type.toLowerCase();
    switch(type) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "=" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, opt_value);
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, opt_value);
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, opt_value);
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
var array_p, explode_p, ignore_p, key_prefix, map_p, namespace_tag, number_p, p, re_svg_tags, re_tag, re_whitespace, string_p, unify_p, whitespace_node_p, xmlns, __hasProp = {}.hasOwnProperty;
goog.require("goog.string");
goog.provide("singult.coffee");
goog.provide("singult.coffee.Unify");
goog.provide("singult.coffee.Ignore");
p = function(x) {
  console.log(x);
  return x
};
re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
re_svg_tags = /^(svg|g|rect|circle|clipPath|path|line|polygon|polyline|text|textPath)$/;
re_whitespace = /^\s+$/;
key_prefix = "\x00";
xmlns = {xhtml:"http://www.w3.org/1999/xhtml", svg:"http://www.w3.org/2000/svg"};
namespace_tag = function(tag_str) {
  var nsp, tag, _ref;
  _ref = tag_str.split(":"), nsp = _ref[0], tag = _ref[1];
  if(tag != null) {
    return[xmlns[nsp] || nsp, tag]
  }else {
    if(tag_str.match(re_svg_tags)) {
      return[xmlns.svg, tag_str]
    }else {
      return[xmlns.xhtml, tag_str]
    }
  }
};
explode_p = function(v) {
  return v[0] === ":*:"
};
unify_p = function(x) {
  return x != null && x instanceof singult.coffee.Unify
};
ignore_p = function(x) {
  return x != null && x instanceof singult.coffee.Ignore
};
array_p = function(x) {
  return x != null && x.forEach != null
};
map_p = function(x) {
  return x != null && !array_p(x) && !unify_p(x) && !ignore_p(x) && x instanceof Object
};
string_p = function(x) {
  return x != null && x.substring != null
};
number_p = function(x) {
  return x != null && x.toFixed != null
};
whitespace_node_p = function($n) {
  return $n.nodeType === 8 || $n.nodeType === 3 && $n.textContent.match(re_whitespace)
};
singult.coffee.style = function($e, m) {
  var k, v, _results;
  _results = [];
  for(k in m) {
    if(!__hasProp.call(m, k)) {
      continue
    }
    v = m[k];
    _results.push($e.style[goog.string.toCamelCase(k)] = v)
  }
  return _results
};
singult.coffee.properties = function($e, m) {
  var prop, v, _results;
  _results = [];
  for(prop in m) {
    if(!__hasProp.call(m, prop)) {
      continue
    }
    v = m[prop];
    _results.push($e[prop] = v)
  }
  return _results
};
singult.coffee.attr = function($e, attr_map) {
  var k, v, _results;
  if(attr_map["style"] != null) {
    singult.coffee.style($e, attr_map["style"]);
    delete attr_map["style"]
  }
  if(attr_map["properties"] != null) {
    singult.coffee.properties($e, attr_map["properties"]);
    delete attr_map["properties"]
  }
  if(array_p(attr_map["class"])) {
    $e.setAttribute("class", attr_map["class"].join(" "));
    delete attr_map["class"]
  }
  _results = [];
  for(k in attr_map) {
    if(!__hasProp.call(attr_map, k)) {
      continue
    }
    v = attr_map[k];
    if(v != null) {
      _results.push($e.setAttribute(k, v))
    }else {
      _results.push($e.removeAttribute(k))
    }
  }
  return _results
};
singult.coffee.node_data = function($e, d) {
  if(d != null) {
    return $e["__singult_data__"] = d
  }else {
    return $e["__singult_data__"]
  }
};
singult.coffee.canonicalize = function(x) {
  if(number_p(x)) {
    return x.toString()
  }else {
    if(array_p(x)) {
      return singult.coffee.canonicalize_hiccup(x)
    }else {
      return x
    }
  }
};
singult.coffee.canonicalize_hiccup = function(v) {
  var abbreviated_classes, attr, canonical, canonical_children, children, cls_str, id, nsp, tag, tag_str, _, _ref, _ref1, _ref2;
  tag = v[0];
  _ref = map_p(v[1]) ? [v[1], v.slice(2)] : [{}, v.slice(1)], attr = _ref[0], children = _ref[1];
  _ref1 = tag.match(re_tag), _ = _ref1[0], tag_str = _ref1[1], id = _ref1[2], cls_str = _ref1[3];
  if(id != null) {
    attr["id"] = id
  }
  if(cls_str != null) {
    abbreviated_classes = cls_str.split(".");
    if(array_p(attr["class"])) {
      attr["class"] = attr["class"].concat(abbreviated_classes)
    }else {
      if(string_p(attr["class"])) {
        attr["class"] = abbreviated_classes.concat([attr["class"]])
      }else {
        if(!(attr["class"] != null)) {
          attr["class"] = abbreviated_classes
        }
      }
    }
  }
  _ref2 = namespace_tag(tag_str), nsp = _ref2[0], tag = _ref2[1];
  canonical_children = [];
  children.forEach(function(v) {
    if(v != null) {
      if(explode_p(v)) {
        return v.slice(1).forEach(function(v) {
          return canonical_children.push(singult.coffee.canonicalize(v))
        })
      }else {
        return canonical_children.push(singult.coffee.canonicalize(v))
      }
    }
  });
  canonical = {nsp:nsp, tag:tag, attr:attr, children:canonical_children};
  return canonical
};
singult.coffee.render = function(m) {
  var $e, c;
  if(unify_p(m)) {
    throw new Error("Unify must be the first and only child of its parent.");
  }else {
    if(ignore_p(m)) {
      return null
    }else {
      if(string_p(m)) {
        return document.createTextNode(m)
      }else {
        $e = document.createElementNS(m.nsp, m.tag);
        singult.coffee.attr($e, m.attr);
        if(unify_p(c = m.children[0])) {
          if(c.enter != null) {
            c.data.forEach(function(d) {
              var $el;
              $el = c.enter(d);
              singult.coffee.node_data($el, d);
              return $e.appendChild($el)
            })
          }else {
            c.data.forEach(function(d) {
              var $el;
              $el = singult.coffee.render(singult.coffee.canonicalize(c.mapping(d)));
              singult.coffee.node_data($el, d);
              return $e.appendChild($el)
            })
          }
        }else {
          m.children.forEach(function(c) {
            var $c;
            $c = singult.coffee.render(c);
            if($c != null) {
              return $e.appendChild($c)
            }
          })
        }
        return $e
      }
    }
  }
};
singult.coffee.Unify = function(data, mapping, key_fn, enter, update, exit, force_update_p) {
  this.data = data;
  this.mapping = mapping;
  this.key_fn = key_fn;
  this.enter = enter;
  this.update = update;
  this.exit = exit;
  this.force_update_p = force_update_p;
  return this
};
singult.coffee.Ignore = function() {
  return this
};
singult.coffee.unify_ = function($container, u) {
  var $n, $nodes, enter, exit, i, key, key_fn, nodes_by_key, update, _;
  enter = u.enter || function(d) {
    var $el;
    $el = singult.coffee.render(singult.coffee.canonicalize(u.mapping(d)));
    $container.appendChild($el);
    return $el
  };
  update = u.update || function($n, d) {
    return singult.coffee.merge($n, singult.coffee.canonicalize(u.mapping(d)))
  };
  exit = u.exit || function($n) {
    return $container.removeChild($n)
  };
  key_fn = u.key_fn || function(d, idx) {
    return idx
  };
  $nodes = $container.childNodes;
  nodes_by_key = {};
  i = 0;
  while(i < $nodes.length) {
    key = key_prefix + key_fn(singult.coffee.node_data($nodes[i]), i);
    nodes_by_key[key] = $nodes[i];
    i += 1
  }
  u.data.forEach(function(d, i) {
    var $el, $n, identical_data_p, old_data;
    key = key_prefix + key_fn(d, i);
    if($n = nodes_by_key[key]) {
      if(u.force_update_p) {
        $el = update($n, d);
        singult.coffee.node_data($el, d)
      }else {
        old_data = singult.coffee.node_data($n);
        identical_data_p = old_data.cljs$core$IEquiv$_equiv$arity$2 != null ? old_data.cljs$core$IEquiv$_equiv$arity$2(old_data, d) : old_data === d;
        if(!identical_data_p) {
          $el = update($n, d);
          singult.coffee.node_data($el, d)
        }
      }
      return delete nodes_by_key[key]
    }else {
      $el = enter(d);
      return singult.coffee.node_data($el, d)
    }
  });
  for(_ in nodes_by_key) {
    $n = nodes_by_key[_];
    exit($n)
  }
  return null
};
singult.coffee.merge = function($e, m) {
  var $c, c, i, _i, _j, _ref, _ref1;
  if(unify_p(m)) {
    singult.coffee.unify_($e, m)
  }else {
    if(ignore_p(m)) {
    }else {
      if($e.nodeName.toLowerCase() !== m.tag.toLowerCase()) {
        p($e);
        p(m);
        throw new Error("Cannot merge $e into node of different type");
      }
      singult.coffee.attr($e, m.attr);
      if($e.hasChildNodes()) {
        for(i = _i = _ref = $e.childNodes.length - 1;_ref <= 0 ? _i <= 0 : _i >= 0;i = _ref <= 0 ? ++_i : --_i) {
          $c = $e.childNodes[i];
          if(whitespace_node_p($c)) {
            $e.removeChild($c)
          }
        }
      }
      if(unify_p(m.children[0])) {
        singult.coffee.merge($e, m.children[0])
      }else {
        if($e.childNodes.length > m.children.length) {
          for(i = _j = _ref1 = $e.childNodes.length - 1;_ref1 <= 0 ? _j <= 0 : _j >= 0;i = _ref1 <= 0 ? ++_j : --_j) {
            $e.removeChild($e.childNodes[i])
          }
        }
        i = 0;
        while(i < m.children.length) {
          c = m.children[i] || "";
          $c = $e.childNodes[i];
          if(string_p(c)) {
            if($c != null) {
              $c.textContent = c
            }else {
              $e.appendChild(document.createTextNode(c))
            }
          }else {
            if(ignore_p(c)) {
            }else {
              if(map_p(c)) {
                if($c != null) {
                  singult.coffee.merge($c, c)
                }else {
                  $e.appendChild(singult.coffee.render(c))
                }
              }else {
                p($c);
                p(c);
                throw new Error("Cannot merge children");
              }
            }
          }
          i += 1
        }
      }
    }
  }
  return $e
};
goog.provide("singult.core");
goog.require("cljs.core");
goog.require("singult.coffee");
singult.core.Unify = function(data, mapping, key_fn, enter, update, exit, force_update_QMARK_, __meta, __extmap) {
  this.data = data;
  this.mapping = mapping;
  this.key_fn = key_fn;
  this.enter = enter;
  this.update = update;
  this.exit = exit;
  this.force_update_QMARK_ = force_update_QMARK_;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054858;
  if(arguments.length > 7) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
singult.core.Unify.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__16187 = this;
  var h__2093__auto____16188 = this__16187.__hash;
  if(!(h__2093__auto____16188 == null)) {
    return h__2093__auto____16188
  }else {
    var h__2093__auto____16189 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__16187.__hash = h__2093__auto____16189;
    return h__2093__auto____16189
  }
};
singult.core.Unify.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__16190 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
singult.core.Unify.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k16185, else__2227__auto__) {
  var this__16191 = this;
  if(k16185 === "\ufdd0'data") {
    return this__16191.data
  }else {
    if(k16185 === "\ufdd0'mapping") {
      return this__16191.mapping
    }else {
      if(k16185 === "\ufdd0'key-fn") {
        return this__16191.key_fn
      }else {
        if(k16185 === "\ufdd0'enter") {
          return this__16191.enter
        }else {
          if(k16185 === "\ufdd0'update") {
            return this__16191.update
          }else {
            if(k16185 === "\ufdd0'exit") {
              return this__16191.exit
            }else {
              if(k16185 === "\ufdd0'force-update?") {
                return this__16191.force_update_QMARK_
              }else {
                if("\ufdd0'else") {
                  return cljs.core._lookup.call(null, this__16191.__extmap, k16185, else__2227__auto__)
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
singult.core.Unify.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__16184) {
  var this__16192 = this;
  var pred__16193__16196 = cljs.core.identical_QMARK_;
  var expr__16194__16197 = k__2232__auto__;
  if(pred__16193__16196.call(null, "\ufdd0'data", expr__16194__16197)) {
    return new singult.core.Unify(G__16184, this__16192.mapping, this__16192.key_fn, this__16192.enter, this__16192.update, this__16192.exit, this__16192.force_update_QMARK_, this__16192.__meta, this__16192.__extmap, null)
  }else {
    if(pred__16193__16196.call(null, "\ufdd0'mapping", expr__16194__16197)) {
      return new singult.core.Unify(this__16192.data, G__16184, this__16192.key_fn, this__16192.enter, this__16192.update, this__16192.exit, this__16192.force_update_QMARK_, this__16192.__meta, this__16192.__extmap, null)
    }else {
      if(pred__16193__16196.call(null, "\ufdd0'key-fn", expr__16194__16197)) {
        return new singult.core.Unify(this__16192.data, this__16192.mapping, G__16184, this__16192.enter, this__16192.update, this__16192.exit, this__16192.force_update_QMARK_, this__16192.__meta, this__16192.__extmap, null)
      }else {
        if(pred__16193__16196.call(null, "\ufdd0'enter", expr__16194__16197)) {
          return new singult.core.Unify(this__16192.data, this__16192.mapping, this__16192.key_fn, G__16184, this__16192.update, this__16192.exit, this__16192.force_update_QMARK_, this__16192.__meta, this__16192.__extmap, null)
        }else {
          if(pred__16193__16196.call(null, "\ufdd0'update", expr__16194__16197)) {
            return new singult.core.Unify(this__16192.data, this__16192.mapping, this__16192.key_fn, this__16192.enter, G__16184, this__16192.exit, this__16192.force_update_QMARK_, this__16192.__meta, this__16192.__extmap, null)
          }else {
            if(pred__16193__16196.call(null, "\ufdd0'exit", expr__16194__16197)) {
              return new singult.core.Unify(this__16192.data, this__16192.mapping, this__16192.key_fn, this__16192.enter, this__16192.update, G__16184, this__16192.force_update_QMARK_, this__16192.__meta, this__16192.__extmap, null)
            }else {
              if(pred__16193__16196.call(null, "\ufdd0'force-update?", expr__16194__16197)) {
                return new singult.core.Unify(this__16192.data, this__16192.mapping, this__16192.key_fn, this__16192.enter, this__16192.update, this__16192.exit, G__16184, this__16192.__meta, this__16192.__extmap, null)
              }else {
                return new singult.core.Unify(this__16192.data, this__16192.mapping, this__16192.key_fn, this__16192.enter, this__16192.update, this__16192.exit, this__16192.force_update_QMARK_, this__16192.__meta, cljs.core.assoc.call(null, this__16192.__extmap, k__2232__auto__, G__16184), null)
              }
            }
          }
        }
      }
    }
  }
};
singult.core.Unify.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__16198 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
singult.core.Unify.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__16199 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'data", this__16199.data), cljs.core.vector.call(null, "\ufdd0'mapping", this__16199.mapping), cljs.core.vector.call(null, "\ufdd0'key-fn", this__16199.key_fn), cljs.core.vector.call(null, "\ufdd0'enter", this__16199.enter), cljs.core.vector.call(null, "\ufdd0'update", this__16199.update), cljs.core.vector.call(null, "\ufdd0'exit", this__16199.exit), cljs.core.vector.call(null, 
  "\ufdd0'force-update?", this__16199.force_update_QMARK_)], true), this__16199.__extmap))
};
singult.core.Unify.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__16200 = this;
  var pr_pair__2240__auto____16201 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____16201, [cljs.core.str("#"), cljs.core.str("Unify"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'data", this__16200.data), cljs.core.vector.call(null, "\ufdd0'mapping", this__16200.mapping), cljs.core.vector.call(null, "\ufdd0'key-fn", this__16200.key_fn), cljs.core.vector.call(null, "\ufdd0'enter", this__16200.enter), 
  cljs.core.vector.call(null, "\ufdd0'update", this__16200.update), cljs.core.vector.call(null, "\ufdd0'exit", this__16200.exit), cljs.core.vector.call(null, "\ufdd0'force-update?", this__16200.force_update_QMARK_)], true), this__16200.__extmap))
};
singult.core.Unify.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__16202 = this;
  return 7 + cljs.core.count.call(null, this__16202.__extmap)
};
singult.core.Unify.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__16203 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____16204 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____16204)) {
      var and__3822__auto____16205 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____16205) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____16205
      }
    }else {
      return and__3822__auto____16204
    }
  }())) {
    return true
  }else {
    return false
  }
};
singult.core.Unify.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__16184) {
  var this__16206 = this;
  return new singult.core.Unify(this__16206.data, this__16206.mapping, this__16206.key_fn, this__16206.enter, this__16206.update, this__16206.exit, this__16206.force_update_QMARK_, G__16184, this__16206.__extmap, this__16206.__hash)
};
singult.core.Unify.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__16207 = this;
  return this__16207.__meta
};
singult.core.Unify.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__16208 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'data", "\ufdd0'force-update?", "\ufdd0'enter", "\ufdd0'exit", "\ufdd0'key-fn", "\ufdd0'update", "\ufdd0'mapping"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__16208.__meta), k__2234__auto__)
  }else {
    return new singult.core.Unify(this__16208.data, this__16208.mapping, this__16208.key_fn, this__16208.enter, this__16208.update, this__16208.exit, this__16208.force_update_QMARK_, this__16208.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__16208.__extmap, k__2234__auto__)), null)
  }
};
singult.core.Unify.cljs$lang$type = true;
singult.core.Unify.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "singult.core/Unify")
};
singult.core.__GT_Unify = function __GT_Unify(data, mapping, key_fn, enter, update, exit, force_update_QMARK_) {
  return new singult.core.Unify(data, mapping, key_fn, enter, update, exit, force_update_QMARK_)
};
singult.core.map__GT_Unify = function map__GT_Unify(G__16186) {
  return new singult.core.Unify((new cljs.core.Keyword("\ufdd0'data")).call(null, G__16186), (new cljs.core.Keyword("\ufdd0'mapping")).call(null, G__16186), (new cljs.core.Keyword("\ufdd0'key-fn")).call(null, G__16186), (new cljs.core.Keyword("\ufdd0'enter")).call(null, G__16186), (new cljs.core.Keyword("\ufdd0'update")).call(null, G__16186), (new cljs.core.Keyword("\ufdd0'exit")).call(null, G__16186), (new cljs.core.Keyword("\ufdd0'force-update?")).call(null, G__16186), null, cljs.core.dissoc.call(null, 
  G__16186, "\ufdd0'data", "\ufdd0'mapping", "\ufdd0'key-fn", "\ufdd0'enter", "\ufdd0'update", "\ufdd0'exit", "\ufdd0'force-update?"))
};
singult.core.Unify;
singult.core.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.instance_QMARK_.call(null, singult.core.Unify, x)) {
    var map__16262__16263 = x;
    var map__16262__16264 = cljs.core.seq_QMARK_.call(null, map__16262__16263) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16262__16263) : map__16262__16263;
    var force_update_QMARK___16265 = cljs.core._lookup.call(null, map__16262__16264, "\ufdd0'force-update?", null);
    var exit__16266 = cljs.core._lookup.call(null, map__16262__16264, "\ufdd0'exit", null);
    var update__16267 = cljs.core._lookup.call(null, map__16262__16264, "\ufdd0'update", null);
    var enter__16268 = cljs.core._lookup.call(null, map__16262__16264, "\ufdd0'enter", null);
    var key_fn__16269 = cljs.core._lookup.call(null, map__16262__16264, "\ufdd0'key-fn", null);
    var mapping__16270 = cljs.core._lookup.call(null, map__16262__16264, "\ufdd0'mapping", null);
    var data__16271 = cljs.core._lookup.call(null, map__16262__16264, "\ufdd0'data", null);
    var data_arr__16279 = function() {
      var a__16272 = [];
      var G__16273__16274 = cljs.core.seq.call(null, data__16271);
      if(G__16273__16274) {
        var d__16275 = cljs.core.first.call(null, G__16273__16274);
        var G__16273__16276 = G__16273__16274;
        while(true) {
          a__16272.push(d__16275);
          var temp__3974__auto____16277 = cljs.core.next.call(null, G__16273__16276);
          if(temp__3974__auto____16277) {
            var G__16273__16278 = temp__3974__auto____16277;
            var G__16315 = cljs.core.first.call(null, G__16273__16278);
            var G__16316 = G__16273__16278;
            d__16275 = G__16315;
            G__16273__16276 = G__16316;
            continue
          }else {
          }
          break
        }
      }else {
      }
      return a__16272
    }();
    return new singult.coffee.Unify(data_arr__16279, function(p1__16183_SHARP_) {
      return clj__GT_js.call(null, mapping__16270.call(null, p1__16183_SHARP_))
    }, key_fn__16269, enter__16268, update__16267, exit__16266, force_update_QMARK___16265)
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        var o__16280 = {};
        var G__16281__16282 = cljs.core.seq.call(null, x);
        if(G__16281__16282) {
          var G__16284__16286 = cljs.core.first.call(null, G__16281__16282);
          var vec__16285__16287 = G__16284__16286;
          var k__16288 = cljs.core.nth.call(null, vec__16285__16287, 0, null);
          var v__16289 = cljs.core.nth.call(null, vec__16285__16287, 1, null);
          var G__16281__16290 = G__16281__16282;
          var G__16284__16291 = G__16284__16286;
          var G__16281__16292 = G__16281__16290;
          while(true) {
            var vec__16293__16294 = G__16284__16291;
            var k__16295 = cljs.core.nth.call(null, vec__16293__16294, 0, null);
            var v__16296 = cljs.core.nth.call(null, vec__16293__16294, 1, null);
            var G__16281__16297 = G__16281__16292;
            var key__16298 = clj__GT_js.call(null, k__16295);
            if(cljs.core.string_QMARK_.call(null, key__16298)) {
            }else {
              throw"Cannot convert; JavaScript map keys must be strings";
            }
            o__16280[key__16298] = clj__GT_js.call(null, v__16296);
            var temp__3974__auto____16299 = cljs.core.next.call(null, G__16281__16297);
            if(temp__3974__auto____16299) {
              var G__16281__16300 = temp__3974__auto____16299;
              var G__16317 = cljs.core.first.call(null, G__16281__16300);
              var G__16318 = G__16281__16300;
              G__16284__16291 = G__16317;
              G__16281__16292 = G__16318;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return o__16280
      }else {
        if(cljs.core.seq_QMARK_.call(null, x)) {
          var a__16301 = [];
          a__16301.push(":*:");
          var G__16302__16303 = cljs.core.seq.call(null, x);
          if(G__16302__16303) {
            var item__16304 = cljs.core.first.call(null, G__16302__16303);
            var G__16302__16305 = G__16302__16303;
            while(true) {
              a__16301.push(clj__GT_js.call(null, item__16304));
              var temp__3974__auto____16306 = cljs.core.next.call(null, G__16302__16305);
              if(temp__3974__auto____16306) {
                var G__16302__16307 = temp__3974__auto____16306;
                var G__16319 = cljs.core.first.call(null, G__16302__16307);
                var G__16320 = G__16302__16307;
                item__16304 = G__16319;
                G__16302__16305 = G__16320;
                continue
              }else {
              }
              break
            }
          }else {
          }
          return a__16301
        }else {
          if(cljs.core.coll_QMARK_.call(null, x)) {
            var a__16308 = [];
            var G__16309__16310 = cljs.core.seq.call(null, x);
            if(G__16309__16310) {
              var item__16311 = cljs.core.first.call(null, G__16309__16310);
              var G__16309__16312 = G__16309__16310;
              while(true) {
                a__16308.push(clj__GT_js.call(null, item__16311));
                var temp__3974__auto____16313 = cljs.core.next.call(null, G__16309__16312);
                if(temp__3974__auto____16313) {
                  var G__16309__16314 = temp__3974__auto____16313;
                  var G__16321 = cljs.core.first.call(null, G__16309__16314);
                  var G__16322 = G__16309__16314;
                  item__16311 = G__16321;
                  G__16309__16312 = G__16322;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return a__16308
          }else {
            if("\ufdd0'else") {
              return x
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
singult.core.node_data = singult.coffee.node_data;
singult.core.attr = function attr($n, m) {
  return singult.coffee.attr.call(null, $n, singult.core.clj__GT_js.call(null, m))
};
singult.core.render = function render(v) {
  return singult.coffee.render.call(null, singult.coffee.canonicalize.call(null, singult.core.clj__GT_js.call(null, v)))
};
singult.core.merge_BANG_ = function merge_BANG_($n, v) {
  if(v == null) {
    return null
  }else {
    return singult.coffee.merge.call(null, $n, singult.coffee.canonicalize.call(null, singult.core.clj__GT_js.call(null, v)))
  }
};
singult.core.unify = function() {
  var unify__delegate = function(data, mapping, p__16323) {
    var map__16332__16333 = p__16323;
    var map__16332__16334 = cljs.core.seq_QMARK_.call(null, map__16332__16333) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16332__16333) : map__16332__16333;
    var force_update_QMARK___16335 = cljs.core._lookup.call(null, map__16332__16334, "\ufdd0'force-update?", null);
    var exit__16336 = cljs.core._lookup.call(null, map__16332__16334, "\ufdd0'exit", null);
    var update__16337 = cljs.core._lookup.call(null, map__16332__16334, "\ufdd0'update", null);
    var enter__16338 = cljs.core._lookup.call(null, map__16332__16334, "\ufdd0'enter", null);
    var key_fn__16339 = cljs.core._lookup.call(null, map__16332__16334, "\ufdd0'key-fn", null);
    return new singult.core.Unify(data, mapping, key_fn__16339, enter__16338, update__16337, exit__16336, force_update_QMARK___16335)
  };
  var unify = function(data, mapping, var_args) {
    var p__16323 = null;
    if(goog.isDef(var_args)) {
      p__16323 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unify__delegate.call(this, data, mapping, p__16323)
  };
  unify.cljs$lang$maxFixedArity = 2;
  unify.cljs$lang$applyTo = function(arglist__16340) {
    var data = cljs.core.first(arglist__16340);
    var mapping = cljs.core.first(cljs.core.next(arglist__16340));
    var p__16323 = cljs.core.rest(cljs.core.next(arglist__16340));
    return unify__delegate(data, mapping, p__16323)
  };
  unify.cljs$lang$arity$variadic = unify__delegate;
  return unify
}();
singult.core.ignore = function ignore() {
  return new singult.coffee.Ignore
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__15678 = s;
      var limit__15679 = limit;
      var parts__15680 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__15679, 1)) {
          return cljs.core.conj.call(null, parts__15680, s__15678)
        }else {
          var temp__3971__auto____15681 = cljs.core.re_find.call(null, re, s__15678);
          if(cljs.core.truth_(temp__3971__auto____15681)) {
            var m__15682 = temp__3971__auto____15681;
            var index__15683 = s__15678.indexOf(m__15682);
            var G__15684 = s__15678.substring(index__15683 + cljs.core.count.call(null, m__15682));
            var G__15685 = limit__15679 - 1;
            var G__15686 = cljs.core.conj.call(null, parts__15680, s__15678.substring(0, index__15683));
            s__15678 = G__15684;
            limit__15679 = G__15685;
            parts__15680 = G__15686;
            continue
          }else {
            return cljs.core.conj.call(null, parts__15680, s__15678)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__15690 = s.length;
  while(true) {
    if(index__15690 === 0) {
      return""
    }else {
      var ch__15691 = cljs.core._lookup.call(null, s, index__15690 - 1, null);
      if(function() {
        var or__3824__auto____15692 = cljs.core._EQ_.call(null, ch__15691, "\n");
        if(or__3824__auto____15692) {
          return or__3824__auto____15692
        }else {
          return cljs.core._EQ_.call(null, ch__15691, "\r")
        }
      }()) {
        var G__15693 = index__15690 - 1;
        index__15690 = G__15693;
        continue
      }else {
        return s.substring(0, index__15690)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__15697 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____15698 = cljs.core.not.call(null, s__15697);
    if(or__3824__auto____15698) {
      return or__3824__auto____15698
    }else {
      var or__3824__auto____15699 = cljs.core._EQ_.call(null, "", s__15697);
      if(or__3824__auto____15699) {
        return or__3824__auto____15699
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__15697)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__15706 = new goog.string.StringBuffer;
  var length__15707 = s.length;
  var index__15708 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__15707, index__15708)) {
      return buffer__15706.toString()
    }else {
      var ch__15709 = s.charAt(index__15708);
      var temp__3971__auto____15710 = cljs.core._lookup.call(null, cmap, ch__15709, null);
      if(cljs.core.truth_(temp__3971__auto____15710)) {
        var replacement__15711 = temp__3971__auto____15710;
        buffer__15706.append([cljs.core.str(replacement__15711)].join(""))
      }else {
        buffer__15706.append(ch__15709)
      }
      var G__15712 = index__15708 + 1;
      index__15708 = G__15712;
      continue
    }
    break
  }
};
goog.provide("c2.dom");
goog.require("cljs.core");
goog.require("goog.style");
goog.require("goog.dom.classes");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("singult.core");
goog.require("clojure.string");
NodeList.prototype.cljs$core$ISeqable$ = true;
NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
HTMLCollection.prototype.cljs$core$ISeqable$ = true;
HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
Node.prototype.cljs$core$IHash$ = true;
Node.prototype.cljs$core$IHash$_hash$arity$1 = function(x) {
  return x
};
c2.dom.IDom = {};
c2.dom.__GT_dom = function __GT_dom(x) {
  if(function() {
    var and__3822__auto____15517 = x;
    if(and__3822__auto____15517) {
      return x.c2$dom$IDom$__GT_dom$arity$1
    }else {
      return and__3822__auto____15517
    }
  }()) {
    return x.c2$dom$IDom$__GT_dom$arity$1(x)
  }else {
    var x__2264__auto____15518 = x == null ? null : x;
    return function() {
      var or__3824__auto____15519 = c2.dom.__GT_dom[goog.typeOf(x__2264__auto____15518)];
      if(or__3824__auto____15519) {
        return or__3824__auto____15519
      }else {
        var or__3824__auto____15520 = c2.dom.__GT_dom["_"];
        if(or__3824__auto____15520) {
          return or__3824__auto____15520
        }else {
          throw cljs.core.missing_protocol.call(null, "IDom.->dom", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.PersistentVector.prototype.c2$dom$IDom$ = true;
cljs.core.PersistentVector.prototype.c2$dom$IDom$__GT_dom$arity$1 = function(v) {
  return singult.core.render.call(null, v)
};
Node.prototype.c2$dom$IDom$ = true;
Node.prototype.c2$dom$IDom$__GT_dom$arity$1 = function(node) {
  return node
};
c2.dom.IDom["string"] = true;
c2.dom.__GT_dom["string"] = function(selector) {
  return c2.dom.select.call(null, selector)
};
c2.dom.select = function() {
  var select = null;
  var select__1 = function(selector) {
    return document.querySelector(selector)
  };
  var select__2 = function(selector, container) {
    return c2.dom.__GT_dom.call(null, container).querySelector(selector)
  };
  select = function(selector, container) {
    switch(arguments.length) {
      case 1:
        return select__1.call(this, selector);
      case 2:
        return select__2.call(this, selector, container)
    }
    throw"Invalid arity: " + arguments.length;
  };
  select.cljs$lang$arity$1 = select__1;
  select.cljs$lang$arity$2 = select__2;
  return select
}();
c2.dom.select_all = function() {
  var select_all = null;
  var select_all__1 = function(selector) {
    return document.querySelectorAll(selector)
  };
  var select_all__2 = function(selector, container) {
    return c2.dom.__GT_dom.call(null, container).querySelectorAll(selector)
  };
  select_all = function(selector, container) {
    switch(arguments.length) {
      case 1:
        return select_all__1.call(this, selector);
      case 2:
        return select_all__2.call(this, selector, container)
    }
    throw"Invalid arity: " + arguments.length;
  };
  select_all.cljs$lang$arity$1 = select_all__1;
  select_all.cljs$lang$arity$2 = select_all__2;
  return select_all
}();
c2.dom.matches_selector_QMARK_ = function matches_selector_QMARK_(node, selector) {
  return node.webkitMatchesSelector(selector)
};
c2.dom.children = function children(node) {
  return c2.dom.__GT_dom.call(null, node).children
};
c2.dom.parent = function parent(node) {
  return c2.dom.__GT_dom.call(null, node).parentNode
};
c2.dom.append_BANG_ = function append_BANG_(container, el) {
  var el__15522 = c2.dom.__GT_dom.call(null, el);
  goog.dom.appendChild(c2.dom.__GT_dom.call(null, container), el__15522);
  return el__15522
};
c2.dom.prepend_BANG_ = function prepend_BANG_(container, el) {
  var el__15524 = c2.dom.__GT_dom.call(null, el);
  goog.dom.insertChildAt(c2.dom.__GT_dom.call(null, container), el__15524, 0);
  return el__15524
};
c2.dom.remove_BANG_ = function remove_BANG_(el) {
  return goog.dom.removeNode(c2.dom.__GT_dom.call(null, el))
};
c2.dom.replace_BANG_ = function replace_BANG_(old, new$) {
  var new__15526 = c2.dom.__GT_dom.call(null, new$);
  goog.dom.replaceNode(new__15526, c2.dom.__GT_dom.call(null, old));
  return new__15526
};
c2.dom.style = function() {
  var style = null;
  var style__1 = function(el) {
    throw new Error("TODO: return map of element styles");
  };
  var style__2 = function(el, x) {
    var el__15559 = c2.dom.__GT_dom.call(null, el);
    try {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        var k__15584 = x;
        return goog.style.getComputedStyle(el__15559, cljs.core.name.call(null, k__15584))
      }else {
        if("\ufdd0'else") {
          throw 0;
        }else {
          return null
        }
      }
    }catch(e__6905__auto__) {
      if(e__6905__auto__ === 0) {
        try {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m__15564 = x;
            var G__15565__15566 = cljs.core.seq.call(null, m__15564);
            if(G__15565__15566) {
              var G__15568__15570 = cljs.core.first.call(null, G__15565__15566);
              var vec__15569__15571 = G__15568__15570;
              var k__15572 = cljs.core.nth.call(null, vec__15569__15571, 0, null);
              var v__15573 = cljs.core.nth.call(null, vec__15569__15571, 1, null);
              var G__15565__15574 = G__15565__15566;
              var G__15568__15575 = G__15568__15570;
              var G__15565__15576 = G__15565__15574;
              while(true) {
                var vec__15577__15578 = G__15568__15575;
                var k__15579 = cljs.core.nth.call(null, vec__15577__15578, 0, null);
                var v__15580 = cljs.core.nth.call(null, vec__15577__15578, 1, null);
                var G__15565__15581 = G__15565__15576;
                style.call(null, el__15559, k__15579, v__15580);
                var temp__3974__auto____15582 = cljs.core.next.call(null, G__15565__15581);
                if(temp__3974__auto____15582) {
                  var G__15565__15583 = temp__3974__auto____15582;
                  var G__15591 = cljs.core.first.call(null, G__15565__15583);
                  var G__15592 = G__15565__15583;
                  G__15568__15575 = G__15591;
                  G__15565__15576 = G__15592;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return el__15559
          }else {
            if("\ufdd0'else") {
              throw 0;
            }else {
              return null
            }
          }
        }catch(e__6905__auto__) {
          if(e__6905__auto__ === 0) {
            var G__15560__15563 = x;
            return null
          }else {
            throw e__6905__auto__;
          }
        }
      }else {
        throw e__6905__auto__;
      }
    }
  };
  var style__3 = function(el, k, v) {
    goog.style.setStyle(c2.dom.__GT_dom.call(null, el), cljs.core.name.call(null, k), function() {
      try {
        if(cljs.core.string_QMARK_.call(null, v)) {
          var s__15590 = v;
          return s__15590
        }else {
          if("\ufdd0'else") {
            throw 0;
          }else {
            return null
          }
        }
      }catch(e__6905__auto__) {
        if(e__6905__auto__ === 0) {
          try {
            if(cljs.core.number_QMARK_.call(null, v)) {
              var n__15589 = v;
              if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray(["\ufdd0'bottom", "\ufdd0'width", "\ufdd0'top", "\ufdd0'right", "\ufdd0'left", "\ufdd0'height"]).call(null, cljs.core.keyword.call(null, k)))) {
                return[cljs.core.str(n__15589), cljs.core.str("px")].join("")
              }else {
                return n__15589
              }
            }else {
              if("\ufdd0'else") {
                throw 0;
              }else {
                return null
              }
            }
          }catch(e__6905__auto__) {
            if(e__6905__auto__ === 0) {
              var G__15585__15588 = v;
              return null
            }else {
              throw e__6905__auto__;
            }
          }
        }else {
          throw e__6905__auto__;
        }
      }
    }());
    return el
  };
  style = function(el, k, v) {
    switch(arguments.length) {
      case 1:
        return style__1.call(this, el);
      case 2:
        return style__2.call(this, el, k);
      case 3:
        return style__3.call(this, el, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  style.cljs$lang$arity$1 = style__1;
  style.cljs$lang$arity$2 = style__2;
  style.cljs$lang$arity$3 = style__3;
  return style
}();
c2.dom.attr = function() {
  var attr = null;
  var attr__1 = function(el) {
    var attrs__15628 = c2.dom.__GT_dom.call(null, el).attributes;
    return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
      var iter__2363__auto____15635 = function iter__15629(s__15630) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__15630__15633 = s__15630;
          while(true) {
            if(cljs.core.seq.call(null, s__15630__15633)) {
              var i__15634 = cljs.core.first.call(null, s__15630__15633);
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, attrs__15628[i__15634].name), attrs__15628[i__15634].value], true), iter__15629.call(null, cljs.core.rest.call(null, s__15630__15633)))
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__2363__auto____15635.call(null, cljs.core.range.call(null, attrs__15628.length))
    }())
  };
  var attr__2 = function(el, x) {
    var el__15636 = c2.dom.__GT_dom.call(null, el);
    try {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        var k__15661 = x;
        return el__15636.getAttribute(cljs.core.name.call(null, k__15661))
      }else {
        if("\ufdd0'else") {
          throw 0;
        }else {
          return null
        }
      }
    }catch(e__6905__auto__) {
      if(e__6905__auto__ === 0) {
        try {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m__15641 = x;
            var G__15642__15643 = cljs.core.seq.call(null, m__15641);
            if(G__15642__15643) {
              var G__15645__15647 = cljs.core.first.call(null, G__15642__15643);
              var vec__15646__15648 = G__15645__15647;
              var k__15649 = cljs.core.nth.call(null, vec__15646__15648, 0, null);
              var v__15650 = cljs.core.nth.call(null, vec__15646__15648, 1, null);
              var G__15642__15651 = G__15642__15643;
              var G__15645__15652 = G__15645__15647;
              var G__15642__15653 = G__15642__15651;
              while(true) {
                var vec__15654__15655 = G__15645__15652;
                var k__15656 = cljs.core.nth.call(null, vec__15654__15655, 0, null);
                var v__15657 = cljs.core.nth.call(null, vec__15654__15655, 1, null);
                var G__15642__15658 = G__15642__15653;
                attr.call(null, el__15636, k__15656, v__15657);
                var temp__3974__auto____15659 = cljs.core.next.call(null, G__15642__15658);
                if(temp__3974__auto____15659) {
                  var G__15642__15660 = temp__3974__auto____15659;
                  var G__15663 = cljs.core.first.call(null, G__15642__15660);
                  var G__15664 = G__15642__15660;
                  G__15645__15652 = G__15663;
                  G__15642__15653 = G__15664;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return el__15636
          }else {
            if("\ufdd0'else") {
              throw 0;
            }else {
              return null
            }
          }
        }catch(e__6905__auto__) {
          if(e__6905__auto__ === 0) {
            var G__15637__15640 = x;
            return null
          }else {
            throw e__6905__auto__;
          }
        }
      }else {
        throw e__6905__auto__;
      }
    }
  };
  var attr__3 = function(el, k, v) {
    var el__15662 = c2.dom.__GT_dom.call(null, el);
    if(v == null) {
      el__15662.removeAttribute(cljs.core.name.call(null, k))
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0'style", k)) {
        c2.dom.style.call(null, el__15662, v)
      }else {
        el__15662.setAttribute(cljs.core.name.call(null, k), v)
      }
    }
    return el__15662
  };
  attr = function(el, k, v) {
    switch(arguments.length) {
      case 1:
        return attr__1.call(this, el);
      case 2:
        return attr__2.call(this, el, k);
      case 3:
        return attr__3.call(this, el, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  attr.cljs$lang$arity$1 = attr__1;
  attr.cljs$lang$arity$2 = attr__2;
  attr.cljs$lang$arity$3 = attr__3;
  return attr
}();
c2.dom.text = function() {
  var text = null;
  var text__1 = function(el) {
    return goog.dom.getTextContent(c2.dom.__GT_dom.call(null, el))
  };
  var text__2 = function(el, v) {
    var el__15666 = c2.dom.__GT_dom.call(null, el);
    goog.dom.setTextContent(el__15666, v);
    return el__15666
  };
  text = function(el, v) {
    switch(arguments.length) {
      case 1:
        return text__1.call(this, el);
      case 2:
        return text__2.call(this, el, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  text.cljs$lang$arity$1 = text__1;
  text.cljs$lang$arity$2 = text__2;
  return text
}();
c2.dom.val = function() {
  var val = null;
  var val__1 = function(el) {
    return goog.dom.forms.getValue(c2.dom.__GT_dom.call(null, el))
  };
  var val__2 = function(el, v) {
    var el__15668 = c2.dom.__GT_dom.call(null, el);
    goog.dom.forms.setValue(el__15668, v);
    return el__15668
  };
  val = function(el, v) {
    switch(arguments.length) {
      case 1:
        return val__1.call(this, el);
      case 2:
        return val__2.call(this, el, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  val.cljs$lang$arity$1 = val__1;
  val.cljs$lang$arity$2 = val__2;
  return val
}();
c2.dom.classed_BANG_ = function classed_BANG_(el, class$, classed_QMARK_) {
  return goog.dom.classes.enable(c2.dom.__GT_dom.call(null, el), cljs.core.name.call(null, class$), classed_QMARK_)
};
c2.dom.add_class_BANG_ = function add_class_BANG_(el, class$) {
  return c2.dom.classed_BANG_.call(null, el, class$, true)
};
c2.dom.remove_class_BANG_ = function remove_class_BANG_(el, class$) {
  return c2.dom.classed_BANG_.call(null, el, class$, false)
};
c2.dom.request_animation_frame = function() {
  var or__3824__auto____15670 = window.requestAnimationFrame;
  if(cljs.core.truth_(or__3824__auto____15670)) {
    return or__3824__auto____15670
  }else {
    var or__3824__auto____15671 = window.webkitRequestAnimationFrame;
    if(cljs.core.truth_(or__3824__auto____15671)) {
      return or__3824__auto____15671
    }else {
      return function(p1__15669_SHARP_) {
        return setTimeout(function() {
          return p1__15669_SHARP_.call(null)
        }, 10)
      }
    }
  }
}();
goog.provide("reflex.core");
goog.require("cljs.core");
reflex.core.capture_derefed = function capture_derefed(f) {
  var _BANG_recently_derefed10402__10403 = reflex.core._BANG_recently_derefed;
  try {
    reflex.core._BANG_recently_derefed = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY, "\ufdd0'meta", cljs.core.ObjMap.fromObject(["\ufdd0'no-deref-monitor"], {"\ufdd0'no-deref-monitor":true}));
    var res__10405 = f.call(null);
    return cljs.core.ObjMap.fromObject(["\ufdd0'res", "\ufdd0'derefed"], {"\ufdd0'res":res__10405, "\ufdd0'derefed":cljs.core.deref.call(null, reflex.core._BANG_recently_derefed)})
  }finally {
    reflex.core._BANG_recently_derefed = _BANG_recently_derefed10402__10403
  }
};
reflex.core.notify_deref_watcher_BANG_ = function notify_deref_watcher_BANG_(derefable) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____10407 = reflex.core._BANG_recently_derefed;
    if(cljs.core.truth_(and__3822__auto____10407)) {
      return cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'no-deref-monitor")).call(null, cljs.core.meta.call(null, derefable)))
    }else {
      return and__3822__auto____10407
    }
  }())) {
    return cljs.core.swap_BANG_.call(null, reflex.core._BANG_recently_derefed, function(p1__10397_SHARP_) {
      return cljs.core.conj.call(null, p1__10397_SHARP_, derefable)
    })
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IDeref$ = true;
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  reflex.core.notify_deref_watcher_BANG_.call(null, this$);
  return this$.state
};
reflex.core.IDisposable = {};
reflex.core.dispose_BANG_ = function dispose_BANG_(this$) {
  if(function() {
    var and__3822__auto____10412 = this$;
    if(and__3822__auto____10412) {
      return this$.reflex$core$IDisposable$dispose_BANG_$arity$1
    }else {
      return and__3822__auto____10412
    }
  }()) {
    return this$.reflex$core$IDisposable$dispose_BANG_$arity$1(this$)
  }else {
    var x__2264__auto____10413 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____10414 = reflex.core.dispose_BANG_[goog.typeOf(x__2264__auto____10413)];
      if(or__3824__auto____10414) {
        return or__3824__auto____10414
      }else {
        var or__3824__auto____10415 = reflex.core.dispose_BANG_["_"];
        if(or__3824__auto____10415) {
          return or__3824__auto____10415
        }else {
          throw cljs.core.missing_protocol.call(null, "IDisposable.dispose!", this$);
        }
      }
    }().call(null, this$)
  }
};
reflex.core.ComputedObservable = function(state, dirty_QMARK_, f, key, parent_watchables, watches, __meta, __extmap) {
  this.state = state;
  this.dirty_QMARK_ = dirty_QMARK_;
  this.f = f;
  this.key = key;
  this.parent_watchables = parent_watchables;
  this.watches = watches;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2766571274;
  if(arguments.length > 6) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__10419 = this;
  var h__2093__auto____10420 = this__10419.__hash;
  if(!(h__2093__auto____10420 == null)) {
    return h__2093__auto____10420
  }else {
    var h__2093__auto____10421 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__10419.__hash = h__2093__auto____10421;
    return h__2093__auto____10421
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__10422 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
reflex.core.ComputedObservable.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k10417, else__2227__auto__) {
  var this__10423 = this;
  if(k10417 === "\ufdd0'state") {
    return this__10423.state
  }else {
    if(k10417 === "\ufdd0'dirty?") {
      return this__10423.dirty_QMARK_
    }else {
      if(k10417 === "\ufdd0'f") {
        return this__10423.f
      }else {
        if(k10417 === "\ufdd0'key") {
          return this__10423.key
        }else {
          if(k10417 === "\ufdd0'parent-watchables") {
            return this__10423.parent_watchables
          }else {
            if(k10417 === "\ufdd0'watches") {
              return this__10423.watches
            }else {
              if("\ufdd0'else") {
                return cljs.core._lookup.call(null, this__10423.__extmap, k10417, else__2227__auto__)
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__10416) {
  var this__10424 = this;
  var pred__10425__10428 = cljs.core.identical_QMARK_;
  var expr__10426__10429 = k__2232__auto__;
  if(pred__10425__10428.call(null, "\ufdd0'state", expr__10426__10429)) {
    return new reflex.core.ComputedObservable(G__10416, this__10424.dirty_QMARK_, this__10424.f, this__10424.key, this__10424.parent_watchables, this__10424.watches, this__10424.__meta, this__10424.__extmap, null)
  }else {
    if(pred__10425__10428.call(null, "\ufdd0'dirty?", expr__10426__10429)) {
      return new reflex.core.ComputedObservable(this__10424.state, G__10416, this__10424.f, this__10424.key, this__10424.parent_watchables, this__10424.watches, this__10424.__meta, this__10424.__extmap, null)
    }else {
      if(pred__10425__10428.call(null, "\ufdd0'f", expr__10426__10429)) {
        return new reflex.core.ComputedObservable(this__10424.state, this__10424.dirty_QMARK_, G__10416, this__10424.key, this__10424.parent_watchables, this__10424.watches, this__10424.__meta, this__10424.__extmap, null)
      }else {
        if(pred__10425__10428.call(null, "\ufdd0'key", expr__10426__10429)) {
          return new reflex.core.ComputedObservable(this__10424.state, this__10424.dirty_QMARK_, this__10424.f, G__10416, this__10424.parent_watchables, this__10424.watches, this__10424.__meta, this__10424.__extmap, null)
        }else {
          if(pred__10425__10428.call(null, "\ufdd0'parent-watchables", expr__10426__10429)) {
            return new reflex.core.ComputedObservable(this__10424.state, this__10424.dirty_QMARK_, this__10424.f, this__10424.key, G__10416, this__10424.watches, this__10424.__meta, this__10424.__extmap, null)
          }else {
            if(pred__10425__10428.call(null, "\ufdd0'watches", expr__10426__10429)) {
              return new reflex.core.ComputedObservable(this__10424.state, this__10424.dirty_QMARK_, this__10424.f, this__10424.key, this__10424.parent_watchables, G__10416, this__10424.__meta, this__10424.__extmap, null)
            }else {
              return new reflex.core.ComputedObservable(this__10424.state, this__10424.dirty_QMARK_, this__10424.f, this__10424.key, this__10424.parent_watchables, this__10424.watches, this__10424.__meta, cljs.core.assoc.call(null, this__10424.__extmap, k__2232__auto__, G__10416), null)
            }
          }
        }
      }
    }
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var this__10430 = this;
  reflex.core.notify_deref_watcher_BANG_.call(null, this$);
  if(cljs.core.not.call(null, this__10430.dirty_QMARK_)) {
    return this$.state
  }else {
    var map__10431__10432 = reflex.core.capture_derefed.call(null, this__10430.f);
    var map__10431__10433 = cljs.core.seq_QMARK_.call(null, map__10431__10432) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10431__10432) : map__10431__10432;
    var derefed__10434 = cljs.core._lookup.call(null, map__10431__10433, "\ufdd0'derefed", null);
    var res__10435 = cljs.core._lookup.call(null, map__10431__10433, "\ufdd0'res", null);
    var G__10436__10437 = cljs.core.seq.call(null, this__10430.parent_watchables);
    if(G__10436__10437) {
      var w__10438 = cljs.core.first.call(null, G__10436__10437);
      var G__10436__10439 = G__10436__10437;
      while(true) {
        cljs.core.remove_watch.call(null, w__10438, this__10430.key);
        var temp__3974__auto____10440 = cljs.core.next.call(null, G__10436__10439);
        if(temp__3974__auto____10440) {
          var G__10436__10441 = temp__3974__auto____10440;
          var G__10489 = cljs.core.first.call(null, G__10436__10441);
          var G__10490 = G__10436__10441;
          w__10438 = G__10489;
          G__10436__10439 = G__10490;
          continue
        }else {
        }
        break
      }
    }else {
    }
    this$.parent_watchables = derefed__10434;
    var G__10442__10443 = cljs.core.seq.call(null, derefed__10434);
    if(G__10442__10443) {
      var w__10444 = cljs.core.first.call(null, G__10442__10443);
      var G__10442__10445 = G__10442__10443;
      while(true) {
        cljs.core.add_watch.call(null, w__10444, this__10430.key, function(w__10444, G__10442__10445) {
          return function() {
            this$.dirty_QMARK_ = true;
            return cljs.core._notify_watches.call(null, this$, null, null)
          }
        }(w__10444, G__10442__10445));
        var temp__3974__auto____10446 = cljs.core.next.call(null, G__10442__10445);
        if(temp__3974__auto____10446) {
          var G__10442__10447 = temp__3974__auto____10446;
          var G__10491 = cljs.core.first.call(null, G__10442__10447);
          var G__10492 = G__10442__10447;
          w__10444 = G__10491;
          G__10442__10445 = G__10492;
          continue
        }else {
        }
        break
      }
    }else {
    }
    this$.state = res__10435;
    this$.dirty_QMARK_ = false;
    return res__10435
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__10448 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, _10450, _) {
  var this__10449 = this;
  var G__10451__10452 = cljs.core.seq.call(null, this__10449.watches);
  if(G__10451__10452) {
    var G__10454__10456 = cljs.core.first.call(null, G__10451__10452);
    var vec__10455__10457 = G__10454__10456;
    var key__10458 = cljs.core.nth.call(null, vec__10455__10457, 0, null);
    var wf__10459 = cljs.core.nth.call(null, vec__10455__10457, 1, null);
    var G__10451__10460 = G__10451__10452;
    var G__10454__10461 = G__10454__10456;
    var G__10451__10462 = G__10451__10460;
    while(true) {
      var vec__10463__10464 = G__10454__10461;
      var key__10465 = cljs.core.nth.call(null, vec__10463__10464, 0, null);
      var wf__10466 = cljs.core.nth.call(null, vec__10463__10464, 1, null);
      var G__10451__10467 = G__10451__10462;
      wf__10466.call(null);
      var temp__3974__auto____10468 = cljs.core.next.call(null, G__10451__10467);
      if(temp__3974__auto____10468) {
        var G__10451__10469 = temp__3974__auto____10468;
        var G__10493 = cljs.core.first.call(null, G__10451__10469);
        var G__10494 = G__10451__10469;
        G__10454__10461 = G__10493;
        G__10451__10462 = G__10494;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, wf) {
  var this__10470 = this;
  return this$.watches = cljs.core.assoc.call(null, this__10470.watches, key, wf)
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__10471 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__10471.watches, key)
};
reflex.core.ComputedObservable.prototype.reflex$core$IDisposable$ = true;
reflex.core.ComputedObservable.prototype.reflex$core$IDisposable$dispose_BANG_$arity$1 = function(this$) {
  var this__10472 = this;
  var G__10473__10474 = cljs.core.seq.call(null, this__10472.parent_watchables);
  if(G__10473__10474) {
    var w__10475 = cljs.core.first.call(null, G__10473__10474);
    var G__10473__10476 = G__10473__10474;
    while(true) {
      cljs.core.remove_watch.call(null, w__10475, this__10472.key);
      var temp__3974__auto____10477 = cljs.core.next.call(null, G__10473__10476);
      if(temp__3974__auto____10477) {
        var G__10473__10478 = temp__3974__auto____10477;
        var G__10495 = cljs.core.first.call(null, G__10473__10478);
        var G__10496 = G__10473__10478;
        w__10475 = G__10495;
        G__10473__10476 = G__10496;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return this$.watches = null
};
reflex.core.ComputedObservable.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__10479 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'state", this__10479.state), cljs.core.vector.call(null, "\ufdd0'dirty?", this__10479.dirty_QMARK_), cljs.core.vector.call(null, "\ufdd0'f", this__10479.f), cljs.core.vector.call(null, "\ufdd0'key", this__10479.key), cljs.core.vector.call(null, "\ufdd0'parent-watchables", this__10479.parent_watchables), cljs.core.vector.call(null, "\ufdd0'watches", this__10479.watches)], 
  true), this__10479.__extmap))
};
reflex.core.ComputedObservable.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__10480 = this;
  var pr_pair__2240__auto____10481 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____10481, [cljs.core.str("#"), cljs.core.str("ComputedObservable"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'state", this__10480.state), cljs.core.vector.call(null, "\ufdd0'dirty?", this__10480.dirty_QMARK_), cljs.core.vector.call(null, "\ufdd0'f", this__10480.f), cljs.core.vector.call(null, "\ufdd0'key", this__10480.key), 
  cljs.core.vector.call(null, "\ufdd0'parent-watchables", this__10480.parent_watchables), cljs.core.vector.call(null, "\ufdd0'watches", this__10480.watches)], true), this__10480.__extmap))
};
reflex.core.ComputedObservable.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__10482 = this;
  return 6 + cljs.core.count.call(null, this__10482.__extmap)
};
reflex.core.ComputedObservable.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__10483 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____10484 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____10484)) {
      var and__3822__auto____10485 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____10485) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____10485
      }
    }else {
      return and__3822__auto____10484
    }
  }())) {
    return true
  }else {
    return false
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__10416) {
  var this__10486 = this;
  return new reflex.core.ComputedObservable(this__10486.state, this__10486.dirty_QMARK_, this__10486.f, this__10486.key, this__10486.parent_watchables, this__10486.watches, G__10416, this__10486.__extmap, this__10486.__hash)
};
reflex.core.ComputedObservable.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__10487 = this;
  return this__10487.__meta
};
reflex.core.ComputedObservable.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__10488 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'dirty?", "\ufdd0'state", "\ufdd0'key", "\ufdd0'f", "\ufdd0'watches", "\ufdd0'parent-watchables"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__10488.__meta), k__2234__auto__)
  }else {
    return new reflex.core.ComputedObservable(this__10488.state, this__10488.dirty_QMARK_, this__10488.f, this__10488.key, this__10488.parent_watchables, this__10488.watches, this__10488.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__10488.__extmap, k__2234__auto__)), null)
  }
};
reflex.core.ComputedObservable.cljs$lang$type = true;
reflex.core.ComputedObservable.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "reflex.core/ComputedObservable")
};
reflex.core.__GT_ComputedObservable = function __GT_ComputedObservable(state, dirty_QMARK_, f, key, parent_watchables, watches) {
  return new reflex.core.ComputedObservable(state, dirty_QMARK_, f, key, parent_watchables, watches)
};
reflex.core.map__GT_ComputedObservable = function map__GT_ComputedObservable(G__10418) {
  return new reflex.core.ComputedObservable((new cljs.core.Keyword("\ufdd0'state")).call(null, G__10418), (new cljs.core.Keyword("\ufdd0'dirty?")).call(null, G__10418), (new cljs.core.Keyword("\ufdd0'f")).call(null, G__10418), (new cljs.core.Keyword("\ufdd0'key")).call(null, G__10418), (new cljs.core.Keyword("\ufdd0'parent-watchables")).call(null, G__10418), (new cljs.core.Keyword("\ufdd0'watches")).call(null, G__10418), null, cljs.core.dissoc.call(null, G__10418, "\ufdd0'state", "\ufdd0'dirty?", 
  "\ufdd0'f", "\ufdd0'key", "\ufdd0'parent-watchables", "\ufdd0'watches"))
};
reflex.core.ComputedObservable;
reflex.core.ComputedObservable.prototype.cljs$core$IHash$ = true;
reflex.core.ComputedObservable.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  return this$.key
};
goog.provide("dubstep.pubsub");
goog.require("cljs.core");
dubstep.pubsub._STAR__BANG_channel_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
goog.provide("c2.util");
goog.require("cljs.core");
goog.require("singult.core");
c2.util.clj__GT_js = singult.core.clj__GT_js;
c2.util.__GT_coll = function __GT_coll(x) {
  if(cljs.core.coll_QMARK_.call(null, x)) {
    return x
  }else {
    return cljs.core.PersistentVector.fromArray([x], true)
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for(var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.dependentDisposables_;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  if(!this.dependentDisposables_) {
    this.dependentDisposables_ = []
  }
  this.dependentDisposables_.push(disposable)
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.dependentDisposables_) {
    goog.disposeAll.apply(null, this.dependentDisposables_)
  }
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if(goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable)
    }else {
      goog.dispose(disposable)
    }
  }
};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true
  }catch(e) {
  }
  return false
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      if(!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.ASSUME_GOOD_GC = false;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = {count_:0, remaining_:0}
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = {count_:0, remaining_:0};
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = [];
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.getProxy();
      proxy.src = src;
      listenerObj = new goog.events.Listener;
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = []
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.key, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.key, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(!listenerArray[i].removed && listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = [];
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0
      }
      evt.dispose()
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.dom");
var div__26060 = document.createElement("div");
var test_html__26061 = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
div__26060.innerHTML = test_html__26061;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div__26060.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div__26060.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div__26060.getElementsByTagName("link").length, 0);
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if(opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if(document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null)
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if(doc) {
        if(opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""))
        }
        return doc
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if(typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml")
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if(typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml)
  }
  var text = xml.xml;
  if(text) {
    return text
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if(typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectSingleNode(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue
    }
  }
  return null
};
goog.dom.xml.selectNodes = function(node, path) {
  if(typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectNodes(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for(var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i))
      }
      return results
    }else {
      return[]
    }
  }
};
goog.dom.xml.setAttributes = function(element, attributes) {
  for(var key in attributes) {
    if(attributes.hasOwnProperty(key)) {
      element.setAttribute(key, attributes[key])
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if(doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH)
    }catch(e) {
    }
  }
  return doc
};
goog.provide("domina");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.dom.classes");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper__25652 = cljs.core.PersistentVector.fromArray([1, "<select multiple='multiple'>", "</select>"], true);
var table_section_wrapper__25653 = cljs.core.PersistentVector.fromArray([1, "<table>", "</table>"], true);
var cell_wrapper__25654 = cljs.core.PersistentVector.fromArray([3, "<table><tbody><tr>", "</tr></tbody></table>"], true);
domina.wrap_map = cljs.core.ObjMap.fromObject(["col", "\ufdd0'default", "tfoot", "caption", "optgroup", "legend", "area", "td", "thead", "th", "option", "tbody", "tr", "colgroup"], {"col":cljs.core.PersistentVector.fromArray([2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], true), "\ufdd0'default":cljs.core.PersistentVector.fromArray([0, "", ""], true), "tfoot":table_section_wrapper__25653, "caption":table_section_wrapper__25653, "optgroup":opt_wrapper__25652, "legend":cljs.core.PersistentVector.fromArray([1, 
"<fieldset>", "</fieldset>"], true), "area":cljs.core.PersistentVector.fromArray([1, "<map>", "</map>"], true), "td":cell_wrapper__25654, "thead":table_section_wrapper__25653, "th":cell_wrapper__25654, "option":opt_wrapper__25652, "tbody":table_section_wrapper__25653, "tr":cljs.core.PersistentVector.fromArray([2, "<table><tbody>", "</tbody></table>"], true), "colgroup":table_section_wrapper__25653});
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html, tag_name, start_wrap) {
  var no_tbody_QMARK___25667 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody__25671 = function() {
    var and__3822__auto____25668 = cljs.core._EQ_.call(null, tag_name, "table");
    if(and__3822__auto____25668) {
      return no_tbody_QMARK___25667
    }else {
      return and__3822__auto____25668
    }
  }() ? function() {
    var and__3822__auto____25669 = div.firstChild;
    if(cljs.core.truth_(and__3822__auto____25669)) {
      return div.firstChild.childNodes
    }else {
      return and__3822__auto____25669
    }
  }() : function() {
    var and__3822__auto____25670 = cljs.core._EQ_.call(null, start_wrap, "<table>");
    if(and__3822__auto____25670) {
      return no_tbody_QMARK___25667
    }else {
      return and__3822__auto____25670
    }
  }() ? divchildNodes : cljs.core.PersistentVector.EMPTY;
  var G__25672__25673 = cljs.core.seq.call(null, tbody__25671);
  if(G__25672__25673) {
    var child__25674 = cljs.core.first.call(null, G__25672__25673);
    var G__25672__25675 = G__25672__25673;
    while(true) {
      if(function() {
        var and__3822__auto____25676 = cljs.core._EQ_.call(null, child__25674.nodeName, "tbody");
        if(and__3822__auto____25676) {
          return cljs.core._EQ_.call(null, child__25674.childNodes.length, 0)
        }else {
          return and__3822__auto____25676
        }
      }()) {
        child__25674.parentNode.removeChild(child__25674)
      }else {
      }
      var temp__3974__auto____25677 = cljs.core.next.call(null, G__25672__25675);
      if(temp__3974__auto____25677) {
        var G__25672__25678 = temp__3974__auto____25677;
        var G__25679 = cljs.core.first.call(null, G__25672__25678);
        var G__25680 = G__25672__25678;
        child__25674 = G__25679;
        G__25672__25675 = G__25680;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild)
};
domina.html_to_dom = function html_to_dom(html) {
  var html__25694 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "<$1></$2>");
  var tag_name__25695 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__25694)))].join("").toLowerCase();
  var vec__25693__25696 = cljs.core._lookup.call(null, domina.wrap_map, tag_name__25695, (new cljs.core.Keyword("\ufdd0'default")).call(null, domina.wrap_map));
  var depth__25697 = cljs.core.nth.call(null, vec__25693__25696, 0, null);
  var start_wrap__25698 = cljs.core.nth.call(null, vec__25693__25696, 1, null);
  var end_wrap__25699 = cljs.core.nth.call(null, vec__25693__25696, 2, null);
  var div__25703 = function() {
    var wrapper__25701 = function() {
      var div__25700 = document.createElement("div");
      div__25700.innerHTML = [cljs.core.str(start_wrap__25698), cljs.core.str(html__25694), cljs.core.str(end_wrap__25699)].join("");
      return div__25700
    }();
    var level__25702 = depth__25697;
    while(true) {
      if(level__25702 > 0) {
        var G__25705 = wrapper__25701.lastChild;
        var G__25706 = level__25702 - 1;
        wrapper__25701 = G__25705;
        level__25702 = G__25706;
        continue
      }else {
        return wrapper__25701
      }
      break
    }
  }();
  if(cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div__25703, html__25694, tag_name__25695, start_wrap__25698)
  }else {
  }
  if(cljs.core.truth_(function() {
    var and__3822__auto____25704 = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if(and__3822__auto____25704) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__25694)
    }else {
      return and__3822__auto____25704
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div__25703, html__25694)
  }else {
  }
  return div__25703.childNodes
};
domina.string_to_dom = function string_to_dom(s) {
  if(cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s)
  }else {
    return document.createTextNode(s)
  }
};
domina.DomContent = {};
domina.nodes = function nodes(content) {
  if(function() {
    var and__3822__auto____25711 = content;
    if(and__3822__auto____25711) {
      return content.domina$DomContent$nodes$arity$1
    }else {
      return and__3822__auto____25711
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content)
  }else {
    var x__2264__auto____25712 = content == null ? null : content;
    return function() {
      var or__3824__auto____25713 = domina.nodes[goog.typeOf(x__2264__auto____25712)];
      if(or__3824__auto____25713) {
        return or__3824__auto____25713
      }else {
        var or__3824__auto____25714 = domina.nodes["_"];
        if(or__3824__auto____25714) {
          return or__3824__auto____25714
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content)
  }
};
domina.single_node = function single_node(nodeseq) {
  if(function() {
    var and__3822__auto____25719 = nodeseq;
    if(and__3822__auto____25719) {
      return nodeseq.domina$DomContent$single_node$arity$1
    }else {
      return and__3822__auto____25719
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq)
  }else {
    var x__2264__auto____25720 = nodeseq == null ? null : nodeseq;
    return function() {
      var or__3824__auto____25721 = domina.single_node[goog.typeOf(x__2264__auto____25720)];
      if(or__3824__auto____25721) {
        return or__3824__auto____25721
      }else {
        var or__3824__auto____25722 = domina.single_node["_"];
        if(or__3824__auto____25722) {
          return or__3824__auto____25722
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq)
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____25724 = domina._STAR_debug_STAR_;
      if(cljs.core.truth_(and__3822__auto____25724)) {
        return!cljs.core._EQ_.call(null, window.console, undefined)
      }else {
        return and__3822__auto____25724
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log_debug__delegate.call(this, mesg)
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__25725) {
    var mesg = cljs.core.seq(arglist__25725);
    return log_debug__delegate(mesg)
  };
  log_debug.cljs$lang$arity$variadic = log_debug__delegate;
  return log_debug
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if(cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, mesg)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__25726) {
    var mesg = cljs.core.seq(arglist__25726);
    return log__delegate(mesg)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id))
};
domina.by_class = function by_class(class_name) {
  if(void 0 === domina.t25734) {
    domina.t25734 = function(class_name, by_class, meta25735) {
      this.class_name = class_name;
      this.by_class = by_class;
      this.meta25735 = meta25735;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    domina.t25734.cljs$lang$type = true;
    domina.t25734.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
      return cljs.core.list.call(null, "domina/t25734")
    };
    domina.t25734.prototype.domina$DomContent$ = true;
    domina.t25734.prototype.domina$DomContent$nodes$arity$1 = function(_) {
      var this__25737 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, this__25737.class_name)))
    };
    domina.t25734.prototype.domina$DomContent$single_node$arity$1 = function(_) {
      var this__25738 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementByClass(cljs.core.name.call(null, this__25738.class_name)))
    };
    domina.t25734.prototype.cljs$core$IMeta$_meta$arity$1 = function(_25736) {
      var this__25739 = this;
      return this__25739.meta25735
    };
    domina.t25734.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_25736, meta25735) {
      var this__25740 = this;
      return new domina.t25734(this__25740.class_name, this__25740.by_class, meta25735)
    };
    domina.t25734
  }else {
  }
  return new domina.t25734(class_name, by_class, null)
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)))
};
domina.common_ancestor = function() {
  var common_ancestor__delegate = function(contents) {
    return cljs.core.apply.call(null, goog.dom.findCommonAncestor, cljs.core.map.call(null, domina.single_node, contents))
  };
  var common_ancestor = function(var_args) {
    var contents = null;
    if(goog.isDef(var_args)) {
      contents = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return common_ancestor__delegate.call(this, contents)
  };
  common_ancestor.cljs$lang$maxFixedArity = 0;
  common_ancestor.cljs$lang$applyTo = function(arglist__25741) {
    var contents = cljs.core.seq(arglist__25741);
    return common_ancestor__delegate(contents)
  };
  common_ancestor.cljs$lang$arity$variadic = common_ancestor__delegate;
  return common_ancestor
}();
domina.ancestor_QMARK_ = function ancestor_QMARK_(ancestor_content, descendant_content) {
  return cljs.core._EQ_.call(null, domina.common_ancestor.call(null, ancestor_content, descendant_content), domina.single_node.call(null, ancestor_content))
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__25742_SHARP_) {
    return p1__25742_SHARP_.cloneNode(true)
  }, domina.nodes.call(null, content))
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__25743_SHARP_, p2__25744_SHARP_) {
    return goog.dom.insertChildAt(p1__25743_SHARP_, p2__25744_SHARP_, idx)
  }, parent_content, child_content);
  return parent_content
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__25746_SHARP_, p2__25745_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__25745_SHARP_, p1__25746_SHARP_)
  }, content, new_content);
  return content
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__25748_SHARP_, p2__25747_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__25747_SHARP_, p1__25748_SHARP_)
  }, content, new_content);
  return content
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__25750_SHARP_, p2__25749_SHARP_) {
    return goog.dom.replaceNode(p2__25749_SHARP_, p1__25750_SHARP_)
  }, old_content, new_content);
  return old_content
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content
};
domina.style = function style(content, name) {
  var s__25752 = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if(cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s__25752))) {
    return null
  }else {
    return s__25752
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name))
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var G__25759__25760 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__25759__25760) {
      var n__25761 = cljs.core.first.call(null, G__25759__25760);
      var G__25759__25762 = G__25759__25760;
      while(true) {
        goog.style.setStyle(n__25761, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____25763 = cljs.core.next.call(null, G__25759__25762);
        if(temp__3974__auto____25763) {
          var G__25759__25764 = temp__3974__auto____25763;
          var G__25765 = cljs.core.first.call(null, G__25759__25764);
          var G__25766 = G__25759__25764;
          n__25761 = G__25765;
          G__25759__25762 = G__25766;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_style_BANG___delegate.call(this, content, name, value)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__25767) {
    var content = cljs.core.first(arglist__25767);
    var name = cljs.core.first(cljs.core.next(arglist__25767));
    var value = cljs.core.rest(cljs.core.next(arglist__25767));
    return set_style_BANG___delegate(content, name, value)
  };
  set_style_BANG_.cljs$lang$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var G__25774__25775 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__25774__25775) {
      var n__25776 = cljs.core.first.call(null, G__25774__25775);
      var G__25774__25777 = G__25774__25775;
      while(true) {
        n__25776.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____25778 = cljs.core.next.call(null, G__25774__25777);
        if(temp__3974__auto____25778) {
          var G__25774__25779 = temp__3974__auto____25778;
          var G__25780 = cljs.core.first.call(null, G__25774__25779);
          var G__25781 = G__25774__25779;
          n__25776 = G__25780;
          G__25774__25777 = G__25781;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_attr_BANG___delegate.call(this, content, name, value)
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__25782) {
    var content = cljs.core.first(arglist__25782);
    var name = cljs.core.first(cljs.core.next(arglist__25782));
    var value = cljs.core.rest(cljs.core.next(arglist__25782));
    return set_attr_BANG___delegate(content, name, value)
  };
  set_attr_BANG_.cljs$lang$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var G__25789__25790 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__25789__25790) {
    var n__25791 = cljs.core.first.call(null, G__25789__25790);
    var G__25789__25792 = G__25789__25790;
    while(true) {
      n__25791.removeAttribute(cljs.core.name.call(null, name));
      var temp__3974__auto____25793 = cljs.core.next.call(null, G__25789__25792);
      if(temp__3974__auto____25793) {
        var G__25789__25794 = temp__3974__auto____25793;
        var G__25795 = cljs.core.first.call(null, G__25789__25794);
        var G__25796 = G__25789__25794;
        n__25791 = G__25795;
        G__25789__25792 = G__25796;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__25802__25803 = pair.split(/\s*:\s*/);
    var k__25804 = cljs.core.nth.call(null, vec__25802__25803, 0, null);
    var v__25805 = cljs.core.nth.call(null, vec__25802__25803, 1, null);
    if(cljs.core.truth_(function() {
      var and__3822__auto____25806 = k__25804;
      if(cljs.core.truth_(and__3822__auto____25806)) {
        return v__25805
      }else {
        return and__3822__auto____25806
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k__25804.toLowerCase()), v__25805)
    }else {
      return acc
    }
  }, cljs.core.ObjMap.EMPTY, style.split(/\s*;\s*/))
};
domina.styles = function styles(content) {
  var style__25809 = domina.attr.call(null, content, "style");
  if(cljs.core.string_QMARK_.call(null, style__25809)) {
    return domina.parse_style_attributes.call(null, style__25809)
  }else {
    if(cljs.core.truth_(style__25809.cssText)) {
      return domina.parse_style_attributes.call(null, style__25809.cssText)
    }else {
      return null
    }
  }
};
domina.attrs = function attrs(content) {
  var node__25815 = domina.single_node.call(null, content);
  var attrs__25816 = node__25815.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(p1__25807_SHARP_) {
    var attr__25817 = attrs__25816.item(p1__25807_SHARP_);
    var value__25818 = attr__25817.nodeValue;
    if(function() {
      var and__3822__auto____25819 = cljs.core.not_EQ_.call(null, null, value__25818);
      if(and__3822__auto____25819) {
        return cljs.core.not_EQ_.call(null, "", value__25818)
      }else {
        return and__3822__auto____25819
      }
    }()) {
      return cljs.core.PersistentArrayMap.fromArrays([cljs.core.keyword.call(null, attr__25817.nodeName.toLowerCase())], [attr__25817.nodeValue])
    }else {
      return null
    }
  }, cljs.core.range.call(null, attrs__25816.length))))
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var G__25839__25840 = cljs.core.seq.call(null, styles);
  if(G__25839__25840) {
    var G__25842__25844 = cljs.core.first.call(null, G__25839__25840);
    var vec__25843__25845 = G__25842__25844;
    var name__25846 = cljs.core.nth.call(null, vec__25843__25845, 0, null);
    var value__25847 = cljs.core.nth.call(null, vec__25843__25845, 1, null);
    var G__25839__25848 = G__25839__25840;
    var G__25842__25849 = G__25842__25844;
    var G__25839__25850 = G__25839__25848;
    while(true) {
      var vec__25851__25852 = G__25842__25849;
      var name__25853 = cljs.core.nth.call(null, vec__25851__25852, 0, null);
      var value__25854 = cljs.core.nth.call(null, vec__25851__25852, 1, null);
      var G__25839__25855 = G__25839__25850;
      domina.set_style_BANG_.call(null, content, name__25853, value__25854);
      var temp__3974__auto____25856 = cljs.core.next.call(null, G__25839__25855);
      if(temp__3974__auto____25856) {
        var G__25839__25857 = temp__3974__auto____25856;
        var G__25858 = cljs.core.first.call(null, G__25839__25857);
        var G__25859 = G__25839__25857;
        G__25842__25849 = G__25858;
        G__25839__25850 = G__25859;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var G__25879__25880 = cljs.core.seq.call(null, attrs);
  if(G__25879__25880) {
    var G__25882__25884 = cljs.core.first.call(null, G__25879__25880);
    var vec__25883__25885 = G__25882__25884;
    var name__25886 = cljs.core.nth.call(null, vec__25883__25885, 0, null);
    var value__25887 = cljs.core.nth.call(null, vec__25883__25885, 1, null);
    var G__25879__25888 = G__25879__25880;
    var G__25882__25889 = G__25882__25884;
    var G__25879__25890 = G__25879__25888;
    while(true) {
      var vec__25891__25892 = G__25882__25889;
      var name__25893 = cljs.core.nth.call(null, vec__25891__25892, 0, null);
      var value__25894 = cljs.core.nth.call(null, vec__25891__25892, 1, null);
      var G__25879__25895 = G__25879__25890;
      domina.set_attr_BANG_.call(null, content, name__25893, value__25894);
      var temp__3974__auto____25896 = cljs.core.next.call(null, G__25879__25895);
      if(temp__3974__auto____25896) {
        var G__25879__25897 = temp__3974__auto____25896;
        var G__25898 = cljs.core.first.call(null, G__25879__25897);
        var G__25899 = G__25879__25897;
        G__25882__25889 = G__25898;
        G__25879__25890 = G__25899;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$)
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var G__25906__25907 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__25906__25907) {
    var node__25908 = cljs.core.first.call(null, G__25906__25907);
    var G__25906__25909 = G__25906__25907;
    while(true) {
      goog.dom.classes.add(node__25908, class$);
      var temp__3974__auto____25910 = cljs.core.next.call(null, G__25906__25909);
      if(temp__3974__auto____25910) {
        var G__25906__25911 = temp__3974__auto____25910;
        var G__25912 = cljs.core.first.call(null, G__25906__25911);
        var G__25913 = G__25906__25911;
        node__25908 = G__25912;
        G__25906__25909 = G__25913;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var G__25920__25921 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__25920__25921) {
    var node__25922 = cljs.core.first.call(null, G__25920__25921);
    var G__25920__25923 = G__25920__25921;
    while(true) {
      goog.dom.classes.remove(node__25922, class$);
      var temp__3974__auto____25924 = cljs.core.next.call(null, G__25920__25923);
      if(temp__3974__auto____25924) {
        var G__25920__25925 = temp__3974__auto____25924;
        var G__25926 = cljs.core.first.call(null, G__25920__25925);
        var G__25927 = G__25920__25925;
        node__25922 = G__25926;
        G__25920__25923 = G__25927;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)))
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes__25935 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var G__25936__25937 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__25936__25937) {
    var node__25938 = cljs.core.first.call(null, G__25936__25937);
    var G__25936__25939 = G__25936__25937;
    while(true) {
      goog.dom.classes.set(node__25938, classes__25935);
      var temp__3974__auto____25940 = cljs.core.next.call(null, G__25936__25939);
      if(temp__3974__auto____25940) {
        var G__25936__25941 = temp__3974__auto____25940;
        var G__25942 = cljs.core.first.call(null, G__25936__25941);
        var G__25943 = G__25936__25941;
        node__25938 = G__25942;
        G__25936__25939 = G__25943;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)))
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var G__25950__25951 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__25950__25951) {
    var node__25952 = cljs.core.first.call(null, G__25950__25951);
    var G__25950__25953 = G__25950__25951;
    while(true) {
      goog.dom.setTextContent(node__25952, value);
      var temp__3974__auto____25954 = cljs.core.next.call(null, G__25950__25953);
      if(temp__3974__auto____25954) {
        var G__25950__25955 = temp__3974__auto____25954;
        var G__25956 = cljs.core.first.call(null, G__25950__25955);
        var G__25957 = G__25950__25955;
        node__25952 = G__25956;
        G__25950__25953 = G__25957;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content))
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var G__25964__25965 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__25964__25965) {
    var node__25966 = cljs.core.first.call(null, G__25964__25965);
    var G__25964__25967 = G__25964__25965;
    while(true) {
      goog.dom.forms.setValue(node__25966, value);
      var temp__3974__auto____25968 = cljs.core.next.call(null, G__25964__25967);
      if(temp__3974__auto____25968) {
        var G__25964__25969 = temp__3974__auto____25968;
        var G__25970 = cljs.core.first.call(null, G__25964__25969);
        var G__25971 = G__25964__25969;
        node__25966 = G__25970;
        G__25964__25967 = G__25971;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content)
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK___25988 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK___25989 = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name__25990 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK___25991 = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name__25990);
  if(cljs.core.truth_(function() {
    var and__3822__auto____25992 = allows_inner_html_QMARK___25988;
    if(and__3822__auto____25992) {
      var and__3822__auto____25994 = function() {
        var or__3824__auto____25993 = domina.support.leading_whitespace_QMARK_;
        if(cljs.core.truth_(or__3824__auto____25993)) {
          return or__3824__auto____25993
        }else {
          return cljs.core.not.call(null, leading_whitespace_QMARK___25989)
        }
      }();
      if(cljs.core.truth_(and__3822__auto____25994)) {
        return!special_tag_QMARK___25991
      }else {
        return and__3822__auto____25994
      }
    }else {
      return and__3822__auto____25992
    }
  }())) {
    var value__25995 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "<$1></$2>");
    try {
      var G__25998__25999 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      if(G__25998__25999) {
        var node__26000 = cljs.core.first.call(null, G__25998__25999);
        var G__25998__26001 = G__25998__25999;
        while(true) {
          goog.events.removeAll(node__26000);
          node__26000.innerHTML = value__25995;
          var temp__3974__auto____26002 = cljs.core.next.call(null, G__25998__26001);
          if(temp__3974__auto____26002) {
            var G__25998__26003 = temp__3974__auto____26002;
            var G__26004 = cljs.core.first.call(null, G__25998__26003);
            var G__26005 = G__25998__26003;
            node__26000 = G__26004;
            G__25998__26001 = G__26005;
            continue
          }else {
          }
          break
        }
      }else {
      }
    }catch(e25996) {
      if(cljs.core.instance_QMARK_.call(null, Error, e25996)) {
        var e__25997 = e25996;
        domina.replace_children_BANG_.call(null, content, value__25995)
      }else {
        if("\ufdd0'else") {
          throw e25996;
        }else {
        }
      }
    }
  }else {
    domina.replace_children_BANG_.call(null, content, html_string)
  }
  return content
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if(cljs.core.string_QMARK_.call(null, inner_content)) {
    return domina.set_inner_html_BANG_.call(null, content, inner_content)
  }else {
    return domina.replace_children_BANG_.call(null, content, inner_content)
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false)
  };
  var get_data__3 = function(node, key, bubble) {
    var m__26011 = domina.single_node.call(null, node).__domina_data;
    var value__26012 = cljs.core.truth_(m__26011) ? cljs.core._lookup.call(null, m__26011, key, null) : null;
    if(cljs.core.truth_(function() {
      var and__3822__auto____26013 = bubble;
      if(cljs.core.truth_(and__3822__auto____26013)) {
        return value__26012 == null
      }else {
        return and__3822__auto____26013
      }
    }())) {
      var temp__3974__auto____26014 = domina.single_node.call(null, node).parentNode;
      if(cljs.core.truth_(temp__3974__auto____26014)) {
        var parent__26015 = temp__3974__auto____26014;
        return get_data.call(null, parent__26015, key, true)
      }else {
        return null
      }
    }else {
      return value__26012
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_data.cljs$lang$arity$2 = get_data__2;
  get_data.cljs$lang$arity$3 = get_data__3;
  return get_data
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m__26021 = function() {
    var or__3824__auto____26020 = domina.single_node.call(null, node).__domina_data;
    if(cljs.core.truth_(or__3824__auto____26020)) {
      return or__3824__auto____26020
    }else {
      return cljs.core.ObjMap.EMPTY
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m__26021, key, value)
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents__26033 = domina.nodes.call(null, parent_content);
  var children__26034 = domina.nodes.call(null, child_content);
  var first_child__26042 = function() {
    var frag__26035 = document.createDocumentFragment();
    var G__26036__26037 = cljs.core.seq.call(null, children__26034);
    if(G__26036__26037) {
      var child__26038 = cljs.core.first.call(null, G__26036__26037);
      var G__26036__26039 = G__26036__26037;
      while(true) {
        frag__26035.appendChild(child__26038);
        var temp__3974__auto____26040 = cljs.core.next.call(null, G__26036__26039);
        if(temp__3974__auto____26040) {
          var G__26036__26041 = temp__3974__auto____26040;
          var G__26044 = cljs.core.first.call(null, G__26036__26041);
          var G__26045 = G__26036__26041;
          child__26038 = G__26044;
          G__26036__26039 = G__26045;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return frag__26035
  }();
  var other_children__26043 = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents__26033) - 1, function() {
    return first_child__26042.cloneNode(true)
  }));
  if(cljs.core.seq.call(null, parents__26033)) {
    f.call(null, cljs.core.first.call(null, parents__26033), first_child__26042);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__26016_SHARP_, p2__26017_SHARP_) {
      return f.call(null, p1__26016_SHARP_, p2__26017_SHARP_)
    }, cljs.core.rest.call(null, parents__26033), other_children__26043))
  }else {
    return null
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0)
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_item.cljs$lang$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$lang$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0)
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_array_ref.cljs$lang$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$lang$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if(cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl)
  }else {
    return domina.lazy_nl_via_array_ref.call(null, nl)
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3822__auto____26047 = obj;
  if(cljs.core.truth_(and__3822__auto____26047)) {
    return obj.length
  }else {
    return and__3822__auto____26047
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if(list_thing == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__26051__26052 = list_thing;
      if(G__26051__26052) {
        if(function() {
          var or__3824__auto____26053 = G__26051__26052.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____26053) {
            return or__3824__auto____26053
          }else {
            return G__26051__26052.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__26051__26052.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__26051__26052)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__26051__26052)
      }
    }()) {
      return cljs.core.seq.call(null, list_thing)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([list_thing], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if(content == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__26054__26055 = content;
      if(G__26054__26055) {
        if(function() {
          var or__3824__auto____26056 = G__26054__26055.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____26056) {
            return or__3824__auto____26056
          }else {
            return G__26054__26055.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__26054__26055.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__26054__26055)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__26054__26055)
      }
    }()) {
      return cljs.core.seq.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([content], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if(content == null) {
    return null
  }else {
    if(function() {
      var G__26057__26058 = content;
      if(G__26057__26058) {
        if(function() {
          var or__3824__auto____26059 = G__26057__26058.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____26059) {
            return or__3824__auto____26059
          }else {
            return G__26057__26058.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__26057__26058.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__26057__26058)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__26057__26058)
      }
    }()) {
      return cljs.core.first.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0)
      }else {
        if("\ufdd0'default") {
          return content
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)))
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s))
};
if(cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    return domina.lazy_nodelist.call(null, coll)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    return coll.item(n)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    if(coll.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, coll, n)
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    return coll.length
  }
}else {
}
;goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max__14439 = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max__14439, cljs.core.remove.call(null, function(p1__14437_SHARP_) {
    return max__14439 === p1__14437_SHARP_
  }, coll))
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var union__1 = function(s1) {
    return s1
  };
  var union__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2)
    }
  };
  var union__3 = function() {
    var G__14443__delegate = function(s1, s2, sets) {
      var bubbled_sets__14442 = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets__14442), cljs.core.rest.call(null, bubbled_sets__14442))
    };
    var G__14443 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14443__delegate.call(this, s1, s2, sets)
    };
    G__14443.cljs$lang$maxFixedArity = 2;
    G__14443.cljs$lang$applyTo = function(arglist__14444) {
      var s1 = cljs.core.first(arglist__14444);
      var s2 = cljs.core.first(cljs.core.next(arglist__14444));
      var sets = cljs.core.rest(cljs.core.next(arglist__14444));
      return G__14443__delegate(s1, s2, sets)
    };
    G__14443.cljs$lang$arity$variadic = G__14443__delegate;
    return G__14443
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$lang$arity$0 = union__0;
  union.cljs$lang$arity$1 = union__1;
  union.cljs$lang$arity$2 = union__2;
  union.cljs$lang$arity$variadic = union__3.cljs$lang$arity$variadic;
  return union
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1
  };
  var intersection__2 = function(s1, s2) {
    while(true) {
      if(cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__14447 = s2;
        var G__14448 = s1;
        s1 = G__14447;
        s2 = G__14448;
        continue
      }else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if(cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result
            }else {
              return cljs.core.disj.call(null, result, item)
            }
          }
        }(s1, s2), s1, s1)
      }
      break
    }
  };
  var intersection__3 = function() {
    var G__14449__delegate = function(s1, s2, sets) {
      var bubbled_sets__14446 = clojure.set.bubble_max_key.call(null, function(p1__14440_SHARP_) {
        return-cljs.core.count.call(null, p1__14440_SHARP_)
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets__14446), cljs.core.rest.call(null, bubbled_sets__14446))
    };
    var G__14449 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14449__delegate.call(this, s1, s2, sets)
    };
    G__14449.cljs$lang$maxFixedArity = 2;
    G__14449.cljs$lang$applyTo = function(arglist__14450) {
      var s1 = cljs.core.first(arglist__14450);
      var s2 = cljs.core.first(cljs.core.next(arglist__14450));
      var sets = cljs.core.rest(cljs.core.next(arglist__14450));
      return G__14449__delegate(s1, s2, sets)
    };
    G__14449.cljs$lang$arity$variadic = G__14449__delegate;
    return G__14449
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$lang$arity$1 = intersection__1;
  intersection.cljs$lang$arity$2 = intersection__2;
  intersection.cljs$lang$arity$variadic = intersection__3.cljs$lang$arity$variadic;
  return intersection
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1
  };
  var difference__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if(cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item)
        }else {
          return result
        }
      }, s1, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2)
    }
  };
  var difference__3 = function() {
    var G__14451__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2))
    };
    var G__14451 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14451__delegate.call(this, s1, s2, sets)
    };
    G__14451.cljs$lang$maxFixedArity = 2;
    G__14451.cljs$lang$applyTo = function(arglist__14452) {
      var s1 = cljs.core.first(arglist__14452);
      var s2 = cljs.core.first(cljs.core.next(arglist__14452));
      var sets = cljs.core.rest(cljs.core.next(arglist__14452));
      return G__14451__delegate(s1, s2, sets)
    };
    G__14451.cljs$lang$arity$variadic = G__14451__delegate;
    return G__14451
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$lang$arity$1 = difference__1;
  difference.cljs$lang$arity$2 = difference__2;
  difference.cljs$lang$arity$variadic = difference__3.cljs$lang$arity$variadic;
  return difference
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if(cljs.core.truth_(pred.call(null, k))) {
      return s
    }else {
      return cljs.core.disj.call(null, s, k)
    }
  }, xset, xset)
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__14453_SHARP_) {
    return cljs.core.select_keys.call(null, p1__14453_SHARP_, ks)
  }, xrel))
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__14461) {
    var vec__14462__14463 = p__14461;
    var old__14464 = cljs.core.nth.call(null, vec__14462__14463, 0, null);
    var new__14465 = cljs.core.nth.call(null, vec__14462__14463, 1, null);
    if(function() {
      var and__3822__auto____14466 = cljs.core.not_EQ_.call(null, old__14464, new__14465);
      if(and__3822__auto____14466) {
        return cljs.core.contains_QMARK_.call(null, m, old__14464)
      }else {
        return and__3822__auto____14466
      }
    }()) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, m, new__14465, cljs.core._lookup.call(null, m, old__14464, null)), old__14464)
    }else {
      return m
    }
  }, map, kmap)
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__14454_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__14454_SHARP_, kmap)
  }, xrel))
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik__14468 = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik__14468, cljs.core.conj.call(null, cljs.core._lookup.call(null, m, ik__14468, cljs.core.PersistentHashSet.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, xrel)
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m, p__14478) {
    var vec__14479__14480 = p__14478;
    var k__14481 = cljs.core.nth.call(null, vec__14479__14480, 0, null);
    var v__14482 = cljs.core.nth.call(null, vec__14479__14480, 1, null);
    return cljs.core.assoc.call(null, m, v__14482, k__14481)
  }, cljs.core.ObjMap.EMPTY, m)
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if(function() {
      var and__3822__auto____14499 = cljs.core.seq.call(null, xrel);
      if(and__3822__auto____14499) {
        return cljs.core.seq.call(null, yrel)
      }else {
        return and__3822__auto____14499
      }
    }()) {
      var ks__14501 = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__14500__14502 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel], true) : cljs.core.PersistentVector.fromArray([yrel, xrel], true);
      var r__14503 = cljs.core.nth.call(null, vec__14500__14502, 0, null);
      var s__14504 = cljs.core.nth.call(null, vec__14500__14502, 1, null);
      var idx__14505 = clojure.set.index.call(null, r__14503, ks__14501);
      return cljs.core.reduce.call(null, function(ret, x) {
        var found__14506 = idx__14505.call(null, cljs.core.select_keys.call(null, x, ks__14501));
        if(cljs.core.truth_(found__14506)) {
          return cljs.core.reduce.call(null, function(p1__14469_SHARP_, p2__14470_SHARP_) {
            return cljs.core.conj.call(null, p1__14469_SHARP_, cljs.core.merge.call(null, p2__14470_SHARP_, x))
          }, ret, found__14506)
        }else {
          return ret
        }
      }, cljs.core.PersistentHashSet.EMPTY, s__14504)
    }else {
      return cljs.core.PersistentHashSet.EMPTY
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__14507__14508 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel, clojure.set.map_invert.call(null, km)], true) : cljs.core.PersistentVector.fromArray([yrel, xrel, km], true);
    var r__14509 = cljs.core.nth.call(null, vec__14507__14508, 0, null);
    var s__14510 = cljs.core.nth.call(null, vec__14507__14508, 1, null);
    var k__14511 = cljs.core.nth.call(null, vec__14507__14508, 2, null);
    var idx__14512 = clojure.set.index.call(null, r__14509, cljs.core.vals.call(null, k__14511));
    return cljs.core.reduce.call(null, function(ret, x) {
      var found__14513 = idx__14512.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k__14511)), k__14511));
      if(cljs.core.truth_(found__14513)) {
        return cljs.core.reduce.call(null, function(p1__14471_SHARP_, p2__14472_SHARP_) {
          return cljs.core.conj.call(null, p1__14471_SHARP_, cljs.core.merge.call(null, p2__14472_SHARP_, x))
        }, ret, found__14513)
      }else {
        return ret
      }
    }, cljs.core.PersistentHashSet.EMPTY, s__14510)
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$2 = join__2;
  join.cljs$lang$arity$3 = join__3;
  return join
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  var and__3822__auto____14516 = cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2);
  if(and__3822__auto____14516) {
    return cljs.core.every_QMARK_.call(null, function(p1__14483_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set2, p1__14483_SHARP_)
    }, set1)
  }else {
    return and__3822__auto____14516
  }
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  var and__3822__auto____14518 = cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2);
  if(and__3822__auto____14518) {
    return cljs.core.every_QMARK_.call(null, function(p1__14514_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set1, p1__14514_SHARP_)
    }, set2)
  }else {
    return and__3822__auto____14518
  }
};
goog.provide("vcfvis.core");
goog.require("cljs.core");
goog.require("c2.util");
goog.require("dubstep.pubsub");
goog.require("reflex.core");
goog.require("clojure.set");
goog.require("domina");
goog.require("c2.util");
vcfvis.core._BANG_context = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
vcfvis.core._BANG_vcfs = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
vcfvis.core.check_new_vcfs_BANG_ = function check_new_vcfs_BANG_(new_vcfs) {
  if(cljs.core.seq.call(null, new_vcfs)) {
    cljs.core.reset_BANG_.call(null, vcfvis.core._BANG_vcfs, cljs.core.vec.call(null, cljs.core.filter.call(null, function(p1__96479_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, new_vcfs, (new cljs.core.Keyword("\ufdd0'file-url")).call(null, p1__96479_SHARP_))
    }, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs))));
    return clojure.set.difference.call(null, new_vcfs, cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.map.call(null, "\ufdd0'file-url", cljs.core.deref.call(null, vcfvis.core._BANG_vcfs))))
  }else {
    return cljs.core.reset_BANG_.call(null, vcfvis.core._BANG_vcfs, cljs.core.PersistentVector.EMPTY)
  }
};
vcfvis.core._BANG_available_files = function() {
  var co__6008__auto____96480 = new reflex.core.ComputedObservable(null, true, function() {
    return cljs.core._lookup.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_context), "\ufdd0'files", cljs.core.PersistentVector.EMPTY)
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6008__auto____96480);
  return co__6008__auto____96480
}();
vcfvis.core.intersection = function() {
  var intersection = null;
  var intersection__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var intersection__1 = function() {
    var G__96481__delegate = function(args) {
      return cljs.core.apply.call(null, clojure.set.intersection, args)
    };
    var G__96481 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__96481__delegate.call(this, args)
    };
    G__96481.cljs$lang$maxFixedArity = 0;
    G__96481.cljs$lang$applyTo = function(arglist__96482) {
      var args = cljs.core.seq(arglist__96482);
      return G__96481__delegate(args)
    };
    G__96481.cljs$lang$arity$variadic = G__96481__delegate;
    return G__96481
  }();
  intersection = function(var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 0:
        return intersection__0.call(this);
      default:
        return intersection__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  intersection.cljs$lang$maxFixedArity = 0;
  intersection.cljs$lang$applyTo = intersection__1.cljs$lang$applyTo;
  intersection.cljs$lang$arity$0 = intersection__0;
  intersection.cljs$lang$arity$variadic = intersection__1.cljs$lang$arity$variadic;
  return intersection
}();
vcfvis.core._BANG_shared_metrics = function() {
  var co__6008__auto____96483 = new reflex.core.ComputedObservable(null, true, function() {
    return cljs.core.reduce.call(null, vcfvis.core.intersection, cljs.core.map.call(null, "\ufdd0'available-metrics", cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)))
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6008__auto____96483);
  return co__6008__auto____96483
}();
vcfvis.core._BANG_metric = cljs.core.atom.call(null, null);
vcfvis.core.select_metric_BANG_ = function select_metric_BANG_(metric) {
  return cljs.core.reset_BANG_.call(null, vcfvis.core._BANG_metric, metric)
};
var co__6014__auto____96486 = function() {
  var co__6008__auto____96485 = new reflex.core.ComputedObservable(null, true, function() {
    var shared__96484 = cljs.core.deref.call(null, vcfvis.core._BANG_shared_metrics);
    if(cljs.core.seq.call(null, shared__96484)) {
      if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([cljs.core.deref.call(null, vcfvis.core._BANG_metric)]), shared__96484))) {
        return null
      }else {
        return vcfvis.core.select_metric_BANG_.call(null, cljs.core.first.call(null, shared__96484))
      }
    }else {
      return null
    }
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6008__auto____96485);
  return co__6008__auto____96485
}();
cljs.core.add_watch.call(null, co__6014__auto____96486, "\ufdd0'reflex-constraint", function() {
  var shared__96487 = cljs.core.deref.call(null, vcfvis.core._BANG_shared_metrics);
  if(cljs.core.seq.call(null, shared__96487)) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([cljs.core.deref.call(null, vcfvis.core._BANG_metric)]), shared__96487))) {
      return null
    }else {
      return vcfvis.core.select_metric_BANG_.call(null, cljs.core.first.call(null, shared__96487))
    }
  }else {
    return null
  }
});
co__6014__auto____96486;
vcfvis.core._BANG_filters = function() {
  var co__6008__auto____96490 = new reflex.core.ComputedObservable(null, true, function() {
    return cljs.core.reduce.call(null, function(filters, m) {
      var temp__3971__auto____96488 = cljs.core.deref.call(null, m.call(null, "\ufdd0'!filter-extent"));
      if(cljs.core.truth_(temp__3971__auto____96488)) {
        var extent__96489 = temp__3971__auto____96488;
        return cljs.core.assoc.call(null, filters, m.call(null, "\ufdd0'id"), extent__96489)
      }else {
        return filters
      }
    }, cljs.core.ObjMap.EMPTY, cljs.core.deref.call(null, vcfvis.core._BANG_shared_metrics))
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6008__auto____96490);
  return co__6008__auto____96490
}();
vcfvis.core._BANG_visible_metrics = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY, "\ufdd0'validator", function(ms) {
  if(cljs.core.contains_QMARK_.call(null, ms, cljs.core.deref.call(null, vcfvis.core._BANG_metric))) {
    throw new Error("Selected metric doesn't need a mini-histogram.");
  }else {
    return true
  }
});
var co__6014__auto____96493 = function() {
  var co__6008__auto____96492 = new reflex.core.ComputedObservable(null, true, function() {
    var m__96491 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
    if(cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_visible_metrics), m__96491)) {
      return cljs.core.swap_BANG_.call(null, vcfvis.core._BANG_visible_metrics, cljs.core.disj, m__96491)
    }else {
      return null
    }
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6008__auto____96492);
  return co__6008__auto____96492
}();
cljs.core.add_watch.call(null, co__6014__auto____96493, "\ufdd0'reflex-constraint", function() {
  var m__96494 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
  if(cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_visible_metrics), m__96494)) {
    return cljs.core.swap_BANG_.call(null, vcfvis.core._BANG_visible_metrics, cljs.core.disj, m__96494)
  }else {
    return null
  }
});
co__6014__auto____96493;
vcfvis.core.visible_metric_QMARK_ = function visible_metric_QMARK_(m) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_visible_metrics), m)
};
vcfvis.core.toggle_visible_metric_BANG_ = function toggle_visible_metric_BANG_(m) {
  return cljs.core.swap_BANG_.call(null, vcfvis.core._BANG_visible_metrics, cljs.core.truth_(vcfvis.core.visible_metric_QMARK_.call(null, m)) ? cljs.core.disj : cljs.core.conj, m)
};
vcfvis.core.update_metric_BANG_ = function update_metric_BANG_(m, extent) {
  var vec__96512__96513 = m.call(null, "\ufdd0'range");
  var min__96514 = cljs.core.nth.call(null, vec__96512__96513, 0, null);
  var max__96515 = cljs.core.nth.call(null, vec__96512__96513, 1, null);
  var extent__96516 = cljs.core.apply.call(null, cljs.core._, extent) === 0 ? null : cljs.core._EQ_.call(null, extent, cljs.core.PersistentVector.fromArray([min__96514, max__96515], true)) ? cljs.core.PersistentVector.fromArray([-Infinity, Infinity], true) : cljs.core._EQ_.call(null, cljs.core.first.call(null, extent), min__96514) ? cljs.core.PersistentVector.fromArray([-Infinity, cljs.core.second.call(null, extent)], true) : cljs.core._EQ_.call(null, cljs.core.second.call(null, extent), max__96515) ? 
  cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, extent), Infinity], true) : "\ufdd0'else" ? extent : null;
  var G__96517__96518 = cljs.core.seq.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs));
  if(G__96517__96518) {
    var vcf__96519 = cljs.core.first.call(null, G__96517__96518);
    var G__96517__96520 = G__96517__96518;
    while(true) {
      cljs.core.get_in.call(null, vcf__96519, cljs.core.PersistentVector.fromArray(["\ufdd0'cf", m.call(null, "\ufdd0'id"), "\ufdd0'dimension"], true)).filter(c2.util.clj__GT_js.call(null, extent__96516));
      var temp__3974__auto____96521 = cljs.core.next.call(null, G__96517__96520);
      if(temp__3974__auto____96521) {
        var G__96517__96522 = temp__3974__auto____96521;
        var G__96529 = cljs.core.first.call(null, G__96517__96522);
        var G__96530 = G__96517__96522;
        vcf__96519 = G__96529;
        G__96517__96520 = G__96530;
        continue
      }else {
      }
      break
    }
  }else {
  }
  cljs.core.reset_BANG_.call(null, m.call(null, "\ufdd0'!filter-extent"), extent__96516);
  var G__96523__96524 = cljs.core.seq.call(null, cljs.core.deref.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_));
  if(G__96523__96524) {
    var s__8306__auto____96525 = cljs.core.first.call(null, G__96523__96524);
    var G__96523__96526 = G__96523__96524;
    while(true) {
      s__8306__auto____96525.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'filter-updated"], {"\ufdd0'filter-updated":m}));
      var temp__3974__auto____96527 = cljs.core.next.call(null, G__96523__96526);
      if(temp__3974__auto____96527) {
        var G__96523__96528 = temp__3974__auto____96527;
        var G__96531 = cljs.core.first.call(null, G__96523__96528);
        var G__96532 = G__96523__96528;
        s__8306__auto____96525 = G__96531;
        G__96523__96526 = G__96532;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.swap_BANG_.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_, cljs.core.conj, function(m__8312__auto__) {
  try {
    if(function() {
      var G__96538__96539 = m__8312__auto__;
      if(G__96538__96539) {
        if(function() {
          var or__3824__auto____96540 = G__96538__96539.cljs$lang$protocol_mask$partition0$ & 256;
          if(or__3824__auto____96540) {
            return or__3824__auto____96540
          }else {
            return G__96538__96539.cljs$core$ILookup$
          }
        }()) {
          return true
        }else {
          if(!G__96538__96539.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__96538__96539)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__96538__96539)
      }
    }()) {
      var extent__96542 = function() {
        var val__6896__auto____96541 = cljs.core._lookup.call(null, m__8312__auto__, "\ufdd0'extent", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6896__auto____96541, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6896__auto____96541
        }
      }();
      var metric__96544 = function() {
        var val__6896__auto____96543 = cljs.core._lookup.call(null, m__8312__auto__, "\ufdd0'metric-brushed", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6896__auto____96543, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6896__auto____96543
        }
      }();
      return vcfvis.core.update_metric_BANG_.call(null, metric__96544, extent__96542)
    }else {
      if("\ufdd0'else") {
        throw 0;
      }else {
        return null
      }
    }
  }catch(e__7329__auto__) {
    if(e__7329__auto__ === 0) {
      var G__96533__96537 = m__8312__auto__;
      return null
    }else {
      throw e__7329__auto__;
    }
  }
});
goog.provide("vcfvis.ui");
goog.require("cljs.core");
goog.require("c2.dom");
goog.require("vcfvis.core");
var $dd__10394 = c2.dom.select.call(null, "#user-dropdown");
var co__6014__auto____10396 = function() {
  var co__6008__auto____10395 = new reflex.core.ComputedObservable(null, true, function() {
    return c2.dom.text.call(null, $dd__10394, cljs.core._lookup.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_context), "\ufdd0'username", "USER"))
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6008__auto____10395);
  return co__6008__auto____10395
}();
cljs.core.add_watch.call(null, co__6014__auto____10396, "\ufdd0'reflex-constraint", function() {
  return c2.dom.text.call(null, $dd__10394, cljs.core._lookup.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_context), "\ufdd0'username", "USER"))
});
co__6014__auto____10396;
vcfvis.ui.hist_margin = 20;
vcfvis.ui.inter_hist_margin = 20;
vcfvis.ui.axis_height = parseFloat(c2.dom.style.call(null, "#hist-axis", "\ufdd0'height"));
vcfvis.ui.hist_height = parseFloat(c2.dom.style.call(null, "#histograms", "\ufdd0'height"));
vcfvis.ui.hist_width = parseFloat(c2.dom.style.call(null, "#histograms", "\ufdd0'width")) - 2 * vcfvis.ui.hist_margin;
vcfvis.ui.hist_bins = 100;
goog.provide("c2.maths");
goog.require("cljs.core");
c2.maths.Pi = Math.PI;
c2.maths.Tau = 2 * c2.maths.Pi;
c2.maths.e = Math.E;
c2.maths.radians_per_degree = c2.maths.Pi / 180;
c2.maths.rad = function rad(x) {
  return c2.maths.radians_per_degree * x
};
c2.maths.sin = function sin(x) {
  return Math.sin.call(null, x)
};
c2.maths.asin = function asin(x) {
  return Math.asin.call(null, x)
};
c2.maths.cos = function cos(x) {
  return Math.cos.call(null, x)
};
c2.maths.acos = function acos(x) {
  return Math.acos.call(null, x)
};
c2.maths.tan = function tan(x) {
  return Math.tan.call(null, x)
};
c2.maths.atan = function atan(x) {
  return Math.atan.call(null, x)
};
c2.maths.expt = function() {
  var expt = null;
  var expt__1 = function(x) {
    return Math.exp.call(null, x)
  };
  var expt__2 = function(x, y) {
    return Math.pow.call(null, x, y)
  };
  expt = function(x, y) {
    switch(arguments.length) {
      case 1:
        return expt__1.call(this, x);
      case 2:
        return expt__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  expt.cljs$lang$arity$1 = expt__1;
  expt.cljs$lang$arity$2 = expt__2;
  return expt
}();
c2.maths.sq = function sq(x) {
  return c2.maths.expt.call(null, x, 2)
};
c2.maths.sqrt = function sqrt(x) {
  return Math.sqrt.call(null, x)
};
c2.maths.floor = function floor(x) {
  return Math.floor.call(null, x)
};
c2.maths.ceil = function ceil(x) {
  return Math.ceil.call(null, x)
};
c2.maths.abs = function abs(x) {
  return Math.abs.call(null, x)
};
c2.maths.log = function() {
  var log = null;
  var log__1 = function(x) {
    return Math.log.call(null, x)
  };
  var log__2 = function(base, x) {
    return Math.log.call(null, x) / Math.log.call(null, base)
  };
  log = function(base, x) {
    switch(arguments.length) {
      case 1:
        return log__1.call(this, base);
      case 2:
        return log__2.call(this, base, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  log.cljs$lang$arity$1 = log__1;
  log.cljs$lang$arity$2 = log__2;
  return log
}();
c2.maths.log10 = function log10(x) {
  return Math.log(x) / Math.LN10
};
c2.maths.extent = function extent(xs) {
  return cljs.core.PersistentVector.fromArray([cljs.core.apply.call(null, cljs.core.min, xs), cljs.core.apply.call(null, cljs.core.max, xs)], true)
};
c2.maths.mean = function mean(xs) {
  return cljs.core.reduce.call(null, cljs.core._PLUS_, xs) / cljs.core.count.call(null, xs)
};
c2.maths.median = function median(xs) {
  var sorted__16513 = cljs.core.sort.call(null, xs);
  var n__16514 = cljs.core.count.call(null, xs);
  if(cljs.core._EQ_.call(null, n__16514, 1)) {
    return cljs.core.first.call(null, sorted__16513)
  }else {
    if(cljs.core.odd_QMARK_.call(null, n__16514)) {
      return cljs.core.nth.call(null, sorted__16513, (n__16514 + 1) / 2)
    }else {
      if("\ufdd0'else") {
        var mid__16515 = n__16514 / 2;
        return c2.maths.mean.call(null, cljs.core.PersistentVector.fromArray([cljs.core.nth.call(null, sorted__16513, c2.maths.floor.call(null, mid__16515)), cljs.core.nth.call(null, sorted__16513, c2.maths.ceil.call(null, mid__16515))], true))
      }else {
        return null
      }
    }
  }
};
c2.maths.irange = function() {
  var irange = null;
  var irange__1 = function(start) {
    return cljs.core.range.call(null, start)
  };
  var irange__2 = function(start, end) {
    return cljs.core.concat.call(null, cljs.core.range.call(null, start, end), cljs.core.PersistentVector.fromArray([end], true))
  };
  var irange__3 = function(start, end, step) {
    var r__16517 = cljs.core.range.call(null, start, end, step);
    if(cljs.core.first.call(null, r__16517) % step === end % step) {
      return cljs.core.concat.call(null, r__16517, cljs.core.PersistentVector.fromArray([end], true))
    }else {
      return r__16517
    }
  };
  irange = function(start, end, step) {
    switch(arguments.length) {
      case 1:
        return irange__1.call(this, start);
      case 2:
        return irange__2.call(this, start, end);
      case 3:
        return irange__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  irange.cljs$lang$arity$1 = irange__1;
  irange.cljs$lang$arity$2 = irange__2;
  irange.cljs$lang$arity$3 = irange__3;
  return irange
}();
c2.maths.within_QMARK_ = function within_QMARK_(x, p__16518) {
  var vec__16524__16525 = p__16518;
  var bottom__16526 = cljs.core.nth.call(null, vec__16524__16525, 0, null);
  var top__16527 = cljs.core.nth.call(null, vec__16524__16525, 1, null);
  var and__3822__auto____16528 = bottom__16526 <= x;
  if(and__3822__auto____16528) {
    return x <= top__16527
  }else {
    return and__3822__auto____16528
  }
};
c2.maths.add = function() {
  var add__delegate = function(args) {
    return cljs.core.reduce.call(null, function(A, B) {
      if(function() {
        var and__3822__auto____16533 = cljs.core.number_QMARK_.call(null, A);
        if(and__3822__auto____16533) {
          return cljs.core.number_QMARK_.call(null, B)
        }else {
          return and__3822__auto____16533
        }
      }()) {
        return A + B
      }else {
        if(function() {
          var and__3822__auto____16534 = cljs.core.coll_QMARK_.call(null, A);
          if(and__3822__auto____16534) {
            return cljs.core.coll_QMARK_.call(null, B)
          }else {
            return and__3822__auto____16534
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._PLUS_, A, B)
        }else {
          if(function() {
            var and__3822__auto____16535 = cljs.core.number_QMARK_.call(null, A);
            if(and__3822__auto____16535) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____16535
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._PLUS_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
          }else {
            if(function() {
              var and__3822__auto____16536 = cljs.core.coll_QMARK_.call(null, A);
              if(and__3822__auto____16536) {
                return cljs.core.number_QMARK_.call(null, B)
              }else {
                return and__3822__auto____16536
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._PLUS_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
            }else {
              return null
            }
          }
        }
      }
    }, args)
  };
  var add = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return add__delegate.call(this, args)
  };
  add.cljs$lang$maxFixedArity = 0;
  add.cljs$lang$applyTo = function(arglist__16537) {
    var args = cljs.core.seq(arglist__16537);
    return add__delegate(args)
  };
  add.cljs$lang$arity$variadic = add__delegate;
  return add
}();
c2.maths.sub = function() {
  var sub__delegate = function(args) {
    if(cljs.core._EQ_.call(null, cljs.core.count.call(null, args), 1)) {
      if(function() {
        var and__3822__auto____16546 = cljs.core.number_QMARK_.call(null, 0);
        if(and__3822__auto____16546) {
          return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
        }else {
          return and__3822__auto____16546
        }
      }()) {
        return 0 - cljs.core.first.call(null, args)
      }else {
        if(function() {
          var and__3822__auto____16547 = cljs.core.coll_QMARK_.call(null, 0);
          if(and__3822__auto____16547) {
            return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
          }else {
            return and__3822__auto____16547
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._, 0, cljs.core.first.call(null, args))
        }else {
          if(function() {
            var and__3822__auto____16548 = cljs.core.number_QMARK_.call(null, 0);
            if(and__3822__auto____16548) {
              return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
            }else {
              return and__3822__auto____16548
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._, cljs.core.replicate.call(null, cljs.core.count.call(null, cljs.core.first.call(null, args)), 0), cljs.core.first.call(null, args))
          }else {
            if(function() {
              var and__3822__auto____16549 = cljs.core.coll_QMARK_.call(null, 0);
              if(and__3822__auto____16549) {
                return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
              }else {
                return and__3822__auto____16549
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._, 0, cljs.core.replicate.call(null, cljs.core.count.call(null, 0), cljs.core.first.call(null, args)))
            }else {
              return null
            }
          }
        }
      }
    }else {
      return cljs.core.reduce.call(null, function(A, B) {
        if(function() {
          var and__3822__auto____16550 = cljs.core.number_QMARK_.call(null, A);
          if(and__3822__auto____16550) {
            return cljs.core.number_QMARK_.call(null, B)
          }else {
            return and__3822__auto____16550
          }
        }()) {
          return A - B
        }else {
          if(function() {
            var and__3822__auto____16551 = cljs.core.coll_QMARK_.call(null, A);
            if(and__3822__auto____16551) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____16551
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._, A, B)
          }else {
            if(function() {
              var and__3822__auto____16552 = cljs.core.number_QMARK_.call(null, A);
              if(and__3822__auto____16552) {
                return cljs.core.coll_QMARK_.call(null, B)
              }else {
                return and__3822__auto____16552
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
            }else {
              if(function() {
                var and__3822__auto____16553 = cljs.core.coll_QMARK_.call(null, A);
                if(and__3822__auto____16553) {
                  return cljs.core.number_QMARK_.call(null, B)
                }else {
                  return and__3822__auto____16553
                }
              }()) {
                return cljs.core.map.call(null, cljs.core._, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
              }else {
                return null
              }
            }
          }
        }
      }, args)
    }
  };
  var sub = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sub__delegate.call(this, args)
  };
  sub.cljs$lang$maxFixedArity = 0;
  sub.cljs$lang$applyTo = function(arglist__16554) {
    var args = cljs.core.seq(arglist__16554);
    return sub__delegate(args)
  };
  sub.cljs$lang$arity$variadic = sub__delegate;
  return sub
}();
c2.maths.mul = function() {
  var mul__delegate = function(args) {
    return cljs.core.reduce.call(null, function(A, B) {
      if(function() {
        var and__3822__auto____16559 = cljs.core.number_QMARK_.call(null, A);
        if(and__3822__auto____16559) {
          return cljs.core.number_QMARK_.call(null, B)
        }else {
          return and__3822__auto____16559
        }
      }()) {
        return A * B
      }else {
        if(function() {
          var and__3822__auto____16560 = cljs.core.coll_QMARK_.call(null, A);
          if(and__3822__auto____16560) {
            return cljs.core.coll_QMARK_.call(null, B)
          }else {
            return and__3822__auto____16560
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._STAR_, A, B)
        }else {
          if(function() {
            var and__3822__auto____16561 = cljs.core.number_QMARK_.call(null, A);
            if(and__3822__auto____16561) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____16561
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._STAR_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
          }else {
            if(function() {
              var and__3822__auto____16562 = cljs.core.coll_QMARK_.call(null, A);
              if(and__3822__auto____16562) {
                return cljs.core.number_QMARK_.call(null, B)
              }else {
                return and__3822__auto____16562
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._STAR_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
            }else {
              return null
            }
          }
        }
      }
    }, args)
  };
  var mul = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return mul__delegate.call(this, args)
  };
  mul.cljs$lang$maxFixedArity = 0;
  mul.cljs$lang$applyTo = function(arglist__16563) {
    var args = cljs.core.seq(arglist__16563);
    return mul__delegate(args)
  };
  mul.cljs$lang$arity$variadic = mul__delegate;
  return mul
}();
c2.maths.div = function() {
  var div__delegate = function(args) {
    if(cljs.core._EQ_.call(null, cljs.core.count.call(null, args), 1)) {
      if(function() {
        var and__3822__auto____16572 = cljs.core.number_QMARK_.call(null, 1);
        if(and__3822__auto____16572) {
          return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
        }else {
          return and__3822__auto____16572
        }
      }()) {
        return 1 / cljs.core.first.call(null, args)
      }else {
        if(function() {
          var and__3822__auto____16573 = cljs.core.coll_QMARK_.call(null, 1);
          if(and__3822__auto____16573) {
            return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
          }else {
            return and__3822__auto____16573
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._SLASH_, 1, cljs.core.first.call(null, args))
        }else {
          if(function() {
            var and__3822__auto____16574 = cljs.core.number_QMARK_.call(null, 1);
            if(and__3822__auto____16574) {
              return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
            }else {
              return and__3822__auto____16574
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._SLASH_, cljs.core.replicate.call(null, cljs.core.count.call(null, cljs.core.first.call(null, args)), 1), cljs.core.first.call(null, args))
          }else {
            if(function() {
              var and__3822__auto____16575 = cljs.core.coll_QMARK_.call(null, 1);
              if(and__3822__auto____16575) {
                return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
              }else {
                return and__3822__auto____16575
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._SLASH_, 1, cljs.core.replicate.call(null, cljs.core.count.call(null, 1), cljs.core.first.call(null, args)))
            }else {
              return null
            }
          }
        }
      }
    }else {
      return cljs.core.reduce.call(null, function(A, B) {
        if(function() {
          var and__3822__auto____16576 = cljs.core.number_QMARK_.call(null, A);
          if(and__3822__auto____16576) {
            return cljs.core.number_QMARK_.call(null, B)
          }else {
            return and__3822__auto____16576
          }
        }()) {
          return A / B
        }else {
          if(function() {
            var and__3822__auto____16577 = cljs.core.coll_QMARK_.call(null, A);
            if(and__3822__auto____16577) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____16577
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._SLASH_, A, B)
          }else {
            if(function() {
              var and__3822__auto____16578 = cljs.core.number_QMARK_.call(null, A);
              if(and__3822__auto____16578) {
                return cljs.core.coll_QMARK_.call(null, B)
              }else {
                return and__3822__auto____16578
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._SLASH_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
            }else {
              if(function() {
                var and__3822__auto____16579 = cljs.core.coll_QMARK_.call(null, A);
                if(and__3822__auto____16579) {
                  return cljs.core.number_QMARK_.call(null, B)
                }else {
                  return and__3822__auto____16579
                }
              }()) {
                return cljs.core.map.call(null, cljs.core._SLASH_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
              }else {
                return null
              }
            }
          }
        }
      }, args)
    }
  };
  var div = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return div__delegate.call(this, args)
  };
  div.cljs$lang$maxFixedArity = 0;
  div.cljs$lang$applyTo = function(arglist__16580) {
    var args = cljs.core.seq(arglist__16580);
    return div__delegate(args)
  };
  div.cljs$lang$arity$variadic = div__delegate;
  return div
}();
c2.maths.quantile = function() {
  var quantile__delegate = function(data, p__16581) {
    var map__16603__16604 = p__16581;
    var map__16603__16605 = cljs.core.seq_QMARK_.call(null, map__16603__16604) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16603__16604) : map__16603__16604;
    var probs__16606 = cljs.core._lookup.call(null, map__16603__16605, "\ufdd0'probs", cljs.core.PersistentVector.fromArray([0, 0.25, 0.5, 0.75, 1], true));
    var xs__16607 = cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.sort.call(null, data));
    var n_1__16608 = cljs.core.count.call(null, xs__16607) - 1;
    var iter__2363__auto____16623 = function iter__16609(s__16610) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__16610__16617 = s__16610;
        while(true) {
          if(cljs.core.seq.call(null, s__16610__16617)) {
            var q__16618 = cljs.core.first.call(null, s__16610__16617);
            return cljs.core.cons.call(null, function() {
              var index__16619 = q__16618 * n_1__16608 + 1;
              var lo__16620 = cljs.core.int$.call(null, c2.maths.floor.call(null, index__16619));
              var h__16621 = index__16619 - lo__16620;
              var a__16622 = xs__16607.call(null, lo__16620 - 1);
              if(cljs.core._EQ_.call(null, h__16621, 0)) {
                return a__16622
              }else {
                return a__16622 + h__16621 * (xs__16607.call(null, lo__16620) - a__16622)
              }
            }(), iter__16609.call(null, cljs.core.rest.call(null, s__16610__16617)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____16623.call(null, probs__16606)
  };
  var quantile = function(data, var_args) {
    var p__16581 = null;
    if(goog.isDef(var_args)) {
      p__16581 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return quantile__delegate.call(this, data, p__16581)
  };
  quantile.cljs$lang$maxFixedArity = 1;
  quantile.cljs$lang$applyTo = function(arglist__16624) {
    var data = cljs.core.first(arglist__16624);
    var p__16581 = cljs.core.rest(arglist__16624);
    return quantile__delegate(data, p__16581)
  };
  quantile.cljs$lang$arity$variadic = quantile__delegate;
  return quantile
}();
goog.provide("c2.scale");
goog.require("cljs.core");
goog.require("c2.maths");
goog.require("c2.maths");
goog.require("c2.maths");
c2.scale.IInvertable = {};
c2.scale.invert = function invert(scale) {
  if(function() {
    var and__3822__auto____14523 = scale;
    if(and__3822__auto____14523) {
      return scale.c2$scale$IInvertable$invert$arity$1
    }else {
      return and__3822__auto____14523
    }
  }()) {
    return scale.c2$scale$IInvertable$invert$arity$1(scale)
  }else {
    var x__2264__auto____14524 = scale == null ? null : scale;
    return function() {
      var or__3824__auto____14525 = c2.scale.invert[goog.typeOf(x__2264__auto____14524)];
      if(or__3824__auto____14525) {
        return or__3824__auto____14525
      }else {
        var or__3824__auto____14526 = c2.scale.invert["_"];
        if(or__3824__auto____14526) {
          return or__3824__auto____14526
        }else {
          throw cljs.core.missing_protocol.call(null, "IInvertable.invert", scale);
        }
      }
    }().call(null, scale)
  }
};
c2.scale._linear = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054859;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
c2.scale._linear.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__14532 = this;
  var h__2093__auto____14533 = this__14532.__hash;
  if(!(h__2093__auto____14533 == null)) {
    return h__2093__auto____14533
  }else {
    var h__2093__auto____14534 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__14532.__hash = h__2093__auto____14534;
    return h__2093__auto____14534
  }
};
c2.scale._linear.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__14535 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
c2.scale._linear.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k14528, else__2227__auto__) {
  var this__14536 = this;
  if(k14528 === "\ufdd0'domain") {
    return this__14536.domain
  }else {
    if(k14528 === "\ufdd0'range") {
      return this__14536.range
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__14536.__extmap, k14528, else__2227__auto__)
      }else {
        return null
      }
    }
  }
};
c2.scale._linear.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__14527) {
  var this__14537 = this;
  var pred__14538__14541 = cljs.core.identical_QMARK_;
  var expr__14539__14542 = k__2232__auto__;
  if(pred__14538__14541.call(null, "\ufdd0'domain", expr__14539__14542)) {
    return new c2.scale._linear(G__14527, this__14537.range, this__14537.__meta, this__14537.__extmap, null)
  }else {
    if(pred__14538__14541.call(null, "\ufdd0'range", expr__14539__14542)) {
      return new c2.scale._linear(this__14537.domain, G__14527, this__14537.__meta, this__14537.__extmap, null)
    }else {
      return new c2.scale._linear(this__14537.domain, this__14537.range, this__14537.__meta, cljs.core.assoc.call(null, this__14537.__extmap, k__2232__auto__, G__14527), null)
    }
  }
};
c2.scale._linear.prototype.call = function(this_sym14543, x) {
  var this__14544 = this;
  var this_sym14543__14545 = this;
  var ___14546 = this_sym14543__14545;
  var domain_length__14547 = cljs.core.last.call(null, this__14544.domain) - cljs.core.first.call(null, this__14544.domain);
  var range_length__14548 = cljs.core.last.call(null, this__14544.range) - cljs.core.first.call(null, this__14544.range);
  return cljs.core.first.call(null, this__14544.range) + range_length__14548 * ((x - cljs.core.first.call(null, this__14544.domain)) / domain_length__14547)
};
c2.scale._linear.prototype.apply = function(this_sym14530, args14531) {
  var this__14549 = this;
  return this_sym14530.call.apply(this_sym14530, [this_sym14530].concat(args14531.slice()))
};
c2.scale._linear.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__14550 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
c2.scale._linear.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__14551 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__14551.domain), cljs.core.vector.call(null, "\ufdd0'range", this__14551.range)], true), this__14551.__extmap))
};
c2.scale._linear.prototype.c2$scale$IInvertable$ = true;
c2.scale._linear.prototype.c2$scale$IInvertable$invert$arity$1 = function(this$) {
  var this__14552 = this;
  return cljs.core.assoc.call(null, this$, "\ufdd0'domain", this__14552.range, "\ufdd0'range", this__14552.domain)
};
c2.scale._linear.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__14553 = this;
  var pr_pair__2240__auto____14554 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____14554, [cljs.core.str("#"), cljs.core.str("_linear"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__14553.domain), cljs.core.vector.call(null, "\ufdd0'range", this__14553.range)], true), this__14553.__extmap))
};
c2.scale._linear.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__14555 = this;
  return 2 + cljs.core.count.call(null, this__14555.__extmap)
};
c2.scale._linear.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__14556 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____14557 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____14557)) {
      var and__3822__auto____14558 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____14558) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____14558
      }
    }else {
      return and__3822__auto____14557
    }
  }())) {
    return true
  }else {
    return false
  }
};
c2.scale._linear.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__14527) {
  var this__14559 = this;
  return new c2.scale._linear(this__14559.domain, this__14559.range, G__14527, this__14559.__extmap, this__14559.__hash)
};
c2.scale._linear.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__14560 = this;
  return this__14560.__meta
};
c2.scale._linear.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__14561 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'domain", "\ufdd0'range"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__14561.__meta), k__2234__auto__)
  }else {
    return new c2.scale._linear(this__14561.domain, this__14561.range, this__14561.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__14561.__extmap, k__2234__auto__)), null)
  }
};
c2.scale._linear.cljs$lang$type = true;
c2.scale._linear.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "c2.scale/_linear")
};
c2.scale.__GT__linear = function __GT__linear(domain, range) {
  return new c2.scale._linear(domain, range)
};
c2.scale.map__GT__linear = function map__GT__linear(G__14529) {
  return new c2.scale._linear((new cljs.core.Keyword("\ufdd0'domain")).call(null, G__14529), (new cljs.core.Keyword("\ufdd0'range")).call(null, G__14529), null, cljs.core.dissoc.call(null, G__14529, "\ufdd0'domain", "\ufdd0'range"))
};
c2.scale._linear;
c2.scale.linear = function() {
  var linear__delegate = function(kwargs) {
    return c2.scale.map__GT__linear.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'domain", "\ufdd0'range"], {"\ufdd0'domain":cljs.core.PersistentVector.fromArray([0, 1], true), "\ufdd0'range":cljs.core.PersistentVector.fromArray([0, 1], true)}), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)))
  };
  var linear = function(var_args) {
    var kwargs = null;
    if(goog.isDef(var_args)) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return linear__delegate.call(this, kwargs)
  };
  linear.cljs$lang$maxFixedArity = 0;
  linear.cljs$lang$applyTo = function(arglist__14562) {
    var kwargs = cljs.core.seq(arglist__14562);
    return linear__delegate(kwargs)
  };
  linear.cljs$lang$arity$variadic = linear__delegate;
  return linear
}();
c2.scale._power = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054859;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
c2.scale._power.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__14568 = this;
  var h__2093__auto____14569 = this__14568.__hash;
  if(!(h__2093__auto____14569 == null)) {
    return h__2093__auto____14569
  }else {
    var h__2093__auto____14570 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__14568.__hash = h__2093__auto____14570;
    return h__2093__auto____14570
  }
};
c2.scale._power.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__14571 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
c2.scale._power.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k14564, else__2227__auto__) {
  var this__14572 = this;
  if(k14564 === "\ufdd0'domain") {
    return this__14572.domain
  }else {
    if(k14564 === "\ufdd0'range") {
      return this__14572.range
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__14572.__extmap, k14564, else__2227__auto__)
      }else {
        return null
      }
    }
  }
};
c2.scale._power.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__14563) {
  var this__14573 = this;
  var pred__14574__14577 = cljs.core.identical_QMARK_;
  var expr__14575__14578 = k__2232__auto__;
  if(pred__14574__14577.call(null, "\ufdd0'domain", expr__14575__14578)) {
    return new c2.scale._power(G__14563, this__14573.range, this__14573.__meta, this__14573.__extmap, null)
  }else {
    if(pred__14574__14577.call(null, "\ufdd0'range", expr__14575__14578)) {
      return new c2.scale._power(this__14573.domain, G__14563, this__14573.__meta, this__14573.__extmap, null)
    }else {
      return new c2.scale._power(this__14573.domain, this__14573.range, this__14573.__meta, cljs.core.assoc.call(null, this__14573.__extmap, k__2232__auto__, G__14563), null)
    }
  }
};
c2.scale._power.prototype.call = function(this_sym14579, x) {
  var this__14580 = this;
  var this_sym14579__14581 = this;
  var ___14582 = this_sym14579__14581;
  return cljs.core.comp.call(null, c2.scale.linear.call(null, "\ufdd0'domain", cljs.core.map.call(null, c2.maths.expt, this__14580.domain), "\ufdd0'range", this__14580.range), c2.maths.expt).call(null, x)
};
c2.scale._power.prototype.apply = function(this_sym14566, args14567) {
  var this__14583 = this;
  return this_sym14566.call.apply(this_sym14566, [this_sym14566].concat(args14567.slice()))
};
c2.scale._power.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__14584 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
c2.scale._power.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__14585 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__14585.domain), cljs.core.vector.call(null, "\ufdd0'range", this__14585.range)], true), this__14585.__extmap))
};
c2.scale._power.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__14586 = this;
  var pr_pair__2240__auto____14587 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____14587, [cljs.core.str("#"), cljs.core.str("_power"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__14586.domain), cljs.core.vector.call(null, "\ufdd0'range", this__14586.range)], true), this__14586.__extmap))
};
c2.scale._power.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__14588 = this;
  return 2 + cljs.core.count.call(null, this__14588.__extmap)
};
c2.scale._power.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__14589 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____14590 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____14590)) {
      var and__3822__auto____14591 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____14591) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____14591
      }
    }else {
      return and__3822__auto____14590
    }
  }())) {
    return true
  }else {
    return false
  }
};
c2.scale._power.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__14563) {
  var this__14592 = this;
  return new c2.scale._power(this__14592.domain, this__14592.range, G__14563, this__14592.__extmap, this__14592.__hash)
};
c2.scale._power.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__14593 = this;
  return this__14593.__meta
};
c2.scale._power.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__14594 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'domain", "\ufdd0'range"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__14594.__meta), k__2234__auto__)
  }else {
    return new c2.scale._power(this__14594.domain, this__14594.range, this__14594.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__14594.__extmap, k__2234__auto__)), null)
  }
};
c2.scale._power.cljs$lang$type = true;
c2.scale._power.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "c2.scale/_power")
};
c2.scale.__GT__power = function __GT__power(domain, range) {
  return new c2.scale._power(domain, range)
};
c2.scale.map__GT__power = function map__GT__power(G__14565) {
  return new c2.scale._power((new cljs.core.Keyword("\ufdd0'domain")).call(null, G__14565), (new cljs.core.Keyword("\ufdd0'range")).call(null, G__14565), null, cljs.core.dissoc.call(null, G__14565, "\ufdd0'domain", "\ufdd0'range"))
};
c2.scale._power;
c2.scale.power = function() {
  var power__delegate = function(kwargs) {
    return c2.scale.map__GT__power.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'domain", "\ufdd0'range"], {"\ufdd0'domain":cljs.core.PersistentVector.fromArray([0, 1], true), "\ufdd0'range":cljs.core.PersistentVector.fromArray([0, 1], true)}), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)))
  };
  var power = function(var_args) {
    var kwargs = null;
    if(goog.isDef(var_args)) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return power__delegate.call(this, kwargs)
  };
  power.cljs$lang$maxFixedArity = 0;
  power.cljs$lang$applyTo = function(arglist__14595) {
    var kwargs = cljs.core.seq(arglist__14595);
    return power__delegate(kwargs)
  };
  power.cljs$lang$arity$variadic = power__delegate;
  return power
}();
c2.scale._log = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054859;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
c2.scale._log.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__14601 = this;
  var h__2093__auto____14602 = this__14601.__hash;
  if(!(h__2093__auto____14602 == null)) {
    return h__2093__auto____14602
  }else {
    var h__2093__auto____14603 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__14601.__hash = h__2093__auto____14603;
    return h__2093__auto____14603
  }
};
c2.scale._log.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__14604 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
c2.scale._log.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k14597, else__2227__auto__) {
  var this__14605 = this;
  if(k14597 === "\ufdd0'domain") {
    return this__14605.domain
  }else {
    if(k14597 === "\ufdd0'range") {
      return this__14605.range
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__14605.__extmap, k14597, else__2227__auto__)
      }else {
        return null
      }
    }
  }
};
c2.scale._log.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__14596) {
  var this__14606 = this;
  var pred__14607__14610 = cljs.core.identical_QMARK_;
  var expr__14608__14611 = k__2232__auto__;
  if(pred__14607__14610.call(null, "\ufdd0'domain", expr__14608__14611)) {
    return new c2.scale._log(G__14596, this__14606.range, this__14606.__meta, this__14606.__extmap, null)
  }else {
    if(pred__14607__14610.call(null, "\ufdd0'range", expr__14608__14611)) {
      return new c2.scale._log(this__14606.domain, G__14596, this__14606.__meta, this__14606.__extmap, null)
    }else {
      return new c2.scale._log(this__14606.domain, this__14606.range, this__14606.__meta, cljs.core.assoc.call(null, this__14606.__extmap, k__2232__auto__, G__14596), null)
    }
  }
};
c2.scale._log.prototype.call = function(this_sym14612, x) {
  var this__14613 = this;
  var this_sym14612__14614 = this;
  var ___14615 = this_sym14612__14614;
  return cljs.core.comp.call(null, c2.scale.linear.call(null, "\ufdd0'domain", cljs.core.map.call(null, c2.maths.log, this__14613.domain), "\ufdd0'range", this__14613.range), c2.maths.log).call(null, x)
};
c2.scale._log.prototype.apply = function(this_sym14599, args14600) {
  var this__14616 = this;
  return this_sym14599.call.apply(this_sym14599, [this_sym14599].concat(args14600.slice()))
};
c2.scale._log.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__14617 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
c2.scale._log.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__14618 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__14618.domain), cljs.core.vector.call(null, "\ufdd0'range", this__14618.range)], true), this__14618.__extmap))
};
c2.scale._log.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__14619 = this;
  var pr_pair__2240__auto____14620 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____14620, [cljs.core.str("#"), cljs.core.str("_log"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__14619.domain), cljs.core.vector.call(null, "\ufdd0'range", this__14619.range)], true), this__14619.__extmap))
};
c2.scale._log.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__14621 = this;
  return 2 + cljs.core.count.call(null, this__14621.__extmap)
};
c2.scale._log.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__14622 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____14623 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____14623)) {
      var and__3822__auto____14624 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____14624) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____14624
      }
    }else {
      return and__3822__auto____14623
    }
  }())) {
    return true
  }else {
    return false
  }
};
c2.scale._log.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__14596) {
  var this__14625 = this;
  return new c2.scale._log(this__14625.domain, this__14625.range, G__14596, this__14625.__extmap, this__14625.__hash)
};
c2.scale._log.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__14626 = this;
  return this__14626.__meta
};
c2.scale._log.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__14627 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'domain", "\ufdd0'range"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__14627.__meta), k__2234__auto__)
  }else {
    return new c2.scale._log(this__14627.domain, this__14627.range, this__14627.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__14627.__extmap, k__2234__auto__)), null)
  }
};
c2.scale._log.cljs$lang$type = true;
c2.scale._log.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "c2.scale/_log")
};
c2.scale.__GT__log = function __GT__log(domain, range) {
  return new c2.scale._log(domain, range)
};
c2.scale.map__GT__log = function map__GT__log(G__14598) {
  return new c2.scale._log((new cljs.core.Keyword("\ufdd0'domain")).call(null, G__14598), (new cljs.core.Keyword("\ufdd0'range")).call(null, G__14598), null, cljs.core.dissoc.call(null, G__14598, "\ufdd0'domain", "\ufdd0'range"))
};
c2.scale._log;
c2.scale.log = function() {
  var log__delegate = function(kwargs) {
    return c2.scale.map__GT__log.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'domain", "\ufdd0'range"], {"\ufdd0'domain":cljs.core.PersistentVector.fromArray([1, 10], true), "\ufdd0'range":cljs.core.PersistentVector.fromArray([0, 1], true)}), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)))
  };
  var log = function(var_args) {
    var kwargs = null;
    if(goog.isDef(var_args)) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, kwargs)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__14628) {
    var kwargs = cljs.core.seq(arglist__14628);
    return log__delegate(kwargs)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
goog.provide("c2.ticks");
goog.require("cljs.core");
goog.require("c2.maths");
goog.require("c2.maths");
c2.ticks.Q = cljs.core.PersistentVector.fromArray([1, 5, 2, 2.5, 4, 3], true);
c2.ticks.index_of = function index_of(x, coll) {
  return cljs.core.first.call(null, function() {
    var iter__2363__auto____14654 = function iter__14642(s__14643) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__14643__14649 = s__14643;
        while(true) {
          if(cljs.core.seq.call(null, s__14643__14649)) {
            var vec__14650__14651 = cljs.core.first.call(null, s__14643__14649);
            var idx__14652 = cljs.core.nth.call(null, vec__14650__14651, 0, null);
            var y__14653 = cljs.core.nth.call(null, vec__14650__14651, 1, null);
            if(cljs.core._EQ_.call(null, y__14653, x)) {
              return cljs.core.cons.call(null, idx__14652, iter__14642.call(null, cljs.core.rest.call(null, s__14643__14649)))
            }else {
              var G__14655 = cljs.core.rest.call(null, s__14643__14649);
              s__14643__14649 = G__14655;
              continue
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____14654.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, coll))
  }())
};
c2.ticks.label_range_contains_zero_QMARK_ = function label_range_contains_zero_QMARK_(l_min, l_max, l_step) {
  var and__3822__auto____14658 = l_max > 0;
  if(and__3822__auto____14658) {
    var and__3822__auto____14659 = l_min < 0;
    if(and__3822__auto____14659) {
      return l_min % l_step === 0
    }else {
      return and__3822__auto____14659
    }
  }else {
    return and__3822__auto____14658
  }
};
c2.ticks.simplicity = function simplicity(q, j, label_range_contains_zero) {
  var v__14661 = cljs.core.truth_(label_range_contains_zero) ? 1 : 0;
  if(cljs.core.count.call(null, c2.ticks.Q) <= 1) {
    return 1 - j + v__14661
  }else {
    return 1 - c2.ticks.index_of.call(null, q, c2.ticks.Q) / (cljs.core.count.call(null, c2.ticks.Q) - 1) - j + v__14661
  }
};
c2.ticks.max_simplicity = function max_simplicity(q, j) {
  return c2.ticks.simplicity.call(null, q, j, true)
};
c2.ticks.coverage = function coverage(d_min, d_max, l_min, l_max) {
  return 1 - 0.5 * ((c2.maths.sq.call(null, d_max - l_max) + c2.maths.sq.call(null, d_min - l_min)) / c2.maths.sq.call(null, 0.1 * (d_max - d_min)))
};
c2.ticks.max_coverage = function max_coverage(d_min, d_max, span) {
  var d_range__14663 = d_max - d_min;
  if(span > d_range__14663) {
    return 1 - c2.maths.sq.call(null, (span - d_range__14663) / (0.2 * d_range__14663))
  }else {
    return 1
  }
};
c2.ticks.density = function density(r, rt) {
  return 2 - (r / rt > rt / r ? r / rt : rt / r)
};
c2.ticks.max_density = function max_density(r, rt) {
  if(r >= rt) {
    return 2 - r / rt
  }else {
    return 1
  }
};
c2.ticks.w = function w(p__14664) {
  var vec__14672__14673 = p__14664;
  var simplicity__14674 = cljs.core.nth.call(null, vec__14672__14673, 0, null);
  var coverage__14675 = cljs.core.nth.call(null, vec__14672__14673, 1, null);
  var density__14676 = cljs.core.nth.call(null, vec__14672__14673, 2, null);
  var legibility__14677 = cljs.core.nth.call(null, vec__14672__14673, 3, null);
  var w__14678 = cljs.core.PersistentVector.fromArray([0.2, 0.25, 0.5, 0.05], true);
  return simplicity__14674 * w__14678.call(null, 0) + coverage__14675 * w__14678.call(null, 1) + density__14676 * w__14678.call(null, 2) + legibility__14677 * w__14678.call(null, 3)
};
c2.ticks.search = function() {
  var search__delegate = function(p__14679, p__14680) {
    var vec__14715__14717 = p__14679;
    var d_min__14718 = cljs.core.nth.call(null, vec__14715__14717, 0, null);
    var d_max__14719 = cljs.core.nth.call(null, vec__14715__14717, 1, null);
    var map__14716__14720 = p__14680;
    var map__14716__14721 = cljs.core.seq_QMARK_.call(null, map__14716__14720) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14716__14720) : map__14716__14720;
    var clamp_QMARK___14722 = cljs.core._lookup.call(null, map__14716__14721, "\ufdd0'clamp?", false);
    var length__14723 = cljs.core._lookup.call(null, map__14716__14721, "\ufdd0'length", 500);
    var target_density__14724 = cljs.core._lookup.call(null, map__14716__14721, "\ufdd0'target-density", 0.01);
    var best_score__14725 = cljs.core.atom.call(null, -2);
    var label__14726 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
    var G__14727__14728 = c2.ticks.Q;
    while(true) {
      if(cljs.core.empty_QMARK_.call(null, G__14727__14728)) {
      }else {
        if(true) {
          var q__14729 = cljs.core.first.call(null, G__14727__14728);
          var j__14730 = 1;
          while(true) {
            if(null) {
            }else {
              if(true) {
                var ms__14731 = c2.ticks.max_simplicity.call(null, q__14729, j__14730);
                if(c2.ticks.w.call(null, cljs.core.PersistentVector.fromArray([ms__14731, 1, 1, 1], true)) < cljs.core.deref.call(null, best_score__14725)) {
                }else {
                  var k__14732 = 2;
                  while(true) {
                    if(null) {
                    }else {
                      if(true) {
                        var md__14733 = c2.ticks.max_density.call(null, k__14732 / length__14723, target_density__14724);
                        if(c2.ticks.w.call(null, cljs.core.PersistentVector.fromArray([ms__14731, 1, md__14733, 1], true)) < cljs.core.deref.call(null, best_score__14725)) {
                        }else {
                          var delta__14734 = (d_max__14719 - d_min__14718) / ((k__14732 + 1) * j__14730 * k__14732);
                          var z__14735 = c2.maths.ceil.call(null, c2.maths.log10.call(null, delta__14734));
                          while(true) {
                            if(null) {
                            }else {
                              if(true) {
                                var l_step__14736 = q__14729 * j__14730 * c2.maths.expt.call(null, 10, z__14735);
                                var mc__14737 = c2.ticks.max_coverage.call(null, d_min__14718, d_max__14719, (k__14732 - 1) * l_step__14736);
                                if(c2.ticks.w.call(null, cljs.core.PersistentVector.fromArray([ms__14731, mc__14737, md__14733, 1], true)) < cljs.core.deref.call(null, best_score__14725)) {
                                }else {
                                  var G__14738__14739 = d_min__14718 / l_step__14736;
                                  var start__14740 = c2.maths.floor.call(null, d_max__14719 / l_step__14736) - (k__14732 - 1);
                                  while(true) {
                                    if(start__14740 > G__14738__14739) {
                                    }else {
                                      if(true) {
                                        var l_min__14741 = start__14740 * l_step__14736;
                                        var l_max__14742 = l_min__14741 + (k__14732 - 1) * l_step__14736;
                                        var s__14743 = c2.ticks.simplicity.call(null, q__14729, j__14730, c2.ticks.label_range_contains_zero_QMARK_.call(null, l_min__14741, l_max__14742, l_step__14736));
                                        var c__14744 = c2.ticks.coverage.call(null, d_min__14718, d_max__14719, l_min__14741, l_max__14742);
                                        var d__14745 = c2.ticks.density.call(null, k__14732 / length__14723, target_density__14724);
                                        var score__14746 = c2.ticks.w.call(null, cljs.core.PersistentVector.fromArray([s__14743, c__14744, d__14745, 1], true));
                                        if(score__14746 < cljs.core.deref.call(null, best_score__14725)) {
                                        }else {
                                          cljs.core.reset_BANG_.call(null, best_score__14725, score__14746);
                                          cljs.core.reset_BANG_.call(null, label__14726, cljs.core.ObjMap.fromObject(["\ufdd0'min", "\ufdd0'max", "\ufdd0'step"], {"\ufdd0'min":l_min__14741, "\ufdd0'max":l_max__14742, "\ufdd0'step":l_step__14736}));
                                          var G__14749 = start__14740 + 1 / j__14730;
                                          start__14740 = G__14749;
                                          continue
                                        }
                                      }else {
                                      }
                                    }
                                    break
                                  }
                                  var G__14750 = z__14735 + 1;
                                  z__14735 = G__14750;
                                  continue
                                }
                              }else {
                              }
                            }
                            break
                          }
                          var G__14751 = k__14732 + 1;
                          k__14732 = G__14751;
                          continue
                        }
                      }else {
                      }
                    }
                    break
                  }
                  var G__14752 = j__14730 + 1;
                  j__14730 = G__14752;
                  continue
                }
              }else {
              }
            }
            break
          }
          var G__14753 = cljs.core.next.call(null, G__14727__14728);
          G__14727__14728 = G__14753;
          continue
        }else {
        }
      }
      break
    }
    var l__14747 = cljs.core.deref.call(null, label__14726);
    var extent__14748 = cljs.core.PersistentVector.fromArray([cljs.core.truth_(clamp_QMARK___14722) ? d_min__14718 : (new cljs.core.Keyword("\ufdd0'min")).call(null, l__14747) < d_min__14718 ? (new cljs.core.Keyword("\ufdd0'min")).call(null, l__14747) : d_min__14718, cljs.core.truth_(clamp_QMARK___14722) ? d_max__14719 : (new cljs.core.Keyword("\ufdd0'max")).call(null, l__14747) > d_max__14719 ? (new cljs.core.Keyword("\ufdd0'max")).call(null, l__14747) : d_max__14719], true);
    return cljs.core.ObjMap.fromObject(["\ufdd0'extent", "\ufdd0'min", "\ufdd0'max", "\ufdd0'ticks"], {"\ufdd0'extent":extent__14748, "\ufdd0'min":cljs.core.first.call(null, extent__14748), "\ufdd0'max":cljs.core.second.call(null, extent__14748), "\ufdd0'ticks":cljs.core.filter.call(null, function(p1__155990_SHARP_) {
      return c2.maths.within_QMARK_.call(null, p1__155990_SHARP_, extent__14748)
    }, c2.maths.irange.call(null, (new cljs.core.Keyword("\ufdd0'min")).call(null, l__14747), (new cljs.core.Keyword("\ufdd0'max")).call(null, l__14747), (new cljs.core.Keyword("\ufdd0'step")).call(null, l__14747)))})
  };
  var search = function(p__14679, var_args) {
    var p__14680 = null;
    if(goog.isDef(var_args)) {
      p__14680 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return search__delegate.call(this, p__14679, p__14680)
  };
  search.cljs$lang$maxFixedArity = 1;
  search.cljs$lang$applyTo = function(arglist__14754) {
    var p__14679 = cljs.core.first(arglist__14754);
    var p__14680 = cljs.core.rest(arglist__14754);
    return search__delegate(p__14679, p__14680)
  };
  search.cljs$lang$arity$variadic = search__delegate;
  return search
}();
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3822__auto____14760 = reader;
    if(and__3822__auto____14760) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3822__auto____14760
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__2264__auto____14761 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____14762 = cljs.reader.read_char[goog.typeOf(x__2264__auto____14761)];
      if(or__3824__auto____14762) {
        return or__3824__auto____14762
      }else {
        var or__3824__auto____14763 = cljs.reader.read_char["_"];
        if(or__3824__auto____14763) {
          return or__3824__auto____14763
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3822__auto____14768 = reader;
    if(and__3822__auto____14768) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3822__auto____14768
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__2264__auto____14769 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____14770 = cljs.reader.unread[goog.typeOf(x__2264__auto____14769)];
      if(or__3824__auto____14770) {
        return or__3824__auto____14770
      }else {
        var or__3824__auto____14771 = cljs.reader.unread["_"];
        if(or__3824__auto____14771) {
          return or__3824__auto____14771
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
cljs.reader.StringPushbackReader = function(s, index_atom, buffer_atom) {
  this.s = s;
  this.index_atom = index_atom;
  this.buffer_atom = buffer_atom
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var this__14772 = this;
  if(cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, this__14772.buffer_atom))) {
    var idx__14773 = cljs.core.deref.call(null, this__14772.index_atom);
    cljs.core.swap_BANG_.call(null, this__14772.index_atom, cljs.core.inc);
    return this__14772.s[idx__14773]
  }else {
    var buf__14774 = cljs.core.deref.call(null, this__14772.buffer_atom);
    cljs.core.swap_BANG_.call(null, this__14772.buffer_atom, cljs.core.rest);
    return cljs.core.first.call(null, buf__14774)
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var this__14775 = this;
  return cljs.core.swap_BANG_.call(null, this__14775.buffer_atom, function(p1__14755_SHARP_) {
    return cljs.core.cons.call(null, ch, p1__14755_SHARP_)
  })
};
cljs.reader.StringPushbackReader;
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3824__auto____14777 = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3824__auto____14777)) {
    return or__3824__auto____14777
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3824__auto____14782 = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3824__auto____14782) {
    return or__3824__auto____14782
  }else {
    var and__3822__auto____14784 = function() {
      var or__3824__auto____14783 = "+" === initch;
      if(or__3824__auto____14783) {
        return or__3824__auto____14783
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3822__auto____14784)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch__14785 = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch__14785);
        return next_ch__14785
      }())
    }else {
      return and__3822__auto____14784
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(goog.isDef(var_args)) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__14786) {
    var rdr = cljs.core.first(arglist__14786);
    var msg = cljs.core.rest(arglist__14786);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$lang$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3822__auto____14790 = !(ch === "#");
  if(and__3822__auto____14790) {
    var and__3822__auto____14791 = !(ch === "'");
    if(and__3822__auto____14791) {
      var and__3822__auto____14792 = !(ch === ":");
      if(and__3822__auto____14792) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3822__auto____14792
      }
    }else {
      return and__3822__auto____14791
    }
  }else {
    return and__3822__auto____14790
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb__14797 = new goog.string.StringBuffer(initch);
  var ch__14798 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3824__auto____14799 = ch__14798 == null;
      if(or__3824__auto____14799) {
        return or__3824__auto____14799
      }else {
        var or__3824__auto____14800 = cljs.reader.whitespace_QMARK_.call(null, ch__14798);
        if(or__3824__auto____14800) {
          return or__3824__auto____14800
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch__14798)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch__14798);
      return sb__14797.toString()
    }else {
      var G__14801 = function() {
        sb__14797.append(ch__14798);
        return sb__14797
      }();
      var G__14802 = cljs.reader.read_char.call(null, rdr);
      sb__14797 = G__14801;
      ch__14798 = G__14802;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch__14806 = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3824__auto____14807 = ch__14806 === "n";
      if(or__3824__auto____14807) {
        return or__3824__auto____14807
      }else {
        var or__3824__auto____14808 = ch__14806 === "r";
        if(or__3824__auto____14808) {
          return or__3824__auto____14808
        }else {
          return ch__14806 == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches__14810 = re.exec(s);
  if(matches__14810 == null) {
    return null
  }else {
    if(matches__14810.length === 1) {
      return matches__14810[0]
    }else {
      return matches__14810
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups__14818 = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3__14819 = groups__14818[2];
  if(!function() {
    var or__3824__auto____14820 = group3__14819 == null;
    if(or__3824__auto____14820) {
      return or__3824__auto____14820
    }else {
      return group3__14819.length < 1
    }
  }()) {
    return 0
  }else {
    var negate__14821 = "-" === groups__14818[1] ? -1 : 1;
    var a__14822 = cljs.core.truth_(groups__14818[3]) ? [groups__14818[3], 10] : cljs.core.truth_(groups__14818[4]) ? [groups__14818[4], 16] : cljs.core.truth_(groups__14818[5]) ? [groups__14818[5], 8] : cljs.core.truth_(groups__14818[7]) ? [groups__14818[7], parseInt(groups__14818[7])] : "\ufdd0'default" ? [null, null] : null;
    var n__14823 = a__14822[0];
    var radix__14824 = a__14822[1];
    if(n__14823 == null) {
      return null
    }else {
      return negate__14821 * parseInt(n__14823, radix__14824)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups__14828 = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator__14829 = groups__14828[1];
  var denominator__14830 = groups__14828[2];
  return parseInt(numinator__14829) / parseInt(denominator__14830)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches__14833 = re.exec(s);
  if(function() {
    var and__3822__auto____14834 = !(matches__14833 == null);
    if(and__3822__auto____14834) {
      return matches__14833[0] === s
    }else {
      return and__3822__auto____14834
    }
  }()) {
    if(matches__14833.length === 1) {
      return matches__14833[0]
    }else {
      return matches__14833
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\u0008"
            }else {
              if(c === "f") {
                return"\u000c"
              }else {
                if("\ufdd0'else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code__14836 = parseInt(code_str, 16);
  return String.fromCharCode(code__14836)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch__14839 = cljs.reader.read_char.call(null, reader);
  var mapresult__14840 = cljs.reader.escape_char_map.call(null, ch__14839);
  if(cljs.core.truth_(mapresult__14840)) {
    return mapresult__14840
  }else {
    if(ch__14839 === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch__14839, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch__14839 === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch__14839, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch__14839)) {
          return String.fromCharCode(ch__14839)
        }else {
          if("\ufdd0'else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch__14839)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch__14842 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch__14842))) {
      var G__14843 = cljs.reader.read_char.call(null, rdr);
      ch__14842 = G__14843;
      continue
    }else {
      return ch__14842
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a__14850 = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch__14851 = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch__14851)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF")
    }
    if(delim === ch__14851) {
      return cljs.core.persistent_BANG_.call(null, a__14850)
    }else {
      var temp__3971__auto____14852 = cljs.reader.macros.call(null, ch__14851);
      if(cljs.core.truth_(temp__3971__auto____14852)) {
        var macrofn__14853 = temp__3971__auto____14852;
        var mret__14854 = macrofn__14853.call(null, rdr, ch__14851);
        var G__14856 = mret__14854 === rdr ? a__14850 : cljs.core.conj_BANG_.call(null, a__14850, mret__14854);
        a__14850 = G__14856;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch__14851);
        var o__14855 = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__14857 = o__14855 === rdr ? a__14850 : cljs.core.conj_BANG_.call(null, a__14850, o__14855);
        a__14850 = G__14857;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch__14862 = cljs.reader.read_char.call(null, rdr);
  var dm__14863 = cljs.reader.dispatch_macros.call(null, ch__14862);
  if(cljs.core.truth_(dm__14863)) {
    return dm__14863.call(null, rdr, _)
  }else {
    var temp__3971__auto____14864 = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch__14862);
    if(cljs.core.truth_(temp__3971__auto____14864)) {
      var obj__14865 = temp__3971__auto____14864;
      return obj__14865
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch__14862)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l__14867 = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l__14867))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l__14867)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer__14874 = new goog.string.StringBuffer(initch);
  var ch__14875 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____14876 = ch__14875 == null;
      if(or__3824__auto____14876) {
        return or__3824__auto____14876
      }else {
        var or__3824__auto____14877 = cljs.reader.whitespace_QMARK_.call(null, ch__14875);
        if(or__3824__auto____14877) {
          return or__3824__auto____14877
        }else {
          return cljs.reader.macros.call(null, ch__14875)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch__14875);
      var s__14878 = buffer__14874.toString();
      var or__3824__auto____14879 = cljs.reader.match_number.call(null, s__14878);
      if(cljs.core.truth_(or__3824__auto____14879)) {
        return or__3824__auto____14879
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s__14878, "]")
      }
    }else {
      var G__14880 = function() {
        buffer__14874.append(ch__14875);
        return buffer__14874
      }();
      var G__14881 = cljs.reader.read_char.call(null, reader);
      buffer__14874 = G__14880;
      ch__14875 = G__14881;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer__14884 = new goog.string.StringBuffer;
  var ch__14885 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch__14885 == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading string")
    }else {
      if("\\" === ch__14885) {
        var G__14886 = function() {
          buffer__14884.append(cljs.reader.escape_char.call(null, buffer__14884, reader));
          return buffer__14884
        }();
        var G__14887 = cljs.reader.read_char.call(null, reader);
        buffer__14884 = G__14886;
        ch__14885 = G__14887;
        continue
      }else {
        if('"' === ch__14885) {
          return buffer__14884.toString()
        }else {
          if("\ufdd0'default") {
            var G__14888 = function() {
              buffer__14884.append(ch__14885);
              return buffer__14884
            }();
            var G__14889 = cljs.reader.read_char.call(null, reader);
            buffer__14884 = G__14888;
            ch__14885 = G__14889;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token__14891 = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token__14891, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token__14891, 0, token__14891.indexOf("/")), cljs.core.subs.call(null, token__14891, token__14891.indexOf("/") + 1, token__14891.length))
  }else {
    return cljs.reader.special_symbols.call(null, token__14891, cljs.core.symbol.call(null, token__14891))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token__14901 = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a__14902 = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token__14901);
  var token__14903 = a__14902[0];
  var ns__14904 = a__14902[1];
  var name__14905 = a__14902[2];
  if(cljs.core.truth_(function() {
    var or__3824__auto____14907 = function() {
      var and__3822__auto____14906 = !(void 0 === ns__14904);
      if(and__3822__auto____14906) {
        return ns__14904.substring(ns__14904.length - 2, ns__14904.length) === ":/"
      }else {
        return and__3822__auto____14906
      }
    }();
    if(cljs.core.truth_(or__3824__auto____14907)) {
      return or__3824__auto____14907
    }else {
      var or__3824__auto____14908 = name__14905[name__14905.length - 1] === ":";
      if(or__3824__auto____14908) {
        return or__3824__auto____14908
      }else {
        return!(token__14903.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__14903)
  }else {
    if(function() {
      var and__3822__auto____14909 = !(ns__14904 == null);
      if(and__3822__auto____14909) {
        return ns__14904.length > 0
      }else {
        return and__3822__auto____14909
      }
    }()) {
      return cljs.core.keyword.call(null, ns__14904.substring(0, ns__14904.indexOf("/")), name__14905)
    }else {
      return cljs.core.keyword.call(null, token__14903)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(cljs.core.symbol_QMARK_.call(null, f)) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArrays([f], [true])
      }else {
        if("\ufdd0'else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m__14915 = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m__14915)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o__14916 = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__14917__14918 = o__14916;
    if(G__14917__14918) {
      if(function() {
        var or__3824__auto____14919 = G__14917__14918.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3824__auto____14919) {
          return or__3824__auto____14919
        }else {
          return G__14917__14918.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__14917__14918.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__14917__14918)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__14917__14918)
    }
  }()) {
    return cljs.core.with_meta.call(null, o__14916, cljs.core.merge.call(null, cljs.core.meta.call(null, o__14916), m__14915))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, "\ufdd1'quote")
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, "\ufdd1'deref")
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0'else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "<") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0'else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch__14923 = cljs.reader.read_char.call(null, reader);
    if(ch__14923 == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch__14923)) {
        var G__14926 = reader;
        var G__14927 = eof_is_error;
        var G__14928 = sentinel;
        var G__14929 = is_recursive;
        reader = G__14926;
        eof_is_error = G__14927;
        sentinel = G__14928;
        is_recursive = G__14929;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch__14923)) {
          var G__14930 = cljs.reader.read_comment.call(null, reader, ch__14923);
          var G__14931 = eof_is_error;
          var G__14932 = sentinel;
          var G__14933 = is_recursive;
          reader = G__14930;
          eof_is_error = G__14931;
          sentinel = G__14932;
          is_recursive = G__14933;
          continue
        }else {
          if("\ufdd0'else") {
            var f__14924 = cljs.reader.macros.call(null, ch__14923);
            var res__14925 = cljs.core.truth_(f__14924) ? f__14924.call(null, reader, ch__14923) : cljs.reader.number_literal_QMARK_.call(null, reader, ch__14923) ? cljs.reader.read_number.call(null, reader, ch__14923) : "\ufdd0'else" ? cljs.reader.read_symbol.call(null, reader, ch__14923) : null;
            if(res__14925 === reader) {
              var G__14934 = reader;
              var G__14935 = eof_is_error;
              var G__14936 = sentinel;
              var G__14937 = is_recursive;
              reader = G__14934;
              eof_is_error = G__14935;
              sentinel = G__14936;
              is_recursive = G__14937;
              continue
            }else {
              return res__14925
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r__14939 = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r__14939, true, null, false)
};
cljs.reader.zero_fill_right = function zero_fill_right(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return s.substring(0, width)
    }else {
      if("\ufdd0'else") {
        var b__14941 = new goog.string.StringBuffer(s);
        while(true) {
          if(b__14941.getLength() < width) {
            var G__14942 = b__14941.append("0");
            b__14941 = G__14942;
            continue
          }else {
            return b__14941.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return num % div === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3822__auto____14945 = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3822__auto____14945)) {
    var or__3824__auto____14946 = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3824__auto____14946)) {
      return or__3824__auto____14946
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3822__auto____14945
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm__14951 = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap__14952 = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core._lookup.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap__14952 : dim_norm__14951, month, null)
  }
}();
cljs.reader.parse_and_validate_timestamp = function() {
  var timestamp__14953 = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
  var check__14955 = function(low, n, high, msg) {
    if(function() {
      var and__3822__auto____14954 = low <= n;
      if(and__3822__auto____14954) {
        return n <= high
      }else {
        return and__3822__auto____14954
      }
    }()) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'<=", "\ufdd1'low", "\ufdd1'n", "\ufdd1'high"), cljs.core.hash_map("\ufdd0'line", 474))))].join(""));
    }
    return n
  };
  return function(ts) {
    var temp__3974__auto____14956 = cljs.core.map.call(null, cljs.core.vec, cljs.core.split_at.call(null, 8, cljs.core.re_matches.call(null, timestamp__14953, ts)));
    if(cljs.core.truth_(temp__3974__auto____14956)) {
      var vec__14957__14960 = temp__3974__auto____14956;
      var vec__14958__14961 = cljs.core.nth.call(null, vec__14957__14960, 0, null);
      var ___14962 = cljs.core.nth.call(null, vec__14958__14961, 0, null);
      var years__14963 = cljs.core.nth.call(null, vec__14958__14961, 1, null);
      var months__14964 = cljs.core.nth.call(null, vec__14958__14961, 2, null);
      var days__14965 = cljs.core.nth.call(null, vec__14958__14961, 3, null);
      var hours__14966 = cljs.core.nth.call(null, vec__14958__14961, 4, null);
      var minutes__14967 = cljs.core.nth.call(null, vec__14958__14961, 5, null);
      var seconds__14968 = cljs.core.nth.call(null, vec__14958__14961, 6, null);
      var milliseconds__14969 = cljs.core.nth.call(null, vec__14958__14961, 7, null);
      var vec__14959__14970 = cljs.core.nth.call(null, vec__14957__14960, 1, null);
      var ___14971 = cljs.core.nth.call(null, vec__14959__14970, 0, null);
      var ___14972 = cljs.core.nth.call(null, vec__14959__14970, 1, null);
      var ___14973 = cljs.core.nth.call(null, vec__14959__14970, 2, null);
      var V__14974 = vec__14957__14960;
      var vec__14975__14978 = cljs.core.map.call(null, function(v) {
        return cljs.core.map.call(null, function(p1__14950_SHARP_) {
          return parseInt(p1__14950_SHARP_, 10)
        }, v)
      }, cljs.core.map.call(null, function(p1__14948_SHARP_, p2__14947_SHARP_) {
        return cljs.core.update_in.call(null, p2__14947_SHARP_, cljs.core.PersistentVector.fromArray([0], true), p1__14948_SHARP_)
      }, cljs.core.PersistentVector.fromArray([cljs.core.constantly.call(null, null), function(p1__14949_SHARP_) {
        if(cljs.core._EQ_.call(null, p1__14949_SHARP_, "-")) {
          return"-1"
        }else {
          return"1"
        }
      }], true), V__14974));
      var vec__14976__14979 = cljs.core.nth.call(null, vec__14975__14978, 0, null);
      var ___14980 = cljs.core.nth.call(null, vec__14976__14979, 0, null);
      var y__14981 = cljs.core.nth.call(null, vec__14976__14979, 1, null);
      var mo__14982 = cljs.core.nth.call(null, vec__14976__14979, 2, null);
      var d__14983 = cljs.core.nth.call(null, vec__14976__14979, 3, null);
      var h__14984 = cljs.core.nth.call(null, vec__14976__14979, 4, null);
      var m__14985 = cljs.core.nth.call(null, vec__14976__14979, 5, null);
      var s__14986 = cljs.core.nth.call(null, vec__14976__14979, 6, null);
      var ms__14987 = cljs.core.nth.call(null, vec__14976__14979, 7, null);
      var vec__14977__14988 = cljs.core.nth.call(null, vec__14975__14978, 1, null);
      var offset_sign__14989 = cljs.core.nth.call(null, vec__14977__14988, 0, null);
      var offset_hours__14990 = cljs.core.nth.call(null, vec__14977__14988, 1, null);
      var offset_minutes__14991 = cljs.core.nth.call(null, vec__14977__14988, 2, null);
      var offset__14992 = offset_sign__14989 * (offset_hours__14990 * 60 + offset_minutes__14991);
      return cljs.core.PersistentVector.fromArray([cljs.core.not.call(null, years__14963) ? 1970 : y__14981, cljs.core.not.call(null, months__14964) ? 1 : check__14955.call(null, 1, mo__14982, 12, "timestamp month field must be in range 1..12"), cljs.core.not.call(null, days__14965) ? 1 : check__14955.call(null, 1, d__14983, cljs.reader.days_in_month.call(null, mo__14982, cljs.reader.leap_year_QMARK_.call(null, y__14981)), "timestamp day field must be in range 1..last day in month"), cljs.core.not.call(null, 
      hours__14966) ? 0 : check__14955.call(null, 0, h__14984, 23, "timestamp hour field must be in range 0..23"), cljs.core.not.call(null, minutes__14967) ? 0 : check__14955.call(null, 0, m__14985, 59, "timestamp minute field must be in range 0..59"), cljs.core.not.call(null, seconds__14968) ? 0 : check__14955.call(null, 0, s__14986, cljs.core._EQ_.call(null, m__14985, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.core.not.call(null, milliseconds__14969) ? 0 : check__14955.call(null, 
      0, ms__14987, 999, "timestamp millisecond field must be in range 0..999"), offset__14992], true)
    }else {
      return null
    }
  }
}();
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__3971__auto____15004 = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__3971__auto____15004)) {
    var vec__15005__15006 = temp__3971__auto____15004;
    var years__15007 = cljs.core.nth.call(null, vec__15005__15006, 0, null);
    var months__15008 = cljs.core.nth.call(null, vec__15005__15006, 1, null);
    var days__15009 = cljs.core.nth.call(null, vec__15005__15006, 2, null);
    var hours__15010 = cljs.core.nth.call(null, vec__15005__15006, 3, null);
    var minutes__15011 = cljs.core.nth.call(null, vec__15005__15006, 4, null);
    var seconds__15012 = cljs.core.nth.call(null, vec__15005__15006, 5, null);
    var ms__15013 = cljs.core.nth.call(null, vec__15005__15006, 6, null);
    var offset__15014 = cljs.core.nth.call(null, vec__15005__15006, 7, null);
    return new Date(Date.UTC(years__15007, months__15008 - 1, days__15009, hours__15010, minutes__15011, seconds__15012, ms__15013) - offset__15014 * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["inst", "uuid", "queue"], {"inst":cljs.reader.read_date, "uuid":cljs.reader.read_uuid, "queue":cljs.reader.read_queue}));
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag__15018 = cljs.reader.read_symbol.call(null, rdr, initch);
  var temp__3971__auto____15019 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), cljs.core.name.call(null, tag__15018), null);
  if(cljs.core.truth_(temp__3971__auto____15019)) {
    var pfn__15020 = temp__3971__auto____15019;
    return pfn__15020.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", cljs.core.name.call(null, tag__15018), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__15023 = cljs.core.name.call(null, tag);
  var old_parser__15024 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__15023, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__15023, f);
  return old_parser__15024
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__15027 = cljs.core.name.call(null, tag);
  var old_parser__15028 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__15027, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__15027);
  return old_parser__15028
};
goog.provide("vcfvis.data");
goog.require("cljs.core");
goog.require("c2.util");
goog.require("cljs.reader");
goog.require("c2.ticks");
goog.require("c2.scale");
goog.require("vcfvis.ui");
goog.require("vcfvis.core");
goog.require("cljs.reader");
goog.require("c2.util");
vcfvis.data.expand_metric = function expand_metric(metric) {
  if(cljs.core.truth_(metric.call(null, "\ufdd0'range"))) {
    return cljs.core.assoc.call(null, metric, "\ufdd0'bin-width", function() {
      var vec__101676__101677 = metric.call(null, "\ufdd0'range");
      var start__101678 = cljs.core.nth.call(null, vec__101676__101677, 0, null);
      var end__101679 = cljs.core.nth.call(null, vec__101676__101677, 1, null);
      return(end__101679 - start__101678) / vcfvis.ui.hist_bins
    }(), "\ufdd0'!filter-extent", cljs.core.atom.call(null, null), "\ufdd0'scale-x", function() {
      var map__101680__101681 = c2.ticks.search.call(null, metric.call(null, "\ufdd0'range"), "\ufdd0'clamp?", true, "\ufdd0'length", vcfvis.ui.hist_width);
      var map__101680__101682 = cljs.core.seq_QMARK_.call(null, map__101680__101681) ? cljs.core.apply.call(null, cljs.core.hash_map, map__101680__101681) : map__101680__101681;
      var ticks__101683 = cljs.core._lookup.call(null, map__101680__101682, "\ufdd0'ticks", null);
      var x__101684 = c2.scale.linear.call(null, "\ufdd0'domain", metric.call(null, "\ufdd0'range"), "\ufdd0'range", cljs.core.PersistentVector.fromArray([0, vcfvis.ui.hist_width], true));
      return cljs.core.assoc.call(null, x__101684, "\ufdd0'ticks", ticks__101683)
    }())
  }else {
    throw[cljs.core.str("Metric doesn't have range: "), cljs.core.str(cljs.core.pr.call(null, metric))].join("");
  }
};
vcfvis.data.prep_context = function prep_context(context) {
  return cljs.core.update_in.call(null, context, cljs.core.PersistentVector.fromArray(["\ufdd0'metrics"], true), function(p1__101666_SHARP_) {
    return cljs.core.reduce.call(null, function(res, m) {
      return cljs.core.assoc.call(null, res, (new cljs.core.Keyword("\ufdd0'id")).call(null, m), vcfvis.data.expand_metric.call(null, m))
    }, cljs.core.ObjMap.EMPTY, p1__101666_SHARP_)
  })
};
vcfvis.data.prep_vcf_json = function prep_vcf_json(vcf_json) {
  var core_metrics__101722 = cljs.core.deref.call(null, vcfvis.core._BANG_context).call(null, "\ufdd0'metrics");
  var info__101726 = cljs.core.update_in.call(null, cljs.reader.read_string.call(null, vcf_json["clj"]), cljs.core.PersistentVector.fromArray(["\ufdd0'available-metrics"], true), function(p1__101685_SHARP_) {
    return cljs.core.reduce.call(null, function(ms, m) {
      var temp__3971__auto____101723 = core_metrics__101722.call(null, m);
      if(cljs.core.truth_(temp__3971__auto____101723)) {
        var metric__101724 = temp__3971__auto____101723;
        return cljs.core.conj.call(null, ms, metric__101724)
      }else {
        var res__8324__auto____101725 = [cljs.core.str("Don't know how to deal with metric: '"), cljs.core.str(m), cljs.core.str("', dropping.")].join("");
        console.log(res__8324__auto____101725);
        res__8324__auto____101725;
        return ms
      }
    }, cljs.core.PersistentHashSet.EMPTY, p1__101685_SHARP_)
  });
  var cf__101727 = crossfilter(vcf_json["raw"]);
  return cljs.core.assoc.call(null, info__101726, "\ufdd0'cf", cljs.core.into.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'crossfilter", "\ufdd0'all"], {"\ufdd0'crossfilter":cf__101727, "\ufdd0'all":cf__101727.groupAll()}), function() {
    var iter__2363__auto____101756 = function iter__101728(s__101729) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__101729__101743 = s__101729;
        while(true) {
          if(cljs.core.seq.call(null, s__101729__101743)) {
            var map__101744__101745 = cljs.core.first.call(null, s__101729__101743);
            var map__101744__101746 = cljs.core.seq_QMARK_.call(null, map__101744__101745) ? cljs.core.apply.call(null, cljs.core.hash_map, map__101744__101745) : map__101744__101745;
            var bin_width__101747 = cljs.core._lookup.call(null, map__101744__101746, "\ufdd0'bin-width", null);
            var range__101748 = cljs.core._lookup.call(null, map__101744__101746, "\ufdd0'range", null);
            var id__101749 = cljs.core._lookup.call(null, map__101744__101746, "\ufdd0'id", null);
            return cljs.core.cons.call(null, function() {
              var vec__101750__101751 = range__101748;
              var start__101752 = cljs.core.nth.call(null, vec__101750__101751, 0, null);
              var end__101753 = cljs.core.nth.call(null, vec__101750__101751, 1, null);
              var dim__101754 = cf__101727.dimension(function(map__101744__101745, map__101744__101746, bin_width__101747, range__101748, id__101749) {
                return function(p1__101686_SHARP_) {
                  return p1__101686_SHARP_[id__101749]
                }
              }(map__101744__101745, map__101744__101746, bin_width__101747, range__101748, id__101749));
              var binned__101755 = dim__101754.group(function(map__101744__101745, map__101744__101746, bin_width__101747, range__101748, id__101749) {
                return function(x) {
                  return start__101752 + bin_width__101747 * (Math.floor.call(null, (x - start__101752) / bin_width__101747) < vcfvis.ui.hist_bins - 1 ? Math.floor.call(null, (x - start__101752) / bin_width__101747) : vcfvis.ui.hist_bins - 1)
                }
              }(map__101744__101745, map__101744__101746, bin_width__101747, range__101748, id__101749));
              return cljs.core.PersistentVector.fromArray([id__101749, cljs.core.ObjMap.fromObject(["\ufdd0'bin-width", "\ufdd0'dimension", "\ufdd0'binned"], {"\ufdd0'bin-width":bin_width__101747, "\ufdd0'dimension":dim__101754, "\ufdd0'binned":binned__101755})], true)
            }(), iter__101728.call(null, cljs.core.rest.call(null, s__101729__101743)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____101756.call(null, info__101726.call(null, "\ufdd0'available-metrics"))
  }()))
};
vcfvis.data.load_metrics = function load_metrics(file_urls, callback) {
  if(cljs.core.not.call(null, cljs.core.seq.call(null, file_urls))) {
    return callback.call(null, cljs.core.PersistentVector.EMPTY)
  }else {
    return jQuery.get("/api/metrics", c2.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'file-urls"], {"\ufdd0'file-urls":file_urls})), function(d) {
      var res__101758 = cljs.reader.read_string.call(null, d);
      return callback.call(null, res__101758)
    })
  }
};
vcfvis.data.load_context = function load_context(callback) {
  return jQuery.get("/api/context", function(d) {
    var res__101760 = cljs.reader.read_string.call(null, d);
    return callback.call(null, vcfvis.data.prep_context.call(null, res__101760))
  })
};
vcfvis.data.load_vcf = function load_vcf(file_url, callback) {
  return jQuery.getJSON("/api/vcf", c2.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'file-url"], {"\ufdd0'file-url":file_url})), function(res) {
    return callback.call(null, vcfvis.data.prep_vcf_json.call(null, res))
  })
};
vcfvis.data._BANG_analysis_status = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
cljs.core.swap_BANG_.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_, cljs.core.conj, function(m__8312__auto__) {
  try {
    if(function() {
      var G__101766__101767 = m__8312__auto__;
      if(G__101766__101767) {
        if(function() {
          var or__3824__auto____101768 = G__101766__101767.cljs$lang$protocol_mask$partition0$ & 256;
          if(or__3824__auto____101768) {
            return or__3824__auto____101768
          }else {
            return G__101766__101767.cljs$core$ILookup$
          }
        }()) {
          return true
        }else {
          if(!G__101766__101767.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__101766__101767)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__101766__101767)
      }
    }()) {
      var G__101761__101770 = function() {
        var val__6896__auto____101769 = cljs.core._lookup.call(null, m__8312__auto__, "\ufdd0'filter-updated", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6896__auto____101769, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6896__auto____101769
        }
      }();
      return cljs.core.reset_BANG_.call(null, vcfvis.data._BANG_analysis_status, cljs.core.ObjMap.EMPTY)
    }else {
      if("\ufdd0'else") {
        throw 0;
      }else {
        return null
      }
    }
  }catch(e__7329__auto__) {
    if(e__7329__auto__ === 0) {
      var G__101762__101765 = m__8312__auto__;
      return null
    }else {
      throw e__7329__auto__;
    }
  }
});
vcfvis.data.update_status_BANG_ = function update_status_BANG_(filename, status) {
  return cljs.core.swap_BANG_.call(null, vcfvis.data._BANG_analysis_status, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([filename], true), status)
};
vcfvis.data.reset_statuses_BANG_ = function reset_statuses_BANG_() {
  return cljs.core.reset_BANG_.call(null, vcfvis.data._BANG_analysis_status, cljs.core.ObjMap.EMPTY)
};
vcfvis.data.filter_analysis = function filter_analysis(opts) {
  var map__101776__101777 = opts;
  var map__101776__101778 = cljs.core.seq_QMARK_.call(null, map__101776__101777) ? cljs.core.apply.call(null, cljs.core.hash_map, map__101776__101777) : map__101776__101777;
  var file_url__101779 = cljs.core._lookup.call(null, map__101776__101778, "\ufdd0'file-url", null);
  vcfvis.data.update_status_BANG_.call(null, file_url__101779, "\ufdd0'running");
  return jQuery.post("/api/filter", c2.util.clj__GT_js.call(null, opts), function(d) {
    var res__101780 = cljs.reader.read_string.call(null, d);
    return vcfvis.data.update_status_BANG_.call(null, file_url__101779, "\ufdd0'completed")
  })
};
goog.provide("chosen.jquery");
goog.require("cljs.core");
jQuery.prototype.cljs$core$IReduce$ = true;
jQuery.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  return cljs.core.ci_reduce.call(null, this$, f)
};
jQuery.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  return cljs.core.ci_reduce.call(null, this$, f, start)
};
jQuery.prototype.cljs$core$ILookup$ = true;
jQuery.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var or__3824__auto____15887 = this$.slice(k, k + 1);
  if(cljs.core.truth_(or__3824__auto____15887)) {
    return or__3824__auto____15887
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  return cljs.core._nth.call(null, this$, k, not_found)
};
jQuery.prototype.cljs$core$ISequential$ = true;
jQuery.prototype.cljs$core$IIndexed$ = true;
jQuery.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    if(void 0 === not_found) {
      return null
    }else {
      return not_found
    }
  }
};
jQuery.prototype.cljs$core$ICounted$ = true;
jQuery.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  return this$.size()
};
jQuery.prototype.cljs$core$ISeq$ = true;
jQuery.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  return this$.get(0)
};
jQuery.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  if(cljs.core.count.call(null, this$) > 1) {
    return this$.slice(1)
  }else {
    return cljs.core.list.call(null)
  }
};
jQuery.prototype.cljs$core$ISeqable$ = true;
jQuery.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  if(cljs.core.truth_(this$.get(0))) {
    return this$
  }else {
    return null
  }
};
goog.provide("chosen.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("chosen.jquery");
goog.require("goog.string");
goog.require("clojure.string");
chosen.core.ISelectable = {};
chosen.core.selected = function() {
  var selected = null;
  var selected__1 = function(this$) {
    if(function() {
      var and__3822__auto____15722 = this$;
      if(and__3822__auto____15722) {
        return this$.chosen$core$ISelectable$selected$arity$1
      }else {
        return and__3822__auto____15722
      }
    }()) {
      return this$.chosen$core$ISelectable$selected$arity$1(this$)
    }else {
      var x__2264__auto____15723 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____15724 = chosen.core.selected[goog.typeOf(x__2264__auto____15723)];
        if(or__3824__auto____15724) {
          return or__3824__auto____15724
        }else {
          var or__3824__auto____15725 = chosen.core.selected["_"];
          if(or__3824__auto____15725) {
            return or__3824__auto____15725
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelectable.selected", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var selected__2 = function(this$, values) {
    if(function() {
      var and__3822__auto____15726 = this$;
      if(and__3822__auto____15726) {
        return this$.chosen$core$ISelectable$selected$arity$2
      }else {
        return and__3822__auto____15726
      }
    }()) {
      return this$.chosen$core$ISelectable$selected$arity$2(this$, values)
    }else {
      var x__2264__auto____15727 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____15728 = chosen.core.selected[goog.typeOf(x__2264__auto____15727)];
        if(or__3824__auto____15728) {
          return or__3824__auto____15728
        }else {
          var or__3824__auto____15729 = chosen.core.selected["_"];
          if(or__3824__auto____15729) {
            return or__3824__auto____15729
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelectable.selected", this$);
          }
        }
      }().call(null, this$, values)
    }
  };
  selected = function(this$, values) {
    switch(arguments.length) {
      case 1:
        return selected__1.call(this, this$);
      case 2:
        return selected__2.call(this, this$, values)
    }
    throw"Invalid arity: " + arguments.length;
  };
  selected.cljs$lang$arity$1 = selected__1;
  selected.cljs$lang$arity$2 = selected__2;
  return selected
}();
chosen.core.IOptions = {};
chosen.core.options = function() {
  var options = null;
  var options__1 = function(this$) {
    if(function() {
      var and__3822__auto____15738 = this$;
      if(and__3822__auto____15738) {
        return this$.chosen$core$IOptions$options$arity$1
      }else {
        return and__3822__auto____15738
      }
    }()) {
      return this$.chosen$core$IOptions$options$arity$1(this$)
    }else {
      var x__2264__auto____15739 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____15740 = chosen.core.options[goog.typeOf(x__2264__auto____15739)];
        if(or__3824__auto____15740) {
          return or__3824__auto____15740
        }else {
          var or__3824__auto____15741 = chosen.core.options["_"];
          if(or__3824__auto____15741) {
            return or__3824__auto____15741
          }else {
            throw cljs.core.missing_protocol.call(null, "IOptions.options", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var options__2 = function(this$, opts) {
    if(function() {
      var and__3822__auto____15742 = this$;
      if(and__3822__auto____15742) {
        return this$.chosen$core$IOptions$options$arity$2
      }else {
        return and__3822__auto____15742
      }
    }()) {
      return this$.chosen$core$IOptions$options$arity$2(this$, opts)
    }else {
      var x__2264__auto____15743 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____15744 = chosen.core.options[goog.typeOf(x__2264__auto____15743)];
        if(or__3824__auto____15744) {
          return or__3824__auto____15744
        }else {
          var or__3824__auto____15745 = chosen.core.options["_"];
          if(or__3824__auto____15745) {
            return or__3824__auto____15745
          }else {
            throw cljs.core.missing_protocol.call(null, "IOptions.options", this$);
          }
        }
      }().call(null, this$, opts)
    }
  };
  options = function(this$, opts) {
    switch(arguments.length) {
      case 1:
        return options__1.call(this, this$);
      case 2:
        return options__2.call(this, this$, opts)
    }
    throw"Invalid arity: " + arguments.length;
  };
  options.cljs$lang$arity$1 = options__1;
  options.cljs$lang$arity$2 = options__2;
  return options
}();
chosen.core.__GT_coll = function __GT_coll(c) {
  if(!function() {
    var or__3824__auto____15748 = cljs.core.set_QMARK_.call(null, c);
    if(or__3824__auto____15748) {
      return or__3824__auto____15748
    }else {
      return cljs.core.sequential_QMARK_.call(null, c)
    }
  }()) {
    return cljs.core.PersistentVector.fromArray([c], true)
  }else {
    return c
  }
};
chosen.core.option_values = function option_values(option_els) {
  return cljs.core.map.call(null, function(p1__15746_SHARP_) {
    return p1__15746_SHARP_.value
  }, option_els)
};
chosen.core.selected_values = function selected_values(el) {
  return cljs.core.set.call(null, chosen.core.option_values.call(null, $(el).find("option:selected")))
};
chosen.core.el_options = function el_options(el) {
  return cljs.core.map.call(null, function(e) {
    var $e__15751 = $(e);
    var group__15752 = $e__15751.parent("optgroup").attr("label");
    return cljs.core.ObjMap.fromObject(["\ufdd0'text", "\ufdd0'value", "\ufdd0'selected", "\ufdd0'disabled", "\ufdd0'group"], {"\ufdd0'text":$e__15751.text(), "\ufdd0'value":$e__15751.val(), "\ufdd0'selected":e.selected, "\ufdd0'disabled":e.disabled, "\ufdd0'group":void 0 === group__15752 ? null : group__15752})
  }, $(el).find("option"))
};
chosen.core.opt__GT_html = function opt__GT_html(o) {
  var map__15763__15764 = o;
  var map__15763__15765 = cljs.core.seq_QMARK_.call(null, map__15763__15764) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15763__15764) : map__15763__15764;
  var style__15766 = cljs.core._lookup.call(null, map__15763__15765, "\ufdd0'style", null);
  var group__15767 = cljs.core._lookup.call(null, map__15763__15765, "\ufdd0'group", null);
  var disabled__15768 = cljs.core._lookup.call(null, map__15763__15765, "\ufdd0'disabled", null);
  var selected__15769 = cljs.core._lookup.call(null, map__15763__15765, "\ufdd0'selected", null);
  var text__15770 = cljs.core._lookup.call(null, map__15763__15765, "\ufdd0'text", null);
  var value__15771 = cljs.core._lookup.call(null, map__15763__15765, "\ufdd0'value", null);
  return[cljs.core.str(clojure.string.join.call(null, " ", cljs.core.PersistentVector.fromArray(["<option", [cljs.core.str('value="'), cljs.core.str(goog.string.htmlEscape(function() {
    var or__3824__auto____15772 = value__15771;
    if(cljs.core.truth_(or__3824__auto____15772)) {
      return or__3824__auto____15772
    }else {
      return text__15770
    }
  }())), cljs.core.str('"')].join(""), cljs.core.truth_(style__15766) ? [cljs.core.str("style='"), cljs.core.str(goog.string.htmlEscape(style__15766)), cljs.core.str("'")].join("") : null, cljs.core.truth_(disabled__15768) ? "disabled='disabled'" : null, cljs.core.truth_(selected__15769) ? "selected='selected'" : null, ">"], true))), cljs.core.str(text__15770), cljs.core.str("</option>")].join("")
};
chosen.core.optionify = function optionify(x) {
  if(cljs.core.map_QMARK_.call(null, x)) {
    return x
  }else {
    return cljs.core.ObjMap.fromObject(["\ufdd0'value", "\ufdd0'text"], {"\ufdd0'value":x, "\ufdd0'text":[cljs.core.str(x)].join("")})
  }
};
chosen.core.reset_dom_options_BANG_ = function reset_dom_options_BANG_($el, options) {
  $el.children().remove();
  var G__15793__15794 = cljs.core.seq.call(null, cljs.core.group_by.call(null, "\ufdd0'group", cljs.core.map.call(null, chosen.core.optionify, chosen.core.__GT_coll.call(null, options))));
  if(G__15793__15794) {
    var G__15796__15798 = cljs.core.first.call(null, G__15793__15794);
    var vec__15797__15799 = G__15796__15798;
    var group__15800 = cljs.core.nth.call(null, vec__15797__15799, 0, null);
    var opts__15801 = cljs.core.nth.call(null, vec__15797__15799, 1, null);
    var G__15793__15802 = G__15793__15794;
    var G__15796__15803 = G__15796__15798;
    var G__15793__15804 = G__15793__15802;
    while(true) {
      var vec__15805__15806 = G__15796__15803;
      var group__15807 = cljs.core.nth.call(null, vec__15805__15806, 0, null);
      var opts__15808 = cljs.core.nth.call(null, vec__15805__15806, 1, null);
      var G__15793__15809 = G__15793__15804;
      var opts_html__15810 = clojure.string.join.call(null, "\n", cljs.core.map.call(null, chosen.core.opt__GT_html, opts__15808));
      if(group__15807 == null) {
        $el.append(opts_html__15810)
      }else {
        $el.append([cljs.core.str("<optgroup label='"), cljs.core.str(goog.string.htmlEscape(cljs.core.name.call(null, group__15807))), cljs.core.str("'>"), cljs.core.str(opts_html__15810), cljs.core.str("</optgroup>")].join(""))
      }
      var temp__3974__auto____15811 = cljs.core.next.call(null, G__15793__15809);
      if(temp__3974__auto____15811) {
        var G__15793__15812 = temp__3974__auto____15811;
        var G__15813 = cljs.core.first.call(null, G__15793__15812);
        var G__15814 = G__15793__15812;
        G__15796__15803 = G__15813;
        G__15793__15804 = G__15814;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
chosen.core.Chosen = function($el, _BANG_a, multiple_QMARK_) {
  this.$el = $el;
  this._BANG_a = _BANG_a;
  this.multiple_QMARK_ = multiple_QMARK_;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147516416
};
chosen.core.Chosen.cljs$lang$type = true;
chosen.core.Chosen.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "chosen.core/Chosen")
};
chosen.core.Chosen.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(_15816, _15817, _) {
  var this__15815 = this;
  return null
};
chosen.core.Chosen.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(_, key, f) {
  var this__15818 = this;
  return cljs.core.add_watch.call(null, this__15818._BANG_a, key, function(_15821, _, p__15819, p__15820) {
    var map__15822__15824 = p__15819;
    var map__15822__15825 = cljs.core.seq_QMARK_.call(null, map__15822__15824) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15822__15824) : map__15822__15824;
    var old_sel__15826 = cljs.core._lookup.call(null, map__15822__15825, "\ufdd0'selected", null);
    var map__15823__15827 = p__15820;
    var map__15823__15828 = cljs.core.seq_QMARK_.call(null, map__15823__15827) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15823__15827) : map__15823__15827;
    var sel__15829 = cljs.core._lookup.call(null, map__15823__15828, "\ufdd0'selected", null);
    if(cljs.core.not_EQ_.call(null, old_sel__15826, sel__15829)) {
      return f.call(null, cljs.core.truth_(this__15818.multiple_QMARK_) ? sel__15829 : cljs.core.first.call(null, sel__15829))
    }else {
      return null
    }
  })
};
chosen.core.Chosen.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(_, key) {
  var this__15830 = this;
  return cljs.core.remove_watch.call(null, this__15830._BANG_a, key)
};
chosen.core.Chosen.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var this__15831 = this;
  return this$.chosen$core$ISelectable$selected$arity$1(this$)
};
chosen.core.Chosen.prototype.chosen$core$IOptions$ = true;
chosen.core.Chosen.prototype.chosen$core$IOptions$options$arity$1 = function(_) {
  var this__15832 = this;
  return(new cljs.core.Keyword("\ufdd0'options")).call(null, cljs.core.deref.call(null, this__15832._BANG_a))
};
chosen.core.Chosen.prototype.chosen$core$IOptions$options$arity$2 = function(_, opts) {
  var this__15833 = this;
  chosen.core.reset_dom_options_BANG_.call(null, this__15833.$el, opts);
  return cljs.core.swap_BANG_.call(null, this__15833._BANG_a, cljs.core.assoc, "\ufdd0'options", chosen.core.el_options.call(null, this__15833.$el))
};
chosen.core.Chosen.prototype.chosen$core$ISelectable$ = true;
chosen.core.Chosen.prototype.chosen$core$ISelectable$selected$arity$1 = function(_) {
  var this__15834 = this;
  var sel__15835 = (new cljs.core.Keyword("\ufdd0'selected")).call(null, cljs.core.deref.call(null, this__15834._BANG_a));
  if(cljs.core.truth_(this__15834.multiple_QMARK_)) {
    return sel__15835
  }else {
    return cljs.core.first.call(null, sel__15835)
  }
};
chosen.core.Chosen.prototype.chosen$core$ISelectable$selected$arity$2 = function(_, values) {
  var this__15836 = this;
  return cljs.core.swap_BANG_.call(null, this__15836._BANG_a, cljs.core.assoc, "\ufdd0'selected", chosen.core.__GT_coll.call(null, values))
};
chosen.core.Chosen;
chosen.core.ichooseu_BANG_ = function() {
  var ichooseu_BANG___delegate = function(el, p__15837) {
    var map__15861__15862 = p__15837;
    var map__15861__15863 = cljs.core.seq_QMARK_.call(null, map__15861__15862) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15861__15862) : map__15861__15862;
    var search_contains__15864 = cljs.core._lookup.call(null, map__15861__15863, "\ufdd0'search-contains", false);
    var $el__15865 = $(el);
    var multiple_QMARK___15866 = cljs.core._EQ_.call(null, "multiple", $el__15865.attr("multiple"));
    var _BANG_a__15867 = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'options", "\ufdd0'selected"], {"\ufdd0'options":chosen.core.el_options.call(null, $el__15865), "\ufdd0'selected":chosen.core.selected_values.call(null, $el__15865)}));
    $el__15865.chosen(function() {
      var G__15868__15869 = {};
      G__15868__15869["search_contains"] = search_contains__15864;
      return G__15868__15869
    }()).on("change", function() {
      return cljs.core.swap_BANG_.call(null, _BANG_a__15867, cljs.core.assoc, "\ufdd0'selected", chosen.core.selected_values.call(null, $el__15865))
    });
    cljs.core.add_watch.call(null, _BANG_a__15867, "\ufdd0'_update-dom", function(_15871, _15872, _, p__15870) {
      var map__15873__15874 = p__15870;
      var map__15873__15875 = cljs.core.seq_QMARK_.call(null, map__15873__15874) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15873__15874) : map__15873__15874;
      var selected__15876 = cljs.core._lookup.call(null, map__15873__15875, "\ufdd0'selected", null);
      $el__15865.find("option[selected='selected']").removeAttr("selected");
      var G__15877__15878 = cljs.core.seq.call(null, selected__15876);
      if(G__15877__15878) {
        var val__15879 = cljs.core.first.call(null, G__15877__15878);
        var G__15877__15880 = G__15877__15878;
        while(true) {
          $el__15865.find([cljs.core.str("option[value='"), cljs.core.str(val__15879), cljs.core.str("']")].join("")).first().attr("selected", "selected");
          var temp__3974__auto____15881 = cljs.core.next.call(null, G__15877__15880);
          if(temp__3974__auto____15881) {
            var G__15877__15882 = temp__3974__auto____15881;
            var G__15884 = cljs.core.first.call(null, G__15877__15882);
            var G__15885 = G__15877__15882;
            val__15879 = G__15884;
            G__15877__15880 = G__15885;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var dom_selected__15883 = chosen.core.selected_values.call(null, $el__15865);
      if(cljs.core.not_EQ_.call(null, selected__15876, dom_selected__15883)) {
        cljs.core.swap_BANG_.call(null, _BANG_a__15867, cljs.core.assoc, "\ufdd0'selected", dom_selected__15883)
      }else {
      }
      return $el__15865.trigger("liszt:updated")
    });
    return new chosen.core.Chosen($el__15865, _BANG_a__15867, multiple_QMARK___15866)
  };
  var ichooseu_BANG_ = function(el, var_args) {
    var p__15837 = null;
    if(goog.isDef(var_args)) {
      p__15837 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return ichooseu_BANG___delegate.call(this, el, p__15837)
  };
  ichooseu_BANG_.cljs$lang$maxFixedArity = 1;
  ichooseu_BANG_.cljs$lang$applyTo = function(arglist__15886) {
    var el = cljs.core.first(arglist__15886);
    var p__15837 = cljs.core.rest(arglist__15886);
    return ichooseu_BANG___delegate(el, p__15837)
  };
  ichooseu_BANG_.cljs$lang$arity$variadic = ichooseu_BANG___delegate;
  return ichooseu_BANG_
}();
goog.provide("c2.core");
goog.require("cljs.core");
goog.require("reflex.core");
goog.require("c2.dom");
goog.require("singult.core");
c2.core.node_data = singult.core.node_data;
c2.core.unify = function() {
  var unify__delegate = function(data, mapping, args) {
    if(cljs.core.seq.call(null, data)) {
      mapping.call(null, cljs.core.first.call(null, data))
    }else {
    }
    return cljs.core.apply.call(null, singult.core.unify, data, mapping, args)
  };
  var unify = function(data, mapping, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unify__delegate.call(this, data, mapping, args)
  };
  unify.cljs$lang$maxFixedArity = 2;
  unify.cljs$lang$applyTo = function(arglist__15920) {
    var data = cljs.core.first(arglist__15920);
    var mapping = cljs.core.first(cljs.core.next(arglist__15920));
    var args = cljs.core.rest(cljs.core.next(arglist__15920));
    return unify__delegate(data, mapping, args)
  };
  unify.cljs$lang$arity$variadic = unify__delegate;
  return unify
}();
goog.provide("c2.event");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("c2.core");
goog.require("goog.events");
goog.require("c2.dom");
goog.require("c2.core");
goog.require("cljs.reader");
c2.event.on_load = function on_load(f) {
  return goog.events.listen(window, goog.events.EventType.LOAD, f)
};
c2.event.on_raw = function() {
  var on_raw__delegate = function(node, event_type, f, p__15888) {
    var map__15893__15894 = p__15888;
    var map__15893__15895 = cljs.core.seq_QMARK_.call(null, map__15893__15894) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15893__15894) : map__15893__15894;
    var capture__15896 = cljs.core._lookup.call(null, map__15893__15895, "\ufdd0'capture", false);
    return goog.events.listen(c2.dom.__GT_dom.call(null, node), cljs.core.name.call(null, event_type), f, capture__15896)
  };
  var on_raw = function(node, event_type, f, var_args) {
    var p__15888 = null;
    if(goog.isDef(var_args)) {
      p__15888 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return on_raw__delegate.call(this, node, event_type, f, p__15888)
  };
  on_raw.cljs$lang$maxFixedArity = 3;
  on_raw.cljs$lang$applyTo = function(arglist__15897) {
    var node = cljs.core.first(arglist__15897);
    var event_type = cljs.core.first(cljs.core.next(arglist__15897));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15897)));
    var p__15888 = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__15897)));
    return on_raw__delegate(node, event_type, f, p__15888)
  };
  on_raw.cljs$lang$arity$variadic = on_raw__delegate;
  return on_raw
}();
c2.event.on = function() {
  var on = null;
  var on__3 = function(node, event_type, f) {
    return on.call(null, node, "*", event_type, f)
  };
  var on__5 = function() {
    var G__15917__delegate = function(node, selector, event_type, f, p__15898) {
      var map__15908__15909 = p__15898;
      var map__15908__15910 = cljs.core.seq_QMARK_.call(null, map__15908__15909) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15908__15909) : map__15908__15909;
      var capture__15911 = cljs.core._lookup.call(null, map__15908__15910, "\ufdd0'capture", false);
      return goog.events.listen(c2.dom.__GT_dom.call(null, node), cljs.core.name.call(null, event_type), function(event) {
        if(cljs.core.truth_(c2.dom.matches_selector_QMARK_.call(null, event.target, selector))) {
          var $node__15912 = event.target;
          while(true) {
            var temp__3971__auto____15913 = c2.core.node_data.call(null, $node__15912);
            if(cljs.core.truth_(temp__3971__auto____15913)) {
              var d__15914 = temp__3971__auto____15913;
              return f.call(null, d__15914, $node__15912, event)
            }else {
              var temp__3971__auto____15915 = c2.dom.parent.call(null, $node__15912);
              if(cljs.core.truth_(temp__3971__auto____15915)) {
                var parent__15916 = temp__3971__auto____15915;
                var G__15918 = parent__15916;
                $node__15912 = G__15918;
                continue
              }else {
                return null
              }
            }
            break
          }
        }else {
          return null
        }
      }, capture__15911)
    };
    var G__15917 = function(node, selector, event_type, f, var_args) {
      var p__15898 = null;
      if(goog.isDef(var_args)) {
        p__15898 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__15917__delegate.call(this, node, selector, event_type, f, p__15898)
    };
    G__15917.cljs$lang$maxFixedArity = 4;
    G__15917.cljs$lang$applyTo = function(arglist__15919) {
      var node = cljs.core.first(arglist__15919);
      var selector = cljs.core.first(cljs.core.next(arglist__15919));
      var event_type = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15919)));
      var f = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__15919))));
      var p__15898 = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__15919))));
      return G__15917__delegate(node, selector, event_type, f, p__15898)
    };
    G__15917.cljs$lang$arity$variadic = G__15917__delegate;
    return G__15917
  }();
  on = function(node, selector, event_type, f, var_args) {
    var p__15898 = var_args;
    switch(arguments.length) {
      case 3:
        return on__3.call(this, node, selector, event_type);
      default:
        return on__5.cljs$lang$arity$variadic(node, selector, event_type, f, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  on.cljs$lang$maxFixedArity = 4;
  on.cljs$lang$applyTo = on__5.cljs$lang$applyTo;
  on.cljs$lang$arity$3 = on__3;
  on.cljs$lang$arity$variadic = on__5.cljs$lang$arity$variadic;
  return on
}();
goog.provide("c2.svg");
goog.require("cljs.core");
goog.require("c2.core");
goog.require("c2.maths");
goog.require("c2.dom");
goog.require("c2.maths");
goog.require("c2.core");
c2.svg.__GT_xy = function __GT_xy(coordinates) {
  try {
    if(cljs.core.vector_QMARK_.call(null, coordinates)) {
      try {
        if(function() {
          var and__3822__auto____15322 = cljs.core.vector_QMARK_.call(null, coordinates);
          if(and__3822__auto____15322) {
            return cljs.core._EQ_.call(null, cljs.core.count.call(null, coordinates), 2)
          }else {
            return and__3822__auto____15322
          }
        }()) {
          var x__15323 = cljs.core.nth.call(null, coordinates, 0);
          var y__15324 = cljs.core.nth.call(null, coordinates, 1);
          return cljs.core.PersistentVector.fromArray([x__15323, y__15324], true)
        }else {
          if("\ufdd0'else") {
            throw 0;
          }else {
            return null
          }
        }
      }catch(e__6905__auto__) {
        if(e__6905__auto__ === 0) {
          throw 0;
        }else {
          throw e__6905__auto__;
        }
      }
    }else {
      if(function() {
        var G__15325__15326 = coordinates;
        if(G__15325__15326) {
          if(function() {
            var or__3824__auto____15327 = G__15325__15326.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3824__auto____15327) {
              return or__3824__auto____15327
            }else {
              return G__15325__15326.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__15325__15326.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__15325__15326)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__15325__15326)
        }
      }()) {
        var y__15329 = function() {
          var val__6472__auto____15328 = cljs.core._lookup.call(null, coordinates, "\ufdd0'y", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6472__auto____15328, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6472__auto____15328
          }
        }();
        var x__15331 = function() {
          var val__6472__auto____15330 = cljs.core._lookup.call(null, coordinates, "\ufdd0'x", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6472__auto____15330, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6472__auto____15330
          }
        }();
        return cljs.core.PersistentVector.fromArray([x__15331, y__15329], true)
      }else {
        if("\ufdd0'else") {
          throw 0;
        }else {
          return null
        }
      }
    }
  }catch(e__6905__auto__) {
    if(e__6905__auto__ === 0) {
      var G__15314__15320 = coordinates;
      return null
    }else {
      throw e__6905__auto__;
    }
  }
};
c2.svg.translate = function translate(coordinates) {
  var vec__15336__15337 = c2.svg.__GT_xy.call(null, coordinates);
  var x__15338 = cljs.core.nth.call(null, vec__15336__15337, 0, null);
  var y__15339 = cljs.core.nth.call(null, vec__15336__15337, 1, null);
  return[cljs.core.str("translate("), cljs.core.str(x__15338), cljs.core.str(","), cljs.core.str(y__15339), cljs.core.str(")")].join("")
};
c2.svg.scale = function scale(coordinates) {
  while(true) {
    if(cljs.core.vector_QMARK_.call(null, coordinates)) {
      if(function() {
        var and__3822__auto____15361 = cljs.core.vector_QMARK_.call(null, coordinates);
        if(and__3822__auto____15361) {
          return cljs.core._EQ_.call(null, cljs.core.count.call(null, coordinates), 2)
        }else {
          return and__3822__auto____15361
        }
      }()) {
        var x__15362 = cljs.core.nth.call(null, coordinates, 0);
        var y__15363 = cljs.core.nth.call(null, coordinates, 1);
        return[cljs.core.str("scale("), cljs.core.str(x__15362), cljs.core.str(","), cljs.core.str(y__15363), cljs.core.str(")")].join("")
      }else {
        if("\ufdd0'else") {
          throw new java.lang.Exception([cljs.core.str("No match found. "), cljs.core.str("Followed "), cljs.core.str(1), cljs.core.str(" branches."), cljs.core.str(" Breadcrumbs: "), cljs.core.str(cljs.core.vec([cljs.core.list("\ufdd1'clojure.core/vector?", "\ufdd1'coordinates")]))].join(""));
        }else {
          return null
        }
      }
    }else {
      if(function() {
        var G__15364__15365 = coordinates;
        if(G__15364__15365) {
          if(function() {
            var or__3824__auto____15366 = G__15364__15365.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3824__auto____15366) {
              return or__3824__auto____15366
            }else {
              return G__15364__15365.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__15364__15365.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__15364__15365)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__15364__15365)
        }
      }()) {
        var y__15368 = function() {
          var val__6472__auto____15367 = cljs.core._lookup.call(null, coordinates, "\ufdd0'y", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6472__auto____15367, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6472__auto____15367
          }
        }();
        var x__15370 = function() {
          var val__6472__auto____15369 = cljs.core._lookup.call(null, coordinates, "\ufdd0'x", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6472__auto____15369, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6472__auto____15369
          }
        }();
        var G__15372 = cljs.core.PersistentVector.fromArray([x__15370, y__15368], true);
        coordinates = G__15372;
        continue
      }else {
        if("\ufdd0'else") {
          var s__15371 = coordinates;
          return[cljs.core.str("scale("), cljs.core.str(s__15371), cljs.core.str(")")].join("")
        }else {
          return null
        }
      }
    }
    break
  }
};
c2.svg.rotate = function() {
  var rotate = null;
  var rotate__1 = function(angle) {
    return rotate.call(null, angle, cljs.core.PersistentVector.fromArray([0, 0], true))
  };
  var rotate__2 = function(angle, coordinates) {
    var vec__15377__15378 = c2.svg.__GT_xy.call(null, coordinates);
    var x__15379 = cljs.core.nth.call(null, vec__15377__15378, 0, null);
    var y__15380 = cljs.core.nth.call(null, vec__15377__15378, 1, null);
    return[cljs.core.str("rotate("), cljs.core.str(angle), cljs.core.str(","), cljs.core.str(x__15379), cljs.core.str(","), cljs.core.str(y__15380), cljs.core.str(")")].join("")
  };
  rotate = function(angle, coordinates) {
    switch(arguments.length) {
      case 1:
        return rotate__1.call(this, angle);
      case 2:
        return rotate__2.call(this, angle, coordinates)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rotate.cljs$lang$arity$1 = rotate__1;
  rotate.cljs$lang$arity$2 = rotate__2;
  return rotate
}();
c2.svg.get_bounds = function get_bounds($svg_el) {
  var b__15382 = $svg_el.getBBox();
  return cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'y", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":b__15382.x, "\ufdd0'y":b__15382.y, "\ufdd0'width":b__15382.width, "\ufdd0'height":b__15382.height})
};
c2.svg.transform_to_center = function transform_to_center(element, container) {
  var map__15396__15398 = element;
  var map__15396__15399 = cljs.core.seq_QMARK_.call(null, map__15396__15398) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15396__15398) : map__15396__15398;
  var ew__15400 = cljs.core._lookup.call(null, map__15396__15399, "\ufdd0'width", null);
  var eh__15401 = cljs.core._lookup.call(null, map__15396__15399, "\ufdd0'height", null);
  var x__15402 = cljs.core._lookup.call(null, map__15396__15399, "\ufdd0'x", null);
  var y__15403 = cljs.core._lookup.call(null, map__15396__15399, "\ufdd0'y", null);
  var map__15397__15404 = container;
  var map__15397__15405 = cljs.core.seq_QMARK_.call(null, map__15397__15404) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15397__15404) : map__15397__15404;
  var w__15406 = cljs.core._lookup.call(null, map__15397__15405, "\ufdd0'width", null);
  var h__15407 = cljs.core._lookup.call(null, map__15397__15405, "\ufdd0'height", null);
  var s__15408 = h__15407 / eh__15401 < w__15406 / ew__15400 ? h__15407 / eh__15401 : w__15406 / ew__15400;
  return[cljs.core.str(c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([w__15406 / 2 - s__15408 * (ew__15400 / 2), h__15407 / 2 - s__15408 * (eh__15401 / 2)], true))), cljs.core.str(" "), cljs.core.str(c2.svg.scale.call(null, s__15408)), cljs.core.str(" "), cljs.core.str(c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([-x__15402, -y__15403], true)))].join("")
};
c2.svg.transform_to_center_BANG_ = function transform_to_center_BANG_($svg_el) {
  var $svg__15411 = $svg_el.ownerSVGElement;
  var t__15412 = c2.svg.transform_to_center.call(null, c2.svg.get_bounds.call(null, $svg_el), cljs.core.ObjMap.fromObject(["\ufdd0'width", "\ufdd0'height"], {"\ufdd0'width":parseFloat(c2.dom.attr.call(null, $svg__15411, "\ufdd0'width")), "\ufdd0'height":parseFloat(c2.dom.attr.call(null, $svg__15411, "\ufdd0'height"))}));
  return c2.dom.attr.call(null, $svg_el, "\ufdd0'transform", t__15412)
};
c2.svg.axis = function() {
  var axis__delegate = function(scale, ticks, p__15413) {
    var map__15438__15439 = p__15413;
    var map__15438__15440 = cljs.core.seq_QMARK_.call(null, map__15438__15439) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15438__15439) : map__15438__15439;
    var label_margin__15441 = cljs.core._lookup.call(null, map__15438__15440, "\ufdd0'label-margin", 28);
    var label__15442 = cljs.core._lookup.call(null, map__15438__15440, "\ufdd0'label", null);
    var text_margin__15443 = cljs.core._lookup.call(null, map__15438__15440, "\ufdd0'text-margin", 9);
    var major_tick_width__15444 = cljs.core._lookup.call(null, map__15438__15440, "\ufdd0'major-tick-width", 6);
    var formatter__15445 = cljs.core._lookup.call(null, map__15438__15440, "\ufdd0'formatter", cljs.core.str);
    var orientation__15446 = cljs.core._lookup.call(null, map__15438__15440, "\ufdd0'orientation", "\ufdd0'left");
    var vec__15447__15450 = function() {
      var G__15448__15449 = orientation__15446;
      if(cljs.core._EQ_.call(null, "\ufdd0'bottom", G__15448__15449)) {
        return cljs.core.PersistentVector.fromArray(["\ufdd0'y", "\ufdd0'x", "\ufdd0'y1", "\ufdd0'y2", "\ufdd0'x1", "\ufdd0'x2"], true)
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'top", G__15448__15449)) {
          return cljs.core.PersistentVector.fromArray(["\ufdd0'y", "\ufdd0'x", "\ufdd0'y1", "\ufdd0'y2", "\ufdd0'x1", "\ufdd0'x2"], true)
        }else {
          if(cljs.core._EQ_.call(null, "\ufdd0'right", G__15448__15449)) {
            return cljs.core.PersistentVector.fromArray(["\ufdd0'x", "\ufdd0'y", "\ufdd0'x1", "\ufdd0'x2", "\ufdd0'y1", "\ufdd0'y2"], true)
          }else {
            if(cljs.core._EQ_.call(null, "\ufdd0'left", G__15448__15449)) {
              return cljs.core.PersistentVector.fromArray(["\ufdd0'x", "\ufdd0'y", "\ufdd0'x1", "\ufdd0'x2", "\ufdd0'y1", "\ufdd0'y2"], true)
            }else {
              if("\ufdd0'else") {
                throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(orientation__15446)].join(""));
              }else {
                return null
              }
            }
          }
        }
      }
    }();
    var x__15451 = cljs.core.nth.call(null, vec__15447__15450, 0, null);
    var y__15452 = cljs.core.nth.call(null, vec__15447__15450, 1, null);
    var x1__15453 = cljs.core.nth.call(null, vec__15447__15450, 2, null);
    var x2__15454 = cljs.core.nth.call(null, vec__15447__15450, 3, null);
    var y1__15455 = cljs.core.nth.call(null, vec__15447__15450, 4, null);
    var y2__15456 = cljs.core.nth.call(null, vec__15447__15450, 5, null);
    var parity__15459 = function() {
      var G__15457__15458 = orientation__15446;
      if(cljs.core._EQ_.call(null, "\ufdd0'bottom", G__15457__15458)) {
        return 1
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'right", G__15457__15458)) {
          return 1
        }else {
          if(cljs.core._EQ_.call(null, "\ufdd0'top", G__15457__15458)) {
            return-1
          }else {
            if(cljs.core._EQ_.call(null, "\ufdd0'left", G__15457__15458)) {
              return-1
            }else {
              if("\ufdd0'else") {
                throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(orientation__15446)].join(""));
              }else {
                return null
              }
            }
          }
        }
      }
    }();
    return cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.ObjMap.fromObject(["\ufdd0'class"], {"\ufdd0'class":[cljs.core.str("axis "), cljs.core.str(cljs.core.name.call(null, orientation__15446))].join("")}), cljs.core.PersistentVector.fromArray(["\ufdd0'line.rule", cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.interleave.call(null, cljs.core.PersistentVector.fromArray([y1__15455, y2__15456], true), (new cljs.core.Keyword("\ufdd0'range")).call(null, scale)))], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.ticks", 
    c2.core.unify.call(null, ticks, function(d) {
      return cljs.core.PersistentVector.fromArray(["\ufdd0'g.tick.major-tick", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentArrayMap.fromArrays([x__15451, y__15452], [0, scale.call(null, d)]))}), cljs.core.PersistentVector.fromArray(["\ufdd0'text", cljs.core.PersistentArrayMap.fromArrays([x__15451], [parity__15459 * text_margin__15443]), formatter__15445.call(null, d)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'line", 
      cljs.core.PersistentArrayMap.fromArrays([x1__15453, x2__15454], [0, parity__15459 * major_tick_width__15444])], true)], true)
    })], true), cljs.core.truth_(label__15442) ? cljs.core.PersistentVector.fromArray(["\ufdd0'text.label", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":[cljs.core.str(c2.svg.translate.call(null, cljs.core.PersistentArrayMap.fromArrays([x__15451, y__15452], [parity__15459 * label_margin__15441, c2.maths.mean.call(null, (new cljs.core.Keyword("\ufdd0'range")).call(null, scale))]))), cljs.core.str(" "), cljs.core.str(function() {
      var G__15460__15461 = orientation__15446;
      if(cljs.core._EQ_.call(null, "\ufdd0'right", G__15460__15461)) {
        return c2.svg.rotate.call(null, 90)
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'left", G__15460__15461)) {
          return c2.svg.rotate.call(null, -90)
        }else {
          if("\ufdd0'else") {
            return""
          }else {
            return null
          }
        }
      }
    }())].join("")}), label__15442], true) : null], true)
  };
  var axis = function(scale, ticks, var_args) {
    var p__15413 = null;
    if(goog.isDef(var_args)) {
      p__15413 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return axis__delegate.call(this, scale, ticks, p__15413)
  };
  axis.cljs$lang$maxFixedArity = 2;
  axis.cljs$lang$applyTo = function(arglist__15462) {
    var scale = cljs.core.first(arglist__15462);
    var ticks = cljs.core.first(cljs.core.next(arglist__15462));
    var p__15413 = cljs.core.rest(cljs.core.next(arglist__15462));
    return axis__delegate(scale, ticks, p__15413)
  };
  axis.cljs$lang$arity$variadic = axis__delegate;
  return axis
}();
c2.svg.ArcMax = c2.maths.Tau - 1.0E-7;
c2.svg.circle = function() {
  var circle = null;
  var circle__1 = function(radius) {
    return circle.call(null, cljs.core.PersistentVector.fromArray([0, 0], true), radius)
  };
  var circle__2 = function(coordinates, radius) {
    var vec__15467__15468 = c2.svg.__GT_xy.call(null, coordinates);
    var x__15469 = cljs.core.nth.call(null, vec__15467__15468, 0, null);
    var y__15470 = cljs.core.nth.call(null, vec__15467__15468, 1, null);
    return[cljs.core.str("M"), cljs.core.str(x__15469 + radius), cljs.core.str(","), cljs.core.str(y__15470), cljs.core.str("A"), cljs.core.str(x__15469 + radius), cljs.core.str(","), cljs.core.str(y__15470 + radius), cljs.core.str(" 0 1,1"), cljs.core.str(-(x__15469 + radius)), cljs.core.str(","), cljs.core.str(y__15470), cljs.core.str("A"), cljs.core.str(x__15469 + radius), cljs.core.str(","), cljs.core.str(y__15470 + radius), cljs.core.str(" 0 1,1"), cljs.core.str(x__15469 + radius), cljs.core.str(","), 
    cljs.core.str(y__15470)].join("")
  };
  circle = function(coordinates, radius) {
    switch(arguments.length) {
      case 1:
        return circle__1.call(this, coordinates);
      case 2:
        return circle__2.call(this, coordinates, radius)
    }
    throw"Invalid arity: " + arguments.length;
  };
  circle.cljs$lang$arity$1 = circle__1;
  circle.cljs$lang$arity$2 = circle__2;
  return circle
}();
c2.svg.arc = function() {
  var arc__delegate = function(p__15471) {
    var map__15492__15493 = p__15471;
    var map__15492__15494 = cljs.core.seq_QMARK_.call(null, map__15492__15493) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15492__15493) : map__15492__15493;
    var angle_offset__15495 = cljs.core._lookup.call(null, map__15492__15494, "\ufdd0'angle-offset", 0);
    var end_angle__15496 = cljs.core._lookup.call(null, map__15492__15494, "\ufdd0'end-angle", c2.maths.Pi);
    var start_angle__15497 = cljs.core._lookup.call(null, map__15492__15494, "\ufdd0'start-angle", 0);
    var outer_radius__15498 = cljs.core._lookup.call(null, map__15492__15494, "\ufdd0'outer-radius", 1);
    var inner_radius__15499 = cljs.core._lookup.call(null, map__15492__15494, "\ufdd0'inner-radius", 0);
    var r0__15501 = inner_radius__15499;
    var r1__15502 = outer_radius__15498;
    var vec__15500__15503 = cljs.core.sort.call(null, cljs.core.PersistentVector.fromArray([angle_offset__15495 + start_angle__15497, angle_offset__15495 + end_angle__15496], true));
    var a0__15504 = cljs.core.nth.call(null, vec__15500__15503, 0, null);
    var a1__15505 = cljs.core.nth.call(null, vec__15500__15503, 1, null);
    var da__15506 = a1__15505 - a0__15504;
    var large_arc_flag__15507 = da__15506 < c2.maths.Pi ? "0" : "1";
    var s0__15508 = c2.maths.sin.call(null, a0__15504);
    var c0__15509 = c2.maths.cos.call(null, a0__15504);
    var s1__15510 = c2.maths.sin.call(null, a1__15505);
    var c1__15511 = c2.maths.cos.call(null, a1__15505);
    if(da__15506 >= c2.svg.ArcMax) {
      return[cljs.core.str("M0,"), cljs.core.str(r1__15502), cljs.core.str("A"), cljs.core.str(r1__15502), cljs.core.str(","), cljs.core.str(r1__15502), cljs.core.str(" 0 1,1 0,"), cljs.core.str(-r1__15502), cljs.core.str("A"), cljs.core.str(r1__15502), cljs.core.str(","), cljs.core.str(r1__15502), cljs.core.str(" 0 1,1 0,"), cljs.core.str(r1__15502), cljs.core.str(cljs.core.not_EQ_.call(null, 0, r0__15501) ? [cljs.core.str("M0,"), cljs.core.str(r0__15501), cljs.core.str("A"), cljs.core.str(r0__15501), 
      cljs.core.str(","), cljs.core.str(r0__15501), cljs.core.str(" 0 1,0 0,"), cljs.core.str(-r0__15501), cljs.core.str("A"), cljs.core.str(r0__15501), cljs.core.str(","), cljs.core.str(r0__15501), cljs.core.str(" 0 1,0 0,"), cljs.core.str(r0__15501)].join("") : null), cljs.core.str("Z")].join("")
    }else {
      return[cljs.core.str("M"), cljs.core.str(r1__15502 * c0__15509), cljs.core.str(","), cljs.core.str(r1__15502 * s0__15508), cljs.core.str("A"), cljs.core.str(r1__15502), cljs.core.str(","), cljs.core.str(r1__15502), cljs.core.str(" 0 "), cljs.core.str(large_arc_flag__15507), cljs.core.str(",1 "), cljs.core.str(r1__15502 * c1__15511), cljs.core.str(","), cljs.core.str(r1__15502 * s1__15510), cljs.core.str(cljs.core.not_EQ_.call(null, 0, r0__15501) ? [cljs.core.str("L"), cljs.core.str(r0__15501 * 
      c1__15511), cljs.core.str(","), cljs.core.str(r0__15501 * s1__15510), cljs.core.str("A"), cljs.core.str(r0__15501), cljs.core.str(","), cljs.core.str(r0__15501), cljs.core.str(" 0 "), cljs.core.str(large_arc_flag__15507), cljs.core.str(",0 "), cljs.core.str(r0__15501 * c0__15509), cljs.core.str(","), cljs.core.str(r0__15501 * s0__15508)].join("") : "L0,0"), cljs.core.str("Z")].join("")
    }
  };
  var arc = function(var_args) {
    var p__15471 = null;
    if(goog.isDef(var_args)) {
      p__15471 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return arc__delegate.call(this, p__15471)
  };
  arc.cljs$lang$maxFixedArity = 0;
  arc.cljs$lang$applyTo = function(arglist__15512) {
    var p__15471 = cljs.core.seq(arglist__15512);
    return arc__delegate(p__15471)
  };
  arc.cljs$lang$arity$variadic = arc__delegate;
  return arc
}();
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.array");
goog.require("goog.events");
goog.require("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_handler) {
  goog.Disposable.call(this);
  this.handler_ = opt_handler;
  this.keys_ = []
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(!goog.isArray(type)) {
    goog.events.EventHandler.typeArray_[0] = type;
    type = goog.events.EventHandler.typeArray_
  }
  for(var i = 0;i < type.length;i++) {
    var key = goog.events.listen(src, type[i], opt_fn || this, opt_capture || false, opt_handler || this.handler_ || this);
    this.keys_.push(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.listenOnce(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var key = goog.events.listenOnce(src, type, opt_fn || this, opt_capture, opt_handler || this.handler_ || this);
    this.keys_.push(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler || this.handler_, this);
  return this
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  return this.keys_.length
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var listener = goog.events.getListener(src, type, opt_fn || this, opt_capture, opt_handler || this.handler_ || this);
    if(listener) {
      var key = listener.key;
      goog.events.unlistenByKey(key);
      goog.array.remove(this.keys_, key)
    }
  }
  return this
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler || this.handler_, this);
  return this
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.array.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_.length = 0
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll()
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.fx.DragEvent");
goog.provide("goog.fx.Dragger");
goog.provide("goog.fx.Dragger.EventType");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.Event");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.userAgent");
goog.fx.Dragger = function(target, opt_handle, opt_limits) {
  goog.events.EventTarget.call(this);
  this.target = target;
  this.handle = opt_handle || target;
  this.limits = opt_limits || new goog.math.Rect(NaN, NaN, NaN, NaN);
  this.document_ = goog.dom.getOwnerDocument(target);
  this.eventHandler_ = new goog.events.EventHandler(this);
  goog.events.listen(this.handle, [goog.events.EventType.TOUCHSTART, goog.events.EventType.MOUSEDOWN], this.startDrag, false, this)
};
goog.inherits(goog.fx.Dragger, goog.events.EventTarget);
goog.fx.Dragger.HAS_SET_CAPTURE_ = goog.userAgent.IE || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.3");
goog.fx.Dragger.EventType = {EARLY_CANCEL:"earlycancel", START:"start", BEFOREDRAG:"beforedrag", DRAG:"drag", END:"end"};
goog.fx.Dragger.prototype.target;
goog.fx.Dragger.prototype.handle;
goog.fx.Dragger.prototype.limits;
goog.fx.Dragger.prototype.clientX = 0;
goog.fx.Dragger.prototype.clientY = 0;
goog.fx.Dragger.prototype.screenX = 0;
goog.fx.Dragger.prototype.screenY = 0;
goog.fx.Dragger.prototype.startX = 0;
goog.fx.Dragger.prototype.startY = 0;
goog.fx.Dragger.prototype.deltaX = 0;
goog.fx.Dragger.prototype.deltaY = 0;
goog.fx.Dragger.prototype.pageScroll;
goog.fx.Dragger.prototype.enabled_ = true;
goog.fx.Dragger.prototype.dragging_ = false;
goog.fx.Dragger.prototype.hysteresisDistanceSquared_ = 0;
goog.fx.Dragger.prototype.mouseDownTime_ = 0;
goog.fx.Dragger.prototype.document_;
goog.fx.Dragger.prototype.eventHandler_;
goog.fx.Dragger.prototype.scrollTarget_;
goog.fx.Dragger.prototype.ieDragStartCancellingOn_ = false;
goog.fx.Dragger.prototype.getHandler = function() {
  return this.eventHandler_
};
goog.fx.Dragger.prototype.setLimits = function(limits) {
  this.limits = limits || new goog.math.Rect(NaN, NaN, NaN, NaN)
};
goog.fx.Dragger.prototype.setHysteresis = function(distance) {
  this.hysteresisDistanceSquared_ = Math.pow(distance, 2)
};
goog.fx.Dragger.prototype.getHysteresis = function() {
  return Math.sqrt(this.hysteresisDistanceSquared_)
};
goog.fx.Dragger.prototype.setScrollTarget = function(scrollTarget) {
  this.scrollTarget_ = scrollTarget
};
goog.fx.Dragger.prototype.setCancelIeDragStart = function(cancelIeDragStart) {
  this.ieDragStartCancellingOn_ = cancelIeDragStart
};
goog.fx.Dragger.prototype.getEnabled = function() {
  return this.enabled_
};
goog.fx.Dragger.prototype.setEnabled = function(enabled) {
  this.enabled_ = enabled
};
goog.fx.Dragger.prototype.disposeInternal = function() {
  goog.fx.Dragger.superClass_.disposeInternal.call(this);
  goog.events.unlisten(this.handle, [goog.events.EventType.TOUCHSTART, goog.events.EventType.MOUSEDOWN], this.startDrag, false, this);
  this.eventHandler_.dispose();
  delete this.target;
  delete this.handle;
  delete this.eventHandler_
};
goog.fx.Dragger.prototype.startDrag = function(e) {
  var isMouseDown = e.type == goog.events.EventType.MOUSEDOWN;
  if(this.enabled_ && !this.dragging_ && (!isMouseDown || e.isMouseActionButton())) {
    this.maybeReinitTouchEvent_(e);
    if(this.hysteresisDistanceSquared_ == 0) {
      this.initializeDrag_(e);
      if(this.dragging_) {
        e.preventDefault()
      }else {
        return
      }
    }else {
      e.preventDefault()
    }
    this.setupDragHandlers();
    this.clientX = this.startX = e.clientX;
    this.clientY = this.startY = e.clientY;
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    this.deltaX = this.target.offsetLeft;
    this.deltaY = this.target.offsetTop;
    this.pageScroll = goog.dom.getDomHelper(this.document_).getDocumentScroll();
    this.mouseDownTime_ = goog.now()
  }else {
    this.dispatchEvent(goog.fx.Dragger.EventType.EARLY_CANCEL)
  }
};
goog.fx.Dragger.prototype.setupDragHandlers = function() {
  var doc = this.document_;
  var docEl = doc.documentElement;
  var useCapture = !goog.fx.Dragger.HAS_SET_CAPTURE_;
  this.eventHandler_.listen(doc, [goog.events.EventType.TOUCHMOVE, goog.events.EventType.MOUSEMOVE], this.handleMove_, useCapture);
  this.eventHandler_.listen(doc, [goog.events.EventType.TOUCHEND, goog.events.EventType.MOUSEUP], this.endDrag, useCapture);
  if(goog.fx.Dragger.HAS_SET_CAPTURE_) {
    docEl.setCapture(false);
    this.eventHandler_.listen(docEl, goog.events.EventType.LOSECAPTURE, this.endDrag)
  }else {
    this.eventHandler_.listen(goog.dom.getWindow(doc), goog.events.EventType.BLUR, this.endDrag)
  }
  if(goog.userAgent.IE && this.ieDragStartCancellingOn_) {
    this.eventHandler_.listen(doc, goog.events.EventType.DRAGSTART, goog.events.Event.preventDefault)
  }
  if(this.scrollTarget_) {
    this.eventHandler_.listen(this.scrollTarget_, goog.events.EventType.SCROLL, this.onScroll_, useCapture)
  }
};
goog.fx.Dragger.prototype.initializeDrag_ = function(e) {
  var rv = this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.START, this, e.clientX, e.clientY, e));
  if(rv !== false) {
    this.dragging_ = true
  }
};
goog.fx.Dragger.prototype.endDrag = function(e, opt_dragCanceled) {
  this.eventHandler_.removeAll();
  if(goog.fx.Dragger.HAS_SET_CAPTURE_) {
    this.document_.releaseCapture()
  }
  var x = this.limitX(this.deltaX);
  var y = this.limitY(this.deltaY);
  if(this.dragging_) {
    this.maybeReinitTouchEvent_(e);
    this.dragging_ = false;
    var dragCancelled = opt_dragCanceled || e.type == goog.events.EventType.TOUCHCANCEL;
    this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.END, this, e.clientX, e.clientY, e, x, y, dragCancelled))
  }else {
    this.dispatchEvent(goog.fx.Dragger.EventType.EARLY_CANCEL)
  }
  if(e.type == goog.events.EventType.TOUCHEND || e.type == goog.events.EventType.TOUCHCANCEL) {
    e.preventDefault()
  }
};
goog.fx.Dragger.prototype.endDragCancel = function(e) {
  this.endDrag(e, true)
};
goog.fx.Dragger.prototype.maybeReinitTouchEvent_ = function(e) {
  var type = e.type;
  if(type == goog.events.EventType.TOUCHSTART || type == goog.events.EventType.TOUCHMOVE) {
    e.init(e.getBrowserEvent().targetTouches[0], e.currentTarget)
  }else {
    if(type == goog.events.EventType.TOUCHEND || type == goog.events.EventType.TOUCHCANCEL) {
      e.init(e.getBrowserEvent().changedTouches[0], e.currentTarget)
    }
  }
};
goog.fx.Dragger.prototype.handleMove_ = function(e) {
  if(this.enabled_) {
    this.maybeReinitTouchEvent_(e);
    var dx = e.clientX - this.clientX;
    var dy = e.clientY - this.clientY;
    this.clientX = e.clientX;
    this.clientY = e.clientY;
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    if(!this.dragging_) {
      var diffX = this.startX - this.clientX;
      var diffY = this.startY - this.clientY;
      var distance = diffX * diffX + diffY * diffY;
      if(distance > this.hysteresisDistanceSquared_) {
        this.initializeDrag_(e);
        if(!this.dragging_) {
          this.endDrag(e);
          return
        }
      }
    }
    var pos = this.calculatePosition_(dx, dy);
    var x = pos.x;
    var y = pos.y;
    if(this.dragging_) {
      var rv = this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.BEFOREDRAG, this, e.clientX, e.clientY, e, x, y));
      if(rv !== false) {
        this.doDrag(e, x, y, false);
        e.preventDefault()
      }
    }
  }
};
goog.fx.Dragger.prototype.calculatePosition_ = function(dx, dy) {
  var pageScroll = goog.dom.getDomHelper(this.document_).getDocumentScroll();
  dx += pageScroll.x - this.pageScroll.x;
  dy += pageScroll.y - this.pageScroll.y;
  this.pageScroll = pageScroll;
  this.deltaX += dx;
  this.deltaY += dy;
  var x = this.limitX(this.deltaX);
  var y = this.limitY(this.deltaY);
  return new goog.math.Coordinate(x, y)
};
goog.fx.Dragger.prototype.onScroll_ = function(e) {
  var pos = this.calculatePosition_(0, 0);
  e.clientX = this.clientX;
  e.clientY = this.clientY;
  this.doDrag(e, pos.x, pos.y, true)
};
goog.fx.Dragger.prototype.doDrag = function(e, x, y, dragFromScroll) {
  this.defaultAction(x, y);
  this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.DRAG, this, e.clientX, e.clientY, e, x, y))
};
goog.fx.Dragger.prototype.limitX = function(x) {
  var rect = this.limits;
  var left = !isNaN(rect.left) ? rect.left : null;
  var width = !isNaN(rect.width) ? rect.width : 0;
  var maxX = left != null ? left + width : Infinity;
  var minX = left != null ? left : -Infinity;
  return Math.min(maxX, Math.max(minX, x))
};
goog.fx.Dragger.prototype.limitY = function(y) {
  var rect = this.limits;
  var top = !isNaN(rect.top) ? rect.top : null;
  var height = !isNaN(rect.height) ? rect.height : 0;
  var maxY = top != null ? top + height : Infinity;
  var minY = top != null ? top : -Infinity;
  return Math.min(maxY, Math.max(minY, y))
};
goog.fx.Dragger.prototype.defaultAction = function(x, y) {
  this.target.style.left = x + "px";
  this.target.style.top = y + "px"
};
goog.fx.DragEvent = function(type, dragobj, clientX, clientY, browserEvent, opt_actX, opt_actY, opt_dragCanceled) {
  goog.events.Event.call(this, type);
  this.clientX = clientX;
  this.clientY = clientY;
  this.browserEvent = browserEvent;
  this.left = goog.isDef(opt_actX) ? opt_actX : dragobj.deltaX;
  this.top = goog.isDef(opt_actY) ? opt_actY : dragobj.deltaY;
  this.dragger = dragobj;
  this.dragCanceled = !!opt_dragCanceled
};
goog.inherits(goog.fx.DragEvent, goog.events.Event);
goog.provide("vcfvis.brush");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.fx.Dragger");
goog.require("c2.svg");
goog.require("c2.scale");
goog.require("c2.dom");
vcfvis.brush.SVGDrag = function SVGDrag(el) {
  return goog.fx.Dragger.call(this, el)
};
goog.inherits(vcfvis.brush.SVGDrag, goog.fx.Dragger);
vcfvis.brush.SVGDrag.prototype.defaultAction = function(x, y) {
  return"Do nothing"
};
vcfvis.brush.mouse_point = function mouse_point($container, e) {
  var point__9892 = function() {
    var or__3824__auto____9891 = $container.ownerSVGElement;
    if(cljs.core.truth_(or__3824__auto____9891)) {
      return or__3824__auto____9891
    }else {
      return $container
    }
  }().createSVGPoint();
  point__9892.x = e.clientX;
  point__9892.y = e.clientY;
  var point__9893 = point__9892.matrixTransform($container.getScreenCTM().inverse());
  return cljs.core.PersistentVector.fromArray([point__9893.x, point__9893.y], true)
};
vcfvis.brush.resize_path_d = function resize_path_d(height, direction) {
  var vec__9901__9904 = function() {
    var G__9902__9903 = direction;
    if(cljs.core._EQ_.call(null, "\ufdd0'east", G__9902__9903)) {
      return cljs.core.PersistentVector.fromArray([1, 1], true)
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0'west", G__9902__9903)) {
        return cljs.core.PersistentVector.fromArray([-1, 0], true)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(direction)].join(""));
        }else {
          return null
        }
      }
    }
  }();
  var x__9905 = cljs.core.nth.call(null, vec__9901__9904, 0, null);
  var e__9906 = cljs.core.nth.call(null, vec__9901__9904, 1, null);
  return[cljs.core.str("M"), cljs.core.str(0.5 * x__9905), cljs.core.str(","), cljs.core.str(height), cljs.core.str("A6,6 0 0 "), cljs.core.str(e__9906), cljs.core.str(" "), cljs.core.str(6.5 * x__9905), cljs.core.str(","), cljs.core.str(height + 6), cljs.core.str("V"), cljs.core.str(2 * height - 6), cljs.core.str("A6,6 0 0 "), cljs.core.str(e__9906), cljs.core.str(" "), cljs.core.str(0.5 * x__9905), cljs.core.str(","), cljs.core.str(2 * height), cljs.core.str("Z"), cljs.core.str("M"), cljs.core.str(2.5 * 
  x__9905), cljs.core.str(","), cljs.core.str(height + 8), cljs.core.str("V"), cljs.core.str(2 * height - 8), cljs.core.str("M"), cljs.core.str(4.5 * x__9905), cljs.core.str(","), cljs.core.str(height + 8), cljs.core.str("V"), cljs.core.str(2 * height - 8)].join("")
};
vcfvis.brush.init_BANG_ = function init_BANG_(el, scale_x, scale_y) {
  var width__9985 = function() {
    var vec__9981__9982 = (new cljs.core.Keyword("\ufdd0'range")).call(null, scale_x);
    var xmin__9983 = cljs.core.nth.call(null, vec__9981__9982, 0, null);
    var xmax__9984 = cljs.core.nth.call(null, vec__9981__9982, 1, null);
    return xmax__9984 - xmin__9983
  }();
  var ix__9986 = c2.scale.invert.call(null, scale_x);
  var height__9991 = function() {
    var vec__9987__9988 = (new cljs.core.Keyword("\ufdd0'range")).call(null, scale_y);
    var ymin__9989 = cljs.core.nth.call(null, vec__9987__9988, 0, null);
    var ymax__9990 = cljs.core.nth.call(null, vec__9987__9988, 1, null);
    return ymax__9990 - ymin__9989
  }();
  var _BANG_extent__9992 = cljs.core.atom.call(null, cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([0, 0], true), cljs.core.PersistentVector.fromArray([0, 0], true)], true));
  var $brush__9993 = c2.dom.append_BANG_.call(null, el, cljs.core.PersistentVector.fromArray(["\ufdd0'g.brush"], true));
  var co__7939__auto____10005 = function() {
    var co__6008__auto____10004 = new reflex.core.ComputedObservable(null, true, function() {
      var vec__9994__9997 = cljs.core.deref.call(null, _BANG_extent__9992);
      var vec__9995__9998 = cljs.core.nth.call(null, vec__9994__9997, 0, null);
      var x1__9999 = cljs.core.nth.call(null, vec__9995__9998, 0, null);
      var x2__10000 = cljs.core.nth.call(null, vec__9995__9998, 1, null);
      var vec__9996__10001 = cljs.core.nth.call(null, vec__9994__9997, 1, null);
      var y1__10002 = cljs.core.nth.call(null, vec__9996__10001, 0, null);
      var y2__10003 = cljs.core.nth.call(null, vec__9996__10001, 1, null);
      return cljs.core.PersistentVector.fromArray(["\ufdd0'g.brush", cljs.core.ObjMap.fromObject(["\ufdd0'style"], {"\ufdd0'style":cljs.core.ObjMap.fromObject(["\ufdd0'visibility"], {"\ufdd0'visibility":x1__9999 - x2__10000 === 0 ? "hidden" : null})}), cljs.core.PersistentVector.fromArray(["\ufdd0'rect.background", cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":0, "\ufdd0'width":width__9985, "\ufdd0'height":height__9991})], true), cljs.core.PersistentVector.fromArray(["\ufdd0'rect.extent", 
      cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":scale_x.call(null, x1__9999), "\ufdd0'width":scale_x.call(null, x2__10000) - scale_x.call(null, x1__9999), "\ufdd0'height":height__9991})], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.resize.w", cljs.core.PersistentVector.fromArray(["\ufdd0'path", cljs.core.ObjMap.fromObject(["\ufdd0'transform", "\ufdd0'd"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([scale_x.call(null, 
      x1__9999), 0], true)), "\ufdd0'd":vcfvis.brush.resize_path_d.call(null, height__9991 / 3, "\ufdd0'west")})], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.resize.e", cljs.core.PersistentVector.fromArray(["\ufdd0'path", cljs.core.ObjMap.fromObject(["\ufdd0'transform", "\ufdd0'd"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([scale_x.call(null, x2__10000), 0], true)), "\ufdd0'd":vcfvis.brush.resize_path_d.call(null, height__9991 / 3, "\ufdd0'east")})], 
      true)], true)], true)
    }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
    cljs.core.deref.call(null, co__6008__auto____10004);
    return co__6008__auto____10004
  }();
  var $el__7940__auto____10006 = c2.dom.__GT_dom.call(null, $brush__9993);
  singult.core.merge_BANG_.call(null, $el__7940__auto____10006, cljs.core.deref.call(null, co__7939__auto____10005));
  cljs.core.add_watch.call(null, co__7939__auto____10005, "\ufdd0'update-dom", function() {
    return singult.core.merge_BANG_.call(null, $el__7940__auto____10006, cljs.core.deref.call(null, co__7939__auto____10005))
  });
  co__7939__auto____10005;
  var $background__10007 = c2.dom.select.call(null, ".background", $brush__9993);
  var _BANG_creating_QMARK___10008 = cljs.core.atom.call(null, false);
  goog.events.listen($background__10007, "mousedown", function(e) {
    cljs.core.reset_BANG_.call(null, _BANG_creating_QMARK___10008, true);
    var vec__10009__10010 = vcfvis.brush.mouse_point.call(null, $background__10007, e);
    var x__10011 = cljs.core.nth.call(null, vec__10009__10010, 0, null);
    var y__10012 = cljs.core.nth.call(null, vec__10009__10010, 1, null);
    var x__10013 = ix__9986.call(null, x__10011);
    return cljs.core.swap_BANG_.call(null, _BANG_extent__9992, function(p1__9894_SHARP_) {
      return cljs.core.assoc_in.call(null, p1__9894_SHARP_, cljs.core.PersistentVector.fromArray([0], true), cljs.core.PersistentVector.fromArray([x__10013, x__10013], true))
    })
  });
  goog.events.listen($brush__9993, "mouseup", function(_) {
    return cljs.core.reset_BANG_.call(null, _BANG_creating_QMARK___10008, false)
  });
  goog.events.listen($brush__9993, "mousemove", function(e) {
    if(cljs.core.truth_(cljs.core.deref.call(null, _BANG_creating_QMARK___10008))) {
      var vec__10014__10015 = vcfvis.brush.mouse_point.call(null, $background__10007, e);
      var x__10016 = cljs.core.nth.call(null, vec__10014__10015, 0, null);
      var y__10017 = cljs.core.nth.call(null, vec__10014__10015, 1, null);
      var x__10018 = ix__9986.call(null, x__10016);
      return cljs.core.swap_BANG_.call(null, _BANG_extent__9992, function(p__10019) {
        var vec__10020__10022 = p__10019;
        var vec__10021__10023 = cljs.core.nth.call(null, vec__10020__10022, 0, null);
        var x1__10024 = cljs.core.nth.call(null, vec__10021__10023, 0, null);
        var x2__10025 = cljs.core.nth.call(null, vec__10021__10023, 1, null);
        var ys__10026 = cljs.core.nth.call(null, vec__10020__10022, 1, null);
        return cljs.core.PersistentVector.fromArray([x__10018 > x1__10024 ? cljs.core.PersistentVector.fromArray([x1__10024, x__10018], true) : cljs.core.PersistentVector.fromArray([x__10018, x2__10025], true), ys__10026], true)
      })
    }else {
      return null
    }
  });
  goog.events.listen($brush__9993, "mouseout", function(e) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____10027 = e.relatedTarget;
      if(cljs.core.truth_(and__3822__auto____10027)) {
        return goog.dom.contains($brush__9993, e.relatedTarget)
      }else {
        return and__3822__auto____10027
      }
    }())) {
      return null
    }else {
      return cljs.core.reset_BANG_.call(null, _BANG_creating_QMARK___10008, false)
    }
  });
  var _BANG_extent_at_start__10029 = cljs.core.atom.call(null, null);
  var vec__10028__10030 = (new cljs.core.Keyword("\ufdd0'domain")).call(null, scale_x);
  var xmin__10031 = cljs.core.nth.call(null, vec__10028__10030, 0, null);
  var xmax__10032 = cljs.core.nth.call(null, vec__10028__10030, 1, null);
  var min_extent__10033 = ix__9986.call(null, 10);
  var start_drag_BANG___10034 = function() {
    return cljs.core.reset_BANG_.call(null, _BANG_extent_at_start__10029, cljs.core.deref.call(null, _BANG_extent__9992))
  };
  var drag_fn_BANG___10045 = function(dragger, transform_x) {
    return goog.events.listen(dragger, goog.fx.Dragger.EventType.DRAG, function(e) {
      var vec__10035__10037 = cljs.core.deref.call(null, _BANG_extent_at_start__10029);
      var vec__10036__10038 = cljs.core.nth.call(null, vec__10035__10037, 0, null);
      var x1__10039 = cljs.core.nth.call(null, vec__10036__10038, 0, null);
      var x2__10040 = cljs.core.nth.call(null, vec__10036__10038, 1, null);
      var ys__10041 = cljs.core.nth.call(null, vec__10035__10037, 1, null);
      var w__10042 = x2__10040 - x1__10039;
      var dx__10043 = ix__9986.call(null, e.left) - ix__9986.call(null, 0);
      var xs__10044 = transform_x.call(null, dx__10043, x1__10039, x2__10040, w__10042);
      return cljs.core.reset_BANG_.call(null, _BANG_extent__9992, cljs.core.PersistentVector.fromArray([xs__10044, ys__10041], true))
    })
  };
  var dragger__10046 = new vcfvis.brush.SVGDrag(c2.dom.select.call(null, ".extent", $brush__9993));
  var left__10047 = new vcfvis.brush.SVGDrag(c2.dom.select.call(null, ".resize.w", $brush__9993));
  var right__10048 = new vcfvis.brush.SVGDrag(c2.dom.select.call(null, ".resize.e", $brush__9993));
  var G__10049__10050 = cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([dragger__10046, left__10047, right__10048], true));
  if(G__10049__10050) {
    var d__10051 = cljs.core.first.call(null, G__10049__10050);
    var G__10049__10052 = G__10049__10050;
    while(true) {
      goog.events.listen(d__10051, goog.fx.Dragger.EventType.START, start_drag_BANG___10034);
      var temp__3974__auto____10053 = cljs.core.next.call(null, G__10049__10052);
      if(temp__3974__auto____10053) {
        var G__10049__10054 = temp__3974__auto____10053;
        var G__10055 = cljs.core.first.call(null, G__10049__10054);
        var G__10056 = G__10049__10054;
        d__10051 = G__10055;
        G__10049__10052 = G__10056;
        continue
      }else {
      }
      break
    }
  }else {
  }
  drag_fn_BANG___10045.call(null, dragger__10046, function(dx, x1, x2, w) {
    if(dx + x1 < xmin__10031) {
      return cljs.core.PersistentVector.fromArray([xmin__10031, xmin__10031 + w], true)
    }else {
      if(dx + x2 > xmax__10032) {
        return cljs.core.PersistentVector.fromArray([xmax__10032 - w, xmax__10032], true)
      }else {
        if("\ufdd0'else") {
          return cljs.core.PersistentVector.fromArray([dx + x1, dx + x2], true)
        }else {
          return null
        }
      }
    }
  });
  drag_fn_BANG___10045.call(null, left__10047, function(dx, x1, x2, w) {
    if(dx + x1 < xmin__10031) {
      return cljs.core.PersistentVector.fromArray([xmin__10031, x2], true)
    }else {
      if(dx + x1 > x2) {
        return cljs.core.PersistentVector.fromArray([x2 - min_extent__10033, x2], true)
      }else {
        if("\ufdd0'else") {
          return cljs.core.PersistentVector.fromArray([dx + x1, x2], true)
        }else {
          return null
        }
      }
    }
  });
  drag_fn_BANG___10045.call(null, right__10048, function(dx, x1, x2, w) {
    if(dx + x2 > xmax__10032) {
      return cljs.core.PersistentVector.fromArray([x1, xmax__10032], true)
    }else {
      if(dx + x2 < x1) {
        return cljs.core.PersistentVector.fromArray([x1, x1 + min_extent__10033], true)
      }else {
        if("\ufdd0'else") {
          return cljs.core.PersistentVector.fromArray([x1, dx + x2], true)
        }else {
          return null
        }
      }
    }
  });
  return _BANG_extent__9992
};
goog.provide("vcfvis.histogram");
goog.require("cljs.core");
goog.require("c2.core");
goog.require("c2.maths");
goog.require("c2.scale");
goog.require("singult.core");
goog.require("c2.event");
goog.require("c2.core");
goog.require("vcfvis.data");
goog.require("vcfvis.ui");
goog.require("c2.dom");
goog.require("c2.svg");
goog.require("c2.maths");
goog.require("goog.string");
goog.require("vcfvis.brush");
goog.require("vcfvis.core");
vcfvis.histogram.height = vcfvis.ui.hist_height;
vcfvis.histogram.width = vcfvis.ui.hist_width;
vcfvis.histogram.margin = vcfvis.ui.hist_margin;
vcfvis.histogram.inter_hist_margin = vcfvis.ui.inter_hist_margin;
vcfvis.histogram.axis_height = vcfvis.ui.axis_height;
vcfvis.histogram.hist_g_STAR_ = function() {
  var hist_g_STAR___delegate = function(vcf, metric, p__10132) {
    var map__10171__10172 = p__10132;
    var map__10171__10173 = cljs.core.seq_QMARK_.call(null, map__10171__10172) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10171__10172) : map__10171__10172;
    var bars_QMARK___10174 = cljs.core._lookup.call(null, map__10171__10173, "\ufdd0'bars?", true);
    var width__10175 = cljs.core._lookup.call(null, map__10171__10173, "\ufdd0'width", null);
    var height__10176 = cljs.core._lookup.call(null, map__10171__10173, "\ufdd0'height", null);
    var map__10177__10179 = metric;
    var map__10177__10180 = cljs.core.seq_QMARK_.call(null, map__10177__10179) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10177__10179) : map__10177__10179;
    var metric_id__10181 = cljs.core._lookup.call(null, map__10177__10180, "\ufdd0'id", null);
    var scale_x__10182 = cljs.core._lookup.call(null, map__10177__10180, "\ufdd0'scale-x", null);
    var map__10178__10183 = cljs.core.get_in.call(null, vcf, cljs.core.PersistentVector.fromArray(["\ufdd0'cf", metric_id__10181], true));
    var map__10178__10184 = cljs.core.seq_QMARK_.call(null, map__10178__10183) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10178__10183) : map__10178__10183;
    var bin_width__10185 = cljs.core._lookup.call(null, map__10178__10184, "\ufdd0'bin-width", null);
    var binned__10186 = cljs.core._lookup.call(null, map__10178__10184, "\ufdd0'binned", null);
    var dimension__10187 = cljs.core._lookup.call(null, map__10178__10184, "\ufdd0'dimension", null);
    var max_val__10188 = cljs.core.first.call(null, binned__10186.top(1))["value"];
    var no_data_QMARK___10189 = max_val__10188 === 0;
    var scale_y__10192 = function() {
      var G__10190__10191 = cljs.core.get_in.call(null, metric, cljs.core.PersistentVector.fromArray(["\ufdd0'y-scale", "\ufdd0'type"], true), "\ufdd0'linear");
      if(cljs.core._EQ_.call(null, "\ufdd0'log", G__10190__10191)) {
        return c2.scale.log.call(null, "\ufdd0'domain", cljs.core.PersistentVector.fromArray([1, max_val__10188], true), "\ufdd0'range", cljs.core.PersistentVector.fromArray([0, height__10176], true))
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'linear", G__10190__10191)) {
          return c2.scale.linear.call(null, "\ufdd0'domain", cljs.core.PersistentVector.fromArray([0, max_val__10188], true), "\ufdd0'range", cljs.core.PersistentVector.fromArray([0, height__10176], true))
        }else {
          if("\ufdd0'else") {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.core.get_in.call(null, metric, cljs.core.PersistentVector.fromArray(["\ufdd0'y-scale", "\ufdd0'type"], true), "\ufdd0'linear"))].join(""));
          }else {
            return null
          }
        }
      }
    }();
    var scale_x__10193 = cljs.core.assoc_in.call(null, scale_x__10182, cljs.core.PersistentVector.fromArray(["\ufdd0'range", 1], true), width__10175);
    var dx__10194 = scale_x__10193.call(null, bin_width__10185) - scale_x__10193.call(null, 0);
    return cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.PersistentVector.fromArray(["\ufdd0'text.message", cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'y"], {"\ufdd0'x":width__10175 / 2, "\ufdd0'y":height__10176 / 2}), no_data_QMARK___10189 ? "No available data; try clearing filters on other dimensions." : null], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.data-frame", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":[cljs.core.str(c2.svg.translate.call(null, 
    cljs.core.PersistentVector.fromArray([0, height__10176], true))), cljs.core.str(c2.svg.scale.call(null, cljs.core.PersistentVector.fromArray([1, -1], true)))].join("")}), cljs.core.PersistentVector.fromArray(["\ufdd0'g.distribution", no_data_QMARK___10189 ? null : cljs.core.truth_(bars_QMARK___10174) ? function() {
      var iter__2363__auto____10205 = function iter__10195(s__10196) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__10196__10201 = s__10196;
          while(true) {
            if(cljs.core.seq.call(null, s__10196__10201)) {
              var d__10202 = cljs.core.first.call(null, s__10196__10201);
              return cljs.core.cons.call(null, function() {
                var x__10203 = d__10202["key"];
                var count__10204 = d__10202["value"];
                return cljs.core.PersistentVector.fromArray(["\ufdd0'rect.bar", cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":scale_x__10193.call(null, x__10203), "\ufdd0'width":dx__10194, "\ufdd0'height":scale_y__10192.call(null, count__10204)})], true)
              }(), iter__10195.call(null, cljs.core.rest.call(null, s__10196__10201)))
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__2363__auto____10205.call(null, binned__10186.all())
    }() : cljs.core.PersistentVector.fromArray(["\ufdd0'path", cljs.core.ObjMap.fromObject(["\ufdd0'd"], {"\ufdd0'd":[cljs.core.str("M"), cljs.core.str(binned__10186.all().map(function(d) {
      var x__10206 = d["key"];
      var count__10207 = d["value"];
      var h__10208 = scale_y__10192.call(null, count__10207);
      return[cljs.core.str(scale_x__10193.call(null, x__10206)), cljs.core.str(","), cljs.core.str(h__10208)].join("")
    }).join("L"))].join("")})], true)], true)], true)], true)
  };
  var hist_g_STAR_ = function(vcf, metric, var_args) {
    var p__10132 = null;
    if(goog.isDef(var_args)) {
      p__10132 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return hist_g_STAR___delegate.call(this, vcf, metric, p__10132)
  };
  hist_g_STAR_.cljs$lang$maxFixedArity = 2;
  hist_g_STAR_.cljs$lang$applyTo = function(arglist__10209) {
    var vcf = cljs.core.first(arglist__10209);
    var metric = cljs.core.first(cljs.core.next(arglist__10209));
    var p__10132 = cljs.core.rest(cljs.core.next(arglist__10209));
    return hist_g_STAR___delegate(vcf, metric, p__10132)
  };
  hist_g_STAR_.cljs$lang$arity$variadic = hist_g_STAR___delegate;
  return hist_g_STAR_
}();
vcfvis.histogram.draw_mini_hist_for_metric_BANG_ = function draw_mini_hist_for_metric_BANG_(m) {
  var vcfs__10227 = cljs.core.deref.call(null, vcfvis.core._BANG_vcfs);
  var n__10228 = cljs.core.count.call(null, vcfs__10227);
  var mini_width__10229 = parseFloat(c2.dom.style.call(null, "#metrics", "\ufdd0'width"));
  var mini_height__10230 = 100;
  return singult.core.merge_BANG_.call(null, c2.dom.select.call(null, [cljs.core.str("#metric-"), cljs.core.str((new cljs.core.Keyword("\ufdd0'id")).call(null, m)), cljs.core.str(" .mini-hist")].join("")), cljs.core.PersistentVector.fromArray(["\ufdd0'div.mini-hist", cljs.core.PersistentVector.fromArray(["\ufdd0'svg", cljs.core.ObjMap.fromObject(["\ufdd0'width", "\ufdd0'height"], {"\ufdd0'width":vcfvis.histogram.width, "\ufdd0'height":n__10228 * mini_height__10230 + (n__10228 - 1) * vcfvis.histogram.inter_hist_margin}), 
  function() {
    var iter__2363__auto____10243 = function iter__10231(s__10232) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__10232__10238 = s__10232;
        while(true) {
          if(cljs.core.seq.call(null, s__10232__10238)) {
            var vec__10239__10240 = cljs.core.first.call(null, s__10232__10238);
            var vcf__10241 = cljs.core.nth.call(null, vec__10239__10240, 0, null);
            var idx__10242 = cljs.core.nth.call(null, vec__10239__10240, 1, null);
            return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([0, idx__10242 * (mini_height__10230 + vcfvis.histogram.inter_hist_margin)], true))}), vcfvis.histogram.hist_g_STAR_.call(null, vcf__10241, m, "\ufdd0'height", mini_height__10230, "\ufdd0'width", mini_width__10229, "\ufdd0'bars?", true)], true), iter__10231.call(null, cljs.core.rest.call(null, 
            s__10232__10238)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____10243.call(null, cljs.core.map.call(null, cljs.core.vector, vcfs__10227, cljs.core.range.call(null)))
  }()], true)], true))
};
vcfvis.histogram.draw_histogram_BANG_ = function draw_histogram_BANG_(vcfs, metric) {
  var map__10301__10302 = metric;
  var map__10301__10303 = cljs.core.seq_QMARK_.call(null, map__10301__10302) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10301__10302) : map__10301__10302;
  var x__10304 = cljs.core._lookup.call(null, map__10301__10303, "\ufdd0'scale-x", null);
  var tick_range__10305 = -cljs.core.apply.call(null, cljs.core._, (new cljs.core.Keyword("\ufdd0'domain")).call(null, x__10304)) / cljs.core.count.call(null, (new cljs.core.Keyword("\ufdd0'ticks")).call(null, x__10304));
  var n__10306 = cljs.core.count.call(null, vcfs);
  var hist_height__10307 = (vcfvis.histogram.height - n__10306 * (vcfvis.histogram.inter_hist_margin - 1)) / n__10306;
  singult.core.merge_BANG_.call(null, c2.dom.select.call(null, "#main-hist"), cljs.core.PersistentVector.fromArray(["\ufdd0'div#main-hist", cljs.core.PersistentVector.fromArray(["\ufdd0'div#histograms", cljs.core.PersistentVector.fromArray(["\ufdd0'div.labels", function() {
    var iter__2363__auto____10320 = function iter__10308(s__10309) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__10309__10315 = s__10309;
        while(true) {
          if(cljs.core.seq.call(null, s__10309__10315)) {
            var vec__10316__10317 = cljs.core.first.call(null, s__10309__10315);
            var vcf__10318 = cljs.core.nth.call(null, vec__10316__10317, 0, null);
            var idx__10319 = cljs.core.nth.call(null, vec__10316__10317, 1, null);
            return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'span.label", cljs.core.ObjMap.fromObject(["\ufdd0'style"], {"\ufdd0'style":cljs.core.ObjMap.fromObject(["\ufdd0'top"], {"\ufdd0'top":[cljs.core.str(idx__10319 * (hist_height__10307 + vcfvis.histogram.inter_hist_margin)), cljs.core.str("px")].join("")})}), vcf__10318.call(null, "\ufdd0'file-url")], true), iter__10308.call(null, cljs.core.rest.call(null, s__10309__10315)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____10320.call(null, cljs.core.map.call(null, cljs.core.vector, vcfs, cljs.core.range.call(null)))
  }()], true), cljs.core.PersistentVector.fromArray(["\ufdd0'svg.histogram", cljs.core.ObjMap.fromObject(["\ufdd0'width", "\ufdd0'height"], {"\ufdd0'width":vcfvis.histogram.width + 2 * vcfvis.histogram.margin, "\ufdd0'height":vcfvis.histogram.height + (n__10306 - 1) * vcfvis.histogram.inter_hist_margin}), cljs.core.PersistentVector.fromArray(["\ufdd0'g.hist-container", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([vcfvis.histogram.margin, 
  0], true))}), function() {
    var iter__2363__auto____10333 = function iter__10321(s__10322) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__10322__10328 = s__10322;
        while(true) {
          if(cljs.core.seq.call(null, s__10322__10328)) {
            var vec__10329__10330 = cljs.core.first.call(null, s__10322__10328);
            var vcf__10331 = cljs.core.nth.call(null, vec__10329__10330, 0, null);
            var idx__10332 = cljs.core.nth.call(null, vec__10329__10330, 1, null);
            return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([0, idx__10332 * (hist_height__10307 + vcfvis.histogram.inter_hist_margin)], true))}), vcfvis.histogram.hist_g_STAR_.call(null, vcf__10331, metric, "\ufdd0'height", hist_height__10307, "\ufdd0'width", vcfvis.histogram.width)], true), iter__10321.call(null, cljs.core.rest.call(null, 
            s__10322__10328)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____10333.call(null, cljs.core.map.call(null, cljs.core.vector, vcfs, cljs.core.range.call(null)))
  }()], true)], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'div#hist-axis", cljs.core.PersistentVector.fromArray(["\ufdd0'div.axis.abscissa", cljs.core.PersistentVector.fromArray(["\ufdd0'svg", cljs.core.ObjMap.fromObject(["\ufdd0'width", "\ufdd0'height"], {"\ufdd0'width":vcfvis.histogram.width + 2 * vcfvis.histogram.margin, "\ufdd0'height":vcfvis.histogram.axis_height}), cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, 
  cljs.core.PersistentVector.fromArray([vcfvis.histogram.margin, 2], true))}), c2.svg.axis.call(null, x__10304, (new cljs.core.Keyword("\ufdd0'ticks")).call(null, x__10304), "\ufdd0'orientation", "\ufdd0'bottom", "\ufdd0'formatter", cljs.core.partial.call(null, goog.string.format, tick_range__10305 < 0.075 ? "%.2f" : "%.1f"))], true)], true)], true)], true)], true));
  var _BANG_b__10334 = vcfvis.brush.init_BANG_.call(null, "#histograms svg .hist-container", x__10304, c2.scale.linear.call(null, "\ufdd0'range", cljs.core.PersistentVector.fromArray([0, vcfvis.histogram.height], true)));
  var temp__3974__auto____10335 = cljs.core.deref.call(null, metric.call(null, "\ufdd0'!filter-extent"));
  if(cljs.core.truth_(temp__3974__auto____10335)) {
    var initial_extent__10336 = temp__3974__auto____10335;
    var vec__10337__10339 = metric.call(null, "\ufdd0'range");
    var r_min__10340 = cljs.core.nth.call(null, vec__10337__10339, 0, null);
    var r_max__10341 = cljs.core.nth.call(null, vec__10337__10339, 1, null);
    var vec__10338__10342 = initial_extent__10336;
    var start__10343 = cljs.core.nth.call(null, vec__10338__10342, 0, null);
    var end__10344 = cljs.core.nth.call(null, vec__10338__10342, 1, null);
    cljs.core.reset_BANG_.call(null, _BANG_b__10334, cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([start__10343 > r_min__10340 ? start__10343 : r_min__10340, end__10344 < r_max__10341 ? end__10344 : r_max__10341], true), cljs.core.PersistentVector.fromArray([0, 0], true)], true))
  }else {
  }
  return cljs.core.add_watch.call(null, _BANG_b__10334, "\ufdd0'onbrush", function(_10346, _10347, _, p__10345) {
    var vec__10348__10349 = p__10345;
    var xs__10350 = cljs.core.nth.call(null, vec__10348__10349, 0, null);
    var ___10351 = cljs.core.nth.call(null, vec__10348__10349, 1, null);
    var G__10352__10353 = cljs.core.seq.call(null, cljs.core.deref.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_));
    if(G__10352__10353) {
      var s__7882__auto____10354 = cljs.core.first.call(null, G__10352__10353);
      var G__10352__10355 = G__10352__10353;
      while(true) {
        s__7882__auto____10354.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'metric-brushed", "\ufdd0'extent"], {"\ufdd0'metric-brushed":metric, "\ufdd0'extent":xs__10350}));
        var temp__3974__auto____10356 = cljs.core.next.call(null, G__10352__10355);
        if(temp__3974__auto____10356) {
          var G__10352__10357 = temp__3974__auto____10356;
          var G__10358 = cljs.core.first.call(null, G__10352__10357);
          var G__10359 = G__10352__10357;
          s__7882__auto____10354 = G__10358;
          G__10352__10355 = G__10359;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  })
};
vcfvis.histogram.clear_histogram_BANG_ = function clear_histogram_BANG_() {
  singult.core.merge_BANG_.call(null, c2.dom.select.call(null, "#main-hist"), cljs.core.PersistentVector.fromArray(["\ufdd0'div#main-hist", cljs.core.PersistentVector.fromArray(["\ufdd0'div#histograms"], true), cljs.core.PersistentVector.fromArray(["\ufdd0'div#hist-axis"], true)], true));
  var G__10366__10367 = cljs.core.seq.call(null, cljs.core.deref.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_));
  if(G__10366__10367) {
    var s__7882__auto____10368 = cljs.core.first.call(null, G__10366__10367);
    var G__10366__10369 = G__10366__10367;
    while(true) {
      s__7882__auto____10368.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'count-updated"], {"\ufdd0'count-updated":null}));
      var temp__3974__auto____10370 = cljs.core.next.call(null, G__10366__10369);
      if(temp__3974__auto____10370) {
        var G__10366__10371 = temp__3974__auto____10370;
        var G__10372 = cljs.core.first.call(null, G__10366__10371);
        var G__10373 = G__10366__10371;
        s__7882__auto____10368 = G__10372;
        G__10366__10369 = G__10373;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
vcfvis.histogram.draw_mini_hists_BANG_ = function draw_mini_hists_BANG_() {
  var G__10380__10381 = cljs.core.seq.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_visible_metrics));
  if(G__10380__10381) {
    var m__10382 = cljs.core.first.call(null, G__10380__10381);
    var G__10380__10383 = G__10380__10381;
    while(true) {
      vcfvis.histogram.draw_mini_hist_for_metric_BANG_.call(null, m__10382);
      var temp__3974__auto____10384 = cljs.core.next.call(null, G__10380__10383);
      if(temp__3974__auto____10384) {
        var G__10380__10385 = temp__3974__auto____10384;
        var G__10386 = cljs.core.first.call(null, G__10380__10385);
        var G__10387 = G__10380__10385;
        m__10382 = G__10386;
        G__10380__10383 = G__10387;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
var co__6014__auto____10391 = function() {
  var co__6008__auto____10390 = new reflex.core.ComputedObservable(null, true, function() {
    var vcfs__10388 = cljs.core.deref.call(null, vcfvis.core._BANG_vcfs);
    var metric__10389 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
    vcfvis.histogram.clear_histogram_BANG_.call(null);
    if(cljs.core.seq.call(null, vcfs__10388)) {
      vcfvis.histogram.draw_histogram_BANG_.call(null, vcfs__10388, metric__10389);
      return vcfvis.histogram.draw_mini_hists_BANG_.call(null)
    }else {
      return null
    }
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6008__auto____10390);
  return co__6008__auto____10390
}();
cljs.core.add_watch.call(null, co__6014__auto____10391, "\ufdd0'reflex-constraint", function() {
  var vcfs__10392 = cljs.core.deref.call(null, vcfvis.core._BANG_vcfs);
  var metric__10393 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
  vcfvis.histogram.clear_histogram_BANG_.call(null);
  if(cljs.core.seq.call(null, vcfs__10392)) {
    vcfvis.histogram.draw_histogram_BANG_.call(null, vcfs__10392, metric__10393);
    return vcfvis.histogram.draw_mini_hists_BANG_.call(null)
  }else {
    return null
  }
});
co__6014__auto____10391;
goog.provide("vcfvis.controls");
goog.require("cljs.core");
goog.require("singult.core");
goog.require("c2.util");
goog.require("chosen.core");
goog.require("c2.core");
goog.require("c2.event");
goog.require("c2.dom");
goog.require("vcfvis.data");
goog.require("vcfvis.histogram");
goog.require("vcfvis.core");
goog.require("c2.util");
goog.require("c2.core");
goog.require("singult.core");
goog.require("chosen.core");
vcfvis.controls.file_selector = function() {
  var $selector__10058 = c2.dom.append_BANG_.call(null, "#file-selector", cljs.core.PersistentVector.fromArray(["\ufdd0'select", cljs.core.ObjMap.fromObject(["\ufdd0'multiple", "\ufdd0'data-placeholder"], {"\ufdd0'multiple":"multiple", "\ufdd0'data-placeholder":"Select VCF files"})], true));
  var _BANG_c__10059 = chosen.core.ichooseu_BANG_.call(null, $selector__10058, "\ufdd0'search-contains", true);
  var co__6014__auto____10068 = function() {
    var co__6008__auto____10067 = new reflex.core.ComputedObservable(null, true, function() {
      return chosen.core.options.call(null, _BANG_c__10059, cljs.core.map.call(null, function(p__10060) {
        var map__10061__10062 = p__10060;
        var map__10061__10063 = cljs.core.seq_QMARK_.call(null, map__10061__10062) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10061__10062) : map__10061__10062;
        var id__10064 = cljs.core._lookup.call(null, map__10061__10063, "\ufdd0'id", null);
        var folder__10065 = cljs.core._lookup.call(null, map__10061__10063, "\ufdd0'folder", null);
        var filename__10066 = cljs.core._lookup.call(null, map__10061__10063, "\ufdd0'filename", null);
        return cljs.core.ObjMap.fromObject(["\ufdd0'text", "\ufdd0'value", "\ufdd0'group"], {"\ufdd0'text":filename__10066, "\ufdd0'value":id__10064, "\ufdd0'group":folder__10065})
      }, cljs.core.deref.call(null, vcfvis.core._BANG_available_files)))
    }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
    cljs.core.deref.call(null, co__6008__auto____10067);
    return co__6008__auto____10067
  }();
  cljs.core.add_watch.call(null, co__6014__auto____10068, "\ufdd0'reflex-constraint", function() {
    return chosen.core.options.call(null, _BANG_c__10059, cljs.core.map.call(null, function(p__10069) {
      var map__10070__10071 = p__10069;
      var map__10070__10072 = cljs.core.seq_QMARK_.call(null, map__10070__10071) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10070__10071) : map__10070__10071;
      var id__10073 = cljs.core._lookup.call(null, map__10070__10072, "\ufdd0'id", null);
      var folder__10074 = cljs.core._lookup.call(null, map__10070__10072, "\ufdd0'folder", null);
      var filename__10075 = cljs.core._lookup.call(null, map__10070__10072, "\ufdd0'filename", null);
      return cljs.core.ObjMap.fromObject(["\ufdd0'text", "\ufdd0'value", "\ufdd0'group"], {"\ufdd0'text":filename__10075, "\ufdd0'value":id__10073, "\ufdd0'group":folder__10074})
    }, cljs.core.deref.call(null, vcfvis.core._BANG_available_files)))
  });
  co__6014__auto____10068;
  return _BANG_c__10059
}();
var co__7939__auto____10096 = function() {
  var co__6008__auto____10095 = new reflex.core.ComputedObservable(null, true, function() {
    var shared__10076 = cljs.core.set.call(null, cljs.core.map.call(null, "\ufdd0'id", cljs.core.deref.call(null, vcfvis.core._BANG_shared_metrics)));
    var selected_metric__10077 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
    var metrics__10085 = function() {
      var iter__2363__auto____10084 = function iter__10078(s__10079) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__10079__10082 = s__10079;
          while(true) {
            if(cljs.core.seq.call(null, s__10079__10082)) {
              var m__10083 = cljs.core.first.call(null, s__10079__10082);
              return cljs.core.cons.call(null, cljs.core.assoc.call(null, m__10083, "\ufdd0'selected?", cljs.core._EQ_.call(null, m__10083, selected_metric__10077), "\ufdd0'visible?", vcfvis.core.visible_metric_QMARK_.call(null, m__10083), "\ufdd0'shared?", cljs.core.contains_QMARK_.call(null, shared__10076, m__10083.call(null, "\ufdd0'id"))), iter__10078.call(null, cljs.core.rest.call(null, s__10079__10082)))
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__2363__auto____10084.call(null, cljs.core.vals.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_context).call(null, "\ufdd0'metrics")))
    }();
    return cljs.core.PersistentVector.fromArray(["\ufdd0'div#metrics", c2.core.unify.call(null, metrics__10085, function(p__10086) {
      var map__10087__10088 = p__10086;
      var map__10087__10089 = cljs.core.seq_QMARK_.call(null, map__10087__10088) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10087__10088) : map__10087__10088;
      var shared_QMARK___10090 = cljs.core._lookup.call(null, map__10087__10089, "\ufdd0'shared?", null);
      var visible_QMARK___10091 = cljs.core._lookup.call(null, map__10087__10089, "\ufdd0'visible?", null);
      var selected_QMARK___10092 = cljs.core._lookup.call(null, map__10087__10089, "\ufdd0'selected?", null);
      var desc__10093 = cljs.core._lookup.call(null, map__10087__10089, "\ufdd0'desc", null);
      var id__10094 = cljs.core._lookup.call(null, map__10087__10089, "\ufdd0'id", null);
      return cljs.core.PersistentVector.fromArray(["\ufdd0'div.metric", cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":[cljs.core.str("metric-"), cljs.core.str(id__10094)].join(""), "\ufdd0'class":[cljs.core.str(cljs.core.truth_(selected_QMARK___10092) ? "selected" : null), cljs.core.str(" "), cljs.core.str(cljs.core.truth_(visible_QMARK___10091) ? "expanded" : null), cljs.core.str(" "), cljs.core.str(cljs.core.truth_(shared_QMARK___10090) ? null : "disabled")].join("")}), 
      cljs.core.PersistentVector.fromArray(["\ufdd0'h2", id__10094], true), cljs.core.PersistentVector.fromArray(["\ufdd0'button.expand-btn", "V"], true), cljs.core.PersistentVector.fromArray(["\ufdd0'span.desc", desc__10093], true), cljs.core.PersistentVector.fromArray(["\ufdd0'div.mini-hist", singult.core.ignore.call(null)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'div.sort-handle"], true)], true)
    }, "\ufdd0'key-fn", function(p1__10057_SHARP_) {
      return(new cljs.core.Keyword("\ufdd0'id")).call(null, p1__10057_SHARP_)
    })], true)
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6008__auto____10095);
  return co__6008__auto____10095
}();
var $el__7940__auto____10097 = c2.dom.__GT_dom.call(null, "#metrics");
singult.core.merge_BANG_.call(null, $el__7940__auto____10097, cljs.core.deref.call(null, co__7939__auto____10096));
cljs.core.add_watch.call(null, co__7939__auto____10096, "\ufdd0'update-dom", function() {
  return singult.core.merge_BANG_.call(null, $el__7940__auto____10097, cljs.core.deref.call(null, co__7939__auto____10096))
});
co__7939__auto____10096;
jQuery("#metrics").sortable({"handle":".sort-handle"});
c2.event.on.call(null, "#metrics", "\ufdd0'click", function(d, _, e) {
  if(cljs.core.truth_(c2.dom.matches_selector_QMARK_.call(null, e.target, ".expand-btn"))) {
    return null
  }else {
    return vcfvis.core.select_metric_BANG_.call(null, cljs.core.dissoc.call(null, d, "\ufdd0'selected?", "\ufdd0'shared?", "\ufdd0'visible?"))
  }
});
c2.event.on.call(null, "#metrics", ".expand-btn", "\ufdd0'click", function(d) {
  var m__10098 = cljs.core.dissoc.call(null, d, "\ufdd0'selected?", "\ufdd0'shared?", "\ufdd0'visible?");
  if(cljs.core.truth_(vcfvis.core.visible_metric_QMARK_.call(null, m__10098))) {
  }else {
    vcfvis.histogram.draw_mini_hist_for_metric_BANG_.call(null, m__10098)
  }
  return vcfvis.core.toggle_visible_metric_BANG_.call(null, m__10098)
});
cljs.core.swap_BANG_.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_, cljs.core.conj, function(m__7888__auto__) {
  try {
    if(function() {
      var G__10104__10105 = m__7888__auto__;
      if(G__10104__10105) {
        if(function() {
          var or__3824__auto____10106 = G__10104__10105.cljs$lang$protocol_mask$partition0$ & 256;
          if(or__3824__auto____10106) {
            return or__3824__auto____10106
          }else {
            return G__10104__10105.cljs$core$ILookup$
          }
        }()) {
          return true
        }else {
          if(!G__10104__10105.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__10104__10105)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__10104__10105)
      }
    }()) {
      var G__10099__10108 = function() {
        var val__6472__auto____10107 = cljs.core._lookup.call(null, m__7888__auto__, "\ufdd0'filter-updated", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6472__auto____10107, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6472__auto____10107
        }
      }();
      vcfvis.histogram.draw_mini_hists_BANG_.call(null);
      var G__10109__10110 = cljs.core.seq.call(null, cljs.core.deref.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_));
      if(G__10109__10110) {
        var s__7882__auto____10111 = cljs.core.first.call(null, G__10109__10110);
        var G__10109__10112 = G__10109__10110;
        while(true) {
          s__7882__auto____10111.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'count-updated"], {"\ufdd0'count-updated":cljs.core.get_in.call(null, cljs.core.first.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)), cljs.core.PersistentVector.fromArray(["\ufdd0'cf", "\ufdd0'all"], true)).value()}));
          var temp__3974__auto____10113 = cljs.core.next.call(null, G__10109__10112);
          if(temp__3974__auto____10113) {
            var G__10109__10114 = temp__3974__auto____10113;
            var G__10115 = cljs.core.first.call(null, G__10109__10114);
            var G__10116 = G__10109__10114;
            s__7882__auto____10111 = G__10115;
            G__10109__10112 = G__10116;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    }else {
      if("\ufdd0'else") {
        throw 0;
      }else {
        return null
      }
    }
  }catch(e__6905__auto__) {
    if(e__6905__auto__ === 0) {
      var G__10100__10103 = m__7888__auto__;
      return null
    }else {
      throw e__6905__auto__;
    }
  }
});
cljs.core.swap_BANG_.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_, cljs.core.conj, function(m__7888__auto__) {
  try {
    if(function() {
      var G__10121__10122 = m__7888__auto__;
      if(G__10121__10122) {
        if(function() {
          var or__3824__auto____10123 = G__10121__10122.cljs$lang$protocol_mask$partition0$ & 256;
          if(or__3824__auto____10123) {
            return or__3824__auto____10123
          }else {
            return G__10121__10122.cljs$core$ILookup$
          }
        }()) {
          return true
        }else {
          if(!G__10121__10122.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__10121__10122)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__10121__10122)
      }
    }()) {
      var x__10125 = function() {
        var val__6472__auto____10124 = cljs.core._lookup.call(null, m__7888__auto__, "\ufdd0'count-updated", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6472__auto____10124, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6472__auto____10124
        }
      }();
      c2.dom.text.call(null, "#count", x__10125);
      return c2.dom.style.call(null, "#count", "\ufdd0'visibility", x__10125 == null ? "hidden" : "visible")
    }else {
      if("\ufdd0'else") {
        throw 0;
      }else {
        return null
      }
    }
  }catch(e__6905__auto__) {
    if(e__6905__auto__ === 0) {
      var G__10117__10120 = m__7888__auto__;
      return null
    }else {
      throw e__6905__auto__;
    }
  }
});
var $btn__10126 = c2.dom.select.call(null, "#filter-btn");
var co__7939__auto____10130 = function() {
  var co__6008__auto____10129 = new reflex.core.ComputedObservable(null, true, function() {
    var G__10127__10128 = cljs.core._lookup.call(null, cljs.core.deref.call(null, vcfvis.data._BANG_analysis_status), cljs.core._lookup.call(null, cljs.core.first.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)), "\ufdd0'file-url", null), null);
    if(cljs.core._EQ_.call(null, null, G__10127__10128)) {
      return cljs.core.PersistentVector.fromArray(["\ufdd0'button#filter-btn.btn", cljs.core.ObjMap.fromObject(["\ufdd0'properties"], {"\ufdd0'properties":cljs.core.ObjMap.fromObject(["\ufdd0'disabled"], {"\ufdd0'disabled":false})}), "Export subset"], true)
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0'running", G__10127__10128)) {
        return cljs.core.PersistentVector.fromArray(["\ufdd0'button#filter-btn.btn", cljs.core.ObjMap.fromObject(["\ufdd0'properties"], {"\ufdd0'properties":cljs.core.ObjMap.fromObject(["\ufdd0'disabled"], {"\ufdd0'disabled":true})}), "Running..."], true)
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'completed", G__10127__10128)) {
          return cljs.core.PersistentVector.fromArray(["\ufdd0'button#filter-btn.btn", cljs.core.ObjMap.fromObject(["\ufdd0'properties"], {"\ufdd0'properties":cljs.core.ObjMap.fromObject(["\ufdd0'disabled"], {"\ufdd0'disabled":true})}), "Completed"], true)
        }else {
          if("\ufdd0'else") {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.core._lookup.call(null, cljs.core.deref.call(null, vcfvis.data._BANG_analysis_status), cljs.core._lookup.call(null, cljs.core.first.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)), "\ufdd0'file-url", null), null))].join(""));
          }else {
            return null
          }
        }
      }
    }
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6008__auto____10129);
  return co__6008__auto____10129
}();
var $el__7940__auto____10131 = c2.dom.__GT_dom.call(null, $btn__10126);
singult.core.merge_BANG_.call(null, $el__7940__auto____10131, cljs.core.deref.call(null, co__7939__auto____10130));
cljs.core.add_watch.call(null, co__7939__auto____10130, "\ufdd0'update-dom", function() {
  return singult.core.merge_BANG_.call(null, $el__7940__auto____10131, cljs.core.deref.call(null, co__7939__auto____10130))
});
co__7939__auto____10130;
c2.event.on_raw.call(null, $btn__10126, "\ufdd0'click", function(_) {
  return vcfvis.data.filter_analysis.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'file-url", "\ufdd0'metrics"], {"\ufdd0'file-url":cljs.core._lookup.call(null, cljs.core.first.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)), "\ufdd0'file-url", null), "\ufdd0'metrics":cljs.core.deref.call(null, vcfvis.core._BANG_filters)}))
});
goog.provide("vcfvis.main");
goog.require("cljs.core");
goog.require("c2.util");
goog.require("vcfvis.controls");
goog.require("vcfvis.data");
goog.require("vcfvis.core");
goog.require("domina");
goog.require("c2.util");
cljs.core.add_watch.call(null, vcfvis.controls.file_selector, "\ufdd0'load-metrics", function(files) {
  var new_files__107972 = vcfvis.core.check_new_vcfs_BANG_.call(null, files);
  if(cljs.core.seq.call(null, new_files__107972)) {
    jQuery("#waiting-modal").modal("show");
    var G__107973__107974 = cljs.core.seq.call(null, new_files__107972);
    if(G__107973__107974) {
      var f__107975 = cljs.core.first.call(null, G__107973__107974);
      var G__107973__107976 = G__107973__107974;
      while(true) {
        vcfvis.data.load_vcf.call(null, f__107975, function(f__107975, G__107973__107976) {
          return function(vcf) {
            jQuery("#waiting-modal").modal("hide");
            return cljs.core.swap_BANG_.call(null, vcfvis.core._BANG_vcfs, cljs.core.conj, vcf)
          }
        }(f__107975, G__107973__107976));
        var temp__3974__auto____107977 = cljs.core.next.call(null, G__107973__107976);
        if(temp__3974__auto____107977) {
          var G__107973__107978 = temp__3974__auto____107977;
          var G__107979 = cljs.core.first.call(null, G__107973__107978);
          var G__107980 = G__107973__107978;
          f__107975 = G__107979;
          G__107973__107976 = G__107980;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  }else {
    return null
  }
});
jQuery("#waiting-modal").modal(c2.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'backdrop", "\ufdd0'keyboard", "\ufdd0'show"], {"\ufdd0'backdrop":"static", "\ufdd0'keyboard":false, "\ufdd0'show":true})));
vcfvis.data.load_context.call(null, function(context) {
  jQuery("#waiting-modal").modal("hide");
  return cljs.core.reset_BANG_.call(null, vcfvis.core._BANG_context, context)
});
