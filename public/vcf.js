var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__10614 = x == null ? null : x;
  if(p[goog.typeOf(x__10614)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__10615__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__10615 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10615__delegate.call(this, array, i, idxs)
    };
    G__10615.cljs$lang$maxFixedArity = 2;
    G__10615.cljs$lang$applyTo = function(arglist__10616) {
      var array = cljs.core.first(arglist__10616);
      var i = cljs.core.first(cljs.core.next(arglist__10616));
      var idxs = cljs.core.rest(cljs.core.next(arglist__10616));
      return G__10615__delegate(array, i, idxs)
    };
    G__10615.cljs$lang$arity$variadic = G__10615__delegate;
    return G__10615
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____10701 = this$;
      if(and__3822__auto____10701) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____10701
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2264__auto____10702 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10703 = cljs.core._invoke[goog.typeOf(x__2264__auto____10702)];
        if(or__3824__auto____10703) {
          return or__3824__auto____10703
        }else {
          var or__3824__auto____10704 = cljs.core._invoke["_"];
          if(or__3824__auto____10704) {
            return or__3824__auto____10704
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____10705 = this$;
      if(and__3822__auto____10705) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____10705
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2264__auto____10706 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10707 = cljs.core._invoke[goog.typeOf(x__2264__auto____10706)];
        if(or__3824__auto____10707) {
          return or__3824__auto____10707
        }else {
          var or__3824__auto____10708 = cljs.core._invoke["_"];
          if(or__3824__auto____10708) {
            return or__3824__auto____10708
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____10709 = this$;
      if(and__3822__auto____10709) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____10709
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2264__auto____10710 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10711 = cljs.core._invoke[goog.typeOf(x__2264__auto____10710)];
        if(or__3824__auto____10711) {
          return or__3824__auto____10711
        }else {
          var or__3824__auto____10712 = cljs.core._invoke["_"];
          if(or__3824__auto____10712) {
            return or__3824__auto____10712
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____10713 = this$;
      if(and__3822__auto____10713) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____10713
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2264__auto____10714 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10715 = cljs.core._invoke[goog.typeOf(x__2264__auto____10714)];
        if(or__3824__auto____10715) {
          return or__3824__auto____10715
        }else {
          var or__3824__auto____10716 = cljs.core._invoke["_"];
          if(or__3824__auto____10716) {
            return or__3824__auto____10716
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____10717 = this$;
      if(and__3822__auto____10717) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____10717
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2264__auto____10718 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10719 = cljs.core._invoke[goog.typeOf(x__2264__auto____10718)];
        if(or__3824__auto____10719) {
          return or__3824__auto____10719
        }else {
          var or__3824__auto____10720 = cljs.core._invoke["_"];
          if(or__3824__auto____10720) {
            return or__3824__auto____10720
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____10721 = this$;
      if(and__3822__auto____10721) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____10721
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2264__auto____10722 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10723 = cljs.core._invoke[goog.typeOf(x__2264__auto____10722)];
        if(or__3824__auto____10723) {
          return or__3824__auto____10723
        }else {
          var or__3824__auto____10724 = cljs.core._invoke["_"];
          if(or__3824__auto____10724) {
            return or__3824__auto____10724
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____10725 = this$;
      if(and__3822__auto____10725) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____10725
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2264__auto____10726 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10727 = cljs.core._invoke[goog.typeOf(x__2264__auto____10726)];
        if(or__3824__auto____10727) {
          return or__3824__auto____10727
        }else {
          var or__3824__auto____10728 = cljs.core._invoke["_"];
          if(or__3824__auto____10728) {
            return or__3824__auto____10728
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____10729 = this$;
      if(and__3822__auto____10729) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____10729
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2264__auto____10730 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10731 = cljs.core._invoke[goog.typeOf(x__2264__auto____10730)];
        if(or__3824__auto____10731) {
          return or__3824__auto____10731
        }else {
          var or__3824__auto____10732 = cljs.core._invoke["_"];
          if(or__3824__auto____10732) {
            return or__3824__auto____10732
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____10733 = this$;
      if(and__3822__auto____10733) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____10733
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2264__auto____10734 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10735 = cljs.core._invoke[goog.typeOf(x__2264__auto____10734)];
        if(or__3824__auto____10735) {
          return or__3824__auto____10735
        }else {
          var or__3824__auto____10736 = cljs.core._invoke["_"];
          if(or__3824__auto____10736) {
            return or__3824__auto____10736
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____10737 = this$;
      if(and__3822__auto____10737) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____10737
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2264__auto____10738 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10739 = cljs.core._invoke[goog.typeOf(x__2264__auto____10738)];
        if(or__3824__auto____10739) {
          return or__3824__auto____10739
        }else {
          var or__3824__auto____10740 = cljs.core._invoke["_"];
          if(or__3824__auto____10740) {
            return or__3824__auto____10740
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____10741 = this$;
      if(and__3822__auto____10741) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____10741
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2264__auto____10742 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10743 = cljs.core._invoke[goog.typeOf(x__2264__auto____10742)];
        if(or__3824__auto____10743) {
          return or__3824__auto____10743
        }else {
          var or__3824__auto____10744 = cljs.core._invoke["_"];
          if(or__3824__auto____10744) {
            return or__3824__auto____10744
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____10745 = this$;
      if(and__3822__auto____10745) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____10745
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2264__auto____10746 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10747 = cljs.core._invoke[goog.typeOf(x__2264__auto____10746)];
        if(or__3824__auto____10747) {
          return or__3824__auto____10747
        }else {
          var or__3824__auto____10748 = cljs.core._invoke["_"];
          if(or__3824__auto____10748) {
            return or__3824__auto____10748
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____10749 = this$;
      if(and__3822__auto____10749) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____10749
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2264__auto____10750 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10751 = cljs.core._invoke[goog.typeOf(x__2264__auto____10750)];
        if(or__3824__auto____10751) {
          return or__3824__auto____10751
        }else {
          var or__3824__auto____10752 = cljs.core._invoke["_"];
          if(or__3824__auto____10752) {
            return or__3824__auto____10752
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____10753 = this$;
      if(and__3822__auto____10753) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____10753
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2264__auto____10754 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10755 = cljs.core._invoke[goog.typeOf(x__2264__auto____10754)];
        if(or__3824__auto____10755) {
          return or__3824__auto____10755
        }else {
          var or__3824__auto____10756 = cljs.core._invoke["_"];
          if(or__3824__auto____10756) {
            return or__3824__auto____10756
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____10757 = this$;
      if(and__3822__auto____10757) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____10757
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2264__auto____10758 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10759 = cljs.core._invoke[goog.typeOf(x__2264__auto____10758)];
        if(or__3824__auto____10759) {
          return or__3824__auto____10759
        }else {
          var or__3824__auto____10760 = cljs.core._invoke["_"];
          if(or__3824__auto____10760) {
            return or__3824__auto____10760
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____10761 = this$;
      if(and__3822__auto____10761) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____10761
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2264__auto____10762 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10763 = cljs.core._invoke[goog.typeOf(x__2264__auto____10762)];
        if(or__3824__auto____10763) {
          return or__3824__auto____10763
        }else {
          var or__3824__auto____10764 = cljs.core._invoke["_"];
          if(or__3824__auto____10764) {
            return or__3824__auto____10764
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____10765 = this$;
      if(and__3822__auto____10765) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____10765
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2264__auto____10766 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10767 = cljs.core._invoke[goog.typeOf(x__2264__auto____10766)];
        if(or__3824__auto____10767) {
          return or__3824__auto____10767
        }else {
          var or__3824__auto____10768 = cljs.core._invoke["_"];
          if(or__3824__auto____10768) {
            return or__3824__auto____10768
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____10769 = this$;
      if(and__3822__auto____10769) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____10769
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2264__auto____10770 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10771 = cljs.core._invoke[goog.typeOf(x__2264__auto____10770)];
        if(or__3824__auto____10771) {
          return or__3824__auto____10771
        }else {
          var or__3824__auto____10772 = cljs.core._invoke["_"];
          if(or__3824__auto____10772) {
            return or__3824__auto____10772
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____10773 = this$;
      if(and__3822__auto____10773) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____10773
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2264__auto____10774 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10775 = cljs.core._invoke[goog.typeOf(x__2264__auto____10774)];
        if(or__3824__auto____10775) {
          return or__3824__auto____10775
        }else {
          var or__3824__auto____10776 = cljs.core._invoke["_"];
          if(or__3824__auto____10776) {
            return or__3824__auto____10776
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____10777 = this$;
      if(and__3822__auto____10777) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____10777
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2264__auto____10778 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10779 = cljs.core._invoke[goog.typeOf(x__2264__auto____10778)];
        if(or__3824__auto____10779) {
          return or__3824__auto____10779
        }else {
          var or__3824__auto____10780 = cljs.core._invoke["_"];
          if(or__3824__auto____10780) {
            return or__3824__auto____10780
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____10781 = this$;
      if(and__3822__auto____10781) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____10781
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2264__auto____10782 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10783 = cljs.core._invoke[goog.typeOf(x__2264__auto____10782)];
        if(or__3824__auto____10783) {
          return or__3824__auto____10783
        }else {
          var or__3824__auto____10784 = cljs.core._invoke["_"];
          if(or__3824__auto____10784) {
            return or__3824__auto____10784
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____10789 = coll;
    if(and__3822__auto____10789) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____10789
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2264__auto____10790 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10791 = cljs.core._count[goog.typeOf(x__2264__auto____10790)];
      if(or__3824__auto____10791) {
        return or__3824__auto____10791
      }else {
        var or__3824__auto____10792 = cljs.core._count["_"];
        if(or__3824__auto____10792) {
          return or__3824__auto____10792
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____10797 = coll;
    if(and__3822__auto____10797) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____10797
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2264__auto____10798 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10799 = cljs.core._empty[goog.typeOf(x__2264__auto____10798)];
      if(or__3824__auto____10799) {
        return or__3824__auto____10799
      }else {
        var or__3824__auto____10800 = cljs.core._empty["_"];
        if(or__3824__auto____10800) {
          return or__3824__auto____10800
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____10805 = coll;
    if(and__3822__auto____10805) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____10805
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2264__auto____10806 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10807 = cljs.core._conj[goog.typeOf(x__2264__auto____10806)];
      if(or__3824__auto____10807) {
        return or__3824__auto____10807
      }else {
        var or__3824__auto____10808 = cljs.core._conj["_"];
        if(or__3824__auto____10808) {
          return or__3824__auto____10808
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____10817 = coll;
      if(and__3822__auto____10817) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____10817
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2264__auto____10818 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____10819 = cljs.core._nth[goog.typeOf(x__2264__auto____10818)];
        if(or__3824__auto____10819) {
          return or__3824__auto____10819
        }else {
          var or__3824__auto____10820 = cljs.core._nth["_"];
          if(or__3824__auto____10820) {
            return or__3824__auto____10820
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____10821 = coll;
      if(and__3822__auto____10821) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____10821
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2264__auto____10822 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____10823 = cljs.core._nth[goog.typeOf(x__2264__auto____10822)];
        if(or__3824__auto____10823) {
          return or__3824__auto____10823
        }else {
          var or__3824__auto____10824 = cljs.core._nth["_"];
          if(or__3824__auto____10824) {
            return or__3824__auto____10824
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____10829 = coll;
    if(and__3822__auto____10829) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____10829
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2264__auto____10830 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10831 = cljs.core._first[goog.typeOf(x__2264__auto____10830)];
      if(or__3824__auto____10831) {
        return or__3824__auto____10831
      }else {
        var or__3824__auto____10832 = cljs.core._first["_"];
        if(or__3824__auto____10832) {
          return or__3824__auto____10832
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____10837 = coll;
    if(and__3822__auto____10837) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____10837
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2264__auto____10838 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10839 = cljs.core._rest[goog.typeOf(x__2264__auto____10838)];
      if(or__3824__auto____10839) {
        return or__3824__auto____10839
      }else {
        var or__3824__auto____10840 = cljs.core._rest["_"];
        if(or__3824__auto____10840) {
          return or__3824__auto____10840
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____10845 = coll;
    if(and__3822__auto____10845) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____10845
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2264__auto____10846 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10847 = cljs.core._next[goog.typeOf(x__2264__auto____10846)];
      if(or__3824__auto____10847) {
        return or__3824__auto____10847
      }else {
        var or__3824__auto____10848 = cljs.core._next["_"];
        if(or__3824__auto____10848) {
          return or__3824__auto____10848
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____10857 = o;
      if(and__3822__auto____10857) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____10857
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2264__auto____10858 = o == null ? null : o;
      return function() {
        var or__3824__auto____10859 = cljs.core._lookup[goog.typeOf(x__2264__auto____10858)];
        if(or__3824__auto____10859) {
          return or__3824__auto____10859
        }else {
          var or__3824__auto____10860 = cljs.core._lookup["_"];
          if(or__3824__auto____10860) {
            return or__3824__auto____10860
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____10861 = o;
      if(and__3822__auto____10861) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____10861
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2264__auto____10862 = o == null ? null : o;
      return function() {
        var or__3824__auto____10863 = cljs.core._lookup[goog.typeOf(x__2264__auto____10862)];
        if(or__3824__auto____10863) {
          return or__3824__auto____10863
        }else {
          var or__3824__auto____10864 = cljs.core._lookup["_"];
          if(or__3824__auto____10864) {
            return or__3824__auto____10864
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____10869 = coll;
    if(and__3822__auto____10869) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____10869
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2264__auto____10870 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10871 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2264__auto____10870)];
      if(or__3824__auto____10871) {
        return or__3824__auto____10871
      }else {
        var or__3824__auto____10872 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____10872) {
          return or__3824__auto____10872
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____10877 = coll;
    if(and__3822__auto____10877) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____10877
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2264__auto____10878 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10879 = cljs.core._assoc[goog.typeOf(x__2264__auto____10878)];
      if(or__3824__auto____10879) {
        return or__3824__auto____10879
      }else {
        var or__3824__auto____10880 = cljs.core._assoc["_"];
        if(or__3824__auto____10880) {
          return or__3824__auto____10880
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____10885 = coll;
    if(and__3822__auto____10885) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____10885
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2264__auto____10886 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10887 = cljs.core._dissoc[goog.typeOf(x__2264__auto____10886)];
      if(or__3824__auto____10887) {
        return or__3824__auto____10887
      }else {
        var or__3824__auto____10888 = cljs.core._dissoc["_"];
        if(or__3824__auto____10888) {
          return or__3824__auto____10888
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____10893 = coll;
    if(and__3822__auto____10893) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____10893
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2264__auto____10894 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10895 = cljs.core._key[goog.typeOf(x__2264__auto____10894)];
      if(or__3824__auto____10895) {
        return or__3824__auto____10895
      }else {
        var or__3824__auto____10896 = cljs.core._key["_"];
        if(or__3824__auto____10896) {
          return or__3824__auto____10896
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____10901 = coll;
    if(and__3822__auto____10901) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____10901
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2264__auto____10902 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10903 = cljs.core._val[goog.typeOf(x__2264__auto____10902)];
      if(or__3824__auto____10903) {
        return or__3824__auto____10903
      }else {
        var or__3824__auto____10904 = cljs.core._val["_"];
        if(or__3824__auto____10904) {
          return or__3824__auto____10904
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____10909 = coll;
    if(and__3822__auto____10909) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____10909
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2264__auto____10910 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10911 = cljs.core._disjoin[goog.typeOf(x__2264__auto____10910)];
      if(or__3824__auto____10911) {
        return or__3824__auto____10911
      }else {
        var or__3824__auto____10912 = cljs.core._disjoin["_"];
        if(or__3824__auto____10912) {
          return or__3824__auto____10912
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____10917 = coll;
    if(and__3822__auto____10917) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____10917
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2264__auto____10918 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10919 = cljs.core._peek[goog.typeOf(x__2264__auto____10918)];
      if(or__3824__auto____10919) {
        return or__3824__auto____10919
      }else {
        var or__3824__auto____10920 = cljs.core._peek["_"];
        if(or__3824__auto____10920) {
          return or__3824__auto____10920
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____10925 = coll;
    if(and__3822__auto____10925) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____10925
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2264__auto____10926 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10927 = cljs.core._pop[goog.typeOf(x__2264__auto____10926)];
      if(or__3824__auto____10927) {
        return or__3824__auto____10927
      }else {
        var or__3824__auto____10928 = cljs.core._pop["_"];
        if(or__3824__auto____10928) {
          return or__3824__auto____10928
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____10933 = coll;
    if(and__3822__auto____10933) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____10933
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2264__auto____10934 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10935 = cljs.core._assoc_n[goog.typeOf(x__2264__auto____10934)];
      if(or__3824__auto____10935) {
        return or__3824__auto____10935
      }else {
        var or__3824__auto____10936 = cljs.core._assoc_n["_"];
        if(or__3824__auto____10936) {
          return or__3824__auto____10936
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____10941 = o;
    if(and__3822__auto____10941) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____10941
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2264__auto____10942 = o == null ? null : o;
    return function() {
      var or__3824__auto____10943 = cljs.core._deref[goog.typeOf(x__2264__auto____10942)];
      if(or__3824__auto____10943) {
        return or__3824__auto____10943
      }else {
        var or__3824__auto____10944 = cljs.core._deref["_"];
        if(or__3824__auto____10944) {
          return or__3824__auto____10944
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____10949 = o;
    if(and__3822__auto____10949) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____10949
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2264__auto____10950 = o == null ? null : o;
    return function() {
      var or__3824__auto____10951 = cljs.core._deref_with_timeout[goog.typeOf(x__2264__auto____10950)];
      if(or__3824__auto____10951) {
        return or__3824__auto____10951
      }else {
        var or__3824__auto____10952 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____10952) {
          return or__3824__auto____10952
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____10957 = o;
    if(and__3822__auto____10957) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____10957
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2264__auto____10958 = o == null ? null : o;
    return function() {
      var or__3824__auto____10959 = cljs.core._meta[goog.typeOf(x__2264__auto____10958)];
      if(or__3824__auto____10959) {
        return or__3824__auto____10959
      }else {
        var or__3824__auto____10960 = cljs.core._meta["_"];
        if(or__3824__auto____10960) {
          return or__3824__auto____10960
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____10965 = o;
    if(and__3822__auto____10965) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____10965
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2264__auto____10966 = o == null ? null : o;
    return function() {
      var or__3824__auto____10967 = cljs.core._with_meta[goog.typeOf(x__2264__auto____10966)];
      if(or__3824__auto____10967) {
        return or__3824__auto____10967
      }else {
        var or__3824__auto____10968 = cljs.core._with_meta["_"];
        if(or__3824__auto____10968) {
          return or__3824__auto____10968
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____10977 = coll;
      if(and__3822__auto____10977) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____10977
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2264__auto____10978 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____10979 = cljs.core._reduce[goog.typeOf(x__2264__auto____10978)];
        if(or__3824__auto____10979) {
          return or__3824__auto____10979
        }else {
          var or__3824__auto____10980 = cljs.core._reduce["_"];
          if(or__3824__auto____10980) {
            return or__3824__auto____10980
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____10981 = coll;
      if(and__3822__auto____10981) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____10981
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2264__auto____10982 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____10983 = cljs.core._reduce[goog.typeOf(x__2264__auto____10982)];
        if(or__3824__auto____10983) {
          return or__3824__auto____10983
        }else {
          var or__3824__auto____10984 = cljs.core._reduce["_"];
          if(or__3824__auto____10984) {
            return or__3824__auto____10984
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____10989 = coll;
    if(and__3822__auto____10989) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____10989
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2264__auto____10990 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____10991 = cljs.core._kv_reduce[goog.typeOf(x__2264__auto____10990)];
      if(or__3824__auto____10991) {
        return or__3824__auto____10991
      }else {
        var or__3824__auto____10992 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____10992) {
          return or__3824__auto____10992
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____10997 = o;
    if(and__3822__auto____10997) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____10997
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2264__auto____10998 = o == null ? null : o;
    return function() {
      var or__3824__auto____10999 = cljs.core._equiv[goog.typeOf(x__2264__auto____10998)];
      if(or__3824__auto____10999) {
        return or__3824__auto____10999
      }else {
        var or__3824__auto____11000 = cljs.core._equiv["_"];
        if(or__3824__auto____11000) {
          return or__3824__auto____11000
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____11005 = o;
    if(and__3822__auto____11005) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____11005
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2264__auto____11006 = o == null ? null : o;
    return function() {
      var or__3824__auto____11007 = cljs.core._hash[goog.typeOf(x__2264__auto____11006)];
      if(or__3824__auto____11007) {
        return or__3824__auto____11007
      }else {
        var or__3824__auto____11008 = cljs.core._hash["_"];
        if(or__3824__auto____11008) {
          return or__3824__auto____11008
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____11013 = o;
    if(and__3822__auto____11013) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____11013
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2264__auto____11014 = o == null ? null : o;
    return function() {
      var or__3824__auto____11015 = cljs.core._seq[goog.typeOf(x__2264__auto____11014)];
      if(or__3824__auto____11015) {
        return or__3824__auto____11015
      }else {
        var or__3824__auto____11016 = cljs.core._seq["_"];
        if(or__3824__auto____11016) {
          return or__3824__auto____11016
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____11021 = coll;
    if(and__3822__auto____11021) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____11021
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2264__auto____11022 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11023 = cljs.core._rseq[goog.typeOf(x__2264__auto____11022)];
      if(or__3824__auto____11023) {
        return or__3824__auto____11023
      }else {
        var or__3824__auto____11024 = cljs.core._rseq["_"];
        if(or__3824__auto____11024) {
          return or__3824__auto____11024
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____11029 = coll;
    if(and__3822__auto____11029) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____11029
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2264__auto____11030 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11031 = cljs.core._sorted_seq[goog.typeOf(x__2264__auto____11030)];
      if(or__3824__auto____11031) {
        return or__3824__auto____11031
      }else {
        var or__3824__auto____11032 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____11032) {
          return or__3824__auto____11032
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____11037 = coll;
    if(and__3822__auto____11037) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____11037
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2264__auto____11038 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11039 = cljs.core._sorted_seq_from[goog.typeOf(x__2264__auto____11038)];
      if(or__3824__auto____11039) {
        return or__3824__auto____11039
      }else {
        var or__3824__auto____11040 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____11040) {
          return or__3824__auto____11040
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____11045 = coll;
    if(and__3822__auto____11045) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____11045
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2264__auto____11046 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11047 = cljs.core._entry_key[goog.typeOf(x__2264__auto____11046)];
      if(or__3824__auto____11047) {
        return or__3824__auto____11047
      }else {
        var or__3824__auto____11048 = cljs.core._entry_key["_"];
        if(or__3824__auto____11048) {
          return or__3824__auto____11048
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____11053 = coll;
    if(and__3822__auto____11053) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____11053
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2264__auto____11054 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11055 = cljs.core._comparator[goog.typeOf(x__2264__auto____11054)];
      if(or__3824__auto____11055) {
        return or__3824__auto____11055
      }else {
        var or__3824__auto____11056 = cljs.core._comparator["_"];
        if(or__3824__auto____11056) {
          return or__3824__auto____11056
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____11061 = o;
    if(and__3822__auto____11061) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____11061
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2264__auto____11062 = o == null ? null : o;
    return function() {
      var or__3824__auto____11063 = cljs.core._pr_seq[goog.typeOf(x__2264__auto____11062)];
      if(or__3824__auto____11063) {
        return or__3824__auto____11063
      }else {
        var or__3824__auto____11064 = cljs.core._pr_seq["_"];
        if(or__3824__auto____11064) {
          return or__3824__auto____11064
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____11069 = d;
    if(and__3822__auto____11069) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____11069
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2264__auto____11070 = d == null ? null : d;
    return function() {
      var or__3824__auto____11071 = cljs.core._realized_QMARK_[goog.typeOf(x__2264__auto____11070)];
      if(or__3824__auto____11071) {
        return or__3824__auto____11071
      }else {
        var or__3824__auto____11072 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____11072) {
          return or__3824__auto____11072
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____11077 = this$;
    if(and__3822__auto____11077) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____11077
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2264__auto____11078 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11079 = cljs.core._notify_watches[goog.typeOf(x__2264__auto____11078)];
      if(or__3824__auto____11079) {
        return or__3824__auto____11079
      }else {
        var or__3824__auto____11080 = cljs.core._notify_watches["_"];
        if(or__3824__auto____11080) {
          return or__3824__auto____11080
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____11085 = this$;
    if(and__3822__auto____11085) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____11085
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2264__auto____11086 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11087 = cljs.core._add_watch[goog.typeOf(x__2264__auto____11086)];
      if(or__3824__auto____11087) {
        return or__3824__auto____11087
      }else {
        var or__3824__auto____11088 = cljs.core._add_watch["_"];
        if(or__3824__auto____11088) {
          return or__3824__auto____11088
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____11093 = this$;
    if(and__3822__auto____11093) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____11093
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2264__auto____11094 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11095 = cljs.core._remove_watch[goog.typeOf(x__2264__auto____11094)];
      if(or__3824__auto____11095) {
        return or__3824__auto____11095
      }else {
        var or__3824__auto____11096 = cljs.core._remove_watch["_"];
        if(or__3824__auto____11096) {
          return or__3824__auto____11096
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____11101 = coll;
    if(and__3822__auto____11101) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____11101
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2264__auto____11102 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11103 = cljs.core._as_transient[goog.typeOf(x__2264__auto____11102)];
      if(or__3824__auto____11103) {
        return or__3824__auto____11103
      }else {
        var or__3824__auto____11104 = cljs.core._as_transient["_"];
        if(or__3824__auto____11104) {
          return or__3824__auto____11104
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____11109 = tcoll;
    if(and__3822__auto____11109) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____11109
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2264__auto____11110 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____11111 = cljs.core._conj_BANG_[goog.typeOf(x__2264__auto____11110)];
      if(or__3824__auto____11111) {
        return or__3824__auto____11111
      }else {
        var or__3824__auto____11112 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____11112) {
          return or__3824__auto____11112
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____11117 = tcoll;
    if(and__3822__auto____11117) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____11117
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2264__auto____11118 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____11119 = cljs.core._persistent_BANG_[goog.typeOf(x__2264__auto____11118)];
      if(or__3824__auto____11119) {
        return or__3824__auto____11119
      }else {
        var or__3824__auto____11120 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____11120) {
          return or__3824__auto____11120
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____11125 = tcoll;
    if(and__3822__auto____11125) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____11125
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2264__auto____11126 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____11127 = cljs.core._assoc_BANG_[goog.typeOf(x__2264__auto____11126)];
      if(or__3824__auto____11127) {
        return or__3824__auto____11127
      }else {
        var or__3824__auto____11128 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____11128) {
          return or__3824__auto____11128
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____11133 = tcoll;
    if(and__3822__auto____11133) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____11133
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2264__auto____11134 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____11135 = cljs.core._dissoc_BANG_[goog.typeOf(x__2264__auto____11134)];
      if(or__3824__auto____11135) {
        return or__3824__auto____11135
      }else {
        var or__3824__auto____11136 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____11136) {
          return or__3824__auto____11136
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____11141 = tcoll;
    if(and__3822__auto____11141) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____11141
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2264__auto____11142 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____11143 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2264__auto____11142)];
      if(or__3824__auto____11143) {
        return or__3824__auto____11143
      }else {
        var or__3824__auto____11144 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____11144) {
          return or__3824__auto____11144
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____11149 = tcoll;
    if(and__3822__auto____11149) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____11149
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2264__auto____11150 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____11151 = cljs.core._pop_BANG_[goog.typeOf(x__2264__auto____11150)];
      if(or__3824__auto____11151) {
        return or__3824__auto____11151
      }else {
        var or__3824__auto____11152 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____11152) {
          return or__3824__auto____11152
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____11157 = tcoll;
    if(and__3822__auto____11157) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____11157
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2264__auto____11158 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____11159 = cljs.core._disjoin_BANG_[goog.typeOf(x__2264__auto____11158)];
      if(or__3824__auto____11159) {
        return or__3824__auto____11159
      }else {
        var or__3824__auto____11160 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____11160) {
          return or__3824__auto____11160
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____11165 = x;
    if(and__3822__auto____11165) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____11165
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2264__auto____11166 = x == null ? null : x;
    return function() {
      var or__3824__auto____11167 = cljs.core._compare[goog.typeOf(x__2264__auto____11166)];
      if(or__3824__auto____11167) {
        return or__3824__auto____11167
      }else {
        var or__3824__auto____11168 = cljs.core._compare["_"];
        if(or__3824__auto____11168) {
          return or__3824__auto____11168
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____11173 = coll;
    if(and__3822__auto____11173) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____11173
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2264__auto____11174 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11175 = cljs.core._drop_first[goog.typeOf(x__2264__auto____11174)];
      if(or__3824__auto____11175) {
        return or__3824__auto____11175
      }else {
        var or__3824__auto____11176 = cljs.core._drop_first["_"];
        if(or__3824__auto____11176) {
          return or__3824__auto____11176
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____11181 = coll;
    if(and__3822__auto____11181) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____11181
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2264__auto____11182 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11183 = cljs.core._chunked_first[goog.typeOf(x__2264__auto____11182)];
      if(or__3824__auto____11183) {
        return or__3824__auto____11183
      }else {
        var or__3824__auto____11184 = cljs.core._chunked_first["_"];
        if(or__3824__auto____11184) {
          return or__3824__auto____11184
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____11189 = coll;
    if(and__3822__auto____11189) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____11189
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2264__auto____11190 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11191 = cljs.core._chunked_rest[goog.typeOf(x__2264__auto____11190)];
      if(or__3824__auto____11191) {
        return or__3824__auto____11191
      }else {
        var or__3824__auto____11192 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____11192) {
          return or__3824__auto____11192
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____11197 = coll;
    if(and__3822__auto____11197) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____11197
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2264__auto____11198 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11199 = cljs.core._chunked_next[goog.typeOf(x__2264__auto____11198)];
      if(or__3824__auto____11199) {
        return or__3824__auto____11199
      }else {
        var or__3824__auto____11200 = cljs.core._chunked_next["_"];
        if(or__3824__auto____11200) {
          return or__3824__auto____11200
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____11202 = x === y;
    if(or__3824__auto____11202) {
      return or__3824__auto____11202
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__11203__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__11204 = y;
            var G__11205 = cljs.core.first.call(null, more);
            var G__11206 = cljs.core.next.call(null, more);
            x = G__11204;
            y = G__11205;
            more = G__11206;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__11203 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11203__delegate.call(this, x, y, more)
    };
    G__11203.cljs$lang$maxFixedArity = 2;
    G__11203.cljs$lang$applyTo = function(arglist__11207) {
      var x = cljs.core.first(arglist__11207);
      var y = cljs.core.first(cljs.core.next(arglist__11207));
      var more = cljs.core.rest(cljs.core.next(arglist__11207));
      return G__11203__delegate(x, y, more)
    };
    G__11203.cljs$lang$arity$variadic = G__11203__delegate;
    return G__11203
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__11208 = null;
  var G__11208__2 = function(o, k) {
    return null
  };
  var G__11208__3 = function(o, k, not_found) {
    return not_found
  };
  G__11208 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11208__2.call(this, o, k);
      case 3:
        return G__11208__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11208
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__11209 = null;
  var G__11209__2 = function(_, f) {
    return f.call(null)
  };
  var G__11209__3 = function(_, f, start) {
    return start
  };
  G__11209 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__11209__2.call(this, _, f);
      case 3:
        return G__11209__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11209
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__11210 = null;
  var G__11210__2 = function(_, n) {
    return null
  };
  var G__11210__3 = function(_, n, not_found) {
    return not_found
  };
  G__11210 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11210__2.call(this, _, n);
      case 3:
        return G__11210__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11210
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____11211 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____11211) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____11211
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__11224 = cljs.core._count.call(null, cicoll);
    if(cnt__11224 === 0) {
      return f.call(null)
    }else {
      var val__11225 = cljs.core._nth.call(null, cicoll, 0);
      var n__11226 = 1;
      while(true) {
        if(n__11226 < cnt__11224) {
          var nval__11227 = f.call(null, val__11225, cljs.core._nth.call(null, cicoll, n__11226));
          if(cljs.core.reduced_QMARK_.call(null, nval__11227)) {
            return cljs.core.deref.call(null, nval__11227)
          }else {
            var G__11236 = nval__11227;
            var G__11237 = n__11226 + 1;
            val__11225 = G__11236;
            n__11226 = G__11237;
            continue
          }
        }else {
          return val__11225
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__11228 = cljs.core._count.call(null, cicoll);
    var val__11229 = val;
    var n__11230 = 0;
    while(true) {
      if(n__11230 < cnt__11228) {
        var nval__11231 = f.call(null, val__11229, cljs.core._nth.call(null, cicoll, n__11230));
        if(cljs.core.reduced_QMARK_.call(null, nval__11231)) {
          return cljs.core.deref.call(null, nval__11231)
        }else {
          var G__11238 = nval__11231;
          var G__11239 = n__11230 + 1;
          val__11229 = G__11238;
          n__11230 = G__11239;
          continue
        }
      }else {
        return val__11229
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__11232 = cljs.core._count.call(null, cicoll);
    var val__11233 = val;
    var n__11234 = idx;
    while(true) {
      if(n__11234 < cnt__11232) {
        var nval__11235 = f.call(null, val__11233, cljs.core._nth.call(null, cicoll, n__11234));
        if(cljs.core.reduced_QMARK_.call(null, nval__11235)) {
          return cljs.core.deref.call(null, nval__11235)
        }else {
          var G__11240 = nval__11235;
          var G__11241 = n__11234 + 1;
          val__11233 = G__11240;
          n__11234 = G__11241;
          continue
        }
      }else {
        return val__11233
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__11254 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__11255 = arr[0];
      var n__11256 = 1;
      while(true) {
        if(n__11256 < cnt__11254) {
          var nval__11257 = f.call(null, val__11255, arr[n__11256]);
          if(cljs.core.reduced_QMARK_.call(null, nval__11257)) {
            return cljs.core.deref.call(null, nval__11257)
          }else {
            var G__11266 = nval__11257;
            var G__11267 = n__11256 + 1;
            val__11255 = G__11266;
            n__11256 = G__11267;
            continue
          }
        }else {
          return val__11255
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__11258 = arr.length;
    var val__11259 = val;
    var n__11260 = 0;
    while(true) {
      if(n__11260 < cnt__11258) {
        var nval__11261 = f.call(null, val__11259, arr[n__11260]);
        if(cljs.core.reduced_QMARK_.call(null, nval__11261)) {
          return cljs.core.deref.call(null, nval__11261)
        }else {
          var G__11268 = nval__11261;
          var G__11269 = n__11260 + 1;
          val__11259 = G__11268;
          n__11260 = G__11269;
          continue
        }
      }else {
        return val__11259
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__11262 = arr.length;
    var val__11263 = val;
    var n__11264 = idx;
    while(true) {
      if(n__11264 < cnt__11262) {
        var nval__11265 = f.call(null, val__11263, arr[n__11264]);
        if(cljs.core.reduced_QMARK_.call(null, nval__11265)) {
          return cljs.core.deref.call(null, nval__11265)
        }else {
          var G__11270 = nval__11265;
          var G__11271 = n__11264 + 1;
          val__11263 = G__11270;
          n__11264 = G__11271;
          continue
        }
      }else {
        return val__11263
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11272 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__11273 = this;
  if(this__11273.i + 1 < this__11273.a.length) {
    return new cljs.core.IndexedSeq(this__11273.a, this__11273.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11274 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__11275 = this;
  var c__11276 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__11276 > 0) {
    return new cljs.core.RSeq(coll, c__11276 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__11277 = this;
  var this__11278 = this;
  return cljs.core.pr_str.call(null, this__11278)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__11279 = this;
  if(cljs.core.counted_QMARK_.call(null, this__11279.a)) {
    return cljs.core.ci_reduce.call(null, this__11279.a, f, this__11279.a[this__11279.i], this__11279.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__11279.a[this__11279.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__11280 = this;
  if(cljs.core.counted_QMARK_.call(null, this__11280.a)) {
    return cljs.core.ci_reduce.call(null, this__11280.a, f, start, this__11280.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__11281 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__11282 = this;
  return this__11282.a.length - this__11282.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__11283 = this;
  return this__11283.a[this__11283.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__11284 = this;
  if(this__11284.i + 1 < this__11284.a.length) {
    return new cljs.core.IndexedSeq(this__11284.a, this__11284.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11285 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__11286 = this;
  var i__11287 = n + this__11286.i;
  if(i__11287 < this__11286.a.length) {
    return this__11286.a[i__11287]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__11288 = this;
  var i__11289 = n + this__11288.i;
  if(i__11289 < this__11288.a.length) {
    return this__11288.a[i__11289]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__11290 = null;
  var G__11290__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__11290__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__11290 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__11290__2.call(this, array, f);
      case 3:
        return G__11290__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11290
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__11291 = null;
  var G__11291__2 = function(array, k) {
    return array[k]
  };
  var G__11291__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__11291 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11291__2.call(this, array, k);
      case 3:
        return G__11291__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11291
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__11292 = null;
  var G__11292__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__11292__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__11292 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11292__2.call(this, array, n);
      case 3:
        return G__11292__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11292
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11293 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11294 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__11295 = this;
  var this__11296 = this;
  return cljs.core.pr_str.call(null, this__11296)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11297 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11298 = this;
  return this__11298.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11299 = this;
  return cljs.core._nth.call(null, this__11299.ci, this__11299.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11300 = this;
  if(this__11300.i > 0) {
    return new cljs.core.RSeq(this__11300.ci, this__11300.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11301 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__11302 = this;
  return new cljs.core.RSeq(this__11302.ci, this__11302.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11303 = this;
  return this__11303.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__11307__11308 = coll;
      if(G__11307__11308) {
        if(function() {
          var or__3824__auto____11309 = G__11307__11308.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____11309) {
            return or__3824__auto____11309
          }else {
            return G__11307__11308.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__11307__11308.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__11307__11308)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__11307__11308)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__11314__11315 = coll;
      if(G__11314__11315) {
        if(function() {
          var or__3824__auto____11316 = G__11314__11315.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____11316) {
            return or__3824__auto____11316
          }else {
            return G__11314__11315.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__11314__11315.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__11314__11315)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__11314__11315)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__11317 = cljs.core.seq.call(null, coll);
      if(s__11317 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__11317)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__11322__11323 = coll;
      if(G__11322__11323) {
        if(function() {
          var or__3824__auto____11324 = G__11322__11323.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____11324) {
            return or__3824__auto____11324
          }else {
            return G__11322__11323.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__11322__11323.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__11322__11323)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__11322__11323)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__11325 = cljs.core.seq.call(null, coll);
      if(!(s__11325 == null)) {
        return cljs.core._rest.call(null, s__11325)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__11329__11330 = coll;
      if(G__11329__11330) {
        if(function() {
          var or__3824__auto____11331 = G__11329__11330.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____11331) {
            return or__3824__auto____11331
          }else {
            return G__11329__11330.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__11329__11330.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__11329__11330)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__11329__11330)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__11333 = cljs.core.next.call(null, s);
    if(!(sn__11333 == null)) {
      var G__11334 = sn__11333;
      s = G__11334;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__11335__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__11336 = conj.call(null, coll, x);
          var G__11337 = cljs.core.first.call(null, xs);
          var G__11338 = cljs.core.next.call(null, xs);
          coll = G__11336;
          x = G__11337;
          xs = G__11338;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__11335 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11335__delegate.call(this, coll, x, xs)
    };
    G__11335.cljs$lang$maxFixedArity = 2;
    G__11335.cljs$lang$applyTo = function(arglist__11339) {
      var coll = cljs.core.first(arglist__11339);
      var x = cljs.core.first(cljs.core.next(arglist__11339));
      var xs = cljs.core.rest(cljs.core.next(arglist__11339));
      return G__11335__delegate(coll, x, xs)
    };
    G__11335.cljs$lang$arity$variadic = G__11335__delegate;
    return G__11335
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__11342 = cljs.core.seq.call(null, coll);
  var acc__11343 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__11342)) {
      return acc__11343 + cljs.core._count.call(null, s__11342)
    }else {
      var G__11344 = cljs.core.next.call(null, s__11342);
      var G__11345 = acc__11343 + 1;
      s__11342 = G__11344;
      acc__11343 = G__11345;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__11352__11353 = coll;
        if(G__11352__11353) {
          if(function() {
            var or__3824__auto____11354 = G__11352__11353.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____11354) {
              return or__3824__auto____11354
            }else {
              return G__11352__11353.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__11352__11353.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__11352__11353)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__11352__11353)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__11355__11356 = coll;
        if(G__11355__11356) {
          if(function() {
            var or__3824__auto____11357 = G__11355__11356.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____11357) {
              return or__3824__auto____11357
            }else {
              return G__11355__11356.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__11355__11356.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__11355__11356)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__11355__11356)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__11360__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__11359 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__11361 = ret__11359;
          var G__11362 = cljs.core.first.call(null, kvs);
          var G__11363 = cljs.core.second.call(null, kvs);
          var G__11364 = cljs.core.nnext.call(null, kvs);
          coll = G__11361;
          k = G__11362;
          v = G__11363;
          kvs = G__11364;
          continue
        }else {
          return ret__11359
        }
        break
      }
    };
    var G__11360 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11360__delegate.call(this, coll, k, v, kvs)
    };
    G__11360.cljs$lang$maxFixedArity = 3;
    G__11360.cljs$lang$applyTo = function(arglist__11365) {
      var coll = cljs.core.first(arglist__11365);
      var k = cljs.core.first(cljs.core.next(arglist__11365));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11365)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11365)));
      return G__11360__delegate(coll, k, v, kvs)
    };
    G__11360.cljs$lang$arity$variadic = G__11360__delegate;
    return G__11360
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__11368__delegate = function(coll, k, ks) {
      while(true) {
        var ret__11367 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__11369 = ret__11367;
          var G__11370 = cljs.core.first.call(null, ks);
          var G__11371 = cljs.core.next.call(null, ks);
          coll = G__11369;
          k = G__11370;
          ks = G__11371;
          continue
        }else {
          return ret__11367
        }
        break
      }
    };
    var G__11368 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11368__delegate.call(this, coll, k, ks)
    };
    G__11368.cljs$lang$maxFixedArity = 2;
    G__11368.cljs$lang$applyTo = function(arglist__11372) {
      var coll = cljs.core.first(arglist__11372);
      var k = cljs.core.first(cljs.core.next(arglist__11372));
      var ks = cljs.core.rest(cljs.core.next(arglist__11372));
      return G__11368__delegate(coll, k, ks)
    };
    G__11368.cljs$lang$arity$variadic = G__11368__delegate;
    return G__11368
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__11376__11377 = o;
    if(G__11376__11377) {
      if(function() {
        var or__3824__auto____11378 = G__11376__11377.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____11378) {
          return or__3824__auto____11378
        }else {
          return G__11376__11377.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__11376__11377.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11376__11377)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11376__11377)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__11381__delegate = function(coll, k, ks) {
      while(true) {
        var ret__11380 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__11382 = ret__11380;
          var G__11383 = cljs.core.first.call(null, ks);
          var G__11384 = cljs.core.next.call(null, ks);
          coll = G__11382;
          k = G__11383;
          ks = G__11384;
          continue
        }else {
          return ret__11380
        }
        break
      }
    };
    var G__11381 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11381__delegate.call(this, coll, k, ks)
    };
    G__11381.cljs$lang$maxFixedArity = 2;
    G__11381.cljs$lang$applyTo = function(arglist__11385) {
      var coll = cljs.core.first(arglist__11385);
      var k = cljs.core.first(cljs.core.next(arglist__11385));
      var ks = cljs.core.rest(cljs.core.next(arglist__11385));
      return G__11381__delegate(coll, k, ks)
    };
    G__11381.cljs$lang$arity$variadic = G__11381__delegate;
    return G__11381
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__11387 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__11387;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__11387
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__11389 = cljs.core.string_hash_cache[k];
  if(!(h__11389 == null)) {
    return h__11389
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____11391 = goog.isString(o);
      if(and__3822__auto____11391) {
        return check_cache
      }else {
        return and__3822__auto____11391
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__11395__11396 = x;
    if(G__11395__11396) {
      if(function() {
        var or__3824__auto____11397 = G__11395__11396.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____11397) {
          return or__3824__auto____11397
        }else {
          return G__11395__11396.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__11395__11396.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__11395__11396)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__11395__11396)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__11401__11402 = x;
    if(G__11401__11402) {
      if(function() {
        var or__3824__auto____11403 = G__11401__11402.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____11403) {
          return or__3824__auto____11403
        }else {
          return G__11401__11402.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__11401__11402.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__11401__11402)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__11401__11402)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__11407__11408 = x;
  if(G__11407__11408) {
    if(function() {
      var or__3824__auto____11409 = G__11407__11408.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____11409) {
        return or__3824__auto____11409
      }else {
        return G__11407__11408.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__11407__11408.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__11407__11408)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__11407__11408)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__11413__11414 = x;
  if(G__11413__11414) {
    if(function() {
      var or__3824__auto____11415 = G__11413__11414.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____11415) {
        return or__3824__auto____11415
      }else {
        return G__11413__11414.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__11413__11414.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__11413__11414)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__11413__11414)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__11419__11420 = x;
  if(G__11419__11420) {
    if(function() {
      var or__3824__auto____11421 = G__11419__11420.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____11421) {
        return or__3824__auto____11421
      }else {
        return G__11419__11420.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__11419__11420.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__11419__11420)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__11419__11420)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__11425__11426 = x;
  if(G__11425__11426) {
    if(function() {
      var or__3824__auto____11427 = G__11425__11426.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____11427) {
        return or__3824__auto____11427
      }else {
        return G__11425__11426.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__11425__11426.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__11425__11426)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__11425__11426)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__11431__11432 = x;
  if(G__11431__11432) {
    if(function() {
      var or__3824__auto____11433 = G__11431__11432.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____11433) {
        return or__3824__auto____11433
      }else {
        return G__11431__11432.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__11431__11432.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__11431__11432)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__11431__11432)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__11437__11438 = x;
    if(G__11437__11438) {
      if(function() {
        var or__3824__auto____11439 = G__11437__11438.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____11439) {
          return or__3824__auto____11439
        }else {
          return G__11437__11438.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__11437__11438.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__11437__11438)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__11437__11438)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__11443__11444 = x;
  if(G__11443__11444) {
    if(function() {
      var or__3824__auto____11445 = G__11443__11444.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____11445) {
        return or__3824__auto____11445
      }else {
        return G__11443__11444.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__11443__11444.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__11443__11444)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__11443__11444)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__11449__11450 = x;
  if(G__11449__11450) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____11451 = null;
      if(cljs.core.truth_(or__3824__auto____11451)) {
        return or__3824__auto____11451
      }else {
        return G__11449__11450.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__11449__11450.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__11449__11450)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__11449__11450)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__11452__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__11452 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__11452__delegate.call(this, keyvals)
    };
    G__11452.cljs$lang$maxFixedArity = 0;
    G__11452.cljs$lang$applyTo = function(arglist__11453) {
      var keyvals = cljs.core.seq(arglist__11453);
      return G__11452__delegate(keyvals)
    };
    G__11452.cljs$lang$arity$variadic = G__11452__delegate;
    return G__11452
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__11455 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__11455.push(key)
  });
  return keys__11455
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__11459 = i;
  var j__11460 = j;
  var len__11461 = len;
  while(true) {
    if(len__11461 === 0) {
      return to
    }else {
      to[j__11460] = from[i__11459];
      var G__11462 = i__11459 + 1;
      var G__11463 = j__11460 + 1;
      var G__11464 = len__11461 - 1;
      i__11459 = G__11462;
      j__11460 = G__11463;
      len__11461 = G__11464;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__11468 = i + (len - 1);
  var j__11469 = j + (len - 1);
  var len__11470 = len;
  while(true) {
    if(len__11470 === 0) {
      return to
    }else {
      to[j__11469] = from[i__11468];
      var G__11471 = i__11468 - 1;
      var G__11472 = j__11469 - 1;
      var G__11473 = len__11470 - 1;
      i__11468 = G__11471;
      j__11469 = G__11472;
      len__11470 = G__11473;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__11477__11478 = s;
    if(G__11477__11478) {
      if(function() {
        var or__3824__auto____11479 = G__11477__11478.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____11479) {
          return or__3824__auto____11479
        }else {
          return G__11477__11478.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__11477__11478.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__11477__11478)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__11477__11478)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__11483__11484 = s;
  if(G__11483__11484) {
    if(function() {
      var or__3824__auto____11485 = G__11483__11484.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____11485) {
        return or__3824__auto____11485
      }else {
        return G__11483__11484.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__11483__11484.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11483__11484)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11483__11484)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____11488 = goog.isString(x);
  if(and__3822__auto____11488) {
    return!function() {
      var or__3824__auto____11489 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____11489) {
        return or__3824__auto____11489
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____11488
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____11491 = goog.isString(x);
  if(and__3822__auto____11491) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____11491
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____11493 = goog.isString(x);
  if(and__3822__auto____11493) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____11493
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____11498 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____11498) {
    return or__3824__auto____11498
  }else {
    var G__11499__11500 = f;
    if(G__11499__11500) {
      if(function() {
        var or__3824__auto____11501 = G__11499__11500.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____11501) {
          return or__3824__auto____11501
        }else {
          return G__11499__11500.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__11499__11500.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__11499__11500)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__11499__11500)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____11503 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____11503) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____11503
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____11506 = coll;
    if(cljs.core.truth_(and__3822__auto____11506)) {
      var and__3822__auto____11507 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____11507) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____11507
      }
    }else {
      return and__3822__auto____11506
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__11516__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__11512 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__11513 = more;
        while(true) {
          var x__11514 = cljs.core.first.call(null, xs__11513);
          var etc__11515 = cljs.core.next.call(null, xs__11513);
          if(cljs.core.truth_(xs__11513)) {
            if(cljs.core.contains_QMARK_.call(null, s__11512, x__11514)) {
              return false
            }else {
              var G__11517 = cljs.core.conj.call(null, s__11512, x__11514);
              var G__11518 = etc__11515;
              s__11512 = G__11517;
              xs__11513 = G__11518;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__11516 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11516__delegate.call(this, x, y, more)
    };
    G__11516.cljs$lang$maxFixedArity = 2;
    G__11516.cljs$lang$applyTo = function(arglist__11519) {
      var x = cljs.core.first(arglist__11519);
      var y = cljs.core.first(cljs.core.next(arglist__11519));
      var more = cljs.core.rest(cljs.core.next(arglist__11519));
      return G__11516__delegate(x, y, more)
    };
    G__11516.cljs$lang$arity$variadic = G__11516__delegate;
    return G__11516
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__11523__11524 = x;
            if(G__11523__11524) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____11525 = null;
                if(cljs.core.truth_(or__3824__auto____11525)) {
                  return or__3824__auto____11525
                }else {
                  return G__11523__11524.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__11523__11524.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__11523__11524)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__11523__11524)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__11530 = cljs.core.count.call(null, xs);
    var yl__11531 = cljs.core.count.call(null, ys);
    if(xl__11530 < yl__11531) {
      return-1
    }else {
      if(xl__11530 > yl__11531) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__11530, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__11532 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____11533 = d__11532 === 0;
        if(and__3822__auto____11533) {
          return n + 1 < len
        }else {
          return and__3822__auto____11533
        }
      }()) {
        var G__11534 = xs;
        var G__11535 = ys;
        var G__11536 = len;
        var G__11537 = n + 1;
        xs = G__11534;
        ys = G__11535;
        len = G__11536;
        n = G__11537;
        continue
      }else {
        return d__11532
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__11539 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__11539)) {
        return r__11539
      }else {
        if(cljs.core.truth_(r__11539)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__11541 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__11541, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__11541)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____11547 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____11547) {
      var s__11548 = temp__3971__auto____11547;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__11548), cljs.core.next.call(null, s__11548))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__11549 = val;
    var coll__11550 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__11550) {
        var nval__11551 = f.call(null, val__11549, cljs.core.first.call(null, coll__11550));
        if(cljs.core.reduced_QMARK_.call(null, nval__11551)) {
          return cljs.core.deref.call(null, nval__11551)
        }else {
          var G__11552 = nval__11551;
          var G__11553 = cljs.core.next.call(null, coll__11550);
          val__11549 = G__11552;
          coll__11550 = G__11553;
          continue
        }
      }else {
        return val__11549
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__11555 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__11555);
  return cljs.core.vec.call(null, a__11555)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__11562__11563 = coll;
      if(G__11562__11563) {
        if(function() {
          var or__3824__auto____11564 = G__11562__11563.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____11564) {
            return or__3824__auto____11564
          }else {
            return G__11562__11563.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__11562__11563.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__11562__11563)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__11562__11563)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__11565__11566 = coll;
      if(G__11565__11566) {
        if(function() {
          var or__3824__auto____11567 = G__11565__11566.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____11567) {
            return or__3824__auto____11567
          }else {
            return G__11565__11566.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__11565__11566.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__11565__11566)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__11565__11566)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__11568 = this;
  return this__11568.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__11569__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__11569 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11569__delegate.call(this, x, y, more)
    };
    G__11569.cljs$lang$maxFixedArity = 2;
    G__11569.cljs$lang$applyTo = function(arglist__11570) {
      var x = cljs.core.first(arglist__11570);
      var y = cljs.core.first(cljs.core.next(arglist__11570));
      var more = cljs.core.rest(cljs.core.next(arglist__11570));
      return G__11569__delegate(x, y, more)
    };
    G__11569.cljs$lang$arity$variadic = G__11569__delegate;
    return G__11569
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__11571__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__11571 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11571__delegate.call(this, x, y, more)
    };
    G__11571.cljs$lang$maxFixedArity = 2;
    G__11571.cljs$lang$applyTo = function(arglist__11572) {
      var x = cljs.core.first(arglist__11572);
      var y = cljs.core.first(cljs.core.next(arglist__11572));
      var more = cljs.core.rest(cljs.core.next(arglist__11572));
      return G__11571__delegate(x, y, more)
    };
    G__11571.cljs$lang$arity$variadic = G__11571__delegate;
    return G__11571
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__11573__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__11573 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11573__delegate.call(this, x, y, more)
    };
    G__11573.cljs$lang$maxFixedArity = 2;
    G__11573.cljs$lang$applyTo = function(arglist__11574) {
      var x = cljs.core.first(arglist__11574);
      var y = cljs.core.first(cljs.core.next(arglist__11574));
      var more = cljs.core.rest(cljs.core.next(arglist__11574));
      return G__11573__delegate(x, y, more)
    };
    G__11573.cljs$lang$arity$variadic = G__11573__delegate;
    return G__11573
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__11575__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__11575 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11575__delegate.call(this, x, y, more)
    };
    G__11575.cljs$lang$maxFixedArity = 2;
    G__11575.cljs$lang$applyTo = function(arglist__11576) {
      var x = cljs.core.first(arglist__11576);
      var y = cljs.core.first(cljs.core.next(arglist__11576));
      var more = cljs.core.rest(cljs.core.next(arglist__11576));
      return G__11575__delegate(x, y, more)
    };
    G__11575.cljs$lang$arity$variadic = G__11575__delegate;
    return G__11575
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__11577__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__11578 = y;
            var G__11579 = cljs.core.first.call(null, more);
            var G__11580 = cljs.core.next.call(null, more);
            x = G__11578;
            y = G__11579;
            more = G__11580;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__11577 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11577__delegate.call(this, x, y, more)
    };
    G__11577.cljs$lang$maxFixedArity = 2;
    G__11577.cljs$lang$applyTo = function(arglist__11581) {
      var x = cljs.core.first(arglist__11581);
      var y = cljs.core.first(cljs.core.next(arglist__11581));
      var more = cljs.core.rest(cljs.core.next(arglist__11581));
      return G__11577__delegate(x, y, more)
    };
    G__11577.cljs$lang$arity$variadic = G__11577__delegate;
    return G__11577
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__11582__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__11583 = y;
            var G__11584 = cljs.core.first.call(null, more);
            var G__11585 = cljs.core.next.call(null, more);
            x = G__11583;
            y = G__11584;
            more = G__11585;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__11582 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11582__delegate.call(this, x, y, more)
    };
    G__11582.cljs$lang$maxFixedArity = 2;
    G__11582.cljs$lang$applyTo = function(arglist__11586) {
      var x = cljs.core.first(arglist__11586);
      var y = cljs.core.first(cljs.core.next(arglist__11586));
      var more = cljs.core.rest(cljs.core.next(arglist__11586));
      return G__11582__delegate(x, y, more)
    };
    G__11582.cljs$lang$arity$variadic = G__11582__delegate;
    return G__11582
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__11587__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__11588 = y;
            var G__11589 = cljs.core.first.call(null, more);
            var G__11590 = cljs.core.next.call(null, more);
            x = G__11588;
            y = G__11589;
            more = G__11590;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__11587 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11587__delegate.call(this, x, y, more)
    };
    G__11587.cljs$lang$maxFixedArity = 2;
    G__11587.cljs$lang$applyTo = function(arglist__11591) {
      var x = cljs.core.first(arglist__11591);
      var y = cljs.core.first(cljs.core.next(arglist__11591));
      var more = cljs.core.rest(cljs.core.next(arglist__11591));
      return G__11587__delegate(x, y, more)
    };
    G__11587.cljs$lang$arity$variadic = G__11587__delegate;
    return G__11587
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__11592__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__11593 = y;
            var G__11594 = cljs.core.first.call(null, more);
            var G__11595 = cljs.core.next.call(null, more);
            x = G__11593;
            y = G__11594;
            more = G__11595;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__11592 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11592__delegate.call(this, x, y, more)
    };
    G__11592.cljs$lang$maxFixedArity = 2;
    G__11592.cljs$lang$applyTo = function(arglist__11596) {
      var x = cljs.core.first(arglist__11596);
      var y = cljs.core.first(cljs.core.next(arglist__11596));
      var more = cljs.core.rest(cljs.core.next(arglist__11596));
      return G__11592__delegate(x, y, more)
    };
    G__11592.cljs$lang$arity$variadic = G__11592__delegate;
    return G__11592
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__11597__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__11597 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11597__delegate.call(this, x, y, more)
    };
    G__11597.cljs$lang$maxFixedArity = 2;
    G__11597.cljs$lang$applyTo = function(arglist__11598) {
      var x = cljs.core.first(arglist__11598);
      var y = cljs.core.first(cljs.core.next(arglist__11598));
      var more = cljs.core.rest(cljs.core.next(arglist__11598));
      return G__11597__delegate(x, y, more)
    };
    G__11597.cljs$lang$arity$variadic = G__11597__delegate;
    return G__11597
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__11599__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__11599 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11599__delegate.call(this, x, y, more)
    };
    G__11599.cljs$lang$maxFixedArity = 2;
    G__11599.cljs$lang$applyTo = function(arglist__11600) {
      var x = cljs.core.first(arglist__11600);
      var y = cljs.core.first(cljs.core.next(arglist__11600));
      var more = cljs.core.rest(cljs.core.next(arglist__11600));
      return G__11599__delegate(x, y, more)
    };
    G__11599.cljs$lang$arity$variadic = G__11599__delegate;
    return G__11599
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__11602 = n % d;
  return cljs.core.fix.call(null, (n - rem__11602) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__11604 = cljs.core.quot.call(null, n, d);
  return n - d * q__11604
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__11607 = v - (v >> 1 & 1431655765);
  var v__11608 = (v__11607 & 858993459) + (v__11607 >> 2 & 858993459);
  return(v__11608 + (v__11608 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__11609__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__11610 = y;
            var G__11611 = cljs.core.first.call(null, more);
            var G__11612 = cljs.core.next.call(null, more);
            x = G__11610;
            y = G__11611;
            more = G__11612;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__11609 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11609__delegate.call(this, x, y, more)
    };
    G__11609.cljs$lang$maxFixedArity = 2;
    G__11609.cljs$lang$applyTo = function(arglist__11613) {
      var x = cljs.core.first(arglist__11613);
      var y = cljs.core.first(cljs.core.next(arglist__11613));
      var more = cljs.core.rest(cljs.core.next(arglist__11613));
      return G__11609__delegate(x, y, more)
    };
    G__11609.cljs$lang$arity$variadic = G__11609__delegate;
    return G__11609
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__11617 = n;
  var xs__11618 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____11619 = xs__11618;
      if(and__3822__auto____11619) {
        return n__11617 > 0
      }else {
        return and__3822__auto____11619
      }
    }())) {
      var G__11620 = n__11617 - 1;
      var G__11621 = cljs.core.next.call(null, xs__11618);
      n__11617 = G__11620;
      xs__11618 = G__11621;
      continue
    }else {
      return xs__11618
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__11622__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__11623 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__11624 = cljs.core.next.call(null, more);
            sb = G__11623;
            more = G__11624;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__11622 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11622__delegate.call(this, x, ys)
    };
    G__11622.cljs$lang$maxFixedArity = 1;
    G__11622.cljs$lang$applyTo = function(arglist__11625) {
      var x = cljs.core.first(arglist__11625);
      var ys = cljs.core.rest(arglist__11625);
      return G__11622__delegate(x, ys)
    };
    G__11622.cljs$lang$arity$variadic = G__11622__delegate;
    return G__11622
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__11626__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__11627 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__11628 = cljs.core.next.call(null, more);
            sb = G__11627;
            more = G__11628;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__11626 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11626__delegate.call(this, x, ys)
    };
    G__11626.cljs$lang$maxFixedArity = 1;
    G__11626.cljs$lang$applyTo = function(arglist__11629) {
      var x = cljs.core.first(arglist__11629);
      var ys = cljs.core.rest(arglist__11629);
      return G__11626__delegate(x, ys)
    };
    G__11626.cljs$lang$arity$variadic = G__11626__delegate;
    return G__11626
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__11630) {
    var fmt = cljs.core.first(arglist__11630);
    var args = cljs.core.rest(arglist__11630);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__11633 = cljs.core.seq.call(null, x);
    var ys__11634 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__11633 == null) {
        return ys__11634 == null
      }else {
        if(ys__11634 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__11633), cljs.core.first.call(null, ys__11634))) {
            var G__11635 = cljs.core.next.call(null, xs__11633);
            var G__11636 = cljs.core.next.call(null, ys__11634);
            xs__11633 = G__11635;
            ys__11634 = G__11636;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__11637_SHARP_, p2__11638_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__11637_SHARP_, cljs.core.hash.call(null, p2__11638_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__11642 = 0;
  var s__11643 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__11643) {
      var e__11644 = cljs.core.first.call(null, s__11643);
      var G__11645 = (h__11642 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__11644)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__11644)))) % 4503599627370496;
      var G__11646 = cljs.core.next.call(null, s__11643);
      h__11642 = G__11645;
      s__11643 = G__11646;
      continue
    }else {
      return h__11642
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__11650 = 0;
  var s__11651 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__11651) {
      var e__11652 = cljs.core.first.call(null, s__11651);
      var G__11653 = (h__11650 + cljs.core.hash.call(null, e__11652)) % 4503599627370496;
      var G__11654 = cljs.core.next.call(null, s__11651);
      h__11650 = G__11653;
      s__11651 = G__11654;
      continue
    }else {
      return h__11650
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__11675__11676 = cljs.core.seq.call(null, fn_map);
  if(G__11675__11676) {
    var G__11678__11680 = cljs.core.first.call(null, G__11675__11676);
    var vec__11679__11681 = G__11678__11680;
    var key_name__11682 = cljs.core.nth.call(null, vec__11679__11681, 0, null);
    var f__11683 = cljs.core.nth.call(null, vec__11679__11681, 1, null);
    var G__11675__11684 = G__11675__11676;
    var G__11678__11685 = G__11678__11680;
    var G__11675__11686 = G__11675__11684;
    while(true) {
      var vec__11687__11688 = G__11678__11685;
      var key_name__11689 = cljs.core.nth.call(null, vec__11687__11688, 0, null);
      var f__11690 = cljs.core.nth.call(null, vec__11687__11688, 1, null);
      var G__11675__11691 = G__11675__11686;
      var str_name__11692 = cljs.core.name.call(null, key_name__11689);
      obj[str_name__11692] = f__11690;
      var temp__3974__auto____11693 = cljs.core.next.call(null, G__11675__11691);
      if(temp__3974__auto____11693) {
        var G__11675__11694 = temp__3974__auto____11693;
        var G__11695 = cljs.core.first.call(null, G__11675__11694);
        var G__11696 = G__11675__11694;
        G__11678__11685 = G__11695;
        G__11675__11686 = G__11696;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11697 = this;
  var h__2093__auto____11698 = this__11697.__hash;
  if(!(h__2093__auto____11698 == null)) {
    return h__2093__auto____11698
  }else {
    var h__2093__auto____11699 = cljs.core.hash_coll.call(null, coll);
    this__11697.__hash = h__2093__auto____11699;
    return h__2093__auto____11699
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__11700 = this;
  if(this__11700.count === 1) {
    return null
  }else {
    return this__11700.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11701 = this;
  return new cljs.core.List(this__11701.meta, o, coll, this__11701.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__11702 = this;
  var this__11703 = this;
  return cljs.core.pr_str.call(null, this__11703)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11704 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11705 = this;
  return this__11705.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__11706 = this;
  return this__11706.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__11707 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11708 = this;
  return this__11708.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11709 = this;
  if(this__11709.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__11709.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11710 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11711 = this;
  return new cljs.core.List(meta, this__11711.first, this__11711.rest, this__11711.count, this__11711.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11712 = this;
  return this__11712.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11713 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11714 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__11715 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11716 = this;
  return new cljs.core.List(this__11716.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__11717 = this;
  var this__11718 = this;
  return cljs.core.pr_str.call(null, this__11718)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11719 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11720 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__11721 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__11722 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11723 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11724 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11725 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11726 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11727 = this;
  return this__11727.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11728 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__11732__11733 = coll;
  if(G__11732__11733) {
    if(function() {
      var or__3824__auto____11734 = G__11732__11733.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____11734) {
        return or__3824__auto____11734
      }else {
        return G__11732__11733.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__11732__11733.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__11732__11733)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__11732__11733)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__11735__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__11735 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11735__delegate.call(this, x, y, z, items)
    };
    G__11735.cljs$lang$maxFixedArity = 3;
    G__11735.cljs$lang$applyTo = function(arglist__11736) {
      var x = cljs.core.first(arglist__11736);
      var y = cljs.core.first(cljs.core.next(arglist__11736));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11736)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11736)));
      return G__11735__delegate(x, y, z, items)
    };
    G__11735.cljs$lang$arity$variadic = G__11735__delegate;
    return G__11735
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11737 = this;
  var h__2093__auto____11738 = this__11737.__hash;
  if(!(h__2093__auto____11738 == null)) {
    return h__2093__auto____11738
  }else {
    var h__2093__auto____11739 = cljs.core.hash_coll.call(null, coll);
    this__11737.__hash = h__2093__auto____11739;
    return h__2093__auto____11739
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__11740 = this;
  if(this__11740.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__11740.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11741 = this;
  return new cljs.core.Cons(null, o, coll, this__11741.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__11742 = this;
  var this__11743 = this;
  return cljs.core.pr_str.call(null, this__11743)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11744 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11745 = this;
  return this__11745.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11746 = this;
  if(this__11746.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__11746.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11747 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11748 = this;
  return new cljs.core.Cons(meta, this__11748.first, this__11748.rest, this__11748.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11749 = this;
  return this__11749.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11750 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__11750.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____11755 = coll == null;
    if(or__3824__auto____11755) {
      return or__3824__auto____11755
    }else {
      var G__11756__11757 = coll;
      if(G__11756__11757) {
        if(function() {
          var or__3824__auto____11758 = G__11756__11757.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____11758) {
            return or__3824__auto____11758
          }else {
            return G__11756__11757.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__11756__11757.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__11756__11757)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__11756__11757)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__11762__11763 = x;
  if(G__11762__11763) {
    if(function() {
      var or__3824__auto____11764 = G__11762__11763.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____11764) {
        return or__3824__auto____11764
      }else {
        return G__11762__11763.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__11762__11763.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__11762__11763)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__11762__11763)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__11765 = null;
  var G__11765__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__11765__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__11765 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__11765__2.call(this, string, f);
      case 3:
        return G__11765__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11765
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__11766 = null;
  var G__11766__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__11766__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__11766 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11766__2.call(this, string, k);
      case 3:
        return G__11766__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11766
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__11767 = null;
  var G__11767__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__11767__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__11767 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11767__2.call(this, string, n);
      case 3:
        return G__11767__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11767
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__11779 = null;
  var G__11779__2 = function(this_sym11770, coll) {
    var this__11772 = this;
    var this_sym11770__11773 = this;
    var ___11774 = this_sym11770__11773;
    if(coll == null) {
      return null
    }else {
      var strobj__11775 = coll.strobj;
      if(strobj__11775 == null) {
        return cljs.core._lookup.call(null, coll, this__11772.k, null)
      }else {
        return strobj__11775[this__11772.k]
      }
    }
  };
  var G__11779__3 = function(this_sym11771, coll, not_found) {
    var this__11772 = this;
    var this_sym11771__11776 = this;
    var ___11777 = this_sym11771__11776;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__11772.k, not_found)
    }
  };
  G__11779 = function(this_sym11771, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11779__2.call(this, this_sym11771, coll);
      case 3:
        return G__11779__3.call(this, this_sym11771, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11779
}();
cljs.core.Keyword.prototype.apply = function(this_sym11768, args11769) {
  var this__11778 = this;
  return this_sym11768.call.apply(this_sym11768, [this_sym11768].concat(args11769.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__11788 = null;
  var G__11788__2 = function(this_sym11782, coll) {
    var this_sym11782__11784 = this;
    var this__11785 = this_sym11782__11784;
    return cljs.core._lookup.call(null, coll, this__11785.toString(), null)
  };
  var G__11788__3 = function(this_sym11783, coll, not_found) {
    var this_sym11783__11786 = this;
    var this__11787 = this_sym11783__11786;
    return cljs.core._lookup.call(null, coll, this__11787.toString(), not_found)
  };
  G__11788 = function(this_sym11783, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11788__2.call(this, this_sym11783, coll);
      case 3:
        return G__11788__3.call(this, this_sym11783, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11788
}();
String.prototype.apply = function(this_sym11780, args11781) {
  return this_sym11780.call.apply(this_sym11780, [this_sym11780].concat(args11781.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__11790 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__11790
  }else {
    lazy_seq.x = x__11790.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11791 = this;
  var h__2093__auto____11792 = this__11791.__hash;
  if(!(h__2093__auto____11792 == null)) {
    return h__2093__auto____11792
  }else {
    var h__2093__auto____11793 = cljs.core.hash_coll.call(null, coll);
    this__11791.__hash = h__2093__auto____11793;
    return h__2093__auto____11793
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__11794 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11795 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__11796 = this;
  var this__11797 = this;
  return cljs.core.pr_str.call(null, this__11797)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11798 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11799 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11800 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11801 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11802 = this;
  return new cljs.core.LazySeq(meta, this__11802.realized, this__11802.x, this__11802.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11803 = this;
  return this__11803.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11804 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__11804.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__11805 = this;
  return this__11805.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__11806 = this;
  var ___11807 = this;
  this__11806.buf[this__11806.end] = o;
  return this__11806.end = this__11806.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__11808 = this;
  var ___11809 = this;
  var ret__11810 = new cljs.core.ArrayChunk(this__11808.buf, 0, this__11808.end);
  this__11808.buf = null;
  return ret__11810
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__11811 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__11811.arr[this__11811.off], this__11811.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__11812 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__11812.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__11813 = this;
  if(this__11813.off === this__11813.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__11813.arr, this__11813.off + 1, this__11813.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__11814 = this;
  return this__11814.arr[this__11814.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__11815 = this;
  if(function() {
    var and__3822__auto____11816 = i >= 0;
    if(and__3822__auto____11816) {
      return i < this__11815.end - this__11815.off
    }else {
      return and__3822__auto____11816
    }
  }()) {
    return this__11815.arr[this__11815.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__11817 = this;
  return this__11817.end - this__11817.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__11818 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11819 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11820 = this;
  return cljs.core._nth.call(null, this__11820.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11821 = this;
  if(cljs.core._count.call(null, this__11821.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__11821.chunk), this__11821.more, this__11821.meta)
  }else {
    if(this__11821.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__11821.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__11822 = this;
  if(this__11822.more == null) {
    return null
  }else {
    return this__11822.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11823 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__11824 = this;
  return new cljs.core.ChunkedCons(this__11824.chunk, this__11824.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11825 = this;
  return this__11825.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__11826 = this;
  return this__11826.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__11827 = this;
  if(this__11827.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__11827.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__11831__11832 = s;
    if(G__11831__11832) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____11833 = null;
        if(cljs.core.truth_(or__3824__auto____11833)) {
          return or__3824__auto____11833
        }else {
          return G__11831__11832.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__11831__11832.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__11831__11832)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__11831__11832)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__11836 = [];
  var s__11837 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__11837)) {
      ary__11836.push(cljs.core.first.call(null, s__11837));
      var G__11838 = cljs.core.next.call(null, s__11837);
      s__11837 = G__11838;
      continue
    }else {
      return ary__11836
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__11842 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__11843 = 0;
  var xs__11844 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__11844) {
      ret__11842[i__11843] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__11844));
      var G__11845 = i__11843 + 1;
      var G__11846 = cljs.core.next.call(null, xs__11844);
      i__11843 = G__11845;
      xs__11844 = G__11846;
      continue
    }else {
    }
    break
  }
  return ret__11842
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__11854 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__11855 = cljs.core.seq.call(null, init_val_or_seq);
      var i__11856 = 0;
      var s__11857 = s__11855;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____11858 = s__11857;
          if(and__3822__auto____11858) {
            return i__11856 < size
          }else {
            return and__3822__auto____11858
          }
        }())) {
          a__11854[i__11856] = cljs.core.first.call(null, s__11857);
          var G__11861 = i__11856 + 1;
          var G__11862 = cljs.core.next.call(null, s__11857);
          i__11856 = G__11861;
          s__11857 = G__11862;
          continue
        }else {
          return a__11854
        }
        break
      }
    }else {
      var n__2428__auto____11859 = size;
      var i__11860 = 0;
      while(true) {
        if(i__11860 < n__2428__auto____11859) {
          a__11854[i__11860] = init_val_or_seq;
          var G__11863 = i__11860 + 1;
          i__11860 = G__11863;
          continue
        }else {
        }
        break
      }
      return a__11854
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__11871 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__11872 = cljs.core.seq.call(null, init_val_or_seq);
      var i__11873 = 0;
      var s__11874 = s__11872;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____11875 = s__11874;
          if(and__3822__auto____11875) {
            return i__11873 < size
          }else {
            return and__3822__auto____11875
          }
        }())) {
          a__11871[i__11873] = cljs.core.first.call(null, s__11874);
          var G__11878 = i__11873 + 1;
          var G__11879 = cljs.core.next.call(null, s__11874);
          i__11873 = G__11878;
          s__11874 = G__11879;
          continue
        }else {
          return a__11871
        }
        break
      }
    }else {
      var n__2428__auto____11876 = size;
      var i__11877 = 0;
      while(true) {
        if(i__11877 < n__2428__auto____11876) {
          a__11871[i__11877] = init_val_or_seq;
          var G__11880 = i__11877 + 1;
          i__11877 = G__11880;
          continue
        }else {
        }
        break
      }
      return a__11871
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__11888 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__11889 = cljs.core.seq.call(null, init_val_or_seq);
      var i__11890 = 0;
      var s__11891 = s__11889;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____11892 = s__11891;
          if(and__3822__auto____11892) {
            return i__11890 < size
          }else {
            return and__3822__auto____11892
          }
        }())) {
          a__11888[i__11890] = cljs.core.first.call(null, s__11891);
          var G__11895 = i__11890 + 1;
          var G__11896 = cljs.core.next.call(null, s__11891);
          i__11890 = G__11895;
          s__11891 = G__11896;
          continue
        }else {
          return a__11888
        }
        break
      }
    }else {
      var n__2428__auto____11893 = size;
      var i__11894 = 0;
      while(true) {
        if(i__11894 < n__2428__auto____11893) {
          a__11888[i__11894] = init_val_or_seq;
          var G__11897 = i__11894 + 1;
          i__11894 = G__11897;
          continue
        }else {
        }
        break
      }
      return a__11888
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__11902 = s;
    var i__11903 = n;
    var sum__11904 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____11905 = i__11903 > 0;
        if(and__3822__auto____11905) {
          return cljs.core.seq.call(null, s__11902)
        }else {
          return and__3822__auto____11905
        }
      }())) {
        var G__11906 = cljs.core.next.call(null, s__11902);
        var G__11907 = i__11903 - 1;
        var G__11908 = sum__11904 + 1;
        s__11902 = G__11906;
        i__11903 = G__11907;
        sum__11904 = G__11908;
        continue
      }else {
        return sum__11904
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__11913 = cljs.core.seq.call(null, x);
      if(s__11913) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__11913)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__11913), concat.call(null, cljs.core.chunk_rest.call(null, s__11913), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__11913), concat.call(null, cljs.core.rest.call(null, s__11913), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__11917__delegate = function(x, y, zs) {
      var cat__11916 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__11915 = cljs.core.seq.call(null, xys);
          if(xys__11915) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__11915)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__11915), cat.call(null, cljs.core.chunk_rest.call(null, xys__11915), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__11915), cat.call(null, cljs.core.rest.call(null, xys__11915), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__11916.call(null, concat.call(null, x, y), zs)
    };
    var G__11917 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11917__delegate.call(this, x, y, zs)
    };
    G__11917.cljs$lang$maxFixedArity = 2;
    G__11917.cljs$lang$applyTo = function(arglist__11918) {
      var x = cljs.core.first(arglist__11918);
      var y = cljs.core.first(cljs.core.next(arglist__11918));
      var zs = cljs.core.rest(cljs.core.next(arglist__11918));
      return G__11917__delegate(x, y, zs)
    };
    G__11917.cljs$lang$arity$variadic = G__11917__delegate;
    return G__11917
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__11919__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__11919 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__11919__delegate.call(this, a, b, c, d, more)
    };
    G__11919.cljs$lang$maxFixedArity = 4;
    G__11919.cljs$lang$applyTo = function(arglist__11920) {
      var a = cljs.core.first(arglist__11920);
      var b = cljs.core.first(cljs.core.next(arglist__11920));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11920)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11920))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11920))));
      return G__11919__delegate(a, b, c, d, more)
    };
    G__11919.cljs$lang$arity$variadic = G__11919__delegate;
    return G__11919
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__11962 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__11963 = cljs.core._first.call(null, args__11962);
    var args__11964 = cljs.core._rest.call(null, args__11962);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__11963)
      }else {
        return f.call(null, a__11963)
      }
    }else {
      var b__11965 = cljs.core._first.call(null, args__11964);
      var args__11966 = cljs.core._rest.call(null, args__11964);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__11963, b__11965)
        }else {
          return f.call(null, a__11963, b__11965)
        }
      }else {
        var c__11967 = cljs.core._first.call(null, args__11966);
        var args__11968 = cljs.core._rest.call(null, args__11966);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__11963, b__11965, c__11967)
          }else {
            return f.call(null, a__11963, b__11965, c__11967)
          }
        }else {
          var d__11969 = cljs.core._first.call(null, args__11968);
          var args__11970 = cljs.core._rest.call(null, args__11968);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__11963, b__11965, c__11967, d__11969)
            }else {
              return f.call(null, a__11963, b__11965, c__11967, d__11969)
            }
          }else {
            var e__11971 = cljs.core._first.call(null, args__11970);
            var args__11972 = cljs.core._rest.call(null, args__11970);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__11963, b__11965, c__11967, d__11969, e__11971)
              }else {
                return f.call(null, a__11963, b__11965, c__11967, d__11969, e__11971)
              }
            }else {
              var f__11973 = cljs.core._first.call(null, args__11972);
              var args__11974 = cljs.core._rest.call(null, args__11972);
              if(argc === 6) {
                if(f__11973.cljs$lang$arity$6) {
                  return f__11973.cljs$lang$arity$6(a__11963, b__11965, c__11967, d__11969, e__11971, f__11973)
                }else {
                  return f__11973.call(null, a__11963, b__11965, c__11967, d__11969, e__11971, f__11973)
                }
              }else {
                var g__11975 = cljs.core._first.call(null, args__11974);
                var args__11976 = cljs.core._rest.call(null, args__11974);
                if(argc === 7) {
                  if(f__11973.cljs$lang$arity$7) {
                    return f__11973.cljs$lang$arity$7(a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975)
                  }else {
                    return f__11973.call(null, a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975)
                  }
                }else {
                  var h__11977 = cljs.core._first.call(null, args__11976);
                  var args__11978 = cljs.core._rest.call(null, args__11976);
                  if(argc === 8) {
                    if(f__11973.cljs$lang$arity$8) {
                      return f__11973.cljs$lang$arity$8(a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977)
                    }else {
                      return f__11973.call(null, a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977)
                    }
                  }else {
                    var i__11979 = cljs.core._first.call(null, args__11978);
                    var args__11980 = cljs.core._rest.call(null, args__11978);
                    if(argc === 9) {
                      if(f__11973.cljs$lang$arity$9) {
                        return f__11973.cljs$lang$arity$9(a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979)
                      }else {
                        return f__11973.call(null, a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979)
                      }
                    }else {
                      var j__11981 = cljs.core._first.call(null, args__11980);
                      var args__11982 = cljs.core._rest.call(null, args__11980);
                      if(argc === 10) {
                        if(f__11973.cljs$lang$arity$10) {
                          return f__11973.cljs$lang$arity$10(a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979, j__11981)
                        }else {
                          return f__11973.call(null, a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979, j__11981)
                        }
                      }else {
                        var k__11983 = cljs.core._first.call(null, args__11982);
                        var args__11984 = cljs.core._rest.call(null, args__11982);
                        if(argc === 11) {
                          if(f__11973.cljs$lang$arity$11) {
                            return f__11973.cljs$lang$arity$11(a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979, j__11981, k__11983)
                          }else {
                            return f__11973.call(null, a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979, j__11981, k__11983)
                          }
                        }else {
                          var l__11985 = cljs.core._first.call(null, args__11984);
                          var args__11986 = cljs.core._rest.call(null, args__11984);
                          if(argc === 12) {
                            if(f__11973.cljs$lang$arity$12) {
                              return f__11973.cljs$lang$arity$12(a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979, j__11981, k__11983, l__11985)
                            }else {
                              return f__11973.call(null, a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979, j__11981, k__11983, l__11985)
                            }
                          }else {
                            var m__11987 = cljs.core._first.call(null, args__11986);
                            var args__11988 = cljs.core._rest.call(null, args__11986);
                            if(argc === 13) {
                              if(f__11973.cljs$lang$arity$13) {
                                return f__11973.cljs$lang$arity$13(a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979, j__11981, k__11983, l__11985, m__11987)
                              }else {
                                return f__11973.call(null, a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979, j__11981, k__11983, l__11985, m__11987)
                              }
                            }else {
                              var n__11989 = cljs.core._first.call(null, args__11988);
                              var args__11990 = cljs.core._rest.call(null, args__11988);
                              if(argc === 14) {
                                if(f__11973.cljs$lang$arity$14) {
                                  return f__11973.cljs$lang$arity$14(a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979, j__11981, k__11983, l__11985, m__11987, n__11989)
                                }else {
                                  return f__11973.call(null, a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979, j__11981, k__11983, l__11985, m__11987, n__11989)
                                }
                              }else {
                                var o__11991 = cljs.core._first.call(null, args__11990);
                                var args__11992 = cljs.core._rest.call(null, args__11990);
                                if(argc === 15) {
                                  if(f__11973.cljs$lang$arity$15) {
                                    return f__11973.cljs$lang$arity$15(a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979, j__11981, k__11983, l__11985, m__11987, n__11989, o__11991)
                                  }else {
                                    return f__11973.call(null, a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979, j__11981, k__11983, l__11985, m__11987, n__11989, o__11991)
                                  }
                                }else {
                                  var p__11993 = cljs.core._first.call(null, args__11992);
                                  var args__11994 = cljs.core._rest.call(null, args__11992);
                                  if(argc === 16) {
                                    if(f__11973.cljs$lang$arity$16) {
                                      return f__11973.cljs$lang$arity$16(a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979, j__11981, k__11983, l__11985, m__11987, n__11989, o__11991, p__11993)
                                    }else {
                                      return f__11973.call(null, a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979, j__11981, k__11983, l__11985, m__11987, n__11989, o__11991, p__11993)
                                    }
                                  }else {
                                    var q__11995 = cljs.core._first.call(null, args__11994);
                                    var args__11996 = cljs.core._rest.call(null, args__11994);
                                    if(argc === 17) {
                                      if(f__11973.cljs$lang$arity$17) {
                                        return f__11973.cljs$lang$arity$17(a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979, j__11981, k__11983, l__11985, m__11987, n__11989, o__11991, p__11993, q__11995)
                                      }else {
                                        return f__11973.call(null, a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979, j__11981, k__11983, l__11985, m__11987, n__11989, o__11991, p__11993, q__11995)
                                      }
                                    }else {
                                      var r__11997 = cljs.core._first.call(null, args__11996);
                                      var args__11998 = cljs.core._rest.call(null, args__11996);
                                      if(argc === 18) {
                                        if(f__11973.cljs$lang$arity$18) {
                                          return f__11973.cljs$lang$arity$18(a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979, j__11981, k__11983, l__11985, m__11987, n__11989, o__11991, p__11993, q__11995, r__11997)
                                        }else {
                                          return f__11973.call(null, a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979, j__11981, k__11983, l__11985, m__11987, n__11989, o__11991, p__11993, q__11995, r__11997)
                                        }
                                      }else {
                                        var s__11999 = cljs.core._first.call(null, args__11998);
                                        var args__12000 = cljs.core._rest.call(null, args__11998);
                                        if(argc === 19) {
                                          if(f__11973.cljs$lang$arity$19) {
                                            return f__11973.cljs$lang$arity$19(a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979, j__11981, k__11983, l__11985, m__11987, n__11989, o__11991, p__11993, q__11995, r__11997, s__11999)
                                          }else {
                                            return f__11973.call(null, a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979, j__11981, k__11983, l__11985, m__11987, n__11989, o__11991, p__11993, q__11995, r__11997, s__11999)
                                          }
                                        }else {
                                          var t__12001 = cljs.core._first.call(null, args__12000);
                                          var args__12002 = cljs.core._rest.call(null, args__12000);
                                          if(argc === 20) {
                                            if(f__11973.cljs$lang$arity$20) {
                                              return f__11973.cljs$lang$arity$20(a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979, j__11981, k__11983, l__11985, m__11987, n__11989, o__11991, p__11993, q__11995, r__11997, s__11999, t__12001)
                                            }else {
                                              return f__11973.call(null, a__11963, b__11965, c__11967, d__11969, e__11971, f__11973, g__11975, h__11977, i__11979, j__11981, k__11983, l__11985, m__11987, n__11989, o__11991, p__11993, q__11995, r__11997, s__11999, t__12001)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__12017 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__12018 = cljs.core.bounded_count.call(null, args, fixed_arity__12017 + 1);
      if(bc__12018 <= fixed_arity__12017) {
        return cljs.core.apply_to.call(null, f, bc__12018, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__12019 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__12020 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__12021 = cljs.core.bounded_count.call(null, arglist__12019, fixed_arity__12020 + 1);
      if(bc__12021 <= fixed_arity__12020) {
        return cljs.core.apply_to.call(null, f, bc__12021, arglist__12019)
      }else {
        return f.cljs$lang$applyTo(arglist__12019)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__12019))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__12022 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__12023 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__12024 = cljs.core.bounded_count.call(null, arglist__12022, fixed_arity__12023 + 1);
      if(bc__12024 <= fixed_arity__12023) {
        return cljs.core.apply_to.call(null, f, bc__12024, arglist__12022)
      }else {
        return f.cljs$lang$applyTo(arglist__12022)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__12022))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__12025 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__12026 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__12027 = cljs.core.bounded_count.call(null, arglist__12025, fixed_arity__12026 + 1);
      if(bc__12027 <= fixed_arity__12026) {
        return cljs.core.apply_to.call(null, f, bc__12027, arglist__12025)
      }else {
        return f.cljs$lang$applyTo(arglist__12025)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__12025))
    }
  };
  var apply__6 = function() {
    var G__12031__delegate = function(f, a, b, c, d, args) {
      var arglist__12028 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__12029 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__12030 = cljs.core.bounded_count.call(null, arglist__12028, fixed_arity__12029 + 1);
        if(bc__12030 <= fixed_arity__12029) {
          return cljs.core.apply_to.call(null, f, bc__12030, arglist__12028)
        }else {
          return f.cljs$lang$applyTo(arglist__12028)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__12028))
      }
    };
    var G__12031 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__12031__delegate.call(this, f, a, b, c, d, args)
    };
    G__12031.cljs$lang$maxFixedArity = 5;
    G__12031.cljs$lang$applyTo = function(arglist__12032) {
      var f = cljs.core.first(arglist__12032);
      var a = cljs.core.first(cljs.core.next(arglist__12032));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12032)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12032))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12032)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12032)))));
      return G__12031__delegate(f, a, b, c, d, args)
    };
    G__12031.cljs$lang$arity$variadic = G__12031__delegate;
    return G__12031
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__12033) {
    var obj = cljs.core.first(arglist__12033);
    var f = cljs.core.first(cljs.core.next(arglist__12033));
    var args = cljs.core.rest(cljs.core.next(arglist__12033));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__12034__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__12034 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12034__delegate.call(this, x, y, more)
    };
    G__12034.cljs$lang$maxFixedArity = 2;
    G__12034.cljs$lang$applyTo = function(arglist__12035) {
      var x = cljs.core.first(arglist__12035);
      var y = cljs.core.first(cljs.core.next(arglist__12035));
      var more = cljs.core.rest(cljs.core.next(arglist__12035));
      return G__12034__delegate(x, y, more)
    };
    G__12034.cljs$lang$arity$variadic = G__12034__delegate;
    return G__12034
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__12036 = pred;
        var G__12037 = cljs.core.next.call(null, coll);
        pred = G__12036;
        coll = G__12037;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____12039 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____12039)) {
        return or__3824__auto____12039
      }else {
        var G__12040 = pred;
        var G__12041 = cljs.core.next.call(null, coll);
        pred = G__12040;
        coll = G__12041;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__12042 = null;
    var G__12042__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__12042__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__12042__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__12042__3 = function() {
      var G__12043__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__12043 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__12043__delegate.call(this, x, y, zs)
      };
      G__12043.cljs$lang$maxFixedArity = 2;
      G__12043.cljs$lang$applyTo = function(arglist__12044) {
        var x = cljs.core.first(arglist__12044);
        var y = cljs.core.first(cljs.core.next(arglist__12044));
        var zs = cljs.core.rest(cljs.core.next(arglist__12044));
        return G__12043__delegate(x, y, zs)
      };
      G__12043.cljs$lang$arity$variadic = G__12043__delegate;
      return G__12043
    }();
    G__12042 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__12042__0.call(this);
        case 1:
          return G__12042__1.call(this, x);
        case 2:
          return G__12042__2.call(this, x, y);
        default:
          return G__12042__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__12042.cljs$lang$maxFixedArity = 2;
    G__12042.cljs$lang$applyTo = G__12042__3.cljs$lang$applyTo;
    return G__12042
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__12045__delegate = function(args) {
      return x
    };
    var G__12045 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__12045__delegate.call(this, args)
    };
    G__12045.cljs$lang$maxFixedArity = 0;
    G__12045.cljs$lang$applyTo = function(arglist__12046) {
      var args = cljs.core.seq(arglist__12046);
      return G__12045__delegate(args)
    };
    G__12045.cljs$lang$arity$variadic = G__12045__delegate;
    return G__12045
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__12053 = null;
      var G__12053__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__12053__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__12053__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__12053__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__12053__4 = function() {
        var G__12054__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__12054 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12054__delegate.call(this, x, y, z, args)
        };
        G__12054.cljs$lang$maxFixedArity = 3;
        G__12054.cljs$lang$applyTo = function(arglist__12055) {
          var x = cljs.core.first(arglist__12055);
          var y = cljs.core.first(cljs.core.next(arglist__12055));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12055)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12055)));
          return G__12054__delegate(x, y, z, args)
        };
        G__12054.cljs$lang$arity$variadic = G__12054__delegate;
        return G__12054
      }();
      G__12053 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12053__0.call(this);
          case 1:
            return G__12053__1.call(this, x);
          case 2:
            return G__12053__2.call(this, x, y);
          case 3:
            return G__12053__3.call(this, x, y, z);
          default:
            return G__12053__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__12053.cljs$lang$maxFixedArity = 3;
      G__12053.cljs$lang$applyTo = G__12053__4.cljs$lang$applyTo;
      return G__12053
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__12056 = null;
      var G__12056__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__12056__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__12056__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__12056__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__12056__4 = function() {
        var G__12057__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__12057 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12057__delegate.call(this, x, y, z, args)
        };
        G__12057.cljs$lang$maxFixedArity = 3;
        G__12057.cljs$lang$applyTo = function(arglist__12058) {
          var x = cljs.core.first(arglist__12058);
          var y = cljs.core.first(cljs.core.next(arglist__12058));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12058)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12058)));
          return G__12057__delegate(x, y, z, args)
        };
        G__12057.cljs$lang$arity$variadic = G__12057__delegate;
        return G__12057
      }();
      G__12056 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12056__0.call(this);
          case 1:
            return G__12056__1.call(this, x);
          case 2:
            return G__12056__2.call(this, x, y);
          case 3:
            return G__12056__3.call(this, x, y, z);
          default:
            return G__12056__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__12056.cljs$lang$maxFixedArity = 3;
      G__12056.cljs$lang$applyTo = G__12056__4.cljs$lang$applyTo;
      return G__12056
    }()
  };
  var comp__4 = function() {
    var G__12059__delegate = function(f1, f2, f3, fs) {
      var fs__12050 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__12060__delegate = function(args) {
          var ret__12051 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__12050), args);
          var fs__12052 = cljs.core.next.call(null, fs__12050);
          while(true) {
            if(fs__12052) {
              var G__12061 = cljs.core.first.call(null, fs__12052).call(null, ret__12051);
              var G__12062 = cljs.core.next.call(null, fs__12052);
              ret__12051 = G__12061;
              fs__12052 = G__12062;
              continue
            }else {
              return ret__12051
            }
            break
          }
        };
        var G__12060 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__12060__delegate.call(this, args)
        };
        G__12060.cljs$lang$maxFixedArity = 0;
        G__12060.cljs$lang$applyTo = function(arglist__12063) {
          var args = cljs.core.seq(arglist__12063);
          return G__12060__delegate(args)
        };
        G__12060.cljs$lang$arity$variadic = G__12060__delegate;
        return G__12060
      }()
    };
    var G__12059 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12059__delegate.call(this, f1, f2, f3, fs)
    };
    G__12059.cljs$lang$maxFixedArity = 3;
    G__12059.cljs$lang$applyTo = function(arglist__12064) {
      var f1 = cljs.core.first(arglist__12064);
      var f2 = cljs.core.first(cljs.core.next(arglist__12064));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12064)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12064)));
      return G__12059__delegate(f1, f2, f3, fs)
    };
    G__12059.cljs$lang$arity$variadic = G__12059__delegate;
    return G__12059
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__12065__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__12065 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__12065__delegate.call(this, args)
      };
      G__12065.cljs$lang$maxFixedArity = 0;
      G__12065.cljs$lang$applyTo = function(arglist__12066) {
        var args = cljs.core.seq(arglist__12066);
        return G__12065__delegate(args)
      };
      G__12065.cljs$lang$arity$variadic = G__12065__delegate;
      return G__12065
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__12067__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__12067 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__12067__delegate.call(this, args)
      };
      G__12067.cljs$lang$maxFixedArity = 0;
      G__12067.cljs$lang$applyTo = function(arglist__12068) {
        var args = cljs.core.seq(arglist__12068);
        return G__12067__delegate(args)
      };
      G__12067.cljs$lang$arity$variadic = G__12067__delegate;
      return G__12067
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__12069__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__12069 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__12069__delegate.call(this, args)
      };
      G__12069.cljs$lang$maxFixedArity = 0;
      G__12069.cljs$lang$applyTo = function(arglist__12070) {
        var args = cljs.core.seq(arglist__12070);
        return G__12069__delegate(args)
      };
      G__12069.cljs$lang$arity$variadic = G__12069__delegate;
      return G__12069
    }()
  };
  var partial__5 = function() {
    var G__12071__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__12072__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__12072 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__12072__delegate.call(this, args)
        };
        G__12072.cljs$lang$maxFixedArity = 0;
        G__12072.cljs$lang$applyTo = function(arglist__12073) {
          var args = cljs.core.seq(arglist__12073);
          return G__12072__delegate(args)
        };
        G__12072.cljs$lang$arity$variadic = G__12072__delegate;
        return G__12072
      }()
    };
    var G__12071 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__12071__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__12071.cljs$lang$maxFixedArity = 4;
    G__12071.cljs$lang$applyTo = function(arglist__12074) {
      var f = cljs.core.first(arglist__12074);
      var arg1 = cljs.core.first(cljs.core.next(arglist__12074));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12074)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12074))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12074))));
      return G__12071__delegate(f, arg1, arg2, arg3, more)
    };
    G__12071.cljs$lang$arity$variadic = G__12071__delegate;
    return G__12071
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__12075 = null;
      var G__12075__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__12075__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__12075__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__12075__4 = function() {
        var G__12076__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__12076 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12076__delegate.call(this, a, b, c, ds)
        };
        G__12076.cljs$lang$maxFixedArity = 3;
        G__12076.cljs$lang$applyTo = function(arglist__12077) {
          var a = cljs.core.first(arglist__12077);
          var b = cljs.core.first(cljs.core.next(arglist__12077));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12077)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12077)));
          return G__12076__delegate(a, b, c, ds)
        };
        G__12076.cljs$lang$arity$variadic = G__12076__delegate;
        return G__12076
      }();
      G__12075 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__12075__1.call(this, a);
          case 2:
            return G__12075__2.call(this, a, b);
          case 3:
            return G__12075__3.call(this, a, b, c);
          default:
            return G__12075__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__12075.cljs$lang$maxFixedArity = 3;
      G__12075.cljs$lang$applyTo = G__12075__4.cljs$lang$applyTo;
      return G__12075
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__12078 = null;
      var G__12078__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__12078__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__12078__4 = function() {
        var G__12079__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__12079 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12079__delegate.call(this, a, b, c, ds)
        };
        G__12079.cljs$lang$maxFixedArity = 3;
        G__12079.cljs$lang$applyTo = function(arglist__12080) {
          var a = cljs.core.first(arglist__12080);
          var b = cljs.core.first(cljs.core.next(arglist__12080));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12080)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12080)));
          return G__12079__delegate(a, b, c, ds)
        };
        G__12079.cljs$lang$arity$variadic = G__12079__delegate;
        return G__12079
      }();
      G__12078 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__12078__2.call(this, a, b);
          case 3:
            return G__12078__3.call(this, a, b, c);
          default:
            return G__12078__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__12078.cljs$lang$maxFixedArity = 3;
      G__12078.cljs$lang$applyTo = G__12078__4.cljs$lang$applyTo;
      return G__12078
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__12081 = null;
      var G__12081__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__12081__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__12081__4 = function() {
        var G__12082__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__12082 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12082__delegate.call(this, a, b, c, ds)
        };
        G__12082.cljs$lang$maxFixedArity = 3;
        G__12082.cljs$lang$applyTo = function(arglist__12083) {
          var a = cljs.core.first(arglist__12083);
          var b = cljs.core.first(cljs.core.next(arglist__12083));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12083)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12083)));
          return G__12082__delegate(a, b, c, ds)
        };
        G__12082.cljs$lang$arity$variadic = G__12082__delegate;
        return G__12082
      }();
      G__12081 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__12081__2.call(this, a, b);
          case 3:
            return G__12081__3.call(this, a, b, c);
          default:
            return G__12081__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__12081.cljs$lang$maxFixedArity = 3;
      G__12081.cljs$lang$applyTo = G__12081__4.cljs$lang$applyTo;
      return G__12081
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__12099 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____12107 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____12107) {
        var s__12108 = temp__3974__auto____12107;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__12108)) {
          var c__12109 = cljs.core.chunk_first.call(null, s__12108);
          var size__12110 = cljs.core.count.call(null, c__12109);
          var b__12111 = cljs.core.chunk_buffer.call(null, size__12110);
          var n__2428__auto____12112 = size__12110;
          var i__12113 = 0;
          while(true) {
            if(i__12113 < n__2428__auto____12112) {
              cljs.core.chunk_append.call(null, b__12111, f.call(null, idx + i__12113, cljs.core._nth.call(null, c__12109, i__12113)));
              var G__12114 = i__12113 + 1;
              i__12113 = G__12114;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12111), mapi.call(null, idx + size__12110, cljs.core.chunk_rest.call(null, s__12108)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__12108)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__12108)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__12099.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____12124 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____12124) {
      var s__12125 = temp__3974__auto____12124;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__12125)) {
        var c__12126 = cljs.core.chunk_first.call(null, s__12125);
        var size__12127 = cljs.core.count.call(null, c__12126);
        var b__12128 = cljs.core.chunk_buffer.call(null, size__12127);
        var n__2428__auto____12129 = size__12127;
        var i__12130 = 0;
        while(true) {
          if(i__12130 < n__2428__auto____12129) {
            var x__12131 = f.call(null, cljs.core._nth.call(null, c__12126, i__12130));
            if(x__12131 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__12128, x__12131)
            }
            var G__12133 = i__12130 + 1;
            i__12130 = G__12133;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12128), keep.call(null, f, cljs.core.chunk_rest.call(null, s__12125)))
      }else {
        var x__12132 = f.call(null, cljs.core.first.call(null, s__12125));
        if(x__12132 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__12125))
        }else {
          return cljs.core.cons.call(null, x__12132, keep.call(null, f, cljs.core.rest.call(null, s__12125)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__12159 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____12169 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____12169) {
        var s__12170 = temp__3974__auto____12169;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__12170)) {
          var c__12171 = cljs.core.chunk_first.call(null, s__12170);
          var size__12172 = cljs.core.count.call(null, c__12171);
          var b__12173 = cljs.core.chunk_buffer.call(null, size__12172);
          var n__2428__auto____12174 = size__12172;
          var i__12175 = 0;
          while(true) {
            if(i__12175 < n__2428__auto____12174) {
              var x__12176 = f.call(null, idx + i__12175, cljs.core._nth.call(null, c__12171, i__12175));
              if(x__12176 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__12173, x__12176)
              }
              var G__12178 = i__12175 + 1;
              i__12175 = G__12178;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12173), keepi.call(null, idx + size__12172, cljs.core.chunk_rest.call(null, s__12170)))
        }else {
          var x__12177 = f.call(null, idx, cljs.core.first.call(null, s__12170));
          if(x__12177 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__12170))
          }else {
            return cljs.core.cons.call(null, x__12177, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__12170)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__12159.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12264 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12264)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____12264
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12265 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12265)) {
            var and__3822__auto____12266 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____12266)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____12266
            }
          }else {
            return and__3822__auto____12265
          }
        }())
      };
      var ep1__4 = function() {
        var G__12335__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____12267 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____12267)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____12267
            }
          }())
        };
        var G__12335 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12335__delegate.call(this, x, y, z, args)
        };
        G__12335.cljs$lang$maxFixedArity = 3;
        G__12335.cljs$lang$applyTo = function(arglist__12336) {
          var x = cljs.core.first(arglist__12336);
          var y = cljs.core.first(cljs.core.next(arglist__12336));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12336)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12336)));
          return G__12335__delegate(x, y, z, args)
        };
        G__12335.cljs$lang$arity$variadic = G__12335__delegate;
        return G__12335
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12279 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12279)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____12279
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12280 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12280)) {
            var and__3822__auto____12281 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____12281)) {
              var and__3822__auto____12282 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____12282)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____12282
              }
            }else {
              return and__3822__auto____12281
            }
          }else {
            return and__3822__auto____12280
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12283 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12283)) {
            var and__3822__auto____12284 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____12284)) {
              var and__3822__auto____12285 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____12285)) {
                var and__3822__auto____12286 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____12286)) {
                  var and__3822__auto____12287 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____12287)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____12287
                  }
                }else {
                  return and__3822__auto____12286
                }
              }else {
                return and__3822__auto____12285
              }
            }else {
              return and__3822__auto____12284
            }
          }else {
            return and__3822__auto____12283
          }
        }())
      };
      var ep2__4 = function() {
        var G__12337__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____12288 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____12288)) {
              return cljs.core.every_QMARK_.call(null, function(p1__12134_SHARP_) {
                var and__3822__auto____12289 = p1.call(null, p1__12134_SHARP_);
                if(cljs.core.truth_(and__3822__auto____12289)) {
                  return p2.call(null, p1__12134_SHARP_)
                }else {
                  return and__3822__auto____12289
                }
              }, args)
            }else {
              return and__3822__auto____12288
            }
          }())
        };
        var G__12337 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12337__delegate.call(this, x, y, z, args)
        };
        G__12337.cljs$lang$maxFixedArity = 3;
        G__12337.cljs$lang$applyTo = function(arglist__12338) {
          var x = cljs.core.first(arglist__12338);
          var y = cljs.core.first(cljs.core.next(arglist__12338));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12338)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12338)));
          return G__12337__delegate(x, y, z, args)
        };
        G__12337.cljs$lang$arity$variadic = G__12337__delegate;
        return G__12337
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12308 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12308)) {
            var and__3822__auto____12309 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____12309)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____12309
            }
          }else {
            return and__3822__auto____12308
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12310 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12310)) {
            var and__3822__auto____12311 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____12311)) {
              var and__3822__auto____12312 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____12312)) {
                var and__3822__auto____12313 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____12313)) {
                  var and__3822__auto____12314 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____12314)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____12314
                  }
                }else {
                  return and__3822__auto____12313
                }
              }else {
                return and__3822__auto____12312
              }
            }else {
              return and__3822__auto____12311
            }
          }else {
            return and__3822__auto____12310
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12315 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12315)) {
            var and__3822__auto____12316 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____12316)) {
              var and__3822__auto____12317 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____12317)) {
                var and__3822__auto____12318 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____12318)) {
                  var and__3822__auto____12319 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____12319)) {
                    var and__3822__auto____12320 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____12320)) {
                      var and__3822__auto____12321 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____12321)) {
                        var and__3822__auto____12322 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____12322)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____12322
                        }
                      }else {
                        return and__3822__auto____12321
                      }
                    }else {
                      return and__3822__auto____12320
                    }
                  }else {
                    return and__3822__auto____12319
                  }
                }else {
                  return and__3822__auto____12318
                }
              }else {
                return and__3822__auto____12317
              }
            }else {
              return and__3822__auto____12316
            }
          }else {
            return and__3822__auto____12315
          }
        }())
      };
      var ep3__4 = function() {
        var G__12339__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____12323 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____12323)) {
              return cljs.core.every_QMARK_.call(null, function(p1__12135_SHARP_) {
                var and__3822__auto____12324 = p1.call(null, p1__12135_SHARP_);
                if(cljs.core.truth_(and__3822__auto____12324)) {
                  var and__3822__auto____12325 = p2.call(null, p1__12135_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____12325)) {
                    return p3.call(null, p1__12135_SHARP_)
                  }else {
                    return and__3822__auto____12325
                  }
                }else {
                  return and__3822__auto____12324
                }
              }, args)
            }else {
              return and__3822__auto____12323
            }
          }())
        };
        var G__12339 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12339__delegate.call(this, x, y, z, args)
        };
        G__12339.cljs$lang$maxFixedArity = 3;
        G__12339.cljs$lang$applyTo = function(arglist__12340) {
          var x = cljs.core.first(arglist__12340);
          var y = cljs.core.first(cljs.core.next(arglist__12340));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12340)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12340)));
          return G__12339__delegate(x, y, z, args)
        };
        G__12339.cljs$lang$arity$variadic = G__12339__delegate;
        return G__12339
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__12341__delegate = function(p1, p2, p3, ps) {
      var ps__12326 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__12136_SHARP_) {
            return p1__12136_SHARP_.call(null, x)
          }, ps__12326)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__12137_SHARP_) {
            var and__3822__auto____12331 = p1__12137_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____12331)) {
              return p1__12137_SHARP_.call(null, y)
            }else {
              return and__3822__auto____12331
            }
          }, ps__12326)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__12138_SHARP_) {
            var and__3822__auto____12332 = p1__12138_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____12332)) {
              var and__3822__auto____12333 = p1__12138_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____12333)) {
                return p1__12138_SHARP_.call(null, z)
              }else {
                return and__3822__auto____12333
              }
            }else {
              return and__3822__auto____12332
            }
          }, ps__12326)
        };
        var epn__4 = function() {
          var G__12342__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____12334 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____12334)) {
                return cljs.core.every_QMARK_.call(null, function(p1__12139_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__12139_SHARP_, args)
                }, ps__12326)
              }else {
                return and__3822__auto____12334
              }
            }())
          };
          var G__12342 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__12342__delegate.call(this, x, y, z, args)
          };
          G__12342.cljs$lang$maxFixedArity = 3;
          G__12342.cljs$lang$applyTo = function(arglist__12343) {
            var x = cljs.core.first(arglist__12343);
            var y = cljs.core.first(cljs.core.next(arglist__12343));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12343)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12343)));
            return G__12342__delegate(x, y, z, args)
          };
          G__12342.cljs$lang$arity$variadic = G__12342__delegate;
          return G__12342
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__12341 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12341__delegate.call(this, p1, p2, p3, ps)
    };
    G__12341.cljs$lang$maxFixedArity = 3;
    G__12341.cljs$lang$applyTo = function(arglist__12344) {
      var p1 = cljs.core.first(arglist__12344);
      var p2 = cljs.core.first(cljs.core.next(arglist__12344));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12344)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12344)));
      return G__12341__delegate(p1, p2, p3, ps)
    };
    G__12341.cljs$lang$arity$variadic = G__12341__delegate;
    return G__12341
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____12425 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____12425)) {
          return or__3824__auto____12425
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____12426 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____12426)) {
          return or__3824__auto____12426
        }else {
          var or__3824__auto____12427 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____12427)) {
            return or__3824__auto____12427
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__12496__delegate = function(x, y, z, args) {
          var or__3824__auto____12428 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____12428)) {
            return or__3824__auto____12428
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__12496 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12496__delegate.call(this, x, y, z, args)
        };
        G__12496.cljs$lang$maxFixedArity = 3;
        G__12496.cljs$lang$applyTo = function(arglist__12497) {
          var x = cljs.core.first(arglist__12497);
          var y = cljs.core.first(cljs.core.next(arglist__12497));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12497)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12497)));
          return G__12496__delegate(x, y, z, args)
        };
        G__12496.cljs$lang$arity$variadic = G__12496__delegate;
        return G__12496
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____12440 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____12440)) {
          return or__3824__auto____12440
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____12441 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____12441)) {
          return or__3824__auto____12441
        }else {
          var or__3824__auto____12442 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____12442)) {
            return or__3824__auto____12442
          }else {
            var or__3824__auto____12443 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____12443)) {
              return or__3824__auto____12443
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____12444 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____12444)) {
          return or__3824__auto____12444
        }else {
          var or__3824__auto____12445 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____12445)) {
            return or__3824__auto____12445
          }else {
            var or__3824__auto____12446 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____12446)) {
              return or__3824__auto____12446
            }else {
              var or__3824__auto____12447 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____12447)) {
                return or__3824__auto____12447
              }else {
                var or__3824__auto____12448 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____12448)) {
                  return or__3824__auto____12448
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__12498__delegate = function(x, y, z, args) {
          var or__3824__auto____12449 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____12449)) {
            return or__3824__auto____12449
          }else {
            return cljs.core.some.call(null, function(p1__12179_SHARP_) {
              var or__3824__auto____12450 = p1.call(null, p1__12179_SHARP_);
              if(cljs.core.truth_(or__3824__auto____12450)) {
                return or__3824__auto____12450
              }else {
                return p2.call(null, p1__12179_SHARP_)
              }
            }, args)
          }
        };
        var G__12498 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12498__delegate.call(this, x, y, z, args)
        };
        G__12498.cljs$lang$maxFixedArity = 3;
        G__12498.cljs$lang$applyTo = function(arglist__12499) {
          var x = cljs.core.first(arglist__12499);
          var y = cljs.core.first(cljs.core.next(arglist__12499));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12499)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12499)));
          return G__12498__delegate(x, y, z, args)
        };
        G__12498.cljs$lang$arity$variadic = G__12498__delegate;
        return G__12498
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____12469 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____12469)) {
          return or__3824__auto____12469
        }else {
          var or__3824__auto____12470 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____12470)) {
            return or__3824__auto____12470
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____12471 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____12471)) {
          return or__3824__auto____12471
        }else {
          var or__3824__auto____12472 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____12472)) {
            return or__3824__auto____12472
          }else {
            var or__3824__auto____12473 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____12473)) {
              return or__3824__auto____12473
            }else {
              var or__3824__auto____12474 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____12474)) {
                return or__3824__auto____12474
              }else {
                var or__3824__auto____12475 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____12475)) {
                  return or__3824__auto____12475
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____12476 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____12476)) {
          return or__3824__auto____12476
        }else {
          var or__3824__auto____12477 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____12477)) {
            return or__3824__auto____12477
          }else {
            var or__3824__auto____12478 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____12478)) {
              return or__3824__auto____12478
            }else {
              var or__3824__auto____12479 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____12479)) {
                return or__3824__auto____12479
              }else {
                var or__3824__auto____12480 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____12480)) {
                  return or__3824__auto____12480
                }else {
                  var or__3824__auto____12481 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____12481)) {
                    return or__3824__auto____12481
                  }else {
                    var or__3824__auto____12482 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____12482)) {
                      return or__3824__auto____12482
                    }else {
                      var or__3824__auto____12483 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____12483)) {
                        return or__3824__auto____12483
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__12500__delegate = function(x, y, z, args) {
          var or__3824__auto____12484 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____12484)) {
            return or__3824__auto____12484
          }else {
            return cljs.core.some.call(null, function(p1__12180_SHARP_) {
              var or__3824__auto____12485 = p1.call(null, p1__12180_SHARP_);
              if(cljs.core.truth_(or__3824__auto____12485)) {
                return or__3824__auto____12485
              }else {
                var or__3824__auto____12486 = p2.call(null, p1__12180_SHARP_);
                if(cljs.core.truth_(or__3824__auto____12486)) {
                  return or__3824__auto____12486
                }else {
                  return p3.call(null, p1__12180_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__12500 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12500__delegate.call(this, x, y, z, args)
        };
        G__12500.cljs$lang$maxFixedArity = 3;
        G__12500.cljs$lang$applyTo = function(arglist__12501) {
          var x = cljs.core.first(arglist__12501);
          var y = cljs.core.first(cljs.core.next(arglist__12501));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12501)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12501)));
          return G__12500__delegate(x, y, z, args)
        };
        G__12500.cljs$lang$arity$variadic = G__12500__delegate;
        return G__12500
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__12502__delegate = function(p1, p2, p3, ps) {
      var ps__12487 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__12181_SHARP_) {
            return p1__12181_SHARP_.call(null, x)
          }, ps__12487)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__12182_SHARP_) {
            var or__3824__auto____12492 = p1__12182_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____12492)) {
              return or__3824__auto____12492
            }else {
              return p1__12182_SHARP_.call(null, y)
            }
          }, ps__12487)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__12183_SHARP_) {
            var or__3824__auto____12493 = p1__12183_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____12493)) {
              return or__3824__auto____12493
            }else {
              var or__3824__auto____12494 = p1__12183_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____12494)) {
                return or__3824__auto____12494
              }else {
                return p1__12183_SHARP_.call(null, z)
              }
            }
          }, ps__12487)
        };
        var spn__4 = function() {
          var G__12503__delegate = function(x, y, z, args) {
            var or__3824__auto____12495 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____12495)) {
              return or__3824__auto____12495
            }else {
              return cljs.core.some.call(null, function(p1__12184_SHARP_) {
                return cljs.core.some.call(null, p1__12184_SHARP_, args)
              }, ps__12487)
            }
          };
          var G__12503 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__12503__delegate.call(this, x, y, z, args)
          };
          G__12503.cljs$lang$maxFixedArity = 3;
          G__12503.cljs$lang$applyTo = function(arglist__12504) {
            var x = cljs.core.first(arglist__12504);
            var y = cljs.core.first(cljs.core.next(arglist__12504));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12504)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12504)));
            return G__12503__delegate(x, y, z, args)
          };
          G__12503.cljs$lang$arity$variadic = G__12503__delegate;
          return G__12503
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__12502 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12502__delegate.call(this, p1, p2, p3, ps)
    };
    G__12502.cljs$lang$maxFixedArity = 3;
    G__12502.cljs$lang$applyTo = function(arglist__12505) {
      var p1 = cljs.core.first(arglist__12505);
      var p2 = cljs.core.first(cljs.core.next(arglist__12505));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12505)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12505)));
      return G__12502__delegate(p1, p2, p3, ps)
    };
    G__12502.cljs$lang$arity$variadic = G__12502__delegate;
    return G__12502
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____12524 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____12524) {
        var s__12525 = temp__3974__auto____12524;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__12525)) {
          var c__12526 = cljs.core.chunk_first.call(null, s__12525);
          var size__12527 = cljs.core.count.call(null, c__12526);
          var b__12528 = cljs.core.chunk_buffer.call(null, size__12527);
          var n__2428__auto____12529 = size__12527;
          var i__12530 = 0;
          while(true) {
            if(i__12530 < n__2428__auto____12529) {
              cljs.core.chunk_append.call(null, b__12528, f.call(null, cljs.core._nth.call(null, c__12526, i__12530)));
              var G__12542 = i__12530 + 1;
              i__12530 = G__12542;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12528), map.call(null, f, cljs.core.chunk_rest.call(null, s__12525)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__12525)), map.call(null, f, cljs.core.rest.call(null, s__12525)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__12531 = cljs.core.seq.call(null, c1);
      var s2__12532 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____12533 = s1__12531;
        if(and__3822__auto____12533) {
          return s2__12532
        }else {
          return and__3822__auto____12533
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__12531), cljs.core.first.call(null, s2__12532)), map.call(null, f, cljs.core.rest.call(null, s1__12531), cljs.core.rest.call(null, s2__12532)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__12534 = cljs.core.seq.call(null, c1);
      var s2__12535 = cljs.core.seq.call(null, c2);
      var s3__12536 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____12537 = s1__12534;
        if(and__3822__auto____12537) {
          var and__3822__auto____12538 = s2__12535;
          if(and__3822__auto____12538) {
            return s3__12536
          }else {
            return and__3822__auto____12538
          }
        }else {
          return and__3822__auto____12537
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__12534), cljs.core.first.call(null, s2__12535), cljs.core.first.call(null, s3__12536)), map.call(null, f, cljs.core.rest.call(null, s1__12534), cljs.core.rest.call(null, s2__12535), cljs.core.rest.call(null, s3__12536)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__12543__delegate = function(f, c1, c2, c3, colls) {
      var step__12541 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__12540 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__12540)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__12540), step.call(null, map.call(null, cljs.core.rest, ss__12540)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__12345_SHARP_) {
        return cljs.core.apply.call(null, f, p1__12345_SHARP_)
      }, step__12541.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__12543 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__12543__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__12543.cljs$lang$maxFixedArity = 4;
    G__12543.cljs$lang$applyTo = function(arglist__12544) {
      var f = cljs.core.first(arglist__12544);
      var c1 = cljs.core.first(cljs.core.next(arglist__12544));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12544)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12544))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12544))));
      return G__12543__delegate(f, c1, c2, c3, colls)
    };
    G__12543.cljs$lang$arity$variadic = G__12543__delegate;
    return G__12543
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____12547 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____12547) {
        var s__12548 = temp__3974__auto____12547;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__12548), take.call(null, n - 1, cljs.core.rest.call(null, s__12548)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__12554 = function(n, coll) {
    while(true) {
      var s__12552 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____12553 = n > 0;
        if(and__3822__auto____12553) {
          return s__12552
        }else {
          return and__3822__auto____12553
        }
      }())) {
        var G__12555 = n - 1;
        var G__12556 = cljs.core.rest.call(null, s__12552);
        n = G__12555;
        coll = G__12556;
        continue
      }else {
        return s__12552
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__12554.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__12559 = cljs.core.seq.call(null, coll);
  var lead__12560 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__12560) {
      var G__12561 = cljs.core.next.call(null, s__12559);
      var G__12562 = cljs.core.next.call(null, lead__12560);
      s__12559 = G__12561;
      lead__12560 = G__12562;
      continue
    }else {
      return s__12559
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__12568 = function(pred, coll) {
    while(true) {
      var s__12566 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____12567 = s__12566;
        if(and__3822__auto____12567) {
          return pred.call(null, cljs.core.first.call(null, s__12566))
        }else {
          return and__3822__auto____12567
        }
      }())) {
        var G__12569 = pred;
        var G__12570 = cljs.core.rest.call(null, s__12566);
        pred = G__12569;
        coll = G__12570;
        continue
      }else {
        return s__12566
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__12568.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____12573 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____12573) {
      var s__12574 = temp__3974__auto____12573;
      return cljs.core.concat.call(null, s__12574, cycle.call(null, s__12574))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__12579 = cljs.core.seq.call(null, c1);
      var s2__12580 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____12581 = s1__12579;
        if(and__3822__auto____12581) {
          return s2__12580
        }else {
          return and__3822__auto____12581
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__12579), cljs.core.cons.call(null, cljs.core.first.call(null, s2__12580), interleave.call(null, cljs.core.rest.call(null, s1__12579), cljs.core.rest.call(null, s2__12580))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__12583__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__12582 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__12582)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__12582), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__12582)))
        }else {
          return null
        }
      }, null)
    };
    var G__12583 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12583__delegate.call(this, c1, c2, colls)
    };
    G__12583.cljs$lang$maxFixedArity = 2;
    G__12583.cljs$lang$applyTo = function(arglist__12584) {
      var c1 = cljs.core.first(arglist__12584);
      var c2 = cljs.core.first(cljs.core.next(arglist__12584));
      var colls = cljs.core.rest(cljs.core.next(arglist__12584));
      return G__12583__delegate(c1, c2, colls)
    };
    G__12583.cljs$lang$arity$variadic = G__12583__delegate;
    return G__12583
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__12594 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____12592 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____12592) {
        var coll__12593 = temp__3971__auto____12592;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__12593), cat.call(null, cljs.core.rest.call(null, coll__12593), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__12594.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__12595__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__12595 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12595__delegate.call(this, f, coll, colls)
    };
    G__12595.cljs$lang$maxFixedArity = 2;
    G__12595.cljs$lang$applyTo = function(arglist__12596) {
      var f = cljs.core.first(arglist__12596);
      var coll = cljs.core.first(cljs.core.next(arglist__12596));
      var colls = cljs.core.rest(cljs.core.next(arglist__12596));
      return G__12595__delegate(f, coll, colls)
    };
    G__12595.cljs$lang$arity$variadic = G__12595__delegate;
    return G__12595
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____12606 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____12606) {
      var s__12607 = temp__3974__auto____12606;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__12607)) {
        var c__12608 = cljs.core.chunk_first.call(null, s__12607);
        var size__12609 = cljs.core.count.call(null, c__12608);
        var b__12610 = cljs.core.chunk_buffer.call(null, size__12609);
        var n__2428__auto____12611 = size__12609;
        var i__12612 = 0;
        while(true) {
          if(i__12612 < n__2428__auto____12611) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__12608, i__12612)))) {
              cljs.core.chunk_append.call(null, b__12610, cljs.core._nth.call(null, c__12608, i__12612))
            }else {
            }
            var G__12615 = i__12612 + 1;
            i__12612 = G__12615;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12610), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__12607)))
      }else {
        var f__12613 = cljs.core.first.call(null, s__12607);
        var r__12614 = cljs.core.rest.call(null, s__12607);
        if(cljs.core.truth_(pred.call(null, f__12613))) {
          return cljs.core.cons.call(null, f__12613, filter.call(null, pred, r__12614))
        }else {
          return filter.call(null, pred, r__12614)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__12618 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__12618.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__12616_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__12616_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__12622__12623 = to;
    if(G__12622__12623) {
      if(function() {
        var or__3824__auto____12624 = G__12622__12623.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____12624) {
          return or__3824__auto____12624
        }else {
          return G__12622__12623.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__12622__12623.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__12622__12623)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__12622__12623)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__12625__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__12625 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__12625__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__12625.cljs$lang$maxFixedArity = 4;
    G__12625.cljs$lang$applyTo = function(arglist__12626) {
      var f = cljs.core.first(arglist__12626);
      var c1 = cljs.core.first(cljs.core.next(arglist__12626));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12626)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12626))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12626))));
      return G__12625__delegate(f, c1, c2, c3, colls)
    };
    G__12625.cljs$lang$arity$variadic = G__12625__delegate;
    return G__12625
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____12633 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____12633) {
        var s__12634 = temp__3974__auto____12633;
        var p__12635 = cljs.core.take.call(null, n, s__12634);
        if(n === cljs.core.count.call(null, p__12635)) {
          return cljs.core.cons.call(null, p__12635, partition.call(null, n, step, cljs.core.drop.call(null, step, s__12634)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____12636 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____12636) {
        var s__12637 = temp__3974__auto____12636;
        var p__12638 = cljs.core.take.call(null, n, s__12637);
        if(n === cljs.core.count.call(null, p__12638)) {
          return cljs.core.cons.call(null, p__12638, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__12637)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__12638, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__12643 = cljs.core.lookup_sentinel;
    var m__12644 = m;
    var ks__12645 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__12645) {
        var m__12646 = cljs.core._lookup.call(null, m__12644, cljs.core.first.call(null, ks__12645), sentinel__12643);
        if(sentinel__12643 === m__12646) {
          return not_found
        }else {
          var G__12647 = sentinel__12643;
          var G__12648 = m__12646;
          var G__12649 = cljs.core.next.call(null, ks__12645);
          sentinel__12643 = G__12647;
          m__12644 = G__12648;
          ks__12645 = G__12649;
          continue
        }
      }else {
        return m__12644
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__12650, v) {
  var vec__12655__12656 = p__12650;
  var k__12657 = cljs.core.nth.call(null, vec__12655__12656, 0, null);
  var ks__12658 = cljs.core.nthnext.call(null, vec__12655__12656, 1);
  if(cljs.core.truth_(ks__12658)) {
    return cljs.core.assoc.call(null, m, k__12657, assoc_in.call(null, cljs.core._lookup.call(null, m, k__12657, null), ks__12658, v))
  }else {
    return cljs.core.assoc.call(null, m, k__12657, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__12659, f, args) {
    var vec__12664__12665 = p__12659;
    var k__12666 = cljs.core.nth.call(null, vec__12664__12665, 0, null);
    var ks__12667 = cljs.core.nthnext.call(null, vec__12664__12665, 1);
    if(cljs.core.truth_(ks__12667)) {
      return cljs.core.assoc.call(null, m, k__12666, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__12666, null), ks__12667, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__12666, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__12666, null), args))
    }
  };
  var update_in = function(m, p__12659, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__12659, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__12668) {
    var m = cljs.core.first(arglist__12668);
    var p__12659 = cljs.core.first(cljs.core.next(arglist__12668));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12668)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12668)));
    return update_in__delegate(m, p__12659, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12671 = this;
  var h__2093__auto____12672 = this__12671.__hash;
  if(!(h__2093__auto____12672 == null)) {
    return h__2093__auto____12672
  }else {
    var h__2093__auto____12673 = cljs.core.hash_coll.call(null, coll);
    this__12671.__hash = h__2093__auto____12673;
    return h__2093__auto____12673
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__12674 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__12675 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__12676 = this;
  var new_array__12677 = this__12676.array.slice();
  new_array__12677[k] = v;
  return new cljs.core.Vector(this__12676.meta, new_array__12677, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__12708 = null;
  var G__12708__2 = function(this_sym12678, k) {
    var this__12680 = this;
    var this_sym12678__12681 = this;
    var coll__12682 = this_sym12678__12681;
    return coll__12682.cljs$core$ILookup$_lookup$arity$2(coll__12682, k)
  };
  var G__12708__3 = function(this_sym12679, k, not_found) {
    var this__12680 = this;
    var this_sym12679__12683 = this;
    var coll__12684 = this_sym12679__12683;
    return coll__12684.cljs$core$ILookup$_lookup$arity$3(coll__12684, k, not_found)
  };
  G__12708 = function(this_sym12679, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12708__2.call(this, this_sym12679, k);
      case 3:
        return G__12708__3.call(this, this_sym12679, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12708
}();
cljs.core.Vector.prototype.apply = function(this_sym12669, args12670) {
  var this__12685 = this;
  return this_sym12669.call.apply(this_sym12669, [this_sym12669].concat(args12670.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12686 = this;
  var new_array__12687 = this__12686.array.slice();
  new_array__12687.push(o);
  return new cljs.core.Vector(this__12686.meta, new_array__12687, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__12688 = this;
  var this__12689 = this;
  return cljs.core.pr_str.call(null, this__12689)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__12690 = this;
  return cljs.core.ci_reduce.call(null, this__12690.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__12691 = this;
  return cljs.core.ci_reduce.call(null, this__12691.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12692 = this;
  if(this__12692.array.length > 0) {
    var vector_seq__12693 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__12692.array.length) {
          return cljs.core.cons.call(null, this__12692.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__12693.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12694 = this;
  return this__12694.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__12695 = this;
  var count__12696 = this__12695.array.length;
  if(count__12696 > 0) {
    return this__12695.array[count__12696 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__12697 = this;
  if(this__12697.array.length > 0) {
    var new_array__12698 = this__12697.array.slice();
    new_array__12698.pop();
    return new cljs.core.Vector(this__12697.meta, new_array__12698, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__12699 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12700 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12701 = this;
  return new cljs.core.Vector(meta, this__12701.array, this__12701.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12702 = this;
  return this__12702.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__12703 = this;
  if(function() {
    var and__3822__auto____12704 = 0 <= n;
    if(and__3822__auto____12704) {
      return n < this__12703.array.length
    }else {
      return and__3822__auto____12704
    }
  }()) {
    return this__12703.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__12705 = this;
  if(function() {
    var and__3822__auto____12706 = 0 <= n;
    if(and__3822__auto____12706) {
      return n < this__12705.array.length
    }else {
      return and__3822__auto____12706
    }
  }()) {
    return this__12705.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12707 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__12707.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2211__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__12710 = pv.cnt;
  if(cnt__12710 < 32) {
    return 0
  }else {
    return cnt__12710 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__12716 = level;
  var ret__12717 = node;
  while(true) {
    if(ll__12716 === 0) {
      return ret__12717
    }else {
      var embed__12718 = ret__12717;
      var r__12719 = cljs.core.pv_fresh_node.call(null, edit);
      var ___12720 = cljs.core.pv_aset.call(null, r__12719, 0, embed__12718);
      var G__12721 = ll__12716 - 5;
      var G__12722 = r__12719;
      ll__12716 = G__12721;
      ret__12717 = G__12722;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__12728 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__12729 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__12728, subidx__12729, tailnode);
    return ret__12728
  }else {
    var child__12730 = cljs.core.pv_aget.call(null, parent, subidx__12729);
    if(!(child__12730 == null)) {
      var node_to_insert__12731 = push_tail.call(null, pv, level - 5, child__12730, tailnode);
      cljs.core.pv_aset.call(null, ret__12728, subidx__12729, node_to_insert__12731);
      return ret__12728
    }else {
      var node_to_insert__12732 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__12728, subidx__12729, node_to_insert__12732);
      return ret__12728
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____12736 = 0 <= i;
    if(and__3822__auto____12736) {
      return i < pv.cnt
    }else {
      return and__3822__auto____12736
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__12737 = pv.root;
      var level__12738 = pv.shift;
      while(true) {
        if(level__12738 > 0) {
          var G__12739 = cljs.core.pv_aget.call(null, node__12737, i >>> level__12738 & 31);
          var G__12740 = level__12738 - 5;
          node__12737 = G__12739;
          level__12738 = G__12740;
          continue
        }else {
          return node__12737.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__12743 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__12743, i & 31, val);
    return ret__12743
  }else {
    var subidx__12744 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__12743, subidx__12744, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__12744), i, val));
    return ret__12743
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__12750 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__12751 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__12750));
    if(function() {
      var and__3822__auto____12752 = new_child__12751 == null;
      if(and__3822__auto____12752) {
        return subidx__12750 === 0
      }else {
        return and__3822__auto____12752
      }
    }()) {
      return null
    }else {
      var ret__12753 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__12753, subidx__12750, new_child__12751);
      return ret__12753
    }
  }else {
    if(subidx__12750 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__12754 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__12754, subidx__12750, null);
        return ret__12754
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__12757 = this;
  return new cljs.core.TransientVector(this__12757.cnt, this__12757.shift, cljs.core.tv_editable_root.call(null, this__12757.root), cljs.core.tv_editable_tail.call(null, this__12757.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12758 = this;
  var h__2093__auto____12759 = this__12758.__hash;
  if(!(h__2093__auto____12759 == null)) {
    return h__2093__auto____12759
  }else {
    var h__2093__auto____12760 = cljs.core.hash_coll.call(null, coll);
    this__12758.__hash = h__2093__auto____12760;
    return h__2093__auto____12760
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__12761 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__12762 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__12763 = this;
  if(function() {
    var and__3822__auto____12764 = 0 <= k;
    if(and__3822__auto____12764) {
      return k < this__12763.cnt
    }else {
      return and__3822__auto____12764
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__12765 = this__12763.tail.slice();
      new_tail__12765[k & 31] = v;
      return new cljs.core.PersistentVector(this__12763.meta, this__12763.cnt, this__12763.shift, this__12763.root, new_tail__12765, null)
    }else {
      return new cljs.core.PersistentVector(this__12763.meta, this__12763.cnt, this__12763.shift, cljs.core.do_assoc.call(null, coll, this__12763.shift, this__12763.root, k, v), this__12763.tail, null)
    }
  }else {
    if(k === this__12763.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__12763.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__12813 = null;
  var G__12813__2 = function(this_sym12766, k) {
    var this__12768 = this;
    var this_sym12766__12769 = this;
    var coll__12770 = this_sym12766__12769;
    return coll__12770.cljs$core$ILookup$_lookup$arity$2(coll__12770, k)
  };
  var G__12813__3 = function(this_sym12767, k, not_found) {
    var this__12768 = this;
    var this_sym12767__12771 = this;
    var coll__12772 = this_sym12767__12771;
    return coll__12772.cljs$core$ILookup$_lookup$arity$3(coll__12772, k, not_found)
  };
  G__12813 = function(this_sym12767, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12813__2.call(this, this_sym12767, k);
      case 3:
        return G__12813__3.call(this, this_sym12767, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12813
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym12755, args12756) {
  var this__12773 = this;
  return this_sym12755.call.apply(this_sym12755, [this_sym12755].concat(args12756.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__12774 = this;
  var step_init__12775 = [0, init];
  var i__12776 = 0;
  while(true) {
    if(i__12776 < this__12774.cnt) {
      var arr__12777 = cljs.core.array_for.call(null, v, i__12776);
      var len__12778 = arr__12777.length;
      var init__12782 = function() {
        var j__12779 = 0;
        var init__12780 = step_init__12775[1];
        while(true) {
          if(j__12779 < len__12778) {
            var init__12781 = f.call(null, init__12780, j__12779 + i__12776, arr__12777[j__12779]);
            if(cljs.core.reduced_QMARK_.call(null, init__12781)) {
              return init__12781
            }else {
              var G__12814 = j__12779 + 1;
              var G__12815 = init__12781;
              j__12779 = G__12814;
              init__12780 = G__12815;
              continue
            }
          }else {
            step_init__12775[0] = len__12778;
            step_init__12775[1] = init__12780;
            return init__12780
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__12782)) {
        return cljs.core.deref.call(null, init__12782)
      }else {
        var G__12816 = i__12776 + step_init__12775[0];
        i__12776 = G__12816;
        continue
      }
    }else {
      return step_init__12775[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12783 = this;
  if(this__12783.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__12784 = this__12783.tail.slice();
    new_tail__12784.push(o);
    return new cljs.core.PersistentVector(this__12783.meta, this__12783.cnt + 1, this__12783.shift, this__12783.root, new_tail__12784, null)
  }else {
    var root_overflow_QMARK___12785 = this__12783.cnt >>> 5 > 1 << this__12783.shift;
    var new_shift__12786 = root_overflow_QMARK___12785 ? this__12783.shift + 5 : this__12783.shift;
    var new_root__12788 = root_overflow_QMARK___12785 ? function() {
      var n_r__12787 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__12787, 0, this__12783.root);
      cljs.core.pv_aset.call(null, n_r__12787, 1, cljs.core.new_path.call(null, null, this__12783.shift, new cljs.core.VectorNode(null, this__12783.tail)));
      return n_r__12787
    }() : cljs.core.push_tail.call(null, coll, this__12783.shift, this__12783.root, new cljs.core.VectorNode(null, this__12783.tail));
    return new cljs.core.PersistentVector(this__12783.meta, this__12783.cnt + 1, new_shift__12786, new_root__12788, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__12789 = this;
  if(this__12789.cnt > 0) {
    return new cljs.core.RSeq(coll, this__12789.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__12790 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__12791 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__12792 = this;
  var this__12793 = this;
  return cljs.core.pr_str.call(null, this__12793)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__12794 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__12795 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12796 = this;
  if(this__12796.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12797 = this;
  return this__12797.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__12798 = this;
  if(this__12798.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__12798.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__12799 = this;
  if(this__12799.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__12799.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__12799.meta)
    }else {
      if(1 < this__12799.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__12799.meta, this__12799.cnt - 1, this__12799.shift, this__12799.root, this__12799.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__12800 = cljs.core.array_for.call(null, coll, this__12799.cnt - 2);
          var nr__12801 = cljs.core.pop_tail.call(null, coll, this__12799.shift, this__12799.root);
          var new_root__12802 = nr__12801 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__12801;
          var cnt_1__12803 = this__12799.cnt - 1;
          if(function() {
            var and__3822__auto____12804 = 5 < this__12799.shift;
            if(and__3822__auto____12804) {
              return cljs.core.pv_aget.call(null, new_root__12802, 1) == null
            }else {
              return and__3822__auto____12804
            }
          }()) {
            return new cljs.core.PersistentVector(this__12799.meta, cnt_1__12803, this__12799.shift - 5, cljs.core.pv_aget.call(null, new_root__12802, 0), new_tail__12800, null)
          }else {
            return new cljs.core.PersistentVector(this__12799.meta, cnt_1__12803, this__12799.shift, new_root__12802, new_tail__12800, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__12805 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12806 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12807 = this;
  return new cljs.core.PersistentVector(meta, this__12807.cnt, this__12807.shift, this__12807.root, this__12807.tail, this__12807.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12808 = this;
  return this__12808.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__12809 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__12810 = this;
  if(function() {
    var and__3822__auto____12811 = 0 <= n;
    if(and__3822__auto____12811) {
      return n < this__12810.cnt
    }else {
      return and__3822__auto____12811
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12812 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__12812.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__12817 = xs.length;
  var xs__12818 = no_clone === true ? xs : xs.slice();
  if(l__12817 < 32) {
    return new cljs.core.PersistentVector(null, l__12817, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__12818, null)
  }else {
    var node__12819 = xs__12818.slice(0, 32);
    var v__12820 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__12819, null);
    var i__12821 = 32;
    var out__12822 = cljs.core._as_transient.call(null, v__12820);
    while(true) {
      if(i__12821 < l__12817) {
        var G__12823 = i__12821 + 1;
        var G__12824 = cljs.core.conj_BANG_.call(null, out__12822, xs__12818[i__12821]);
        i__12821 = G__12823;
        out__12822 = G__12824;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__12822)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__12825) {
    var args = cljs.core.seq(arglist__12825);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__12826 = this;
  if(this__12826.off + 1 < this__12826.node.length) {
    var s__12827 = cljs.core.chunked_seq.call(null, this__12826.vec, this__12826.node, this__12826.i, this__12826.off + 1);
    if(s__12827 == null) {
      return null
    }else {
      return s__12827
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12828 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12829 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12830 = this;
  return this__12830.node[this__12830.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12831 = this;
  if(this__12831.off + 1 < this__12831.node.length) {
    var s__12832 = cljs.core.chunked_seq.call(null, this__12831.vec, this__12831.node, this__12831.i, this__12831.off + 1);
    if(s__12832 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__12832
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__12833 = this;
  var l__12834 = this__12833.node.length;
  var s__12835 = this__12833.i + l__12834 < cljs.core._count.call(null, this__12833.vec) ? cljs.core.chunked_seq.call(null, this__12833.vec, this__12833.i + l__12834, 0) : null;
  if(s__12835 == null) {
    return null
  }else {
    return s__12835
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12836 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__12837 = this;
  return cljs.core.chunked_seq.call(null, this__12837.vec, this__12837.node, this__12837.i, this__12837.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__12838 = this;
  return this__12838.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12839 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__12839.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__12840 = this;
  return cljs.core.array_chunk.call(null, this__12840.node, this__12840.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__12841 = this;
  var l__12842 = this__12841.node.length;
  var s__12843 = this__12841.i + l__12842 < cljs.core._count.call(null, this__12841.vec) ? cljs.core.chunked_seq.call(null, this__12841.vec, this__12841.i + l__12842, 0) : null;
  if(s__12843 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__12843
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12846 = this;
  var h__2093__auto____12847 = this__12846.__hash;
  if(!(h__2093__auto____12847 == null)) {
    return h__2093__auto____12847
  }else {
    var h__2093__auto____12848 = cljs.core.hash_coll.call(null, coll);
    this__12846.__hash = h__2093__auto____12848;
    return h__2093__auto____12848
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__12849 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__12850 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__12851 = this;
  var v_pos__12852 = this__12851.start + key;
  return new cljs.core.Subvec(this__12851.meta, cljs.core._assoc.call(null, this__12851.v, v_pos__12852, val), this__12851.start, this__12851.end > v_pos__12852 + 1 ? this__12851.end : v_pos__12852 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__12878 = null;
  var G__12878__2 = function(this_sym12853, k) {
    var this__12855 = this;
    var this_sym12853__12856 = this;
    var coll__12857 = this_sym12853__12856;
    return coll__12857.cljs$core$ILookup$_lookup$arity$2(coll__12857, k)
  };
  var G__12878__3 = function(this_sym12854, k, not_found) {
    var this__12855 = this;
    var this_sym12854__12858 = this;
    var coll__12859 = this_sym12854__12858;
    return coll__12859.cljs$core$ILookup$_lookup$arity$3(coll__12859, k, not_found)
  };
  G__12878 = function(this_sym12854, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12878__2.call(this, this_sym12854, k);
      case 3:
        return G__12878__3.call(this, this_sym12854, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12878
}();
cljs.core.Subvec.prototype.apply = function(this_sym12844, args12845) {
  var this__12860 = this;
  return this_sym12844.call.apply(this_sym12844, [this_sym12844].concat(args12845.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12861 = this;
  return new cljs.core.Subvec(this__12861.meta, cljs.core._assoc_n.call(null, this__12861.v, this__12861.end, o), this__12861.start, this__12861.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__12862 = this;
  var this__12863 = this;
  return cljs.core.pr_str.call(null, this__12863)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__12864 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__12865 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12866 = this;
  var subvec_seq__12867 = function subvec_seq(i) {
    if(i === this__12866.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__12866.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__12867.call(null, this__12866.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12868 = this;
  return this__12868.end - this__12868.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__12869 = this;
  return cljs.core._nth.call(null, this__12869.v, this__12869.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__12870 = this;
  if(this__12870.start === this__12870.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__12870.meta, this__12870.v, this__12870.start, this__12870.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__12871 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12872 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12873 = this;
  return new cljs.core.Subvec(meta, this__12873.v, this__12873.start, this__12873.end, this__12873.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12874 = this;
  return this__12874.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__12875 = this;
  return cljs.core._nth.call(null, this__12875.v, this__12875.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__12876 = this;
  return cljs.core._nth.call(null, this__12876.v, this__12876.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12877 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__12877.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__12880 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__12880, 0, tl.length);
  return ret__12880
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__12884 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__12885 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__12884, subidx__12885, level === 5 ? tail_node : function() {
    var child__12886 = cljs.core.pv_aget.call(null, ret__12884, subidx__12885);
    if(!(child__12886 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__12886, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__12884
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__12891 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__12892 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__12893 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__12891, subidx__12892));
    if(function() {
      var and__3822__auto____12894 = new_child__12893 == null;
      if(and__3822__auto____12894) {
        return subidx__12892 === 0
      }else {
        return and__3822__auto____12894
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__12891, subidx__12892, new_child__12893);
      return node__12891
    }
  }else {
    if(subidx__12892 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__12891, subidx__12892, null);
        return node__12891
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____12899 = 0 <= i;
    if(and__3822__auto____12899) {
      return i < tv.cnt
    }else {
      return and__3822__auto____12899
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__12900 = tv.root;
      var node__12901 = root__12900;
      var level__12902 = tv.shift;
      while(true) {
        if(level__12902 > 0) {
          var G__12903 = cljs.core.tv_ensure_editable.call(null, root__12900.edit, cljs.core.pv_aget.call(null, node__12901, i >>> level__12902 & 31));
          var G__12904 = level__12902 - 5;
          node__12901 = G__12903;
          level__12902 = G__12904;
          continue
        }else {
          return node__12901.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__12944 = null;
  var G__12944__2 = function(this_sym12907, k) {
    var this__12909 = this;
    var this_sym12907__12910 = this;
    var coll__12911 = this_sym12907__12910;
    return coll__12911.cljs$core$ILookup$_lookup$arity$2(coll__12911, k)
  };
  var G__12944__3 = function(this_sym12908, k, not_found) {
    var this__12909 = this;
    var this_sym12908__12912 = this;
    var coll__12913 = this_sym12908__12912;
    return coll__12913.cljs$core$ILookup$_lookup$arity$3(coll__12913, k, not_found)
  };
  G__12944 = function(this_sym12908, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12944__2.call(this, this_sym12908, k);
      case 3:
        return G__12944__3.call(this, this_sym12908, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12944
}();
cljs.core.TransientVector.prototype.apply = function(this_sym12905, args12906) {
  var this__12914 = this;
  return this_sym12905.call.apply(this_sym12905, [this_sym12905].concat(args12906.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__12915 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__12916 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__12917 = this;
  if(this__12917.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__12918 = this;
  if(function() {
    var and__3822__auto____12919 = 0 <= n;
    if(and__3822__auto____12919) {
      return n < this__12918.cnt
    }else {
      return and__3822__auto____12919
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12920 = this;
  if(this__12920.root.edit) {
    return this__12920.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__12921 = this;
  if(this__12921.root.edit) {
    if(function() {
      var and__3822__auto____12922 = 0 <= n;
      if(and__3822__auto____12922) {
        return n < this__12921.cnt
      }else {
        return and__3822__auto____12922
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__12921.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__12927 = function go(level, node) {
          var node__12925 = cljs.core.tv_ensure_editable.call(null, this__12921.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__12925, n & 31, val);
            return node__12925
          }else {
            var subidx__12926 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__12925, subidx__12926, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__12925, subidx__12926)));
            return node__12925
          }
        }.call(null, this__12921.shift, this__12921.root);
        this__12921.root = new_root__12927;
        return tcoll
      }
    }else {
      if(n === this__12921.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__12921.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__12928 = this;
  if(this__12928.root.edit) {
    if(this__12928.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__12928.cnt) {
        this__12928.cnt = 0;
        return tcoll
      }else {
        if((this__12928.cnt - 1 & 31) > 0) {
          this__12928.cnt = this__12928.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__12929 = cljs.core.editable_array_for.call(null, tcoll, this__12928.cnt - 2);
            var new_root__12931 = function() {
              var nr__12930 = cljs.core.tv_pop_tail.call(null, tcoll, this__12928.shift, this__12928.root);
              if(!(nr__12930 == null)) {
                return nr__12930
              }else {
                return new cljs.core.VectorNode(this__12928.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____12932 = 5 < this__12928.shift;
              if(and__3822__auto____12932) {
                return cljs.core.pv_aget.call(null, new_root__12931, 1) == null
              }else {
                return and__3822__auto____12932
              }
            }()) {
              var new_root__12933 = cljs.core.tv_ensure_editable.call(null, this__12928.root.edit, cljs.core.pv_aget.call(null, new_root__12931, 0));
              this__12928.root = new_root__12933;
              this__12928.shift = this__12928.shift - 5;
              this__12928.cnt = this__12928.cnt - 1;
              this__12928.tail = new_tail__12929;
              return tcoll
            }else {
              this__12928.root = new_root__12931;
              this__12928.cnt = this__12928.cnt - 1;
              this__12928.tail = new_tail__12929;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__12934 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__12935 = this;
  if(this__12935.root.edit) {
    if(this__12935.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__12935.tail[this__12935.cnt & 31] = o;
      this__12935.cnt = this__12935.cnt + 1;
      return tcoll
    }else {
      var tail_node__12936 = new cljs.core.VectorNode(this__12935.root.edit, this__12935.tail);
      var new_tail__12937 = cljs.core.make_array.call(null, 32);
      new_tail__12937[0] = o;
      this__12935.tail = new_tail__12937;
      if(this__12935.cnt >>> 5 > 1 << this__12935.shift) {
        var new_root_array__12938 = cljs.core.make_array.call(null, 32);
        var new_shift__12939 = this__12935.shift + 5;
        new_root_array__12938[0] = this__12935.root;
        new_root_array__12938[1] = cljs.core.new_path.call(null, this__12935.root.edit, this__12935.shift, tail_node__12936);
        this__12935.root = new cljs.core.VectorNode(this__12935.root.edit, new_root_array__12938);
        this__12935.shift = new_shift__12939;
        this__12935.cnt = this__12935.cnt + 1;
        return tcoll
      }else {
        var new_root__12940 = cljs.core.tv_push_tail.call(null, tcoll, this__12935.shift, this__12935.root, tail_node__12936);
        this__12935.root = new_root__12940;
        this__12935.cnt = this__12935.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__12941 = this;
  if(this__12941.root.edit) {
    this__12941.root.edit = null;
    var len__12942 = this__12941.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__12943 = cljs.core.make_array.call(null, len__12942);
    cljs.core.array_copy.call(null, this__12941.tail, 0, trimmed_tail__12943, 0, len__12942);
    return new cljs.core.PersistentVector(null, this__12941.cnt, this__12941.shift, this__12941.root, trimmed_tail__12943, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12945 = this;
  var h__2093__auto____12946 = this__12945.__hash;
  if(!(h__2093__auto____12946 == null)) {
    return h__2093__auto____12946
  }else {
    var h__2093__auto____12947 = cljs.core.hash_coll.call(null, coll);
    this__12945.__hash = h__2093__auto____12947;
    return h__2093__auto____12947
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12948 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__12949 = this;
  var this__12950 = this;
  return cljs.core.pr_str.call(null, this__12950)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12951 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12952 = this;
  return cljs.core._first.call(null, this__12952.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12953 = this;
  var temp__3971__auto____12954 = cljs.core.next.call(null, this__12953.front);
  if(temp__3971__auto____12954) {
    var f1__12955 = temp__3971__auto____12954;
    return new cljs.core.PersistentQueueSeq(this__12953.meta, f1__12955, this__12953.rear, null)
  }else {
    if(this__12953.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__12953.meta, this__12953.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12956 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12957 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__12957.front, this__12957.rear, this__12957.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12958 = this;
  return this__12958.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12959 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__12959.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12960 = this;
  var h__2093__auto____12961 = this__12960.__hash;
  if(!(h__2093__auto____12961 == null)) {
    return h__2093__auto____12961
  }else {
    var h__2093__auto____12962 = cljs.core.hash_coll.call(null, coll);
    this__12960.__hash = h__2093__auto____12962;
    return h__2093__auto____12962
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12963 = this;
  if(cljs.core.truth_(this__12963.front)) {
    return new cljs.core.PersistentQueue(this__12963.meta, this__12963.count + 1, this__12963.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____12964 = this__12963.rear;
      if(cljs.core.truth_(or__3824__auto____12964)) {
        return or__3824__auto____12964
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__12963.meta, this__12963.count + 1, cljs.core.conj.call(null, this__12963.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__12965 = this;
  var this__12966 = this;
  return cljs.core.pr_str.call(null, this__12966)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12967 = this;
  var rear__12968 = cljs.core.seq.call(null, this__12967.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____12969 = this__12967.front;
    if(cljs.core.truth_(or__3824__auto____12969)) {
      return or__3824__auto____12969
    }else {
      return rear__12968
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__12967.front, cljs.core.seq.call(null, rear__12968), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12970 = this;
  return this__12970.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__12971 = this;
  return cljs.core._first.call(null, this__12971.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__12972 = this;
  if(cljs.core.truth_(this__12972.front)) {
    var temp__3971__auto____12973 = cljs.core.next.call(null, this__12972.front);
    if(temp__3971__auto____12973) {
      var f1__12974 = temp__3971__auto____12973;
      return new cljs.core.PersistentQueue(this__12972.meta, this__12972.count - 1, f1__12974, this__12972.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__12972.meta, this__12972.count - 1, cljs.core.seq.call(null, this__12972.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12975 = this;
  return cljs.core.first.call(null, this__12975.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12976 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12977 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12978 = this;
  return new cljs.core.PersistentQueue(meta, this__12978.count, this__12978.front, this__12978.rear, this__12978.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12979 = this;
  return this__12979.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12980 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__12981 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__12984 = array.length;
  var i__12985 = 0;
  while(true) {
    if(i__12985 < len__12984) {
      if(k === array[i__12985]) {
        return i__12985
      }else {
        var G__12986 = i__12985 + incr;
        i__12985 = G__12986;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__12989 = cljs.core.hash.call(null, a);
  var b__12990 = cljs.core.hash.call(null, b);
  if(a__12989 < b__12990) {
    return-1
  }else {
    if(a__12989 > b__12990) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__12998 = m.keys;
  var len__12999 = ks__12998.length;
  var so__13000 = m.strobj;
  var out__13001 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__13002 = 0;
  var out__13003 = cljs.core.transient$.call(null, out__13001);
  while(true) {
    if(i__13002 < len__12999) {
      var k__13004 = ks__12998[i__13002];
      var G__13005 = i__13002 + 1;
      var G__13006 = cljs.core.assoc_BANG_.call(null, out__13003, k__13004, so__13000[k__13004]);
      i__13002 = G__13005;
      out__13003 = G__13006;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__13003, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__13012 = {};
  var l__13013 = ks.length;
  var i__13014 = 0;
  while(true) {
    if(i__13014 < l__13013) {
      var k__13015 = ks[i__13014];
      new_obj__13012[k__13015] = obj[k__13015];
      var G__13016 = i__13014 + 1;
      i__13014 = G__13016;
      continue
    }else {
    }
    break
  }
  return new_obj__13012
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__13019 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13020 = this;
  var h__2093__auto____13021 = this__13020.__hash;
  if(!(h__2093__auto____13021 == null)) {
    return h__2093__auto____13021
  }else {
    var h__2093__auto____13022 = cljs.core.hash_imap.call(null, coll);
    this__13020.__hash = h__2093__auto____13022;
    return h__2093__auto____13022
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13023 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13024 = this;
  if(function() {
    var and__3822__auto____13025 = goog.isString(k);
    if(and__3822__auto____13025) {
      return!(cljs.core.scan_array.call(null, 1, k, this__13024.keys) == null)
    }else {
      return and__3822__auto____13025
    }
  }()) {
    return this__13024.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__13026 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____13027 = this__13026.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____13027) {
        return or__3824__auto____13027
      }else {
        return this__13026.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__13026.keys) == null)) {
        var new_strobj__13028 = cljs.core.obj_clone.call(null, this__13026.strobj, this__13026.keys);
        new_strobj__13028[k] = v;
        return new cljs.core.ObjMap(this__13026.meta, this__13026.keys, new_strobj__13028, this__13026.update_count + 1, null)
      }else {
        var new_strobj__13029 = cljs.core.obj_clone.call(null, this__13026.strobj, this__13026.keys);
        var new_keys__13030 = this__13026.keys.slice();
        new_strobj__13029[k] = v;
        new_keys__13030.push(k);
        return new cljs.core.ObjMap(this__13026.meta, new_keys__13030, new_strobj__13029, this__13026.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__13031 = this;
  if(function() {
    var and__3822__auto____13032 = goog.isString(k);
    if(and__3822__auto____13032) {
      return!(cljs.core.scan_array.call(null, 1, k, this__13031.keys) == null)
    }else {
      return and__3822__auto____13032
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__13054 = null;
  var G__13054__2 = function(this_sym13033, k) {
    var this__13035 = this;
    var this_sym13033__13036 = this;
    var coll__13037 = this_sym13033__13036;
    return coll__13037.cljs$core$ILookup$_lookup$arity$2(coll__13037, k)
  };
  var G__13054__3 = function(this_sym13034, k, not_found) {
    var this__13035 = this;
    var this_sym13034__13038 = this;
    var coll__13039 = this_sym13034__13038;
    return coll__13039.cljs$core$ILookup$_lookup$arity$3(coll__13039, k, not_found)
  };
  G__13054 = function(this_sym13034, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13054__2.call(this, this_sym13034, k);
      case 3:
        return G__13054__3.call(this, this_sym13034, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13054
}();
cljs.core.ObjMap.prototype.apply = function(this_sym13017, args13018) {
  var this__13040 = this;
  return this_sym13017.call.apply(this_sym13017, [this_sym13017].concat(args13018.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__13041 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__13042 = this;
  var this__13043 = this;
  return cljs.core.pr_str.call(null, this__13043)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13044 = this;
  if(this__13044.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__13007_SHARP_) {
      return cljs.core.vector.call(null, p1__13007_SHARP_, this__13044.strobj[p1__13007_SHARP_])
    }, this__13044.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13045 = this;
  return this__13045.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13046 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13047 = this;
  return new cljs.core.ObjMap(meta, this__13047.keys, this__13047.strobj, this__13047.update_count, this__13047.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13048 = this;
  return this__13048.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13049 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__13049.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__13050 = this;
  if(function() {
    var and__3822__auto____13051 = goog.isString(k);
    if(and__3822__auto____13051) {
      return!(cljs.core.scan_array.call(null, 1, k, this__13050.keys) == null)
    }else {
      return and__3822__auto____13051
    }
  }()) {
    var new_keys__13052 = this__13050.keys.slice();
    var new_strobj__13053 = cljs.core.obj_clone.call(null, this__13050.strobj, this__13050.keys);
    new_keys__13052.splice(cljs.core.scan_array.call(null, 1, k, new_keys__13052), 1);
    cljs.core.js_delete.call(null, new_strobj__13053, k);
    return new cljs.core.ObjMap(this__13050.meta, new_keys__13052, new_strobj__13053, this__13050.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13058 = this;
  var h__2093__auto____13059 = this__13058.__hash;
  if(!(h__2093__auto____13059 == null)) {
    return h__2093__auto____13059
  }else {
    var h__2093__auto____13060 = cljs.core.hash_imap.call(null, coll);
    this__13058.__hash = h__2093__auto____13060;
    return h__2093__auto____13060
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13061 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13062 = this;
  var bucket__13063 = this__13062.hashobj[cljs.core.hash.call(null, k)];
  var i__13064 = cljs.core.truth_(bucket__13063) ? cljs.core.scan_array.call(null, 2, k, bucket__13063) : null;
  if(cljs.core.truth_(i__13064)) {
    return bucket__13063[i__13064 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__13065 = this;
  var h__13066 = cljs.core.hash.call(null, k);
  var bucket__13067 = this__13065.hashobj[h__13066];
  if(cljs.core.truth_(bucket__13067)) {
    var new_bucket__13068 = bucket__13067.slice();
    var new_hashobj__13069 = goog.object.clone(this__13065.hashobj);
    new_hashobj__13069[h__13066] = new_bucket__13068;
    var temp__3971__auto____13070 = cljs.core.scan_array.call(null, 2, k, new_bucket__13068);
    if(cljs.core.truth_(temp__3971__auto____13070)) {
      var i__13071 = temp__3971__auto____13070;
      new_bucket__13068[i__13071 + 1] = v;
      return new cljs.core.HashMap(this__13065.meta, this__13065.count, new_hashobj__13069, null)
    }else {
      new_bucket__13068.push(k, v);
      return new cljs.core.HashMap(this__13065.meta, this__13065.count + 1, new_hashobj__13069, null)
    }
  }else {
    var new_hashobj__13072 = goog.object.clone(this__13065.hashobj);
    new_hashobj__13072[h__13066] = [k, v];
    return new cljs.core.HashMap(this__13065.meta, this__13065.count + 1, new_hashobj__13072, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__13073 = this;
  var bucket__13074 = this__13073.hashobj[cljs.core.hash.call(null, k)];
  var i__13075 = cljs.core.truth_(bucket__13074) ? cljs.core.scan_array.call(null, 2, k, bucket__13074) : null;
  if(cljs.core.truth_(i__13075)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__13100 = null;
  var G__13100__2 = function(this_sym13076, k) {
    var this__13078 = this;
    var this_sym13076__13079 = this;
    var coll__13080 = this_sym13076__13079;
    return coll__13080.cljs$core$ILookup$_lookup$arity$2(coll__13080, k)
  };
  var G__13100__3 = function(this_sym13077, k, not_found) {
    var this__13078 = this;
    var this_sym13077__13081 = this;
    var coll__13082 = this_sym13077__13081;
    return coll__13082.cljs$core$ILookup$_lookup$arity$3(coll__13082, k, not_found)
  };
  G__13100 = function(this_sym13077, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13100__2.call(this, this_sym13077, k);
      case 3:
        return G__13100__3.call(this, this_sym13077, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13100
}();
cljs.core.HashMap.prototype.apply = function(this_sym13056, args13057) {
  var this__13083 = this;
  return this_sym13056.call.apply(this_sym13056, [this_sym13056].concat(args13057.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__13084 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__13085 = this;
  var this__13086 = this;
  return cljs.core.pr_str.call(null, this__13086)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13087 = this;
  if(this__13087.count > 0) {
    var hashes__13088 = cljs.core.js_keys.call(null, this__13087.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__13055_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__13087.hashobj[p1__13055_SHARP_]))
    }, hashes__13088)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13089 = this;
  return this__13089.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13090 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13091 = this;
  return new cljs.core.HashMap(meta, this__13091.count, this__13091.hashobj, this__13091.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13092 = this;
  return this__13092.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13093 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__13093.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__13094 = this;
  var h__13095 = cljs.core.hash.call(null, k);
  var bucket__13096 = this__13094.hashobj[h__13095];
  var i__13097 = cljs.core.truth_(bucket__13096) ? cljs.core.scan_array.call(null, 2, k, bucket__13096) : null;
  if(cljs.core.not.call(null, i__13097)) {
    return coll
  }else {
    var new_hashobj__13098 = goog.object.clone(this__13094.hashobj);
    if(3 > bucket__13096.length) {
      cljs.core.js_delete.call(null, new_hashobj__13098, h__13095)
    }else {
      var new_bucket__13099 = bucket__13096.slice();
      new_bucket__13099.splice(i__13097, 2);
      new_hashobj__13098[h__13095] = new_bucket__13099
    }
    return new cljs.core.HashMap(this__13094.meta, this__13094.count - 1, new_hashobj__13098, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__13101 = ks.length;
  var i__13102 = 0;
  var out__13103 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__13102 < len__13101) {
      var G__13104 = i__13102 + 1;
      var G__13105 = cljs.core.assoc.call(null, out__13103, ks[i__13102], vs[i__13102]);
      i__13102 = G__13104;
      out__13103 = G__13105;
      continue
    }else {
      return out__13103
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__13109 = m.arr;
  var len__13110 = arr__13109.length;
  var i__13111 = 0;
  while(true) {
    if(len__13110 <= i__13111) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__13109[i__13111], k)) {
        return i__13111
      }else {
        if("\ufdd0'else") {
          var G__13112 = i__13111 + 2;
          i__13111 = G__13112;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__13115 = this;
  return new cljs.core.TransientArrayMap({}, this__13115.arr.length, this__13115.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13116 = this;
  var h__2093__auto____13117 = this__13116.__hash;
  if(!(h__2093__auto____13117 == null)) {
    return h__2093__auto____13117
  }else {
    var h__2093__auto____13118 = cljs.core.hash_imap.call(null, coll);
    this__13116.__hash = h__2093__auto____13118;
    return h__2093__auto____13118
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13119 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13120 = this;
  var idx__13121 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__13121 === -1) {
    return not_found
  }else {
    return this__13120.arr[idx__13121 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__13122 = this;
  var idx__13123 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__13123 === -1) {
    if(this__13122.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__13122.meta, this__13122.cnt + 1, function() {
        var G__13124__13125 = this__13122.arr.slice();
        G__13124__13125.push(k);
        G__13124__13125.push(v);
        return G__13124__13125
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__13122.arr[idx__13123 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__13122.meta, this__13122.cnt, function() {
          var G__13126__13127 = this__13122.arr.slice();
          G__13126__13127[idx__13123 + 1] = v;
          return G__13126__13127
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__13128 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__13160 = null;
  var G__13160__2 = function(this_sym13129, k) {
    var this__13131 = this;
    var this_sym13129__13132 = this;
    var coll__13133 = this_sym13129__13132;
    return coll__13133.cljs$core$ILookup$_lookup$arity$2(coll__13133, k)
  };
  var G__13160__3 = function(this_sym13130, k, not_found) {
    var this__13131 = this;
    var this_sym13130__13134 = this;
    var coll__13135 = this_sym13130__13134;
    return coll__13135.cljs$core$ILookup$_lookup$arity$3(coll__13135, k, not_found)
  };
  G__13160 = function(this_sym13130, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13160__2.call(this, this_sym13130, k);
      case 3:
        return G__13160__3.call(this, this_sym13130, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13160
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym13113, args13114) {
  var this__13136 = this;
  return this_sym13113.call.apply(this_sym13113, [this_sym13113].concat(args13114.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__13137 = this;
  var len__13138 = this__13137.arr.length;
  var i__13139 = 0;
  var init__13140 = init;
  while(true) {
    if(i__13139 < len__13138) {
      var init__13141 = f.call(null, init__13140, this__13137.arr[i__13139], this__13137.arr[i__13139 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__13141)) {
        return cljs.core.deref.call(null, init__13141)
      }else {
        var G__13161 = i__13139 + 2;
        var G__13162 = init__13141;
        i__13139 = G__13161;
        init__13140 = G__13162;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__13142 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__13143 = this;
  var this__13144 = this;
  return cljs.core.pr_str.call(null, this__13144)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13145 = this;
  if(this__13145.cnt > 0) {
    var len__13146 = this__13145.arr.length;
    var array_map_seq__13147 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__13146) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__13145.arr[i], this__13145.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__13147.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13148 = this;
  return this__13148.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13149 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13150 = this;
  return new cljs.core.PersistentArrayMap(meta, this__13150.cnt, this__13150.arr, this__13150.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13151 = this;
  return this__13151.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13152 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__13152.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__13153 = this;
  var idx__13154 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__13154 >= 0) {
    var len__13155 = this__13153.arr.length;
    var new_len__13156 = len__13155 - 2;
    if(new_len__13156 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__13157 = cljs.core.make_array.call(null, new_len__13156);
      var s__13158 = 0;
      var d__13159 = 0;
      while(true) {
        if(s__13158 >= len__13155) {
          return new cljs.core.PersistentArrayMap(this__13153.meta, this__13153.cnt - 1, new_arr__13157, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__13153.arr[s__13158])) {
            var G__13163 = s__13158 + 2;
            var G__13164 = d__13159;
            s__13158 = G__13163;
            d__13159 = G__13164;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__13157[d__13159] = this__13153.arr[s__13158];
              new_arr__13157[d__13159 + 1] = this__13153.arr[s__13158 + 1];
              var G__13165 = s__13158 + 2;
              var G__13166 = d__13159 + 2;
              s__13158 = G__13165;
              d__13159 = G__13166;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__13167 = cljs.core.count.call(null, ks);
  var i__13168 = 0;
  var out__13169 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__13168 < len__13167) {
      var G__13170 = i__13168 + 1;
      var G__13171 = cljs.core.assoc_BANG_.call(null, out__13169, ks[i__13168], vs[i__13168]);
      i__13168 = G__13170;
      out__13169 = G__13171;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__13169)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__13172 = this;
  if(cljs.core.truth_(this__13172.editable_QMARK_)) {
    var idx__13173 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__13173 >= 0) {
      this__13172.arr[idx__13173] = this__13172.arr[this__13172.len - 2];
      this__13172.arr[idx__13173 + 1] = this__13172.arr[this__13172.len - 1];
      var G__13174__13175 = this__13172.arr;
      G__13174__13175.pop();
      G__13174__13175.pop();
      G__13174__13175;
      this__13172.len = this__13172.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__13176 = this;
  if(cljs.core.truth_(this__13176.editable_QMARK_)) {
    var idx__13177 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__13177 === -1) {
      if(this__13176.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__13176.len = this__13176.len + 2;
        this__13176.arr.push(key);
        this__13176.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__13176.len, this__13176.arr), key, val)
      }
    }else {
      if(val === this__13176.arr[idx__13177 + 1]) {
        return tcoll
      }else {
        this__13176.arr[idx__13177 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__13178 = this;
  if(cljs.core.truth_(this__13178.editable_QMARK_)) {
    if(function() {
      var G__13179__13180 = o;
      if(G__13179__13180) {
        if(function() {
          var or__3824__auto____13181 = G__13179__13180.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____13181) {
            return or__3824__auto____13181
          }else {
            return G__13179__13180.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__13179__13180.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__13179__13180)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__13179__13180)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__13182 = cljs.core.seq.call(null, o);
      var tcoll__13183 = tcoll;
      while(true) {
        var temp__3971__auto____13184 = cljs.core.first.call(null, es__13182);
        if(cljs.core.truth_(temp__3971__auto____13184)) {
          var e__13185 = temp__3971__auto____13184;
          var G__13191 = cljs.core.next.call(null, es__13182);
          var G__13192 = tcoll__13183.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__13183, cljs.core.key.call(null, e__13185), cljs.core.val.call(null, e__13185));
          es__13182 = G__13191;
          tcoll__13183 = G__13192;
          continue
        }else {
          return tcoll__13183
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__13186 = this;
  if(cljs.core.truth_(this__13186.editable_QMARK_)) {
    this__13186.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__13186.len, 2), this__13186.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__13187 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__13188 = this;
  if(cljs.core.truth_(this__13188.editable_QMARK_)) {
    var idx__13189 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__13189 === -1) {
      return not_found
    }else {
      return this__13188.arr[idx__13189 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__13190 = this;
  if(cljs.core.truth_(this__13190.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__13190.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__13195 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__13196 = 0;
  while(true) {
    if(i__13196 < len) {
      var G__13197 = cljs.core.assoc_BANG_.call(null, out__13195, arr[i__13196], arr[i__13196 + 1]);
      var G__13198 = i__13196 + 2;
      out__13195 = G__13197;
      i__13196 = G__13198;
      continue
    }else {
      return out__13195
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2211__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__13203__13204 = arr.slice();
    G__13203__13204[i] = a;
    return G__13203__13204
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__13205__13206 = arr.slice();
    G__13205__13206[i] = a;
    G__13205__13206[j] = b;
    return G__13205__13206
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__13208 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__13208, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__13208, 2 * i, new_arr__13208.length - 2 * i);
  return new_arr__13208
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__13211 = inode.ensure_editable(edit);
    editable__13211.arr[i] = a;
    return editable__13211
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__13212 = inode.ensure_editable(edit);
    editable__13212.arr[i] = a;
    editable__13212.arr[j] = b;
    return editable__13212
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__13219 = arr.length;
  var i__13220 = 0;
  var init__13221 = init;
  while(true) {
    if(i__13220 < len__13219) {
      var init__13224 = function() {
        var k__13222 = arr[i__13220];
        if(!(k__13222 == null)) {
          return f.call(null, init__13221, k__13222, arr[i__13220 + 1])
        }else {
          var node__13223 = arr[i__13220 + 1];
          if(!(node__13223 == null)) {
            return node__13223.kv_reduce(f, init__13221)
          }else {
            return init__13221
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__13224)) {
        return cljs.core.deref.call(null, init__13224)
      }else {
        var G__13225 = i__13220 + 2;
        var G__13226 = init__13224;
        i__13220 = G__13225;
        init__13221 = G__13226;
        continue
      }
    }else {
      return init__13221
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__13227 = this;
  var inode__13228 = this;
  if(this__13227.bitmap === bit) {
    return null
  }else {
    var editable__13229 = inode__13228.ensure_editable(e);
    var earr__13230 = editable__13229.arr;
    var len__13231 = earr__13230.length;
    editable__13229.bitmap = bit ^ editable__13229.bitmap;
    cljs.core.array_copy.call(null, earr__13230, 2 * (i + 1), earr__13230, 2 * i, len__13231 - 2 * (i + 1));
    earr__13230[len__13231 - 2] = null;
    earr__13230[len__13231 - 1] = null;
    return editable__13229
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__13232 = this;
  var inode__13233 = this;
  var bit__13234 = 1 << (hash >>> shift & 31);
  var idx__13235 = cljs.core.bitmap_indexed_node_index.call(null, this__13232.bitmap, bit__13234);
  if((this__13232.bitmap & bit__13234) === 0) {
    var n__13236 = cljs.core.bit_count.call(null, this__13232.bitmap);
    if(2 * n__13236 < this__13232.arr.length) {
      var editable__13237 = inode__13233.ensure_editable(edit);
      var earr__13238 = editable__13237.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__13238, 2 * idx__13235, earr__13238, 2 * (idx__13235 + 1), 2 * (n__13236 - idx__13235));
      earr__13238[2 * idx__13235] = key;
      earr__13238[2 * idx__13235 + 1] = val;
      editable__13237.bitmap = editable__13237.bitmap | bit__13234;
      return editable__13237
    }else {
      if(n__13236 >= 16) {
        var nodes__13239 = cljs.core.make_array.call(null, 32);
        var jdx__13240 = hash >>> shift & 31;
        nodes__13239[jdx__13240] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__13241 = 0;
        var j__13242 = 0;
        while(true) {
          if(i__13241 < 32) {
            if((this__13232.bitmap >>> i__13241 & 1) === 0) {
              var G__13295 = i__13241 + 1;
              var G__13296 = j__13242;
              i__13241 = G__13295;
              j__13242 = G__13296;
              continue
            }else {
              nodes__13239[i__13241] = !(this__13232.arr[j__13242] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__13232.arr[j__13242]), this__13232.arr[j__13242], this__13232.arr[j__13242 + 1], added_leaf_QMARK_) : this__13232.arr[j__13242 + 1];
              var G__13297 = i__13241 + 1;
              var G__13298 = j__13242 + 2;
              i__13241 = G__13297;
              j__13242 = G__13298;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__13236 + 1, nodes__13239)
      }else {
        if("\ufdd0'else") {
          var new_arr__13243 = cljs.core.make_array.call(null, 2 * (n__13236 + 4));
          cljs.core.array_copy.call(null, this__13232.arr, 0, new_arr__13243, 0, 2 * idx__13235);
          new_arr__13243[2 * idx__13235] = key;
          new_arr__13243[2 * idx__13235 + 1] = val;
          cljs.core.array_copy.call(null, this__13232.arr, 2 * idx__13235, new_arr__13243, 2 * (idx__13235 + 1), 2 * (n__13236 - idx__13235));
          added_leaf_QMARK_.val = true;
          var editable__13244 = inode__13233.ensure_editable(edit);
          editable__13244.arr = new_arr__13243;
          editable__13244.bitmap = editable__13244.bitmap | bit__13234;
          return editable__13244
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__13245 = this__13232.arr[2 * idx__13235];
    var val_or_node__13246 = this__13232.arr[2 * idx__13235 + 1];
    if(key_or_nil__13245 == null) {
      var n__13247 = val_or_node__13246.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__13247 === val_or_node__13246) {
        return inode__13233
      }else {
        return cljs.core.edit_and_set.call(null, inode__13233, edit, 2 * idx__13235 + 1, n__13247)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__13245)) {
        if(val === val_or_node__13246) {
          return inode__13233
        }else {
          return cljs.core.edit_and_set.call(null, inode__13233, edit, 2 * idx__13235 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__13233, edit, 2 * idx__13235, null, 2 * idx__13235 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__13245, val_or_node__13246, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__13248 = this;
  var inode__13249 = this;
  return cljs.core.create_inode_seq.call(null, this__13248.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__13250 = this;
  var inode__13251 = this;
  var bit__13252 = 1 << (hash >>> shift & 31);
  if((this__13250.bitmap & bit__13252) === 0) {
    return inode__13251
  }else {
    var idx__13253 = cljs.core.bitmap_indexed_node_index.call(null, this__13250.bitmap, bit__13252);
    var key_or_nil__13254 = this__13250.arr[2 * idx__13253];
    var val_or_node__13255 = this__13250.arr[2 * idx__13253 + 1];
    if(key_or_nil__13254 == null) {
      var n__13256 = val_or_node__13255.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__13256 === val_or_node__13255) {
        return inode__13251
      }else {
        if(!(n__13256 == null)) {
          return cljs.core.edit_and_set.call(null, inode__13251, edit, 2 * idx__13253 + 1, n__13256)
        }else {
          if(this__13250.bitmap === bit__13252) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__13251.edit_and_remove_pair(edit, bit__13252, idx__13253)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__13254)) {
        removed_leaf_QMARK_[0] = true;
        return inode__13251.edit_and_remove_pair(edit, bit__13252, idx__13253)
      }else {
        if("\ufdd0'else") {
          return inode__13251
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__13257 = this;
  var inode__13258 = this;
  if(e === this__13257.edit) {
    return inode__13258
  }else {
    var n__13259 = cljs.core.bit_count.call(null, this__13257.bitmap);
    var new_arr__13260 = cljs.core.make_array.call(null, n__13259 < 0 ? 4 : 2 * (n__13259 + 1));
    cljs.core.array_copy.call(null, this__13257.arr, 0, new_arr__13260, 0, 2 * n__13259);
    return new cljs.core.BitmapIndexedNode(e, this__13257.bitmap, new_arr__13260)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__13261 = this;
  var inode__13262 = this;
  return cljs.core.inode_kv_reduce.call(null, this__13261.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__13263 = this;
  var inode__13264 = this;
  var bit__13265 = 1 << (hash >>> shift & 31);
  if((this__13263.bitmap & bit__13265) === 0) {
    return not_found
  }else {
    var idx__13266 = cljs.core.bitmap_indexed_node_index.call(null, this__13263.bitmap, bit__13265);
    var key_or_nil__13267 = this__13263.arr[2 * idx__13266];
    var val_or_node__13268 = this__13263.arr[2 * idx__13266 + 1];
    if(key_or_nil__13267 == null) {
      return val_or_node__13268.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__13267)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__13267, val_or_node__13268], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__13269 = this;
  var inode__13270 = this;
  var bit__13271 = 1 << (hash >>> shift & 31);
  if((this__13269.bitmap & bit__13271) === 0) {
    return inode__13270
  }else {
    var idx__13272 = cljs.core.bitmap_indexed_node_index.call(null, this__13269.bitmap, bit__13271);
    var key_or_nil__13273 = this__13269.arr[2 * idx__13272];
    var val_or_node__13274 = this__13269.arr[2 * idx__13272 + 1];
    if(key_or_nil__13273 == null) {
      var n__13275 = val_or_node__13274.inode_without(shift + 5, hash, key);
      if(n__13275 === val_or_node__13274) {
        return inode__13270
      }else {
        if(!(n__13275 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__13269.bitmap, cljs.core.clone_and_set.call(null, this__13269.arr, 2 * idx__13272 + 1, n__13275))
        }else {
          if(this__13269.bitmap === bit__13271) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__13269.bitmap ^ bit__13271, cljs.core.remove_pair.call(null, this__13269.arr, idx__13272))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__13273)) {
        return new cljs.core.BitmapIndexedNode(null, this__13269.bitmap ^ bit__13271, cljs.core.remove_pair.call(null, this__13269.arr, idx__13272))
      }else {
        if("\ufdd0'else") {
          return inode__13270
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__13276 = this;
  var inode__13277 = this;
  var bit__13278 = 1 << (hash >>> shift & 31);
  var idx__13279 = cljs.core.bitmap_indexed_node_index.call(null, this__13276.bitmap, bit__13278);
  if((this__13276.bitmap & bit__13278) === 0) {
    var n__13280 = cljs.core.bit_count.call(null, this__13276.bitmap);
    if(n__13280 >= 16) {
      var nodes__13281 = cljs.core.make_array.call(null, 32);
      var jdx__13282 = hash >>> shift & 31;
      nodes__13281[jdx__13282] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__13283 = 0;
      var j__13284 = 0;
      while(true) {
        if(i__13283 < 32) {
          if((this__13276.bitmap >>> i__13283 & 1) === 0) {
            var G__13299 = i__13283 + 1;
            var G__13300 = j__13284;
            i__13283 = G__13299;
            j__13284 = G__13300;
            continue
          }else {
            nodes__13281[i__13283] = !(this__13276.arr[j__13284] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__13276.arr[j__13284]), this__13276.arr[j__13284], this__13276.arr[j__13284 + 1], added_leaf_QMARK_) : this__13276.arr[j__13284 + 1];
            var G__13301 = i__13283 + 1;
            var G__13302 = j__13284 + 2;
            i__13283 = G__13301;
            j__13284 = G__13302;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__13280 + 1, nodes__13281)
    }else {
      var new_arr__13285 = cljs.core.make_array.call(null, 2 * (n__13280 + 1));
      cljs.core.array_copy.call(null, this__13276.arr, 0, new_arr__13285, 0, 2 * idx__13279);
      new_arr__13285[2 * idx__13279] = key;
      new_arr__13285[2 * idx__13279 + 1] = val;
      cljs.core.array_copy.call(null, this__13276.arr, 2 * idx__13279, new_arr__13285, 2 * (idx__13279 + 1), 2 * (n__13280 - idx__13279));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__13276.bitmap | bit__13278, new_arr__13285)
    }
  }else {
    var key_or_nil__13286 = this__13276.arr[2 * idx__13279];
    var val_or_node__13287 = this__13276.arr[2 * idx__13279 + 1];
    if(key_or_nil__13286 == null) {
      var n__13288 = val_or_node__13287.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__13288 === val_or_node__13287) {
        return inode__13277
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__13276.bitmap, cljs.core.clone_and_set.call(null, this__13276.arr, 2 * idx__13279 + 1, n__13288))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__13286)) {
        if(val === val_or_node__13287) {
          return inode__13277
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__13276.bitmap, cljs.core.clone_and_set.call(null, this__13276.arr, 2 * idx__13279 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__13276.bitmap, cljs.core.clone_and_set.call(null, this__13276.arr, 2 * idx__13279, null, 2 * idx__13279 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__13286, val_or_node__13287, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__13289 = this;
  var inode__13290 = this;
  var bit__13291 = 1 << (hash >>> shift & 31);
  if((this__13289.bitmap & bit__13291) === 0) {
    return not_found
  }else {
    var idx__13292 = cljs.core.bitmap_indexed_node_index.call(null, this__13289.bitmap, bit__13291);
    var key_or_nil__13293 = this__13289.arr[2 * idx__13292];
    var val_or_node__13294 = this__13289.arr[2 * idx__13292 + 1];
    if(key_or_nil__13293 == null) {
      return val_or_node__13294.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__13293)) {
        return val_or_node__13294
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__13310 = array_node.arr;
  var len__13311 = 2 * (array_node.cnt - 1);
  var new_arr__13312 = cljs.core.make_array.call(null, len__13311);
  var i__13313 = 0;
  var j__13314 = 1;
  var bitmap__13315 = 0;
  while(true) {
    if(i__13313 < len__13311) {
      if(function() {
        var and__3822__auto____13316 = !(i__13313 === idx);
        if(and__3822__auto____13316) {
          return!(arr__13310[i__13313] == null)
        }else {
          return and__3822__auto____13316
        }
      }()) {
        new_arr__13312[j__13314] = arr__13310[i__13313];
        var G__13317 = i__13313 + 1;
        var G__13318 = j__13314 + 2;
        var G__13319 = bitmap__13315 | 1 << i__13313;
        i__13313 = G__13317;
        j__13314 = G__13318;
        bitmap__13315 = G__13319;
        continue
      }else {
        var G__13320 = i__13313 + 1;
        var G__13321 = j__13314;
        var G__13322 = bitmap__13315;
        i__13313 = G__13320;
        j__13314 = G__13321;
        bitmap__13315 = G__13322;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__13315, new_arr__13312)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__13323 = this;
  var inode__13324 = this;
  var idx__13325 = hash >>> shift & 31;
  var node__13326 = this__13323.arr[idx__13325];
  if(node__13326 == null) {
    var editable__13327 = cljs.core.edit_and_set.call(null, inode__13324, edit, idx__13325, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__13327.cnt = editable__13327.cnt + 1;
    return editable__13327
  }else {
    var n__13328 = node__13326.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__13328 === node__13326) {
      return inode__13324
    }else {
      return cljs.core.edit_and_set.call(null, inode__13324, edit, idx__13325, n__13328)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__13329 = this;
  var inode__13330 = this;
  return cljs.core.create_array_node_seq.call(null, this__13329.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__13331 = this;
  var inode__13332 = this;
  var idx__13333 = hash >>> shift & 31;
  var node__13334 = this__13331.arr[idx__13333];
  if(node__13334 == null) {
    return inode__13332
  }else {
    var n__13335 = node__13334.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__13335 === node__13334) {
      return inode__13332
    }else {
      if(n__13335 == null) {
        if(this__13331.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__13332, edit, idx__13333)
        }else {
          var editable__13336 = cljs.core.edit_and_set.call(null, inode__13332, edit, idx__13333, n__13335);
          editable__13336.cnt = editable__13336.cnt - 1;
          return editable__13336
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__13332, edit, idx__13333, n__13335)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__13337 = this;
  var inode__13338 = this;
  if(e === this__13337.edit) {
    return inode__13338
  }else {
    return new cljs.core.ArrayNode(e, this__13337.cnt, this__13337.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__13339 = this;
  var inode__13340 = this;
  var len__13341 = this__13339.arr.length;
  var i__13342 = 0;
  var init__13343 = init;
  while(true) {
    if(i__13342 < len__13341) {
      var node__13344 = this__13339.arr[i__13342];
      if(!(node__13344 == null)) {
        var init__13345 = node__13344.kv_reduce(f, init__13343);
        if(cljs.core.reduced_QMARK_.call(null, init__13345)) {
          return cljs.core.deref.call(null, init__13345)
        }else {
          var G__13364 = i__13342 + 1;
          var G__13365 = init__13345;
          i__13342 = G__13364;
          init__13343 = G__13365;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__13343
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__13346 = this;
  var inode__13347 = this;
  var idx__13348 = hash >>> shift & 31;
  var node__13349 = this__13346.arr[idx__13348];
  if(!(node__13349 == null)) {
    return node__13349.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__13350 = this;
  var inode__13351 = this;
  var idx__13352 = hash >>> shift & 31;
  var node__13353 = this__13350.arr[idx__13352];
  if(!(node__13353 == null)) {
    var n__13354 = node__13353.inode_without(shift + 5, hash, key);
    if(n__13354 === node__13353) {
      return inode__13351
    }else {
      if(n__13354 == null) {
        if(this__13350.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__13351, null, idx__13352)
        }else {
          return new cljs.core.ArrayNode(null, this__13350.cnt - 1, cljs.core.clone_and_set.call(null, this__13350.arr, idx__13352, n__13354))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__13350.cnt, cljs.core.clone_and_set.call(null, this__13350.arr, idx__13352, n__13354))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__13351
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__13355 = this;
  var inode__13356 = this;
  var idx__13357 = hash >>> shift & 31;
  var node__13358 = this__13355.arr[idx__13357];
  if(node__13358 == null) {
    return new cljs.core.ArrayNode(null, this__13355.cnt + 1, cljs.core.clone_and_set.call(null, this__13355.arr, idx__13357, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__13359 = node__13358.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__13359 === node__13358) {
      return inode__13356
    }else {
      return new cljs.core.ArrayNode(null, this__13355.cnt, cljs.core.clone_and_set.call(null, this__13355.arr, idx__13357, n__13359))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__13360 = this;
  var inode__13361 = this;
  var idx__13362 = hash >>> shift & 31;
  var node__13363 = this__13360.arr[idx__13362];
  if(!(node__13363 == null)) {
    return node__13363.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__13368 = 2 * cnt;
  var i__13369 = 0;
  while(true) {
    if(i__13369 < lim__13368) {
      if(cljs.core.key_test.call(null, key, arr[i__13369])) {
        return i__13369
      }else {
        var G__13370 = i__13369 + 2;
        i__13369 = G__13370;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__13371 = this;
  var inode__13372 = this;
  if(hash === this__13371.collision_hash) {
    var idx__13373 = cljs.core.hash_collision_node_find_index.call(null, this__13371.arr, this__13371.cnt, key);
    if(idx__13373 === -1) {
      if(this__13371.arr.length > 2 * this__13371.cnt) {
        var editable__13374 = cljs.core.edit_and_set.call(null, inode__13372, edit, 2 * this__13371.cnt, key, 2 * this__13371.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__13374.cnt = editable__13374.cnt + 1;
        return editable__13374
      }else {
        var len__13375 = this__13371.arr.length;
        var new_arr__13376 = cljs.core.make_array.call(null, len__13375 + 2);
        cljs.core.array_copy.call(null, this__13371.arr, 0, new_arr__13376, 0, len__13375);
        new_arr__13376[len__13375] = key;
        new_arr__13376[len__13375 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__13372.ensure_editable_array(edit, this__13371.cnt + 1, new_arr__13376)
      }
    }else {
      if(this__13371.arr[idx__13373 + 1] === val) {
        return inode__13372
      }else {
        return cljs.core.edit_and_set.call(null, inode__13372, edit, idx__13373 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__13371.collision_hash >>> shift & 31), [null, inode__13372, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__13377 = this;
  var inode__13378 = this;
  return cljs.core.create_inode_seq.call(null, this__13377.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__13379 = this;
  var inode__13380 = this;
  var idx__13381 = cljs.core.hash_collision_node_find_index.call(null, this__13379.arr, this__13379.cnt, key);
  if(idx__13381 === -1) {
    return inode__13380
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__13379.cnt === 1) {
      return null
    }else {
      var editable__13382 = inode__13380.ensure_editable(edit);
      var earr__13383 = editable__13382.arr;
      earr__13383[idx__13381] = earr__13383[2 * this__13379.cnt - 2];
      earr__13383[idx__13381 + 1] = earr__13383[2 * this__13379.cnt - 1];
      earr__13383[2 * this__13379.cnt - 1] = null;
      earr__13383[2 * this__13379.cnt - 2] = null;
      editable__13382.cnt = editable__13382.cnt - 1;
      return editable__13382
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__13384 = this;
  var inode__13385 = this;
  if(e === this__13384.edit) {
    return inode__13385
  }else {
    var new_arr__13386 = cljs.core.make_array.call(null, 2 * (this__13384.cnt + 1));
    cljs.core.array_copy.call(null, this__13384.arr, 0, new_arr__13386, 0, 2 * this__13384.cnt);
    return new cljs.core.HashCollisionNode(e, this__13384.collision_hash, this__13384.cnt, new_arr__13386)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__13387 = this;
  var inode__13388 = this;
  return cljs.core.inode_kv_reduce.call(null, this__13387.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__13389 = this;
  var inode__13390 = this;
  var idx__13391 = cljs.core.hash_collision_node_find_index.call(null, this__13389.arr, this__13389.cnt, key);
  if(idx__13391 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__13389.arr[idx__13391])) {
      return cljs.core.PersistentVector.fromArray([this__13389.arr[idx__13391], this__13389.arr[idx__13391 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__13392 = this;
  var inode__13393 = this;
  var idx__13394 = cljs.core.hash_collision_node_find_index.call(null, this__13392.arr, this__13392.cnt, key);
  if(idx__13394 === -1) {
    return inode__13393
  }else {
    if(this__13392.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__13392.collision_hash, this__13392.cnt - 1, cljs.core.remove_pair.call(null, this__13392.arr, cljs.core.quot.call(null, idx__13394, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__13395 = this;
  var inode__13396 = this;
  if(hash === this__13395.collision_hash) {
    var idx__13397 = cljs.core.hash_collision_node_find_index.call(null, this__13395.arr, this__13395.cnt, key);
    if(idx__13397 === -1) {
      var len__13398 = this__13395.arr.length;
      var new_arr__13399 = cljs.core.make_array.call(null, len__13398 + 2);
      cljs.core.array_copy.call(null, this__13395.arr, 0, new_arr__13399, 0, len__13398);
      new_arr__13399[len__13398] = key;
      new_arr__13399[len__13398 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__13395.collision_hash, this__13395.cnt + 1, new_arr__13399)
    }else {
      if(cljs.core._EQ_.call(null, this__13395.arr[idx__13397], val)) {
        return inode__13396
      }else {
        return new cljs.core.HashCollisionNode(null, this__13395.collision_hash, this__13395.cnt, cljs.core.clone_and_set.call(null, this__13395.arr, idx__13397 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__13395.collision_hash >>> shift & 31), [null, inode__13396])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__13400 = this;
  var inode__13401 = this;
  var idx__13402 = cljs.core.hash_collision_node_find_index.call(null, this__13400.arr, this__13400.cnt, key);
  if(idx__13402 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__13400.arr[idx__13402])) {
      return this__13400.arr[idx__13402 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__13403 = this;
  var inode__13404 = this;
  if(e === this__13403.edit) {
    this__13403.arr = array;
    this__13403.cnt = count;
    return inode__13404
  }else {
    return new cljs.core.HashCollisionNode(this__13403.edit, this__13403.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__13409 = cljs.core.hash.call(null, key1);
    if(key1hash__13409 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__13409, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___13410 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__13409, key1, val1, added_leaf_QMARK___13410).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___13410)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__13411 = cljs.core.hash.call(null, key1);
    if(key1hash__13411 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__13411, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___13412 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__13411, key1, val1, added_leaf_QMARK___13412).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___13412)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13413 = this;
  var h__2093__auto____13414 = this__13413.__hash;
  if(!(h__2093__auto____13414 == null)) {
    return h__2093__auto____13414
  }else {
    var h__2093__auto____13415 = cljs.core.hash_coll.call(null, coll);
    this__13413.__hash = h__2093__auto____13415;
    return h__2093__auto____13415
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13416 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__13417 = this;
  var this__13418 = this;
  return cljs.core.pr_str.call(null, this__13418)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__13419 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__13420 = this;
  if(this__13420.s == null) {
    return cljs.core.PersistentVector.fromArray([this__13420.nodes[this__13420.i], this__13420.nodes[this__13420.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__13420.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__13421 = this;
  if(this__13421.s == null) {
    return cljs.core.create_inode_seq.call(null, this__13421.nodes, this__13421.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__13421.nodes, this__13421.i, cljs.core.next.call(null, this__13421.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13422 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13423 = this;
  return new cljs.core.NodeSeq(meta, this__13423.nodes, this__13423.i, this__13423.s, this__13423.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13424 = this;
  return this__13424.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13425 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__13425.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__13432 = nodes.length;
      var j__13433 = i;
      while(true) {
        if(j__13433 < len__13432) {
          if(!(nodes[j__13433] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__13433, null, null)
          }else {
            var temp__3971__auto____13434 = nodes[j__13433 + 1];
            if(cljs.core.truth_(temp__3971__auto____13434)) {
              var node__13435 = temp__3971__auto____13434;
              var temp__3971__auto____13436 = node__13435.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____13436)) {
                var node_seq__13437 = temp__3971__auto____13436;
                return new cljs.core.NodeSeq(null, nodes, j__13433 + 2, node_seq__13437, null)
              }else {
                var G__13438 = j__13433 + 2;
                j__13433 = G__13438;
                continue
              }
            }else {
              var G__13439 = j__13433 + 2;
              j__13433 = G__13439;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13440 = this;
  var h__2093__auto____13441 = this__13440.__hash;
  if(!(h__2093__auto____13441 == null)) {
    return h__2093__auto____13441
  }else {
    var h__2093__auto____13442 = cljs.core.hash_coll.call(null, coll);
    this__13440.__hash = h__2093__auto____13442;
    return h__2093__auto____13442
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13443 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__13444 = this;
  var this__13445 = this;
  return cljs.core.pr_str.call(null, this__13445)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__13446 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__13447 = this;
  return cljs.core.first.call(null, this__13447.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__13448 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__13448.nodes, this__13448.i, cljs.core.next.call(null, this__13448.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13449 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13450 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__13450.nodes, this__13450.i, this__13450.s, this__13450.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13451 = this;
  return this__13451.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13452 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__13452.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__13459 = nodes.length;
      var j__13460 = i;
      while(true) {
        if(j__13460 < len__13459) {
          var temp__3971__auto____13461 = nodes[j__13460];
          if(cljs.core.truth_(temp__3971__auto____13461)) {
            var nj__13462 = temp__3971__auto____13461;
            var temp__3971__auto____13463 = nj__13462.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____13463)) {
              var ns__13464 = temp__3971__auto____13463;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__13460 + 1, ns__13464, null)
            }else {
              var G__13465 = j__13460 + 1;
              j__13460 = G__13465;
              continue
            }
          }else {
            var G__13466 = j__13460 + 1;
            j__13460 = G__13466;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__13469 = this;
  return new cljs.core.TransientHashMap({}, this__13469.root, this__13469.cnt, this__13469.has_nil_QMARK_, this__13469.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13470 = this;
  var h__2093__auto____13471 = this__13470.__hash;
  if(!(h__2093__auto____13471 == null)) {
    return h__2093__auto____13471
  }else {
    var h__2093__auto____13472 = cljs.core.hash_imap.call(null, coll);
    this__13470.__hash = h__2093__auto____13472;
    return h__2093__auto____13472
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13473 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13474 = this;
  if(k == null) {
    if(this__13474.has_nil_QMARK_) {
      return this__13474.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__13474.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__13474.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__13475 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____13476 = this__13475.has_nil_QMARK_;
      if(and__3822__auto____13476) {
        return v === this__13475.nil_val
      }else {
        return and__3822__auto____13476
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__13475.meta, this__13475.has_nil_QMARK_ ? this__13475.cnt : this__13475.cnt + 1, this__13475.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___13477 = new cljs.core.Box(false);
    var new_root__13478 = (this__13475.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__13475.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___13477);
    if(new_root__13478 === this__13475.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__13475.meta, added_leaf_QMARK___13477.val ? this__13475.cnt + 1 : this__13475.cnt, new_root__13478, this__13475.has_nil_QMARK_, this__13475.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__13479 = this;
  if(k == null) {
    return this__13479.has_nil_QMARK_
  }else {
    if(this__13479.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__13479.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__13502 = null;
  var G__13502__2 = function(this_sym13480, k) {
    var this__13482 = this;
    var this_sym13480__13483 = this;
    var coll__13484 = this_sym13480__13483;
    return coll__13484.cljs$core$ILookup$_lookup$arity$2(coll__13484, k)
  };
  var G__13502__3 = function(this_sym13481, k, not_found) {
    var this__13482 = this;
    var this_sym13481__13485 = this;
    var coll__13486 = this_sym13481__13485;
    return coll__13486.cljs$core$ILookup$_lookup$arity$3(coll__13486, k, not_found)
  };
  G__13502 = function(this_sym13481, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13502__2.call(this, this_sym13481, k);
      case 3:
        return G__13502__3.call(this, this_sym13481, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13502
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym13467, args13468) {
  var this__13487 = this;
  return this_sym13467.call.apply(this_sym13467, [this_sym13467].concat(args13468.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__13488 = this;
  var init__13489 = this__13488.has_nil_QMARK_ ? f.call(null, init, null, this__13488.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__13489)) {
    return cljs.core.deref.call(null, init__13489)
  }else {
    if(!(this__13488.root == null)) {
      return this__13488.root.kv_reduce(f, init__13489)
    }else {
      if("\ufdd0'else") {
        return init__13489
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__13490 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__13491 = this;
  var this__13492 = this;
  return cljs.core.pr_str.call(null, this__13492)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13493 = this;
  if(this__13493.cnt > 0) {
    var s__13494 = !(this__13493.root == null) ? this__13493.root.inode_seq() : null;
    if(this__13493.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__13493.nil_val], true), s__13494)
    }else {
      return s__13494
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13495 = this;
  return this__13495.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13496 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13497 = this;
  return new cljs.core.PersistentHashMap(meta, this__13497.cnt, this__13497.root, this__13497.has_nil_QMARK_, this__13497.nil_val, this__13497.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13498 = this;
  return this__13498.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13499 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__13499.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__13500 = this;
  if(k == null) {
    if(this__13500.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__13500.meta, this__13500.cnt - 1, this__13500.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__13500.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__13501 = this__13500.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__13501 === this__13500.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__13500.meta, this__13500.cnt - 1, new_root__13501, this__13500.has_nil_QMARK_, this__13500.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__13503 = ks.length;
  var i__13504 = 0;
  var out__13505 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__13504 < len__13503) {
      var G__13506 = i__13504 + 1;
      var G__13507 = cljs.core.assoc_BANG_.call(null, out__13505, ks[i__13504], vs[i__13504]);
      i__13504 = G__13506;
      out__13505 = G__13507;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__13505)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__13508 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__13509 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__13510 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__13511 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__13512 = this;
  if(k == null) {
    if(this__13512.has_nil_QMARK_) {
      return this__13512.nil_val
    }else {
      return null
    }
  }else {
    if(this__13512.root == null) {
      return null
    }else {
      return this__13512.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__13513 = this;
  if(k == null) {
    if(this__13513.has_nil_QMARK_) {
      return this__13513.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__13513.root == null) {
      return not_found
    }else {
      return this__13513.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13514 = this;
  if(this__13514.edit) {
    return this__13514.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__13515 = this;
  var tcoll__13516 = this;
  if(this__13515.edit) {
    if(function() {
      var G__13517__13518 = o;
      if(G__13517__13518) {
        if(function() {
          var or__3824__auto____13519 = G__13517__13518.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____13519) {
            return or__3824__auto____13519
          }else {
            return G__13517__13518.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__13517__13518.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__13517__13518)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__13517__13518)
      }
    }()) {
      return tcoll__13516.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__13520 = cljs.core.seq.call(null, o);
      var tcoll__13521 = tcoll__13516;
      while(true) {
        var temp__3971__auto____13522 = cljs.core.first.call(null, es__13520);
        if(cljs.core.truth_(temp__3971__auto____13522)) {
          var e__13523 = temp__3971__auto____13522;
          var G__13534 = cljs.core.next.call(null, es__13520);
          var G__13535 = tcoll__13521.assoc_BANG_(cljs.core.key.call(null, e__13523), cljs.core.val.call(null, e__13523));
          es__13520 = G__13534;
          tcoll__13521 = G__13535;
          continue
        }else {
          return tcoll__13521
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__13524 = this;
  var tcoll__13525 = this;
  if(this__13524.edit) {
    if(k == null) {
      if(this__13524.nil_val === v) {
      }else {
        this__13524.nil_val = v
      }
      if(this__13524.has_nil_QMARK_) {
      }else {
        this__13524.count = this__13524.count + 1;
        this__13524.has_nil_QMARK_ = true
      }
      return tcoll__13525
    }else {
      var added_leaf_QMARK___13526 = new cljs.core.Box(false);
      var node__13527 = (this__13524.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__13524.root).inode_assoc_BANG_(this__13524.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___13526);
      if(node__13527 === this__13524.root) {
      }else {
        this__13524.root = node__13527
      }
      if(added_leaf_QMARK___13526.val) {
        this__13524.count = this__13524.count + 1
      }else {
      }
      return tcoll__13525
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__13528 = this;
  var tcoll__13529 = this;
  if(this__13528.edit) {
    if(k == null) {
      if(this__13528.has_nil_QMARK_) {
        this__13528.has_nil_QMARK_ = false;
        this__13528.nil_val = null;
        this__13528.count = this__13528.count - 1;
        return tcoll__13529
      }else {
        return tcoll__13529
      }
    }else {
      if(this__13528.root == null) {
        return tcoll__13529
      }else {
        var removed_leaf_QMARK___13530 = new cljs.core.Box(false);
        var node__13531 = this__13528.root.inode_without_BANG_(this__13528.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___13530);
        if(node__13531 === this__13528.root) {
        }else {
          this__13528.root = node__13531
        }
        if(cljs.core.truth_(removed_leaf_QMARK___13530[0])) {
          this__13528.count = this__13528.count - 1
        }else {
        }
        return tcoll__13529
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__13532 = this;
  var tcoll__13533 = this;
  if(this__13532.edit) {
    this__13532.edit = null;
    return new cljs.core.PersistentHashMap(null, this__13532.count, this__13532.root, this__13532.has_nil_QMARK_, this__13532.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__13538 = node;
  var stack__13539 = stack;
  while(true) {
    if(!(t__13538 == null)) {
      var G__13540 = ascending_QMARK_ ? t__13538.left : t__13538.right;
      var G__13541 = cljs.core.conj.call(null, stack__13539, t__13538);
      t__13538 = G__13540;
      stack__13539 = G__13541;
      continue
    }else {
      return stack__13539
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13542 = this;
  var h__2093__auto____13543 = this__13542.__hash;
  if(!(h__2093__auto____13543 == null)) {
    return h__2093__auto____13543
  }else {
    var h__2093__auto____13544 = cljs.core.hash_coll.call(null, coll);
    this__13542.__hash = h__2093__auto____13544;
    return h__2093__auto____13544
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13545 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__13546 = this;
  var this__13547 = this;
  return cljs.core.pr_str.call(null, this__13547)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__13548 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13549 = this;
  if(this__13549.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__13549.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__13550 = this;
  return cljs.core.peek.call(null, this__13550.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__13551 = this;
  var t__13552 = cljs.core.first.call(null, this__13551.stack);
  var next_stack__13553 = cljs.core.tree_map_seq_push.call(null, this__13551.ascending_QMARK_ ? t__13552.right : t__13552.left, cljs.core.next.call(null, this__13551.stack), this__13551.ascending_QMARK_);
  if(!(next_stack__13553 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__13553, this__13551.ascending_QMARK_, this__13551.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13554 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13555 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__13555.stack, this__13555.ascending_QMARK_, this__13555.cnt, this__13555.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13556 = this;
  return this__13556.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____13558 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____13558) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____13558
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____13560 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____13560) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____13560
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__13564 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__13564)) {
    return cljs.core.deref.call(null, init__13564)
  }else {
    var init__13565 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__13564) : init__13564;
    if(cljs.core.reduced_QMARK_.call(null, init__13565)) {
      return cljs.core.deref.call(null, init__13565)
    }else {
      var init__13566 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__13565) : init__13565;
      if(cljs.core.reduced_QMARK_.call(null, init__13566)) {
        return cljs.core.deref.call(null, init__13566)
      }else {
        return init__13566
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13569 = this;
  var h__2093__auto____13570 = this__13569.__hash;
  if(!(h__2093__auto____13570 == null)) {
    return h__2093__auto____13570
  }else {
    var h__2093__auto____13571 = cljs.core.hash_coll.call(null, coll);
    this__13569.__hash = h__2093__auto____13571;
    return h__2093__auto____13571
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__13572 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__13573 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__13574 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__13574.key, this__13574.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__13622 = null;
  var G__13622__2 = function(this_sym13575, k) {
    var this__13577 = this;
    var this_sym13575__13578 = this;
    var node__13579 = this_sym13575__13578;
    return node__13579.cljs$core$ILookup$_lookup$arity$2(node__13579, k)
  };
  var G__13622__3 = function(this_sym13576, k, not_found) {
    var this__13577 = this;
    var this_sym13576__13580 = this;
    var node__13581 = this_sym13576__13580;
    return node__13581.cljs$core$ILookup$_lookup$arity$3(node__13581, k, not_found)
  };
  G__13622 = function(this_sym13576, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13622__2.call(this, this_sym13576, k);
      case 3:
        return G__13622__3.call(this, this_sym13576, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13622
}();
cljs.core.BlackNode.prototype.apply = function(this_sym13567, args13568) {
  var this__13582 = this;
  return this_sym13567.call.apply(this_sym13567, [this_sym13567].concat(args13568.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__13583 = this;
  return cljs.core.PersistentVector.fromArray([this__13583.key, this__13583.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__13584 = this;
  return this__13584.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__13585 = this;
  return this__13585.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__13586 = this;
  var node__13587 = this;
  return ins.balance_right(node__13587)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__13588 = this;
  var node__13589 = this;
  return new cljs.core.RedNode(this__13588.key, this__13588.val, this__13588.left, this__13588.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__13590 = this;
  var node__13591 = this;
  return cljs.core.balance_right_del.call(null, this__13590.key, this__13590.val, this__13590.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__13592 = this;
  var node__13593 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__13594 = this;
  var node__13595 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__13595, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__13596 = this;
  var node__13597 = this;
  return cljs.core.balance_left_del.call(null, this__13596.key, this__13596.val, del, this__13596.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__13598 = this;
  var node__13599 = this;
  return ins.balance_left(node__13599)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__13600 = this;
  var node__13601 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__13601, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__13623 = null;
  var G__13623__0 = function() {
    var this__13602 = this;
    var this__13604 = this;
    return cljs.core.pr_str.call(null, this__13604)
  };
  G__13623 = function() {
    switch(arguments.length) {
      case 0:
        return G__13623__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13623
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__13605 = this;
  var node__13606 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__13606, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__13607 = this;
  var node__13608 = this;
  return node__13608
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__13609 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__13610 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__13611 = this;
  return cljs.core.list.call(null, this__13611.key, this__13611.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__13612 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__13613 = this;
  return this__13613.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__13614 = this;
  return cljs.core.PersistentVector.fromArray([this__13614.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__13615 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__13615.key, this__13615.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13616 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__13617 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__13617.key, this__13617.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__13618 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__13619 = this;
  if(n === 0) {
    return this__13619.key
  }else {
    if(n === 1) {
      return this__13619.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__13620 = this;
  if(n === 0) {
    return this__13620.key
  }else {
    if(n === 1) {
      return this__13620.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__13621 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13626 = this;
  var h__2093__auto____13627 = this__13626.__hash;
  if(!(h__2093__auto____13627 == null)) {
    return h__2093__auto____13627
  }else {
    var h__2093__auto____13628 = cljs.core.hash_coll.call(null, coll);
    this__13626.__hash = h__2093__auto____13628;
    return h__2093__auto____13628
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__13629 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__13630 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__13631 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__13631.key, this__13631.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__13679 = null;
  var G__13679__2 = function(this_sym13632, k) {
    var this__13634 = this;
    var this_sym13632__13635 = this;
    var node__13636 = this_sym13632__13635;
    return node__13636.cljs$core$ILookup$_lookup$arity$2(node__13636, k)
  };
  var G__13679__3 = function(this_sym13633, k, not_found) {
    var this__13634 = this;
    var this_sym13633__13637 = this;
    var node__13638 = this_sym13633__13637;
    return node__13638.cljs$core$ILookup$_lookup$arity$3(node__13638, k, not_found)
  };
  G__13679 = function(this_sym13633, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13679__2.call(this, this_sym13633, k);
      case 3:
        return G__13679__3.call(this, this_sym13633, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13679
}();
cljs.core.RedNode.prototype.apply = function(this_sym13624, args13625) {
  var this__13639 = this;
  return this_sym13624.call.apply(this_sym13624, [this_sym13624].concat(args13625.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__13640 = this;
  return cljs.core.PersistentVector.fromArray([this__13640.key, this__13640.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__13641 = this;
  return this__13641.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__13642 = this;
  return this__13642.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__13643 = this;
  var node__13644 = this;
  return new cljs.core.RedNode(this__13643.key, this__13643.val, this__13643.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__13645 = this;
  var node__13646 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__13647 = this;
  var node__13648 = this;
  return new cljs.core.RedNode(this__13647.key, this__13647.val, this__13647.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__13649 = this;
  var node__13650 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__13651 = this;
  var node__13652 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__13652, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__13653 = this;
  var node__13654 = this;
  return new cljs.core.RedNode(this__13653.key, this__13653.val, del, this__13653.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__13655 = this;
  var node__13656 = this;
  return new cljs.core.RedNode(this__13655.key, this__13655.val, ins, this__13655.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__13657 = this;
  var node__13658 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__13657.left)) {
    return new cljs.core.RedNode(this__13657.key, this__13657.val, this__13657.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__13657.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__13657.right)) {
      return new cljs.core.RedNode(this__13657.right.key, this__13657.right.val, new cljs.core.BlackNode(this__13657.key, this__13657.val, this__13657.left, this__13657.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__13657.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__13658, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__13680 = null;
  var G__13680__0 = function() {
    var this__13659 = this;
    var this__13661 = this;
    return cljs.core.pr_str.call(null, this__13661)
  };
  G__13680 = function() {
    switch(arguments.length) {
      case 0:
        return G__13680__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13680
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__13662 = this;
  var node__13663 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__13662.right)) {
    return new cljs.core.RedNode(this__13662.key, this__13662.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__13662.left, null), this__13662.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__13662.left)) {
      return new cljs.core.RedNode(this__13662.left.key, this__13662.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__13662.left.left, null), new cljs.core.BlackNode(this__13662.key, this__13662.val, this__13662.left.right, this__13662.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__13663, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__13664 = this;
  var node__13665 = this;
  return new cljs.core.BlackNode(this__13664.key, this__13664.val, this__13664.left, this__13664.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__13666 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__13667 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__13668 = this;
  return cljs.core.list.call(null, this__13668.key, this__13668.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__13669 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__13670 = this;
  return this__13670.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__13671 = this;
  return cljs.core.PersistentVector.fromArray([this__13671.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__13672 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__13672.key, this__13672.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13673 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__13674 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__13674.key, this__13674.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__13675 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__13676 = this;
  if(n === 0) {
    return this__13676.key
  }else {
    if(n === 1) {
      return this__13676.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__13677 = this;
  if(n === 0) {
    return this__13677.key
  }else {
    if(n === 1) {
      return this__13677.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__13678 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__13684 = comp.call(null, k, tree.key);
    if(c__13684 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__13684 < 0) {
        var ins__13685 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__13685 == null)) {
          return tree.add_left(ins__13685)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__13686 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__13686 == null)) {
            return tree.add_right(ins__13686)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__13689 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__13689)) {
            return new cljs.core.RedNode(app__13689.key, app__13689.val, new cljs.core.RedNode(left.key, left.val, left.left, app__13689.left, null), new cljs.core.RedNode(right.key, right.val, app__13689.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__13689, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__13690 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__13690)) {
              return new cljs.core.RedNode(app__13690.key, app__13690.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__13690.left, null), new cljs.core.BlackNode(right.key, right.val, app__13690.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__13690, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__13696 = comp.call(null, k, tree.key);
    if(c__13696 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__13696 < 0) {
        var del__13697 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____13698 = !(del__13697 == null);
          if(or__3824__auto____13698) {
            return or__3824__auto____13698
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__13697, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__13697, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__13699 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____13700 = !(del__13699 == null);
            if(or__3824__auto____13700) {
              return or__3824__auto____13700
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__13699)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__13699, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__13703 = tree.key;
  var c__13704 = comp.call(null, k, tk__13703);
  if(c__13704 === 0) {
    return tree.replace(tk__13703, v, tree.left, tree.right)
  }else {
    if(c__13704 < 0) {
      return tree.replace(tk__13703, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__13703, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13707 = this;
  var h__2093__auto____13708 = this__13707.__hash;
  if(!(h__2093__auto____13708 == null)) {
    return h__2093__auto____13708
  }else {
    var h__2093__auto____13709 = cljs.core.hash_imap.call(null, coll);
    this__13707.__hash = h__2093__auto____13709;
    return h__2093__auto____13709
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13710 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13711 = this;
  var n__13712 = coll.entry_at(k);
  if(!(n__13712 == null)) {
    return n__13712.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__13713 = this;
  var found__13714 = [null];
  var t__13715 = cljs.core.tree_map_add.call(null, this__13713.comp, this__13713.tree, k, v, found__13714);
  if(t__13715 == null) {
    var found_node__13716 = cljs.core.nth.call(null, found__13714, 0);
    if(cljs.core._EQ_.call(null, v, found_node__13716.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__13713.comp, cljs.core.tree_map_replace.call(null, this__13713.comp, this__13713.tree, k, v), this__13713.cnt, this__13713.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__13713.comp, t__13715.blacken(), this__13713.cnt + 1, this__13713.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__13717 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__13751 = null;
  var G__13751__2 = function(this_sym13718, k) {
    var this__13720 = this;
    var this_sym13718__13721 = this;
    var coll__13722 = this_sym13718__13721;
    return coll__13722.cljs$core$ILookup$_lookup$arity$2(coll__13722, k)
  };
  var G__13751__3 = function(this_sym13719, k, not_found) {
    var this__13720 = this;
    var this_sym13719__13723 = this;
    var coll__13724 = this_sym13719__13723;
    return coll__13724.cljs$core$ILookup$_lookup$arity$3(coll__13724, k, not_found)
  };
  G__13751 = function(this_sym13719, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13751__2.call(this, this_sym13719, k);
      case 3:
        return G__13751__3.call(this, this_sym13719, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13751
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym13705, args13706) {
  var this__13725 = this;
  return this_sym13705.call.apply(this_sym13705, [this_sym13705].concat(args13706.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__13726 = this;
  if(!(this__13726.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__13726.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__13727 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__13728 = this;
  if(this__13728.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__13728.tree, false, this__13728.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__13729 = this;
  var this__13730 = this;
  return cljs.core.pr_str.call(null, this__13730)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__13731 = this;
  var coll__13732 = this;
  var t__13733 = this__13731.tree;
  while(true) {
    if(!(t__13733 == null)) {
      var c__13734 = this__13731.comp.call(null, k, t__13733.key);
      if(c__13734 === 0) {
        return t__13733
      }else {
        if(c__13734 < 0) {
          var G__13752 = t__13733.left;
          t__13733 = G__13752;
          continue
        }else {
          if("\ufdd0'else") {
            var G__13753 = t__13733.right;
            t__13733 = G__13753;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__13735 = this;
  if(this__13735.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__13735.tree, ascending_QMARK_, this__13735.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__13736 = this;
  if(this__13736.cnt > 0) {
    var stack__13737 = null;
    var t__13738 = this__13736.tree;
    while(true) {
      if(!(t__13738 == null)) {
        var c__13739 = this__13736.comp.call(null, k, t__13738.key);
        if(c__13739 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__13737, t__13738), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__13739 < 0) {
              var G__13754 = cljs.core.conj.call(null, stack__13737, t__13738);
              var G__13755 = t__13738.left;
              stack__13737 = G__13754;
              t__13738 = G__13755;
              continue
            }else {
              var G__13756 = stack__13737;
              var G__13757 = t__13738.right;
              stack__13737 = G__13756;
              t__13738 = G__13757;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__13739 > 0) {
                var G__13758 = cljs.core.conj.call(null, stack__13737, t__13738);
                var G__13759 = t__13738.right;
                stack__13737 = G__13758;
                t__13738 = G__13759;
                continue
              }else {
                var G__13760 = stack__13737;
                var G__13761 = t__13738.left;
                stack__13737 = G__13760;
                t__13738 = G__13761;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__13737 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__13737, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__13740 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__13741 = this;
  return this__13741.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13742 = this;
  if(this__13742.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__13742.tree, true, this__13742.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13743 = this;
  return this__13743.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13744 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13745 = this;
  return new cljs.core.PersistentTreeMap(this__13745.comp, this__13745.tree, this__13745.cnt, meta, this__13745.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13746 = this;
  return this__13746.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13747 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__13747.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__13748 = this;
  var found__13749 = [null];
  var t__13750 = cljs.core.tree_map_remove.call(null, this__13748.comp, this__13748.tree, k, found__13749);
  if(t__13750 == null) {
    if(cljs.core.nth.call(null, found__13749, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__13748.comp, null, 0, this__13748.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__13748.comp, t__13750.blacken(), this__13748.cnt - 1, this__13748.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__13764 = cljs.core.seq.call(null, keyvals);
    var out__13765 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__13764) {
        var G__13766 = cljs.core.nnext.call(null, in__13764);
        var G__13767 = cljs.core.assoc_BANG_.call(null, out__13765, cljs.core.first.call(null, in__13764), cljs.core.second.call(null, in__13764));
        in__13764 = G__13766;
        out__13765 = G__13767;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__13765)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__13768) {
    var keyvals = cljs.core.seq(arglist__13768);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__13769) {
    var keyvals = cljs.core.seq(arglist__13769);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__13773 = [];
    var obj__13774 = {};
    var kvs__13775 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__13775) {
        ks__13773.push(cljs.core.first.call(null, kvs__13775));
        obj__13774[cljs.core.first.call(null, kvs__13775)] = cljs.core.second.call(null, kvs__13775);
        var G__13776 = cljs.core.nnext.call(null, kvs__13775);
        kvs__13775 = G__13776;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__13773, obj__13774)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__13777) {
    var keyvals = cljs.core.seq(arglist__13777);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__13780 = cljs.core.seq.call(null, keyvals);
    var out__13781 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__13780) {
        var G__13782 = cljs.core.nnext.call(null, in__13780);
        var G__13783 = cljs.core.assoc.call(null, out__13781, cljs.core.first.call(null, in__13780), cljs.core.second.call(null, in__13780));
        in__13780 = G__13782;
        out__13781 = G__13783;
        continue
      }else {
        return out__13781
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__13784) {
    var keyvals = cljs.core.seq(arglist__13784);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__13787 = cljs.core.seq.call(null, keyvals);
    var out__13788 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__13787) {
        var G__13789 = cljs.core.nnext.call(null, in__13787);
        var G__13790 = cljs.core.assoc.call(null, out__13788, cljs.core.first.call(null, in__13787), cljs.core.second.call(null, in__13787));
        in__13787 = G__13789;
        out__13788 = G__13790;
        continue
      }else {
        return out__13788
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__13791) {
    var comparator = cljs.core.first(arglist__13791);
    var keyvals = cljs.core.rest(arglist__13791);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__13792_SHARP_, p2__13793_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____13795 = p1__13792_SHARP_;
          if(cljs.core.truth_(or__3824__auto____13795)) {
            return or__3824__auto____13795
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__13793_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__13796) {
    var maps = cljs.core.seq(arglist__13796);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__13804 = function(m, e) {
        var k__13802 = cljs.core.first.call(null, e);
        var v__13803 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__13802)) {
          return cljs.core.assoc.call(null, m, k__13802, f.call(null, cljs.core._lookup.call(null, m, k__13802, null), v__13803))
        }else {
          return cljs.core.assoc.call(null, m, k__13802, v__13803)
        }
      };
      var merge2__13806 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__13804, function() {
          var or__3824__auto____13805 = m1;
          if(cljs.core.truth_(or__3824__auto____13805)) {
            return or__3824__auto____13805
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__13806, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__13807) {
    var f = cljs.core.first(arglist__13807);
    var maps = cljs.core.rest(arglist__13807);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__13812 = cljs.core.ObjMap.EMPTY;
  var keys__13813 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__13813) {
      var key__13814 = cljs.core.first.call(null, keys__13813);
      var entry__13815 = cljs.core._lookup.call(null, map, key__13814, "\ufdd0'cljs.core/not-found");
      var G__13816 = cljs.core.not_EQ_.call(null, entry__13815, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__13812, key__13814, entry__13815) : ret__13812;
      var G__13817 = cljs.core.next.call(null, keys__13813);
      ret__13812 = G__13816;
      keys__13813 = G__13817;
      continue
    }else {
      return ret__13812
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__13821 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__13821.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13822 = this;
  var h__2093__auto____13823 = this__13822.__hash;
  if(!(h__2093__auto____13823 == null)) {
    return h__2093__auto____13823
  }else {
    var h__2093__auto____13824 = cljs.core.hash_iset.call(null, coll);
    this__13822.__hash = h__2093__auto____13824;
    return h__2093__auto____13824
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__13825 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__13826 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__13826.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__13847 = null;
  var G__13847__2 = function(this_sym13827, k) {
    var this__13829 = this;
    var this_sym13827__13830 = this;
    var coll__13831 = this_sym13827__13830;
    return coll__13831.cljs$core$ILookup$_lookup$arity$2(coll__13831, k)
  };
  var G__13847__3 = function(this_sym13828, k, not_found) {
    var this__13829 = this;
    var this_sym13828__13832 = this;
    var coll__13833 = this_sym13828__13832;
    return coll__13833.cljs$core$ILookup$_lookup$arity$3(coll__13833, k, not_found)
  };
  G__13847 = function(this_sym13828, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13847__2.call(this, this_sym13828, k);
      case 3:
        return G__13847__3.call(this, this_sym13828, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13847
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym13819, args13820) {
  var this__13834 = this;
  return this_sym13819.call.apply(this_sym13819, [this_sym13819].concat(args13820.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13835 = this;
  return new cljs.core.PersistentHashSet(this__13835.meta, cljs.core.assoc.call(null, this__13835.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__13836 = this;
  var this__13837 = this;
  return cljs.core.pr_str.call(null, this__13837)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13838 = this;
  return cljs.core.keys.call(null, this__13838.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__13839 = this;
  return new cljs.core.PersistentHashSet(this__13839.meta, cljs.core.dissoc.call(null, this__13839.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13840 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13841 = this;
  var and__3822__auto____13842 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____13842) {
    var and__3822__auto____13843 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____13843) {
      return cljs.core.every_QMARK_.call(null, function(p1__13818_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__13818_SHARP_)
      }, other)
    }else {
      return and__3822__auto____13843
    }
  }else {
    return and__3822__auto____13842
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13844 = this;
  return new cljs.core.PersistentHashSet(meta, this__13844.hash_map, this__13844.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13845 = this;
  return this__13845.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13846 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__13846.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__13848 = cljs.core.count.call(null, items);
  var i__13849 = 0;
  var out__13850 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__13849 < len__13848) {
      var G__13851 = i__13849 + 1;
      var G__13852 = cljs.core.conj_BANG_.call(null, out__13850, items[i__13849]);
      i__13849 = G__13851;
      out__13850 = G__13852;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__13850)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__13870 = null;
  var G__13870__2 = function(this_sym13856, k) {
    var this__13858 = this;
    var this_sym13856__13859 = this;
    var tcoll__13860 = this_sym13856__13859;
    if(cljs.core._lookup.call(null, this__13858.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__13870__3 = function(this_sym13857, k, not_found) {
    var this__13858 = this;
    var this_sym13857__13861 = this;
    var tcoll__13862 = this_sym13857__13861;
    if(cljs.core._lookup.call(null, this__13858.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__13870 = function(this_sym13857, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13870__2.call(this, this_sym13857, k);
      case 3:
        return G__13870__3.call(this, this_sym13857, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13870
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym13854, args13855) {
  var this__13863 = this;
  return this_sym13854.call.apply(this_sym13854, [this_sym13854].concat(args13855.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__13864 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__13865 = this;
  if(cljs.core._lookup.call(null, this__13865.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__13866 = this;
  return cljs.core.count.call(null, this__13866.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__13867 = this;
  this__13867.transient_map = cljs.core.dissoc_BANG_.call(null, this__13867.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__13868 = this;
  this__13868.transient_map = cljs.core.assoc_BANG_.call(null, this__13868.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__13869 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__13869.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13873 = this;
  var h__2093__auto____13874 = this__13873.__hash;
  if(!(h__2093__auto____13874 == null)) {
    return h__2093__auto____13874
  }else {
    var h__2093__auto____13875 = cljs.core.hash_iset.call(null, coll);
    this__13873.__hash = h__2093__auto____13875;
    return h__2093__auto____13875
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__13876 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__13877 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__13877.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__13903 = null;
  var G__13903__2 = function(this_sym13878, k) {
    var this__13880 = this;
    var this_sym13878__13881 = this;
    var coll__13882 = this_sym13878__13881;
    return coll__13882.cljs$core$ILookup$_lookup$arity$2(coll__13882, k)
  };
  var G__13903__3 = function(this_sym13879, k, not_found) {
    var this__13880 = this;
    var this_sym13879__13883 = this;
    var coll__13884 = this_sym13879__13883;
    return coll__13884.cljs$core$ILookup$_lookup$arity$3(coll__13884, k, not_found)
  };
  G__13903 = function(this_sym13879, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13903__2.call(this, this_sym13879, k);
      case 3:
        return G__13903__3.call(this, this_sym13879, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13903
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym13871, args13872) {
  var this__13885 = this;
  return this_sym13871.call.apply(this_sym13871, [this_sym13871].concat(args13872.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13886 = this;
  return new cljs.core.PersistentTreeSet(this__13886.meta, cljs.core.assoc.call(null, this__13886.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__13887 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__13887.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__13888 = this;
  var this__13889 = this;
  return cljs.core.pr_str.call(null, this__13889)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__13890 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__13890.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__13891 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__13891.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__13892 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__13893 = this;
  return cljs.core._comparator.call(null, this__13893.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13894 = this;
  return cljs.core.keys.call(null, this__13894.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__13895 = this;
  return new cljs.core.PersistentTreeSet(this__13895.meta, cljs.core.dissoc.call(null, this__13895.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13896 = this;
  return cljs.core.count.call(null, this__13896.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13897 = this;
  var and__3822__auto____13898 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____13898) {
    var and__3822__auto____13899 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____13899) {
      return cljs.core.every_QMARK_.call(null, function(p1__13853_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__13853_SHARP_)
      }, other)
    }else {
      return and__3822__auto____13899
    }
  }else {
    return and__3822__auto____13898
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13900 = this;
  return new cljs.core.PersistentTreeSet(meta, this__13900.tree_map, this__13900.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13901 = this;
  return this__13901.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13902 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__13902.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__13908__delegate = function(keys) {
      var in__13906 = cljs.core.seq.call(null, keys);
      var out__13907 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__13906)) {
          var G__13909 = cljs.core.next.call(null, in__13906);
          var G__13910 = cljs.core.conj_BANG_.call(null, out__13907, cljs.core.first.call(null, in__13906));
          in__13906 = G__13909;
          out__13907 = G__13910;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__13907)
        }
        break
      }
    };
    var G__13908 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__13908__delegate.call(this, keys)
    };
    G__13908.cljs$lang$maxFixedArity = 0;
    G__13908.cljs$lang$applyTo = function(arglist__13911) {
      var keys = cljs.core.seq(arglist__13911);
      return G__13908__delegate(keys)
    };
    G__13908.cljs$lang$arity$variadic = G__13908__delegate;
    return G__13908
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__13912) {
    var keys = cljs.core.seq(arglist__13912);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__13914) {
    var comparator = cljs.core.first(arglist__13914);
    var keys = cljs.core.rest(arglist__13914);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__13920 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____13921 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____13921)) {
        var e__13922 = temp__3971__auto____13921;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__13922))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__13920, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__13913_SHARP_) {
      var temp__3971__auto____13923 = cljs.core.find.call(null, smap, p1__13913_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____13923)) {
        var e__13924 = temp__3971__auto____13923;
        return cljs.core.second.call(null, e__13924)
      }else {
        return p1__13913_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__13954 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__13947, seen) {
        while(true) {
          var vec__13948__13949 = p__13947;
          var f__13950 = cljs.core.nth.call(null, vec__13948__13949, 0, null);
          var xs__13951 = vec__13948__13949;
          var temp__3974__auto____13952 = cljs.core.seq.call(null, xs__13951);
          if(temp__3974__auto____13952) {
            var s__13953 = temp__3974__auto____13952;
            if(cljs.core.contains_QMARK_.call(null, seen, f__13950)) {
              var G__13955 = cljs.core.rest.call(null, s__13953);
              var G__13956 = seen;
              p__13947 = G__13955;
              seen = G__13956;
              continue
            }else {
              return cljs.core.cons.call(null, f__13950, step.call(null, cljs.core.rest.call(null, s__13953), cljs.core.conj.call(null, seen, f__13950)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__13954.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__13959 = cljs.core.PersistentVector.EMPTY;
  var s__13960 = s;
  while(true) {
    if(cljs.core.next.call(null, s__13960)) {
      var G__13961 = cljs.core.conj.call(null, ret__13959, cljs.core.first.call(null, s__13960));
      var G__13962 = cljs.core.next.call(null, s__13960);
      ret__13959 = G__13961;
      s__13960 = G__13962;
      continue
    }else {
      return cljs.core.seq.call(null, ret__13959)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____13965 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____13965) {
        return or__3824__auto____13965
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__13966 = x.lastIndexOf("/");
      if(i__13966 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__13966 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____13969 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____13969) {
      return or__3824__auto____13969
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__13970 = x.lastIndexOf("/");
    if(i__13970 > -1) {
      return cljs.core.subs.call(null, x, 2, i__13970)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__13977 = cljs.core.ObjMap.EMPTY;
  var ks__13978 = cljs.core.seq.call(null, keys);
  var vs__13979 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____13980 = ks__13978;
      if(and__3822__auto____13980) {
        return vs__13979
      }else {
        return and__3822__auto____13980
      }
    }()) {
      var G__13981 = cljs.core.assoc.call(null, map__13977, cljs.core.first.call(null, ks__13978), cljs.core.first.call(null, vs__13979));
      var G__13982 = cljs.core.next.call(null, ks__13978);
      var G__13983 = cljs.core.next.call(null, vs__13979);
      map__13977 = G__13981;
      ks__13978 = G__13982;
      vs__13979 = G__13983;
      continue
    }else {
      return map__13977
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__13986__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__13971_SHARP_, p2__13972_SHARP_) {
        return max_key.call(null, k, p1__13971_SHARP_, p2__13972_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__13986 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13986__delegate.call(this, k, x, y, more)
    };
    G__13986.cljs$lang$maxFixedArity = 3;
    G__13986.cljs$lang$applyTo = function(arglist__13987) {
      var k = cljs.core.first(arglist__13987);
      var x = cljs.core.first(cljs.core.next(arglist__13987));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13987)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13987)));
      return G__13986__delegate(k, x, y, more)
    };
    G__13986.cljs$lang$arity$variadic = G__13986__delegate;
    return G__13986
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__13988__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__13984_SHARP_, p2__13985_SHARP_) {
        return min_key.call(null, k, p1__13984_SHARP_, p2__13985_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__13988 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13988__delegate.call(this, k, x, y, more)
    };
    G__13988.cljs$lang$maxFixedArity = 3;
    G__13988.cljs$lang$applyTo = function(arglist__13989) {
      var k = cljs.core.first(arglist__13989);
      var x = cljs.core.first(cljs.core.next(arglist__13989));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13989)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13989)));
      return G__13988__delegate(k, x, y, more)
    };
    G__13988.cljs$lang$arity$variadic = G__13988__delegate;
    return G__13988
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____13992 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____13992) {
        var s__13993 = temp__3974__auto____13992;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__13993), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__13993)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____13996 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____13996) {
      var s__13997 = temp__3974__auto____13996;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__13997)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__13997), take_while.call(null, pred, cljs.core.rest.call(null, s__13997)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__13999 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__13999.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__14011 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____14012 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____14012)) {
        var vec__14013__14014 = temp__3974__auto____14012;
        var e__14015 = cljs.core.nth.call(null, vec__14013__14014, 0, null);
        var s__14016 = vec__14013__14014;
        if(cljs.core.truth_(include__14011.call(null, e__14015))) {
          return s__14016
        }else {
          return cljs.core.next.call(null, s__14016)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__14011, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____14017 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____14017)) {
      var vec__14018__14019 = temp__3974__auto____14017;
      var e__14020 = cljs.core.nth.call(null, vec__14018__14019, 0, null);
      var s__14021 = vec__14018__14019;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__14020)) ? s__14021 : cljs.core.next.call(null, s__14021))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__14033 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____14034 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____14034)) {
        var vec__14035__14036 = temp__3974__auto____14034;
        var e__14037 = cljs.core.nth.call(null, vec__14035__14036, 0, null);
        var s__14038 = vec__14035__14036;
        if(cljs.core.truth_(include__14033.call(null, e__14037))) {
          return s__14038
        }else {
          return cljs.core.next.call(null, s__14038)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__14033, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____14039 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____14039)) {
      var vec__14040__14041 = temp__3974__auto____14039;
      var e__14042 = cljs.core.nth.call(null, vec__14040__14041, 0, null);
      var s__14043 = vec__14040__14041;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__14042)) ? s__14043 : cljs.core.next.call(null, s__14043))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__14044 = this;
  var h__2093__auto____14045 = this__14044.__hash;
  if(!(h__2093__auto____14045 == null)) {
    return h__2093__auto____14045
  }else {
    var h__2093__auto____14046 = cljs.core.hash_coll.call(null, rng);
    this__14044.__hash = h__2093__auto____14046;
    return h__2093__auto____14046
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__14047 = this;
  if(this__14047.step > 0) {
    if(this__14047.start + this__14047.step < this__14047.end) {
      return new cljs.core.Range(this__14047.meta, this__14047.start + this__14047.step, this__14047.end, this__14047.step, null)
    }else {
      return null
    }
  }else {
    if(this__14047.start + this__14047.step > this__14047.end) {
      return new cljs.core.Range(this__14047.meta, this__14047.start + this__14047.step, this__14047.end, this__14047.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__14048 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__14049 = this;
  var this__14050 = this;
  return cljs.core.pr_str.call(null, this__14050)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__14051 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__14052 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__14053 = this;
  if(this__14053.step > 0) {
    if(this__14053.start < this__14053.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__14053.start > this__14053.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__14054 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__14054.end - this__14054.start) / this__14054.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__14055 = this;
  return this__14055.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__14056 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__14056.meta, this__14056.start + this__14056.step, this__14056.end, this__14056.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__14057 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__14058 = this;
  return new cljs.core.Range(meta, this__14058.start, this__14058.end, this__14058.step, this__14058.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__14059 = this;
  return this__14059.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__14060 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__14060.start + n * this__14060.step
  }else {
    if(function() {
      var and__3822__auto____14061 = this__14060.start > this__14060.end;
      if(and__3822__auto____14061) {
        return this__14060.step === 0
      }else {
        return and__3822__auto____14061
      }
    }()) {
      return this__14060.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__14062 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__14062.start + n * this__14062.step
  }else {
    if(function() {
      var and__3822__auto____14063 = this__14062.start > this__14062.end;
      if(and__3822__auto____14063) {
        return this__14062.step === 0
      }else {
        return and__3822__auto____14063
      }
    }()) {
      return this__14062.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__14064 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__14064.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____14067 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____14067) {
      var s__14068 = temp__3974__auto____14067;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__14068), take_nth.call(null, n, cljs.core.drop.call(null, n, s__14068)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____14075 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____14075) {
      var s__14076 = temp__3974__auto____14075;
      var fst__14077 = cljs.core.first.call(null, s__14076);
      var fv__14078 = f.call(null, fst__14077);
      var run__14079 = cljs.core.cons.call(null, fst__14077, cljs.core.take_while.call(null, function(p1__14069_SHARP_) {
        return cljs.core._EQ_.call(null, fv__14078, f.call(null, p1__14069_SHARP_))
      }, cljs.core.next.call(null, s__14076)));
      return cljs.core.cons.call(null, run__14079, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__14079), s__14076))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____14094 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____14094) {
        var s__14095 = temp__3971__auto____14094;
        return reductions.call(null, f, cljs.core.first.call(null, s__14095), cljs.core.rest.call(null, s__14095))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____14096 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____14096) {
        var s__14097 = temp__3974__auto____14096;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__14097)), cljs.core.rest.call(null, s__14097))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__14100 = null;
      var G__14100__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__14100__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__14100__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__14100__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__14100__4 = function() {
        var G__14101__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__14101 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14101__delegate.call(this, x, y, z, args)
        };
        G__14101.cljs$lang$maxFixedArity = 3;
        G__14101.cljs$lang$applyTo = function(arglist__14102) {
          var x = cljs.core.first(arglist__14102);
          var y = cljs.core.first(cljs.core.next(arglist__14102));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14102)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__14102)));
          return G__14101__delegate(x, y, z, args)
        };
        G__14101.cljs$lang$arity$variadic = G__14101__delegate;
        return G__14101
      }();
      G__14100 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14100__0.call(this);
          case 1:
            return G__14100__1.call(this, x);
          case 2:
            return G__14100__2.call(this, x, y);
          case 3:
            return G__14100__3.call(this, x, y, z);
          default:
            return G__14100__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__14100.cljs$lang$maxFixedArity = 3;
      G__14100.cljs$lang$applyTo = G__14100__4.cljs$lang$applyTo;
      return G__14100
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__14103 = null;
      var G__14103__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__14103__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__14103__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__14103__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__14103__4 = function() {
        var G__14104__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__14104 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14104__delegate.call(this, x, y, z, args)
        };
        G__14104.cljs$lang$maxFixedArity = 3;
        G__14104.cljs$lang$applyTo = function(arglist__14105) {
          var x = cljs.core.first(arglist__14105);
          var y = cljs.core.first(cljs.core.next(arglist__14105));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14105)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__14105)));
          return G__14104__delegate(x, y, z, args)
        };
        G__14104.cljs$lang$arity$variadic = G__14104__delegate;
        return G__14104
      }();
      G__14103 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14103__0.call(this);
          case 1:
            return G__14103__1.call(this, x);
          case 2:
            return G__14103__2.call(this, x, y);
          case 3:
            return G__14103__3.call(this, x, y, z);
          default:
            return G__14103__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__14103.cljs$lang$maxFixedArity = 3;
      G__14103.cljs$lang$applyTo = G__14103__4.cljs$lang$applyTo;
      return G__14103
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__14106 = null;
      var G__14106__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__14106__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__14106__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__14106__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__14106__4 = function() {
        var G__14107__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__14107 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14107__delegate.call(this, x, y, z, args)
        };
        G__14107.cljs$lang$maxFixedArity = 3;
        G__14107.cljs$lang$applyTo = function(arglist__14108) {
          var x = cljs.core.first(arglist__14108);
          var y = cljs.core.first(cljs.core.next(arglist__14108));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14108)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__14108)));
          return G__14107__delegate(x, y, z, args)
        };
        G__14107.cljs$lang$arity$variadic = G__14107__delegate;
        return G__14107
      }();
      G__14106 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14106__0.call(this);
          case 1:
            return G__14106__1.call(this, x);
          case 2:
            return G__14106__2.call(this, x, y);
          case 3:
            return G__14106__3.call(this, x, y, z);
          default:
            return G__14106__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__14106.cljs$lang$maxFixedArity = 3;
      G__14106.cljs$lang$applyTo = G__14106__4.cljs$lang$applyTo;
      return G__14106
    }()
  };
  var juxt__4 = function() {
    var G__14109__delegate = function(f, g, h, fs) {
      var fs__14099 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__14110 = null;
        var G__14110__0 = function() {
          return cljs.core.reduce.call(null, function(p1__14080_SHARP_, p2__14081_SHARP_) {
            return cljs.core.conj.call(null, p1__14080_SHARP_, p2__14081_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__14099)
        };
        var G__14110__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__14082_SHARP_, p2__14083_SHARP_) {
            return cljs.core.conj.call(null, p1__14082_SHARP_, p2__14083_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__14099)
        };
        var G__14110__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__14084_SHARP_, p2__14085_SHARP_) {
            return cljs.core.conj.call(null, p1__14084_SHARP_, p2__14085_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__14099)
        };
        var G__14110__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__14086_SHARP_, p2__14087_SHARP_) {
            return cljs.core.conj.call(null, p1__14086_SHARP_, p2__14087_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__14099)
        };
        var G__14110__4 = function() {
          var G__14111__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__14088_SHARP_, p2__14089_SHARP_) {
              return cljs.core.conj.call(null, p1__14088_SHARP_, cljs.core.apply.call(null, p2__14089_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__14099)
          };
          var G__14111 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__14111__delegate.call(this, x, y, z, args)
          };
          G__14111.cljs$lang$maxFixedArity = 3;
          G__14111.cljs$lang$applyTo = function(arglist__14112) {
            var x = cljs.core.first(arglist__14112);
            var y = cljs.core.first(cljs.core.next(arglist__14112));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14112)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__14112)));
            return G__14111__delegate(x, y, z, args)
          };
          G__14111.cljs$lang$arity$variadic = G__14111__delegate;
          return G__14111
        }();
        G__14110 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__14110__0.call(this);
            case 1:
              return G__14110__1.call(this, x);
            case 2:
              return G__14110__2.call(this, x, y);
            case 3:
              return G__14110__3.call(this, x, y, z);
            default:
              return G__14110__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__14110.cljs$lang$maxFixedArity = 3;
        G__14110.cljs$lang$applyTo = G__14110__4.cljs$lang$applyTo;
        return G__14110
      }()
    };
    var G__14109 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14109__delegate.call(this, f, g, h, fs)
    };
    G__14109.cljs$lang$maxFixedArity = 3;
    G__14109.cljs$lang$applyTo = function(arglist__14113) {
      var f = cljs.core.first(arglist__14113);
      var g = cljs.core.first(cljs.core.next(arglist__14113));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14113)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__14113)));
      return G__14109__delegate(f, g, h, fs)
    };
    G__14109.cljs$lang$arity$variadic = G__14109__delegate;
    return G__14109
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__14116 = cljs.core.next.call(null, coll);
        coll = G__14116;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____14115 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____14115) {
          return n > 0
        }else {
          return and__3822__auto____14115
        }
      }())) {
        var G__14117 = n - 1;
        var G__14118 = cljs.core.next.call(null, coll);
        n = G__14117;
        coll = G__14118;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__14120 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__14120), s)) {
    if(cljs.core.count.call(null, matches__14120) === 1) {
      return cljs.core.first.call(null, matches__14120)
    }else {
      return cljs.core.vec.call(null, matches__14120)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__14122 = re.exec(s);
  if(matches__14122 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__14122) === 1) {
      return cljs.core.first.call(null, matches__14122)
    }else {
      return cljs.core.vec.call(null, matches__14122)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__14127 = cljs.core.re_find.call(null, re, s);
  var match_idx__14128 = s.search(re);
  var match_str__14129 = cljs.core.coll_QMARK_.call(null, match_data__14127) ? cljs.core.first.call(null, match_data__14127) : match_data__14127;
  var post_match__14130 = cljs.core.subs.call(null, s, match_idx__14128 + cljs.core.count.call(null, match_str__14129));
  if(cljs.core.truth_(match_data__14127)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__14127, re_seq.call(null, re, post_match__14130))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__14137__14138 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___14139 = cljs.core.nth.call(null, vec__14137__14138, 0, null);
  var flags__14140 = cljs.core.nth.call(null, vec__14137__14138, 1, null);
  var pattern__14141 = cljs.core.nth.call(null, vec__14137__14138, 2, null);
  return new RegExp(pattern__14141, flags__14140)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__14131_SHARP_) {
    return print_one.call(null, p1__14131_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____14151 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____14151)) {
            var and__3822__auto____14155 = function() {
              var G__14152__14153 = obj;
              if(G__14152__14153) {
                if(function() {
                  var or__3824__auto____14154 = G__14152__14153.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____14154) {
                    return or__3824__auto____14154
                  }else {
                    return G__14152__14153.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__14152__14153.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__14152__14153)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__14152__14153)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____14155)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____14155
            }
          }else {
            return and__3822__auto____14151
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____14156 = !(obj == null);
          if(and__3822__auto____14156) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____14156
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__14157__14158 = obj;
          if(G__14157__14158) {
            if(function() {
              var or__3824__auto____14159 = G__14157__14158.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____14159) {
                return or__3824__auto____14159
              }else {
                return G__14157__14158.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__14157__14158.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__14157__14158)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__14157__14158)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__14179 = new goog.string.StringBuffer;
  var G__14180__14181 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__14180__14181) {
    var string__14182 = cljs.core.first.call(null, G__14180__14181);
    var G__14180__14183 = G__14180__14181;
    while(true) {
      sb__14179.append(string__14182);
      var temp__3974__auto____14184 = cljs.core.next.call(null, G__14180__14183);
      if(temp__3974__auto____14184) {
        var G__14180__14185 = temp__3974__auto____14184;
        var G__14198 = cljs.core.first.call(null, G__14180__14185);
        var G__14199 = G__14180__14185;
        string__14182 = G__14198;
        G__14180__14183 = G__14199;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__14186__14187 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__14186__14187) {
    var obj__14188 = cljs.core.first.call(null, G__14186__14187);
    var G__14186__14189 = G__14186__14187;
    while(true) {
      sb__14179.append(" ");
      var G__14190__14191 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__14188, opts));
      if(G__14190__14191) {
        var string__14192 = cljs.core.first.call(null, G__14190__14191);
        var G__14190__14193 = G__14190__14191;
        while(true) {
          sb__14179.append(string__14192);
          var temp__3974__auto____14194 = cljs.core.next.call(null, G__14190__14193);
          if(temp__3974__auto____14194) {
            var G__14190__14195 = temp__3974__auto____14194;
            var G__14200 = cljs.core.first.call(null, G__14190__14195);
            var G__14201 = G__14190__14195;
            string__14192 = G__14200;
            G__14190__14193 = G__14201;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____14196 = cljs.core.next.call(null, G__14186__14189);
      if(temp__3974__auto____14196) {
        var G__14186__14197 = temp__3974__auto____14196;
        var G__14202 = cljs.core.first.call(null, G__14186__14197);
        var G__14203 = G__14186__14197;
        obj__14188 = G__14202;
        G__14186__14189 = G__14203;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__14179
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__14205 = cljs.core.pr_sb.call(null, objs, opts);
  sb__14205.append("\n");
  return[cljs.core.str(sb__14205)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__14224__14225 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__14224__14225) {
    var string__14226 = cljs.core.first.call(null, G__14224__14225);
    var G__14224__14227 = G__14224__14225;
    while(true) {
      cljs.core.string_print.call(null, string__14226);
      var temp__3974__auto____14228 = cljs.core.next.call(null, G__14224__14227);
      if(temp__3974__auto____14228) {
        var G__14224__14229 = temp__3974__auto____14228;
        var G__14242 = cljs.core.first.call(null, G__14224__14229);
        var G__14243 = G__14224__14229;
        string__14226 = G__14242;
        G__14224__14227 = G__14243;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__14230__14231 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__14230__14231) {
    var obj__14232 = cljs.core.first.call(null, G__14230__14231);
    var G__14230__14233 = G__14230__14231;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__14234__14235 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__14232, opts));
      if(G__14234__14235) {
        var string__14236 = cljs.core.first.call(null, G__14234__14235);
        var G__14234__14237 = G__14234__14235;
        while(true) {
          cljs.core.string_print.call(null, string__14236);
          var temp__3974__auto____14238 = cljs.core.next.call(null, G__14234__14237);
          if(temp__3974__auto____14238) {
            var G__14234__14239 = temp__3974__auto____14238;
            var G__14244 = cljs.core.first.call(null, G__14234__14239);
            var G__14245 = G__14234__14239;
            string__14236 = G__14244;
            G__14234__14237 = G__14245;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____14240 = cljs.core.next.call(null, G__14230__14233);
      if(temp__3974__auto____14240) {
        var G__14230__14241 = temp__3974__auto____14240;
        var G__14246 = cljs.core.first.call(null, G__14230__14241);
        var G__14247 = G__14230__14241;
        obj__14232 = G__14246;
        G__14230__14233 = G__14247;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__14248) {
    var objs = cljs.core.seq(arglist__14248);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__14249) {
    var objs = cljs.core.seq(arglist__14249);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__14250) {
    var objs = cljs.core.seq(arglist__14250);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__14251) {
    var objs = cljs.core.seq(arglist__14251);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__14252) {
    var objs = cljs.core.seq(arglist__14252);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__14253) {
    var objs = cljs.core.seq(arglist__14253);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__14254) {
    var objs = cljs.core.seq(arglist__14254);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__14255) {
    var objs = cljs.core.seq(arglist__14255);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__14256) {
    var fmt = cljs.core.first(arglist__14256);
    var args = cljs.core.rest(arglist__14256);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__14257 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__14257, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__14258 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__14258, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__14259 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__14259, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____14260 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____14260)) {
        var nspc__14261 = temp__3974__auto____14260;
        return[cljs.core.str(nspc__14261), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____14262 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____14262)) {
          var nspc__14263 = temp__3974__auto____14262;
          return[cljs.core.str(nspc__14263), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__14264 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__14264, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__14266 = function(n, len) {
    var ns__14265 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__14265) < len) {
        var G__14268 = [cljs.core.str("0"), cljs.core.str(ns__14265)].join("");
        ns__14265 = G__14268;
        continue
      }else {
        return ns__14265
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__14266.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__14266.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__14266.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__14266.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__14266.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__14266.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__14267 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__14267, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__14269 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__14270 = this;
  var G__14271__14272 = cljs.core.seq.call(null, this__14270.watches);
  if(G__14271__14272) {
    var G__14274__14276 = cljs.core.first.call(null, G__14271__14272);
    var vec__14275__14277 = G__14274__14276;
    var key__14278 = cljs.core.nth.call(null, vec__14275__14277, 0, null);
    var f__14279 = cljs.core.nth.call(null, vec__14275__14277, 1, null);
    var G__14271__14280 = G__14271__14272;
    var G__14274__14281 = G__14274__14276;
    var G__14271__14282 = G__14271__14280;
    while(true) {
      var vec__14283__14284 = G__14274__14281;
      var key__14285 = cljs.core.nth.call(null, vec__14283__14284, 0, null);
      var f__14286 = cljs.core.nth.call(null, vec__14283__14284, 1, null);
      var G__14271__14287 = G__14271__14282;
      f__14286.call(null, key__14285, this$, oldval, newval);
      var temp__3974__auto____14288 = cljs.core.next.call(null, G__14271__14287);
      if(temp__3974__auto____14288) {
        var G__14271__14289 = temp__3974__auto____14288;
        var G__14296 = cljs.core.first.call(null, G__14271__14289);
        var G__14297 = G__14271__14289;
        G__14274__14281 = G__14296;
        G__14271__14282 = G__14297;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__14290 = this;
  return this$.watches = cljs.core.assoc.call(null, this__14290.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__14291 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__14291.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__14292 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__14292.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__14293 = this;
  return this__14293.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__14294 = this;
  return this__14294.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__14295 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__14309__delegate = function(x, p__14298) {
      var map__14304__14305 = p__14298;
      var map__14304__14306 = cljs.core.seq_QMARK_.call(null, map__14304__14305) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14304__14305) : map__14304__14305;
      var validator__14307 = cljs.core._lookup.call(null, map__14304__14306, "\ufdd0'validator", null);
      var meta__14308 = cljs.core._lookup.call(null, map__14304__14306, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__14308, validator__14307, null)
    };
    var G__14309 = function(x, var_args) {
      var p__14298 = null;
      if(goog.isDef(var_args)) {
        p__14298 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__14309__delegate.call(this, x, p__14298)
    };
    G__14309.cljs$lang$maxFixedArity = 1;
    G__14309.cljs$lang$applyTo = function(arglist__14310) {
      var x = cljs.core.first(arglist__14310);
      var p__14298 = cljs.core.rest(arglist__14310);
      return G__14309__delegate(x, p__14298)
    };
    G__14309.cljs$lang$arity$variadic = G__14309__delegate;
    return G__14309
  }();
  atom = function(x, var_args) {
    var p__14298 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____14314 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____14314)) {
    var validate__14315 = temp__3974__auto____14314;
    if(cljs.core.truth_(validate__14315.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440))))].join(""));
    }
  }else {
  }
  var old_value__14316 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__14316, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__14317__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__14317 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__14317__delegate.call(this, a, f, x, y, z, more)
    };
    G__14317.cljs$lang$maxFixedArity = 5;
    G__14317.cljs$lang$applyTo = function(arglist__14318) {
      var a = cljs.core.first(arglist__14318);
      var f = cljs.core.first(cljs.core.next(arglist__14318));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14318)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__14318))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__14318)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__14318)))));
      return G__14317__delegate(a, f, x, y, z, more)
    };
    G__14317.cljs$lang$arity$variadic = G__14317__delegate;
    return G__14317
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__14319) {
    var iref = cljs.core.first(arglist__14319);
    var f = cljs.core.first(cljs.core.next(arglist__14319));
    var args = cljs.core.rest(cljs.core.next(arglist__14319));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__14320 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__14320.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__14321 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__14321.state, function(p__14322) {
    var map__14323__14324 = p__14322;
    var map__14323__14325 = cljs.core.seq_QMARK_.call(null, map__14323__14324) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14323__14324) : map__14323__14324;
    var curr_state__14326 = map__14323__14325;
    var done__14327 = cljs.core._lookup.call(null, map__14323__14325, "\ufdd0'done", null);
    if(cljs.core.truth_(done__14327)) {
      return curr_state__14326
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__14321.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__14348__14349 = options;
    var map__14348__14350 = cljs.core.seq_QMARK_.call(null, map__14348__14349) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14348__14349) : map__14348__14349;
    var keywordize_keys__14351 = cljs.core._lookup.call(null, map__14348__14350, "\ufdd0'keywordize-keys", null);
    var keyfn__14352 = cljs.core.truth_(keywordize_keys__14351) ? cljs.core.keyword : cljs.core.str;
    var f__14367 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2363__auto____14366 = function iter__14360(s__14361) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__14361__14364 = s__14361;
                    while(true) {
                      if(cljs.core.seq.call(null, s__14361__14364)) {
                        var k__14365 = cljs.core.first.call(null, s__14361__14364);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__14352.call(null, k__14365), thisfn.call(null, x[k__14365])], true), iter__14360.call(null, cljs.core.rest.call(null, s__14361__14364)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2363__auto____14366.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__14367.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__14368) {
    var x = cljs.core.first(arglist__14368);
    var options = cljs.core.rest(arglist__14368);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__14373 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__14377__delegate = function(args) {
      var temp__3971__auto____14374 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__14373), args, null);
      if(cljs.core.truth_(temp__3971__auto____14374)) {
        var v__14375 = temp__3971__auto____14374;
        return v__14375
      }else {
        var ret__14376 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__14373, cljs.core.assoc, args, ret__14376);
        return ret__14376
      }
    };
    var G__14377 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__14377__delegate.call(this, args)
    };
    G__14377.cljs$lang$maxFixedArity = 0;
    G__14377.cljs$lang$applyTo = function(arglist__14378) {
      var args = cljs.core.seq(arglist__14378);
      return G__14377__delegate(args)
    };
    G__14377.cljs$lang$arity$variadic = G__14377__delegate;
    return G__14377
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__14380 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__14380)) {
        var G__14381 = ret__14380;
        f = G__14381;
        continue
      }else {
        return ret__14380
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__14382__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__14382 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__14382__delegate.call(this, f, args)
    };
    G__14382.cljs$lang$maxFixedArity = 1;
    G__14382.cljs$lang$applyTo = function(arglist__14383) {
      var f = cljs.core.first(arglist__14383);
      var args = cljs.core.rest(arglist__14383);
      return G__14382__delegate(f, args)
    };
    G__14382.cljs$lang$arity$variadic = G__14382__delegate;
    return G__14382
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__14385 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__14385, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__14385, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____14394 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____14394) {
      return or__3824__auto____14394
    }else {
      var or__3824__auto____14395 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____14395) {
        return or__3824__auto____14395
      }else {
        var and__3822__auto____14396 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____14396) {
          var and__3822__auto____14397 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____14397) {
            var and__3822__auto____14398 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____14398) {
              var ret__14399 = true;
              var i__14400 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____14401 = cljs.core.not.call(null, ret__14399);
                  if(or__3824__auto____14401) {
                    return or__3824__auto____14401
                  }else {
                    return i__14400 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__14399
                }else {
                  var G__14402 = isa_QMARK_.call(null, h, child.call(null, i__14400), parent.call(null, i__14400));
                  var G__14403 = i__14400 + 1;
                  ret__14399 = G__14402;
                  i__14400 = G__14403;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____14398
            }
          }else {
            return and__3822__auto____14397
          }
        }else {
          return and__3822__auto____14396
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728))))].join(""));
    }
    var tp__14412 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__14413 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__14414 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__14415 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____14416 = cljs.core.contains_QMARK_.call(null, tp__14412.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__14414.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__14414.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__14412, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__14415.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__14413, parent, ta__14414), "\ufdd0'descendants":tf__14415.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__14414, tag, td__14413)})
    }();
    if(cljs.core.truth_(or__3824__auto____14416)) {
      return or__3824__auto____14416
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__14421 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__14422 = cljs.core.truth_(parentMap__14421.call(null, tag)) ? cljs.core.disj.call(null, parentMap__14421.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__14423 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__14422)) ? cljs.core.assoc.call(null, parentMap__14421, tag, childsParents__14422) : cljs.core.dissoc.call(null, parentMap__14421, tag);
    var deriv_seq__14424 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__14404_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__14404_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__14404_SHARP_), cljs.core.second.call(null, p1__14404_SHARP_)))
    }, cljs.core.seq.call(null, newParents__14423)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__14421.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__14405_SHARP_, p2__14406_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__14405_SHARP_, p2__14406_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__14424))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__14432 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____14434 = cljs.core.truth_(function() {
    var and__3822__auto____14433 = xprefs__14432;
    if(cljs.core.truth_(and__3822__auto____14433)) {
      return xprefs__14432.call(null, y)
    }else {
      return and__3822__auto____14433
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____14434)) {
    return or__3824__auto____14434
  }else {
    var or__3824__auto____14436 = function() {
      var ps__14435 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__14435) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__14435), prefer_table))) {
          }else {
          }
          var G__14439 = cljs.core.rest.call(null, ps__14435);
          ps__14435 = G__14439;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____14436)) {
      return or__3824__auto____14436
    }else {
      var or__3824__auto____14438 = function() {
        var ps__14437 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__14437) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__14437), y, prefer_table))) {
            }else {
            }
            var G__14440 = cljs.core.rest.call(null, ps__14437);
            ps__14437 = G__14440;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____14438)) {
        return or__3824__auto____14438
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____14442 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____14442)) {
    return or__3824__auto____14442
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__14460 = cljs.core.reduce.call(null, function(be, p__14452) {
    var vec__14453__14454 = p__14452;
    var k__14455 = cljs.core.nth.call(null, vec__14453__14454, 0, null);
    var ___14456 = cljs.core.nth.call(null, vec__14453__14454, 1, null);
    var e__14457 = vec__14453__14454;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__14455)) {
      var be2__14459 = cljs.core.truth_(function() {
        var or__3824__auto____14458 = be == null;
        if(or__3824__auto____14458) {
          return or__3824__auto____14458
        }else {
          return cljs.core.dominates.call(null, k__14455, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__14457 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__14459), k__14455, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__14455), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__14459)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__14459
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__14460)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__14460));
      return cljs.core.second.call(null, best_entry__14460)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____14465 = mf;
    if(and__3822__auto____14465) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____14465
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2264__auto____14466 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____14467 = cljs.core._reset[goog.typeOf(x__2264__auto____14466)];
      if(or__3824__auto____14467) {
        return or__3824__auto____14467
      }else {
        var or__3824__auto____14468 = cljs.core._reset["_"];
        if(or__3824__auto____14468) {
          return or__3824__auto____14468
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____14473 = mf;
    if(and__3822__auto____14473) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____14473
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2264__auto____14474 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____14475 = cljs.core._add_method[goog.typeOf(x__2264__auto____14474)];
      if(or__3824__auto____14475) {
        return or__3824__auto____14475
      }else {
        var or__3824__auto____14476 = cljs.core._add_method["_"];
        if(or__3824__auto____14476) {
          return or__3824__auto____14476
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____14481 = mf;
    if(and__3822__auto____14481) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____14481
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2264__auto____14482 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____14483 = cljs.core._remove_method[goog.typeOf(x__2264__auto____14482)];
      if(or__3824__auto____14483) {
        return or__3824__auto____14483
      }else {
        var or__3824__auto____14484 = cljs.core._remove_method["_"];
        if(or__3824__auto____14484) {
          return or__3824__auto____14484
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____14489 = mf;
    if(and__3822__auto____14489) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____14489
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2264__auto____14490 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____14491 = cljs.core._prefer_method[goog.typeOf(x__2264__auto____14490)];
      if(or__3824__auto____14491) {
        return or__3824__auto____14491
      }else {
        var or__3824__auto____14492 = cljs.core._prefer_method["_"];
        if(or__3824__auto____14492) {
          return or__3824__auto____14492
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____14497 = mf;
    if(and__3822__auto____14497) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____14497
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2264__auto____14498 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____14499 = cljs.core._get_method[goog.typeOf(x__2264__auto____14498)];
      if(or__3824__auto____14499) {
        return or__3824__auto____14499
      }else {
        var or__3824__auto____14500 = cljs.core._get_method["_"];
        if(or__3824__auto____14500) {
          return or__3824__auto____14500
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____14505 = mf;
    if(and__3822__auto____14505) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____14505
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2264__auto____14506 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____14507 = cljs.core._methods[goog.typeOf(x__2264__auto____14506)];
      if(or__3824__auto____14507) {
        return or__3824__auto____14507
      }else {
        var or__3824__auto____14508 = cljs.core._methods["_"];
        if(or__3824__auto____14508) {
          return or__3824__auto____14508
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____14513 = mf;
    if(and__3822__auto____14513) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____14513
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2264__auto____14514 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____14515 = cljs.core._prefers[goog.typeOf(x__2264__auto____14514)];
      if(or__3824__auto____14515) {
        return or__3824__auto____14515
      }else {
        var or__3824__auto____14516 = cljs.core._prefers["_"];
        if(or__3824__auto____14516) {
          return or__3824__auto____14516
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____14521 = mf;
    if(and__3822__auto____14521) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____14521
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2264__auto____14522 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____14523 = cljs.core._dispatch[goog.typeOf(x__2264__auto____14522)];
      if(or__3824__auto____14523) {
        return or__3824__auto____14523
      }else {
        var or__3824__auto____14524 = cljs.core._dispatch["_"];
        if(or__3824__auto____14524) {
          return or__3824__auto____14524
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__14527 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__14528 = cljs.core._get_method.call(null, mf, dispatch_val__14527);
  if(cljs.core.truth_(target_fn__14528)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__14527)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__14528, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__14529 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__14530 = this;
  cljs.core.swap_BANG_.call(null, this__14530.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__14530.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__14530.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__14530.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__14531 = this;
  cljs.core.swap_BANG_.call(null, this__14531.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__14531.method_cache, this__14531.method_table, this__14531.cached_hierarchy, this__14531.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__14532 = this;
  cljs.core.swap_BANG_.call(null, this__14532.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__14532.method_cache, this__14532.method_table, this__14532.cached_hierarchy, this__14532.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__14533 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__14533.cached_hierarchy), cljs.core.deref.call(null, this__14533.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__14533.method_cache, this__14533.method_table, this__14533.cached_hierarchy, this__14533.hierarchy)
  }
  var temp__3971__auto____14534 = cljs.core.deref.call(null, this__14533.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____14534)) {
    var target_fn__14535 = temp__3971__auto____14534;
    return target_fn__14535
  }else {
    var temp__3971__auto____14536 = cljs.core.find_and_cache_best_method.call(null, this__14533.name, dispatch_val, this__14533.hierarchy, this__14533.method_table, this__14533.prefer_table, this__14533.method_cache, this__14533.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____14536)) {
      var target_fn__14537 = temp__3971__auto____14536;
      return target_fn__14537
    }else {
      return cljs.core.deref.call(null, this__14533.method_table).call(null, this__14533.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__14538 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__14538.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__14538.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__14538.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__14538.method_cache, this__14538.method_table, this__14538.cached_hierarchy, this__14538.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__14539 = this;
  return cljs.core.deref.call(null, this__14539.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__14540 = this;
  return cljs.core.deref.call(null, this__14540.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__14541 = this;
  return cljs.core.do_dispatch.call(null, mf, this__14541.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__14543__delegate = function(_, args) {
    var self__14542 = this;
    return cljs.core._dispatch.call(null, self__14542, args)
  };
  var G__14543 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__14543__delegate.call(this, _, args)
  };
  G__14543.cljs$lang$maxFixedArity = 1;
  G__14543.cljs$lang$applyTo = function(arglist__14544) {
    var _ = cljs.core.first(arglist__14544);
    var args = cljs.core.rest(arglist__14544);
    return G__14543__delegate(_, args)
  };
  G__14543.cljs$lang$arity$variadic = G__14543__delegate;
  return G__14543
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__14545 = this;
  return cljs.core._dispatch.call(null, self__14545, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__14546 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_14548, _) {
  var this__14547 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__14547.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__14549 = this;
  var and__3822__auto____14550 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____14550) {
    return this__14549.uuid === other.uuid
  }else {
    return and__3822__auto____14550
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__14551 = this;
  var this__14552 = this;
  return cljs.core.pr_str.call(null, this__14552)
};
cljs.core.UUID;
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__16595 = s;
      var limit__16596 = limit;
      var parts__16597 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__16596, 1)) {
          return cljs.core.conj.call(null, parts__16597, s__16595)
        }else {
          var temp__3971__auto____16598 = cljs.core.re_find.call(null, re, s__16595);
          if(cljs.core.truth_(temp__3971__auto____16598)) {
            var m__16599 = temp__3971__auto____16598;
            var index__16600 = s__16595.indexOf(m__16599);
            var G__16601 = s__16595.substring(index__16600 + cljs.core.count.call(null, m__16599));
            var G__16602 = limit__16596 - 1;
            var G__16603 = cljs.core.conj.call(null, parts__16597, s__16595.substring(0, index__16600));
            s__16595 = G__16601;
            limit__16596 = G__16602;
            parts__16597 = G__16603;
            continue
          }else {
            return cljs.core.conj.call(null, parts__16597, s__16595)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__16607 = s.length;
  while(true) {
    if(index__16607 === 0) {
      return""
    }else {
      var ch__16608 = cljs.core._lookup.call(null, s, index__16607 - 1, null);
      if(function() {
        var or__3824__auto____16609 = cljs.core._EQ_.call(null, ch__16608, "\n");
        if(or__3824__auto____16609) {
          return or__3824__auto____16609
        }else {
          return cljs.core._EQ_.call(null, ch__16608, "\r")
        }
      }()) {
        var G__16610 = index__16607 - 1;
        index__16607 = G__16610;
        continue
      }else {
        return s.substring(0, index__16607)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__16614 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____16615 = cljs.core.not.call(null, s__16614);
    if(or__3824__auto____16615) {
      return or__3824__auto____16615
    }else {
      var or__3824__auto____16616 = cljs.core._EQ_.call(null, "", s__16614);
      if(or__3824__auto____16616) {
        return or__3824__auto____16616
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__16614)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__16623 = new goog.string.StringBuffer;
  var length__16624 = s.length;
  var index__16625 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__16624, index__16625)) {
      return buffer__16623.toString()
    }else {
      var ch__16626 = s.charAt(index__16625);
      var temp__3971__auto____16627 = cljs.core._lookup.call(null, cmap, ch__16626, null);
      if(cljs.core.truth_(temp__3971__auto____16627)) {
        var replacement__16628 = temp__3971__auto____16627;
        buffer__16623.append([cljs.core.str(replacement__16628)].join(""))
      }else {
        buffer__16623.append(ch__16626)
      }
      var G__16629 = index__16625 + 1;
      index__16625 = G__16629;
      continue
    }
    break
  }
};
goog.provide("crate.util");
goog.require("cljs.core");
goog.require("clojure.string");
crate.util._STAR_base_url_STAR_ = null;
crate.util.as_str = function() {
  var as_str = null;
  var as_str__0 = function() {
    return""
  };
  var as_str__1 = function(x) {
    if(function() {
      var or__3824__auto____11856 = cljs.core.symbol_QMARK_.call(null, x);
      if(or__3824__auto____11856) {
        return or__3824__auto____11856
      }else {
        return cljs.core.keyword_QMARK_.call(null, x)
      }
    }()) {
      return cljs.core.name.call(null, x)
    }else {
      return[cljs.core.str(x)].join("")
    }
  };
  var as_str__2 = function() {
    var G__11857__delegate = function(x, xs) {
      return function(s, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__11858 = [cljs.core.str(s), cljs.core.str(as_str.call(null, cljs.core.first.call(null, more)))].join("");
            var G__11859 = cljs.core.next.call(null, more);
            s = G__11858;
            more = G__11859;
            continue
          }else {
            return s
          }
          break
        }
      }.call(null, as_str.call(null, x), xs)
    };
    var G__11857 = function(x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11857__delegate.call(this, x, xs)
    };
    G__11857.cljs$lang$maxFixedArity = 1;
    G__11857.cljs$lang$applyTo = function(arglist__11860) {
      var x = cljs.core.first(arglist__11860);
      var xs = cljs.core.rest(arglist__11860);
      return G__11857__delegate(x, xs)
    };
    G__11857.cljs$lang$arity$variadic = G__11857__delegate;
    return G__11857
  }();
  as_str = function(x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return as_str__0.call(this);
      case 1:
        return as_str__1.call(this, x);
      default:
        return as_str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  as_str.cljs$lang$maxFixedArity = 1;
  as_str.cljs$lang$applyTo = as_str__2.cljs$lang$applyTo;
  as_str.cljs$lang$arity$0 = as_str__0;
  as_str.cljs$lang$arity$1 = as_str__1;
  as_str.cljs$lang$arity$variadic = as_str__2.cljs$lang$arity$variadic;
  return as_str
}();
crate.util.escape_html = function escape_html(text) {
  return clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, crate.util.as_str.call(null, text), "&", "&amp;"), "<", "&lt;"), ">", "&gt;"), '"', "&quot;")
};
crate.util.to_uri = function to_uri(uri) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, /^\w+:.*/, uri))) {
    return uri
  }else {
    return[cljs.core.str(crate.util._STAR_base_url_STAR_), cljs.core.str(uri)].join("")
  }
};
crate.util.url_encode_component = function url_encode_component(s) {
  return encodeURIComponent(crate.util.as_str.call(null, s))
};
crate.util.url_encode = function url_encode(params) {
  return clojure.string.join.call(null, "&", function() {
    var iter__2363__auto____11886 = function iter__11874(s__11875) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__11875__11881 = s__11875;
        while(true) {
          if(cljs.core.seq.call(null, s__11875__11881)) {
            var vec__11882__11883 = cljs.core.first.call(null, s__11875__11881);
            var k__11884 = cljs.core.nth.call(null, vec__11882__11883, 0, null);
            var v__11885 = cljs.core.nth.call(null, vec__11882__11883, 1, null);
            return cljs.core.cons.call(null, [cljs.core.str(crate.util.url_encode_component.call(null, k__11884)), cljs.core.str("="), cljs.core.str(crate.util.url_encode_component.call(null, v__11885))].join(""), iter__11874.call(null, cljs.core.rest.call(null, s__11875__11881)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____11886.call(null, params)
  }())
};
crate.util.url = function() {
  var url__delegate = function(args) {
    var params__11889 = cljs.core.last.call(null, args);
    var args__11890 = cljs.core.butlast.call(null, args);
    return[cljs.core.str(crate.util.to_uri.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, args__11890)), cljs.core.str(cljs.core.map_QMARK_.call(null, params__11889) ? [cljs.core.str("?"), cljs.core.str(crate.util.url_encode.call(null, params__11889))].join("") : params__11889)].join("")))].join("")
  };
  var url = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return url__delegate.call(this, args)
  };
  url.cljs$lang$maxFixedArity = 0;
  url.cljs$lang$applyTo = function(arglist__11891) {
    var args = cljs.core.seq(arglist__11891);
    return url__delegate(args)
  };
  url.cljs$lang$arity$variadic = url__delegate;
  return url
}();
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max__15422 = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max__15422, cljs.core.remove.call(null, function(p1__15420_SHARP_) {
    return max__15422 === p1__15420_SHARP_
  }, coll))
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var union__1 = function(s1) {
    return s1
  };
  var union__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2)
    }
  };
  var union__3 = function() {
    var G__15426__delegate = function(s1, s2, sets) {
      var bubbled_sets__15425 = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets__15425), cljs.core.rest.call(null, bubbled_sets__15425))
    };
    var G__15426 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__15426__delegate.call(this, s1, s2, sets)
    };
    G__15426.cljs$lang$maxFixedArity = 2;
    G__15426.cljs$lang$applyTo = function(arglist__15427) {
      var s1 = cljs.core.first(arglist__15427);
      var s2 = cljs.core.first(cljs.core.next(arglist__15427));
      var sets = cljs.core.rest(cljs.core.next(arglist__15427));
      return G__15426__delegate(s1, s2, sets)
    };
    G__15426.cljs$lang$arity$variadic = G__15426__delegate;
    return G__15426
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$lang$arity$0 = union__0;
  union.cljs$lang$arity$1 = union__1;
  union.cljs$lang$arity$2 = union__2;
  union.cljs$lang$arity$variadic = union__3.cljs$lang$arity$variadic;
  return union
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1
  };
  var intersection__2 = function(s1, s2) {
    while(true) {
      if(cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__15430 = s2;
        var G__15431 = s1;
        s1 = G__15430;
        s2 = G__15431;
        continue
      }else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if(cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result
            }else {
              return cljs.core.disj.call(null, result, item)
            }
          }
        }(s1, s2), s1, s1)
      }
      break
    }
  };
  var intersection__3 = function() {
    var G__15432__delegate = function(s1, s2, sets) {
      var bubbled_sets__15429 = clojure.set.bubble_max_key.call(null, function(p1__15423_SHARP_) {
        return-cljs.core.count.call(null, p1__15423_SHARP_)
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets__15429), cljs.core.rest.call(null, bubbled_sets__15429))
    };
    var G__15432 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__15432__delegate.call(this, s1, s2, sets)
    };
    G__15432.cljs$lang$maxFixedArity = 2;
    G__15432.cljs$lang$applyTo = function(arglist__15433) {
      var s1 = cljs.core.first(arglist__15433);
      var s2 = cljs.core.first(cljs.core.next(arglist__15433));
      var sets = cljs.core.rest(cljs.core.next(arglist__15433));
      return G__15432__delegate(s1, s2, sets)
    };
    G__15432.cljs$lang$arity$variadic = G__15432__delegate;
    return G__15432
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$lang$arity$1 = intersection__1;
  intersection.cljs$lang$arity$2 = intersection__2;
  intersection.cljs$lang$arity$variadic = intersection__3.cljs$lang$arity$variadic;
  return intersection
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1
  };
  var difference__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if(cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item)
        }else {
          return result
        }
      }, s1, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2)
    }
  };
  var difference__3 = function() {
    var G__15434__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2))
    };
    var G__15434 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__15434__delegate.call(this, s1, s2, sets)
    };
    G__15434.cljs$lang$maxFixedArity = 2;
    G__15434.cljs$lang$applyTo = function(arglist__15435) {
      var s1 = cljs.core.first(arglist__15435);
      var s2 = cljs.core.first(cljs.core.next(arglist__15435));
      var sets = cljs.core.rest(cljs.core.next(arglist__15435));
      return G__15434__delegate(s1, s2, sets)
    };
    G__15434.cljs$lang$arity$variadic = G__15434__delegate;
    return G__15434
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$lang$arity$1 = difference__1;
  difference.cljs$lang$arity$2 = difference__2;
  difference.cljs$lang$arity$variadic = difference__3.cljs$lang$arity$variadic;
  return difference
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if(cljs.core.truth_(pred.call(null, k))) {
      return s
    }else {
      return cljs.core.disj.call(null, s, k)
    }
  }, xset, xset)
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__15436_SHARP_) {
    return cljs.core.select_keys.call(null, p1__15436_SHARP_, ks)
  }, xrel))
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__15444) {
    var vec__15445__15446 = p__15444;
    var old__15447 = cljs.core.nth.call(null, vec__15445__15446, 0, null);
    var new__15448 = cljs.core.nth.call(null, vec__15445__15446, 1, null);
    if(function() {
      var and__3822__auto____15449 = cljs.core.not_EQ_.call(null, old__15447, new__15448);
      if(and__3822__auto____15449) {
        return cljs.core.contains_QMARK_.call(null, m, old__15447)
      }else {
        return and__3822__auto____15449
      }
    }()) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, m, new__15448, cljs.core._lookup.call(null, m, old__15447, null)), old__15447)
    }else {
      return m
    }
  }, map, kmap)
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__15437_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__15437_SHARP_, kmap)
  }, xrel))
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik__15451 = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik__15451, cljs.core.conj.call(null, cljs.core._lookup.call(null, m, ik__15451, cljs.core.PersistentHashSet.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, xrel)
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m, p__15461) {
    var vec__15462__15463 = p__15461;
    var k__15464 = cljs.core.nth.call(null, vec__15462__15463, 0, null);
    var v__15465 = cljs.core.nth.call(null, vec__15462__15463, 1, null);
    return cljs.core.assoc.call(null, m, v__15465, k__15464)
  }, cljs.core.ObjMap.EMPTY, m)
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if(function() {
      var and__3822__auto____15482 = cljs.core.seq.call(null, xrel);
      if(and__3822__auto____15482) {
        return cljs.core.seq.call(null, yrel)
      }else {
        return and__3822__auto____15482
      }
    }()) {
      var ks__15484 = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__15483__15485 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel], true) : cljs.core.PersistentVector.fromArray([yrel, xrel], true);
      var r__15486 = cljs.core.nth.call(null, vec__15483__15485, 0, null);
      var s__15487 = cljs.core.nth.call(null, vec__15483__15485, 1, null);
      var idx__15488 = clojure.set.index.call(null, r__15486, ks__15484);
      return cljs.core.reduce.call(null, function(ret, x) {
        var found__15489 = idx__15488.call(null, cljs.core.select_keys.call(null, x, ks__15484));
        if(cljs.core.truth_(found__15489)) {
          return cljs.core.reduce.call(null, function(p1__15452_SHARP_, p2__15453_SHARP_) {
            return cljs.core.conj.call(null, p1__15452_SHARP_, cljs.core.merge.call(null, p2__15453_SHARP_, x))
          }, ret, found__15489)
        }else {
          return ret
        }
      }, cljs.core.PersistentHashSet.EMPTY, s__15487)
    }else {
      return cljs.core.PersistentHashSet.EMPTY
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__15490__15491 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel, clojure.set.map_invert.call(null, km)], true) : cljs.core.PersistentVector.fromArray([yrel, xrel, km], true);
    var r__15492 = cljs.core.nth.call(null, vec__15490__15491, 0, null);
    var s__15493 = cljs.core.nth.call(null, vec__15490__15491, 1, null);
    var k__15494 = cljs.core.nth.call(null, vec__15490__15491, 2, null);
    var idx__15495 = clojure.set.index.call(null, r__15492, cljs.core.vals.call(null, k__15494));
    return cljs.core.reduce.call(null, function(ret, x) {
      var found__15496 = idx__15495.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k__15494)), k__15494));
      if(cljs.core.truth_(found__15496)) {
        return cljs.core.reduce.call(null, function(p1__15454_SHARP_, p2__15455_SHARP_) {
          return cljs.core.conj.call(null, p1__15454_SHARP_, cljs.core.merge.call(null, p2__15455_SHARP_, x))
        }, ret, found__15496)
      }else {
        return ret
      }
    }, cljs.core.PersistentHashSet.EMPTY, s__15493)
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$2 = join__2;
  join.cljs$lang$arity$3 = join__3;
  return join
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  var and__3822__auto____15499 = cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2);
  if(and__3822__auto____15499) {
    return cljs.core.every_QMARK_.call(null, function(p1__15466_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set2, p1__15466_SHARP_)
    }, set1)
  }else {
    return and__3822__auto____15499
  }
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  var and__3822__auto____15501 = cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2);
  if(and__3822__auto____15501) {
    return cljs.core.every_QMARK_.call(null, function(p1__15497_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set1, p1__15497_SHARP_)
    }, set2)
  }else {
    return and__3822__auto____15501
  }
};
goog.provide("crate.binding");
goog.require("cljs.core");
goog.require("clojure.set");
crate.binding.SubAtom = function(atm, path, prevhash, watches) {
  this.atm = atm;
  this.path = path;
  this.prevhash = prevhash;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690678784
};
crate.binding.SubAtom.cljs$lang$type = true;
crate.binding.SubAtom.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "crate.binding/SubAtom")
};
crate.binding.SubAtom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11626 = this;
  return goog.getUid(this$)
};
crate.binding.SubAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__11627 = this;
  var G__11628__11629 = cljs.core.seq.call(null, this__11627.watches);
  if(G__11628__11629) {
    var G__11631__11633 = cljs.core.first.call(null, G__11628__11629);
    var vec__11632__11634 = G__11631__11633;
    var key__11635 = cljs.core.nth.call(null, vec__11632__11634, 0, null);
    var f__11636 = cljs.core.nth.call(null, vec__11632__11634, 1, null);
    var G__11628__11637 = G__11628__11629;
    var G__11631__11638 = G__11631__11633;
    var G__11628__11639 = G__11628__11637;
    while(true) {
      var vec__11640__11641 = G__11631__11638;
      var key__11642 = cljs.core.nth.call(null, vec__11640__11641, 0, null);
      var f__11643 = cljs.core.nth.call(null, vec__11640__11641, 1, null);
      var G__11628__11644 = G__11628__11639;
      f__11643.call(null, key__11642, this$, oldval, newval);
      var temp__3974__auto____11645 = cljs.core.next.call(null, G__11628__11644);
      if(temp__3974__auto____11645) {
        var G__11628__11646 = temp__3974__auto____11645;
        var G__11652 = cljs.core.first.call(null, G__11628__11646);
        var G__11653 = G__11628__11646;
        G__11631__11638 = G__11652;
        G__11628__11639 = G__11653;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.binding.SubAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__11647 = this;
  if(cljs.core.truth_(f)) {
    return this$.watches = cljs.core.assoc.call(null, this__11647.watches, key, f)
  }else {
    return null
  }
};
crate.binding.SubAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__11648 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__11648.watches, key)
};
crate.binding.SubAtom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__11649 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<SubAtom: "], true), cljs.core._pr_seq.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, this__11649.atm), this__11649.path), opts), ">")
};
crate.binding.SubAtom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__11650 = this;
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, this__11650.atm), this__11650.path)
};
crate.binding.SubAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__11651 = this;
  return o === other
};
crate.binding.SubAtom;
crate.binding.subatom = function subatom(atm, path) {
  var path__11667 = cljs.core.coll_QMARK_.call(null, path) ? path : cljs.core.PersistentVector.fromArray([path], true);
  var vec__11666__11668 = cljs.core.instance_QMARK_.call(null, crate.binding.SubAtom, atm) ? cljs.core.PersistentVector.fromArray([atm.atm, cljs.core.concat.call(null, atm.path, path__11667)], true) : cljs.core.PersistentVector.fromArray([atm, path__11667], true);
  var atm__11669 = cljs.core.nth.call(null, vec__11666__11668, 0, null);
  var path__11670 = cljs.core.nth.call(null, vec__11666__11668, 1, null);
  var k__11671 = cljs.core.gensym.call(null, "subatom");
  var sa__11672 = new crate.binding.SubAtom(atm__11669, path__11670, cljs.core.hash.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, atm__11669), path__11670)), null);
  cljs.core.add_watch.call(null, atm__11669, k__11671, function(_11673, _, ov, nv) {
    var latest__11674 = cljs.core.get_in.call(null, nv, path__11670);
    var prev__11675 = cljs.core.get_in.call(null, ov, path__11670);
    var latest_hash__11676 = cljs.core.hash.call(null, latest__11674);
    if(function() {
      var and__3822__auto____11677 = cljs.core.not_EQ_.call(null, sa__11672.prevhash, latest_hash__11676);
      if(and__3822__auto____11677) {
        return cljs.core.not_EQ_.call(null, prev__11675, latest__11674)
      }else {
        return and__3822__auto____11677
      }
    }()) {
      sa__11672.prevhash = latest_hash__11676;
      return cljs.core._notify_watches.call(null, sa__11672, cljs.core.get_in.call(null, ov, path__11670), latest__11674)
    }else {
      return null
    }
  });
  return sa__11672
};
crate.binding.sub_reset_BANG_ = function sub_reset_BANG_(sa, new_value) {
  cljs.core.swap_BANG_.call(null, sa.atm, cljs.core.assoc_in, sa.path, new_value);
  return new_value
};
crate.binding.sub_swap_BANG_ = function() {
  var sub_swap_BANG_ = null;
  var sub_swap_BANG___2 = function(sa, f) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa)))
  };
  var sub_swap_BANG___3 = function(sa, f, x) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa), x))
  };
  var sub_swap_BANG___4 = function(sa, f, x, y) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa), x, y))
  };
  var sub_swap_BANG___5 = function(sa, f, x, y, z) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa), x, y, z))
  };
  var sub_swap_BANG___6 = function() {
    var G__11678__delegate = function(sa, f, x, y, z, more) {
      return crate.binding.sub_reset_BANG_.call(null, sa, cljs.core.apply.call(null, f, cljs.core.deref.call(null, sa), x, y, z, more))
    };
    var G__11678 = function(sa, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__11678__delegate.call(this, sa, f, x, y, z, more)
    };
    G__11678.cljs$lang$maxFixedArity = 5;
    G__11678.cljs$lang$applyTo = function(arglist__11679) {
      var sa = cljs.core.first(arglist__11679);
      var f = cljs.core.first(cljs.core.next(arglist__11679));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11679)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11679))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11679)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11679)))));
      return G__11678__delegate(sa, f, x, y, z, more)
    };
    G__11678.cljs$lang$arity$variadic = G__11678__delegate;
    return G__11678
  }();
  sub_swap_BANG_ = function(sa, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return sub_swap_BANG___2.call(this, sa, f);
      case 3:
        return sub_swap_BANG___3.call(this, sa, f, x);
      case 4:
        return sub_swap_BANG___4.call(this, sa, f, x, y);
      case 5:
        return sub_swap_BANG___5.call(this, sa, f, x, y, z);
      default:
        return sub_swap_BANG___6.cljs$lang$arity$variadic(sa, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  sub_swap_BANG_.cljs$lang$maxFixedArity = 5;
  sub_swap_BANG_.cljs$lang$applyTo = sub_swap_BANG___6.cljs$lang$applyTo;
  sub_swap_BANG_.cljs$lang$arity$2 = sub_swap_BANG___2;
  sub_swap_BANG_.cljs$lang$arity$3 = sub_swap_BANG___3;
  sub_swap_BANG_.cljs$lang$arity$4 = sub_swap_BANG___4;
  sub_swap_BANG_.cljs$lang$arity$5 = sub_swap_BANG___5;
  sub_swap_BANG_.cljs$lang$arity$variadic = sub_swap_BANG___6.cljs$lang$arity$variadic;
  return sub_swap_BANG_
}();
crate.binding.notify = function notify(w, o, v) {
  return cljs.core._notify_watches.call(null, w, o, v)
};
crate.binding.bindable_coll = {};
crate.binding.bindable = {};
crate.binding._value = function _value(this$) {
  if(function() {
    var and__3822__auto____11684 = this$;
    if(and__3822__auto____11684) {
      return this$.crate$binding$bindable$_value$arity$1
    }else {
      return and__3822__auto____11684
    }
  }()) {
    return this$.crate$binding$bindable$_value$arity$1(this$)
  }else {
    var x__2264__auto____11685 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11686 = crate.binding._value[goog.typeOf(x__2264__auto____11685)];
      if(or__3824__auto____11686) {
        return or__3824__auto____11686
      }else {
        var or__3824__auto____11687 = crate.binding._value["_"];
        if(or__3824__auto____11687) {
          return or__3824__auto____11687
        }else {
          throw cljs.core.missing_protocol.call(null, "bindable.-value", this$);
        }
      }
    }().call(null, this$)
  }
};
crate.binding._on_change = function _on_change(this$, func) {
  if(function() {
    var and__3822__auto____11692 = this$;
    if(and__3822__auto____11692) {
      return this$.crate$binding$bindable$_on_change$arity$2
    }else {
      return and__3822__auto____11692
    }
  }()) {
    return this$.crate$binding$bindable$_on_change$arity$2(this$, func)
  }else {
    var x__2264__auto____11693 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11694 = crate.binding._on_change[goog.typeOf(x__2264__auto____11693)];
      if(or__3824__auto____11694) {
        return or__3824__auto____11694
      }else {
        var or__3824__auto____11695 = crate.binding._on_change["_"];
        if(or__3824__auto____11695) {
          return or__3824__auto____11695
        }else {
          throw cljs.core.missing_protocol.call(null, "bindable.-on-change", this$);
        }
      }
    }().call(null, this$, func)
  }
};
crate.binding.atom_binding = function(atm, value_func) {
  this.atm = atm;
  this.value_func = value_func
};
crate.binding.atom_binding.cljs$lang$type = true;
crate.binding.atom_binding.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "crate.binding/atom-binding")
};
crate.binding.atom_binding.prototype.crate$binding$bindable$ = true;
crate.binding.atom_binding.prototype.crate$binding$bindable$_value$arity$1 = function(this$) {
  var this__11696 = this;
  return this__11696.value_func.call(null, cljs.core.deref.call(null, this__11696.atm))
};
crate.binding.atom_binding.prototype.crate$binding$bindable$_on_change$arity$2 = function(this$, func) {
  var this__11697 = this;
  return cljs.core.add_watch.call(null, this__11697.atm, cljs.core.gensym.call(null, "atom-binding"), function() {
    return func.call(null, crate.binding._value.call(null, this$))
  })
};
crate.binding.atom_binding;
crate.binding.notifier = function(watches) {
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147483648
};
crate.binding.notifier.cljs$lang$type = true;
crate.binding.notifier.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "crate.binding/notifier")
};
crate.binding.notifier.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__11698 = this;
  var G__11699__11700 = cljs.core.seq.call(null, this__11698.watches);
  if(G__11699__11700) {
    var G__11702__11704 = cljs.core.first.call(null, G__11699__11700);
    var vec__11703__11705 = G__11702__11704;
    var key__11706 = cljs.core.nth.call(null, vec__11703__11705, 0, null);
    var f__11707 = cljs.core.nth.call(null, vec__11703__11705, 1, null);
    var G__11699__11708 = G__11699__11700;
    var G__11702__11709 = G__11702__11704;
    var G__11699__11710 = G__11699__11708;
    while(true) {
      var vec__11711__11712 = G__11702__11709;
      var key__11713 = cljs.core.nth.call(null, vec__11711__11712, 0, null);
      var f__11714 = cljs.core.nth.call(null, vec__11711__11712, 1, null);
      var G__11699__11715 = G__11699__11710;
      f__11714.call(null, key__11713, this$, oldval, newval);
      var temp__3974__auto____11716 = cljs.core.next.call(null, G__11699__11715);
      if(temp__3974__auto____11716) {
        var G__11699__11717 = temp__3974__auto____11716;
        var G__11720 = cljs.core.first.call(null, G__11699__11717);
        var G__11721 = G__11699__11717;
        G__11702__11709 = G__11720;
        G__11699__11710 = G__11721;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.binding.notifier.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__11718 = this;
  return this$.watches = cljs.core.assoc.call(null, this__11718.watches, key, f)
};
crate.binding.notifier.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__11719 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__11719.watches, key)
};
crate.binding.notifier;
crate.binding.bound_collection = function(atm, notif, opts, stuff) {
  this.atm = atm;
  this.notif = notif;
  this.opts = opts;
  this.stuff = stuff
};
crate.binding.bound_collection.cljs$lang$type = true;
crate.binding.bound_collection.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "crate.binding/bound-collection")
};
crate.binding.bound_collection.prototype.crate$binding$bindable$ = true;
crate.binding.bound_collection.prototype.crate$binding$bindable$_value$arity$1 = function(this$) {
  var this__11722 = this;
  return cljs.core.map.call(null, "\ufdd0'elem", cljs.core.vals.call(null, this$.stuff))
};
crate.binding.bound_collection.prototype.crate$binding$bindable$_on_change$arity$2 = function(this$, func) {
  var this__11723 = this;
  return cljs.core.add_watch.call(null, this__11723.notif, cljs.core.gensym.call(null, "bound-coll"), function(_11725, _11726, _, p__11724) {
    var vec__11727__11728 = p__11724;
    var event__11729 = cljs.core.nth.call(null, vec__11727__11728, 0, null);
    var el__11730 = cljs.core.nth.call(null, vec__11727__11728, 1, null);
    var v__11731 = cljs.core.nth.call(null, vec__11727__11728, 2, null);
    return func.call(null, event__11729, el__11730, v__11731)
  })
};
crate.binding.bound_collection.prototype.crate$binding$bindable_coll$ = true;
crate.binding.bound_collection;
crate.binding.opt = function opt(bc, k) {
  return bc.opts.call(null, k)
};
crate.binding.bc_add = function bc_add(bc, path, key) {
  var sa__11734 = crate.binding.subatom.call(null, bc.atm, path);
  var elem__11735 = crate.binding.opt.call(null, bc, "\ufdd0'as").call(null, sa__11734);
  bc.stuff = cljs.core.assoc.call(null, bc.stuff, key, cljs.core.ObjMap.fromObject(["\ufdd0'elem", "\ufdd0'subatom"], {"\ufdd0'elem":elem__11735, "\ufdd0'subatom":sa__11734}));
  return crate.binding.notify.call(null, bc.notif, null, cljs.core.PersistentVector.fromArray(["\ufdd0'add", elem__11735, cljs.core.deref.call(null, sa__11734)], true))
};
crate.binding.bc_remove = function bc_remove(bc, key) {
  var notif__11738 = bc.notif;
  var prev__11739 = bc.stuff.call(null, key);
  bc.stuff = cljs.core.dissoc.call(null, bc.stuff, key);
  return crate.binding.notify.call(null, bc.notif, null, cljs.core.PersistentVector.fromArray(["\ufdd0'remove", (new cljs.core.Keyword("\ufdd0'elem")).call(null, prev__11739), null], true))
};
crate.binding.__GT_indexed = function __GT_indexed(coll) {
  if(cljs.core.map_QMARK_.call(null, coll)) {
    return cljs.core.seq.call(null, coll)
  }else {
    if(cljs.core.set_QMARK_.call(null, coll)) {
      return cljs.core.map.call(null, cljs.core.juxt.call(null, cljs.core.identity, cljs.core.identity), coll)
    }else {
      if("\ufdd0'else") {
        return cljs.core.map_indexed.call(null, cljs.core.vector, coll)
      }else {
        return null
      }
    }
  }
};
crate.binding.__GT_keyed = function __GT_keyed(coll, keyfn) {
  return cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.map.call(null, keyfn, crate.binding.__GT_indexed.call(null, coll)))
};
crate.binding.__GT_path = function() {
  var __GT_path__delegate = function(bc, segs) {
    return cljs.core.concat.call(null, function() {
      var or__3824__auto____11741 = crate.binding.opt.call(null, bc, "\ufdd0'path");
      if(cljs.core.truth_(or__3824__auto____11741)) {
        return or__3824__auto____11741
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), segs)
  };
  var __GT_path = function(bc, var_args) {
    var segs = null;
    if(goog.isDef(var_args)) {
      segs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return __GT_path__delegate.call(this, bc, segs)
  };
  __GT_path.cljs$lang$maxFixedArity = 1;
  __GT_path.cljs$lang$applyTo = function(arglist__11742) {
    var bc = cljs.core.first(arglist__11742);
    var segs = cljs.core.rest(arglist__11742);
    return __GT_path__delegate(bc, segs)
  };
  __GT_path.cljs$lang$arity$variadic = __GT_path__delegate;
  return __GT_path
}();
crate.binding.bc_compare = function bc_compare(bc, neue) {
  var prev__11760 = bc.stuff;
  var pset__11761 = cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.keys.call(null, prev__11760));
  var nset__11762 = crate.binding.__GT_keyed.call(null, neue, crate.binding.opt.call(null, bc, "\ufdd0'keyfn"));
  var added__11763 = cljs.core.into.call(null, cljs.core.sorted_set.call(null), clojure.set.difference.call(null, nset__11762, pset__11761));
  var removed__11764 = cljs.core.into.call(null, cljs.core.sorted_set.call(null), clojure.set.difference.call(null, pset__11761, nset__11762));
  var G__11765__11766 = cljs.core.seq.call(null, added__11763);
  if(G__11765__11766) {
    var a__11767 = cljs.core.first.call(null, G__11765__11766);
    var G__11765__11768 = G__11765__11766;
    while(true) {
      crate.binding.bc_add.call(null, bc, a__11767, a__11767);
      var temp__3974__auto____11769 = cljs.core.next.call(null, G__11765__11768);
      if(temp__3974__auto____11769) {
        var G__11765__11770 = temp__3974__auto____11769;
        var G__11777 = cljs.core.first.call(null, G__11765__11770);
        var G__11778 = G__11765__11770;
        a__11767 = G__11777;
        G__11765__11768 = G__11778;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__11771__11772 = cljs.core.seq.call(null, removed__11764);
  if(G__11771__11772) {
    var r__11773 = cljs.core.first.call(null, G__11771__11772);
    var G__11771__11774 = G__11771__11772;
    while(true) {
      crate.binding.bc_remove.call(null, bc, r__11773);
      var temp__3974__auto____11775 = cljs.core.next.call(null, G__11771__11774);
      if(temp__3974__auto____11775) {
        var G__11771__11776 = temp__3974__auto____11775;
        var G__11779 = cljs.core.first.call(null, G__11771__11776);
        var G__11780 = G__11771__11776;
        r__11773 = G__11779;
        G__11771__11774 = G__11780;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.binding.bound_coll = function() {
  var bound_coll__delegate = function(atm, p__11781) {
    var vec__11796__11797 = p__11781;
    var path__11798 = cljs.core.nth.call(null, vec__11796__11797, 0, null);
    var opts__11799 = cljs.core.nth.call(null, vec__11796__11797, 1, null);
    var vec__11800__11801 = cljs.core.truth_(opts__11799) ? cljs.core.PersistentVector.fromArray([path__11798, opts__11799], true) : cljs.core.PersistentVector.fromArray([null, path__11798], true);
    var path__11802 = cljs.core.nth.call(null, vec__11800__11801, 0, null);
    var opts__11803 = cljs.core.nth.call(null, vec__11800__11801, 1, null);
    var atm__11804 = cljs.core.not.call(null, path__11802) ? atm : crate.binding.subatom.call(null, atm, path__11802);
    var opts__11805 = cljs.core.assoc.call(null, opts__11803, "\ufdd0'path", path__11802);
    var opts__11806 = cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'keyfn")).call(null, opts__11805)) ? cljs.core.assoc.call(null, opts__11805, "\ufdd0'keyfn", cljs.core.first) : cljs.core.assoc.call(null, opts__11805, "\ufdd0'keyfn", cljs.core.comp.call(null, (new cljs.core.Keyword("\ufdd0'keyfn")).call(null, opts__11805), cljs.core.second));
    var bc__11807 = new crate.binding.bound_collection(atm__11804, new crate.binding.notifier(null), opts__11806, cljs.core.sorted_map.call(null));
    cljs.core.add_watch.call(null, atm__11804, cljs.core.gensym.call(null, "bound-coll"), function(_11808, _11809, _, neue) {
      return crate.binding.bc_compare.call(null, bc__11807, neue)
    });
    crate.binding.bc_compare.call(null, bc__11807, cljs.core.deref.call(null, atm__11804));
    return bc__11807
  };
  var bound_coll = function(atm, var_args) {
    var p__11781 = null;
    if(goog.isDef(var_args)) {
      p__11781 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return bound_coll__delegate.call(this, atm, p__11781)
  };
  bound_coll.cljs$lang$maxFixedArity = 1;
  bound_coll.cljs$lang$applyTo = function(arglist__11810) {
    var atm = cljs.core.first(arglist__11810);
    var p__11781 = cljs.core.rest(arglist__11810);
    return bound_coll__delegate(atm, p__11781)
  };
  bound_coll.cljs$lang$arity$variadic = bound_coll__delegate;
  return bound_coll
}();
crate.binding.map_bound = function() {
  var map_bound__delegate = function(as, atm, p__11811) {
    var vec__11821__11822 = p__11811;
    var opts__11823 = cljs.core.nth.call(null, vec__11821__11822, 0, null);
    var opts__11824 = cljs.core.assoc.call(null, opts__11823, "\ufdd0'as", as);
    var atm__11825 = cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'path")).call(null, opts__11824)) ? atm : crate.binding.subatom.call(null, atm, (new cljs.core.Keyword("\ufdd0'path")).call(null, opts__11824));
    var opts__11826 = cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'keyfn")).call(null, opts__11824)) ? cljs.core.assoc.call(null, opts__11824, "\ufdd0'keyfn", cljs.core.first) : cljs.core.assoc.call(null, opts__11824, "\ufdd0'keyfn", cljs.core.comp.call(null, (new cljs.core.Keyword("\ufdd0'keyfn")).call(null, opts__11824), cljs.core.second));
    var bc__11827 = new crate.binding.bound_collection(atm__11825, new crate.binding.notifier(null), opts__11826, cljs.core.sorted_map.call(null));
    cljs.core.add_watch.call(null, atm__11825, cljs.core.gensym.call(null, "bound-coll"), function(_11828, _11829, _, neue) {
      return crate.binding.bc_compare.call(null, bc__11827, neue)
    });
    crate.binding.bc_compare.call(null, bc__11827, cljs.core.deref.call(null, atm__11825));
    return bc__11827
  };
  var map_bound = function(as, atm, var_args) {
    var p__11811 = null;
    if(goog.isDef(var_args)) {
      p__11811 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return map_bound__delegate.call(this, as, atm, p__11811)
  };
  map_bound.cljs$lang$maxFixedArity = 2;
  map_bound.cljs$lang$applyTo = function(arglist__11830) {
    var as = cljs.core.first(arglist__11830);
    var atm = cljs.core.first(cljs.core.next(arglist__11830));
    var p__11811 = cljs.core.rest(cljs.core.next(arglist__11830));
    return map_bound__delegate(as, atm, p__11811)
  };
  map_bound.cljs$lang$arity$variadic = map_bound__delegate;
  return map_bound
}();
crate.binding.binding_QMARK_ = function binding_QMARK_(b) {
  var G__11834__11835 = b;
  if(G__11834__11835) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____11836 = null;
      if(cljs.core.truth_(or__3824__auto____11836)) {
        return or__3824__auto____11836
      }else {
        return G__11834__11835.crate$binding$bindable$
      }
    }())) {
      return true
    }else {
      if(!G__11834__11835.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, crate.binding.bindable, G__11834__11835)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, crate.binding.bindable, G__11834__11835)
  }
};
crate.binding.binding_coll_QMARK_ = function binding_coll_QMARK_(b) {
  var G__11840__11841 = b;
  if(G__11840__11841) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____11842 = null;
      if(cljs.core.truth_(or__3824__auto____11842)) {
        return or__3824__auto____11842
      }else {
        return G__11840__11841.crate$binding$bindable_coll$
      }
    }())) {
      return true
    }else {
      if(!G__11840__11841.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, crate.binding.bindable_coll, G__11840__11841)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, crate.binding.bindable_coll, G__11840__11841)
  }
};
crate.binding.value = function value(b) {
  return crate.binding._value.call(null, b)
};
crate.binding.index = function index(sub_atom) {
  return cljs.core.last.call(null, sub_atom.path)
};
crate.binding.on_change = function on_change(b, func) {
  return crate.binding._on_change.call(null, b, func)
};
crate.binding.bound = function() {
  var bound__delegate = function(atm, p__11843) {
    var vec__11849__11850 = p__11843;
    var func__11851 = cljs.core.nth.call(null, vec__11849__11850, 0, null);
    var func__11853 = function() {
      var or__3824__auto____11852 = func__11851;
      if(cljs.core.truth_(or__3824__auto____11852)) {
        return or__3824__auto____11852
      }else {
        return cljs.core.identity
      }
    }();
    return new crate.binding.atom_binding(atm, func__11853)
  };
  var bound = function(atm, var_args) {
    var p__11843 = null;
    if(goog.isDef(var_args)) {
      p__11843 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return bound__delegate.call(this, atm, p__11843)
  };
  bound.cljs$lang$maxFixedArity = 1;
  bound.cljs$lang$applyTo = function(arglist__11854) {
    var atm = cljs.core.first(arglist__11854);
    var p__11843 = cljs.core.rest(arglist__11854);
    return bound__delegate(atm, p__11843)
  };
  bound.cljs$lang$arity$variadic = bound__delegate;
  return bound
}();
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isDocumentModeCache_ = {};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.isDocumentModeCache_[documentMode] || (goog.userAgent.isDocumentModeCache_[documentMode] = goog.userAgent.IE && document.documentMode && document.documentMode >= documentMode)
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x)
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return goog.style.getSizeWithDisplay_(element)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var size = goog.style.getSizeWithDisplay_(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return size
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top)
  }
  return new goog.math.Size(offsetWidth, offsetHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if(opt_className) {
    outerDiv.className = opt_className
  }
  outerDiv.style.cssText = "visiblity:hidden;overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width
};
goog.provide("crate.compiler");
goog.require("cljs.core");
goog.require("crate.binding");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("goog.dom");
crate.compiler.xmlns = cljs.core.ObjMap.fromObject(["\ufdd0'xhtml", "\ufdd0'svg"], {"\ufdd0'xhtml":"http://www.w3.org/1999/xhtml", "\ufdd0'svg":"http://www.w3.org/2000/svg"});
crate.compiler.group_id = cljs.core.atom.call(null, 0);
crate.compiler.bindings = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
crate.compiler.capture_binding = function capture_binding(tag, b) {
  return cljs.core.swap_BANG_.call(null, crate.compiler.bindings, cljs.core.conj, cljs.core.PersistentVector.fromArray([tag, b], true))
};
crate.compiler.as_content = function as_content(parent, content) {
  var G__11370__11371 = cljs.core.seq.call(null, content);
  if(G__11370__11371) {
    var c__11372 = cljs.core.first.call(null, G__11370__11371);
    var G__11370__11373 = G__11370__11371;
    while(true) {
      var child__11374 = c__11372 == null ? null : cljs.core.map_QMARK_.call(null, c__11372) ? function() {
        throw"Maps cannot be used as content";
      }() : cljs.core.string_QMARK_.call(null, c__11372) ? goog.dom.createTextNode(c__11372) : cljs.core.vector_QMARK_.call(null, c__11372) ? crate.compiler.elem_factory.call(null, c__11372) : cljs.core.seq_QMARK_.call(null, c__11372) ? as_content.call(null, parent, c__11372) : cljs.core.truth_(crate.binding.binding_coll_QMARK_.call(null, c__11372)) ? function() {
        crate.compiler.capture_binding.call(null, "\ufdd0'coll", c__11372);
        return as_content.call(null, parent, cljs.core.PersistentVector.fromArray([crate.binding.value.call(null, c__11372)], true))
      }() : cljs.core.truth_(crate.binding.binding_QMARK_.call(null, c__11372)) ? function() {
        crate.compiler.capture_binding.call(null, "\ufdd0'text", c__11372);
        return as_content.call(null, parent, cljs.core.PersistentVector.fromArray([crate.binding.value.call(null, c__11372)], true))
      }() : cljs.core.truth_(c__11372.nodeName) ? c__11372 : cljs.core.truth_(c__11372.get) ? c__11372.get(0) : "\ufdd0'else" ? goog.dom.createTextNode([cljs.core.str(c__11372)].join("")) : null;
      if(cljs.core.truth_(child__11374)) {
        goog.dom.appendChild(parent, child__11374)
      }else {
      }
      var temp__3974__auto____11375 = cljs.core.next.call(null, G__11370__11373);
      if(temp__3974__auto____11375) {
        var G__11370__11376 = temp__3974__auto____11375;
        var G__11377 = cljs.core.first.call(null, G__11370__11376);
        var G__11378 = G__11370__11376;
        c__11372 = G__11377;
        G__11370__11373 = G__11378;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.compiler.dom_binding = function() {
  var method_table__2438__auto____11379 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  var prefer_table__2439__auto____11380 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  var method_cache__2440__auto____11381 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  var cached_hierarchy__2441__auto____11382 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  var hierarchy__2442__auto____11383 = cljs.core._lookup.call(null, cljs.core.ObjMap.EMPTY, "\ufdd0'hierarchy", cljs.core.global_hierarchy);
  return new cljs.core.MultiFn("dom-binding", function(type, _11384, _) {
    return type
  }, "\ufdd0'default", hierarchy__2442__auto____11383, method_table__2438__auto____11379, prefer_table__2439__auto____11380, method_cache__2440__auto____11381, cached_hierarchy__2441__auto____11382)
}();
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0'text", function(_, b, elem) {
  return crate.binding.on_change.call(null, b, function(v) {
    goog.dom.removeChildren(elem);
    return crate.compiler.as_content.call(null, elem, cljs.core.PersistentVector.fromArray([v], true))
  })
});
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0'attr", function(_, p__11385, elem) {
  var vec__11386__11387 = p__11385;
  var k__11388 = cljs.core.nth.call(null, vec__11386__11387, 0, null);
  var b__11389 = cljs.core.nth.call(null, vec__11386__11387, 1, null);
  return crate.binding.on_change.call(null, b__11389, function(v) {
    return crate.compiler.dom_attr.call(null, elem, k__11388, v)
  })
});
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0'style", function(_, p__11390, elem) {
  var vec__11391__11392 = p__11390;
  var k__11393 = cljs.core.nth.call(null, vec__11391__11392, 0, null);
  var b__11394 = cljs.core.nth.call(null, vec__11391__11392, 1, null);
  return crate.binding.on_change.call(null, b__11394, function(v) {
    if(cljs.core.truth_(k__11393)) {
      return crate.compiler.dom_style.call(null, elem, k__11393, v)
    }else {
      return crate.compiler.dom_style.call(null, elem, v)
    }
  })
});
crate.compiler.dom_add = function dom_add(bc, parent, elem, v) {
  var temp__3971__auto____11397 = crate.binding.opt.call(null, bc, "\ufdd0'add");
  if(cljs.core.truth_(temp__3971__auto____11397)) {
    var adder__11398 = temp__3971__auto____11397;
    return adder__11398.call(null, parent, elem, v)
  }else {
    return goog.dom.appendChild(parent, elem)
  }
};
crate.compiler.dom_remove = function dom_remove(bc, elem) {
  var temp__3971__auto____11401 = crate.binding.opt.call(null, bc, "\ufdd0'remove");
  if(cljs.core.truth_(temp__3971__auto____11401)) {
    var remover__11402 = temp__3971__auto____11401;
    return remover__11402.call(null, elem)
  }else {
    return goog.dom.removeNode(elem)
  }
};
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0'coll", function(_, bc, parent) {
  return crate.binding.on_change.call(null, bc, function(type, elem, v) {
    var pred__11403__11406 = cljs.core._EQ_;
    var expr__11404__11407 = type;
    if(pred__11403__11406.call(null, "\ufdd0'add", expr__11404__11407)) {
      return crate.compiler.dom_add.call(null, bc, parent, elem, v)
    }else {
      if(pred__11403__11406.call(null, "\ufdd0'remove", expr__11404__11407)) {
        return crate.compiler.dom_remove.call(null, bc, elem)
      }else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__11404__11407)].join(""));
      }
    }
  })
});
crate.compiler.handle_bindings = function handle_bindings(bs, elem) {
  var G__11427__11428 = cljs.core.seq.call(null, bs);
  if(G__11427__11428) {
    var G__11430__11432 = cljs.core.first.call(null, G__11427__11428);
    var vec__11431__11433 = G__11430__11432;
    var type__11434 = cljs.core.nth.call(null, vec__11431__11433, 0, null);
    var b__11435 = cljs.core.nth.call(null, vec__11431__11433, 1, null);
    var G__11427__11436 = G__11427__11428;
    var G__11430__11437 = G__11430__11432;
    var G__11427__11438 = G__11427__11436;
    while(true) {
      var vec__11439__11440 = G__11430__11437;
      var type__11441 = cljs.core.nth.call(null, vec__11439__11440, 0, null);
      var b__11442 = cljs.core.nth.call(null, vec__11439__11440, 1, null);
      var G__11427__11443 = G__11427__11438;
      crate.compiler.dom_binding.call(null, type__11441, b__11442, elem);
      var temp__3974__auto____11444 = cljs.core.next.call(null, G__11427__11443);
      if(temp__3974__auto____11444) {
        var G__11427__11445 = temp__3974__auto____11444;
        var G__11446 = cljs.core.first.call(null, G__11427__11445);
        var G__11447 = G__11427__11445;
        G__11430__11437 = G__11446;
        G__11427__11438 = G__11447;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.compiler.dom_style = function() {
  var dom_style = null;
  var dom_style__2 = function(elem, v) {
    if(cljs.core.string_QMARK_.call(null, v)) {
      elem.setAttribute("style", v)
    }else {
      if(cljs.core.map_QMARK_.call(null, v)) {
        var G__11468__11469 = cljs.core.seq.call(null, v);
        if(G__11468__11469) {
          var G__11471__11473 = cljs.core.first.call(null, G__11468__11469);
          var vec__11472__11474 = G__11471__11473;
          var k__11475 = cljs.core.nth.call(null, vec__11472__11474, 0, null);
          var v__11476 = cljs.core.nth.call(null, vec__11472__11474, 1, null);
          var G__11468__11477 = G__11468__11469;
          var G__11471__11478 = G__11471__11473;
          var G__11468__11479 = G__11468__11477;
          while(true) {
            var vec__11480__11481 = G__11471__11478;
            var k__11482 = cljs.core.nth.call(null, vec__11480__11481, 0, null);
            var v__11483 = cljs.core.nth.call(null, vec__11480__11481, 1, null);
            var G__11468__11484 = G__11468__11479;
            dom_style.call(null, elem, k__11482, v__11483);
            var temp__3974__auto____11485 = cljs.core.next.call(null, G__11468__11484);
            if(temp__3974__auto____11485) {
              var G__11468__11486 = temp__3974__auto____11485;
              var G__11488 = cljs.core.first.call(null, G__11468__11486);
              var G__11489 = G__11468__11486;
              G__11471__11478 = G__11488;
              G__11468__11479 = G__11489;
              continue
            }else {
            }
            break
          }
        }else {
        }
      }else {
        if(cljs.core.truth_(crate.binding.binding_QMARK_.call(null, v))) {
          crate.compiler.capture_binding.call(null, "\ufdd0'style", cljs.core.PersistentVector.fromArray([null, v], true));
          dom_style.call(null, elem, crate.binding.value.call(null, v))
        }else {
        }
      }
    }
    return elem
  };
  var dom_style__3 = function(elem, k, v) {
    var v__11487 = cljs.core.truth_(crate.binding.binding_QMARK_.call(null, v)) ? function() {
      crate.compiler.capture_binding.call(null, "\ufdd0'style", cljs.core.PersistentVector.fromArray([k, v], true));
      return crate.binding.value.call(null, v)
    }() : v;
    return goog.style.setStyle(elem, cljs.core.name.call(null, k), v__11487)
  };
  dom_style = function(elem, k, v) {
    switch(arguments.length) {
      case 2:
        return dom_style__2.call(this, elem, k);
      case 3:
        return dom_style__3.call(this, elem, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dom_style.cljs$lang$arity$2 = dom_style__2;
  dom_style.cljs$lang$arity$3 = dom_style__3;
  return dom_style
}();
crate.compiler.dom_attr = function() {
  var dom_attr = null;
  var dom_attr__2 = function(elem, attrs) {
    if(cljs.core.truth_(elem)) {
      if(!cljs.core.map_QMARK_.call(null, attrs)) {
        return elem.getAttribute(cljs.core.name.call(null, attrs))
      }else {
        var G__11510__11511 = cljs.core.seq.call(null, attrs);
        if(G__11510__11511) {
          var G__11513__11515 = cljs.core.first.call(null, G__11510__11511);
          var vec__11514__11516 = G__11513__11515;
          var k__11517 = cljs.core.nth.call(null, vec__11514__11516, 0, null);
          var v__11518 = cljs.core.nth.call(null, vec__11514__11516, 1, null);
          var G__11510__11519 = G__11510__11511;
          var G__11513__11520 = G__11513__11515;
          var G__11510__11521 = G__11510__11519;
          while(true) {
            var vec__11522__11523 = G__11513__11520;
            var k__11524 = cljs.core.nth.call(null, vec__11522__11523, 0, null);
            var v__11525 = cljs.core.nth.call(null, vec__11522__11523, 1, null);
            var G__11510__11526 = G__11510__11521;
            dom_attr.call(null, elem, k__11524, v__11525);
            var temp__3974__auto____11527 = cljs.core.next.call(null, G__11510__11526);
            if(temp__3974__auto____11527) {
              var G__11510__11528 = temp__3974__auto____11527;
              var G__11530 = cljs.core.first.call(null, G__11510__11528);
              var G__11531 = G__11510__11528;
              G__11513__11520 = G__11530;
              G__11510__11521 = G__11531;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return elem
      }
    }else {
      return null
    }
  };
  var dom_attr__3 = function(elem, k, v) {
    if(cljs.core._EQ_.call(null, k, "\ufdd0'style")) {
      crate.compiler.dom_style.call(null, elem, v)
    }else {
      var v__11529 = cljs.core.truth_(crate.binding.binding_QMARK_.call(null, v)) ? function() {
        crate.compiler.capture_binding.call(null, "\ufdd0'attr", cljs.core.PersistentVector.fromArray([k, v], true));
        return crate.binding.value.call(null, v)
      }() : v;
      elem.setAttribute(cljs.core.name.call(null, k), v__11529)
    }
    return elem
  };
  dom_attr = function(elem, k, v) {
    switch(arguments.length) {
      case 2:
        return dom_attr__2.call(this, elem, k);
      case 3:
        return dom_attr__3.call(this, elem, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dom_attr.cljs$lang$arity$2 = dom_attr__2;
  dom_attr.cljs$lang$arity$3 = dom_attr__3;
  return dom_attr
}();
crate.compiler.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
crate.compiler.normalize_map_attrs = function normalize_map_attrs(map_attrs) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11538) {
    var vec__11539__11540 = p__11538;
    var n__11541 = cljs.core.nth.call(null, vec__11539__11540, 0, null);
    var v__11542 = cljs.core.nth.call(null, vec__11539__11540, 1, null);
    if(v__11542 === true) {
      return cljs.core.PersistentVector.fromArray([n__11541, cljs.core.name.call(null, n__11541)], true)
    }else {
      return cljs.core.PersistentVector.fromArray([n__11541, v__11542], true)
    }
  }, cljs.core.filter.call(null, cljs.core.comp.call(null, cljs.core.boolean$, cljs.core.second), map_attrs)))
};
crate.compiler.normalize_element = function normalize_element(p__11543) {
  var vec__11569__11570 = p__11543;
  var tag__11571 = cljs.core.nth.call(null, vec__11569__11570, 0, null);
  var content__11572 = cljs.core.nthnext.call(null, vec__11569__11570, 1);
  if(!function() {
    var or__3824__auto____11573 = cljs.core.keyword_QMARK_.call(null, tag__11571);
    if(or__3824__auto____11573) {
      return or__3824__auto____11573
    }else {
      var or__3824__auto____11574 = cljs.core.symbol_QMARK_.call(null, tag__11571);
      if(or__3824__auto____11574) {
        return or__3824__auto____11574
      }else {
        return cljs.core.string_QMARK_.call(null, tag__11571)
      }
    }
  }()) {
    throw[cljs.core.str(tag__11571), cljs.core.str(" is not a valid tag name.")].join("");
  }else {
  }
  var vec__11575__11577 = cljs.core.re_matches.call(null, crate.compiler.re_tag, cljs.core.name.call(null, tag__11571));
  var ___11578 = cljs.core.nth.call(null, vec__11575__11577, 0, null);
  var tag__11579 = cljs.core.nth.call(null, vec__11575__11577, 1, null);
  var id__11580 = cljs.core.nth.call(null, vec__11575__11577, 2, null);
  var class__11581 = cljs.core.nth.call(null, vec__11575__11577, 3, null);
  var vec__11576__11588 = function() {
    var vec__11582__11583 = clojure.string.split.call(null, tag__11579, /:/);
    var nsp__11584 = cljs.core.nth.call(null, vec__11582__11583, 0, null);
    var t__11585 = cljs.core.nth.call(null, vec__11582__11583, 1, null);
    var ns_xmlns__11586 = crate.compiler.xmlns.call(null, cljs.core.keyword.call(null, nsp__11584));
    if(cljs.core.truth_(t__11585)) {
      return cljs.core.PersistentVector.fromArray([function() {
        var or__3824__auto____11587 = ns_xmlns__11586;
        if(cljs.core.truth_(or__3824__auto____11587)) {
          return or__3824__auto____11587
        }else {
          return nsp__11584
        }
      }(), t__11585], true)
    }else {
      return cljs.core.PersistentVector.fromArray([(new cljs.core.Keyword("\ufdd0'xhtml")).call(null, crate.compiler.xmlns), nsp__11584], true)
    }
  }();
  var nsp__11589 = cljs.core.nth.call(null, vec__11576__11588, 0, null);
  var tag__11590 = cljs.core.nth.call(null, vec__11576__11588, 1, null);
  var tag_attrs__11592 = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.filter.call(null, function(p1__11532_SHARP_) {
    return!(cljs.core.second.call(null, p1__11532_SHARP_) == null)
  }, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":function() {
    var or__3824__auto____11591 = id__11580;
    if(cljs.core.truth_(or__3824__auto____11591)) {
      return or__3824__auto____11591
    }else {
      return null
    }
  }(), "\ufdd0'class":cljs.core.truth_(class__11581) ? clojure.string.replace.call(null, class__11581, /\./, " ") : null})));
  var map_attrs__11593 = cljs.core.first.call(null, content__11572);
  if(cljs.core.map_QMARK_.call(null, map_attrs__11593)) {
    return cljs.core.PersistentVector.fromArray([nsp__11589, tag__11590, cljs.core.merge.call(null, tag_attrs__11592, crate.compiler.normalize_map_attrs.call(null, map_attrs__11593)), cljs.core.next.call(null, content__11572)], true)
  }else {
    return cljs.core.PersistentVector.fromArray([nsp__11589, tag__11590, tag_attrs__11592, content__11572], true)
  }
};
crate.compiler.parse_content = function parse_content(elem, content) {
  var attrs__11595 = cljs.core.first.call(null, content);
  if(cljs.core.map_QMARK_.call(null, attrs__11595)) {
    crate.compiler.dom_attr.call(null, elem, attrs__11595);
    return cljs.core.rest.call(null, content)
  }else {
    return content
  }
};
crate.compiler.create_elem = cljs.core.truth_(document.createElementNS) ? function(nsp, tag) {
  return document.createElementNS(nsp, tag)
} : function(_, tag) {
  return document.createElement(tag)
};
crate.compiler.elem_factory = function elem_factory(tag_def) {
  var bindings11606__11607 = crate.compiler.bindings;
  try {
    crate.compiler.bindings = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
    var vec__11609__11610 = crate.compiler.normalize_element.call(null, tag_def);
    var nsp__11611 = cljs.core.nth.call(null, vec__11609__11610, 0, null);
    var tag__11612 = cljs.core.nth.call(null, vec__11609__11610, 1, null);
    var attrs__11613 = cljs.core.nth.call(null, vec__11609__11610, 2, null);
    var content__11614 = cljs.core.nth.call(null, vec__11609__11610, 3, null);
    var elem__11615 = crate.compiler.create_elem.call(null, nsp__11611, tag__11612);
    crate.compiler.dom_attr.call(null, elem__11615, attrs__11613);
    crate.compiler.as_content.call(null, elem__11615, content__11614);
    crate.compiler.handle_bindings.call(null, cljs.core.deref.call(null, crate.compiler.bindings), elem__11615);
    return elem__11615
  }finally {
    crate.compiler.bindings = bindings11606__11607
  }
};
crate.compiler.add_optional_attrs = function add_optional_attrs(func) {
  return function() {
    var G__11624__delegate = function(args) {
      if(cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, args))) {
        var vec__11620__11621 = cljs.core.apply.call(null, func, cljs.core.rest.call(null, args));
        var tag__11622 = cljs.core.nth.call(null, vec__11620__11621, 0, null);
        var body__11623 = cljs.core.nthnext.call(null, vec__11620__11621, 1);
        if(cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, body__11623))) {
          return cljs.core.apply.call(null, cljs.core.vector, tag__11622, cljs.core.merge.call(null, cljs.core.first.call(null, body__11623), cljs.core.first.call(null, args)), cljs.core.rest.call(null, body__11623))
        }else {
          return cljs.core.apply.call(null, cljs.core.vector, tag__11622, cljs.core.first.call(null, args), body__11623)
        }
      }else {
        return cljs.core.apply.call(null, func, args)
      }
    };
    var G__11624 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__11624__delegate.call(this, args)
    };
    G__11624.cljs$lang$maxFixedArity = 0;
    G__11624.cljs$lang$applyTo = function(arglist__11625) {
      var args = cljs.core.seq(arglist__11625);
      return G__11624__delegate(args)
    };
    G__11624.cljs$lang$arity$variadic = G__11624__delegate;
    return G__11624
  }()
};
goog.provide("crate.core");
goog.require("cljs.core");
goog.require("crate.util");
goog.require("crate.compiler");
crate.core.group_id = cljs.core.atom.call(null, 0);
crate.core.html = function() {
  var html__delegate = function(tags) {
    var res__11361 = cljs.core.map.call(null, crate.compiler.elem_factory, tags);
    if(cljs.core.truth_(cljs.core.second.call(null, res__11361))) {
      return res__11361
    }else {
      return cljs.core.first.call(null, res__11361)
    }
  };
  var html = function(var_args) {
    var tags = null;
    if(goog.isDef(var_args)) {
      tags = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return html__delegate.call(this, tags)
  };
  html.cljs$lang$maxFixedArity = 0;
  html.cljs$lang$applyTo = function(arglist__11362) {
    var tags = cljs.core.seq(arglist__11362);
    return html__delegate(tags)
  };
  html.cljs$lang$arity$variadic = html__delegate;
  return html
}();
crate.core.h = crate.util.escape_html;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("&")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    var type = el.type.toLowerCase();
    switch(type) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "=" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, opt_value);
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, opt_value);
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, opt_value);
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
var array_p, explode_p, ignore_p, key_prefix, map_p, namespace_tag, number_p, p, re_svg_tags, re_tag, re_whitespace, string_p, unify_p, whitespace_node_p, xmlns, __hasProp = {}.hasOwnProperty;
goog.require("goog.string");
goog.provide("singult.coffee");
goog.provide("singult.coffee.Unify");
goog.provide("singult.coffee.Ignore");
p = function(x) {
  console.log(x);
  return x
};
re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
re_svg_tags = /^(svg|g|rect|circle|clipPath|path|line|polygon|polyline|text|textPath)$/;
re_whitespace = /^\s+$/;
key_prefix = "\x00";
xmlns = {xhtml:"http://www.w3.org/1999/xhtml", svg:"http://www.w3.org/2000/svg"};
namespace_tag = function(tag_str) {
  var nsp, tag, _ref;
  _ref = tag_str.split(":"), nsp = _ref[0], tag = _ref[1];
  if(tag != null) {
    return[xmlns[nsp] || nsp, tag]
  }else {
    if(tag_str.match(re_svg_tags)) {
      return[xmlns.svg, tag_str]
    }else {
      return[xmlns.xhtml, tag_str]
    }
  }
};
explode_p = function(v) {
  return v[0] === ":*:"
};
unify_p = function(x) {
  return x != null && x instanceof singult.coffee.Unify
};
ignore_p = function(x) {
  return x != null && x instanceof singult.coffee.Ignore
};
array_p = function(x) {
  return x != null && x.forEach != null
};
map_p = function(x) {
  return x != null && !array_p(x) && !unify_p(x) && !ignore_p(x) && x instanceof Object
};
string_p = function(x) {
  return x != null && x.substring != null
};
number_p = function(x) {
  return x != null && x.toFixed != null
};
whitespace_node_p = function($n) {
  return $n.nodeType === 8 || $n.nodeType === 3 && $n.textContent.match(re_whitespace)
};
singult.coffee.style = function($e, m) {
  var k, v, _results;
  _results = [];
  for(k in m) {
    if(!__hasProp.call(m, k)) {
      continue
    }
    v = m[k];
    _results.push($e.style[goog.string.toCamelCase(k)] = v)
  }
  return _results
};
singult.coffee.properties = function($e, m) {
  var prop, v, _results;
  _results = [];
  for(prop in m) {
    if(!__hasProp.call(m, prop)) {
      continue
    }
    v = m[prop];
    _results.push($e[prop] = v)
  }
  return _results
};
singult.coffee.attr = function($e, attr_map) {
  var k, v, _results;
  if(attr_map["style"] != null) {
    singult.coffee.style($e, attr_map["style"]);
    delete attr_map["style"]
  }
  if(attr_map["properties"] != null) {
    singult.coffee.properties($e, attr_map["properties"]);
    delete attr_map["properties"]
  }
  if(array_p(attr_map["class"])) {
    $e.setAttribute("class", attr_map["class"].join(" "));
    delete attr_map["class"]
  }
  _results = [];
  for(k in attr_map) {
    if(!__hasProp.call(attr_map, k)) {
      continue
    }
    v = attr_map[k];
    if(v != null) {
      _results.push($e.setAttribute(k, v))
    }else {
      _results.push($e.removeAttribute(k))
    }
  }
  return _results
};
singult.coffee.node_data = function($e, d) {
  if(d != null) {
    return $e["__singult_data__"] = d
  }else {
    return $e["__singult_data__"]
  }
};
singult.coffee.canonicalize = function(x) {
  if(number_p(x)) {
    return x.toString()
  }else {
    if(array_p(x)) {
      return singult.coffee.canonicalize_hiccup(x)
    }else {
      return x
    }
  }
};
singult.coffee.canonicalize_hiccup = function(v) {
  var abbreviated_classes, attr, canonical, canonical_children, children, cls_str, id, nsp, tag, tag_str, _, _ref, _ref1, _ref2;
  tag = v[0];
  _ref = map_p(v[1]) ? [v[1], v.slice(2)] : [{}, v.slice(1)], attr = _ref[0], children = _ref[1];
  _ref1 = tag.match(re_tag), _ = _ref1[0], tag_str = _ref1[1], id = _ref1[2], cls_str = _ref1[3];
  if(id != null) {
    attr["id"] = id
  }
  if(cls_str != null) {
    abbreviated_classes = cls_str.split(".");
    if(array_p(attr["class"])) {
      attr["class"] = attr["class"].concat(abbreviated_classes)
    }else {
      if(string_p(attr["class"])) {
        attr["class"] = abbreviated_classes.concat([attr["class"]])
      }else {
        if(!(attr["class"] != null)) {
          attr["class"] = abbreviated_classes
        }
      }
    }
  }
  _ref2 = namespace_tag(tag_str), nsp = _ref2[0], tag = _ref2[1];
  canonical_children = [];
  children.forEach(function(v) {
    if(v != null) {
      if(explode_p(v)) {
        return v.slice(1).forEach(function(v) {
          return canonical_children.push(singult.coffee.canonicalize(v))
        })
      }else {
        return canonical_children.push(singult.coffee.canonicalize(v))
      }
    }
  });
  canonical = {nsp:nsp, tag:tag, attr:attr, children:canonical_children};
  return canonical
};
singult.coffee.render = function(m) {
  var $e, c;
  if(unify_p(m)) {
    throw new Error("Unify must be the first and only child of its parent.");
  }else {
    if(ignore_p(m)) {
      return null
    }else {
      if(string_p(m)) {
        return document.createTextNode(m)
      }else {
        $e = document.createElementNS(m.nsp, m.tag);
        singult.coffee.attr($e, m.attr);
        if(unify_p(c = m.children[0])) {
          if(c.enter != null) {
            c.data.forEach(function(d) {
              var $el;
              $el = c.enter(d);
              singult.coffee.node_data($el, d);
              return $e.appendChild($el)
            })
          }else {
            c.data.forEach(function(d) {
              var $el;
              $el = singult.coffee.render(singult.coffee.canonicalize(c.mapping(d)));
              singult.coffee.node_data($el, d);
              return $e.appendChild($el)
            })
          }
        }else {
          m.children.forEach(function(c) {
            var $c;
            $c = singult.coffee.render(c);
            if($c != null) {
              return $e.appendChild($c)
            }
          })
        }
        return $e
      }
    }
  }
};
singult.coffee.Unify = function(data, mapping, key_fn, enter, update, exit, force_update_p) {
  this.data = data;
  this.mapping = mapping;
  this.key_fn = key_fn;
  this.enter = enter;
  this.update = update;
  this.exit = exit;
  this.force_update_p = force_update_p;
  return this
};
singult.coffee.Ignore = function() {
  return this
};
singult.coffee.unify_ = function($container, u) {
  var $n, $nodes, enter, exit, i, key, key_fn, nodes_by_key, update, _;
  enter = u.enter || function(d) {
    var $el;
    $el = singult.coffee.render(singult.coffee.canonicalize(u.mapping(d)));
    $container.appendChild($el);
    return $el
  };
  update = u.update || function($n, d) {
    return singult.coffee.merge($n, singult.coffee.canonicalize(u.mapping(d)))
  };
  exit = u.exit || function($n) {
    return $container.removeChild($n)
  };
  key_fn = u.key_fn || function(d, idx) {
    return idx
  };
  $nodes = $container.childNodes;
  nodes_by_key = {};
  i = 0;
  while(i < $nodes.length) {
    key = key_prefix + key_fn(singult.coffee.node_data($nodes[i]), i);
    nodes_by_key[key] = $nodes[i];
    i += 1
  }
  u.data.forEach(function(d, i) {
    var $el, $n, identical_data_p, old_data;
    key = key_prefix + key_fn(d, i);
    if($n = nodes_by_key[key]) {
      if(u.force_update_p) {
        $el = update($n, d);
        singult.coffee.node_data($el, d)
      }else {
        old_data = singult.coffee.node_data($n);
        identical_data_p = old_data.cljs$core$IEquiv$_equiv$arity$2 != null ? old_data.cljs$core$IEquiv$_equiv$arity$2(old_data, d) : old_data === d;
        if(!identical_data_p) {
          $el = update($n, d);
          singult.coffee.node_data($el, d)
        }
      }
      return delete nodes_by_key[key]
    }else {
      $el = enter(d);
      return singult.coffee.node_data($el, d)
    }
  });
  for(_ in nodes_by_key) {
    $n = nodes_by_key[_];
    exit($n)
  }
  return null
};
singult.coffee.merge = function($e, m) {
  var $c, c, i, _i, _j, _ref, _ref1;
  if(unify_p(m)) {
    singult.coffee.unify_($e, m)
  }else {
    if(ignore_p(m)) {
    }else {
      if($e.nodeName.toLowerCase() !== m.tag.toLowerCase()) {
        p($e);
        p(m);
        throw new Error("Cannot merge $e into node of different type");
      }
      singult.coffee.attr($e, m.attr);
      if($e.hasChildNodes()) {
        for(i = _i = _ref = $e.childNodes.length - 1;_ref <= 0 ? _i <= 0 : _i >= 0;i = _ref <= 0 ? ++_i : --_i) {
          $c = $e.childNodes[i];
          if(whitespace_node_p($c)) {
            $e.removeChild($c)
          }
        }
      }
      if(unify_p(m.children[0])) {
        singult.coffee.merge($e, m.children[0])
      }else {
        if($e.childNodes.length > m.children.length) {
          for(i = _j = _ref1 = $e.childNodes.length - 1;_ref1 <= 0 ? _j <= 0 : _j >= 0;i = _ref1 <= 0 ? ++_j : --_j) {
            $e.removeChild($e.childNodes[i])
          }
        }
        i = 0;
        while(i < m.children.length) {
          c = m.children[i] || "";
          $c = $e.childNodes[i];
          if(string_p(c)) {
            if($c != null) {
              $c.textContent = c
            }else {
              $e.appendChild(document.createTextNode(c))
            }
          }else {
            if(ignore_p(c)) {
            }else {
              if(map_p(c)) {
                if($c != null) {
                  singult.coffee.merge($c, c)
                }else {
                  $e.appendChild(singult.coffee.render(c))
                }
              }else {
                p($c);
                p(c);
                throw new Error("Cannot merge children");
              }
            }
          }
          i += 1
        }
      }
    }
  }
  return $e
};
goog.provide("singult.core");
goog.require("cljs.core");
goog.require("singult.coffee");
singult.core.Unify = function(data, mapping, key_fn, enter, update, exit, force_update_QMARK_, __meta, __extmap) {
  this.data = data;
  this.mapping = mapping;
  this.key_fn = key_fn;
  this.enter = enter;
  this.update = update;
  this.exit = exit;
  this.force_update_QMARK_ = force_update_QMARK_;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054858;
  if(arguments.length > 7) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
singult.core.Unify.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__14941 = this;
  var h__2093__auto____14942 = this__14941.__hash;
  if(!(h__2093__auto____14942 == null)) {
    return h__2093__auto____14942
  }else {
    var h__2093__auto____14943 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__14941.__hash = h__2093__auto____14943;
    return h__2093__auto____14943
  }
};
singult.core.Unify.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__14944 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
singult.core.Unify.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k14939, else__2227__auto__) {
  var this__14945 = this;
  if(k14939 === "\ufdd0'data") {
    return this__14945.data
  }else {
    if(k14939 === "\ufdd0'mapping") {
      return this__14945.mapping
    }else {
      if(k14939 === "\ufdd0'key-fn") {
        return this__14945.key_fn
      }else {
        if(k14939 === "\ufdd0'enter") {
          return this__14945.enter
        }else {
          if(k14939 === "\ufdd0'update") {
            return this__14945.update
          }else {
            if(k14939 === "\ufdd0'exit") {
              return this__14945.exit
            }else {
              if(k14939 === "\ufdd0'force-update?") {
                return this__14945.force_update_QMARK_
              }else {
                if("\ufdd0'else") {
                  return cljs.core._lookup.call(null, this__14945.__extmap, k14939, else__2227__auto__)
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
singult.core.Unify.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__14938) {
  var this__14946 = this;
  var pred__14947__14950 = cljs.core.identical_QMARK_;
  var expr__14948__14951 = k__2232__auto__;
  if(pred__14947__14950.call(null, "\ufdd0'data", expr__14948__14951)) {
    return new singult.core.Unify(G__14938, this__14946.mapping, this__14946.key_fn, this__14946.enter, this__14946.update, this__14946.exit, this__14946.force_update_QMARK_, this__14946.__meta, this__14946.__extmap, null)
  }else {
    if(pred__14947__14950.call(null, "\ufdd0'mapping", expr__14948__14951)) {
      return new singult.core.Unify(this__14946.data, G__14938, this__14946.key_fn, this__14946.enter, this__14946.update, this__14946.exit, this__14946.force_update_QMARK_, this__14946.__meta, this__14946.__extmap, null)
    }else {
      if(pred__14947__14950.call(null, "\ufdd0'key-fn", expr__14948__14951)) {
        return new singult.core.Unify(this__14946.data, this__14946.mapping, G__14938, this__14946.enter, this__14946.update, this__14946.exit, this__14946.force_update_QMARK_, this__14946.__meta, this__14946.__extmap, null)
      }else {
        if(pred__14947__14950.call(null, "\ufdd0'enter", expr__14948__14951)) {
          return new singult.core.Unify(this__14946.data, this__14946.mapping, this__14946.key_fn, G__14938, this__14946.update, this__14946.exit, this__14946.force_update_QMARK_, this__14946.__meta, this__14946.__extmap, null)
        }else {
          if(pred__14947__14950.call(null, "\ufdd0'update", expr__14948__14951)) {
            return new singult.core.Unify(this__14946.data, this__14946.mapping, this__14946.key_fn, this__14946.enter, G__14938, this__14946.exit, this__14946.force_update_QMARK_, this__14946.__meta, this__14946.__extmap, null)
          }else {
            if(pred__14947__14950.call(null, "\ufdd0'exit", expr__14948__14951)) {
              return new singult.core.Unify(this__14946.data, this__14946.mapping, this__14946.key_fn, this__14946.enter, this__14946.update, G__14938, this__14946.force_update_QMARK_, this__14946.__meta, this__14946.__extmap, null)
            }else {
              if(pred__14947__14950.call(null, "\ufdd0'force-update?", expr__14948__14951)) {
                return new singult.core.Unify(this__14946.data, this__14946.mapping, this__14946.key_fn, this__14946.enter, this__14946.update, this__14946.exit, G__14938, this__14946.__meta, this__14946.__extmap, null)
              }else {
                return new singult.core.Unify(this__14946.data, this__14946.mapping, this__14946.key_fn, this__14946.enter, this__14946.update, this__14946.exit, this__14946.force_update_QMARK_, this__14946.__meta, cljs.core.assoc.call(null, this__14946.__extmap, k__2232__auto__, G__14938), null)
              }
            }
          }
        }
      }
    }
  }
};
singult.core.Unify.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__14952 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
singult.core.Unify.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__14953 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'data", this__14953.data), cljs.core.vector.call(null, "\ufdd0'mapping", this__14953.mapping), cljs.core.vector.call(null, "\ufdd0'key-fn", this__14953.key_fn), cljs.core.vector.call(null, "\ufdd0'enter", this__14953.enter), cljs.core.vector.call(null, "\ufdd0'update", this__14953.update), cljs.core.vector.call(null, "\ufdd0'exit", this__14953.exit), cljs.core.vector.call(null, 
  "\ufdd0'force-update?", this__14953.force_update_QMARK_)], true), this__14953.__extmap))
};
singult.core.Unify.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__14954 = this;
  var pr_pair__2240__auto____14955 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____14955, [cljs.core.str("#"), cljs.core.str("Unify"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'data", this__14954.data), cljs.core.vector.call(null, "\ufdd0'mapping", this__14954.mapping), cljs.core.vector.call(null, "\ufdd0'key-fn", this__14954.key_fn), cljs.core.vector.call(null, "\ufdd0'enter", this__14954.enter), 
  cljs.core.vector.call(null, "\ufdd0'update", this__14954.update), cljs.core.vector.call(null, "\ufdd0'exit", this__14954.exit), cljs.core.vector.call(null, "\ufdd0'force-update?", this__14954.force_update_QMARK_)], true), this__14954.__extmap))
};
singult.core.Unify.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__14956 = this;
  return 7 + cljs.core.count.call(null, this__14956.__extmap)
};
singult.core.Unify.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__14957 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____14958 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____14958)) {
      var and__3822__auto____14959 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____14959) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____14959
      }
    }else {
      return and__3822__auto____14958
    }
  }())) {
    return true
  }else {
    return false
  }
};
singult.core.Unify.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__14938) {
  var this__14960 = this;
  return new singult.core.Unify(this__14960.data, this__14960.mapping, this__14960.key_fn, this__14960.enter, this__14960.update, this__14960.exit, this__14960.force_update_QMARK_, G__14938, this__14960.__extmap, this__14960.__hash)
};
singult.core.Unify.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__14961 = this;
  return this__14961.__meta
};
singult.core.Unify.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__14962 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'data", "\ufdd0'force-update?", "\ufdd0'enter", "\ufdd0'exit", "\ufdd0'key-fn", "\ufdd0'update", "\ufdd0'mapping"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__14962.__meta), k__2234__auto__)
  }else {
    return new singult.core.Unify(this__14962.data, this__14962.mapping, this__14962.key_fn, this__14962.enter, this__14962.update, this__14962.exit, this__14962.force_update_QMARK_, this__14962.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__14962.__extmap, k__2234__auto__)), null)
  }
};
singult.core.Unify.cljs$lang$type = true;
singult.core.Unify.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "singult.core/Unify")
};
singult.core.__GT_Unify = function __GT_Unify(data, mapping, key_fn, enter, update, exit, force_update_QMARK_) {
  return new singult.core.Unify(data, mapping, key_fn, enter, update, exit, force_update_QMARK_)
};
singult.core.map__GT_Unify = function map__GT_Unify(G__14940) {
  return new singult.core.Unify((new cljs.core.Keyword("\ufdd0'data")).call(null, G__14940), (new cljs.core.Keyword("\ufdd0'mapping")).call(null, G__14940), (new cljs.core.Keyword("\ufdd0'key-fn")).call(null, G__14940), (new cljs.core.Keyword("\ufdd0'enter")).call(null, G__14940), (new cljs.core.Keyword("\ufdd0'update")).call(null, G__14940), (new cljs.core.Keyword("\ufdd0'exit")).call(null, G__14940), (new cljs.core.Keyword("\ufdd0'force-update?")).call(null, G__14940), null, cljs.core.dissoc.call(null, 
  G__14940, "\ufdd0'data", "\ufdd0'mapping", "\ufdd0'key-fn", "\ufdd0'enter", "\ufdd0'update", "\ufdd0'exit", "\ufdd0'force-update?"))
};
singult.core.Unify;
singult.core.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.instance_QMARK_.call(null, singult.core.Unify, x)) {
    var map__15016__15017 = x;
    var map__15016__15018 = cljs.core.seq_QMARK_.call(null, map__15016__15017) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15016__15017) : map__15016__15017;
    var force_update_QMARK___15019 = cljs.core._lookup.call(null, map__15016__15018, "\ufdd0'force-update?", null);
    var exit__15020 = cljs.core._lookup.call(null, map__15016__15018, "\ufdd0'exit", null);
    var update__15021 = cljs.core._lookup.call(null, map__15016__15018, "\ufdd0'update", null);
    var enter__15022 = cljs.core._lookup.call(null, map__15016__15018, "\ufdd0'enter", null);
    var key_fn__15023 = cljs.core._lookup.call(null, map__15016__15018, "\ufdd0'key-fn", null);
    var mapping__15024 = cljs.core._lookup.call(null, map__15016__15018, "\ufdd0'mapping", null);
    var data__15025 = cljs.core._lookup.call(null, map__15016__15018, "\ufdd0'data", null);
    var data_arr__15033 = function() {
      var a__15026 = [];
      var G__15027__15028 = cljs.core.seq.call(null, data__15025);
      if(G__15027__15028) {
        var d__15029 = cljs.core.first.call(null, G__15027__15028);
        var G__15027__15030 = G__15027__15028;
        while(true) {
          a__15026.push(d__15029);
          var temp__3974__auto____15031 = cljs.core.next.call(null, G__15027__15030);
          if(temp__3974__auto____15031) {
            var G__15027__15032 = temp__3974__auto____15031;
            var G__15069 = cljs.core.first.call(null, G__15027__15032);
            var G__15070 = G__15027__15032;
            d__15029 = G__15069;
            G__15027__15030 = G__15070;
            continue
          }else {
          }
          break
        }
      }else {
      }
      return a__15026
    }();
    return new singult.coffee.Unify(data_arr__15033, function(p1__14937_SHARP_) {
      return clj__GT_js.call(null, mapping__15024.call(null, p1__14937_SHARP_))
    }, key_fn__15023, enter__15022, update__15021, exit__15020, force_update_QMARK___15019)
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        var o__15034 = {};
        var G__15035__15036 = cljs.core.seq.call(null, x);
        if(G__15035__15036) {
          var G__15038__15040 = cljs.core.first.call(null, G__15035__15036);
          var vec__15039__15041 = G__15038__15040;
          var k__15042 = cljs.core.nth.call(null, vec__15039__15041, 0, null);
          var v__15043 = cljs.core.nth.call(null, vec__15039__15041, 1, null);
          var G__15035__15044 = G__15035__15036;
          var G__15038__15045 = G__15038__15040;
          var G__15035__15046 = G__15035__15044;
          while(true) {
            var vec__15047__15048 = G__15038__15045;
            var k__15049 = cljs.core.nth.call(null, vec__15047__15048, 0, null);
            var v__15050 = cljs.core.nth.call(null, vec__15047__15048, 1, null);
            var G__15035__15051 = G__15035__15046;
            var key__15052 = clj__GT_js.call(null, k__15049);
            if(cljs.core.string_QMARK_.call(null, key__15052)) {
            }else {
              throw"Cannot convert; JavaScript map keys must be strings";
            }
            o__15034[key__15052] = clj__GT_js.call(null, v__15050);
            var temp__3974__auto____15053 = cljs.core.next.call(null, G__15035__15051);
            if(temp__3974__auto____15053) {
              var G__15035__15054 = temp__3974__auto____15053;
              var G__15071 = cljs.core.first.call(null, G__15035__15054);
              var G__15072 = G__15035__15054;
              G__15038__15045 = G__15071;
              G__15035__15046 = G__15072;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return o__15034
      }else {
        if(cljs.core.seq_QMARK_.call(null, x)) {
          var a__15055 = [];
          a__15055.push(":*:");
          var G__15056__15057 = cljs.core.seq.call(null, x);
          if(G__15056__15057) {
            var item__15058 = cljs.core.first.call(null, G__15056__15057);
            var G__15056__15059 = G__15056__15057;
            while(true) {
              a__15055.push(clj__GT_js.call(null, item__15058));
              var temp__3974__auto____15060 = cljs.core.next.call(null, G__15056__15059);
              if(temp__3974__auto____15060) {
                var G__15056__15061 = temp__3974__auto____15060;
                var G__15073 = cljs.core.first.call(null, G__15056__15061);
                var G__15074 = G__15056__15061;
                item__15058 = G__15073;
                G__15056__15059 = G__15074;
                continue
              }else {
              }
              break
            }
          }else {
          }
          return a__15055
        }else {
          if(cljs.core.coll_QMARK_.call(null, x)) {
            var a__15062 = [];
            var G__15063__15064 = cljs.core.seq.call(null, x);
            if(G__15063__15064) {
              var item__15065 = cljs.core.first.call(null, G__15063__15064);
              var G__15063__15066 = G__15063__15064;
              while(true) {
                a__15062.push(clj__GT_js.call(null, item__15065));
                var temp__3974__auto____15067 = cljs.core.next.call(null, G__15063__15066);
                if(temp__3974__auto____15067) {
                  var G__15063__15068 = temp__3974__auto____15067;
                  var G__15075 = cljs.core.first.call(null, G__15063__15068);
                  var G__15076 = G__15063__15068;
                  item__15065 = G__15075;
                  G__15063__15066 = G__15076;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return a__15062
          }else {
            if("\ufdd0'else") {
              return x
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
singult.core.node_data = singult.coffee.node_data;
singult.core.attr = function attr($n, m) {
  return singult.coffee.attr.call(null, $n, singult.core.clj__GT_js.call(null, m))
};
singult.core.render = function render(v) {
  return singult.coffee.render.call(null, singult.coffee.canonicalize.call(null, singult.core.clj__GT_js.call(null, v)))
};
singult.core.merge_BANG_ = function merge_BANG_($n, v) {
  if(v == null) {
    return null
  }else {
    return singult.coffee.merge.call(null, $n, singult.coffee.canonicalize.call(null, singult.core.clj__GT_js.call(null, v)))
  }
};
singult.core.unify = function() {
  var unify__delegate = function(data, mapping, p__15077) {
    var map__15086__15087 = p__15077;
    var map__15086__15088 = cljs.core.seq_QMARK_.call(null, map__15086__15087) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15086__15087) : map__15086__15087;
    var force_update_QMARK___15089 = cljs.core._lookup.call(null, map__15086__15088, "\ufdd0'force-update?", null);
    var exit__15090 = cljs.core._lookup.call(null, map__15086__15088, "\ufdd0'exit", null);
    var update__15091 = cljs.core._lookup.call(null, map__15086__15088, "\ufdd0'update", null);
    var enter__15092 = cljs.core._lookup.call(null, map__15086__15088, "\ufdd0'enter", null);
    var key_fn__15093 = cljs.core._lookup.call(null, map__15086__15088, "\ufdd0'key-fn", null);
    return new singult.core.Unify(data, mapping, key_fn__15093, enter__15092, update__15091, exit__15090, force_update_QMARK___15089)
  };
  var unify = function(data, mapping, var_args) {
    var p__15077 = null;
    if(goog.isDef(var_args)) {
      p__15077 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unify__delegate.call(this, data, mapping, p__15077)
  };
  unify.cljs$lang$maxFixedArity = 2;
  unify.cljs$lang$applyTo = function(arglist__15094) {
    var data = cljs.core.first(arglist__15094);
    var mapping = cljs.core.first(cljs.core.next(arglist__15094));
    var p__15077 = cljs.core.rest(cljs.core.next(arglist__15094));
    return unify__delegate(data, mapping, p__15077)
  };
  unify.cljs$lang$arity$variadic = unify__delegate;
  return unify
}();
singult.core.ignore = function ignore() {
  return new singult.coffee.Ignore
};
goog.provide("c2.dom");
goog.require("cljs.core");
goog.require("goog.style");
goog.require("goog.dom.classes");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("singult.core");
goog.require("clojure.string");
NodeList.prototype.cljs$core$ISeqable$ = true;
NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
HTMLCollection.prototype.cljs$core$ISeqable$ = true;
HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
Node.prototype.cljs$core$IHash$ = true;
Node.prototype.cljs$core$IHash$_hash$arity$1 = function(x) {
  return x
};
c2.dom.IDom = {};
c2.dom.__GT_dom = function __GT_dom(x) {
  if(function() {
    var and__3822__auto____15099 = x;
    if(and__3822__auto____15099) {
      return x.c2$dom$IDom$__GT_dom$arity$1
    }else {
      return and__3822__auto____15099
    }
  }()) {
    return x.c2$dom$IDom$__GT_dom$arity$1(x)
  }else {
    var x__2264__auto____15100 = x == null ? null : x;
    return function() {
      var or__3824__auto____15101 = c2.dom.__GT_dom[goog.typeOf(x__2264__auto____15100)];
      if(or__3824__auto____15101) {
        return or__3824__auto____15101
      }else {
        var or__3824__auto____15102 = c2.dom.__GT_dom["_"];
        if(or__3824__auto____15102) {
          return or__3824__auto____15102
        }else {
          throw cljs.core.missing_protocol.call(null, "IDom.->dom", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.PersistentVector.prototype.c2$dom$IDom$ = true;
cljs.core.PersistentVector.prototype.c2$dom$IDom$__GT_dom$arity$1 = function(v) {
  return singult.core.render.call(null, v)
};
Node.prototype.c2$dom$IDom$ = true;
Node.prototype.c2$dom$IDom$__GT_dom$arity$1 = function(node) {
  return node
};
c2.dom.IDom["string"] = true;
c2.dom.__GT_dom["string"] = function(selector) {
  return c2.dom.select.call(null, selector)
};
c2.dom.select = function() {
  var select = null;
  var select__1 = function(selector) {
    return document.querySelector(selector)
  };
  var select__2 = function(selector, container) {
    return c2.dom.__GT_dom.call(null, container).querySelector(selector)
  };
  select = function(selector, container) {
    switch(arguments.length) {
      case 1:
        return select__1.call(this, selector);
      case 2:
        return select__2.call(this, selector, container)
    }
    throw"Invalid arity: " + arguments.length;
  };
  select.cljs$lang$arity$1 = select__1;
  select.cljs$lang$arity$2 = select__2;
  return select
}();
c2.dom.select_all = function() {
  var select_all = null;
  var select_all__1 = function(selector) {
    return document.querySelectorAll(selector)
  };
  var select_all__2 = function(selector, container) {
    return c2.dom.__GT_dom.call(null, container).querySelectorAll(selector)
  };
  select_all = function(selector, container) {
    switch(arguments.length) {
      case 1:
        return select_all__1.call(this, selector);
      case 2:
        return select_all__2.call(this, selector, container)
    }
    throw"Invalid arity: " + arguments.length;
  };
  select_all.cljs$lang$arity$1 = select_all__1;
  select_all.cljs$lang$arity$2 = select_all__2;
  return select_all
}();
c2.dom.matches_selector_QMARK_ = function matches_selector_QMARK_(node, selector) {
  return node.webkitMatchesSelector(selector)
};
c2.dom.children = function children(node) {
  return c2.dom.__GT_dom.call(null, node).children
};
c2.dom.parent = function parent(node) {
  return c2.dom.__GT_dom.call(null, node).parentNode
};
c2.dom.append_BANG_ = function append_BANG_(container, el) {
  var el__15104 = c2.dom.__GT_dom.call(null, el);
  goog.dom.appendChild(c2.dom.__GT_dom.call(null, container), el__15104);
  return el__15104
};
c2.dom.prepend_BANG_ = function prepend_BANG_(container, el) {
  var el__15106 = c2.dom.__GT_dom.call(null, el);
  goog.dom.insertChildAt(c2.dom.__GT_dom.call(null, container), el__15106, 0);
  return el__15106
};
c2.dom.remove_BANG_ = function remove_BANG_(el) {
  return goog.dom.removeNode(c2.dom.__GT_dom.call(null, el))
};
c2.dom.replace_BANG_ = function replace_BANG_(old, new$) {
  var new__15108 = c2.dom.__GT_dom.call(null, new$);
  goog.dom.replaceNode(new__15108, c2.dom.__GT_dom.call(null, old));
  return new__15108
};
c2.dom.style = function() {
  var style = null;
  var style__1 = function(el) {
    throw new Error("TODO: return map of element styles");
  };
  var style__2 = function(el, x) {
    var el__15141 = c2.dom.__GT_dom.call(null, el);
    try {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        var k__15166 = x;
        return goog.style.getComputedStyle(el__15141, cljs.core.name.call(null, k__15166))
      }else {
        if("\ufdd0'else") {
          throw 0;
        }else {
          return null
        }
      }
    }catch(e__7036__auto__) {
      if(e__7036__auto__ === 0) {
        try {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m__15146 = x;
            var G__15147__15148 = cljs.core.seq.call(null, m__15146);
            if(G__15147__15148) {
              var G__15150__15152 = cljs.core.first.call(null, G__15147__15148);
              var vec__15151__15153 = G__15150__15152;
              var k__15154 = cljs.core.nth.call(null, vec__15151__15153, 0, null);
              var v__15155 = cljs.core.nth.call(null, vec__15151__15153, 1, null);
              var G__15147__15156 = G__15147__15148;
              var G__15150__15157 = G__15150__15152;
              var G__15147__15158 = G__15147__15156;
              while(true) {
                var vec__15159__15160 = G__15150__15157;
                var k__15161 = cljs.core.nth.call(null, vec__15159__15160, 0, null);
                var v__15162 = cljs.core.nth.call(null, vec__15159__15160, 1, null);
                var G__15147__15163 = G__15147__15158;
                style.call(null, el__15141, k__15161, v__15162);
                var temp__3974__auto____15164 = cljs.core.next.call(null, G__15147__15163);
                if(temp__3974__auto____15164) {
                  var G__15147__15165 = temp__3974__auto____15164;
                  var G__15173 = cljs.core.first.call(null, G__15147__15165);
                  var G__15174 = G__15147__15165;
                  G__15150__15157 = G__15173;
                  G__15147__15158 = G__15174;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return el__15141
          }else {
            if("\ufdd0'else") {
              throw 0;
            }else {
              return null
            }
          }
        }catch(e__7036__auto__) {
          if(e__7036__auto__ === 0) {
            var G__15142__15145 = x;
            return null
          }else {
            throw e__7036__auto__;
          }
        }
      }else {
        throw e__7036__auto__;
      }
    }
  };
  var style__3 = function(el, k, v) {
    goog.style.setStyle(c2.dom.__GT_dom.call(null, el), cljs.core.name.call(null, k), function() {
      try {
        if(cljs.core.string_QMARK_.call(null, v)) {
          var s__15172 = v;
          return s__15172
        }else {
          if("\ufdd0'else") {
            throw 0;
          }else {
            return null
          }
        }
      }catch(e__7036__auto__) {
        if(e__7036__auto__ === 0) {
          try {
            if(cljs.core.number_QMARK_.call(null, v)) {
              var n__15171 = v;
              if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray(["\ufdd0'bottom", "\ufdd0'width", "\ufdd0'top", "\ufdd0'right", "\ufdd0'left", "\ufdd0'height"]).call(null, cljs.core.keyword.call(null, k)))) {
                return[cljs.core.str(n__15171), cljs.core.str("px")].join("")
              }else {
                return n__15171
              }
            }else {
              if("\ufdd0'else") {
                throw 0;
              }else {
                return null
              }
            }
          }catch(e__7036__auto__) {
            if(e__7036__auto__ === 0) {
              var G__15167__15170 = v;
              return null
            }else {
              throw e__7036__auto__;
            }
          }
        }else {
          throw e__7036__auto__;
        }
      }
    }());
    return el
  };
  style = function(el, k, v) {
    switch(arguments.length) {
      case 1:
        return style__1.call(this, el);
      case 2:
        return style__2.call(this, el, k);
      case 3:
        return style__3.call(this, el, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  style.cljs$lang$arity$1 = style__1;
  style.cljs$lang$arity$2 = style__2;
  style.cljs$lang$arity$3 = style__3;
  return style
}();
c2.dom.attr = function() {
  var attr = null;
  var attr__1 = function(el) {
    var attrs__15210 = c2.dom.__GT_dom.call(null, el).attributes;
    return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
      var iter__2363__auto____15217 = function iter__15211(s__15212) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__15212__15215 = s__15212;
          while(true) {
            if(cljs.core.seq.call(null, s__15212__15215)) {
              var i__15216 = cljs.core.first.call(null, s__15212__15215);
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, attrs__15210[i__15216].name), attrs__15210[i__15216].value], true), iter__15211.call(null, cljs.core.rest.call(null, s__15212__15215)))
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__2363__auto____15217.call(null, cljs.core.range.call(null, attrs__15210.length))
    }())
  };
  var attr__2 = function(el, x) {
    var el__15218 = c2.dom.__GT_dom.call(null, el);
    try {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        var k__15243 = x;
        return el__15218.getAttribute(cljs.core.name.call(null, k__15243))
      }else {
        if("\ufdd0'else") {
          throw 0;
        }else {
          return null
        }
      }
    }catch(e__7036__auto__) {
      if(e__7036__auto__ === 0) {
        try {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m__15223 = x;
            var G__15224__15225 = cljs.core.seq.call(null, m__15223);
            if(G__15224__15225) {
              var G__15227__15229 = cljs.core.first.call(null, G__15224__15225);
              var vec__15228__15230 = G__15227__15229;
              var k__15231 = cljs.core.nth.call(null, vec__15228__15230, 0, null);
              var v__15232 = cljs.core.nth.call(null, vec__15228__15230, 1, null);
              var G__15224__15233 = G__15224__15225;
              var G__15227__15234 = G__15227__15229;
              var G__15224__15235 = G__15224__15233;
              while(true) {
                var vec__15236__15237 = G__15227__15234;
                var k__15238 = cljs.core.nth.call(null, vec__15236__15237, 0, null);
                var v__15239 = cljs.core.nth.call(null, vec__15236__15237, 1, null);
                var G__15224__15240 = G__15224__15235;
                attr.call(null, el__15218, k__15238, v__15239);
                var temp__3974__auto____15241 = cljs.core.next.call(null, G__15224__15240);
                if(temp__3974__auto____15241) {
                  var G__15224__15242 = temp__3974__auto____15241;
                  var G__15245 = cljs.core.first.call(null, G__15224__15242);
                  var G__15246 = G__15224__15242;
                  G__15227__15234 = G__15245;
                  G__15224__15235 = G__15246;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return el__15218
          }else {
            if("\ufdd0'else") {
              throw 0;
            }else {
              return null
            }
          }
        }catch(e__7036__auto__) {
          if(e__7036__auto__ === 0) {
            var G__15219__15222 = x;
            return null
          }else {
            throw e__7036__auto__;
          }
        }
      }else {
        throw e__7036__auto__;
      }
    }
  };
  var attr__3 = function(el, k, v) {
    var el__15244 = c2.dom.__GT_dom.call(null, el);
    if(v == null) {
      el__15244.removeAttribute(cljs.core.name.call(null, k))
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0'style", k)) {
        c2.dom.style.call(null, el__15244, v)
      }else {
        el__15244.setAttribute(cljs.core.name.call(null, k), v)
      }
    }
    return el__15244
  };
  attr = function(el, k, v) {
    switch(arguments.length) {
      case 1:
        return attr__1.call(this, el);
      case 2:
        return attr__2.call(this, el, k);
      case 3:
        return attr__3.call(this, el, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  attr.cljs$lang$arity$1 = attr__1;
  attr.cljs$lang$arity$2 = attr__2;
  attr.cljs$lang$arity$3 = attr__3;
  return attr
}();
c2.dom.text = function() {
  var text = null;
  var text__1 = function(el) {
    return goog.dom.getTextContent(c2.dom.__GT_dom.call(null, el))
  };
  var text__2 = function(el, v) {
    var el__15248 = c2.dom.__GT_dom.call(null, el);
    goog.dom.setTextContent(el__15248, v);
    return el__15248
  };
  text = function(el, v) {
    switch(arguments.length) {
      case 1:
        return text__1.call(this, el);
      case 2:
        return text__2.call(this, el, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  text.cljs$lang$arity$1 = text__1;
  text.cljs$lang$arity$2 = text__2;
  return text
}();
c2.dom.val = function() {
  var val = null;
  var val__1 = function(el) {
    return goog.dom.forms.getValue(c2.dom.__GT_dom.call(null, el))
  };
  var val__2 = function(el, v) {
    var el__15250 = c2.dom.__GT_dom.call(null, el);
    goog.dom.forms.setValue(el__15250, v);
    return el__15250
  };
  val = function(el, v) {
    switch(arguments.length) {
      case 1:
        return val__1.call(this, el);
      case 2:
        return val__2.call(this, el, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  val.cljs$lang$arity$1 = val__1;
  val.cljs$lang$arity$2 = val__2;
  return val
}();
c2.dom.classed_BANG_ = function classed_BANG_(el, class$, classed_QMARK_) {
  return goog.dom.classes.enable(c2.dom.__GT_dom.call(null, el), cljs.core.name.call(null, class$), classed_QMARK_)
};
c2.dom.add_class_BANG_ = function add_class_BANG_(el, class$) {
  return c2.dom.classed_BANG_.call(null, el, class$, true)
};
c2.dom.remove_class_BANG_ = function remove_class_BANG_(el, class$) {
  return c2.dom.classed_BANG_.call(null, el, class$, false)
};
c2.dom.request_animation_frame = function() {
  var or__3824__auto____15252 = window.requestAnimationFrame;
  if(cljs.core.truth_(or__3824__auto____15252)) {
    return or__3824__auto____15252
  }else {
    var or__3824__auto____15253 = window.webkitRequestAnimationFrame;
    if(cljs.core.truth_(or__3824__auto____15253)) {
      return or__3824__auto____15253
    }else {
      return function(p1__15251_SHARP_) {
        return setTimeout(function() {
          return p1__15251_SHARP_.call(null)
        }, 10)
      }
    }
  }
}();
goog.provide("c2.util");
goog.require("cljs.core");
goog.require("singult.core");
c2.util.clj__GT_js = singult.core.clj__GT_js;
c2.util.__GT_coll = function __GT_coll(x) {
  if(cljs.core.coll_QMARK_.call(null, x)) {
    return x
  }else {
    return cljs.core.PersistentVector.fromArray([x], true)
  }
};
goog.provide("dubstep.pubsub");
goog.require("cljs.core");
dubstep.pubsub._STAR__BANG_channel_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
goog.provide("reflex.core");
goog.require("cljs.core");
reflex.core.capture_derefed = function capture_derefed(f) {
  var _BANG_recently_derefed15325__15326 = reflex.core._BANG_recently_derefed;
  try {
    reflex.core._BANG_recently_derefed = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY, "\ufdd0'meta", cljs.core.ObjMap.fromObject(["\ufdd0'no-deref-monitor"], {"\ufdd0'no-deref-monitor":true}));
    var res__15328 = f.call(null);
    return cljs.core.ObjMap.fromObject(["\ufdd0'res", "\ufdd0'derefed"], {"\ufdd0'res":res__15328, "\ufdd0'derefed":cljs.core.deref.call(null, reflex.core._BANG_recently_derefed)})
  }finally {
    reflex.core._BANG_recently_derefed = _BANG_recently_derefed15325__15326
  }
};
reflex.core.notify_deref_watcher_BANG_ = function notify_deref_watcher_BANG_(derefable) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____15330 = reflex.core._BANG_recently_derefed;
    if(cljs.core.truth_(and__3822__auto____15330)) {
      return cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'no-deref-monitor")).call(null, cljs.core.meta.call(null, derefable)))
    }else {
      return and__3822__auto____15330
    }
  }())) {
    return cljs.core.swap_BANG_.call(null, reflex.core._BANG_recently_derefed, function(p1__15320_SHARP_) {
      return cljs.core.conj.call(null, p1__15320_SHARP_, derefable)
    })
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IDeref$ = true;
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  reflex.core.notify_deref_watcher_BANG_.call(null, this$);
  return this$.state
};
reflex.core.IDisposable = {};
reflex.core.dispose_BANG_ = function dispose_BANG_(this$) {
  if(function() {
    var and__3822__auto____15335 = this$;
    if(and__3822__auto____15335) {
      return this$.reflex$core$IDisposable$dispose_BANG_$arity$1
    }else {
      return and__3822__auto____15335
    }
  }()) {
    return this$.reflex$core$IDisposable$dispose_BANG_$arity$1(this$)
  }else {
    var x__2264__auto____15336 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____15337 = reflex.core.dispose_BANG_[goog.typeOf(x__2264__auto____15336)];
      if(or__3824__auto____15337) {
        return or__3824__auto____15337
      }else {
        var or__3824__auto____15338 = reflex.core.dispose_BANG_["_"];
        if(or__3824__auto____15338) {
          return or__3824__auto____15338
        }else {
          throw cljs.core.missing_protocol.call(null, "IDisposable.dispose!", this$);
        }
      }
    }().call(null, this$)
  }
};
reflex.core.ComputedObservable = function(state, dirty_QMARK_, f, key, parent_watchables, watches, __meta, __extmap) {
  this.state = state;
  this.dirty_QMARK_ = dirty_QMARK_;
  this.f = f;
  this.key = key;
  this.parent_watchables = parent_watchables;
  this.watches = watches;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2766571274;
  if(arguments.length > 6) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__15342 = this;
  var h__2093__auto____15343 = this__15342.__hash;
  if(!(h__2093__auto____15343 == null)) {
    return h__2093__auto____15343
  }else {
    var h__2093__auto____15344 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__15342.__hash = h__2093__auto____15344;
    return h__2093__auto____15344
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__15345 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
reflex.core.ComputedObservable.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k15340, else__2227__auto__) {
  var this__15346 = this;
  if(k15340 === "\ufdd0'state") {
    return this__15346.state
  }else {
    if(k15340 === "\ufdd0'dirty?") {
      return this__15346.dirty_QMARK_
    }else {
      if(k15340 === "\ufdd0'f") {
        return this__15346.f
      }else {
        if(k15340 === "\ufdd0'key") {
          return this__15346.key
        }else {
          if(k15340 === "\ufdd0'parent-watchables") {
            return this__15346.parent_watchables
          }else {
            if(k15340 === "\ufdd0'watches") {
              return this__15346.watches
            }else {
              if("\ufdd0'else") {
                return cljs.core._lookup.call(null, this__15346.__extmap, k15340, else__2227__auto__)
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__15339) {
  var this__15347 = this;
  var pred__15348__15351 = cljs.core.identical_QMARK_;
  var expr__15349__15352 = k__2232__auto__;
  if(pred__15348__15351.call(null, "\ufdd0'state", expr__15349__15352)) {
    return new reflex.core.ComputedObservable(G__15339, this__15347.dirty_QMARK_, this__15347.f, this__15347.key, this__15347.parent_watchables, this__15347.watches, this__15347.__meta, this__15347.__extmap, null)
  }else {
    if(pred__15348__15351.call(null, "\ufdd0'dirty?", expr__15349__15352)) {
      return new reflex.core.ComputedObservable(this__15347.state, G__15339, this__15347.f, this__15347.key, this__15347.parent_watchables, this__15347.watches, this__15347.__meta, this__15347.__extmap, null)
    }else {
      if(pred__15348__15351.call(null, "\ufdd0'f", expr__15349__15352)) {
        return new reflex.core.ComputedObservable(this__15347.state, this__15347.dirty_QMARK_, G__15339, this__15347.key, this__15347.parent_watchables, this__15347.watches, this__15347.__meta, this__15347.__extmap, null)
      }else {
        if(pred__15348__15351.call(null, "\ufdd0'key", expr__15349__15352)) {
          return new reflex.core.ComputedObservable(this__15347.state, this__15347.dirty_QMARK_, this__15347.f, G__15339, this__15347.parent_watchables, this__15347.watches, this__15347.__meta, this__15347.__extmap, null)
        }else {
          if(pred__15348__15351.call(null, "\ufdd0'parent-watchables", expr__15349__15352)) {
            return new reflex.core.ComputedObservable(this__15347.state, this__15347.dirty_QMARK_, this__15347.f, this__15347.key, G__15339, this__15347.watches, this__15347.__meta, this__15347.__extmap, null)
          }else {
            if(pred__15348__15351.call(null, "\ufdd0'watches", expr__15349__15352)) {
              return new reflex.core.ComputedObservable(this__15347.state, this__15347.dirty_QMARK_, this__15347.f, this__15347.key, this__15347.parent_watchables, G__15339, this__15347.__meta, this__15347.__extmap, null)
            }else {
              return new reflex.core.ComputedObservable(this__15347.state, this__15347.dirty_QMARK_, this__15347.f, this__15347.key, this__15347.parent_watchables, this__15347.watches, this__15347.__meta, cljs.core.assoc.call(null, this__15347.__extmap, k__2232__auto__, G__15339), null)
            }
          }
        }
      }
    }
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var this__15353 = this;
  reflex.core.notify_deref_watcher_BANG_.call(null, this$);
  if(cljs.core.not.call(null, this__15353.dirty_QMARK_)) {
    return this$.state
  }else {
    var map__15354__15355 = reflex.core.capture_derefed.call(null, this__15353.f);
    var map__15354__15356 = cljs.core.seq_QMARK_.call(null, map__15354__15355) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15354__15355) : map__15354__15355;
    var derefed__15357 = cljs.core._lookup.call(null, map__15354__15356, "\ufdd0'derefed", null);
    var res__15358 = cljs.core._lookup.call(null, map__15354__15356, "\ufdd0'res", null);
    var G__15359__15360 = cljs.core.seq.call(null, this__15353.parent_watchables);
    if(G__15359__15360) {
      var w__15361 = cljs.core.first.call(null, G__15359__15360);
      var G__15359__15362 = G__15359__15360;
      while(true) {
        cljs.core.remove_watch.call(null, w__15361, this__15353.key);
        var temp__3974__auto____15363 = cljs.core.next.call(null, G__15359__15362);
        if(temp__3974__auto____15363) {
          var G__15359__15364 = temp__3974__auto____15363;
          var G__15412 = cljs.core.first.call(null, G__15359__15364);
          var G__15413 = G__15359__15364;
          w__15361 = G__15412;
          G__15359__15362 = G__15413;
          continue
        }else {
        }
        break
      }
    }else {
    }
    this$.parent_watchables = derefed__15357;
    var G__15365__15366 = cljs.core.seq.call(null, derefed__15357);
    if(G__15365__15366) {
      var w__15367 = cljs.core.first.call(null, G__15365__15366);
      var G__15365__15368 = G__15365__15366;
      while(true) {
        cljs.core.add_watch.call(null, w__15367, this__15353.key, function(w__15367, G__15365__15368) {
          return function() {
            this$.dirty_QMARK_ = true;
            return cljs.core._notify_watches.call(null, this$, null, null)
          }
        }(w__15367, G__15365__15368));
        var temp__3974__auto____15369 = cljs.core.next.call(null, G__15365__15368);
        if(temp__3974__auto____15369) {
          var G__15365__15370 = temp__3974__auto____15369;
          var G__15414 = cljs.core.first.call(null, G__15365__15370);
          var G__15415 = G__15365__15370;
          w__15367 = G__15414;
          G__15365__15368 = G__15415;
          continue
        }else {
        }
        break
      }
    }else {
    }
    this$.state = res__15358;
    this$.dirty_QMARK_ = false;
    return res__15358
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__15371 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, _15373, _) {
  var this__15372 = this;
  var G__15374__15375 = cljs.core.seq.call(null, this__15372.watches);
  if(G__15374__15375) {
    var G__15377__15379 = cljs.core.first.call(null, G__15374__15375);
    var vec__15378__15380 = G__15377__15379;
    var key__15381 = cljs.core.nth.call(null, vec__15378__15380, 0, null);
    var wf__15382 = cljs.core.nth.call(null, vec__15378__15380, 1, null);
    var G__15374__15383 = G__15374__15375;
    var G__15377__15384 = G__15377__15379;
    var G__15374__15385 = G__15374__15383;
    while(true) {
      var vec__15386__15387 = G__15377__15384;
      var key__15388 = cljs.core.nth.call(null, vec__15386__15387, 0, null);
      var wf__15389 = cljs.core.nth.call(null, vec__15386__15387, 1, null);
      var G__15374__15390 = G__15374__15385;
      wf__15389.call(null);
      var temp__3974__auto____15391 = cljs.core.next.call(null, G__15374__15390);
      if(temp__3974__auto____15391) {
        var G__15374__15392 = temp__3974__auto____15391;
        var G__15416 = cljs.core.first.call(null, G__15374__15392);
        var G__15417 = G__15374__15392;
        G__15377__15384 = G__15416;
        G__15374__15385 = G__15417;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, wf) {
  var this__15393 = this;
  return this$.watches = cljs.core.assoc.call(null, this__15393.watches, key, wf)
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__15394 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__15394.watches, key)
};
reflex.core.ComputedObservable.prototype.reflex$core$IDisposable$ = true;
reflex.core.ComputedObservable.prototype.reflex$core$IDisposable$dispose_BANG_$arity$1 = function(this$) {
  var this__15395 = this;
  var G__15396__15397 = cljs.core.seq.call(null, this__15395.parent_watchables);
  if(G__15396__15397) {
    var w__15398 = cljs.core.first.call(null, G__15396__15397);
    var G__15396__15399 = G__15396__15397;
    while(true) {
      cljs.core.remove_watch.call(null, w__15398, this__15395.key);
      var temp__3974__auto____15400 = cljs.core.next.call(null, G__15396__15399);
      if(temp__3974__auto____15400) {
        var G__15396__15401 = temp__3974__auto____15400;
        var G__15418 = cljs.core.first.call(null, G__15396__15401);
        var G__15419 = G__15396__15401;
        w__15398 = G__15418;
        G__15396__15399 = G__15419;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return this$.watches = null
};
reflex.core.ComputedObservable.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__15402 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'state", this__15402.state), cljs.core.vector.call(null, "\ufdd0'dirty?", this__15402.dirty_QMARK_), cljs.core.vector.call(null, "\ufdd0'f", this__15402.f), cljs.core.vector.call(null, "\ufdd0'key", this__15402.key), cljs.core.vector.call(null, "\ufdd0'parent-watchables", this__15402.parent_watchables), cljs.core.vector.call(null, "\ufdd0'watches", this__15402.watches)], 
  true), this__15402.__extmap))
};
reflex.core.ComputedObservable.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__15403 = this;
  var pr_pair__2240__auto____15404 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____15404, [cljs.core.str("#"), cljs.core.str("ComputedObservable"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'state", this__15403.state), cljs.core.vector.call(null, "\ufdd0'dirty?", this__15403.dirty_QMARK_), cljs.core.vector.call(null, "\ufdd0'f", this__15403.f), cljs.core.vector.call(null, "\ufdd0'key", this__15403.key), 
  cljs.core.vector.call(null, "\ufdd0'parent-watchables", this__15403.parent_watchables), cljs.core.vector.call(null, "\ufdd0'watches", this__15403.watches)], true), this__15403.__extmap))
};
reflex.core.ComputedObservable.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__15405 = this;
  return 6 + cljs.core.count.call(null, this__15405.__extmap)
};
reflex.core.ComputedObservable.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__15406 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____15407 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____15407)) {
      var and__3822__auto____15408 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____15408) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____15408
      }
    }else {
      return and__3822__auto____15407
    }
  }())) {
    return true
  }else {
    return false
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__15339) {
  var this__15409 = this;
  return new reflex.core.ComputedObservable(this__15409.state, this__15409.dirty_QMARK_, this__15409.f, this__15409.key, this__15409.parent_watchables, this__15409.watches, G__15339, this__15409.__extmap, this__15409.__hash)
};
reflex.core.ComputedObservable.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__15410 = this;
  return this__15410.__meta
};
reflex.core.ComputedObservable.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__15411 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'dirty?", "\ufdd0'state", "\ufdd0'key", "\ufdd0'f", "\ufdd0'watches", "\ufdd0'parent-watchables"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__15411.__meta), k__2234__auto__)
  }else {
    return new reflex.core.ComputedObservable(this__15411.state, this__15411.dirty_QMARK_, this__15411.f, this__15411.key, this__15411.parent_watchables, this__15411.watches, this__15411.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__15411.__extmap, k__2234__auto__)), null)
  }
};
reflex.core.ComputedObservable.cljs$lang$type = true;
reflex.core.ComputedObservable.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "reflex.core/ComputedObservable")
};
reflex.core.__GT_ComputedObservable = function __GT_ComputedObservable(state, dirty_QMARK_, f, key, parent_watchables, watches) {
  return new reflex.core.ComputedObservable(state, dirty_QMARK_, f, key, parent_watchables, watches)
};
reflex.core.map__GT_ComputedObservable = function map__GT_ComputedObservable(G__15341) {
  return new reflex.core.ComputedObservable((new cljs.core.Keyword("\ufdd0'state")).call(null, G__15341), (new cljs.core.Keyword("\ufdd0'dirty?")).call(null, G__15341), (new cljs.core.Keyword("\ufdd0'f")).call(null, G__15341), (new cljs.core.Keyword("\ufdd0'key")).call(null, G__15341), (new cljs.core.Keyword("\ufdd0'parent-watchables")).call(null, G__15341), (new cljs.core.Keyword("\ufdd0'watches")).call(null, G__15341), null, cljs.core.dissoc.call(null, G__15341, "\ufdd0'state", "\ufdd0'dirty?", 
  "\ufdd0'f", "\ufdd0'key", "\ufdd0'parent-watchables", "\ufdd0'watches"))
};
reflex.core.ComputedObservable;
reflex.core.ComputedObservable.prototype.cljs$core$IHash$ = true;
reflex.core.ComputedObservable.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  return this$.key
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for(var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.dependentDisposables_;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  if(!this.dependentDisposables_) {
    this.dependentDisposables_ = []
  }
  this.dependentDisposables_.push(disposable)
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.dependentDisposables_) {
    goog.disposeAll.apply(null, this.dependentDisposables_)
  }
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if(goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable)
    }else {
      goog.dispose(disposable)
    }
  }
};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true
  }catch(e) {
  }
  return false
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      if(!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.ASSUME_GOOD_GC = false;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = {count_:0, remaining_:0}
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = {count_:0, remaining_:0};
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = [];
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.getProxy();
      proxy.src = src;
      listenerObj = new goog.events.Listener;
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = []
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.key, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.key, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(!listenerArray[i].removed && listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = [];
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0
      }
      evt.dispose()
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.dom");
var div__11355 = document.createElement("div");
var test_html__11356 = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
div__11355.innerHTML = test_html__11356;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div__11355.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div__11355.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div__11355.getElementsByTagName("link").length, 0);
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if(opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if(document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null)
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if(doc) {
        if(opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""))
        }
        return doc
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if(typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml")
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if(typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml)
  }
  var text = xml.xml;
  if(text) {
    return text
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if(typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectSingleNode(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue
    }
  }
  return null
};
goog.dom.xml.selectNodes = function(node, path) {
  if(typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectNodes(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for(var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i))
      }
      return results
    }else {
      return[]
    }
  }
};
goog.dom.xml.setAttributes = function(element, attributes) {
  for(var key in attributes) {
    if(attributes.hasOwnProperty(key)) {
      element.setAttribute(key, attributes[key])
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if(doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH)
    }catch(e) {
    }
  }
  return doc
};
goog.provide("domina");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.dom.classes");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper__10947 = cljs.core.PersistentVector.fromArray([1, "<select multiple='multiple'>", "</select>"], true);
var table_section_wrapper__10948 = cljs.core.PersistentVector.fromArray([1, "<table>", "</table>"], true);
var cell_wrapper__10949 = cljs.core.PersistentVector.fromArray([3, "<table><tbody><tr>", "</tr></tbody></table>"], true);
domina.wrap_map = cljs.core.ObjMap.fromObject(["col", "\ufdd0'default", "tfoot", "caption", "optgroup", "legend", "area", "td", "thead", "th", "option", "tbody", "tr", "colgroup"], {"col":cljs.core.PersistentVector.fromArray([2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], true), "\ufdd0'default":cljs.core.PersistentVector.fromArray([0, "", ""], true), "tfoot":table_section_wrapper__10948, "caption":table_section_wrapper__10948, "optgroup":opt_wrapper__10947, "legend":cljs.core.PersistentVector.fromArray([1, 
"<fieldset>", "</fieldset>"], true), "area":cljs.core.PersistentVector.fromArray([1, "<map>", "</map>"], true), "td":cell_wrapper__10949, "thead":table_section_wrapper__10948, "th":cell_wrapper__10949, "option":opt_wrapper__10947, "tbody":table_section_wrapper__10948, "tr":cljs.core.PersistentVector.fromArray([2, "<table><tbody>", "</tbody></table>"], true), "colgroup":table_section_wrapper__10948});
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html, tag_name, start_wrap) {
  var no_tbody_QMARK___10962 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody__10966 = function() {
    var and__3822__auto____10963 = cljs.core._EQ_.call(null, tag_name, "table");
    if(and__3822__auto____10963) {
      return no_tbody_QMARK___10962
    }else {
      return and__3822__auto____10963
    }
  }() ? function() {
    var and__3822__auto____10964 = div.firstChild;
    if(cljs.core.truth_(and__3822__auto____10964)) {
      return div.firstChild.childNodes
    }else {
      return and__3822__auto____10964
    }
  }() : function() {
    var and__3822__auto____10965 = cljs.core._EQ_.call(null, start_wrap, "<table>");
    if(and__3822__auto____10965) {
      return no_tbody_QMARK___10962
    }else {
      return and__3822__auto____10965
    }
  }() ? divchildNodes : cljs.core.PersistentVector.EMPTY;
  var G__10967__10968 = cljs.core.seq.call(null, tbody__10966);
  if(G__10967__10968) {
    var child__10969 = cljs.core.first.call(null, G__10967__10968);
    var G__10967__10970 = G__10967__10968;
    while(true) {
      if(function() {
        var and__3822__auto____10971 = cljs.core._EQ_.call(null, child__10969.nodeName, "tbody");
        if(and__3822__auto____10971) {
          return cljs.core._EQ_.call(null, child__10969.childNodes.length, 0)
        }else {
          return and__3822__auto____10971
        }
      }()) {
        child__10969.parentNode.removeChild(child__10969)
      }else {
      }
      var temp__3974__auto____10972 = cljs.core.next.call(null, G__10967__10970);
      if(temp__3974__auto____10972) {
        var G__10967__10973 = temp__3974__auto____10972;
        var G__10974 = cljs.core.first.call(null, G__10967__10973);
        var G__10975 = G__10967__10973;
        child__10969 = G__10974;
        G__10967__10970 = G__10975;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild)
};
domina.html_to_dom = function html_to_dom(html) {
  var html__10989 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "<$1></$2>");
  var tag_name__10990 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__10989)))].join("").toLowerCase();
  var vec__10988__10991 = cljs.core._lookup.call(null, domina.wrap_map, tag_name__10990, (new cljs.core.Keyword("\ufdd0'default")).call(null, domina.wrap_map));
  var depth__10992 = cljs.core.nth.call(null, vec__10988__10991, 0, null);
  var start_wrap__10993 = cljs.core.nth.call(null, vec__10988__10991, 1, null);
  var end_wrap__10994 = cljs.core.nth.call(null, vec__10988__10991, 2, null);
  var div__10998 = function() {
    var wrapper__10996 = function() {
      var div__10995 = document.createElement("div");
      div__10995.innerHTML = [cljs.core.str(start_wrap__10993), cljs.core.str(html__10989), cljs.core.str(end_wrap__10994)].join("");
      return div__10995
    }();
    var level__10997 = depth__10992;
    while(true) {
      if(level__10997 > 0) {
        var G__11000 = wrapper__10996.lastChild;
        var G__11001 = level__10997 - 1;
        wrapper__10996 = G__11000;
        level__10997 = G__11001;
        continue
      }else {
        return wrapper__10996
      }
      break
    }
  }();
  if(cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div__10998, html__10989, tag_name__10990, start_wrap__10993)
  }else {
  }
  if(cljs.core.truth_(function() {
    var and__3822__auto____10999 = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if(and__3822__auto____10999) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__10989)
    }else {
      return and__3822__auto____10999
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div__10998, html__10989)
  }else {
  }
  return div__10998.childNodes
};
domina.string_to_dom = function string_to_dom(s) {
  if(cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s)
  }else {
    return document.createTextNode(s)
  }
};
domina.DomContent = {};
domina.nodes = function nodes(content) {
  if(function() {
    var and__3822__auto____11006 = content;
    if(and__3822__auto____11006) {
      return content.domina$DomContent$nodes$arity$1
    }else {
      return and__3822__auto____11006
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content)
  }else {
    var x__2264__auto____11007 = content == null ? null : content;
    return function() {
      var or__3824__auto____11008 = domina.nodes[goog.typeOf(x__2264__auto____11007)];
      if(or__3824__auto____11008) {
        return or__3824__auto____11008
      }else {
        var or__3824__auto____11009 = domina.nodes["_"];
        if(or__3824__auto____11009) {
          return or__3824__auto____11009
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content)
  }
};
domina.single_node = function single_node(nodeseq) {
  if(function() {
    var and__3822__auto____11014 = nodeseq;
    if(and__3822__auto____11014) {
      return nodeseq.domina$DomContent$single_node$arity$1
    }else {
      return and__3822__auto____11014
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq)
  }else {
    var x__2264__auto____11015 = nodeseq == null ? null : nodeseq;
    return function() {
      var or__3824__auto____11016 = domina.single_node[goog.typeOf(x__2264__auto____11015)];
      if(or__3824__auto____11016) {
        return or__3824__auto____11016
      }else {
        var or__3824__auto____11017 = domina.single_node["_"];
        if(or__3824__auto____11017) {
          return or__3824__auto____11017
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq)
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____11019 = domina._STAR_debug_STAR_;
      if(cljs.core.truth_(and__3822__auto____11019)) {
        return!cljs.core._EQ_.call(null, window.console, undefined)
      }else {
        return and__3822__auto____11019
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log_debug__delegate.call(this, mesg)
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__11020) {
    var mesg = cljs.core.seq(arglist__11020);
    return log_debug__delegate(mesg)
  };
  log_debug.cljs$lang$arity$variadic = log_debug__delegate;
  return log_debug
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if(cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, mesg)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__11021) {
    var mesg = cljs.core.seq(arglist__11021);
    return log__delegate(mesg)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id))
};
domina.by_class = function by_class(class_name) {
  if(void 0 === domina.t11029) {
    domina.t11029 = function(class_name, by_class, meta11030) {
      this.class_name = class_name;
      this.by_class = by_class;
      this.meta11030 = meta11030;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    domina.t11029.cljs$lang$type = true;
    domina.t11029.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
      return cljs.core.list.call(null, "domina/t11029")
    };
    domina.t11029.prototype.domina$DomContent$ = true;
    domina.t11029.prototype.domina$DomContent$nodes$arity$1 = function(_) {
      var this__11032 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, this__11032.class_name)))
    };
    domina.t11029.prototype.domina$DomContent$single_node$arity$1 = function(_) {
      var this__11033 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementByClass(cljs.core.name.call(null, this__11033.class_name)))
    };
    domina.t11029.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11031) {
      var this__11034 = this;
      return this__11034.meta11030
    };
    domina.t11029.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11031, meta11030) {
      var this__11035 = this;
      return new domina.t11029(this__11035.class_name, this__11035.by_class, meta11030)
    };
    domina.t11029
  }else {
  }
  return new domina.t11029(class_name, by_class, null)
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)))
};
domina.common_ancestor = function() {
  var common_ancestor__delegate = function(contents) {
    return cljs.core.apply.call(null, goog.dom.findCommonAncestor, cljs.core.map.call(null, domina.single_node, contents))
  };
  var common_ancestor = function(var_args) {
    var contents = null;
    if(goog.isDef(var_args)) {
      contents = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return common_ancestor__delegate.call(this, contents)
  };
  common_ancestor.cljs$lang$maxFixedArity = 0;
  common_ancestor.cljs$lang$applyTo = function(arglist__11036) {
    var contents = cljs.core.seq(arglist__11036);
    return common_ancestor__delegate(contents)
  };
  common_ancestor.cljs$lang$arity$variadic = common_ancestor__delegate;
  return common_ancestor
}();
domina.ancestor_QMARK_ = function ancestor_QMARK_(ancestor_content, descendant_content) {
  return cljs.core._EQ_.call(null, domina.common_ancestor.call(null, ancestor_content, descendant_content), domina.single_node.call(null, ancestor_content))
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__11037_SHARP_) {
    return p1__11037_SHARP_.cloneNode(true)
  }, domina.nodes.call(null, content))
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__11038_SHARP_, p2__11039_SHARP_) {
    return goog.dom.insertChildAt(p1__11038_SHARP_, p2__11039_SHARP_, idx)
  }, parent_content, child_content);
  return parent_content
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__11041_SHARP_, p2__11040_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__11040_SHARP_, p1__11041_SHARP_)
  }, content, new_content);
  return content
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__11043_SHARP_, p2__11042_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__11042_SHARP_, p1__11043_SHARP_)
  }, content, new_content);
  return content
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__11045_SHARP_, p2__11044_SHARP_) {
    return goog.dom.replaceNode(p2__11044_SHARP_, p1__11045_SHARP_)
  }, old_content, new_content);
  return old_content
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content
};
domina.style = function style(content, name) {
  var s__11047 = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if(cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s__11047))) {
    return null
  }else {
    return s__11047
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name))
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var G__11054__11055 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__11054__11055) {
      var n__11056 = cljs.core.first.call(null, G__11054__11055);
      var G__11054__11057 = G__11054__11055;
      while(true) {
        goog.style.setStyle(n__11056, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____11058 = cljs.core.next.call(null, G__11054__11057);
        if(temp__3974__auto____11058) {
          var G__11054__11059 = temp__3974__auto____11058;
          var G__11060 = cljs.core.first.call(null, G__11054__11059);
          var G__11061 = G__11054__11059;
          n__11056 = G__11060;
          G__11054__11057 = G__11061;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_style_BANG___delegate.call(this, content, name, value)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__11062) {
    var content = cljs.core.first(arglist__11062);
    var name = cljs.core.first(cljs.core.next(arglist__11062));
    var value = cljs.core.rest(cljs.core.next(arglist__11062));
    return set_style_BANG___delegate(content, name, value)
  };
  set_style_BANG_.cljs$lang$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var G__11069__11070 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__11069__11070) {
      var n__11071 = cljs.core.first.call(null, G__11069__11070);
      var G__11069__11072 = G__11069__11070;
      while(true) {
        n__11071.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____11073 = cljs.core.next.call(null, G__11069__11072);
        if(temp__3974__auto____11073) {
          var G__11069__11074 = temp__3974__auto____11073;
          var G__11075 = cljs.core.first.call(null, G__11069__11074);
          var G__11076 = G__11069__11074;
          n__11071 = G__11075;
          G__11069__11072 = G__11076;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_attr_BANG___delegate.call(this, content, name, value)
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__11077) {
    var content = cljs.core.first(arglist__11077);
    var name = cljs.core.first(cljs.core.next(arglist__11077));
    var value = cljs.core.rest(cljs.core.next(arglist__11077));
    return set_attr_BANG___delegate(content, name, value)
  };
  set_attr_BANG_.cljs$lang$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var G__11084__11085 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11084__11085) {
    var n__11086 = cljs.core.first.call(null, G__11084__11085);
    var G__11084__11087 = G__11084__11085;
    while(true) {
      n__11086.removeAttribute(cljs.core.name.call(null, name));
      var temp__3974__auto____11088 = cljs.core.next.call(null, G__11084__11087);
      if(temp__3974__auto____11088) {
        var G__11084__11089 = temp__3974__auto____11088;
        var G__11090 = cljs.core.first.call(null, G__11084__11089);
        var G__11091 = G__11084__11089;
        n__11086 = G__11090;
        G__11084__11087 = G__11091;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__11097__11098 = pair.split(/\s*:\s*/);
    var k__11099 = cljs.core.nth.call(null, vec__11097__11098, 0, null);
    var v__11100 = cljs.core.nth.call(null, vec__11097__11098, 1, null);
    if(cljs.core.truth_(function() {
      var and__3822__auto____11101 = k__11099;
      if(cljs.core.truth_(and__3822__auto____11101)) {
        return v__11100
      }else {
        return and__3822__auto____11101
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k__11099.toLowerCase()), v__11100)
    }else {
      return acc
    }
  }, cljs.core.ObjMap.EMPTY, style.split(/\s*;\s*/))
};
domina.styles = function styles(content) {
  var style__11104 = domina.attr.call(null, content, "style");
  if(cljs.core.string_QMARK_.call(null, style__11104)) {
    return domina.parse_style_attributes.call(null, style__11104)
  }else {
    if(cljs.core.truth_(style__11104.cssText)) {
      return domina.parse_style_attributes.call(null, style__11104.cssText)
    }else {
      return null
    }
  }
};
domina.attrs = function attrs(content) {
  var node__11110 = domina.single_node.call(null, content);
  var attrs__11111 = node__11110.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(p1__11102_SHARP_) {
    var attr__11112 = attrs__11111.item(p1__11102_SHARP_);
    var value__11113 = attr__11112.nodeValue;
    if(function() {
      var and__3822__auto____11114 = cljs.core.not_EQ_.call(null, null, value__11113);
      if(and__3822__auto____11114) {
        return cljs.core.not_EQ_.call(null, "", value__11113)
      }else {
        return and__3822__auto____11114
      }
    }()) {
      return cljs.core.PersistentArrayMap.fromArrays([cljs.core.keyword.call(null, attr__11112.nodeName.toLowerCase())], [attr__11112.nodeValue])
    }else {
      return null
    }
  }, cljs.core.range.call(null, attrs__11111.length))))
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var G__11134__11135 = cljs.core.seq.call(null, styles);
  if(G__11134__11135) {
    var G__11137__11139 = cljs.core.first.call(null, G__11134__11135);
    var vec__11138__11140 = G__11137__11139;
    var name__11141 = cljs.core.nth.call(null, vec__11138__11140, 0, null);
    var value__11142 = cljs.core.nth.call(null, vec__11138__11140, 1, null);
    var G__11134__11143 = G__11134__11135;
    var G__11137__11144 = G__11137__11139;
    var G__11134__11145 = G__11134__11143;
    while(true) {
      var vec__11146__11147 = G__11137__11144;
      var name__11148 = cljs.core.nth.call(null, vec__11146__11147, 0, null);
      var value__11149 = cljs.core.nth.call(null, vec__11146__11147, 1, null);
      var G__11134__11150 = G__11134__11145;
      domina.set_style_BANG_.call(null, content, name__11148, value__11149);
      var temp__3974__auto____11151 = cljs.core.next.call(null, G__11134__11150);
      if(temp__3974__auto____11151) {
        var G__11134__11152 = temp__3974__auto____11151;
        var G__11153 = cljs.core.first.call(null, G__11134__11152);
        var G__11154 = G__11134__11152;
        G__11137__11144 = G__11153;
        G__11134__11145 = G__11154;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var G__11174__11175 = cljs.core.seq.call(null, attrs);
  if(G__11174__11175) {
    var G__11177__11179 = cljs.core.first.call(null, G__11174__11175);
    var vec__11178__11180 = G__11177__11179;
    var name__11181 = cljs.core.nth.call(null, vec__11178__11180, 0, null);
    var value__11182 = cljs.core.nth.call(null, vec__11178__11180, 1, null);
    var G__11174__11183 = G__11174__11175;
    var G__11177__11184 = G__11177__11179;
    var G__11174__11185 = G__11174__11183;
    while(true) {
      var vec__11186__11187 = G__11177__11184;
      var name__11188 = cljs.core.nth.call(null, vec__11186__11187, 0, null);
      var value__11189 = cljs.core.nth.call(null, vec__11186__11187, 1, null);
      var G__11174__11190 = G__11174__11185;
      domina.set_attr_BANG_.call(null, content, name__11188, value__11189);
      var temp__3974__auto____11191 = cljs.core.next.call(null, G__11174__11190);
      if(temp__3974__auto____11191) {
        var G__11174__11192 = temp__3974__auto____11191;
        var G__11193 = cljs.core.first.call(null, G__11174__11192);
        var G__11194 = G__11174__11192;
        G__11177__11184 = G__11193;
        G__11174__11185 = G__11194;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$)
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var G__11201__11202 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11201__11202) {
    var node__11203 = cljs.core.first.call(null, G__11201__11202);
    var G__11201__11204 = G__11201__11202;
    while(true) {
      goog.dom.classes.add(node__11203, class$);
      var temp__3974__auto____11205 = cljs.core.next.call(null, G__11201__11204);
      if(temp__3974__auto____11205) {
        var G__11201__11206 = temp__3974__auto____11205;
        var G__11207 = cljs.core.first.call(null, G__11201__11206);
        var G__11208 = G__11201__11206;
        node__11203 = G__11207;
        G__11201__11204 = G__11208;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var G__11215__11216 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11215__11216) {
    var node__11217 = cljs.core.first.call(null, G__11215__11216);
    var G__11215__11218 = G__11215__11216;
    while(true) {
      goog.dom.classes.remove(node__11217, class$);
      var temp__3974__auto____11219 = cljs.core.next.call(null, G__11215__11218);
      if(temp__3974__auto____11219) {
        var G__11215__11220 = temp__3974__auto____11219;
        var G__11221 = cljs.core.first.call(null, G__11215__11220);
        var G__11222 = G__11215__11220;
        node__11217 = G__11221;
        G__11215__11218 = G__11222;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)))
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes__11230 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var G__11231__11232 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11231__11232) {
    var node__11233 = cljs.core.first.call(null, G__11231__11232);
    var G__11231__11234 = G__11231__11232;
    while(true) {
      goog.dom.classes.set(node__11233, classes__11230);
      var temp__3974__auto____11235 = cljs.core.next.call(null, G__11231__11234);
      if(temp__3974__auto____11235) {
        var G__11231__11236 = temp__3974__auto____11235;
        var G__11237 = cljs.core.first.call(null, G__11231__11236);
        var G__11238 = G__11231__11236;
        node__11233 = G__11237;
        G__11231__11234 = G__11238;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)))
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var G__11245__11246 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11245__11246) {
    var node__11247 = cljs.core.first.call(null, G__11245__11246);
    var G__11245__11248 = G__11245__11246;
    while(true) {
      goog.dom.setTextContent(node__11247, value);
      var temp__3974__auto____11249 = cljs.core.next.call(null, G__11245__11248);
      if(temp__3974__auto____11249) {
        var G__11245__11250 = temp__3974__auto____11249;
        var G__11251 = cljs.core.first.call(null, G__11245__11250);
        var G__11252 = G__11245__11250;
        node__11247 = G__11251;
        G__11245__11248 = G__11252;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content))
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var G__11259__11260 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11259__11260) {
    var node__11261 = cljs.core.first.call(null, G__11259__11260);
    var G__11259__11262 = G__11259__11260;
    while(true) {
      goog.dom.forms.setValue(node__11261, value);
      var temp__3974__auto____11263 = cljs.core.next.call(null, G__11259__11262);
      if(temp__3974__auto____11263) {
        var G__11259__11264 = temp__3974__auto____11263;
        var G__11265 = cljs.core.first.call(null, G__11259__11264);
        var G__11266 = G__11259__11264;
        node__11261 = G__11265;
        G__11259__11262 = G__11266;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content)
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK___11283 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK___11284 = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name__11285 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK___11286 = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name__11285);
  if(cljs.core.truth_(function() {
    var and__3822__auto____11287 = allows_inner_html_QMARK___11283;
    if(and__3822__auto____11287) {
      var and__3822__auto____11289 = function() {
        var or__3824__auto____11288 = domina.support.leading_whitespace_QMARK_;
        if(cljs.core.truth_(or__3824__auto____11288)) {
          return or__3824__auto____11288
        }else {
          return cljs.core.not.call(null, leading_whitespace_QMARK___11284)
        }
      }();
      if(cljs.core.truth_(and__3822__auto____11289)) {
        return!special_tag_QMARK___11286
      }else {
        return and__3822__auto____11289
      }
    }else {
      return and__3822__auto____11287
    }
  }())) {
    var value__11290 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "<$1></$2>");
    try {
      var G__11293__11294 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      if(G__11293__11294) {
        var node__11295 = cljs.core.first.call(null, G__11293__11294);
        var G__11293__11296 = G__11293__11294;
        while(true) {
          goog.events.removeAll(node__11295);
          node__11295.innerHTML = value__11290;
          var temp__3974__auto____11297 = cljs.core.next.call(null, G__11293__11296);
          if(temp__3974__auto____11297) {
            var G__11293__11298 = temp__3974__auto____11297;
            var G__11299 = cljs.core.first.call(null, G__11293__11298);
            var G__11300 = G__11293__11298;
            node__11295 = G__11299;
            G__11293__11296 = G__11300;
            continue
          }else {
          }
          break
        }
      }else {
      }
    }catch(e11291) {
      if(cljs.core.instance_QMARK_.call(null, Error, e11291)) {
        var e__11292 = e11291;
        domina.replace_children_BANG_.call(null, content, value__11290)
      }else {
        if("\ufdd0'else") {
          throw e11291;
        }else {
        }
      }
    }
  }else {
    domina.replace_children_BANG_.call(null, content, html_string)
  }
  return content
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if(cljs.core.string_QMARK_.call(null, inner_content)) {
    return domina.set_inner_html_BANG_.call(null, content, inner_content)
  }else {
    return domina.replace_children_BANG_.call(null, content, inner_content)
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false)
  };
  var get_data__3 = function(node, key, bubble) {
    var m__11306 = domina.single_node.call(null, node).__domina_data;
    var value__11307 = cljs.core.truth_(m__11306) ? cljs.core._lookup.call(null, m__11306, key, null) : null;
    if(cljs.core.truth_(function() {
      var and__3822__auto____11308 = bubble;
      if(cljs.core.truth_(and__3822__auto____11308)) {
        return value__11307 == null
      }else {
        return and__3822__auto____11308
      }
    }())) {
      var temp__3974__auto____11309 = domina.single_node.call(null, node).parentNode;
      if(cljs.core.truth_(temp__3974__auto____11309)) {
        var parent__11310 = temp__3974__auto____11309;
        return get_data.call(null, parent__11310, key, true)
      }else {
        return null
      }
    }else {
      return value__11307
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_data.cljs$lang$arity$2 = get_data__2;
  get_data.cljs$lang$arity$3 = get_data__3;
  return get_data
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m__11316 = function() {
    var or__3824__auto____11315 = domina.single_node.call(null, node).__domina_data;
    if(cljs.core.truth_(or__3824__auto____11315)) {
      return or__3824__auto____11315
    }else {
      return cljs.core.ObjMap.EMPTY
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m__11316, key, value)
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents__11328 = domina.nodes.call(null, parent_content);
  var children__11329 = domina.nodes.call(null, child_content);
  var first_child__11337 = function() {
    var frag__11330 = document.createDocumentFragment();
    var G__11331__11332 = cljs.core.seq.call(null, children__11329);
    if(G__11331__11332) {
      var child__11333 = cljs.core.first.call(null, G__11331__11332);
      var G__11331__11334 = G__11331__11332;
      while(true) {
        frag__11330.appendChild(child__11333);
        var temp__3974__auto____11335 = cljs.core.next.call(null, G__11331__11334);
        if(temp__3974__auto____11335) {
          var G__11331__11336 = temp__3974__auto____11335;
          var G__11339 = cljs.core.first.call(null, G__11331__11336);
          var G__11340 = G__11331__11336;
          child__11333 = G__11339;
          G__11331__11334 = G__11340;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return frag__11330
  }();
  var other_children__11338 = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents__11328) - 1, function() {
    return first_child__11337.cloneNode(true)
  }));
  if(cljs.core.seq.call(null, parents__11328)) {
    f.call(null, cljs.core.first.call(null, parents__11328), first_child__11337);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__11311_SHARP_, p2__11312_SHARP_) {
      return f.call(null, p1__11311_SHARP_, p2__11312_SHARP_)
    }, cljs.core.rest.call(null, parents__11328), other_children__11338))
  }else {
    return null
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0)
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_item.cljs$lang$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$lang$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0)
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_array_ref.cljs$lang$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$lang$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if(cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl)
  }else {
    return domina.lazy_nl_via_array_ref.call(null, nl)
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3822__auto____11342 = obj;
  if(cljs.core.truth_(and__3822__auto____11342)) {
    return obj.length
  }else {
    return and__3822__auto____11342
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if(list_thing == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__11346__11347 = list_thing;
      if(G__11346__11347) {
        if(function() {
          var or__3824__auto____11348 = G__11346__11347.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____11348) {
            return or__3824__auto____11348
          }else {
            return G__11346__11347.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__11346__11347.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11346__11347)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11346__11347)
      }
    }()) {
      return cljs.core.seq.call(null, list_thing)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([list_thing], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if(content == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__11349__11350 = content;
      if(G__11349__11350) {
        if(function() {
          var or__3824__auto____11351 = G__11349__11350.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____11351) {
            return or__3824__auto____11351
          }else {
            return G__11349__11350.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__11349__11350.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11349__11350)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11349__11350)
      }
    }()) {
      return cljs.core.seq.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([content], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if(content == null) {
    return null
  }else {
    if(function() {
      var G__11352__11353 = content;
      if(G__11352__11353) {
        if(function() {
          var or__3824__auto____11354 = G__11352__11353.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____11354) {
            return or__3824__auto____11354
          }else {
            return G__11352__11353.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__11352__11353.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11352__11353)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__11352__11353)
      }
    }()) {
      return cljs.core.first.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0)
      }else {
        if("\ufdd0'default") {
          return content
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)))
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s))
};
if(cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    return domina.lazy_nodelist.call(null, coll)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    return coll.item(n)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    if(coll.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, coll, n)
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    return coll.length
  }
}else {
}
;goog.provide("vcfvis.core");
goog.require("cljs.core");
goog.require("c2.util");
goog.require("dubstep.pubsub");
goog.require("reflex.core");
goog.require("clojure.set");
goog.require("domina");
goog.require("c2.util");
vcfvis.core._BANG_context = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
vcfvis.core._BANG_vcfs = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
vcfvis.core.check_new_vcfs_BANG_ = function check_new_vcfs_BANG_(new_vcfs) {
  if(cljs.core.seq.call(null, new_vcfs)) {
    cljs.core.reset_BANG_.call(null, vcfvis.core._BANG_vcfs, cljs.core.vec.call(null, cljs.core.filter.call(null, function(p1__8377_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, new_vcfs, (new cljs.core.Keyword("\ufdd0'file-url")).call(null, p1__8377_SHARP_))
    }, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs))));
    return clojure.set.difference.call(null, new_vcfs, cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.map.call(null, "\ufdd0'file-url", cljs.core.deref.call(null, vcfvis.core._BANG_vcfs))))
  }else {
    return cljs.core.reset_BANG_.call(null, vcfvis.core._BANG_vcfs, cljs.core.PersistentVector.EMPTY)
  }
};
vcfvis.core._BANG_available_files = function() {
  var co__6008__auto____8378 = new reflex.core.ComputedObservable(null, true, function() {
    return cljs.core._lookup.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_context), "\ufdd0'files", cljs.core.PersistentVector.EMPTY)
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6008__auto____8378);
  return co__6008__auto____8378
}();
vcfvis.core.intersection = function() {
  var intersection = null;
  var intersection__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var intersection__1 = function() {
    var G__8379__delegate = function(args) {
      return cljs.core.apply.call(null, clojure.set.intersection, args)
    };
    var G__8379 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8379__delegate.call(this, args)
    };
    G__8379.cljs$lang$maxFixedArity = 0;
    G__8379.cljs$lang$applyTo = function(arglist__8380) {
      var args = cljs.core.seq(arglist__8380);
      return G__8379__delegate(args)
    };
    G__8379.cljs$lang$arity$variadic = G__8379__delegate;
    return G__8379
  }();
  intersection = function(var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 0:
        return intersection__0.call(this);
      default:
        return intersection__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  intersection.cljs$lang$maxFixedArity = 0;
  intersection.cljs$lang$applyTo = intersection__1.cljs$lang$applyTo;
  intersection.cljs$lang$arity$0 = intersection__0;
  intersection.cljs$lang$arity$variadic = intersection__1.cljs$lang$arity$variadic;
  return intersection
}();
vcfvis.core._BANG_shared_metrics = function() {
  var co__6008__auto____8381 = new reflex.core.ComputedObservable(null, true, function() {
    return cljs.core.reduce.call(null, vcfvis.core.intersection, cljs.core.map.call(null, "\ufdd0'available-metrics", cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)))
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6008__auto____8381);
  return co__6008__auto____8381
}();
vcfvis.core._BANG_metric = cljs.core.atom.call(null, null);
vcfvis.core.select_metric_BANG_ = function select_metric_BANG_(metric) {
  return cljs.core.reset_BANG_.call(null, vcfvis.core._BANG_metric, metric)
};
var co__6014__auto____8384 = function() {
  var co__6008__auto____8383 = new reflex.core.ComputedObservable(null, true, function() {
    var shared__8382 = cljs.core.deref.call(null, vcfvis.core._BANG_shared_metrics);
    if(cljs.core.seq.call(null, shared__8382)) {
      if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([cljs.core.deref.call(null, vcfvis.core._BANG_metric)]), shared__8382))) {
        return null
      }else {
        return vcfvis.core.select_metric_BANG_.call(null, cljs.core.first.call(null, shared__8382))
      }
    }else {
      return null
    }
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6008__auto____8383);
  return co__6008__auto____8383
}();
cljs.core.add_watch.call(null, co__6014__auto____8384, "\ufdd0'reflex-constraint", function() {
  var shared__8385 = cljs.core.deref.call(null, vcfvis.core._BANG_shared_metrics);
  if(cljs.core.seq.call(null, shared__8385)) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([cljs.core.deref.call(null, vcfvis.core._BANG_metric)]), shared__8385))) {
      return null
    }else {
      return vcfvis.core.select_metric_BANG_.call(null, cljs.core.first.call(null, shared__8385))
    }
  }else {
    return null
  }
});
co__6014__auto____8384;
vcfvis.core._BANG_filters = function() {
  var co__6008__auto____8388 = new reflex.core.ComputedObservable(null, true, function() {
    return cljs.core.reduce.call(null, function(filters, m) {
      var temp__3971__auto____8386 = cljs.core.deref.call(null, m.call(null, "\ufdd0'!filter-extent"));
      if(cljs.core.truth_(temp__3971__auto____8386)) {
        var extent__8387 = temp__3971__auto____8386;
        return cljs.core.assoc.call(null, filters, m.call(null, "\ufdd0'id"), extent__8387)
      }else {
        return filters
      }
    }, cljs.core.ObjMap.EMPTY, cljs.core.deref.call(null, vcfvis.core._BANG_shared_metrics))
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6008__auto____8388);
  return co__6008__auto____8388
}();
vcfvis.core._BANG_visible_metrics = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY, "\ufdd0'validator", function(ms) {
  if(cljs.core.contains_QMARK_.call(null, ms, cljs.core.deref.call(null, vcfvis.core._BANG_metric))) {
    throw new Error("Selected metric doesn't need a mini-histogram.");
  }else {
    return true
  }
});
var co__6014__auto____8391 = function() {
  var co__6008__auto____8390 = new reflex.core.ComputedObservable(null, true, function() {
    var m__8389 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
    if(cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_visible_metrics), m__8389)) {
      return cljs.core.swap_BANG_.call(null, vcfvis.core._BANG_visible_metrics, cljs.core.disj, m__8389)
    }else {
      return null
    }
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6008__auto____8390);
  return co__6008__auto____8390
}();
cljs.core.add_watch.call(null, co__6014__auto____8391, "\ufdd0'reflex-constraint", function() {
  var m__8392 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
  if(cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_visible_metrics), m__8392)) {
    return cljs.core.swap_BANG_.call(null, vcfvis.core._BANG_visible_metrics, cljs.core.disj, m__8392)
  }else {
    return null
  }
});
co__6014__auto____8391;
vcfvis.core.visible_metric_QMARK_ = function visible_metric_QMARK_(m) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_visible_metrics), m)
};
vcfvis.core.toggle_visible_metric_BANG_ = function toggle_visible_metric_BANG_(m) {
  return cljs.core.swap_BANG_.call(null, vcfvis.core._BANG_visible_metrics, cljs.core.truth_(vcfvis.core.visible_metric_QMARK_.call(null, m)) ? cljs.core.disj : cljs.core.conj, m)
};
vcfvis.core.update_metric_BANG_ = function update_metric_BANG_(m, extent) {
  var vec__8410__8411 = m.call(null, "\ufdd0'range");
  var min__8412 = cljs.core.nth.call(null, vec__8410__8411, 0, null);
  var max__8413 = cljs.core.nth.call(null, vec__8410__8411, 1, null);
  var extent__8414 = cljs.core.apply.call(null, cljs.core._, extent) === 0 ? null : cljs.core._EQ_.call(null, extent, cljs.core.PersistentVector.fromArray([min__8412, max__8413], true)) ? cljs.core.PersistentVector.fromArray([-Infinity, Infinity], true) : cljs.core._EQ_.call(null, cljs.core.first.call(null, extent), min__8412) ? cljs.core.PersistentVector.fromArray([-Infinity, cljs.core.second.call(null, extent)], true) : cljs.core._EQ_.call(null, cljs.core.second.call(null, extent), max__8413) ? 
  cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, extent), Infinity], true) : "\ufdd0'else" ? extent : null;
  var G__8415__8416 = cljs.core.seq.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs));
  if(G__8415__8416) {
    var vcf__8417 = cljs.core.first.call(null, G__8415__8416);
    var G__8415__8418 = G__8415__8416;
    while(true) {
      cljs.core.get_in.call(null, vcf__8417, cljs.core.PersistentVector.fromArray(["\ufdd0'cf", m.call(null, "\ufdd0'id"), "\ufdd0'dimension"], true)).filter(c2.util.clj__GT_js.call(null, extent__8414));
      var temp__3974__auto____8419 = cljs.core.next.call(null, G__8415__8418);
      if(temp__3974__auto____8419) {
        var G__8415__8420 = temp__3974__auto____8419;
        var G__8427 = cljs.core.first.call(null, G__8415__8420);
        var G__8428 = G__8415__8420;
        vcf__8417 = G__8427;
        G__8415__8418 = G__8428;
        continue
      }else {
      }
      break
    }
  }else {
  }
  cljs.core.reset_BANG_.call(null, m.call(null, "\ufdd0'!filter-extent"), extent__8414);
  var G__8421__8422 = cljs.core.seq.call(null, cljs.core.deref.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_));
  if(G__8421__8422) {
    var s__8306__auto____8423 = cljs.core.first.call(null, G__8421__8422);
    var G__8421__8424 = G__8421__8422;
    while(true) {
      s__8306__auto____8423.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'filter-updated"], {"\ufdd0'filter-updated":m}));
      var temp__3974__auto____8425 = cljs.core.next.call(null, G__8421__8424);
      if(temp__3974__auto____8425) {
        var G__8421__8426 = temp__3974__auto____8425;
        var G__8429 = cljs.core.first.call(null, G__8421__8426);
        var G__8430 = G__8421__8426;
        s__8306__auto____8423 = G__8429;
        G__8421__8424 = G__8430;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.swap_BANG_.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_, cljs.core.conj, function(m__8312__auto__) {
  try {
    if(function() {
      var G__8436__8437 = m__8312__auto__;
      if(G__8436__8437) {
        if(function() {
          var or__3824__auto____8438 = G__8436__8437.cljs$lang$protocol_mask$partition0$ & 256;
          if(or__3824__auto____8438) {
            return or__3824__auto____8438
          }else {
            return G__8436__8437.cljs$core$ILookup$
          }
        }()) {
          return true
        }else {
          if(!G__8436__8437.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__8436__8437)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__8436__8437)
      }
    }()) {
      var extent__8440 = function() {
        var val__6896__auto____8439 = cljs.core._lookup.call(null, m__8312__auto__, "\ufdd0'extent", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6896__auto____8439, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6896__auto____8439
        }
      }();
      var metric__8442 = function() {
        var val__6896__auto____8441 = cljs.core._lookup.call(null, m__8312__auto__, "\ufdd0'metric-brushed", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6896__auto____8441, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6896__auto____8441
        }
      }();
      return vcfvis.core.update_metric_BANG_.call(null, metric__8442, extent__8440)
    }else {
      if("\ufdd0'else") {
        throw 0;
      }else {
        return null
      }
    }
  }catch(e__7329__auto__) {
    if(e__7329__auto__ === 0) {
      var G__8431__8435 = m__8312__auto__;
      return null
    }else {
      throw e__7329__auto__;
    }
  }
});
goog.provide("vcfvis.ui");
goog.require("cljs.core");
goog.require("crate.core");
goog.require("c2.dom");
goog.require("vcfvis.core");
vcfvis.ui.logged_in_html = function logged_in_html(user) {
  return crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'div", cljs.core.ObjMap.fromObject(["\ufdd0'class", "\ufdd0'id"], {"\ufdd0'class":"btn-group", "\ufdd0'id":"user-dropdown"}), cljs.core.PersistentVector.fromArray(["\ufdd0'button", cljs.core.ObjMap.fromObject(["\ufdd0'class", "\ufdd0'data-toggle"], {"\ufdd0'class":"btn btn-info dropdown-toggle", "\ufdd0'data-toggle":"dropdown"}), cljs.core.PersistentVector.fromArray(["\ufdd0'i", cljs.core.ObjMap.fromObject(["\ufdd0'class", 
  "\ufdd0'style"], {"\ufdd0'class":"icon-user icon-white", "\ufdd0'style":"margin-right: 6px"})], true), user, cljs.core.PersistentVector.fromArray(["\ufdd0'span", cljs.core.ObjMap.fromObject(["\ufdd0'class", "\ufdd0'style"], {"\ufdd0'class":"caret", "\ufdd0'style":"margin-left: 6px"})], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'ul", cljs.core.ObjMap.fromObject(["\ufdd0'class"], {"\ufdd0'class":"dropdown-menu"}), cljs.core.PersistentVector.fromArray(["\ufdd0'li", cljs.core.PersistentVector.fromArray(["\ufdd0'a", 
  cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'href"], {"\ufdd0'id":"logout-btn", "\ufdd0'href":"/logout"}), "Logout"], true)], true)], true)], true))
};
vcfvis.ui.update_user_BANG_ = function update_user_BANG_(context) {
  return c2.dom.replace_BANG_.call(null, c2.dom.select.call(null, "#user-dropdown"), vcfvis.ui.logged_in_html.call(null, cljs.core._lookup.call(null, context, "\ufdd0'username", "user")))
};
vcfvis.ui.hist_margin = 20;
vcfvis.ui.inter_hist_margin = 20;
vcfvis.ui.axis_height = parseFloat(c2.dom.style.call(null, "#hist-axis", "\ufdd0'height"));
vcfvis.ui.hist_height = parseFloat(c2.dom.style.call(null, "#histograms", "\ufdd0'height"));
vcfvis.ui.hist_width = parseFloat(c2.dom.style.call(null, "#histograms", "\ufdd0'width")) - 2 * vcfvis.ui.hist_margin;
vcfvis.ui.hist_bins = 100;
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3822__auto____15743 = reader;
    if(and__3822__auto____15743) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3822__auto____15743
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__2264__auto____15744 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____15745 = cljs.reader.read_char[goog.typeOf(x__2264__auto____15744)];
      if(or__3824__auto____15745) {
        return or__3824__auto____15745
      }else {
        var or__3824__auto____15746 = cljs.reader.read_char["_"];
        if(or__3824__auto____15746) {
          return or__3824__auto____15746
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3822__auto____15751 = reader;
    if(and__3822__auto____15751) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3822__auto____15751
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__2264__auto____15752 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____15753 = cljs.reader.unread[goog.typeOf(x__2264__auto____15752)];
      if(or__3824__auto____15753) {
        return or__3824__auto____15753
      }else {
        var or__3824__auto____15754 = cljs.reader.unread["_"];
        if(or__3824__auto____15754) {
          return or__3824__auto____15754
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
cljs.reader.StringPushbackReader = function(s, index_atom, buffer_atom) {
  this.s = s;
  this.index_atom = index_atom;
  this.buffer_atom = buffer_atom
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var this__15755 = this;
  if(cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, this__15755.buffer_atom))) {
    var idx__15756 = cljs.core.deref.call(null, this__15755.index_atom);
    cljs.core.swap_BANG_.call(null, this__15755.index_atom, cljs.core.inc);
    return this__15755.s[idx__15756]
  }else {
    var buf__15757 = cljs.core.deref.call(null, this__15755.buffer_atom);
    cljs.core.swap_BANG_.call(null, this__15755.buffer_atom, cljs.core.rest);
    return cljs.core.first.call(null, buf__15757)
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var this__15758 = this;
  return cljs.core.swap_BANG_.call(null, this__15758.buffer_atom, function(p1__15738_SHARP_) {
    return cljs.core.cons.call(null, ch, p1__15738_SHARP_)
  })
};
cljs.reader.StringPushbackReader;
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3824__auto____15760 = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3824__auto____15760)) {
    return or__3824__auto____15760
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3824__auto____15765 = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3824__auto____15765) {
    return or__3824__auto____15765
  }else {
    var and__3822__auto____15767 = function() {
      var or__3824__auto____15766 = "+" === initch;
      if(or__3824__auto____15766) {
        return or__3824__auto____15766
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3822__auto____15767)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch__15768 = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch__15768);
        return next_ch__15768
      }())
    }else {
      return and__3822__auto____15767
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(goog.isDef(var_args)) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__15769) {
    var rdr = cljs.core.first(arglist__15769);
    var msg = cljs.core.rest(arglist__15769);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$lang$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3822__auto____15773 = !(ch === "#");
  if(and__3822__auto____15773) {
    var and__3822__auto____15774 = !(ch === "'");
    if(and__3822__auto____15774) {
      var and__3822__auto____15775 = !(ch === ":");
      if(and__3822__auto____15775) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3822__auto____15775
      }
    }else {
      return and__3822__auto____15774
    }
  }else {
    return and__3822__auto____15773
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb__15780 = new goog.string.StringBuffer(initch);
  var ch__15781 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3824__auto____15782 = ch__15781 == null;
      if(or__3824__auto____15782) {
        return or__3824__auto____15782
      }else {
        var or__3824__auto____15783 = cljs.reader.whitespace_QMARK_.call(null, ch__15781);
        if(or__3824__auto____15783) {
          return or__3824__auto____15783
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch__15781)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch__15781);
      return sb__15780.toString()
    }else {
      var G__15784 = function() {
        sb__15780.append(ch__15781);
        return sb__15780
      }();
      var G__15785 = cljs.reader.read_char.call(null, rdr);
      sb__15780 = G__15784;
      ch__15781 = G__15785;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch__15789 = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3824__auto____15790 = ch__15789 === "n";
      if(or__3824__auto____15790) {
        return or__3824__auto____15790
      }else {
        var or__3824__auto____15791 = ch__15789 === "r";
        if(or__3824__auto____15791) {
          return or__3824__auto____15791
        }else {
          return ch__15789 == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches__15793 = re.exec(s);
  if(matches__15793 == null) {
    return null
  }else {
    if(matches__15793.length === 1) {
      return matches__15793[0]
    }else {
      return matches__15793
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups__15801 = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3__15802 = groups__15801[2];
  if(!function() {
    var or__3824__auto____15803 = group3__15802 == null;
    if(or__3824__auto____15803) {
      return or__3824__auto____15803
    }else {
      return group3__15802.length < 1
    }
  }()) {
    return 0
  }else {
    var negate__15804 = "-" === groups__15801[1] ? -1 : 1;
    var a__15805 = cljs.core.truth_(groups__15801[3]) ? [groups__15801[3], 10] : cljs.core.truth_(groups__15801[4]) ? [groups__15801[4], 16] : cljs.core.truth_(groups__15801[5]) ? [groups__15801[5], 8] : cljs.core.truth_(groups__15801[7]) ? [groups__15801[7], parseInt(groups__15801[7])] : "\ufdd0'default" ? [null, null] : null;
    var n__15806 = a__15805[0];
    var radix__15807 = a__15805[1];
    if(n__15806 == null) {
      return null
    }else {
      return negate__15804 * parseInt(n__15806, radix__15807)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups__15811 = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator__15812 = groups__15811[1];
  var denominator__15813 = groups__15811[2];
  return parseInt(numinator__15812) / parseInt(denominator__15813)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches__15816 = re.exec(s);
  if(function() {
    var and__3822__auto____15817 = !(matches__15816 == null);
    if(and__3822__auto____15817) {
      return matches__15816[0] === s
    }else {
      return and__3822__auto____15817
    }
  }()) {
    if(matches__15816.length === 1) {
      return matches__15816[0]
    }else {
      return matches__15816
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\u0008"
            }else {
              if(c === "f") {
                return"\u000c"
              }else {
                if("\ufdd0'else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code__15819 = parseInt(code_str, 16);
  return String.fromCharCode(code__15819)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch__15822 = cljs.reader.read_char.call(null, reader);
  var mapresult__15823 = cljs.reader.escape_char_map.call(null, ch__15822);
  if(cljs.core.truth_(mapresult__15823)) {
    return mapresult__15823
  }else {
    if(ch__15822 === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch__15822, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch__15822 === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch__15822, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch__15822)) {
          return String.fromCharCode(ch__15822)
        }else {
          if("\ufdd0'else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch__15822)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch__15825 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch__15825))) {
      var G__15826 = cljs.reader.read_char.call(null, rdr);
      ch__15825 = G__15826;
      continue
    }else {
      return ch__15825
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a__15833 = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch__15834 = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch__15834)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF")
    }
    if(delim === ch__15834) {
      return cljs.core.persistent_BANG_.call(null, a__15833)
    }else {
      var temp__3971__auto____15835 = cljs.reader.macros.call(null, ch__15834);
      if(cljs.core.truth_(temp__3971__auto____15835)) {
        var macrofn__15836 = temp__3971__auto____15835;
        var mret__15837 = macrofn__15836.call(null, rdr, ch__15834);
        var G__15839 = mret__15837 === rdr ? a__15833 : cljs.core.conj_BANG_.call(null, a__15833, mret__15837);
        a__15833 = G__15839;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch__15834);
        var o__15838 = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__15840 = o__15838 === rdr ? a__15833 : cljs.core.conj_BANG_.call(null, a__15833, o__15838);
        a__15833 = G__15840;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch__15845 = cljs.reader.read_char.call(null, rdr);
  var dm__15846 = cljs.reader.dispatch_macros.call(null, ch__15845);
  if(cljs.core.truth_(dm__15846)) {
    return dm__15846.call(null, rdr, _)
  }else {
    var temp__3971__auto____15847 = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch__15845);
    if(cljs.core.truth_(temp__3971__auto____15847)) {
      var obj__15848 = temp__3971__auto____15847;
      return obj__15848
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch__15845)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l__15850 = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l__15850))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l__15850)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer__15857 = new goog.string.StringBuffer(initch);
  var ch__15858 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____15859 = ch__15858 == null;
      if(or__3824__auto____15859) {
        return or__3824__auto____15859
      }else {
        var or__3824__auto____15860 = cljs.reader.whitespace_QMARK_.call(null, ch__15858);
        if(or__3824__auto____15860) {
          return or__3824__auto____15860
        }else {
          return cljs.reader.macros.call(null, ch__15858)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch__15858);
      var s__15861 = buffer__15857.toString();
      var or__3824__auto____15862 = cljs.reader.match_number.call(null, s__15861);
      if(cljs.core.truth_(or__3824__auto____15862)) {
        return or__3824__auto____15862
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s__15861, "]")
      }
    }else {
      var G__15863 = function() {
        buffer__15857.append(ch__15858);
        return buffer__15857
      }();
      var G__15864 = cljs.reader.read_char.call(null, reader);
      buffer__15857 = G__15863;
      ch__15858 = G__15864;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer__15867 = new goog.string.StringBuffer;
  var ch__15868 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch__15868 == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading string")
    }else {
      if("\\" === ch__15868) {
        var G__15869 = function() {
          buffer__15867.append(cljs.reader.escape_char.call(null, buffer__15867, reader));
          return buffer__15867
        }();
        var G__15870 = cljs.reader.read_char.call(null, reader);
        buffer__15867 = G__15869;
        ch__15868 = G__15870;
        continue
      }else {
        if('"' === ch__15868) {
          return buffer__15867.toString()
        }else {
          if("\ufdd0'default") {
            var G__15871 = function() {
              buffer__15867.append(ch__15868);
              return buffer__15867
            }();
            var G__15872 = cljs.reader.read_char.call(null, reader);
            buffer__15867 = G__15871;
            ch__15868 = G__15872;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token__15874 = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token__15874, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token__15874, 0, token__15874.indexOf("/")), cljs.core.subs.call(null, token__15874, token__15874.indexOf("/") + 1, token__15874.length))
  }else {
    return cljs.reader.special_symbols.call(null, token__15874, cljs.core.symbol.call(null, token__15874))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token__15884 = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a__15885 = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token__15884);
  var token__15886 = a__15885[0];
  var ns__15887 = a__15885[1];
  var name__15888 = a__15885[2];
  if(cljs.core.truth_(function() {
    var or__3824__auto____15890 = function() {
      var and__3822__auto____15889 = !(void 0 === ns__15887);
      if(and__3822__auto____15889) {
        return ns__15887.substring(ns__15887.length - 2, ns__15887.length) === ":/"
      }else {
        return and__3822__auto____15889
      }
    }();
    if(cljs.core.truth_(or__3824__auto____15890)) {
      return or__3824__auto____15890
    }else {
      var or__3824__auto____15891 = name__15888[name__15888.length - 1] === ":";
      if(or__3824__auto____15891) {
        return or__3824__auto____15891
      }else {
        return!(token__15886.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__15886)
  }else {
    if(function() {
      var and__3822__auto____15892 = !(ns__15887 == null);
      if(and__3822__auto____15892) {
        return ns__15887.length > 0
      }else {
        return and__3822__auto____15892
      }
    }()) {
      return cljs.core.keyword.call(null, ns__15887.substring(0, ns__15887.indexOf("/")), name__15888)
    }else {
      return cljs.core.keyword.call(null, token__15886)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(cljs.core.symbol_QMARK_.call(null, f)) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArrays([f], [true])
      }else {
        if("\ufdd0'else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m__15898 = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m__15898)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o__15899 = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__15900__15901 = o__15899;
    if(G__15900__15901) {
      if(function() {
        var or__3824__auto____15902 = G__15900__15901.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3824__auto____15902) {
          return or__3824__auto____15902
        }else {
          return G__15900__15901.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__15900__15901.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__15900__15901)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__15900__15901)
    }
  }()) {
    return cljs.core.with_meta.call(null, o__15899, cljs.core.merge.call(null, cljs.core.meta.call(null, o__15899), m__15898))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, "\ufdd1'quote")
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, "\ufdd1'deref")
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0'else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "<") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0'else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch__15906 = cljs.reader.read_char.call(null, reader);
    if(ch__15906 == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch__15906)) {
        var G__15909 = reader;
        var G__15910 = eof_is_error;
        var G__15911 = sentinel;
        var G__15912 = is_recursive;
        reader = G__15909;
        eof_is_error = G__15910;
        sentinel = G__15911;
        is_recursive = G__15912;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch__15906)) {
          var G__15913 = cljs.reader.read_comment.call(null, reader, ch__15906);
          var G__15914 = eof_is_error;
          var G__15915 = sentinel;
          var G__15916 = is_recursive;
          reader = G__15913;
          eof_is_error = G__15914;
          sentinel = G__15915;
          is_recursive = G__15916;
          continue
        }else {
          if("\ufdd0'else") {
            var f__15907 = cljs.reader.macros.call(null, ch__15906);
            var res__15908 = cljs.core.truth_(f__15907) ? f__15907.call(null, reader, ch__15906) : cljs.reader.number_literal_QMARK_.call(null, reader, ch__15906) ? cljs.reader.read_number.call(null, reader, ch__15906) : "\ufdd0'else" ? cljs.reader.read_symbol.call(null, reader, ch__15906) : null;
            if(res__15908 === reader) {
              var G__15917 = reader;
              var G__15918 = eof_is_error;
              var G__15919 = sentinel;
              var G__15920 = is_recursive;
              reader = G__15917;
              eof_is_error = G__15918;
              sentinel = G__15919;
              is_recursive = G__15920;
              continue
            }else {
              return res__15908
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r__15922 = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r__15922, true, null, false)
};
cljs.reader.zero_fill_right = function zero_fill_right(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return s.substring(0, width)
    }else {
      if("\ufdd0'else") {
        var b__15924 = new goog.string.StringBuffer(s);
        while(true) {
          if(b__15924.getLength() < width) {
            var G__15925 = b__15924.append("0");
            b__15924 = G__15925;
            continue
          }else {
            return b__15924.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return num % div === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3822__auto____15928 = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3822__auto____15928)) {
    var or__3824__auto____15929 = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3824__auto____15929)) {
      return or__3824__auto____15929
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3822__auto____15928
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm__15934 = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap__15935 = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core._lookup.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap__15935 : dim_norm__15934, month, null)
  }
}();
cljs.reader.parse_and_validate_timestamp = function() {
  var timestamp__15936 = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
  var check__15938 = function(low, n, high, msg) {
    if(function() {
      var and__3822__auto____15937 = low <= n;
      if(and__3822__auto____15937) {
        return n <= high
      }else {
        return and__3822__auto____15937
      }
    }()) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'<=", "\ufdd1'low", "\ufdd1'n", "\ufdd1'high"), cljs.core.hash_map("\ufdd0'line", 474))))].join(""));
    }
    return n
  };
  return function(ts) {
    var temp__3974__auto____15939 = cljs.core.map.call(null, cljs.core.vec, cljs.core.split_at.call(null, 8, cljs.core.re_matches.call(null, timestamp__15936, ts)));
    if(cljs.core.truth_(temp__3974__auto____15939)) {
      var vec__15940__15943 = temp__3974__auto____15939;
      var vec__15941__15944 = cljs.core.nth.call(null, vec__15940__15943, 0, null);
      var ___15945 = cljs.core.nth.call(null, vec__15941__15944, 0, null);
      var years__15946 = cljs.core.nth.call(null, vec__15941__15944, 1, null);
      var months__15947 = cljs.core.nth.call(null, vec__15941__15944, 2, null);
      var days__15948 = cljs.core.nth.call(null, vec__15941__15944, 3, null);
      var hours__15949 = cljs.core.nth.call(null, vec__15941__15944, 4, null);
      var minutes__15950 = cljs.core.nth.call(null, vec__15941__15944, 5, null);
      var seconds__15951 = cljs.core.nth.call(null, vec__15941__15944, 6, null);
      var milliseconds__15952 = cljs.core.nth.call(null, vec__15941__15944, 7, null);
      var vec__15942__15953 = cljs.core.nth.call(null, vec__15940__15943, 1, null);
      var ___15954 = cljs.core.nth.call(null, vec__15942__15953, 0, null);
      var ___15955 = cljs.core.nth.call(null, vec__15942__15953, 1, null);
      var ___15956 = cljs.core.nth.call(null, vec__15942__15953, 2, null);
      var V__15957 = vec__15940__15943;
      var vec__15958__15961 = cljs.core.map.call(null, function(v) {
        return cljs.core.map.call(null, function(p1__15933_SHARP_) {
          return parseInt(p1__15933_SHARP_, 10)
        }, v)
      }, cljs.core.map.call(null, function(p1__15931_SHARP_, p2__15930_SHARP_) {
        return cljs.core.update_in.call(null, p2__15930_SHARP_, cljs.core.PersistentVector.fromArray([0], true), p1__15931_SHARP_)
      }, cljs.core.PersistentVector.fromArray([cljs.core.constantly.call(null, null), function(p1__15932_SHARP_) {
        if(cljs.core._EQ_.call(null, p1__15932_SHARP_, "-")) {
          return"-1"
        }else {
          return"1"
        }
      }], true), V__15957));
      var vec__15959__15962 = cljs.core.nth.call(null, vec__15958__15961, 0, null);
      var ___15963 = cljs.core.nth.call(null, vec__15959__15962, 0, null);
      var y__15964 = cljs.core.nth.call(null, vec__15959__15962, 1, null);
      var mo__15965 = cljs.core.nth.call(null, vec__15959__15962, 2, null);
      var d__15966 = cljs.core.nth.call(null, vec__15959__15962, 3, null);
      var h__15967 = cljs.core.nth.call(null, vec__15959__15962, 4, null);
      var m__15968 = cljs.core.nth.call(null, vec__15959__15962, 5, null);
      var s__15969 = cljs.core.nth.call(null, vec__15959__15962, 6, null);
      var ms__15970 = cljs.core.nth.call(null, vec__15959__15962, 7, null);
      var vec__15960__15971 = cljs.core.nth.call(null, vec__15958__15961, 1, null);
      var offset_sign__15972 = cljs.core.nth.call(null, vec__15960__15971, 0, null);
      var offset_hours__15973 = cljs.core.nth.call(null, vec__15960__15971, 1, null);
      var offset_minutes__15974 = cljs.core.nth.call(null, vec__15960__15971, 2, null);
      var offset__15975 = offset_sign__15972 * (offset_hours__15973 * 60 + offset_minutes__15974);
      return cljs.core.PersistentVector.fromArray([cljs.core.not.call(null, years__15946) ? 1970 : y__15964, cljs.core.not.call(null, months__15947) ? 1 : check__15938.call(null, 1, mo__15965, 12, "timestamp month field must be in range 1..12"), cljs.core.not.call(null, days__15948) ? 1 : check__15938.call(null, 1, d__15966, cljs.reader.days_in_month.call(null, mo__15965, cljs.reader.leap_year_QMARK_.call(null, y__15964)), "timestamp day field must be in range 1..last day in month"), cljs.core.not.call(null, 
      hours__15949) ? 0 : check__15938.call(null, 0, h__15967, 23, "timestamp hour field must be in range 0..23"), cljs.core.not.call(null, minutes__15950) ? 0 : check__15938.call(null, 0, m__15968, 59, "timestamp minute field must be in range 0..59"), cljs.core.not.call(null, seconds__15951) ? 0 : check__15938.call(null, 0, s__15969, cljs.core._EQ_.call(null, m__15968, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.core.not.call(null, milliseconds__15952) ? 0 : check__15938.call(null, 
      0, ms__15970, 999, "timestamp millisecond field must be in range 0..999"), offset__15975], true)
    }else {
      return null
    }
  }
}();
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__3971__auto____15987 = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__3971__auto____15987)) {
    var vec__15988__15989 = temp__3971__auto____15987;
    var years__15990 = cljs.core.nth.call(null, vec__15988__15989, 0, null);
    var months__15991 = cljs.core.nth.call(null, vec__15988__15989, 1, null);
    var days__15992 = cljs.core.nth.call(null, vec__15988__15989, 2, null);
    var hours__15993 = cljs.core.nth.call(null, vec__15988__15989, 3, null);
    var minutes__15994 = cljs.core.nth.call(null, vec__15988__15989, 4, null);
    var seconds__15995 = cljs.core.nth.call(null, vec__15988__15989, 5, null);
    var ms__15996 = cljs.core.nth.call(null, vec__15988__15989, 6, null);
    var offset__15997 = cljs.core.nth.call(null, vec__15988__15989, 7, null);
    return new Date(Date.UTC(years__15990, months__15991 - 1, days__15992, hours__15993, minutes__15994, seconds__15995, ms__15996) - offset__15997 * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["inst", "uuid", "queue"], {"inst":cljs.reader.read_date, "uuid":cljs.reader.read_uuid, "queue":cljs.reader.read_queue}));
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag__16001 = cljs.reader.read_symbol.call(null, rdr, initch);
  var temp__3971__auto____16002 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), cljs.core.name.call(null, tag__16001), null);
  if(cljs.core.truth_(temp__3971__auto____16002)) {
    var pfn__16003 = temp__3971__auto____16002;
    return pfn__16003.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", cljs.core.name.call(null, tag__16001), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__16006 = cljs.core.name.call(null, tag);
  var old_parser__16007 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__16006, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__16006, f);
  return old_parser__16007
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__16010 = cljs.core.name.call(null, tag);
  var old_parser__16011 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__16010, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__16010);
  return old_parser__16011
};
goog.provide("c2.maths");
goog.require("cljs.core");
c2.maths.Pi = Math.PI;
c2.maths.Tau = 2 * c2.maths.Pi;
c2.maths.e = Math.E;
c2.maths.radians_per_degree = c2.maths.Pi / 180;
c2.maths.rad = function rad(x) {
  return c2.maths.radians_per_degree * x
};
c2.maths.sin = function sin(x) {
  return Math.sin.call(null, x)
};
c2.maths.asin = function asin(x) {
  return Math.asin.call(null, x)
};
c2.maths.cos = function cos(x) {
  return Math.cos.call(null, x)
};
c2.maths.acos = function acos(x) {
  return Math.acos.call(null, x)
};
c2.maths.tan = function tan(x) {
  return Math.tan.call(null, x)
};
c2.maths.atan = function atan(x) {
  return Math.atan.call(null, x)
};
c2.maths.expt = function() {
  var expt = null;
  var expt__1 = function(x) {
    return Math.exp.call(null, x)
  };
  var expt__2 = function(x, y) {
    return Math.pow.call(null, x, y)
  };
  expt = function(x, y) {
    switch(arguments.length) {
      case 1:
        return expt__1.call(this, x);
      case 2:
        return expt__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  expt.cljs$lang$arity$1 = expt__1;
  expt.cljs$lang$arity$2 = expt__2;
  return expt
}();
c2.maths.sq = function sq(x) {
  return c2.maths.expt.call(null, x, 2)
};
c2.maths.sqrt = function sqrt(x) {
  return Math.sqrt.call(null, x)
};
c2.maths.floor = function floor(x) {
  return Math.floor.call(null, x)
};
c2.maths.ceil = function ceil(x) {
  return Math.ceil.call(null, x)
};
c2.maths.abs = function abs(x) {
  return Math.abs.call(null, x)
};
c2.maths.log = function() {
  var log = null;
  var log__1 = function(x) {
    return Math.log.call(null, x)
  };
  var log__2 = function(base, x) {
    return Math.log.call(null, x) / Math.log.call(null, base)
  };
  log = function(base, x) {
    switch(arguments.length) {
      case 1:
        return log__1.call(this, base);
      case 2:
        return log__2.call(this, base, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  log.cljs$lang$arity$1 = log__1;
  log.cljs$lang$arity$2 = log__2;
  return log
}();
c2.maths.log10 = function log10(x) {
  return Math.log(x) / Math.LN10
};
c2.maths.extent = function extent(xs) {
  return cljs.core.PersistentVector.fromArray([cljs.core.apply.call(null, cljs.core.min, xs), cljs.core.apply.call(null, cljs.core.max, xs)], true)
};
c2.maths.mean = function mean(xs) {
  return cljs.core.reduce.call(null, cljs.core._PLUS_, xs) / cljs.core.count.call(null, xs)
};
c2.maths.median = function median(xs) {
  var sorted__16404 = cljs.core.sort.call(null, xs);
  var n__16405 = cljs.core.count.call(null, xs);
  if(cljs.core._EQ_.call(null, n__16405, 1)) {
    return cljs.core.first.call(null, sorted__16404)
  }else {
    if(cljs.core.odd_QMARK_.call(null, n__16405)) {
      return cljs.core.nth.call(null, sorted__16404, (n__16405 + 1) / 2)
    }else {
      if("\ufdd0'else") {
        var mid__16406 = n__16405 / 2;
        return c2.maths.mean.call(null, cljs.core.PersistentVector.fromArray([cljs.core.nth.call(null, sorted__16404, c2.maths.floor.call(null, mid__16406)), cljs.core.nth.call(null, sorted__16404, c2.maths.ceil.call(null, mid__16406))], true))
      }else {
        return null
      }
    }
  }
};
c2.maths.irange = function() {
  var irange = null;
  var irange__1 = function(start) {
    return cljs.core.range.call(null, start)
  };
  var irange__2 = function(start, end) {
    return cljs.core.concat.call(null, cljs.core.range.call(null, start, end), cljs.core.PersistentVector.fromArray([end], true))
  };
  var irange__3 = function(start, end, step) {
    var r__16408 = cljs.core.range.call(null, start, end, step);
    if(cljs.core.first.call(null, r__16408) % step === end % step) {
      return cljs.core.concat.call(null, r__16408, cljs.core.PersistentVector.fromArray([end], true))
    }else {
      return r__16408
    }
  };
  irange = function(start, end, step) {
    switch(arguments.length) {
      case 1:
        return irange__1.call(this, start);
      case 2:
        return irange__2.call(this, start, end);
      case 3:
        return irange__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  irange.cljs$lang$arity$1 = irange__1;
  irange.cljs$lang$arity$2 = irange__2;
  irange.cljs$lang$arity$3 = irange__3;
  return irange
}();
c2.maths.within_QMARK_ = function within_QMARK_(x, p__16409) {
  var vec__16415__16416 = p__16409;
  var bottom__16417 = cljs.core.nth.call(null, vec__16415__16416, 0, null);
  var top__16418 = cljs.core.nth.call(null, vec__16415__16416, 1, null);
  var and__3822__auto____16419 = bottom__16417 <= x;
  if(and__3822__auto____16419) {
    return x <= top__16418
  }else {
    return and__3822__auto____16419
  }
};
c2.maths.add = function() {
  var add__delegate = function(args) {
    return cljs.core.reduce.call(null, function(A, B) {
      if(function() {
        var and__3822__auto____16424 = cljs.core.number_QMARK_.call(null, A);
        if(and__3822__auto____16424) {
          return cljs.core.number_QMARK_.call(null, B)
        }else {
          return and__3822__auto____16424
        }
      }()) {
        return A + B
      }else {
        if(function() {
          var and__3822__auto____16425 = cljs.core.coll_QMARK_.call(null, A);
          if(and__3822__auto____16425) {
            return cljs.core.coll_QMARK_.call(null, B)
          }else {
            return and__3822__auto____16425
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._PLUS_, A, B)
        }else {
          if(function() {
            var and__3822__auto____16426 = cljs.core.number_QMARK_.call(null, A);
            if(and__3822__auto____16426) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____16426
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._PLUS_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
          }else {
            if(function() {
              var and__3822__auto____16427 = cljs.core.coll_QMARK_.call(null, A);
              if(and__3822__auto____16427) {
                return cljs.core.number_QMARK_.call(null, B)
              }else {
                return and__3822__auto____16427
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._PLUS_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
            }else {
              return null
            }
          }
        }
      }
    }, args)
  };
  var add = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return add__delegate.call(this, args)
  };
  add.cljs$lang$maxFixedArity = 0;
  add.cljs$lang$applyTo = function(arglist__16428) {
    var args = cljs.core.seq(arglist__16428);
    return add__delegate(args)
  };
  add.cljs$lang$arity$variadic = add__delegate;
  return add
}();
c2.maths.sub = function() {
  var sub__delegate = function(args) {
    if(cljs.core._EQ_.call(null, cljs.core.count.call(null, args), 1)) {
      if(function() {
        var and__3822__auto____16437 = cljs.core.number_QMARK_.call(null, 0);
        if(and__3822__auto____16437) {
          return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
        }else {
          return and__3822__auto____16437
        }
      }()) {
        return 0 - cljs.core.first.call(null, args)
      }else {
        if(function() {
          var and__3822__auto____16438 = cljs.core.coll_QMARK_.call(null, 0);
          if(and__3822__auto____16438) {
            return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
          }else {
            return and__3822__auto____16438
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._, 0, cljs.core.first.call(null, args))
        }else {
          if(function() {
            var and__3822__auto____16439 = cljs.core.number_QMARK_.call(null, 0);
            if(and__3822__auto____16439) {
              return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
            }else {
              return and__3822__auto____16439
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._, cljs.core.replicate.call(null, cljs.core.count.call(null, cljs.core.first.call(null, args)), 0), cljs.core.first.call(null, args))
          }else {
            if(function() {
              var and__3822__auto____16440 = cljs.core.coll_QMARK_.call(null, 0);
              if(and__3822__auto____16440) {
                return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
              }else {
                return and__3822__auto____16440
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._, 0, cljs.core.replicate.call(null, cljs.core.count.call(null, 0), cljs.core.first.call(null, args)))
            }else {
              return null
            }
          }
        }
      }
    }else {
      return cljs.core.reduce.call(null, function(A, B) {
        if(function() {
          var and__3822__auto____16441 = cljs.core.number_QMARK_.call(null, A);
          if(and__3822__auto____16441) {
            return cljs.core.number_QMARK_.call(null, B)
          }else {
            return and__3822__auto____16441
          }
        }()) {
          return A - B
        }else {
          if(function() {
            var and__3822__auto____16442 = cljs.core.coll_QMARK_.call(null, A);
            if(and__3822__auto____16442) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____16442
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._, A, B)
          }else {
            if(function() {
              var and__3822__auto____16443 = cljs.core.number_QMARK_.call(null, A);
              if(and__3822__auto____16443) {
                return cljs.core.coll_QMARK_.call(null, B)
              }else {
                return and__3822__auto____16443
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
            }else {
              if(function() {
                var and__3822__auto____16444 = cljs.core.coll_QMARK_.call(null, A);
                if(and__3822__auto____16444) {
                  return cljs.core.number_QMARK_.call(null, B)
                }else {
                  return and__3822__auto____16444
                }
              }()) {
                return cljs.core.map.call(null, cljs.core._, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
              }else {
                return null
              }
            }
          }
        }
      }, args)
    }
  };
  var sub = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sub__delegate.call(this, args)
  };
  sub.cljs$lang$maxFixedArity = 0;
  sub.cljs$lang$applyTo = function(arglist__16445) {
    var args = cljs.core.seq(arglist__16445);
    return sub__delegate(args)
  };
  sub.cljs$lang$arity$variadic = sub__delegate;
  return sub
}();
c2.maths.mul = function() {
  var mul__delegate = function(args) {
    return cljs.core.reduce.call(null, function(A, B) {
      if(function() {
        var and__3822__auto____16450 = cljs.core.number_QMARK_.call(null, A);
        if(and__3822__auto____16450) {
          return cljs.core.number_QMARK_.call(null, B)
        }else {
          return and__3822__auto____16450
        }
      }()) {
        return A * B
      }else {
        if(function() {
          var and__3822__auto____16451 = cljs.core.coll_QMARK_.call(null, A);
          if(and__3822__auto____16451) {
            return cljs.core.coll_QMARK_.call(null, B)
          }else {
            return and__3822__auto____16451
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._STAR_, A, B)
        }else {
          if(function() {
            var and__3822__auto____16452 = cljs.core.number_QMARK_.call(null, A);
            if(and__3822__auto____16452) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____16452
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._STAR_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
          }else {
            if(function() {
              var and__3822__auto____16453 = cljs.core.coll_QMARK_.call(null, A);
              if(and__3822__auto____16453) {
                return cljs.core.number_QMARK_.call(null, B)
              }else {
                return and__3822__auto____16453
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._STAR_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
            }else {
              return null
            }
          }
        }
      }
    }, args)
  };
  var mul = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return mul__delegate.call(this, args)
  };
  mul.cljs$lang$maxFixedArity = 0;
  mul.cljs$lang$applyTo = function(arglist__16454) {
    var args = cljs.core.seq(arglist__16454);
    return mul__delegate(args)
  };
  mul.cljs$lang$arity$variadic = mul__delegate;
  return mul
}();
c2.maths.div = function() {
  var div__delegate = function(args) {
    if(cljs.core._EQ_.call(null, cljs.core.count.call(null, args), 1)) {
      if(function() {
        var and__3822__auto____16463 = cljs.core.number_QMARK_.call(null, 1);
        if(and__3822__auto____16463) {
          return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
        }else {
          return and__3822__auto____16463
        }
      }()) {
        return 1 / cljs.core.first.call(null, args)
      }else {
        if(function() {
          var and__3822__auto____16464 = cljs.core.coll_QMARK_.call(null, 1);
          if(and__3822__auto____16464) {
            return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
          }else {
            return and__3822__auto____16464
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._SLASH_, 1, cljs.core.first.call(null, args))
        }else {
          if(function() {
            var and__3822__auto____16465 = cljs.core.number_QMARK_.call(null, 1);
            if(and__3822__auto____16465) {
              return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
            }else {
              return and__3822__auto____16465
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._SLASH_, cljs.core.replicate.call(null, cljs.core.count.call(null, cljs.core.first.call(null, args)), 1), cljs.core.first.call(null, args))
          }else {
            if(function() {
              var and__3822__auto____16466 = cljs.core.coll_QMARK_.call(null, 1);
              if(and__3822__auto____16466) {
                return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
              }else {
                return and__3822__auto____16466
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._SLASH_, 1, cljs.core.replicate.call(null, cljs.core.count.call(null, 1), cljs.core.first.call(null, args)))
            }else {
              return null
            }
          }
        }
      }
    }else {
      return cljs.core.reduce.call(null, function(A, B) {
        if(function() {
          var and__3822__auto____16467 = cljs.core.number_QMARK_.call(null, A);
          if(and__3822__auto____16467) {
            return cljs.core.number_QMARK_.call(null, B)
          }else {
            return and__3822__auto____16467
          }
        }()) {
          return A / B
        }else {
          if(function() {
            var and__3822__auto____16468 = cljs.core.coll_QMARK_.call(null, A);
            if(and__3822__auto____16468) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____16468
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._SLASH_, A, B)
          }else {
            if(function() {
              var and__3822__auto____16469 = cljs.core.number_QMARK_.call(null, A);
              if(and__3822__auto____16469) {
                return cljs.core.coll_QMARK_.call(null, B)
              }else {
                return and__3822__auto____16469
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._SLASH_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
            }else {
              if(function() {
                var and__3822__auto____16470 = cljs.core.coll_QMARK_.call(null, A);
                if(and__3822__auto____16470) {
                  return cljs.core.number_QMARK_.call(null, B)
                }else {
                  return and__3822__auto____16470
                }
              }()) {
                return cljs.core.map.call(null, cljs.core._SLASH_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
              }else {
                return null
              }
            }
          }
        }
      }, args)
    }
  };
  var div = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return div__delegate.call(this, args)
  };
  div.cljs$lang$maxFixedArity = 0;
  div.cljs$lang$applyTo = function(arglist__16471) {
    var args = cljs.core.seq(arglist__16471);
    return div__delegate(args)
  };
  div.cljs$lang$arity$variadic = div__delegate;
  return div
}();
c2.maths.quantile = function() {
  var quantile__delegate = function(data, p__16472) {
    var map__16494__16495 = p__16472;
    var map__16494__16496 = cljs.core.seq_QMARK_.call(null, map__16494__16495) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16494__16495) : map__16494__16495;
    var probs__16497 = cljs.core._lookup.call(null, map__16494__16496, "\ufdd0'probs", cljs.core.PersistentVector.fromArray([0, 0.25, 0.5, 0.75, 1], true));
    var xs__16498 = cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.sort.call(null, data));
    var n_1__16499 = cljs.core.count.call(null, xs__16498) - 1;
    var iter__2363__auto____16514 = function iter__16500(s__16501) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__16501__16508 = s__16501;
        while(true) {
          if(cljs.core.seq.call(null, s__16501__16508)) {
            var q__16509 = cljs.core.first.call(null, s__16501__16508);
            return cljs.core.cons.call(null, function() {
              var index__16510 = q__16509 * n_1__16499 + 1;
              var lo__16511 = cljs.core.int$.call(null, c2.maths.floor.call(null, index__16510));
              var h__16512 = index__16510 - lo__16511;
              var a__16513 = xs__16498.call(null, lo__16511 - 1);
              if(cljs.core._EQ_.call(null, h__16512, 0)) {
                return a__16513
              }else {
                return a__16513 + h__16512 * (xs__16498.call(null, lo__16511) - a__16513)
              }
            }(), iter__16500.call(null, cljs.core.rest.call(null, s__16501__16508)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____16514.call(null, probs__16497)
  };
  var quantile = function(data, var_args) {
    var p__16472 = null;
    if(goog.isDef(var_args)) {
      p__16472 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return quantile__delegate.call(this, data, p__16472)
  };
  quantile.cljs$lang$maxFixedArity = 1;
  quantile.cljs$lang$applyTo = function(arglist__16515) {
    var data = cljs.core.first(arglist__16515);
    var p__16472 = cljs.core.rest(arglist__16515);
    return quantile__delegate(data, p__16472)
  };
  quantile.cljs$lang$arity$variadic = quantile__delegate;
  return quantile
}();
goog.provide("c2.ticks");
goog.require("cljs.core");
goog.require("c2.maths");
goog.require("c2.maths");
c2.ticks.Q = cljs.core.PersistentVector.fromArray([1, 5, 2, 2.5, 4, 3], true);
c2.ticks.index_of = function index_of(x, coll) {
  return cljs.core.first.call(null, function() {
    var iter__2363__auto____15637 = function iter__15625(s__15626) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__15626__15632 = s__15626;
        while(true) {
          if(cljs.core.seq.call(null, s__15626__15632)) {
            var vec__15633__15634 = cljs.core.first.call(null, s__15626__15632);
            var idx__15635 = cljs.core.nth.call(null, vec__15633__15634, 0, null);
            var y__15636 = cljs.core.nth.call(null, vec__15633__15634, 1, null);
            if(cljs.core._EQ_.call(null, y__15636, x)) {
              return cljs.core.cons.call(null, idx__15635, iter__15625.call(null, cljs.core.rest.call(null, s__15626__15632)))
            }else {
              var G__15638 = cljs.core.rest.call(null, s__15626__15632);
              s__15626__15632 = G__15638;
              continue
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____15637.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, coll))
  }())
};
c2.ticks.label_range_contains_zero_QMARK_ = function label_range_contains_zero_QMARK_(l_min, l_max, l_step) {
  var and__3822__auto____15641 = l_max > 0;
  if(and__3822__auto____15641) {
    var and__3822__auto____15642 = l_min < 0;
    if(and__3822__auto____15642) {
      return l_min % l_step === 0
    }else {
      return and__3822__auto____15642
    }
  }else {
    return and__3822__auto____15641
  }
};
c2.ticks.simplicity = function simplicity(q, j, label_range_contains_zero) {
  var v__15644 = cljs.core.truth_(label_range_contains_zero) ? 1 : 0;
  if(cljs.core.count.call(null, c2.ticks.Q) <= 1) {
    return 1 - j + v__15644
  }else {
    return 1 - c2.ticks.index_of.call(null, q, c2.ticks.Q) / (cljs.core.count.call(null, c2.ticks.Q) - 1) - j + v__15644
  }
};
c2.ticks.max_simplicity = function max_simplicity(q, j) {
  return c2.ticks.simplicity.call(null, q, j, true)
};
c2.ticks.coverage = function coverage(d_min, d_max, l_min, l_max) {
  return 1 - 0.5 * ((c2.maths.sq.call(null, d_max - l_max) + c2.maths.sq.call(null, d_min - l_min)) / c2.maths.sq.call(null, 0.1 * (d_max - d_min)))
};
c2.ticks.max_coverage = function max_coverage(d_min, d_max, span) {
  var d_range__15646 = d_max - d_min;
  if(span > d_range__15646) {
    return 1 - c2.maths.sq.call(null, (span - d_range__15646) / (0.2 * d_range__15646))
  }else {
    return 1
  }
};
c2.ticks.density = function density(r, rt) {
  return 2 - (r / rt > rt / r ? r / rt : rt / r)
};
c2.ticks.max_density = function max_density(r, rt) {
  if(r >= rt) {
    return 2 - r / rt
  }else {
    return 1
  }
};
c2.ticks.w = function w(p__15647) {
  var vec__15655__15656 = p__15647;
  var simplicity__15657 = cljs.core.nth.call(null, vec__15655__15656, 0, null);
  var coverage__15658 = cljs.core.nth.call(null, vec__15655__15656, 1, null);
  var density__15659 = cljs.core.nth.call(null, vec__15655__15656, 2, null);
  var legibility__15660 = cljs.core.nth.call(null, vec__15655__15656, 3, null);
  var w__15661 = cljs.core.PersistentVector.fromArray([0.2, 0.25, 0.5, 0.05], true);
  return simplicity__15657 * w__15661.call(null, 0) + coverage__15658 * w__15661.call(null, 1) + density__15659 * w__15661.call(null, 2) + legibility__15660 * w__15661.call(null, 3)
};
c2.ticks.search = function() {
  var search__delegate = function(p__15662, p__15663) {
    var vec__15698__15700 = p__15662;
    var d_min__15701 = cljs.core.nth.call(null, vec__15698__15700, 0, null);
    var d_max__15702 = cljs.core.nth.call(null, vec__15698__15700, 1, null);
    var map__15699__15703 = p__15663;
    var map__15699__15704 = cljs.core.seq_QMARK_.call(null, map__15699__15703) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15699__15703) : map__15699__15703;
    var clamp_QMARK___15705 = cljs.core._lookup.call(null, map__15699__15704, "\ufdd0'clamp?", false);
    var length__15706 = cljs.core._lookup.call(null, map__15699__15704, "\ufdd0'length", 500);
    var target_density__15707 = cljs.core._lookup.call(null, map__15699__15704, "\ufdd0'target-density", 0.01);
    var best_score__15708 = cljs.core.atom.call(null, -2);
    var label__15709 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
    var G__15710__15711 = c2.ticks.Q;
    while(true) {
      if(cljs.core.empty_QMARK_.call(null, G__15710__15711)) {
      }else {
        if(true) {
          var q__15712 = cljs.core.first.call(null, G__15710__15711);
          var j__15713 = 1;
          while(true) {
            if(null) {
            }else {
              if(true) {
                var ms__15714 = c2.ticks.max_simplicity.call(null, q__15712, j__15713);
                if(c2.ticks.w.call(null, cljs.core.PersistentVector.fromArray([ms__15714, 1, 1, 1], true)) < cljs.core.deref.call(null, best_score__15708)) {
                }else {
                  var k__15715 = 2;
                  while(true) {
                    if(null) {
                    }else {
                      if(true) {
                        var md__15716 = c2.ticks.max_density.call(null, k__15715 / length__15706, target_density__15707);
                        if(c2.ticks.w.call(null, cljs.core.PersistentVector.fromArray([ms__15714, 1, md__15716, 1], true)) < cljs.core.deref.call(null, best_score__15708)) {
                        }else {
                          var delta__15717 = (d_max__15702 - d_min__15701) / ((k__15715 + 1) * j__15713 * k__15715);
                          var z__15718 = c2.maths.ceil.call(null, c2.maths.log10.call(null, delta__15717));
                          while(true) {
                            if(null) {
                            }else {
                              if(true) {
                                var l_step__15719 = q__15712 * j__15713 * c2.maths.expt.call(null, 10, z__15718);
                                var mc__15720 = c2.ticks.max_coverage.call(null, d_min__15701, d_max__15702, (k__15715 - 1) * l_step__15719);
                                if(c2.ticks.w.call(null, cljs.core.PersistentVector.fromArray([ms__15714, mc__15720, md__15716, 1], true)) < cljs.core.deref.call(null, best_score__15708)) {
                                }else {
                                  var G__15721__15722 = d_min__15701 / l_step__15719;
                                  var start__15723 = c2.maths.floor.call(null, d_max__15702 / l_step__15719) - (k__15715 - 1);
                                  while(true) {
                                    if(start__15723 > G__15721__15722) {
                                    }else {
                                      if(true) {
                                        var l_min__15724 = start__15723 * l_step__15719;
                                        var l_max__15725 = l_min__15724 + (k__15715 - 1) * l_step__15719;
                                        var s__15726 = c2.ticks.simplicity.call(null, q__15712, j__15713, c2.ticks.label_range_contains_zero_QMARK_.call(null, l_min__15724, l_max__15725, l_step__15719));
                                        var c__15727 = c2.ticks.coverage.call(null, d_min__15701, d_max__15702, l_min__15724, l_max__15725);
                                        var d__15728 = c2.ticks.density.call(null, k__15715 / length__15706, target_density__15707);
                                        var score__15729 = c2.ticks.w.call(null, cljs.core.PersistentVector.fromArray([s__15726, c__15727, d__15728, 1], true));
                                        if(score__15729 < cljs.core.deref.call(null, best_score__15708)) {
                                        }else {
                                          cljs.core.reset_BANG_.call(null, best_score__15708, score__15729);
                                          cljs.core.reset_BANG_.call(null, label__15709, cljs.core.ObjMap.fromObject(["\ufdd0'min", "\ufdd0'max", "\ufdd0'step"], {"\ufdd0'min":l_min__15724, "\ufdd0'max":l_max__15725, "\ufdd0'step":l_step__15719}));
                                          var G__15732 = start__15723 + 1 / j__15713;
                                          start__15723 = G__15732;
                                          continue
                                        }
                                      }else {
                                      }
                                    }
                                    break
                                  }
                                  var G__15733 = z__15718 + 1;
                                  z__15718 = G__15733;
                                  continue
                                }
                              }else {
                              }
                            }
                            break
                          }
                          var G__15734 = k__15715 + 1;
                          k__15715 = G__15734;
                          continue
                        }
                      }else {
                      }
                    }
                    break
                  }
                  var G__15735 = j__15713 + 1;
                  j__15713 = G__15735;
                  continue
                }
              }else {
              }
            }
            break
          }
          var G__15736 = cljs.core.next.call(null, G__15710__15711);
          G__15710__15711 = G__15736;
          continue
        }else {
        }
      }
      break
    }
    var l__15730 = cljs.core.deref.call(null, label__15709);
    var extent__15731 = cljs.core.PersistentVector.fromArray([cljs.core.truth_(clamp_QMARK___15705) ? d_min__15701 : (new cljs.core.Keyword("\ufdd0'min")).call(null, l__15730) < d_min__15701 ? (new cljs.core.Keyword("\ufdd0'min")).call(null, l__15730) : d_min__15701, cljs.core.truth_(clamp_QMARK___15705) ? d_max__15702 : (new cljs.core.Keyword("\ufdd0'max")).call(null, l__15730) > d_max__15702 ? (new cljs.core.Keyword("\ufdd0'max")).call(null, l__15730) : d_max__15702], true);
    return cljs.core.ObjMap.fromObject(["\ufdd0'extent", "\ufdd0'min", "\ufdd0'max", "\ufdd0'ticks"], {"\ufdd0'extent":extent__15731, "\ufdd0'min":cljs.core.first.call(null, extent__15731), "\ufdd0'max":cljs.core.second.call(null, extent__15731), "\ufdd0'ticks":cljs.core.filter.call(null, function(p1__155990_SHARP_) {
      return c2.maths.within_QMARK_.call(null, p1__155990_SHARP_, extent__15731)
    }, c2.maths.irange.call(null, (new cljs.core.Keyword("\ufdd0'min")).call(null, l__15730), (new cljs.core.Keyword("\ufdd0'max")).call(null, l__15730), (new cljs.core.Keyword("\ufdd0'step")).call(null, l__15730)))})
  };
  var search = function(p__15662, var_args) {
    var p__15663 = null;
    if(goog.isDef(var_args)) {
      p__15663 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return search__delegate.call(this, p__15662, p__15663)
  };
  search.cljs$lang$maxFixedArity = 1;
  search.cljs$lang$applyTo = function(arglist__15737) {
    var p__15662 = cljs.core.first(arglist__15737);
    var p__15663 = cljs.core.rest(arglist__15737);
    return search__delegate(p__15662, p__15663)
  };
  search.cljs$lang$arity$variadic = search__delegate;
  return search
}();
goog.provide("c2.scale");
goog.require("cljs.core");
goog.require("c2.maths");
goog.require("c2.maths");
goog.require("c2.maths");
c2.scale.IInvertable = {};
c2.scale.invert = function invert(scale) {
  if(function() {
    var and__3822__auto____15506 = scale;
    if(and__3822__auto____15506) {
      return scale.c2$scale$IInvertable$invert$arity$1
    }else {
      return and__3822__auto____15506
    }
  }()) {
    return scale.c2$scale$IInvertable$invert$arity$1(scale)
  }else {
    var x__2264__auto____15507 = scale == null ? null : scale;
    return function() {
      var or__3824__auto____15508 = c2.scale.invert[goog.typeOf(x__2264__auto____15507)];
      if(or__3824__auto____15508) {
        return or__3824__auto____15508
      }else {
        var or__3824__auto____15509 = c2.scale.invert["_"];
        if(or__3824__auto____15509) {
          return or__3824__auto____15509
        }else {
          throw cljs.core.missing_protocol.call(null, "IInvertable.invert", scale);
        }
      }
    }().call(null, scale)
  }
};
c2.scale._linear = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054859;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
c2.scale._linear.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__15515 = this;
  var h__2093__auto____15516 = this__15515.__hash;
  if(!(h__2093__auto____15516 == null)) {
    return h__2093__auto____15516
  }else {
    var h__2093__auto____15517 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__15515.__hash = h__2093__auto____15517;
    return h__2093__auto____15517
  }
};
c2.scale._linear.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__15518 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
c2.scale._linear.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k15511, else__2227__auto__) {
  var this__15519 = this;
  if(k15511 === "\ufdd0'domain") {
    return this__15519.domain
  }else {
    if(k15511 === "\ufdd0'range") {
      return this__15519.range
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__15519.__extmap, k15511, else__2227__auto__)
      }else {
        return null
      }
    }
  }
};
c2.scale._linear.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__15510) {
  var this__15520 = this;
  var pred__15521__15524 = cljs.core.identical_QMARK_;
  var expr__15522__15525 = k__2232__auto__;
  if(pred__15521__15524.call(null, "\ufdd0'domain", expr__15522__15525)) {
    return new c2.scale._linear(G__15510, this__15520.range, this__15520.__meta, this__15520.__extmap, null)
  }else {
    if(pred__15521__15524.call(null, "\ufdd0'range", expr__15522__15525)) {
      return new c2.scale._linear(this__15520.domain, G__15510, this__15520.__meta, this__15520.__extmap, null)
    }else {
      return new c2.scale._linear(this__15520.domain, this__15520.range, this__15520.__meta, cljs.core.assoc.call(null, this__15520.__extmap, k__2232__auto__, G__15510), null)
    }
  }
};
c2.scale._linear.prototype.call = function(this_sym15526, x) {
  var this__15527 = this;
  var this_sym15526__15528 = this;
  var ___15529 = this_sym15526__15528;
  var domain_length__15530 = cljs.core.last.call(null, this__15527.domain) - cljs.core.first.call(null, this__15527.domain);
  var range_length__15531 = cljs.core.last.call(null, this__15527.range) - cljs.core.first.call(null, this__15527.range);
  return cljs.core.first.call(null, this__15527.range) + range_length__15531 * ((x - cljs.core.first.call(null, this__15527.domain)) / domain_length__15530)
};
c2.scale._linear.prototype.apply = function(this_sym15513, args15514) {
  var this__15532 = this;
  return this_sym15513.call.apply(this_sym15513, [this_sym15513].concat(args15514.slice()))
};
c2.scale._linear.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__15533 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
c2.scale._linear.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__15534 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__15534.domain), cljs.core.vector.call(null, "\ufdd0'range", this__15534.range)], true), this__15534.__extmap))
};
c2.scale._linear.prototype.c2$scale$IInvertable$ = true;
c2.scale._linear.prototype.c2$scale$IInvertable$invert$arity$1 = function(this$) {
  var this__15535 = this;
  return cljs.core.assoc.call(null, this$, "\ufdd0'domain", this__15535.range, "\ufdd0'range", this__15535.domain)
};
c2.scale._linear.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__15536 = this;
  var pr_pair__2240__auto____15537 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____15537, [cljs.core.str("#"), cljs.core.str("_linear"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__15536.domain), cljs.core.vector.call(null, "\ufdd0'range", this__15536.range)], true), this__15536.__extmap))
};
c2.scale._linear.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__15538 = this;
  return 2 + cljs.core.count.call(null, this__15538.__extmap)
};
c2.scale._linear.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__15539 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____15540 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____15540)) {
      var and__3822__auto____15541 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____15541) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____15541
      }
    }else {
      return and__3822__auto____15540
    }
  }())) {
    return true
  }else {
    return false
  }
};
c2.scale._linear.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__15510) {
  var this__15542 = this;
  return new c2.scale._linear(this__15542.domain, this__15542.range, G__15510, this__15542.__extmap, this__15542.__hash)
};
c2.scale._linear.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__15543 = this;
  return this__15543.__meta
};
c2.scale._linear.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__15544 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'domain", "\ufdd0'range"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__15544.__meta), k__2234__auto__)
  }else {
    return new c2.scale._linear(this__15544.domain, this__15544.range, this__15544.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__15544.__extmap, k__2234__auto__)), null)
  }
};
c2.scale._linear.cljs$lang$type = true;
c2.scale._linear.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "c2.scale/_linear")
};
c2.scale.__GT__linear = function __GT__linear(domain, range) {
  return new c2.scale._linear(domain, range)
};
c2.scale.map__GT__linear = function map__GT__linear(G__15512) {
  return new c2.scale._linear((new cljs.core.Keyword("\ufdd0'domain")).call(null, G__15512), (new cljs.core.Keyword("\ufdd0'range")).call(null, G__15512), null, cljs.core.dissoc.call(null, G__15512, "\ufdd0'domain", "\ufdd0'range"))
};
c2.scale._linear;
c2.scale.linear = function() {
  var linear__delegate = function(kwargs) {
    return c2.scale.map__GT__linear.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'domain", "\ufdd0'range"], {"\ufdd0'domain":cljs.core.PersistentVector.fromArray([0, 1], true), "\ufdd0'range":cljs.core.PersistentVector.fromArray([0, 1], true)}), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)))
  };
  var linear = function(var_args) {
    var kwargs = null;
    if(goog.isDef(var_args)) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return linear__delegate.call(this, kwargs)
  };
  linear.cljs$lang$maxFixedArity = 0;
  linear.cljs$lang$applyTo = function(arglist__15545) {
    var kwargs = cljs.core.seq(arglist__15545);
    return linear__delegate(kwargs)
  };
  linear.cljs$lang$arity$variadic = linear__delegate;
  return linear
}();
c2.scale._power = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054859;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
c2.scale._power.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__15551 = this;
  var h__2093__auto____15552 = this__15551.__hash;
  if(!(h__2093__auto____15552 == null)) {
    return h__2093__auto____15552
  }else {
    var h__2093__auto____15553 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__15551.__hash = h__2093__auto____15553;
    return h__2093__auto____15553
  }
};
c2.scale._power.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__15554 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
c2.scale._power.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k15547, else__2227__auto__) {
  var this__15555 = this;
  if(k15547 === "\ufdd0'domain") {
    return this__15555.domain
  }else {
    if(k15547 === "\ufdd0'range") {
      return this__15555.range
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__15555.__extmap, k15547, else__2227__auto__)
      }else {
        return null
      }
    }
  }
};
c2.scale._power.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__15546) {
  var this__15556 = this;
  var pred__15557__15560 = cljs.core.identical_QMARK_;
  var expr__15558__15561 = k__2232__auto__;
  if(pred__15557__15560.call(null, "\ufdd0'domain", expr__15558__15561)) {
    return new c2.scale._power(G__15546, this__15556.range, this__15556.__meta, this__15556.__extmap, null)
  }else {
    if(pred__15557__15560.call(null, "\ufdd0'range", expr__15558__15561)) {
      return new c2.scale._power(this__15556.domain, G__15546, this__15556.__meta, this__15556.__extmap, null)
    }else {
      return new c2.scale._power(this__15556.domain, this__15556.range, this__15556.__meta, cljs.core.assoc.call(null, this__15556.__extmap, k__2232__auto__, G__15546), null)
    }
  }
};
c2.scale._power.prototype.call = function(this_sym15562, x) {
  var this__15563 = this;
  var this_sym15562__15564 = this;
  var ___15565 = this_sym15562__15564;
  return cljs.core.comp.call(null, c2.scale.linear.call(null, "\ufdd0'domain", cljs.core.map.call(null, c2.maths.expt, this__15563.domain), "\ufdd0'range", this__15563.range), c2.maths.expt).call(null, x)
};
c2.scale._power.prototype.apply = function(this_sym15549, args15550) {
  var this__15566 = this;
  return this_sym15549.call.apply(this_sym15549, [this_sym15549].concat(args15550.slice()))
};
c2.scale._power.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__15567 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
c2.scale._power.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__15568 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__15568.domain), cljs.core.vector.call(null, "\ufdd0'range", this__15568.range)], true), this__15568.__extmap))
};
c2.scale._power.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__15569 = this;
  var pr_pair__2240__auto____15570 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____15570, [cljs.core.str("#"), cljs.core.str("_power"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__15569.domain), cljs.core.vector.call(null, "\ufdd0'range", this__15569.range)], true), this__15569.__extmap))
};
c2.scale._power.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__15571 = this;
  return 2 + cljs.core.count.call(null, this__15571.__extmap)
};
c2.scale._power.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__15572 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____15573 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____15573)) {
      var and__3822__auto____15574 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____15574) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____15574
      }
    }else {
      return and__3822__auto____15573
    }
  }())) {
    return true
  }else {
    return false
  }
};
c2.scale._power.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__15546) {
  var this__15575 = this;
  return new c2.scale._power(this__15575.domain, this__15575.range, G__15546, this__15575.__extmap, this__15575.__hash)
};
c2.scale._power.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__15576 = this;
  return this__15576.__meta
};
c2.scale._power.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__15577 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'domain", "\ufdd0'range"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__15577.__meta), k__2234__auto__)
  }else {
    return new c2.scale._power(this__15577.domain, this__15577.range, this__15577.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__15577.__extmap, k__2234__auto__)), null)
  }
};
c2.scale._power.cljs$lang$type = true;
c2.scale._power.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "c2.scale/_power")
};
c2.scale.__GT__power = function __GT__power(domain, range) {
  return new c2.scale._power(domain, range)
};
c2.scale.map__GT__power = function map__GT__power(G__15548) {
  return new c2.scale._power((new cljs.core.Keyword("\ufdd0'domain")).call(null, G__15548), (new cljs.core.Keyword("\ufdd0'range")).call(null, G__15548), null, cljs.core.dissoc.call(null, G__15548, "\ufdd0'domain", "\ufdd0'range"))
};
c2.scale._power;
c2.scale.power = function() {
  var power__delegate = function(kwargs) {
    return c2.scale.map__GT__power.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'domain", "\ufdd0'range"], {"\ufdd0'domain":cljs.core.PersistentVector.fromArray([0, 1], true), "\ufdd0'range":cljs.core.PersistentVector.fromArray([0, 1], true)}), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)))
  };
  var power = function(var_args) {
    var kwargs = null;
    if(goog.isDef(var_args)) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return power__delegate.call(this, kwargs)
  };
  power.cljs$lang$maxFixedArity = 0;
  power.cljs$lang$applyTo = function(arglist__15578) {
    var kwargs = cljs.core.seq(arglist__15578);
    return power__delegate(kwargs)
  };
  power.cljs$lang$arity$variadic = power__delegate;
  return power
}();
c2.scale._log = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054859;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
c2.scale._log.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__15584 = this;
  var h__2093__auto____15585 = this__15584.__hash;
  if(!(h__2093__auto____15585 == null)) {
    return h__2093__auto____15585
  }else {
    var h__2093__auto____15586 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__15584.__hash = h__2093__auto____15586;
    return h__2093__auto____15586
  }
};
c2.scale._log.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__15587 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
c2.scale._log.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k15580, else__2227__auto__) {
  var this__15588 = this;
  if(k15580 === "\ufdd0'domain") {
    return this__15588.domain
  }else {
    if(k15580 === "\ufdd0'range") {
      return this__15588.range
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__15588.__extmap, k15580, else__2227__auto__)
      }else {
        return null
      }
    }
  }
};
c2.scale._log.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__15579) {
  var this__15589 = this;
  var pred__15590__15593 = cljs.core.identical_QMARK_;
  var expr__15591__15594 = k__2232__auto__;
  if(pred__15590__15593.call(null, "\ufdd0'domain", expr__15591__15594)) {
    return new c2.scale._log(G__15579, this__15589.range, this__15589.__meta, this__15589.__extmap, null)
  }else {
    if(pred__15590__15593.call(null, "\ufdd0'range", expr__15591__15594)) {
      return new c2.scale._log(this__15589.domain, G__15579, this__15589.__meta, this__15589.__extmap, null)
    }else {
      return new c2.scale._log(this__15589.domain, this__15589.range, this__15589.__meta, cljs.core.assoc.call(null, this__15589.__extmap, k__2232__auto__, G__15579), null)
    }
  }
};
c2.scale._log.prototype.call = function(this_sym15595, x) {
  var this__15596 = this;
  var this_sym15595__15597 = this;
  var ___15598 = this_sym15595__15597;
  return cljs.core.comp.call(null, c2.scale.linear.call(null, "\ufdd0'domain", cljs.core.map.call(null, c2.maths.log, this__15596.domain), "\ufdd0'range", this__15596.range), c2.maths.log).call(null, x)
};
c2.scale._log.prototype.apply = function(this_sym15582, args15583) {
  var this__15599 = this;
  return this_sym15582.call.apply(this_sym15582, [this_sym15582].concat(args15583.slice()))
};
c2.scale._log.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__15600 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
c2.scale._log.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__15601 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__15601.domain), cljs.core.vector.call(null, "\ufdd0'range", this__15601.range)], true), this__15601.__extmap))
};
c2.scale._log.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__15602 = this;
  var pr_pair__2240__auto____15603 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____15603, [cljs.core.str("#"), cljs.core.str("_log"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__15602.domain), cljs.core.vector.call(null, "\ufdd0'range", this__15602.range)], true), this__15602.__extmap))
};
c2.scale._log.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__15604 = this;
  return 2 + cljs.core.count.call(null, this__15604.__extmap)
};
c2.scale._log.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__15605 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____15606 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____15606)) {
      var and__3822__auto____15607 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____15607) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____15607
      }
    }else {
      return and__3822__auto____15606
    }
  }())) {
    return true
  }else {
    return false
  }
};
c2.scale._log.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__15579) {
  var this__15608 = this;
  return new c2.scale._log(this__15608.domain, this__15608.range, G__15579, this__15608.__extmap, this__15608.__hash)
};
c2.scale._log.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__15609 = this;
  return this__15609.__meta
};
c2.scale._log.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__15610 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'domain", "\ufdd0'range"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__15610.__meta), k__2234__auto__)
  }else {
    return new c2.scale._log(this__15610.domain, this__15610.range, this__15610.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__15610.__extmap, k__2234__auto__)), null)
  }
};
c2.scale._log.cljs$lang$type = true;
c2.scale._log.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "c2.scale/_log")
};
c2.scale.__GT__log = function __GT__log(domain, range) {
  return new c2.scale._log(domain, range)
};
c2.scale.map__GT__log = function map__GT__log(G__15581) {
  return new c2.scale._log((new cljs.core.Keyword("\ufdd0'domain")).call(null, G__15581), (new cljs.core.Keyword("\ufdd0'range")).call(null, G__15581), null, cljs.core.dissoc.call(null, G__15581, "\ufdd0'domain", "\ufdd0'range"))
};
c2.scale._log;
c2.scale.log = function() {
  var log__delegate = function(kwargs) {
    return c2.scale.map__GT__log.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'domain", "\ufdd0'range"], {"\ufdd0'domain":cljs.core.PersistentVector.fromArray([1, 10], true), "\ufdd0'range":cljs.core.PersistentVector.fromArray([0, 1], true)}), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)))
  };
  var log = function(var_args) {
    var kwargs = null;
    if(goog.isDef(var_args)) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, kwargs)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__15611) {
    var kwargs = cljs.core.seq(arglist__15611);
    return log__delegate(kwargs)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
goog.provide("vcfvis.data");
goog.require("cljs.core");
goog.require("c2.util");
goog.require("cljs.reader");
goog.require("c2.ticks");
goog.require("c2.scale");
goog.require("vcfvis.ui");
goog.require("vcfvis.core");
goog.require("cljs.reader");
goog.require("c2.util");
vcfvis.data.expand_metric = function expand_metric(metric) {
  if(cljs.core.truth_(metric.call(null, "\ufdd0'range"))) {
    return cljs.core.assoc.call(null, metric, "\ufdd0'bin-width", function() {
      var vec__9743__9744 = metric.call(null, "\ufdd0'range");
      var start__9745 = cljs.core.nth.call(null, vec__9743__9744, 0, null);
      var end__9746 = cljs.core.nth.call(null, vec__9743__9744, 1, null);
      return(end__9746 - start__9745) / vcfvis.ui.hist_bins
    }(), "\ufdd0'!filter-extent", cljs.core.atom.call(null, null), "\ufdd0'scale-x", function() {
      var map__9747__9748 = c2.ticks.search.call(null, metric.call(null, "\ufdd0'range"), "\ufdd0'clamp?", true, "\ufdd0'length", vcfvis.ui.hist_width);
      var map__9747__9749 = cljs.core.seq_QMARK_.call(null, map__9747__9748) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9747__9748) : map__9747__9748;
      var ticks__9750 = cljs.core._lookup.call(null, map__9747__9749, "\ufdd0'ticks", null);
      var x__9751 = c2.scale.linear.call(null, "\ufdd0'domain", metric.call(null, "\ufdd0'range"), "\ufdd0'range", cljs.core.PersistentVector.fromArray([0, vcfvis.ui.hist_width], true));
      return cljs.core.assoc.call(null, x__9751, "\ufdd0'ticks", ticks__9750)
    }())
  }else {
    throw[cljs.core.str("Metric doesn't have range: "), cljs.core.str(cljs.core.pr.call(null, metric))].join("");
  }
};
vcfvis.data.prep_context = function prep_context(context) {
  return cljs.core.update_in.call(null, context, cljs.core.PersistentVector.fromArray(["\ufdd0'metrics"], true), function(p1__9733_SHARP_) {
    return cljs.core.reduce.call(null, function(res, m) {
      return cljs.core.assoc.call(null, res, (new cljs.core.Keyword("\ufdd0'id")).call(null, m), vcfvis.data.expand_metric.call(null, m))
    }, cljs.core.ObjMap.EMPTY, p1__9733_SHARP_)
  })
};
vcfvis.data.prep_vcf_json = function prep_vcf_json(vcf_json) {
  var core_metrics__9789 = cljs.core.deref.call(null, vcfvis.core._BANG_context).call(null, "\ufdd0'metrics");
  var info__9793 = cljs.core.update_in.call(null, cljs.reader.read_string.call(null, vcf_json["clj"]), cljs.core.PersistentVector.fromArray(["\ufdd0'available-metrics"], true), function(p1__9752_SHARP_) {
    return cljs.core.reduce.call(null, function(ms, m) {
      var temp__3971__auto____9790 = core_metrics__9789.call(null, m);
      if(cljs.core.truth_(temp__3971__auto____9790)) {
        var metric__9791 = temp__3971__auto____9790;
        return cljs.core.conj.call(null, ms, metric__9791)
      }else {
        var res__8324__auto____9792 = [cljs.core.str("Don't know how to deal with metric: '"), cljs.core.str(m), cljs.core.str("', dropping.")].join("");
        console.log(res__8324__auto____9792);
        res__8324__auto____9792;
        return ms
      }
    }, cljs.core.PersistentHashSet.EMPTY, p1__9752_SHARP_)
  });
  var cf__9794 = crossfilter(vcf_json["raw"]);
  return cljs.core.assoc.call(null, info__9793, "\ufdd0'cf", cljs.core.into.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'crossfilter", "\ufdd0'all"], {"\ufdd0'crossfilter":cf__9794, "\ufdd0'all":cf__9794.groupAll()}), function() {
    var iter__2363__auto____9823 = function iter__9795(s__9796) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__9796__9810 = s__9796;
        while(true) {
          if(cljs.core.seq.call(null, s__9796__9810)) {
            var map__9811__9812 = cljs.core.first.call(null, s__9796__9810);
            var map__9811__9813 = cljs.core.seq_QMARK_.call(null, map__9811__9812) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9811__9812) : map__9811__9812;
            var bin_width__9814 = cljs.core._lookup.call(null, map__9811__9813, "\ufdd0'bin-width", null);
            var range__9815 = cljs.core._lookup.call(null, map__9811__9813, "\ufdd0'range", null);
            var id__9816 = cljs.core._lookup.call(null, map__9811__9813, "\ufdd0'id", null);
            return cljs.core.cons.call(null, function() {
              var vec__9817__9818 = range__9815;
              var start__9819 = cljs.core.nth.call(null, vec__9817__9818, 0, null);
              var end__9820 = cljs.core.nth.call(null, vec__9817__9818, 1, null);
              var dim__9821 = cf__9794.dimension(function(map__9811__9812, map__9811__9813, bin_width__9814, range__9815, id__9816) {
                return function(p1__9753_SHARP_) {
                  return p1__9753_SHARP_[id__9816]
                }
              }(map__9811__9812, map__9811__9813, bin_width__9814, range__9815, id__9816));
              var binned__9822 = dim__9821.group(function(map__9811__9812, map__9811__9813, bin_width__9814, range__9815, id__9816) {
                return function(x) {
                  return start__9819 + bin_width__9814 * (Math.floor.call(null, (x - start__9819) / bin_width__9814) < vcfvis.ui.hist_bins - 1 ? Math.floor.call(null, (x - start__9819) / bin_width__9814) : vcfvis.ui.hist_bins - 1)
                }
              }(map__9811__9812, map__9811__9813, bin_width__9814, range__9815, id__9816));
              return cljs.core.PersistentVector.fromArray([id__9816, cljs.core.ObjMap.fromObject(["\ufdd0'bin-width", "\ufdd0'dimension", "\ufdd0'binned"], {"\ufdd0'bin-width":bin_width__9814, "\ufdd0'dimension":dim__9821, "\ufdd0'binned":binned__9822})], true)
            }(), iter__9795.call(null, cljs.core.rest.call(null, s__9796__9810)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____9823.call(null, info__9793.call(null, "\ufdd0'available-metrics"))
  }()))
};
vcfvis.data.load_metrics = function load_metrics(file_urls, callback) {
  if(cljs.core.not.call(null, cljs.core.seq.call(null, file_urls))) {
    return callback.call(null, cljs.core.PersistentVector.EMPTY)
  }else {
    return jQuery.get("/api/metrics", c2.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'file-urls"], {"\ufdd0'file-urls":file_urls})), function(d) {
      var res__9825 = cljs.reader.read_string.call(null, d);
      return callback.call(null, res__9825)
    })
  }
};
vcfvis.data.load_context = function load_context(callback) {
  return jQuery.get("/api/context", function(d) {
    var res__9827 = cljs.reader.read_string.call(null, d);
    return callback.call(null, vcfvis.data.prep_context.call(null, res__9827))
  })
};
vcfvis.data.load_vcf = function load_vcf(file_url, callback) {
  return jQuery.getJSON("/api/vcf", c2.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'file-url"], {"\ufdd0'file-url":file_url})), function(res) {
    return callback.call(null, vcfvis.data.prep_vcf_json.call(null, res))
  })
};
vcfvis.data._BANG_analysis_status = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
cljs.core.swap_BANG_.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_, cljs.core.conj, function(m__8312__auto__) {
  try {
    if(function() {
      var G__9833__9834 = m__8312__auto__;
      if(G__9833__9834) {
        if(function() {
          var or__3824__auto____9835 = G__9833__9834.cljs$lang$protocol_mask$partition0$ & 256;
          if(or__3824__auto____9835) {
            return or__3824__auto____9835
          }else {
            return G__9833__9834.cljs$core$ILookup$
          }
        }()) {
          return true
        }else {
          if(!G__9833__9834.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__9833__9834)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__9833__9834)
      }
    }()) {
      var G__9828__9837 = function() {
        var val__6896__auto____9836 = cljs.core._lookup.call(null, m__8312__auto__, "\ufdd0'filter-updated", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6896__auto____9836, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6896__auto____9836
        }
      }();
      return cljs.core.reset_BANG_.call(null, vcfvis.data._BANG_analysis_status, cljs.core.ObjMap.EMPTY)
    }else {
      if("\ufdd0'else") {
        throw 0;
      }else {
        return null
      }
    }
  }catch(e__7329__auto__) {
    if(e__7329__auto__ === 0) {
      var G__9829__9832 = m__8312__auto__;
      return null
    }else {
      throw e__7329__auto__;
    }
  }
});
vcfvis.data.update_status_BANG_ = function update_status_BANG_(filename, status) {
  return cljs.core.swap_BANG_.call(null, vcfvis.data._BANG_analysis_status, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([filename], true), status)
};
vcfvis.data.reset_statuses_BANG_ = function reset_statuses_BANG_() {
  return cljs.core.reset_BANG_.call(null, vcfvis.data._BANG_analysis_status, cljs.core.ObjMap.EMPTY)
};
vcfvis.data.filter_analysis = function filter_analysis(opts) {
  var map__9843__9844 = opts;
  var map__9843__9845 = cljs.core.seq_QMARK_.call(null, map__9843__9844) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9843__9844) : map__9843__9844;
  var file_url__9846 = cljs.core._lookup.call(null, map__9843__9845, "\ufdd0'file-url", null);
  vcfvis.data.update_status_BANG_.call(null, file_url__9846, "\ufdd0'running");
  return jQuery.post("/api/filter", c2.util.clj__GT_js.call(null, opts), function(d) {
    var res__9847 = cljs.reader.read_string.call(null, d);
    return vcfvis.data.update_status_BANG_.call(null, file_url__9846, "\ufdd0'completed")
  })
};
goog.provide("chosen.jquery");
goog.require("cljs.core");
jQuery.prototype.cljs$core$IReduce$ = true;
jQuery.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  return cljs.core.ci_reduce.call(null, this$, f)
};
jQuery.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  return cljs.core.ci_reduce.call(null, this$, f, start)
};
jQuery.prototype.cljs$core$ILookup$ = true;
jQuery.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var or__3824__auto____10612 = this$.slice(k, k + 1);
  if(cljs.core.truth_(or__3824__auto____10612)) {
    return or__3824__auto____10612
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  return cljs.core._nth.call(null, this$, k, not_found)
};
jQuery.prototype.cljs$core$ISequential$ = true;
jQuery.prototype.cljs$core$IIndexed$ = true;
jQuery.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    if(void 0 === not_found) {
      return null
    }else {
      return not_found
    }
  }
};
jQuery.prototype.cljs$core$ICounted$ = true;
jQuery.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  return this$.size()
};
jQuery.prototype.cljs$core$ISeq$ = true;
jQuery.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  return this$.get(0)
};
jQuery.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  if(cljs.core.count.call(null, this$) > 1) {
    return this$.slice(1)
  }else {
    return cljs.core.list.call(null)
  }
};
jQuery.prototype.cljs$core$ISeqable$ = true;
jQuery.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  if(cljs.core.truth_(this$.get(0))) {
    return this$
  }else {
    return null
  }
};
goog.provide("chosen.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("chosen.jquery");
goog.require("goog.string");
goog.require("clojure.string");
chosen.core.ISelectable = {};
chosen.core.selected = function() {
  var selected = null;
  var selected__1 = function(this$) {
    if(function() {
      var and__3822__auto____10447 = this$;
      if(and__3822__auto____10447) {
        return this$.chosen$core$ISelectable$selected$arity$1
      }else {
        return and__3822__auto____10447
      }
    }()) {
      return this$.chosen$core$ISelectable$selected$arity$1(this$)
    }else {
      var x__2264__auto____10448 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10449 = chosen.core.selected[goog.typeOf(x__2264__auto____10448)];
        if(or__3824__auto____10449) {
          return or__3824__auto____10449
        }else {
          var or__3824__auto____10450 = chosen.core.selected["_"];
          if(or__3824__auto____10450) {
            return or__3824__auto____10450
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelectable.selected", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var selected__2 = function(this$, values) {
    if(function() {
      var and__3822__auto____10451 = this$;
      if(and__3822__auto____10451) {
        return this$.chosen$core$ISelectable$selected$arity$2
      }else {
        return and__3822__auto____10451
      }
    }()) {
      return this$.chosen$core$ISelectable$selected$arity$2(this$, values)
    }else {
      var x__2264__auto____10452 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10453 = chosen.core.selected[goog.typeOf(x__2264__auto____10452)];
        if(or__3824__auto____10453) {
          return or__3824__auto____10453
        }else {
          var or__3824__auto____10454 = chosen.core.selected["_"];
          if(or__3824__auto____10454) {
            return or__3824__auto____10454
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelectable.selected", this$);
          }
        }
      }().call(null, this$, values)
    }
  };
  selected = function(this$, values) {
    switch(arguments.length) {
      case 1:
        return selected__1.call(this, this$);
      case 2:
        return selected__2.call(this, this$, values)
    }
    throw"Invalid arity: " + arguments.length;
  };
  selected.cljs$lang$arity$1 = selected__1;
  selected.cljs$lang$arity$2 = selected__2;
  return selected
}();
chosen.core.IOptions = {};
chosen.core.options = function() {
  var options = null;
  var options__1 = function(this$) {
    if(function() {
      var and__3822__auto____10463 = this$;
      if(and__3822__auto____10463) {
        return this$.chosen$core$IOptions$options$arity$1
      }else {
        return and__3822__auto____10463
      }
    }()) {
      return this$.chosen$core$IOptions$options$arity$1(this$)
    }else {
      var x__2264__auto____10464 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10465 = chosen.core.options[goog.typeOf(x__2264__auto____10464)];
        if(or__3824__auto____10465) {
          return or__3824__auto____10465
        }else {
          var or__3824__auto____10466 = chosen.core.options["_"];
          if(or__3824__auto____10466) {
            return or__3824__auto____10466
          }else {
            throw cljs.core.missing_protocol.call(null, "IOptions.options", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var options__2 = function(this$, opts) {
    if(function() {
      var and__3822__auto____10467 = this$;
      if(and__3822__auto____10467) {
        return this$.chosen$core$IOptions$options$arity$2
      }else {
        return and__3822__auto____10467
      }
    }()) {
      return this$.chosen$core$IOptions$options$arity$2(this$, opts)
    }else {
      var x__2264__auto____10468 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____10469 = chosen.core.options[goog.typeOf(x__2264__auto____10468)];
        if(or__3824__auto____10469) {
          return or__3824__auto____10469
        }else {
          var or__3824__auto____10470 = chosen.core.options["_"];
          if(or__3824__auto____10470) {
            return or__3824__auto____10470
          }else {
            throw cljs.core.missing_protocol.call(null, "IOptions.options", this$);
          }
        }
      }().call(null, this$, opts)
    }
  };
  options = function(this$, opts) {
    switch(arguments.length) {
      case 1:
        return options__1.call(this, this$);
      case 2:
        return options__2.call(this, this$, opts)
    }
    throw"Invalid arity: " + arguments.length;
  };
  options.cljs$lang$arity$1 = options__1;
  options.cljs$lang$arity$2 = options__2;
  return options
}();
chosen.core.__GT_coll = function __GT_coll(c) {
  if(!function() {
    var or__3824__auto____10473 = cljs.core.set_QMARK_.call(null, c);
    if(or__3824__auto____10473) {
      return or__3824__auto____10473
    }else {
      return cljs.core.sequential_QMARK_.call(null, c)
    }
  }()) {
    return cljs.core.PersistentVector.fromArray([c], true)
  }else {
    return c
  }
};
chosen.core.option_values = function option_values(option_els) {
  return cljs.core.map.call(null, function(p1__10471_SHARP_) {
    return p1__10471_SHARP_.value
  }, option_els)
};
chosen.core.selected_values = function selected_values(el) {
  return cljs.core.set.call(null, chosen.core.option_values.call(null, $(el).find("option:selected")))
};
chosen.core.el_options = function el_options(el) {
  return cljs.core.map.call(null, function(e) {
    var $e__10476 = $(e);
    var group__10477 = $e__10476.parent("optgroup").attr("label");
    return cljs.core.ObjMap.fromObject(["\ufdd0'text", "\ufdd0'value", "\ufdd0'selected", "\ufdd0'disabled", "\ufdd0'group"], {"\ufdd0'text":$e__10476.text(), "\ufdd0'value":$e__10476.val(), "\ufdd0'selected":e.selected, "\ufdd0'disabled":e.disabled, "\ufdd0'group":void 0 === group__10477 ? null : group__10477})
  }, $(el).find("option"))
};
chosen.core.opt__GT_html = function opt__GT_html(o) {
  var map__10488__10489 = o;
  var map__10488__10490 = cljs.core.seq_QMARK_.call(null, map__10488__10489) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10488__10489) : map__10488__10489;
  var style__10491 = cljs.core._lookup.call(null, map__10488__10490, "\ufdd0'style", null);
  var group__10492 = cljs.core._lookup.call(null, map__10488__10490, "\ufdd0'group", null);
  var disabled__10493 = cljs.core._lookup.call(null, map__10488__10490, "\ufdd0'disabled", null);
  var selected__10494 = cljs.core._lookup.call(null, map__10488__10490, "\ufdd0'selected", null);
  var text__10495 = cljs.core._lookup.call(null, map__10488__10490, "\ufdd0'text", null);
  var value__10496 = cljs.core._lookup.call(null, map__10488__10490, "\ufdd0'value", null);
  return[cljs.core.str(clojure.string.join.call(null, " ", cljs.core.PersistentVector.fromArray(["<option", [cljs.core.str('value="'), cljs.core.str(goog.string.htmlEscape(function() {
    var or__3824__auto____10497 = value__10496;
    if(cljs.core.truth_(or__3824__auto____10497)) {
      return or__3824__auto____10497
    }else {
      return text__10495
    }
  }())), cljs.core.str('"')].join(""), cljs.core.truth_(style__10491) ? [cljs.core.str("style='"), cljs.core.str(goog.string.htmlEscape(style__10491)), cljs.core.str("'")].join("") : null, cljs.core.truth_(disabled__10493) ? "disabled='disabled'" : null, cljs.core.truth_(selected__10494) ? "selected='selected'" : null, ">"], true))), cljs.core.str(text__10495), cljs.core.str("</option>")].join("")
};
chosen.core.optionify = function optionify(x) {
  if(cljs.core.map_QMARK_.call(null, x)) {
    return x
  }else {
    return cljs.core.ObjMap.fromObject(["\ufdd0'value", "\ufdd0'text"], {"\ufdd0'value":x, "\ufdd0'text":[cljs.core.str(x)].join("")})
  }
};
chosen.core.reset_dom_options_BANG_ = function reset_dom_options_BANG_($el, options) {
  $el.children().remove();
  var G__10518__10519 = cljs.core.seq.call(null, cljs.core.group_by.call(null, "\ufdd0'group", cljs.core.map.call(null, chosen.core.optionify, chosen.core.__GT_coll.call(null, options))));
  if(G__10518__10519) {
    var G__10521__10523 = cljs.core.first.call(null, G__10518__10519);
    var vec__10522__10524 = G__10521__10523;
    var group__10525 = cljs.core.nth.call(null, vec__10522__10524, 0, null);
    var opts__10526 = cljs.core.nth.call(null, vec__10522__10524, 1, null);
    var G__10518__10527 = G__10518__10519;
    var G__10521__10528 = G__10521__10523;
    var G__10518__10529 = G__10518__10527;
    while(true) {
      var vec__10530__10531 = G__10521__10528;
      var group__10532 = cljs.core.nth.call(null, vec__10530__10531, 0, null);
      var opts__10533 = cljs.core.nth.call(null, vec__10530__10531, 1, null);
      var G__10518__10534 = G__10518__10529;
      var opts_html__10535 = clojure.string.join.call(null, "\n", cljs.core.map.call(null, chosen.core.opt__GT_html, opts__10533));
      if(group__10532 == null) {
        $el.append(opts_html__10535)
      }else {
        $el.append([cljs.core.str("<optgroup label='"), cljs.core.str(goog.string.htmlEscape(cljs.core.name.call(null, group__10532))), cljs.core.str("'>"), cljs.core.str(opts_html__10535), cljs.core.str("</optgroup>")].join(""))
      }
      var temp__3974__auto____10536 = cljs.core.next.call(null, G__10518__10534);
      if(temp__3974__auto____10536) {
        var G__10518__10537 = temp__3974__auto____10536;
        var G__10538 = cljs.core.first.call(null, G__10518__10537);
        var G__10539 = G__10518__10537;
        G__10521__10528 = G__10538;
        G__10518__10529 = G__10539;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
chosen.core.Chosen = function($el, _BANG_a, multiple_QMARK_) {
  this.$el = $el;
  this._BANG_a = _BANG_a;
  this.multiple_QMARK_ = multiple_QMARK_;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147516416
};
chosen.core.Chosen.cljs$lang$type = true;
chosen.core.Chosen.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "chosen.core/Chosen")
};
chosen.core.Chosen.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(_10541, _10542, _) {
  var this__10540 = this;
  return null
};
chosen.core.Chosen.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(_, key, f) {
  var this__10543 = this;
  return cljs.core.add_watch.call(null, this__10543._BANG_a, key, function(_10546, _, p__10544, p__10545) {
    var map__10547__10549 = p__10544;
    var map__10547__10550 = cljs.core.seq_QMARK_.call(null, map__10547__10549) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10547__10549) : map__10547__10549;
    var old_sel__10551 = cljs.core._lookup.call(null, map__10547__10550, "\ufdd0'selected", null);
    var map__10548__10552 = p__10545;
    var map__10548__10553 = cljs.core.seq_QMARK_.call(null, map__10548__10552) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10548__10552) : map__10548__10552;
    var sel__10554 = cljs.core._lookup.call(null, map__10548__10553, "\ufdd0'selected", null);
    if(cljs.core.not_EQ_.call(null, old_sel__10551, sel__10554)) {
      return f.call(null, cljs.core.truth_(this__10543.multiple_QMARK_) ? sel__10554 : cljs.core.first.call(null, sel__10554))
    }else {
      return null
    }
  })
};
chosen.core.Chosen.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(_, key) {
  var this__10555 = this;
  return cljs.core.remove_watch.call(null, this__10555._BANG_a, key)
};
chosen.core.Chosen.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var this__10556 = this;
  return this$.chosen$core$ISelectable$selected$arity$1(this$)
};
chosen.core.Chosen.prototype.chosen$core$IOptions$ = true;
chosen.core.Chosen.prototype.chosen$core$IOptions$options$arity$1 = function(_) {
  var this__10557 = this;
  return(new cljs.core.Keyword("\ufdd0'options")).call(null, cljs.core.deref.call(null, this__10557._BANG_a))
};
chosen.core.Chosen.prototype.chosen$core$IOptions$options$arity$2 = function(_, opts) {
  var this__10558 = this;
  chosen.core.reset_dom_options_BANG_.call(null, this__10558.$el, opts);
  return cljs.core.swap_BANG_.call(null, this__10558._BANG_a, cljs.core.assoc, "\ufdd0'options", chosen.core.el_options.call(null, this__10558.$el))
};
chosen.core.Chosen.prototype.chosen$core$ISelectable$ = true;
chosen.core.Chosen.prototype.chosen$core$ISelectable$selected$arity$1 = function(_) {
  var this__10559 = this;
  var sel__10560 = (new cljs.core.Keyword("\ufdd0'selected")).call(null, cljs.core.deref.call(null, this__10559._BANG_a));
  if(cljs.core.truth_(this__10559.multiple_QMARK_)) {
    return sel__10560
  }else {
    return cljs.core.first.call(null, sel__10560)
  }
};
chosen.core.Chosen.prototype.chosen$core$ISelectable$selected$arity$2 = function(_, values) {
  var this__10561 = this;
  return cljs.core.swap_BANG_.call(null, this__10561._BANG_a, cljs.core.assoc, "\ufdd0'selected", chosen.core.__GT_coll.call(null, values))
};
chosen.core.Chosen;
chosen.core.ichooseu_BANG_ = function() {
  var ichooseu_BANG___delegate = function(el, p__10562) {
    var map__10586__10587 = p__10562;
    var map__10586__10588 = cljs.core.seq_QMARK_.call(null, map__10586__10587) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10586__10587) : map__10586__10587;
    var search_contains__10589 = cljs.core._lookup.call(null, map__10586__10588, "\ufdd0'search-contains", false);
    var $el__10590 = $(el);
    var multiple_QMARK___10591 = cljs.core._EQ_.call(null, "multiple", $el__10590.attr("multiple"));
    var _BANG_a__10592 = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'options", "\ufdd0'selected"], {"\ufdd0'options":chosen.core.el_options.call(null, $el__10590), "\ufdd0'selected":chosen.core.selected_values.call(null, $el__10590)}));
    $el__10590.chosen(function() {
      var G__10593__10594 = {};
      G__10593__10594["search_contains"] = search_contains__10589;
      return G__10593__10594
    }()).on("change", function() {
      return cljs.core.swap_BANG_.call(null, _BANG_a__10592, cljs.core.assoc, "\ufdd0'selected", chosen.core.selected_values.call(null, $el__10590))
    });
    cljs.core.add_watch.call(null, _BANG_a__10592, "\ufdd0'_update-dom", function(_10596, _10597, _, p__10595) {
      var map__10598__10599 = p__10595;
      var map__10598__10600 = cljs.core.seq_QMARK_.call(null, map__10598__10599) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10598__10599) : map__10598__10599;
      var selected__10601 = cljs.core._lookup.call(null, map__10598__10600, "\ufdd0'selected", null);
      $el__10590.find("option[selected='selected']").removeAttr("selected");
      var G__10602__10603 = cljs.core.seq.call(null, selected__10601);
      if(G__10602__10603) {
        var val__10604 = cljs.core.first.call(null, G__10602__10603);
        var G__10602__10605 = G__10602__10603;
        while(true) {
          $el__10590.find([cljs.core.str("option[value='"), cljs.core.str(val__10604), cljs.core.str("']")].join("")).first().attr("selected", "selected");
          var temp__3974__auto____10606 = cljs.core.next.call(null, G__10602__10605);
          if(temp__3974__auto____10606) {
            var G__10602__10607 = temp__3974__auto____10606;
            var G__10609 = cljs.core.first.call(null, G__10602__10607);
            var G__10610 = G__10602__10607;
            val__10604 = G__10609;
            G__10602__10605 = G__10610;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var dom_selected__10608 = chosen.core.selected_values.call(null, $el__10590);
      if(cljs.core.not_EQ_.call(null, selected__10601, dom_selected__10608)) {
        cljs.core.swap_BANG_.call(null, _BANG_a__10592, cljs.core.assoc, "\ufdd0'selected", dom_selected__10608)
      }else {
      }
      return $el__10590.trigger("liszt:updated")
    });
    return new chosen.core.Chosen($el__10590, _BANG_a__10592, multiple_QMARK___10591)
  };
  var ichooseu_BANG_ = function(el, var_args) {
    var p__10562 = null;
    if(goog.isDef(var_args)) {
      p__10562 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return ichooseu_BANG___delegate.call(this, el, p__10562)
  };
  ichooseu_BANG_.cljs$lang$maxFixedArity = 1;
  ichooseu_BANG_.cljs$lang$applyTo = function(arglist__10611) {
    var el = cljs.core.first(arglist__10611);
    var p__10562 = cljs.core.rest(arglist__10611);
    return ichooseu_BANG___delegate(el, p__10562)
  };
  ichooseu_BANG_.cljs$lang$arity$variadic = ichooseu_BANG___delegate;
  return ichooseu_BANG_
}();
goog.provide("c2.core");
goog.require("cljs.core");
goog.require("reflex.core");
goog.require("c2.dom");
goog.require("singult.core");
c2.core.node_data = singult.core.node_data;
c2.core.unify = function() {
  var unify__delegate = function(data, mapping, args) {
    if(cljs.core.seq.call(null, data)) {
      mapping.call(null, cljs.core.first.call(null, data))
    }else {
    }
    return cljs.core.apply.call(null, singult.core.unify, data, mapping, args)
  };
  var unify = function(data, mapping, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unify__delegate.call(this, data, mapping, args)
  };
  unify.cljs$lang$maxFixedArity = 2;
  unify.cljs$lang$applyTo = function(arglist__14585) {
    var data = cljs.core.first(arglist__14585);
    var mapping = cljs.core.first(cljs.core.next(arglist__14585));
    var args = cljs.core.rest(cljs.core.next(arglist__14585));
    return unify__delegate(data, mapping, args)
  };
  unify.cljs$lang$arity$variadic = unify__delegate;
  return unify
}();
goog.provide("c2.event");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("c2.core");
goog.require("goog.events");
goog.require("c2.dom");
goog.require("c2.core");
goog.require("cljs.reader");
c2.event.on_load = function on_load(f) {
  return goog.events.listen(window, goog.events.EventType.LOAD, f)
};
c2.event.on_raw = function() {
  var on_raw__delegate = function(node, event_type, f, p__14553) {
    var map__14558__14559 = p__14553;
    var map__14558__14560 = cljs.core.seq_QMARK_.call(null, map__14558__14559) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14558__14559) : map__14558__14559;
    var capture__14561 = cljs.core._lookup.call(null, map__14558__14560, "\ufdd0'capture", false);
    return goog.events.listen(c2.dom.__GT_dom.call(null, node), cljs.core.name.call(null, event_type), f, capture__14561)
  };
  var on_raw = function(node, event_type, f, var_args) {
    var p__14553 = null;
    if(goog.isDef(var_args)) {
      p__14553 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return on_raw__delegate.call(this, node, event_type, f, p__14553)
  };
  on_raw.cljs$lang$maxFixedArity = 3;
  on_raw.cljs$lang$applyTo = function(arglist__14562) {
    var node = cljs.core.first(arglist__14562);
    var event_type = cljs.core.first(cljs.core.next(arglist__14562));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14562)));
    var p__14553 = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__14562)));
    return on_raw__delegate(node, event_type, f, p__14553)
  };
  on_raw.cljs$lang$arity$variadic = on_raw__delegate;
  return on_raw
}();
c2.event.on = function() {
  var on = null;
  var on__3 = function(node, event_type, f) {
    return on.call(null, node, "*", event_type, f)
  };
  var on__5 = function() {
    var G__14582__delegate = function(node, selector, event_type, f, p__14563) {
      var map__14573__14574 = p__14563;
      var map__14573__14575 = cljs.core.seq_QMARK_.call(null, map__14573__14574) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14573__14574) : map__14573__14574;
      var capture__14576 = cljs.core._lookup.call(null, map__14573__14575, "\ufdd0'capture", false);
      return goog.events.listen(c2.dom.__GT_dom.call(null, node), cljs.core.name.call(null, event_type), function(event) {
        if(cljs.core.truth_(c2.dom.matches_selector_QMARK_.call(null, event.target, selector))) {
          var $node__14577 = event.target;
          while(true) {
            var temp__3971__auto____14578 = c2.core.node_data.call(null, $node__14577);
            if(cljs.core.truth_(temp__3971__auto____14578)) {
              var d__14579 = temp__3971__auto____14578;
              return f.call(null, d__14579, $node__14577, event)
            }else {
              var temp__3971__auto____14580 = c2.dom.parent.call(null, $node__14577);
              if(cljs.core.truth_(temp__3971__auto____14580)) {
                var parent__14581 = temp__3971__auto____14580;
                var G__14583 = parent__14581;
                $node__14577 = G__14583;
                continue
              }else {
                return null
              }
            }
            break
          }
        }else {
          return null
        }
      }, capture__14576)
    };
    var G__14582 = function(node, selector, event_type, f, var_args) {
      var p__14563 = null;
      if(goog.isDef(var_args)) {
        p__14563 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__14582__delegate.call(this, node, selector, event_type, f, p__14563)
    };
    G__14582.cljs$lang$maxFixedArity = 4;
    G__14582.cljs$lang$applyTo = function(arglist__14584) {
      var node = cljs.core.first(arglist__14584);
      var selector = cljs.core.first(cljs.core.next(arglist__14584));
      var event_type = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14584)));
      var f = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__14584))));
      var p__14563 = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__14584))));
      return G__14582__delegate(node, selector, event_type, f, p__14563)
    };
    G__14582.cljs$lang$arity$variadic = G__14582__delegate;
    return G__14582
  }();
  on = function(node, selector, event_type, f, var_args) {
    var p__14563 = var_args;
    switch(arguments.length) {
      case 3:
        return on__3.call(this, node, selector, event_type);
      default:
        return on__5.cljs$lang$arity$variadic(node, selector, event_type, f, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  on.cljs$lang$maxFixedArity = 4;
  on.cljs$lang$applyTo = on__5.cljs$lang$applyTo;
  on.cljs$lang$arity$3 = on__3;
  on.cljs$lang$arity$variadic = on__5.cljs$lang$arity$variadic;
  return on
}();
goog.provide("c2.svg");
goog.require("cljs.core");
goog.require("c2.core");
goog.require("c2.maths");
goog.require("c2.dom");
goog.require("c2.maths");
goog.require("c2.core");
c2.svg.__GT_xy = function __GT_xy(coordinates) {
  try {
    if(cljs.core.vector_QMARK_.call(null, coordinates)) {
      try {
        if(function() {
          var and__3822__auto____16041 = cljs.core.vector_QMARK_.call(null, coordinates);
          if(and__3822__auto____16041) {
            return cljs.core._EQ_.call(null, cljs.core.count.call(null, coordinates), 2)
          }else {
            return and__3822__auto____16041
          }
        }()) {
          var x__16042 = cljs.core.nth.call(null, coordinates, 0);
          var y__16043 = cljs.core.nth.call(null, coordinates, 1);
          return cljs.core.PersistentVector.fromArray([x__16042, y__16043], true)
        }else {
          if("\ufdd0'else") {
            throw 0;
          }else {
            return null
          }
        }
      }catch(e__7036__auto__) {
        if(e__7036__auto__ === 0) {
          throw 0;
        }else {
          throw e__7036__auto__;
        }
      }
    }else {
      if(function() {
        var G__16044__16045 = coordinates;
        if(G__16044__16045) {
          if(function() {
            var or__3824__auto____16046 = G__16044__16045.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3824__auto____16046) {
              return or__3824__auto____16046
            }else {
              return G__16044__16045.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__16044__16045.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__16044__16045)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__16044__16045)
        }
      }()) {
        var y__16048 = function() {
          var val__6603__auto____16047 = cljs.core._lookup.call(null, coordinates, "\ufdd0'y", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6603__auto____16047, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6603__auto____16047
          }
        }();
        var x__16050 = function() {
          var val__6603__auto____16049 = cljs.core._lookup.call(null, coordinates, "\ufdd0'x", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6603__auto____16049, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6603__auto____16049
          }
        }();
        return cljs.core.PersistentVector.fromArray([x__16050, y__16048], true)
      }else {
        if("\ufdd0'else") {
          throw 0;
        }else {
          return null
        }
      }
    }
  }catch(e__7036__auto__) {
    if(e__7036__auto__ === 0) {
      var G__16033__16039 = coordinates;
      return null
    }else {
      throw e__7036__auto__;
    }
  }
};
c2.svg.translate = function translate(coordinates) {
  var vec__16055__16056 = c2.svg.__GT_xy.call(null, coordinates);
  var x__16057 = cljs.core.nth.call(null, vec__16055__16056, 0, null);
  var y__16058 = cljs.core.nth.call(null, vec__16055__16056, 1, null);
  return[cljs.core.str("translate("), cljs.core.str(x__16057), cljs.core.str(","), cljs.core.str(y__16058), cljs.core.str(")")].join("")
};
c2.svg.scale = function scale(coordinates) {
  while(true) {
    if(cljs.core.vector_QMARK_.call(null, coordinates)) {
      if(function() {
        var and__3822__auto____16080 = cljs.core.vector_QMARK_.call(null, coordinates);
        if(and__3822__auto____16080) {
          return cljs.core._EQ_.call(null, cljs.core.count.call(null, coordinates), 2)
        }else {
          return and__3822__auto____16080
        }
      }()) {
        var x__16081 = cljs.core.nth.call(null, coordinates, 0);
        var y__16082 = cljs.core.nth.call(null, coordinates, 1);
        return[cljs.core.str("scale("), cljs.core.str(x__16081), cljs.core.str(","), cljs.core.str(y__16082), cljs.core.str(")")].join("")
      }else {
        if("\ufdd0'else") {
          throw new java.lang.Exception([cljs.core.str("No match found. "), cljs.core.str("Followed "), cljs.core.str(1), cljs.core.str(" branches."), cljs.core.str(" Breadcrumbs: "), cljs.core.str(cljs.core.vec([cljs.core.list("\ufdd1'clojure.core/vector?", "\ufdd1'coordinates")]))].join(""));
        }else {
          return null
        }
      }
    }else {
      if(function() {
        var G__16083__16084 = coordinates;
        if(G__16083__16084) {
          if(function() {
            var or__3824__auto____16085 = G__16083__16084.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3824__auto____16085) {
              return or__3824__auto____16085
            }else {
              return G__16083__16084.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__16083__16084.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__16083__16084)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__16083__16084)
        }
      }()) {
        var y__16087 = function() {
          var val__6603__auto____16086 = cljs.core._lookup.call(null, coordinates, "\ufdd0'y", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6603__auto____16086, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6603__auto____16086
          }
        }();
        var x__16089 = function() {
          var val__6603__auto____16088 = cljs.core._lookup.call(null, coordinates, "\ufdd0'x", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6603__auto____16088, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6603__auto____16088
          }
        }();
        var G__16091 = cljs.core.PersistentVector.fromArray([x__16089, y__16087], true);
        coordinates = G__16091;
        continue
      }else {
        if("\ufdd0'else") {
          var s__16090 = coordinates;
          return[cljs.core.str("scale("), cljs.core.str(s__16090), cljs.core.str(")")].join("")
        }else {
          return null
        }
      }
    }
    break
  }
};
c2.svg.rotate = function() {
  var rotate = null;
  var rotate__1 = function(angle) {
    return rotate.call(null, angle, cljs.core.PersistentVector.fromArray([0, 0], true))
  };
  var rotate__2 = function(angle, coordinates) {
    var vec__16096__16097 = c2.svg.__GT_xy.call(null, coordinates);
    var x__16098 = cljs.core.nth.call(null, vec__16096__16097, 0, null);
    var y__16099 = cljs.core.nth.call(null, vec__16096__16097, 1, null);
    return[cljs.core.str("rotate("), cljs.core.str(angle), cljs.core.str(","), cljs.core.str(x__16098), cljs.core.str(","), cljs.core.str(y__16099), cljs.core.str(")")].join("")
  };
  rotate = function(angle, coordinates) {
    switch(arguments.length) {
      case 1:
        return rotate__1.call(this, angle);
      case 2:
        return rotate__2.call(this, angle, coordinates)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rotate.cljs$lang$arity$1 = rotate__1;
  rotate.cljs$lang$arity$2 = rotate__2;
  return rotate
}();
c2.svg.get_bounds = function get_bounds($svg_el) {
  var b__16101 = $svg_el.getBBox();
  return cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'y", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":b__16101.x, "\ufdd0'y":b__16101.y, "\ufdd0'width":b__16101.width, "\ufdd0'height":b__16101.height})
};
c2.svg.transform_to_center = function transform_to_center(element, container) {
  var map__16115__16117 = element;
  var map__16115__16118 = cljs.core.seq_QMARK_.call(null, map__16115__16117) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16115__16117) : map__16115__16117;
  var ew__16119 = cljs.core._lookup.call(null, map__16115__16118, "\ufdd0'width", null);
  var eh__16120 = cljs.core._lookup.call(null, map__16115__16118, "\ufdd0'height", null);
  var x__16121 = cljs.core._lookup.call(null, map__16115__16118, "\ufdd0'x", null);
  var y__16122 = cljs.core._lookup.call(null, map__16115__16118, "\ufdd0'y", null);
  var map__16116__16123 = container;
  var map__16116__16124 = cljs.core.seq_QMARK_.call(null, map__16116__16123) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16116__16123) : map__16116__16123;
  var w__16125 = cljs.core._lookup.call(null, map__16116__16124, "\ufdd0'width", null);
  var h__16126 = cljs.core._lookup.call(null, map__16116__16124, "\ufdd0'height", null);
  var s__16127 = h__16126 / eh__16120 < w__16125 / ew__16119 ? h__16126 / eh__16120 : w__16125 / ew__16119;
  return[cljs.core.str(c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([w__16125 / 2 - s__16127 * (ew__16119 / 2), h__16126 / 2 - s__16127 * (eh__16120 / 2)], true))), cljs.core.str(" "), cljs.core.str(c2.svg.scale.call(null, s__16127)), cljs.core.str(" "), cljs.core.str(c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([-x__16121, -y__16122], true)))].join("")
};
c2.svg.transform_to_center_BANG_ = function transform_to_center_BANG_($svg_el) {
  var $svg__16130 = $svg_el.ownerSVGElement;
  var t__16131 = c2.svg.transform_to_center.call(null, c2.svg.get_bounds.call(null, $svg_el), cljs.core.ObjMap.fromObject(["\ufdd0'width", "\ufdd0'height"], {"\ufdd0'width":parseFloat(c2.dom.attr.call(null, $svg__16130, "\ufdd0'width")), "\ufdd0'height":parseFloat(c2.dom.attr.call(null, $svg__16130, "\ufdd0'height"))}));
  return c2.dom.attr.call(null, $svg_el, "\ufdd0'transform", t__16131)
};
c2.svg.axis = function() {
  var axis__delegate = function(scale, ticks, p__16132) {
    var map__16157__16158 = p__16132;
    var map__16157__16159 = cljs.core.seq_QMARK_.call(null, map__16157__16158) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16157__16158) : map__16157__16158;
    var label_margin__16160 = cljs.core._lookup.call(null, map__16157__16159, "\ufdd0'label-margin", 28);
    var label__16161 = cljs.core._lookup.call(null, map__16157__16159, "\ufdd0'label", null);
    var text_margin__16162 = cljs.core._lookup.call(null, map__16157__16159, "\ufdd0'text-margin", 9);
    var major_tick_width__16163 = cljs.core._lookup.call(null, map__16157__16159, "\ufdd0'major-tick-width", 6);
    var formatter__16164 = cljs.core._lookup.call(null, map__16157__16159, "\ufdd0'formatter", cljs.core.str);
    var orientation__16165 = cljs.core._lookup.call(null, map__16157__16159, "\ufdd0'orientation", "\ufdd0'left");
    var vec__16166__16169 = function() {
      var G__16167__16168 = orientation__16165;
      if(cljs.core._EQ_.call(null, "\ufdd0'bottom", G__16167__16168)) {
        return cljs.core.PersistentVector.fromArray(["\ufdd0'y", "\ufdd0'x", "\ufdd0'y1", "\ufdd0'y2", "\ufdd0'x1", "\ufdd0'x2"], true)
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'top", G__16167__16168)) {
          return cljs.core.PersistentVector.fromArray(["\ufdd0'y", "\ufdd0'x", "\ufdd0'y1", "\ufdd0'y2", "\ufdd0'x1", "\ufdd0'x2"], true)
        }else {
          if(cljs.core._EQ_.call(null, "\ufdd0'right", G__16167__16168)) {
            return cljs.core.PersistentVector.fromArray(["\ufdd0'x", "\ufdd0'y", "\ufdd0'x1", "\ufdd0'x2", "\ufdd0'y1", "\ufdd0'y2"], true)
          }else {
            if(cljs.core._EQ_.call(null, "\ufdd0'left", G__16167__16168)) {
              return cljs.core.PersistentVector.fromArray(["\ufdd0'x", "\ufdd0'y", "\ufdd0'x1", "\ufdd0'x2", "\ufdd0'y1", "\ufdd0'y2"], true)
            }else {
              if("\ufdd0'else") {
                throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(orientation__16165)].join(""));
              }else {
                return null
              }
            }
          }
        }
      }
    }();
    var x__16170 = cljs.core.nth.call(null, vec__16166__16169, 0, null);
    var y__16171 = cljs.core.nth.call(null, vec__16166__16169, 1, null);
    var x1__16172 = cljs.core.nth.call(null, vec__16166__16169, 2, null);
    var x2__16173 = cljs.core.nth.call(null, vec__16166__16169, 3, null);
    var y1__16174 = cljs.core.nth.call(null, vec__16166__16169, 4, null);
    var y2__16175 = cljs.core.nth.call(null, vec__16166__16169, 5, null);
    var parity__16178 = function() {
      var G__16176__16177 = orientation__16165;
      if(cljs.core._EQ_.call(null, "\ufdd0'bottom", G__16176__16177)) {
        return 1
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'right", G__16176__16177)) {
          return 1
        }else {
          if(cljs.core._EQ_.call(null, "\ufdd0'top", G__16176__16177)) {
            return-1
          }else {
            if(cljs.core._EQ_.call(null, "\ufdd0'left", G__16176__16177)) {
              return-1
            }else {
              if("\ufdd0'else") {
                throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(orientation__16165)].join(""));
              }else {
                return null
              }
            }
          }
        }
      }
    }();
    return cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.ObjMap.fromObject(["\ufdd0'class"], {"\ufdd0'class":[cljs.core.str("axis "), cljs.core.str(cljs.core.name.call(null, orientation__16165))].join("")}), cljs.core.PersistentVector.fromArray(["\ufdd0'line.rule", cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.interleave.call(null, cljs.core.PersistentVector.fromArray([y1__16174, y2__16175], true), (new cljs.core.Keyword("\ufdd0'range")).call(null, scale)))], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.ticks", 
    c2.core.unify.call(null, ticks, function(d) {
      return cljs.core.PersistentVector.fromArray(["\ufdd0'g.tick.major-tick", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentArrayMap.fromArrays([x__16170, y__16171], [0, scale.call(null, d)]))}), cljs.core.PersistentVector.fromArray(["\ufdd0'text", cljs.core.PersistentArrayMap.fromArrays([x__16170], [parity__16178 * text_margin__16162]), formatter__16164.call(null, d)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'line", 
      cljs.core.PersistentArrayMap.fromArrays([x1__16172, x2__16173], [0, parity__16178 * major_tick_width__16163])], true)], true)
    })], true), cljs.core.truth_(label__16161) ? cljs.core.PersistentVector.fromArray(["\ufdd0'text.label", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":[cljs.core.str(c2.svg.translate.call(null, cljs.core.PersistentArrayMap.fromArrays([x__16170, y__16171], [parity__16178 * label_margin__16160, c2.maths.mean.call(null, (new cljs.core.Keyword("\ufdd0'range")).call(null, scale))]))), cljs.core.str(" "), cljs.core.str(function() {
      var G__16179__16180 = orientation__16165;
      if(cljs.core._EQ_.call(null, "\ufdd0'right", G__16179__16180)) {
        return c2.svg.rotate.call(null, 90)
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'left", G__16179__16180)) {
          return c2.svg.rotate.call(null, -90)
        }else {
          if("\ufdd0'else") {
            return""
          }else {
            return null
          }
        }
      }
    }())].join("")}), label__16161], true) : null], true)
  };
  var axis = function(scale, ticks, var_args) {
    var p__16132 = null;
    if(goog.isDef(var_args)) {
      p__16132 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return axis__delegate.call(this, scale, ticks, p__16132)
  };
  axis.cljs$lang$maxFixedArity = 2;
  axis.cljs$lang$applyTo = function(arglist__16181) {
    var scale = cljs.core.first(arglist__16181);
    var ticks = cljs.core.first(cljs.core.next(arglist__16181));
    var p__16132 = cljs.core.rest(cljs.core.next(arglist__16181));
    return axis__delegate(scale, ticks, p__16132)
  };
  axis.cljs$lang$arity$variadic = axis__delegate;
  return axis
}();
c2.svg.ArcMax = c2.maths.Tau - 1.0E-7;
c2.svg.circle = function() {
  var circle = null;
  var circle__1 = function(radius) {
    return circle.call(null, cljs.core.PersistentVector.fromArray([0, 0], true), radius)
  };
  var circle__2 = function(coordinates, radius) {
    var vec__16186__16187 = c2.svg.__GT_xy.call(null, coordinates);
    var x__16188 = cljs.core.nth.call(null, vec__16186__16187, 0, null);
    var y__16189 = cljs.core.nth.call(null, vec__16186__16187, 1, null);
    return[cljs.core.str("M"), cljs.core.str(x__16188 + radius), cljs.core.str(","), cljs.core.str(y__16189), cljs.core.str("A"), cljs.core.str(x__16188 + radius), cljs.core.str(","), cljs.core.str(y__16189 + radius), cljs.core.str(" 0 1,1"), cljs.core.str(-(x__16188 + radius)), cljs.core.str(","), cljs.core.str(y__16189), cljs.core.str("A"), cljs.core.str(x__16188 + radius), cljs.core.str(","), cljs.core.str(y__16189 + radius), cljs.core.str(" 0 1,1"), cljs.core.str(x__16188 + radius), cljs.core.str(","), 
    cljs.core.str(y__16189)].join("")
  };
  circle = function(coordinates, radius) {
    switch(arguments.length) {
      case 1:
        return circle__1.call(this, coordinates);
      case 2:
        return circle__2.call(this, coordinates, radius)
    }
    throw"Invalid arity: " + arguments.length;
  };
  circle.cljs$lang$arity$1 = circle__1;
  circle.cljs$lang$arity$2 = circle__2;
  return circle
}();
c2.svg.arc = function() {
  var arc__delegate = function(p__16190) {
    var map__16211__16212 = p__16190;
    var map__16211__16213 = cljs.core.seq_QMARK_.call(null, map__16211__16212) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16211__16212) : map__16211__16212;
    var angle_offset__16214 = cljs.core._lookup.call(null, map__16211__16213, "\ufdd0'angle-offset", 0);
    var end_angle__16215 = cljs.core._lookup.call(null, map__16211__16213, "\ufdd0'end-angle", c2.maths.Pi);
    var start_angle__16216 = cljs.core._lookup.call(null, map__16211__16213, "\ufdd0'start-angle", 0);
    var outer_radius__16217 = cljs.core._lookup.call(null, map__16211__16213, "\ufdd0'outer-radius", 1);
    var inner_radius__16218 = cljs.core._lookup.call(null, map__16211__16213, "\ufdd0'inner-radius", 0);
    var r0__16220 = inner_radius__16218;
    var r1__16221 = outer_radius__16217;
    var vec__16219__16222 = cljs.core.sort.call(null, cljs.core.PersistentVector.fromArray([angle_offset__16214 + start_angle__16216, angle_offset__16214 + end_angle__16215], true));
    var a0__16223 = cljs.core.nth.call(null, vec__16219__16222, 0, null);
    var a1__16224 = cljs.core.nth.call(null, vec__16219__16222, 1, null);
    var da__16225 = a1__16224 - a0__16223;
    var large_arc_flag__16226 = da__16225 < c2.maths.Pi ? "0" : "1";
    var s0__16227 = c2.maths.sin.call(null, a0__16223);
    var c0__16228 = c2.maths.cos.call(null, a0__16223);
    var s1__16229 = c2.maths.sin.call(null, a1__16224);
    var c1__16230 = c2.maths.cos.call(null, a1__16224);
    if(da__16225 >= c2.svg.ArcMax) {
      return[cljs.core.str("M0,"), cljs.core.str(r1__16221), cljs.core.str("A"), cljs.core.str(r1__16221), cljs.core.str(","), cljs.core.str(r1__16221), cljs.core.str(" 0 1,1 0,"), cljs.core.str(-r1__16221), cljs.core.str("A"), cljs.core.str(r1__16221), cljs.core.str(","), cljs.core.str(r1__16221), cljs.core.str(" 0 1,1 0,"), cljs.core.str(r1__16221), cljs.core.str(cljs.core.not_EQ_.call(null, 0, r0__16220) ? [cljs.core.str("M0,"), cljs.core.str(r0__16220), cljs.core.str("A"), cljs.core.str(r0__16220), 
      cljs.core.str(","), cljs.core.str(r0__16220), cljs.core.str(" 0 1,0 0,"), cljs.core.str(-r0__16220), cljs.core.str("A"), cljs.core.str(r0__16220), cljs.core.str(","), cljs.core.str(r0__16220), cljs.core.str(" 0 1,0 0,"), cljs.core.str(r0__16220)].join("") : null), cljs.core.str("Z")].join("")
    }else {
      return[cljs.core.str("M"), cljs.core.str(r1__16221 * c0__16228), cljs.core.str(","), cljs.core.str(r1__16221 * s0__16227), cljs.core.str("A"), cljs.core.str(r1__16221), cljs.core.str(","), cljs.core.str(r1__16221), cljs.core.str(" 0 "), cljs.core.str(large_arc_flag__16226), cljs.core.str(",1 "), cljs.core.str(r1__16221 * c1__16230), cljs.core.str(","), cljs.core.str(r1__16221 * s1__16229), cljs.core.str(cljs.core.not_EQ_.call(null, 0, r0__16220) ? [cljs.core.str("L"), cljs.core.str(r0__16220 * 
      c1__16230), cljs.core.str(","), cljs.core.str(r0__16220 * s1__16229), cljs.core.str("A"), cljs.core.str(r0__16220), cljs.core.str(","), cljs.core.str(r0__16220), cljs.core.str(" 0 "), cljs.core.str(large_arc_flag__16226), cljs.core.str(",0 "), cljs.core.str(r0__16220 * c0__16228), cljs.core.str(","), cljs.core.str(r0__16220 * s0__16227)].join("") : "L0,0"), cljs.core.str("Z")].join("")
    }
  };
  var arc = function(var_args) {
    var p__16190 = null;
    if(goog.isDef(var_args)) {
      p__16190 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return arc__delegate.call(this, p__16190)
  };
  arc.cljs$lang$maxFixedArity = 0;
  arc.cljs$lang$applyTo = function(arglist__16231) {
    var p__16190 = cljs.core.seq(arglist__16231);
    return arc__delegate(p__16190)
  };
  arc.cljs$lang$arity$variadic = arc__delegate;
  return arc
}();
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.array");
goog.require("goog.events");
goog.require("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_handler) {
  goog.Disposable.call(this);
  this.handler_ = opt_handler;
  this.keys_ = []
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(!goog.isArray(type)) {
    goog.events.EventHandler.typeArray_[0] = type;
    type = goog.events.EventHandler.typeArray_
  }
  for(var i = 0;i < type.length;i++) {
    var key = goog.events.listen(src, type[i], opt_fn || this, opt_capture || false, opt_handler || this.handler_ || this);
    this.keys_.push(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.listenOnce(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var key = goog.events.listenOnce(src, type, opt_fn || this, opt_capture, opt_handler || this.handler_ || this);
    this.keys_.push(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler || this.handler_, this);
  return this
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  return this.keys_.length
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var listener = goog.events.getListener(src, type, opt_fn || this, opt_capture, opt_handler || this.handler_ || this);
    if(listener) {
      var key = listener.key;
      goog.events.unlistenByKey(key);
      goog.array.remove(this.keys_, key)
    }
  }
  return this
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler || this.handler_, this);
  return this
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.array.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_.length = 0
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll()
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.fx.DragEvent");
goog.provide("goog.fx.Dragger");
goog.provide("goog.fx.Dragger.EventType");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.Event");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.userAgent");
goog.fx.Dragger = function(target, opt_handle, opt_limits) {
  goog.events.EventTarget.call(this);
  this.target = target;
  this.handle = opt_handle || target;
  this.limits = opt_limits || new goog.math.Rect(NaN, NaN, NaN, NaN);
  this.document_ = goog.dom.getOwnerDocument(target);
  this.eventHandler_ = new goog.events.EventHandler(this);
  goog.events.listen(this.handle, [goog.events.EventType.TOUCHSTART, goog.events.EventType.MOUSEDOWN], this.startDrag, false, this)
};
goog.inherits(goog.fx.Dragger, goog.events.EventTarget);
goog.fx.Dragger.HAS_SET_CAPTURE_ = goog.userAgent.IE || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.3");
goog.fx.Dragger.EventType = {EARLY_CANCEL:"earlycancel", START:"start", BEFOREDRAG:"beforedrag", DRAG:"drag", END:"end"};
goog.fx.Dragger.prototype.target;
goog.fx.Dragger.prototype.handle;
goog.fx.Dragger.prototype.limits;
goog.fx.Dragger.prototype.clientX = 0;
goog.fx.Dragger.prototype.clientY = 0;
goog.fx.Dragger.prototype.screenX = 0;
goog.fx.Dragger.prototype.screenY = 0;
goog.fx.Dragger.prototype.startX = 0;
goog.fx.Dragger.prototype.startY = 0;
goog.fx.Dragger.prototype.deltaX = 0;
goog.fx.Dragger.prototype.deltaY = 0;
goog.fx.Dragger.prototype.pageScroll;
goog.fx.Dragger.prototype.enabled_ = true;
goog.fx.Dragger.prototype.dragging_ = false;
goog.fx.Dragger.prototype.hysteresisDistanceSquared_ = 0;
goog.fx.Dragger.prototype.mouseDownTime_ = 0;
goog.fx.Dragger.prototype.document_;
goog.fx.Dragger.prototype.eventHandler_;
goog.fx.Dragger.prototype.scrollTarget_;
goog.fx.Dragger.prototype.ieDragStartCancellingOn_ = false;
goog.fx.Dragger.prototype.getHandler = function() {
  return this.eventHandler_
};
goog.fx.Dragger.prototype.setLimits = function(limits) {
  this.limits = limits || new goog.math.Rect(NaN, NaN, NaN, NaN)
};
goog.fx.Dragger.prototype.setHysteresis = function(distance) {
  this.hysteresisDistanceSquared_ = Math.pow(distance, 2)
};
goog.fx.Dragger.prototype.getHysteresis = function() {
  return Math.sqrt(this.hysteresisDistanceSquared_)
};
goog.fx.Dragger.prototype.setScrollTarget = function(scrollTarget) {
  this.scrollTarget_ = scrollTarget
};
goog.fx.Dragger.prototype.setCancelIeDragStart = function(cancelIeDragStart) {
  this.ieDragStartCancellingOn_ = cancelIeDragStart
};
goog.fx.Dragger.prototype.getEnabled = function() {
  return this.enabled_
};
goog.fx.Dragger.prototype.setEnabled = function(enabled) {
  this.enabled_ = enabled
};
goog.fx.Dragger.prototype.disposeInternal = function() {
  goog.fx.Dragger.superClass_.disposeInternal.call(this);
  goog.events.unlisten(this.handle, [goog.events.EventType.TOUCHSTART, goog.events.EventType.MOUSEDOWN], this.startDrag, false, this);
  this.eventHandler_.dispose();
  delete this.target;
  delete this.handle;
  delete this.eventHandler_
};
goog.fx.Dragger.prototype.startDrag = function(e) {
  var isMouseDown = e.type == goog.events.EventType.MOUSEDOWN;
  if(this.enabled_ && !this.dragging_ && (!isMouseDown || e.isMouseActionButton())) {
    this.maybeReinitTouchEvent_(e);
    if(this.hysteresisDistanceSquared_ == 0) {
      this.initializeDrag_(e);
      if(this.dragging_) {
        e.preventDefault()
      }else {
        return
      }
    }else {
      e.preventDefault()
    }
    this.setupDragHandlers();
    this.clientX = this.startX = e.clientX;
    this.clientY = this.startY = e.clientY;
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    this.deltaX = this.target.offsetLeft;
    this.deltaY = this.target.offsetTop;
    this.pageScroll = goog.dom.getDomHelper(this.document_).getDocumentScroll();
    this.mouseDownTime_ = goog.now()
  }else {
    this.dispatchEvent(goog.fx.Dragger.EventType.EARLY_CANCEL)
  }
};
goog.fx.Dragger.prototype.setupDragHandlers = function() {
  var doc = this.document_;
  var docEl = doc.documentElement;
  var useCapture = !goog.fx.Dragger.HAS_SET_CAPTURE_;
  this.eventHandler_.listen(doc, [goog.events.EventType.TOUCHMOVE, goog.events.EventType.MOUSEMOVE], this.handleMove_, useCapture);
  this.eventHandler_.listen(doc, [goog.events.EventType.TOUCHEND, goog.events.EventType.MOUSEUP], this.endDrag, useCapture);
  if(goog.fx.Dragger.HAS_SET_CAPTURE_) {
    docEl.setCapture(false);
    this.eventHandler_.listen(docEl, goog.events.EventType.LOSECAPTURE, this.endDrag)
  }else {
    this.eventHandler_.listen(goog.dom.getWindow(doc), goog.events.EventType.BLUR, this.endDrag)
  }
  if(goog.userAgent.IE && this.ieDragStartCancellingOn_) {
    this.eventHandler_.listen(doc, goog.events.EventType.DRAGSTART, goog.events.Event.preventDefault)
  }
  if(this.scrollTarget_) {
    this.eventHandler_.listen(this.scrollTarget_, goog.events.EventType.SCROLL, this.onScroll_, useCapture)
  }
};
goog.fx.Dragger.prototype.initializeDrag_ = function(e) {
  var rv = this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.START, this, e.clientX, e.clientY, e));
  if(rv !== false) {
    this.dragging_ = true
  }
};
goog.fx.Dragger.prototype.endDrag = function(e, opt_dragCanceled) {
  this.eventHandler_.removeAll();
  if(goog.fx.Dragger.HAS_SET_CAPTURE_) {
    this.document_.releaseCapture()
  }
  var x = this.limitX(this.deltaX);
  var y = this.limitY(this.deltaY);
  if(this.dragging_) {
    this.maybeReinitTouchEvent_(e);
    this.dragging_ = false;
    var dragCancelled = opt_dragCanceled || e.type == goog.events.EventType.TOUCHCANCEL;
    this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.END, this, e.clientX, e.clientY, e, x, y, dragCancelled))
  }else {
    this.dispatchEvent(goog.fx.Dragger.EventType.EARLY_CANCEL)
  }
  if(e.type == goog.events.EventType.TOUCHEND || e.type == goog.events.EventType.TOUCHCANCEL) {
    e.preventDefault()
  }
};
goog.fx.Dragger.prototype.endDragCancel = function(e) {
  this.endDrag(e, true)
};
goog.fx.Dragger.prototype.maybeReinitTouchEvent_ = function(e) {
  var type = e.type;
  if(type == goog.events.EventType.TOUCHSTART || type == goog.events.EventType.TOUCHMOVE) {
    e.init(e.getBrowserEvent().targetTouches[0], e.currentTarget)
  }else {
    if(type == goog.events.EventType.TOUCHEND || type == goog.events.EventType.TOUCHCANCEL) {
      e.init(e.getBrowserEvent().changedTouches[0], e.currentTarget)
    }
  }
};
goog.fx.Dragger.prototype.handleMove_ = function(e) {
  if(this.enabled_) {
    this.maybeReinitTouchEvent_(e);
    var dx = e.clientX - this.clientX;
    var dy = e.clientY - this.clientY;
    this.clientX = e.clientX;
    this.clientY = e.clientY;
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    if(!this.dragging_) {
      var diffX = this.startX - this.clientX;
      var diffY = this.startY - this.clientY;
      var distance = diffX * diffX + diffY * diffY;
      if(distance > this.hysteresisDistanceSquared_) {
        this.initializeDrag_(e);
        if(!this.dragging_) {
          this.endDrag(e);
          return
        }
      }
    }
    var pos = this.calculatePosition_(dx, dy);
    var x = pos.x;
    var y = pos.y;
    if(this.dragging_) {
      var rv = this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.BEFOREDRAG, this, e.clientX, e.clientY, e, x, y));
      if(rv !== false) {
        this.doDrag(e, x, y, false);
        e.preventDefault()
      }
    }
  }
};
goog.fx.Dragger.prototype.calculatePosition_ = function(dx, dy) {
  var pageScroll = goog.dom.getDomHelper(this.document_).getDocumentScroll();
  dx += pageScroll.x - this.pageScroll.x;
  dy += pageScroll.y - this.pageScroll.y;
  this.pageScroll = pageScroll;
  this.deltaX += dx;
  this.deltaY += dy;
  var x = this.limitX(this.deltaX);
  var y = this.limitY(this.deltaY);
  return new goog.math.Coordinate(x, y)
};
goog.fx.Dragger.prototype.onScroll_ = function(e) {
  var pos = this.calculatePosition_(0, 0);
  e.clientX = this.clientX;
  e.clientY = this.clientY;
  this.doDrag(e, pos.x, pos.y, true)
};
goog.fx.Dragger.prototype.doDrag = function(e, x, y, dragFromScroll) {
  this.defaultAction(x, y);
  this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.DRAG, this, e.clientX, e.clientY, e, x, y))
};
goog.fx.Dragger.prototype.limitX = function(x) {
  var rect = this.limits;
  var left = !isNaN(rect.left) ? rect.left : null;
  var width = !isNaN(rect.width) ? rect.width : 0;
  var maxX = left != null ? left + width : Infinity;
  var minX = left != null ? left : -Infinity;
  return Math.min(maxX, Math.max(minX, x))
};
goog.fx.Dragger.prototype.limitY = function(y) {
  var rect = this.limits;
  var top = !isNaN(rect.top) ? rect.top : null;
  var height = !isNaN(rect.height) ? rect.height : 0;
  var maxY = top != null ? top + height : Infinity;
  var minY = top != null ? top : -Infinity;
  return Math.min(maxY, Math.max(minY, y))
};
goog.fx.Dragger.prototype.defaultAction = function(x, y) {
  this.target.style.left = x + "px";
  this.target.style.top = y + "px"
};
goog.fx.DragEvent = function(type, dragobj, clientX, clientY, browserEvent, opt_actX, opt_actY, opt_dragCanceled) {
  goog.events.Event.call(this, type);
  this.clientX = clientX;
  this.clientY = clientY;
  this.browserEvent = browserEvent;
  this.left = goog.isDef(opt_actX) ? opt_actX : dragobj.deltaX;
  this.top = goog.isDef(opt_actY) ? opt_actY : dragobj.deltaY;
  this.dragger = dragobj;
  this.dragCanceled = !!opt_dragCanceled
};
goog.inherits(goog.fx.DragEvent, goog.events.Event);
goog.provide("vcfvis.brush");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.fx.Dragger");
goog.require("c2.svg");
goog.require("c2.scale");
goog.require("c2.dom");
vcfvis.brush.SVGDrag = function SVGDrag(el) {
  return goog.fx.Dragger.call(this, el)
};
goog.inherits(vcfvis.brush.SVGDrag, goog.fx.Dragger);
vcfvis.brush.SVGDrag.prototype.defaultAction = function(x, y) {
  return"Do nothing"
};
vcfvis.brush.mouse_point = function mouse_point($container, e) {
  var point__10059 = function() {
    var or__3824__auto____10058 = $container.ownerSVGElement;
    if(cljs.core.truth_(or__3824__auto____10058)) {
      return or__3824__auto____10058
    }else {
      return $container
    }
  }().createSVGPoint();
  point__10059.x = e.clientX;
  point__10059.y = e.clientY;
  var point__10060 = point__10059.matrixTransform($container.getScreenCTM().inverse());
  return cljs.core.PersistentVector.fromArray([point__10060.x, point__10060.y], true)
};
vcfvis.brush.resize_path_d = function resize_path_d(height, direction) {
  var vec__10068__10071 = function() {
    var G__10069__10070 = direction;
    if(cljs.core._EQ_.call(null, "\ufdd0'east", G__10069__10070)) {
      return cljs.core.PersistentVector.fromArray([1, 1], true)
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0'west", G__10069__10070)) {
        return cljs.core.PersistentVector.fromArray([-1, 0], true)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(direction)].join(""));
        }else {
          return null
        }
      }
    }
  }();
  var x__10072 = cljs.core.nth.call(null, vec__10068__10071, 0, null);
  var e__10073 = cljs.core.nth.call(null, vec__10068__10071, 1, null);
  return[cljs.core.str("M"), cljs.core.str(0.5 * x__10072), cljs.core.str(","), cljs.core.str(height), cljs.core.str("A6,6 0 0 "), cljs.core.str(e__10073), cljs.core.str(" "), cljs.core.str(6.5 * x__10072), cljs.core.str(","), cljs.core.str(height + 6), cljs.core.str("V"), cljs.core.str(2 * height - 6), cljs.core.str("A6,6 0 0 "), cljs.core.str(e__10073), cljs.core.str(" "), cljs.core.str(0.5 * x__10072), cljs.core.str(","), cljs.core.str(2 * height), cljs.core.str("Z"), cljs.core.str("M"), cljs.core.str(2.5 * 
  x__10072), cljs.core.str(","), cljs.core.str(height + 8), cljs.core.str("V"), cljs.core.str(2 * height - 8), cljs.core.str("M"), cljs.core.str(4.5 * x__10072), cljs.core.str(","), cljs.core.str(height + 8), cljs.core.str("V"), cljs.core.str(2 * height - 8)].join("")
};
vcfvis.brush.init_BANG_ = function init_BANG_(el, scale_x, scale_y) {
  var width__10152 = function() {
    var vec__10148__10149 = (new cljs.core.Keyword("\ufdd0'range")).call(null, scale_x);
    var xmin__10150 = cljs.core.nth.call(null, vec__10148__10149, 0, null);
    var xmax__10151 = cljs.core.nth.call(null, vec__10148__10149, 1, null);
    return xmax__10151 - xmin__10150
  }();
  var ix__10153 = c2.scale.invert.call(null, scale_x);
  var height__10158 = function() {
    var vec__10154__10155 = (new cljs.core.Keyword("\ufdd0'range")).call(null, scale_y);
    var ymin__10156 = cljs.core.nth.call(null, vec__10154__10155, 0, null);
    var ymax__10157 = cljs.core.nth.call(null, vec__10154__10155, 1, null);
    return ymax__10157 - ymin__10156
  }();
  var _BANG_extent__10159 = cljs.core.atom.call(null, cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([0, 0], true), cljs.core.PersistentVector.fromArray([0, 0], true)], true));
  var $brush__10160 = c2.dom.append_BANG_.call(null, el, cljs.core.PersistentVector.fromArray(["\ufdd0'g.brush"], true));
  var co__7961__auto____10172 = function() {
    var co__6213__auto____10171 = new reflex.core.ComputedObservable(null, true, function() {
      var vec__10161__10164 = cljs.core.deref.call(null, _BANG_extent__10159);
      var vec__10162__10165 = cljs.core.nth.call(null, vec__10161__10164, 0, null);
      var x1__10166 = cljs.core.nth.call(null, vec__10162__10165, 0, null);
      var x2__10167 = cljs.core.nth.call(null, vec__10162__10165, 1, null);
      var vec__10163__10168 = cljs.core.nth.call(null, vec__10161__10164, 1, null);
      var y1__10169 = cljs.core.nth.call(null, vec__10163__10168, 0, null);
      var y2__10170 = cljs.core.nth.call(null, vec__10163__10168, 1, null);
      return cljs.core.PersistentVector.fromArray(["\ufdd0'g.brush", cljs.core.ObjMap.fromObject(["\ufdd0'style"], {"\ufdd0'style":cljs.core.ObjMap.fromObject(["\ufdd0'visibility"], {"\ufdd0'visibility":x1__10166 - x2__10167 === 0 ? "hidden" : null})}), cljs.core.PersistentVector.fromArray(["\ufdd0'rect.background", cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":0, "\ufdd0'width":width__10152, "\ufdd0'height":height__10158})], true), cljs.core.PersistentVector.fromArray(["\ufdd0'rect.extent", 
      cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":scale_x.call(null, x1__10166), "\ufdd0'width":scale_x.call(null, x2__10167) - scale_x.call(null, x1__10166), "\ufdd0'height":height__10158})], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.resize.w", cljs.core.PersistentVector.fromArray(["\ufdd0'path", cljs.core.ObjMap.fromObject(["\ufdd0'transform", "\ufdd0'd"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([scale_x.call(null, 
      x1__10166), 0], true)), "\ufdd0'd":vcfvis.brush.resize_path_d.call(null, height__10158 / 3, "\ufdd0'west")})], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.resize.e", cljs.core.PersistentVector.fromArray(["\ufdd0'path", cljs.core.ObjMap.fromObject(["\ufdd0'transform", "\ufdd0'd"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([scale_x.call(null, x2__10167), 0], true)), "\ufdd0'd":vcfvis.brush.resize_path_d.call(null, height__10158 / 3, 
      "\ufdd0'east")})], true)], true)], true)
    }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
    cljs.core.deref.call(null, co__6213__auto____10171);
    return co__6213__auto____10171
  }();
  var $el__7962__auto____10173 = c2.dom.__GT_dom.call(null, $brush__10160);
  singult.core.merge_BANG_.call(null, $el__7962__auto____10173, cljs.core.deref.call(null, co__7961__auto____10172));
  cljs.core.add_watch.call(null, co__7961__auto____10172, "\ufdd0'update-dom", function() {
    return singult.core.merge_BANG_.call(null, $el__7962__auto____10173, cljs.core.deref.call(null, co__7961__auto____10172))
  });
  co__7961__auto____10172;
  var $background__10174 = c2.dom.select.call(null, ".background", $brush__10160);
  var _BANG_creating_QMARK___10175 = cljs.core.atom.call(null, false);
  goog.events.listen($background__10174, "mousedown", function(e) {
    cljs.core.reset_BANG_.call(null, _BANG_creating_QMARK___10175, true);
    var vec__10176__10177 = vcfvis.brush.mouse_point.call(null, $background__10174, e);
    var x__10178 = cljs.core.nth.call(null, vec__10176__10177, 0, null);
    var y__10179 = cljs.core.nth.call(null, vec__10176__10177, 1, null);
    var x__10180 = ix__10153.call(null, x__10178);
    return cljs.core.swap_BANG_.call(null, _BANG_extent__10159, function(p1__10061_SHARP_) {
      return cljs.core.assoc_in.call(null, p1__10061_SHARP_, cljs.core.PersistentVector.fromArray([0], true), cljs.core.PersistentVector.fromArray([x__10180, x__10180], true))
    })
  });
  goog.events.listen($brush__10160, "mouseup", function(_) {
    return cljs.core.reset_BANG_.call(null, _BANG_creating_QMARK___10175, false)
  });
  goog.events.listen($brush__10160, "mousemove", function(e) {
    if(cljs.core.truth_(cljs.core.deref.call(null, _BANG_creating_QMARK___10175))) {
      var vec__10181__10182 = vcfvis.brush.mouse_point.call(null, $background__10174, e);
      var x__10183 = cljs.core.nth.call(null, vec__10181__10182, 0, null);
      var y__10184 = cljs.core.nth.call(null, vec__10181__10182, 1, null);
      var x__10185 = ix__10153.call(null, x__10183);
      return cljs.core.swap_BANG_.call(null, _BANG_extent__10159, function(p__10186) {
        var vec__10187__10189 = p__10186;
        var vec__10188__10190 = cljs.core.nth.call(null, vec__10187__10189, 0, null);
        var x1__10191 = cljs.core.nth.call(null, vec__10188__10190, 0, null);
        var x2__10192 = cljs.core.nth.call(null, vec__10188__10190, 1, null);
        var ys__10193 = cljs.core.nth.call(null, vec__10187__10189, 1, null);
        return cljs.core.PersistentVector.fromArray([x__10185 > x1__10191 ? cljs.core.PersistentVector.fromArray([x1__10191, x__10185], true) : cljs.core.PersistentVector.fromArray([x__10185, x2__10192], true), ys__10193], true)
      })
    }else {
      return null
    }
  });
  goog.events.listen($brush__10160, "mouseout", function(e) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____10194 = e.relatedTarget;
      if(cljs.core.truth_(and__3822__auto____10194)) {
        return goog.dom.contains($brush__10160, e.relatedTarget)
      }else {
        return and__3822__auto____10194
      }
    }())) {
      return null
    }else {
      return cljs.core.reset_BANG_.call(null, _BANG_creating_QMARK___10175, false)
    }
  });
  var _BANG_extent_at_start__10196 = cljs.core.atom.call(null, null);
  var vec__10195__10197 = (new cljs.core.Keyword("\ufdd0'domain")).call(null, scale_x);
  var xmin__10198 = cljs.core.nth.call(null, vec__10195__10197, 0, null);
  var xmax__10199 = cljs.core.nth.call(null, vec__10195__10197, 1, null);
  var min_extent__10200 = ix__10153.call(null, 10);
  var start_drag_BANG___10201 = function() {
    return cljs.core.reset_BANG_.call(null, _BANG_extent_at_start__10196, cljs.core.deref.call(null, _BANG_extent__10159))
  };
  var drag_fn_BANG___10212 = function(dragger, transform_x) {
    return goog.events.listen(dragger, goog.fx.Dragger.EventType.DRAG, function(e) {
      var vec__10202__10204 = cljs.core.deref.call(null, _BANG_extent_at_start__10196);
      var vec__10203__10205 = cljs.core.nth.call(null, vec__10202__10204, 0, null);
      var x1__10206 = cljs.core.nth.call(null, vec__10203__10205, 0, null);
      var x2__10207 = cljs.core.nth.call(null, vec__10203__10205, 1, null);
      var ys__10208 = cljs.core.nth.call(null, vec__10202__10204, 1, null);
      var w__10209 = x2__10207 - x1__10206;
      var dx__10210 = ix__10153.call(null, e.left) - ix__10153.call(null, 0);
      var xs__10211 = transform_x.call(null, dx__10210, x1__10206, x2__10207, w__10209);
      return cljs.core.reset_BANG_.call(null, _BANG_extent__10159, cljs.core.PersistentVector.fromArray([xs__10211, ys__10208], true))
    })
  };
  var dragger__10213 = new vcfvis.brush.SVGDrag(c2.dom.select.call(null, ".extent", $brush__10160));
  var left__10214 = new vcfvis.brush.SVGDrag(c2.dom.select.call(null, ".resize.w", $brush__10160));
  var right__10215 = new vcfvis.brush.SVGDrag(c2.dom.select.call(null, ".resize.e", $brush__10160));
  var G__10216__10217 = cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([dragger__10213, left__10214, right__10215], true));
  if(G__10216__10217) {
    var d__10218 = cljs.core.first.call(null, G__10216__10217);
    var G__10216__10219 = G__10216__10217;
    while(true) {
      goog.events.listen(d__10218, goog.fx.Dragger.EventType.START, start_drag_BANG___10201);
      var temp__3974__auto____10220 = cljs.core.next.call(null, G__10216__10219);
      if(temp__3974__auto____10220) {
        var G__10216__10221 = temp__3974__auto____10220;
        var G__10222 = cljs.core.first.call(null, G__10216__10221);
        var G__10223 = G__10216__10221;
        d__10218 = G__10222;
        G__10216__10219 = G__10223;
        continue
      }else {
      }
      break
    }
  }else {
  }
  drag_fn_BANG___10212.call(null, dragger__10213, function(dx, x1, x2, w) {
    if(dx + x1 < xmin__10198) {
      return cljs.core.PersistentVector.fromArray([xmin__10198, xmin__10198 + w], true)
    }else {
      if(dx + x2 > xmax__10199) {
        return cljs.core.PersistentVector.fromArray([xmax__10199 - w, xmax__10199], true)
      }else {
        if("\ufdd0'else") {
          return cljs.core.PersistentVector.fromArray([dx + x1, dx + x2], true)
        }else {
          return null
        }
      }
    }
  });
  drag_fn_BANG___10212.call(null, left__10214, function(dx, x1, x2, w) {
    if(dx + x1 < xmin__10198) {
      return cljs.core.PersistentVector.fromArray([xmin__10198, x2], true)
    }else {
      if(dx + x1 > x2) {
        return cljs.core.PersistentVector.fromArray([x2 - min_extent__10200, x2], true)
      }else {
        if("\ufdd0'else") {
          return cljs.core.PersistentVector.fromArray([dx + x1, x2], true)
        }else {
          return null
        }
      }
    }
  });
  drag_fn_BANG___10212.call(null, right__10215, function(dx, x1, x2, w) {
    if(dx + x2 > xmax__10199) {
      return cljs.core.PersistentVector.fromArray([x1, xmax__10199], true)
    }else {
      if(dx + x2 < x1) {
        return cljs.core.PersistentVector.fromArray([x1, x1 + min_extent__10200], true)
      }else {
        if("\ufdd0'else") {
          return cljs.core.PersistentVector.fromArray([x1, dx + x2], true)
        }else {
          return null
        }
      }
    }
  });
  return _BANG_extent__10159
};
goog.provide("vcfvis.histogram");
goog.require("cljs.core");
goog.require("c2.core");
goog.require("c2.maths");
goog.require("c2.scale");
goog.require("singult.core");
goog.require("c2.event");
goog.require("c2.core");
goog.require("vcfvis.data");
goog.require("vcfvis.ui");
goog.require("c2.dom");
goog.require("c2.svg");
goog.require("c2.maths");
goog.require("goog.string");
goog.require("vcfvis.brush");
goog.require("vcfvis.core");
vcfvis.histogram.height = vcfvis.ui.hist_height;
vcfvis.histogram.width = vcfvis.ui.hist_width;
vcfvis.histogram.margin = vcfvis.ui.hist_margin;
vcfvis.histogram.inter_hist_margin = vcfvis.ui.inter_hist_margin;
vcfvis.histogram.axis_height = vcfvis.ui.axis_height;
vcfvis.histogram.hist_g_STAR_ = function() {
  var hist_g_STAR___delegate = function(vcf, metric, p__117896) {
    var map__117935__117936 = p__117896;
    var map__117935__117937 = cljs.core.seq_QMARK_.call(null, map__117935__117936) ? cljs.core.apply.call(null, cljs.core.hash_map, map__117935__117936) : map__117935__117936;
    var bars_QMARK___117938 = cljs.core._lookup.call(null, map__117935__117937, "\ufdd0'bars?", true);
    var width__117939 = cljs.core._lookup.call(null, map__117935__117937, "\ufdd0'width", null);
    var height__117940 = cljs.core._lookup.call(null, map__117935__117937, "\ufdd0'height", null);
    var map__117941__117943 = metric;
    var map__117941__117944 = cljs.core.seq_QMARK_.call(null, map__117941__117943) ? cljs.core.apply.call(null, cljs.core.hash_map, map__117941__117943) : map__117941__117943;
    var metric_id__117945 = cljs.core._lookup.call(null, map__117941__117944, "\ufdd0'id", null);
    var scale_x__117946 = cljs.core._lookup.call(null, map__117941__117944, "\ufdd0'scale-x", null);
    var map__117942__117947 = cljs.core.get_in.call(null, vcf, cljs.core.PersistentVector.fromArray(["\ufdd0'cf", metric_id__117945], true));
    var map__117942__117948 = cljs.core.seq_QMARK_.call(null, map__117942__117947) ? cljs.core.apply.call(null, cljs.core.hash_map, map__117942__117947) : map__117942__117947;
    var bin_width__117949 = cljs.core._lookup.call(null, map__117942__117948, "\ufdd0'bin-width", null);
    var binned__117950 = cljs.core._lookup.call(null, map__117942__117948, "\ufdd0'binned", null);
    var dimension__117951 = cljs.core._lookup.call(null, map__117942__117948, "\ufdd0'dimension", null);
    var max_val__117952 = cljs.core.first.call(null, binned__117950.top(1))["value"];
    var no_data_QMARK___117953 = max_val__117952 === 0;
    var scale_y__117956 = function() {
      var G__117954__117955 = cljs.core.get_in.call(null, metric, cljs.core.PersistentVector.fromArray(["\ufdd0'y-scale", "\ufdd0'type"], true), "\ufdd0'linear");
      if(cljs.core._EQ_.call(null, "\ufdd0'log", G__117954__117955)) {
        return c2.scale.log.call(null, "\ufdd0'domain", cljs.core.PersistentVector.fromArray([1, max_val__117952], true), "\ufdd0'range", cljs.core.PersistentVector.fromArray([0, height__117940], true))
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'linear", G__117954__117955)) {
          return c2.scale.linear.call(null, "\ufdd0'domain", cljs.core.PersistentVector.fromArray([0, max_val__117952], true), "\ufdd0'range", cljs.core.PersistentVector.fromArray([0, height__117940], true))
        }else {
          if("\ufdd0'else") {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.core.get_in.call(null, metric, cljs.core.PersistentVector.fromArray(["\ufdd0'y-scale", "\ufdd0'type"], true), "\ufdd0'linear"))].join(""));
          }else {
            return null
          }
        }
      }
    }();
    var scale_x__117957 = cljs.core.assoc_in.call(null, scale_x__117946, cljs.core.PersistentVector.fromArray(["\ufdd0'range", 1], true), width__117939);
    var dx__117958 = scale_x__117957.call(null, bin_width__117949) - scale_x__117957.call(null, 0);
    return cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.PersistentVector.fromArray(["\ufdd0'text.message", cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'y"], {"\ufdd0'x":width__117939 / 2, "\ufdd0'y":height__117940 / 2}), no_data_QMARK___117953 ? "No available data; try clearing filters on other dimensions." : null], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.data-frame", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":[cljs.core.str(c2.svg.translate.call(null, 
    cljs.core.PersistentVector.fromArray([0, height__117940], true))), cljs.core.str(c2.svg.scale.call(null, cljs.core.PersistentVector.fromArray([1, -1], true)))].join("")}), cljs.core.PersistentVector.fromArray(["\ufdd0'g.distribution", no_data_QMARK___117953 ? null : cljs.core.truth_(bars_QMARK___117938) ? function() {
      var iter__2363__auto____117969 = function iter__117959(s__117960) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__117960__117965 = s__117960;
          while(true) {
            if(cljs.core.seq.call(null, s__117960__117965)) {
              var d__117966 = cljs.core.first.call(null, s__117960__117965);
              return cljs.core.cons.call(null, function() {
                var x__117967 = d__117966["key"];
                var count__117968 = d__117966["value"];
                return cljs.core.PersistentVector.fromArray(["\ufdd0'rect.bar", cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":scale_x__117957.call(null, x__117967), "\ufdd0'width":dx__117958, "\ufdd0'height":scale_y__117956.call(null, count__117968)})], true)
              }(), iter__117959.call(null, cljs.core.rest.call(null, s__117960__117965)))
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__2363__auto____117969.call(null, binned__117950.all())
    }() : cljs.core.PersistentVector.fromArray(["\ufdd0'path", cljs.core.ObjMap.fromObject(["\ufdd0'd"], {"\ufdd0'd":[cljs.core.str("M"), cljs.core.str(binned__117950.all().map(function(d) {
      var x__117970 = d["key"];
      var count__117971 = d["value"];
      var h__117972 = scale_y__117956.call(null, count__117971);
      return[cljs.core.str(scale_x__117957.call(null, x__117970)), cljs.core.str(","), cljs.core.str(h__117972)].join("")
    }).join("L"))].join("")})], true)], true)], true)], true)
  };
  var hist_g_STAR_ = function(vcf, metric, var_args) {
    var p__117896 = null;
    if(goog.isDef(var_args)) {
      p__117896 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return hist_g_STAR___delegate.call(this, vcf, metric, p__117896)
  };
  hist_g_STAR_.cljs$lang$maxFixedArity = 2;
  hist_g_STAR_.cljs$lang$applyTo = function(arglist__117973) {
    var vcf = cljs.core.first(arglist__117973);
    var metric = cljs.core.first(cljs.core.next(arglist__117973));
    var p__117896 = cljs.core.rest(cljs.core.next(arglist__117973));
    return hist_g_STAR___delegate(vcf, metric, p__117896)
  };
  hist_g_STAR_.cljs$lang$arity$variadic = hist_g_STAR___delegate;
  return hist_g_STAR_
}();
vcfvis.histogram.draw_mini_hist_for_metric_BANG_ = function draw_mini_hist_for_metric_BANG_(m) {
  var vcfs__117991 = cljs.core.deref.call(null, vcfvis.core._BANG_vcfs);
  var n__117992 = cljs.core.count.call(null, vcfs__117991);
  var mini_width__117993 = parseFloat(c2.dom.style.call(null, "#metrics", "\ufdd0'width"));
  var mini_height__117994 = 100;
  return singult.core.merge_BANG_.call(null, c2.dom.select.call(null, [cljs.core.str("#metric-"), cljs.core.str((new cljs.core.Keyword("\ufdd0'id")).call(null, m)), cljs.core.str(" .mini-hist")].join("")), cljs.core.PersistentVector.fromArray(["\ufdd0'div.mini-hist", cljs.core.PersistentVector.fromArray(["\ufdd0'svg", cljs.core.ObjMap.fromObject(["\ufdd0'width", "\ufdd0'height"], {"\ufdd0'width":vcfvis.histogram.width, "\ufdd0'height":n__117992 * mini_height__117994 + (n__117992 - 1) * vcfvis.histogram.inter_hist_margin}), 
  function() {
    var iter__2363__auto____118007 = function iter__117995(s__117996) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__117996__118002 = s__117996;
        while(true) {
          if(cljs.core.seq.call(null, s__117996__118002)) {
            var vec__118003__118004 = cljs.core.first.call(null, s__117996__118002);
            var vcf__118005 = cljs.core.nth.call(null, vec__118003__118004, 0, null);
            var idx__118006 = cljs.core.nth.call(null, vec__118003__118004, 1, null);
            return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([0, idx__118006 * (mini_height__117994 + vcfvis.histogram.inter_hist_margin)], true))}), vcfvis.histogram.hist_g_STAR_.call(null, vcf__118005, m, "\ufdd0'height", mini_height__117994, "\ufdd0'width", mini_width__117993, "\ufdd0'bars?", true)], true), iter__117995.call(null, 
            cljs.core.rest.call(null, s__117996__118002)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____118007.call(null, cljs.core.map.call(null, cljs.core.vector, vcfs__117991, cljs.core.range.call(null)))
  }()], true)], true))
};
vcfvis.histogram.draw_histogram_BANG_ = function draw_histogram_BANG_(vcfs, metric) {
  var map__118065__118066 = metric;
  var map__118065__118067 = cljs.core.seq_QMARK_.call(null, map__118065__118066) ? cljs.core.apply.call(null, cljs.core.hash_map, map__118065__118066) : map__118065__118066;
  var x__118068 = cljs.core._lookup.call(null, map__118065__118067, "\ufdd0'scale-x", null);
  var tick_range__118069 = -cljs.core.apply.call(null, cljs.core._, (new cljs.core.Keyword("\ufdd0'domain")).call(null, x__118068)) / cljs.core.count.call(null, (new cljs.core.Keyword("\ufdd0'ticks")).call(null, x__118068));
  var n__118070 = cljs.core.count.call(null, vcfs);
  var hist_height__118071 = (vcfvis.histogram.height - n__118070 * (vcfvis.histogram.inter_hist_margin - 1)) / n__118070;
  singult.core.merge_BANG_.call(null, c2.dom.select.call(null, "#main-hist"), cljs.core.PersistentVector.fromArray(["\ufdd0'div#main-hist", cljs.core.PersistentVector.fromArray(["\ufdd0'div#histograms", cljs.core.PersistentVector.fromArray(["\ufdd0'div.labels", function() {
    var iter__2363__auto____118084 = function iter__118072(s__118073) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__118073__118079 = s__118073;
        while(true) {
          if(cljs.core.seq.call(null, s__118073__118079)) {
            var vec__118080__118081 = cljs.core.first.call(null, s__118073__118079);
            var vcf__118082 = cljs.core.nth.call(null, vec__118080__118081, 0, null);
            var idx__118083 = cljs.core.nth.call(null, vec__118080__118081, 1, null);
            return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'span.label", cljs.core.ObjMap.fromObject(["\ufdd0'style"], {"\ufdd0'style":cljs.core.ObjMap.fromObject(["\ufdd0'top"], {"\ufdd0'top":[cljs.core.str(idx__118083 * (hist_height__118071 + vcfvis.histogram.inter_hist_margin)), cljs.core.str("px")].join("")})}), vcf__118082.call(null, "\ufdd0'file-url")], true), iter__118072.call(null, cljs.core.rest.call(null, s__118073__118079)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____118084.call(null, cljs.core.map.call(null, cljs.core.vector, vcfs, cljs.core.range.call(null)))
  }()], true), cljs.core.PersistentVector.fromArray(["\ufdd0'svg.histogram", cljs.core.ObjMap.fromObject(["\ufdd0'width", "\ufdd0'height"], {"\ufdd0'width":vcfvis.histogram.width + 2 * vcfvis.histogram.margin, "\ufdd0'height":vcfvis.histogram.height + (n__118070 - 1) * vcfvis.histogram.inter_hist_margin}), cljs.core.PersistentVector.fromArray(["\ufdd0'g.hist-container", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([vcfvis.histogram.margin, 
  0], true))}), function() {
    var iter__2363__auto____118097 = function iter__118085(s__118086) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__118086__118092 = s__118086;
        while(true) {
          if(cljs.core.seq.call(null, s__118086__118092)) {
            var vec__118093__118094 = cljs.core.first.call(null, s__118086__118092);
            var vcf__118095 = cljs.core.nth.call(null, vec__118093__118094, 0, null);
            var idx__118096 = cljs.core.nth.call(null, vec__118093__118094, 1, null);
            return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([0, idx__118096 * (hist_height__118071 + vcfvis.histogram.inter_hist_margin)], true))}), vcfvis.histogram.hist_g_STAR_.call(null, vcf__118095, metric, "\ufdd0'height", hist_height__118071, "\ufdd0'width", vcfvis.histogram.width)], true), iter__118085.call(null, cljs.core.rest.call(null, 
            s__118086__118092)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____118097.call(null, cljs.core.map.call(null, cljs.core.vector, vcfs, cljs.core.range.call(null)))
  }()], true)], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'div#hist-axis", cljs.core.PersistentVector.fromArray(["\ufdd0'div.axis.abscissa", cljs.core.PersistentVector.fromArray(["\ufdd0'svg", cljs.core.ObjMap.fromObject(["\ufdd0'width", "\ufdd0'height"], {"\ufdd0'width":vcfvis.histogram.width + 2 * vcfvis.histogram.margin, "\ufdd0'height":vcfvis.histogram.axis_height}), cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, 
  cljs.core.PersistentVector.fromArray([vcfvis.histogram.margin, 2], true))}), c2.svg.axis.call(null, x__118068, (new cljs.core.Keyword("\ufdd0'ticks")).call(null, x__118068), "\ufdd0'orientation", "\ufdd0'bottom", "\ufdd0'formatter", cljs.core.partial.call(null, goog.string.format, tick_range__118069 < 0.075 ? "%.2f" : "%.1f"))], true)], true)], true)], true)], true));
  var _BANG_b__118098 = vcfvis.brush.init_BANG_.call(null, "#histograms svg .hist-container", x__118068, c2.scale.linear.call(null, "\ufdd0'range", cljs.core.PersistentVector.fromArray([0, vcfvis.histogram.height], true)));
  var temp__3974__auto____118099 = cljs.core.deref.call(null, metric.call(null, "\ufdd0'!filter-extent"));
  if(cljs.core.truth_(temp__3974__auto____118099)) {
    var initial_extent__118100 = temp__3974__auto____118099;
    var vec__118101__118103 = metric.call(null, "\ufdd0'range");
    var r_min__118104 = cljs.core.nth.call(null, vec__118101__118103, 0, null);
    var r_max__118105 = cljs.core.nth.call(null, vec__118101__118103, 1, null);
    var vec__118102__118106 = initial_extent__118100;
    var start__118107 = cljs.core.nth.call(null, vec__118102__118106, 0, null);
    var end__118108 = cljs.core.nth.call(null, vec__118102__118106, 1, null);
    cljs.core.reset_BANG_.call(null, _BANG_b__118098, cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([start__118107 > r_min__118104 ? start__118107 : r_min__118104, end__118108 < r_max__118105 ? end__118108 : r_max__118105], true), cljs.core.PersistentVector.fromArray([0, 0], true)], true))
  }else {
  }
  return cljs.core.add_watch.call(null, _BANG_b__118098, "\ufdd0'onbrush", function(_118110, _118111, _, p__118109) {
    var vec__118112__118113 = p__118109;
    var xs__118114 = cljs.core.nth.call(null, vec__118112__118113, 0, null);
    var ___118115 = cljs.core.nth.call(null, vec__118112__118113, 1, null);
    var G__118116__118117 = cljs.core.seq.call(null, cljs.core.deref.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_));
    if(G__118116__118117) {
      var s__9004__auto____118118 = cljs.core.first.call(null, G__118116__118117);
      var G__118116__118119 = G__118116__118117;
      while(true) {
        s__9004__auto____118118.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'metric-brushed", "\ufdd0'extent"], {"\ufdd0'metric-brushed":metric, "\ufdd0'extent":xs__118114}));
        var temp__3974__auto____118120 = cljs.core.next.call(null, G__118116__118119);
        if(temp__3974__auto____118120) {
          var G__118116__118121 = temp__3974__auto____118120;
          var G__118122 = cljs.core.first.call(null, G__118116__118121);
          var G__118123 = G__118116__118121;
          s__9004__auto____118118 = G__118122;
          G__118116__118119 = G__118123;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  })
};
vcfvis.histogram.clear_histogram_BANG_ = function clear_histogram_BANG_() {
  singult.core.merge_BANG_.call(null, c2.dom.select.call(null, "#main-hist"), cljs.core.PersistentVector.fromArray(["\ufdd0'div#main-hist", cljs.core.PersistentVector.fromArray(["\ufdd0'div#histograms"], true), cljs.core.PersistentVector.fromArray(["\ufdd0'div#hist-axis"], true)], true));
  var G__118130__118131 = cljs.core.seq.call(null, cljs.core.deref.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_));
  if(G__118130__118131) {
    var s__9004__auto____118132 = cljs.core.first.call(null, G__118130__118131);
    var G__118130__118133 = G__118130__118131;
    while(true) {
      s__9004__auto____118132.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'count-updated"], {"\ufdd0'count-updated":null}));
      var temp__3974__auto____118134 = cljs.core.next.call(null, G__118130__118133);
      if(temp__3974__auto____118134) {
        var G__118130__118135 = temp__3974__auto____118134;
        var G__118136 = cljs.core.first.call(null, G__118130__118135);
        var G__118137 = G__118130__118135;
        s__9004__auto____118132 = G__118136;
        G__118130__118133 = G__118137;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
vcfvis.histogram.draw_mini_hists_BANG_ = function draw_mini_hists_BANG_() {
  var G__118144__118145 = cljs.core.seq.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_visible_metrics));
  if(G__118144__118145) {
    var m__118146 = cljs.core.first.call(null, G__118144__118145);
    var G__118144__118147 = G__118144__118145;
    while(true) {
      vcfvis.histogram.draw_mini_hist_for_metric_BANG_.call(null, m__118146);
      var temp__3974__auto____118148 = cljs.core.next.call(null, G__118144__118147);
      if(temp__3974__auto____118148) {
        var G__118144__118149 = temp__3974__auto____118148;
        var G__118150 = cljs.core.first.call(null, G__118144__118149);
        var G__118151 = G__118144__118149;
        m__118146 = G__118150;
        G__118144__118147 = G__118151;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
var co__6169__auto____118155 = function() {
  var co__6163__auto____118154 = new reflex.core.ComputedObservable(null, true, function() {
    var vcfs__118152 = cljs.core.deref.call(null, vcfvis.core._BANG_vcfs);
    var metric__118153 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
    vcfvis.histogram.clear_histogram_BANG_.call(null);
    if(cljs.core.seq.call(null, vcfs__118152)) {
      vcfvis.histogram.draw_histogram_BANG_.call(null, vcfs__118152, metric__118153);
      return vcfvis.histogram.draw_mini_hists_BANG_.call(null)
    }else {
      return null
    }
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6163__auto____118154);
  return co__6163__auto____118154
}();
cljs.core.add_watch.call(null, co__6169__auto____118155, "\ufdd0'reflex-constraint", function() {
  var vcfs__118156 = cljs.core.deref.call(null, vcfvis.core._BANG_vcfs);
  var metric__118157 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
  vcfvis.histogram.clear_histogram_BANG_.call(null);
  if(cljs.core.seq.call(null, vcfs__118156)) {
    vcfvis.histogram.draw_histogram_BANG_.call(null, vcfs__118156, metric__118157);
    return vcfvis.histogram.draw_mini_hists_BANG_.call(null)
  }else {
    return null
  }
});
co__6169__auto____118155;
goog.provide("vcfvis.controls");
goog.require("cljs.core");
goog.require("singult.core");
goog.require("c2.util");
goog.require("chosen.core");
goog.require("c2.core");
goog.require("c2.event");
goog.require("c2.dom");
goog.require("vcfvis.data");
goog.require("vcfvis.histogram");
goog.require("vcfvis.core");
goog.require("c2.util");
goog.require("c2.core");
goog.require("singult.core");
goog.require("chosen.core");
vcfvis.controls.file_selector = function() {
  var $selector__9792 = c2.dom.append_BANG_.call(null, "#file-selector", cljs.core.PersistentVector.fromArray(["\ufdd0'select", cljs.core.ObjMap.fromObject(["\ufdd0'multiple", "\ufdd0'data-placeholder"], {"\ufdd0'multiple":"multiple", "\ufdd0'data-placeholder":"Select VCF files"})], true));
  var _BANG_c__9793 = chosen.core.ichooseu_BANG_.call(null, $selector__9792, "\ufdd0'search-contains", true);
  var co__6219__auto____9802 = function() {
    var co__6213__auto____9801 = new reflex.core.ComputedObservable(null, true, function() {
      return chosen.core.options.call(null, _BANG_c__9793, cljs.core.map.call(null, function(p__9794) {
        var map__9795__9796 = p__9794;
        var map__9795__9797 = cljs.core.seq_QMARK_.call(null, map__9795__9796) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9795__9796) : map__9795__9796;
        var id__9798 = cljs.core._lookup.call(null, map__9795__9797, "\ufdd0'id", null);
        var folder__9799 = cljs.core._lookup.call(null, map__9795__9797, "\ufdd0'folder", null);
        var filename__9800 = cljs.core._lookup.call(null, map__9795__9797, "\ufdd0'filename", null);
        return cljs.core.ObjMap.fromObject(["\ufdd0'text", "\ufdd0'value", "\ufdd0'group"], {"\ufdd0'text":filename__9800, "\ufdd0'value":id__9798, "\ufdd0'group":folder__9799})
      }, cljs.core.deref.call(null, vcfvis.core._BANG_available_files)))
    }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
    cljs.core.deref.call(null, co__6213__auto____9801);
    return co__6213__auto____9801
  }();
  cljs.core.add_watch.call(null, co__6219__auto____9802, "\ufdd0'reflex-constraint", function() {
    return chosen.core.options.call(null, _BANG_c__9793, cljs.core.map.call(null, function(p__9803) {
      var map__9804__9805 = p__9803;
      var map__9804__9806 = cljs.core.seq_QMARK_.call(null, map__9804__9805) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9804__9805) : map__9804__9805;
      var id__9807 = cljs.core._lookup.call(null, map__9804__9806, "\ufdd0'id", null);
      var folder__9808 = cljs.core._lookup.call(null, map__9804__9806, "\ufdd0'folder", null);
      var filename__9809 = cljs.core._lookup.call(null, map__9804__9806, "\ufdd0'filename", null);
      return cljs.core.ObjMap.fromObject(["\ufdd0'text", "\ufdd0'value", "\ufdd0'group"], {"\ufdd0'text":filename__9809, "\ufdd0'value":id__9807, "\ufdd0'group":folder__9808})
    }, cljs.core.deref.call(null, vcfvis.core._BANG_available_files)))
  });
  co__6219__auto____9802;
  return _BANG_c__9793
}();
var co__7961__auto____9830 = function() {
  var co__6213__auto____9829 = new reflex.core.ComputedObservable(null, true, function() {
    var shared__9810 = cljs.core.set.call(null, cljs.core.map.call(null, "\ufdd0'id", cljs.core.deref.call(null, vcfvis.core._BANG_shared_metrics)));
    var selected_metric__9811 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
    var metrics__9819 = function() {
      var iter__2363__auto____9818 = function iter__9812(s__9813) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__9813__9816 = s__9813;
          while(true) {
            if(cljs.core.seq.call(null, s__9813__9816)) {
              var m__9817 = cljs.core.first.call(null, s__9813__9816);
              return cljs.core.cons.call(null, cljs.core.assoc.call(null, m__9817, "\ufdd0'selected?", cljs.core._EQ_.call(null, m__9817, selected_metric__9811), "\ufdd0'visible?", vcfvis.core.visible_metric_QMARK_.call(null, m__9817), "\ufdd0'shared?", cljs.core.contains_QMARK_.call(null, shared__9810, m__9817.call(null, "\ufdd0'id"))), iter__9812.call(null, cljs.core.rest.call(null, s__9813__9816)))
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__2363__auto____9818.call(null, cljs.core.vals.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_context).call(null, "\ufdd0'metrics")))
    }();
    return cljs.core.PersistentVector.fromArray(["\ufdd0'div#metrics", c2.core.unify.call(null, metrics__9819, function(p__9820) {
      var map__9821__9822 = p__9820;
      var map__9821__9823 = cljs.core.seq_QMARK_.call(null, map__9821__9822) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9821__9822) : map__9821__9822;
      var shared_QMARK___9824 = cljs.core._lookup.call(null, map__9821__9823, "\ufdd0'shared?", null);
      var visible_QMARK___9825 = cljs.core._lookup.call(null, map__9821__9823, "\ufdd0'visible?", null);
      var selected_QMARK___9826 = cljs.core._lookup.call(null, map__9821__9823, "\ufdd0'selected?", null);
      var desc__9827 = cljs.core._lookup.call(null, map__9821__9823, "\ufdd0'desc", null);
      var id__9828 = cljs.core._lookup.call(null, map__9821__9823, "\ufdd0'id", null);
      return cljs.core.PersistentVector.fromArray(["\ufdd0'div.metric", cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":[cljs.core.str("metric-"), cljs.core.str(id__9828)].join(""), "\ufdd0'class":[cljs.core.str(cljs.core.truth_(selected_QMARK___9826) ? "selected" : null), cljs.core.str(" "), cljs.core.str(cljs.core.truth_(visible_QMARK___9825) ? "expanded" : null), cljs.core.str(" "), cljs.core.str(cljs.core.truth_(shared_QMARK___9824) ? null : "disabled")].join("")}), cljs.core.PersistentVector.fromArray(["\ufdd0'h2", 
      id__9828], true), cljs.core.PersistentVector.fromArray(["\ufdd0'button.expand-btn", "V"], true), cljs.core.PersistentVector.fromArray(["\ufdd0'span.desc", desc__9827], true), cljs.core.PersistentVector.fromArray(["\ufdd0'div.mini-hist", singult.core.ignore.call(null)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'div.sort-handle"], true)], true)
    }, "\ufdd0'key-fn", function(p1__9791_SHARP_) {
      return(new cljs.core.Keyword("\ufdd0'id")).call(null, p1__9791_SHARP_)
    })], true)
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6213__auto____9829);
  return co__6213__auto____9829
}();
var $el__7962__auto____9831 = c2.dom.__GT_dom.call(null, "#metrics");
singult.core.merge_BANG_.call(null, $el__7962__auto____9831, cljs.core.deref.call(null, co__7961__auto____9830));
cljs.core.add_watch.call(null, co__7961__auto____9830, "\ufdd0'update-dom", function() {
  return singult.core.merge_BANG_.call(null, $el__7962__auto____9831, cljs.core.deref.call(null, co__7961__auto____9830))
});
co__7961__auto____9830;
jQuery("#metrics").sortable({"handle":".sort-handle"});
c2.event.on.call(null, "#metrics", "\ufdd0'click", function(d, _, e) {
  if(cljs.core.truth_(c2.dom.matches_selector_QMARK_.call(null, e.target, ".expand-btn"))) {
    return null
  }else {
    return vcfvis.core.select_metric_BANG_.call(null, cljs.core.dissoc.call(null, d, "\ufdd0'selected?", "\ufdd0'shared?", "\ufdd0'visible?"))
  }
});
c2.event.on.call(null, "#metrics", ".expand-btn", "\ufdd0'click", function(d) {
  var m__9832 = cljs.core.dissoc.call(null, d, "\ufdd0'selected?", "\ufdd0'shared?", "\ufdd0'visible?");
  if(cljs.core.truth_(vcfvis.core.visible_metric_QMARK_.call(null, m__9832))) {
  }else {
    vcfvis.histogram.draw_mini_hist_for_metric_BANG_.call(null, m__9832)
  }
  return vcfvis.core.toggle_visible_metric_BANG_.call(null, m__9832)
});
cljs.core.swap_BANG_.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_, cljs.core.conj, function(m__8965__auto__) {
  try {
    if(function() {
      var G__9838__9839 = m__8965__auto__;
      if(G__9838__9839) {
        if(function() {
          var or__3824__auto____9840 = G__9838__9839.cljs$lang$protocol_mask$partition0$ & 256;
          if(or__3824__auto____9840) {
            return or__3824__auto____9840
          }else {
            return G__9838__9839.cljs$core$ILookup$
          }
        }()) {
          return true
        }else {
          if(!G__9838__9839.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__9838__9839)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__9838__9839)
      }
    }()) {
      var G__9833__9842 = function() {
        var val__6603__auto____9841 = cljs.core._lookup.call(null, m__8965__auto__, "\ufdd0'filter-updated", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6603__auto____9841, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6603__auto____9841
        }
      }();
      vcfvis.histogram.draw_mini_hists_BANG_.call(null);
      var G__9843__9844 = cljs.core.seq.call(null, cljs.core.deref.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_));
      if(G__9843__9844) {
        var s__8959__auto____9845 = cljs.core.first.call(null, G__9843__9844);
        var G__9843__9846 = G__9843__9844;
        while(true) {
          s__8959__auto____9845.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'count-updated"], {"\ufdd0'count-updated":cljs.core.get_in.call(null, cljs.core.first.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)), cljs.core.PersistentVector.fromArray(["\ufdd0'cf", "\ufdd0'all"], true)).value()}));
          var temp__3974__auto____9847 = cljs.core.next.call(null, G__9843__9846);
          if(temp__3974__auto____9847) {
            var G__9843__9848 = temp__3974__auto____9847;
            var G__9849 = cljs.core.first.call(null, G__9843__9848);
            var G__9850 = G__9843__9848;
            s__8959__auto____9845 = G__9849;
            G__9843__9846 = G__9850;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    }else {
      if("\ufdd0'else") {
        throw 0;
      }else {
        return null
      }
    }
  }catch(e__7036__auto__) {
    if(e__7036__auto__ === 0) {
      var G__9834__9837 = m__8965__auto__;
      return null
    }else {
      throw e__7036__auto__;
    }
  }
});
cljs.core.swap_BANG_.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_, cljs.core.conj, function(m__8965__auto__) {
  try {
    if(function() {
      var G__9855__9856 = m__8965__auto__;
      if(G__9855__9856) {
        if(function() {
          var or__3824__auto____9857 = G__9855__9856.cljs$lang$protocol_mask$partition0$ & 256;
          if(or__3824__auto____9857) {
            return or__3824__auto____9857
          }else {
            return G__9855__9856.cljs$core$ILookup$
          }
        }()) {
          return true
        }else {
          if(!G__9855__9856.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__9855__9856)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__9855__9856)
      }
    }()) {
      var x__9859 = function() {
        var val__6603__auto____9858 = cljs.core._lookup.call(null, m__8965__auto__, "\ufdd0'count-updated", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6603__auto____9858, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6603__auto____9858
        }
      }();
      c2.dom.text.call(null, "#count", x__9859);
      return c2.dom.style.call(null, "#count", "\ufdd0'visibility", x__9859 == null ? "hidden" : "visible")
    }else {
      if("\ufdd0'else") {
        throw 0;
      }else {
        return null
      }
    }
  }catch(e__7036__auto__) {
    if(e__7036__auto__ === 0) {
      var G__9851__9854 = m__8965__auto__;
      return null
    }else {
      throw e__7036__auto__;
    }
  }
});
var $btn__9860 = c2.dom.select.call(null, "#filter-btn");
var co__7961__auto____9864 = function() {
  var co__6213__auto____9863 = new reflex.core.ComputedObservable(null, true, function() {
    var G__9861__9862 = cljs.core._lookup.call(null, cljs.core.deref.call(null, vcfvis.data._BANG_analysis_status), cljs.core._lookup.call(null, cljs.core.first.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)), "\ufdd0'file-url", null), null);
    if(cljs.core._EQ_.call(null, null, G__9861__9862)) {
      return cljs.core.PersistentVector.fromArray(["\ufdd0'button#filter-btn.btn", cljs.core.ObjMap.fromObject(["\ufdd0'properties"], {"\ufdd0'properties":cljs.core.ObjMap.fromObject(["\ufdd0'disabled"], {"\ufdd0'disabled":false})}), "Export subset"], true)
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0'running", G__9861__9862)) {
        return cljs.core.PersistentVector.fromArray(["\ufdd0'button#filter-btn.btn", cljs.core.ObjMap.fromObject(["\ufdd0'properties"], {"\ufdd0'properties":cljs.core.ObjMap.fromObject(["\ufdd0'disabled"], {"\ufdd0'disabled":true})}), "Running..."], true)
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'completed", G__9861__9862)) {
          return cljs.core.PersistentVector.fromArray(["\ufdd0'button#filter-btn.btn", cljs.core.ObjMap.fromObject(["\ufdd0'properties"], {"\ufdd0'properties":cljs.core.ObjMap.fromObject(["\ufdd0'disabled"], {"\ufdd0'disabled":true})}), "Completed"], true)
        }else {
          if("\ufdd0'else") {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.core._lookup.call(null, cljs.core.deref.call(null, vcfvis.data._BANG_analysis_status), cljs.core._lookup.call(null, cljs.core.first.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)), "\ufdd0'file-url", null), null))].join(""));
          }else {
            return null
          }
        }
      }
    }
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6213__auto____9863);
  return co__6213__auto____9863
}();
var $el__7962__auto____9865 = c2.dom.__GT_dom.call(null, $btn__9860);
singult.core.merge_BANG_.call(null, $el__7962__auto____9865, cljs.core.deref.call(null, co__7961__auto____9864));
cljs.core.add_watch.call(null, co__7961__auto____9864, "\ufdd0'update-dom", function() {
  return singult.core.merge_BANG_.call(null, $el__7962__auto____9865, cljs.core.deref.call(null, co__7961__auto____9864))
});
co__7961__auto____9864;
c2.event.on_raw.call(null, $btn__9860, "\ufdd0'click", function(_) {
  return vcfvis.data.filter_analysis.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'file-url", "\ufdd0'metrics"], {"\ufdd0'file-url":cljs.core._lookup.call(null, cljs.core.first.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)), "\ufdd0'file-url", null), "\ufdd0'metrics":cljs.core.deref.call(null, vcfvis.core._BANG_filters)}))
});
goog.provide("vcfvis.main");
goog.require("cljs.core");
goog.require("c2.util");
goog.require("vcfvis.controls");
goog.require("vcfvis.ui");
goog.require("vcfvis.data");
goog.require("vcfvis.core");
goog.require("domina");
goog.require("c2.util");
cljs.core.add_watch.call(null, vcfvis.controls.file_selector, "\ufdd0'load-metrics", function(files) {
  var new_files__47180 = vcfvis.core.check_new_vcfs_BANG_.call(null, files);
  if(cljs.core.seq.call(null, new_files__47180)) {
    jQuery("#waiting-modal").modal("show");
    var G__47181__47182 = cljs.core.seq.call(null, new_files__47180);
    if(G__47181__47182) {
      var f__47183 = cljs.core.first.call(null, G__47181__47182);
      var G__47181__47184 = G__47181__47182;
      while(true) {
        vcfvis.data.load_vcf.call(null, f__47183, function(f__47183, G__47181__47184) {
          return function(vcf) {
            jQuery("#waiting-modal").modal("hide");
            return cljs.core.swap_BANG_.call(null, vcfvis.core._BANG_vcfs, cljs.core.conj, vcf)
          }
        }(f__47183, G__47181__47184));
        var temp__3974__auto____47185 = cljs.core.next.call(null, G__47181__47184);
        if(temp__3974__auto____47185) {
          var G__47181__47186 = temp__3974__auto____47185;
          var G__47187 = cljs.core.first.call(null, G__47181__47186);
          var G__47188 = G__47181__47186;
          f__47183 = G__47187;
          G__47181__47184 = G__47188;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  }else {
    return null
  }
});
jQuery("#waiting-modal").modal(c2.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'backdrop", "\ufdd0'keyboard", "\ufdd0'show"], {"\ufdd0'backdrop":"static", "\ufdd0'keyboard":false, "\ufdd0'show":true})));
vcfvis.data.load_context.call(null, function(context) {
  vcfvis.ui.update_user_BANG_.call(null, context);
  jQuery("#waiting-modal").modal("hide");
  return cljs.core.reset_BANG_.call(null, vcfvis.core._BANG_context, context)
});
