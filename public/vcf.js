var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__11863 = x == null ? null : x;
  if(p[goog.typeOf(x__11863)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__11864__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__11864 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11864__delegate.call(this, array, i, idxs)
    };
    G__11864.cljs$lang$maxFixedArity = 2;
    G__11864.cljs$lang$applyTo = function(arglist__11865) {
      var array = cljs.core.first(arglist__11865);
      var i = cljs.core.first(cljs.core.next(arglist__11865));
      var idxs = cljs.core.rest(cljs.core.next(arglist__11865));
      return G__11864__delegate(array, i, idxs)
    };
    G__11864.cljs$lang$arity$variadic = G__11864__delegate;
    return G__11864
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____11950 = this$;
      if(and__3822__auto____11950) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____11950
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2264__auto____11951 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11952 = cljs.core._invoke[goog.typeOf(x__2264__auto____11951)];
        if(or__3824__auto____11952) {
          return or__3824__auto____11952
        }else {
          var or__3824__auto____11953 = cljs.core._invoke["_"];
          if(or__3824__auto____11953) {
            return or__3824__auto____11953
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____11954 = this$;
      if(and__3822__auto____11954) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____11954
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2264__auto____11955 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11956 = cljs.core._invoke[goog.typeOf(x__2264__auto____11955)];
        if(or__3824__auto____11956) {
          return or__3824__auto____11956
        }else {
          var or__3824__auto____11957 = cljs.core._invoke["_"];
          if(or__3824__auto____11957) {
            return or__3824__auto____11957
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____11958 = this$;
      if(and__3822__auto____11958) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____11958
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2264__auto____11959 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11960 = cljs.core._invoke[goog.typeOf(x__2264__auto____11959)];
        if(or__3824__auto____11960) {
          return or__3824__auto____11960
        }else {
          var or__3824__auto____11961 = cljs.core._invoke["_"];
          if(or__3824__auto____11961) {
            return or__3824__auto____11961
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____11962 = this$;
      if(and__3822__auto____11962) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____11962
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2264__auto____11963 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11964 = cljs.core._invoke[goog.typeOf(x__2264__auto____11963)];
        if(or__3824__auto____11964) {
          return or__3824__auto____11964
        }else {
          var or__3824__auto____11965 = cljs.core._invoke["_"];
          if(or__3824__auto____11965) {
            return or__3824__auto____11965
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____11966 = this$;
      if(and__3822__auto____11966) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____11966
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2264__auto____11967 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11968 = cljs.core._invoke[goog.typeOf(x__2264__auto____11967)];
        if(or__3824__auto____11968) {
          return or__3824__auto____11968
        }else {
          var or__3824__auto____11969 = cljs.core._invoke["_"];
          if(or__3824__auto____11969) {
            return or__3824__auto____11969
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____11970 = this$;
      if(and__3822__auto____11970) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____11970
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2264__auto____11971 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11972 = cljs.core._invoke[goog.typeOf(x__2264__auto____11971)];
        if(or__3824__auto____11972) {
          return or__3824__auto____11972
        }else {
          var or__3824__auto____11973 = cljs.core._invoke["_"];
          if(or__3824__auto____11973) {
            return or__3824__auto____11973
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____11974 = this$;
      if(and__3822__auto____11974) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____11974
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2264__auto____11975 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11976 = cljs.core._invoke[goog.typeOf(x__2264__auto____11975)];
        if(or__3824__auto____11976) {
          return or__3824__auto____11976
        }else {
          var or__3824__auto____11977 = cljs.core._invoke["_"];
          if(or__3824__auto____11977) {
            return or__3824__auto____11977
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____11978 = this$;
      if(and__3822__auto____11978) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____11978
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2264__auto____11979 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11980 = cljs.core._invoke[goog.typeOf(x__2264__auto____11979)];
        if(or__3824__auto____11980) {
          return or__3824__auto____11980
        }else {
          var or__3824__auto____11981 = cljs.core._invoke["_"];
          if(or__3824__auto____11981) {
            return or__3824__auto____11981
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____11982 = this$;
      if(and__3822__auto____11982) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____11982
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2264__auto____11983 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11984 = cljs.core._invoke[goog.typeOf(x__2264__auto____11983)];
        if(or__3824__auto____11984) {
          return or__3824__auto____11984
        }else {
          var or__3824__auto____11985 = cljs.core._invoke["_"];
          if(or__3824__auto____11985) {
            return or__3824__auto____11985
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____11986 = this$;
      if(and__3822__auto____11986) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____11986
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2264__auto____11987 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11988 = cljs.core._invoke[goog.typeOf(x__2264__auto____11987)];
        if(or__3824__auto____11988) {
          return or__3824__auto____11988
        }else {
          var or__3824__auto____11989 = cljs.core._invoke["_"];
          if(or__3824__auto____11989) {
            return or__3824__auto____11989
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____11990 = this$;
      if(and__3822__auto____11990) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____11990
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2264__auto____11991 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11992 = cljs.core._invoke[goog.typeOf(x__2264__auto____11991)];
        if(or__3824__auto____11992) {
          return or__3824__auto____11992
        }else {
          var or__3824__auto____11993 = cljs.core._invoke["_"];
          if(or__3824__auto____11993) {
            return or__3824__auto____11993
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____11994 = this$;
      if(and__3822__auto____11994) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____11994
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2264__auto____11995 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11996 = cljs.core._invoke[goog.typeOf(x__2264__auto____11995)];
        if(or__3824__auto____11996) {
          return or__3824__auto____11996
        }else {
          var or__3824__auto____11997 = cljs.core._invoke["_"];
          if(or__3824__auto____11997) {
            return or__3824__auto____11997
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____11998 = this$;
      if(and__3822__auto____11998) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____11998
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2264__auto____11999 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12000 = cljs.core._invoke[goog.typeOf(x__2264__auto____11999)];
        if(or__3824__auto____12000) {
          return or__3824__auto____12000
        }else {
          var or__3824__auto____12001 = cljs.core._invoke["_"];
          if(or__3824__auto____12001) {
            return or__3824__auto____12001
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____12002 = this$;
      if(and__3822__auto____12002) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____12002
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2264__auto____12003 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12004 = cljs.core._invoke[goog.typeOf(x__2264__auto____12003)];
        if(or__3824__auto____12004) {
          return or__3824__auto____12004
        }else {
          var or__3824__auto____12005 = cljs.core._invoke["_"];
          if(or__3824__auto____12005) {
            return or__3824__auto____12005
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____12006 = this$;
      if(and__3822__auto____12006) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____12006
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2264__auto____12007 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12008 = cljs.core._invoke[goog.typeOf(x__2264__auto____12007)];
        if(or__3824__auto____12008) {
          return or__3824__auto____12008
        }else {
          var or__3824__auto____12009 = cljs.core._invoke["_"];
          if(or__3824__auto____12009) {
            return or__3824__auto____12009
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____12010 = this$;
      if(and__3822__auto____12010) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____12010
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2264__auto____12011 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12012 = cljs.core._invoke[goog.typeOf(x__2264__auto____12011)];
        if(or__3824__auto____12012) {
          return or__3824__auto____12012
        }else {
          var or__3824__auto____12013 = cljs.core._invoke["_"];
          if(or__3824__auto____12013) {
            return or__3824__auto____12013
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____12014 = this$;
      if(and__3822__auto____12014) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____12014
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2264__auto____12015 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12016 = cljs.core._invoke[goog.typeOf(x__2264__auto____12015)];
        if(or__3824__auto____12016) {
          return or__3824__auto____12016
        }else {
          var or__3824__auto____12017 = cljs.core._invoke["_"];
          if(or__3824__auto____12017) {
            return or__3824__auto____12017
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____12018 = this$;
      if(and__3822__auto____12018) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____12018
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2264__auto____12019 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12020 = cljs.core._invoke[goog.typeOf(x__2264__auto____12019)];
        if(or__3824__auto____12020) {
          return or__3824__auto____12020
        }else {
          var or__3824__auto____12021 = cljs.core._invoke["_"];
          if(or__3824__auto____12021) {
            return or__3824__auto____12021
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____12022 = this$;
      if(and__3822__auto____12022) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____12022
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2264__auto____12023 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12024 = cljs.core._invoke[goog.typeOf(x__2264__auto____12023)];
        if(or__3824__auto____12024) {
          return or__3824__auto____12024
        }else {
          var or__3824__auto____12025 = cljs.core._invoke["_"];
          if(or__3824__auto____12025) {
            return or__3824__auto____12025
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____12026 = this$;
      if(and__3822__auto____12026) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____12026
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2264__auto____12027 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12028 = cljs.core._invoke[goog.typeOf(x__2264__auto____12027)];
        if(or__3824__auto____12028) {
          return or__3824__auto____12028
        }else {
          var or__3824__auto____12029 = cljs.core._invoke["_"];
          if(or__3824__auto____12029) {
            return or__3824__auto____12029
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____12030 = this$;
      if(and__3822__auto____12030) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____12030
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2264__auto____12031 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12032 = cljs.core._invoke[goog.typeOf(x__2264__auto____12031)];
        if(or__3824__auto____12032) {
          return or__3824__auto____12032
        }else {
          var or__3824__auto____12033 = cljs.core._invoke["_"];
          if(or__3824__auto____12033) {
            return or__3824__auto____12033
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____12038 = coll;
    if(and__3822__auto____12038) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____12038
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2264__auto____12039 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12040 = cljs.core._count[goog.typeOf(x__2264__auto____12039)];
      if(or__3824__auto____12040) {
        return or__3824__auto____12040
      }else {
        var or__3824__auto____12041 = cljs.core._count["_"];
        if(or__3824__auto____12041) {
          return or__3824__auto____12041
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____12046 = coll;
    if(and__3822__auto____12046) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____12046
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2264__auto____12047 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12048 = cljs.core._empty[goog.typeOf(x__2264__auto____12047)];
      if(or__3824__auto____12048) {
        return or__3824__auto____12048
      }else {
        var or__3824__auto____12049 = cljs.core._empty["_"];
        if(or__3824__auto____12049) {
          return or__3824__auto____12049
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____12054 = coll;
    if(and__3822__auto____12054) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____12054
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2264__auto____12055 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12056 = cljs.core._conj[goog.typeOf(x__2264__auto____12055)];
      if(or__3824__auto____12056) {
        return or__3824__auto____12056
      }else {
        var or__3824__auto____12057 = cljs.core._conj["_"];
        if(or__3824__auto____12057) {
          return or__3824__auto____12057
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____12066 = coll;
      if(and__3822__auto____12066) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____12066
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2264__auto____12067 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____12068 = cljs.core._nth[goog.typeOf(x__2264__auto____12067)];
        if(or__3824__auto____12068) {
          return or__3824__auto____12068
        }else {
          var or__3824__auto____12069 = cljs.core._nth["_"];
          if(or__3824__auto____12069) {
            return or__3824__auto____12069
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____12070 = coll;
      if(and__3822__auto____12070) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____12070
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2264__auto____12071 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____12072 = cljs.core._nth[goog.typeOf(x__2264__auto____12071)];
        if(or__3824__auto____12072) {
          return or__3824__auto____12072
        }else {
          var or__3824__auto____12073 = cljs.core._nth["_"];
          if(or__3824__auto____12073) {
            return or__3824__auto____12073
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____12078 = coll;
    if(and__3822__auto____12078) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____12078
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2264__auto____12079 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12080 = cljs.core._first[goog.typeOf(x__2264__auto____12079)];
      if(or__3824__auto____12080) {
        return or__3824__auto____12080
      }else {
        var or__3824__auto____12081 = cljs.core._first["_"];
        if(or__3824__auto____12081) {
          return or__3824__auto____12081
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____12086 = coll;
    if(and__3822__auto____12086) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____12086
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2264__auto____12087 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12088 = cljs.core._rest[goog.typeOf(x__2264__auto____12087)];
      if(or__3824__auto____12088) {
        return or__3824__auto____12088
      }else {
        var or__3824__auto____12089 = cljs.core._rest["_"];
        if(or__3824__auto____12089) {
          return or__3824__auto____12089
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____12094 = coll;
    if(and__3822__auto____12094) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____12094
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2264__auto____12095 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12096 = cljs.core._next[goog.typeOf(x__2264__auto____12095)];
      if(or__3824__auto____12096) {
        return or__3824__auto____12096
      }else {
        var or__3824__auto____12097 = cljs.core._next["_"];
        if(or__3824__auto____12097) {
          return or__3824__auto____12097
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____12106 = o;
      if(and__3822__auto____12106) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____12106
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2264__auto____12107 = o == null ? null : o;
      return function() {
        var or__3824__auto____12108 = cljs.core._lookup[goog.typeOf(x__2264__auto____12107)];
        if(or__3824__auto____12108) {
          return or__3824__auto____12108
        }else {
          var or__3824__auto____12109 = cljs.core._lookup["_"];
          if(or__3824__auto____12109) {
            return or__3824__auto____12109
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____12110 = o;
      if(and__3822__auto____12110) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____12110
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2264__auto____12111 = o == null ? null : o;
      return function() {
        var or__3824__auto____12112 = cljs.core._lookup[goog.typeOf(x__2264__auto____12111)];
        if(or__3824__auto____12112) {
          return or__3824__auto____12112
        }else {
          var or__3824__auto____12113 = cljs.core._lookup["_"];
          if(or__3824__auto____12113) {
            return or__3824__auto____12113
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____12118 = coll;
    if(and__3822__auto____12118) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____12118
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2264__auto____12119 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12120 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2264__auto____12119)];
      if(or__3824__auto____12120) {
        return or__3824__auto____12120
      }else {
        var or__3824__auto____12121 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____12121) {
          return or__3824__auto____12121
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____12126 = coll;
    if(and__3822__auto____12126) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____12126
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2264__auto____12127 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12128 = cljs.core._assoc[goog.typeOf(x__2264__auto____12127)];
      if(or__3824__auto____12128) {
        return or__3824__auto____12128
      }else {
        var or__3824__auto____12129 = cljs.core._assoc["_"];
        if(or__3824__auto____12129) {
          return or__3824__auto____12129
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____12134 = coll;
    if(and__3822__auto____12134) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____12134
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2264__auto____12135 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12136 = cljs.core._dissoc[goog.typeOf(x__2264__auto____12135)];
      if(or__3824__auto____12136) {
        return or__3824__auto____12136
      }else {
        var or__3824__auto____12137 = cljs.core._dissoc["_"];
        if(or__3824__auto____12137) {
          return or__3824__auto____12137
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____12142 = coll;
    if(and__3822__auto____12142) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____12142
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2264__auto____12143 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12144 = cljs.core._key[goog.typeOf(x__2264__auto____12143)];
      if(or__3824__auto____12144) {
        return or__3824__auto____12144
      }else {
        var or__3824__auto____12145 = cljs.core._key["_"];
        if(or__3824__auto____12145) {
          return or__3824__auto____12145
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____12150 = coll;
    if(and__3822__auto____12150) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____12150
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2264__auto____12151 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12152 = cljs.core._val[goog.typeOf(x__2264__auto____12151)];
      if(or__3824__auto____12152) {
        return or__3824__auto____12152
      }else {
        var or__3824__auto____12153 = cljs.core._val["_"];
        if(or__3824__auto____12153) {
          return or__3824__auto____12153
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____12158 = coll;
    if(and__3822__auto____12158) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____12158
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2264__auto____12159 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12160 = cljs.core._disjoin[goog.typeOf(x__2264__auto____12159)];
      if(or__3824__auto____12160) {
        return or__3824__auto____12160
      }else {
        var or__3824__auto____12161 = cljs.core._disjoin["_"];
        if(or__3824__auto____12161) {
          return or__3824__auto____12161
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____12166 = coll;
    if(and__3822__auto____12166) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____12166
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2264__auto____12167 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12168 = cljs.core._peek[goog.typeOf(x__2264__auto____12167)];
      if(or__3824__auto____12168) {
        return or__3824__auto____12168
      }else {
        var or__3824__auto____12169 = cljs.core._peek["_"];
        if(or__3824__auto____12169) {
          return or__3824__auto____12169
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____12174 = coll;
    if(and__3822__auto____12174) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____12174
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2264__auto____12175 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12176 = cljs.core._pop[goog.typeOf(x__2264__auto____12175)];
      if(or__3824__auto____12176) {
        return or__3824__auto____12176
      }else {
        var or__3824__auto____12177 = cljs.core._pop["_"];
        if(or__3824__auto____12177) {
          return or__3824__auto____12177
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____12182 = coll;
    if(and__3822__auto____12182) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____12182
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2264__auto____12183 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12184 = cljs.core._assoc_n[goog.typeOf(x__2264__auto____12183)];
      if(or__3824__auto____12184) {
        return or__3824__auto____12184
      }else {
        var or__3824__auto____12185 = cljs.core._assoc_n["_"];
        if(or__3824__auto____12185) {
          return or__3824__auto____12185
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____12190 = o;
    if(and__3822__auto____12190) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____12190
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2264__auto____12191 = o == null ? null : o;
    return function() {
      var or__3824__auto____12192 = cljs.core._deref[goog.typeOf(x__2264__auto____12191)];
      if(or__3824__auto____12192) {
        return or__3824__auto____12192
      }else {
        var or__3824__auto____12193 = cljs.core._deref["_"];
        if(or__3824__auto____12193) {
          return or__3824__auto____12193
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____12198 = o;
    if(and__3822__auto____12198) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____12198
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2264__auto____12199 = o == null ? null : o;
    return function() {
      var or__3824__auto____12200 = cljs.core._deref_with_timeout[goog.typeOf(x__2264__auto____12199)];
      if(or__3824__auto____12200) {
        return or__3824__auto____12200
      }else {
        var or__3824__auto____12201 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____12201) {
          return or__3824__auto____12201
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____12206 = o;
    if(and__3822__auto____12206) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____12206
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2264__auto____12207 = o == null ? null : o;
    return function() {
      var or__3824__auto____12208 = cljs.core._meta[goog.typeOf(x__2264__auto____12207)];
      if(or__3824__auto____12208) {
        return or__3824__auto____12208
      }else {
        var or__3824__auto____12209 = cljs.core._meta["_"];
        if(or__3824__auto____12209) {
          return or__3824__auto____12209
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____12214 = o;
    if(and__3822__auto____12214) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____12214
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2264__auto____12215 = o == null ? null : o;
    return function() {
      var or__3824__auto____12216 = cljs.core._with_meta[goog.typeOf(x__2264__auto____12215)];
      if(or__3824__auto____12216) {
        return or__3824__auto____12216
      }else {
        var or__3824__auto____12217 = cljs.core._with_meta["_"];
        if(or__3824__auto____12217) {
          return or__3824__auto____12217
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____12226 = coll;
      if(and__3822__auto____12226) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____12226
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2264__auto____12227 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____12228 = cljs.core._reduce[goog.typeOf(x__2264__auto____12227)];
        if(or__3824__auto____12228) {
          return or__3824__auto____12228
        }else {
          var or__3824__auto____12229 = cljs.core._reduce["_"];
          if(or__3824__auto____12229) {
            return or__3824__auto____12229
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____12230 = coll;
      if(and__3822__auto____12230) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____12230
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2264__auto____12231 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____12232 = cljs.core._reduce[goog.typeOf(x__2264__auto____12231)];
        if(or__3824__auto____12232) {
          return or__3824__auto____12232
        }else {
          var or__3824__auto____12233 = cljs.core._reduce["_"];
          if(or__3824__auto____12233) {
            return or__3824__auto____12233
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____12238 = coll;
    if(and__3822__auto____12238) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____12238
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2264__auto____12239 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12240 = cljs.core._kv_reduce[goog.typeOf(x__2264__auto____12239)];
      if(or__3824__auto____12240) {
        return or__3824__auto____12240
      }else {
        var or__3824__auto____12241 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____12241) {
          return or__3824__auto____12241
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____12246 = o;
    if(and__3822__auto____12246) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____12246
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2264__auto____12247 = o == null ? null : o;
    return function() {
      var or__3824__auto____12248 = cljs.core._equiv[goog.typeOf(x__2264__auto____12247)];
      if(or__3824__auto____12248) {
        return or__3824__auto____12248
      }else {
        var or__3824__auto____12249 = cljs.core._equiv["_"];
        if(or__3824__auto____12249) {
          return or__3824__auto____12249
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____12254 = o;
    if(and__3822__auto____12254) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____12254
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2264__auto____12255 = o == null ? null : o;
    return function() {
      var or__3824__auto____12256 = cljs.core._hash[goog.typeOf(x__2264__auto____12255)];
      if(or__3824__auto____12256) {
        return or__3824__auto____12256
      }else {
        var or__3824__auto____12257 = cljs.core._hash["_"];
        if(or__3824__auto____12257) {
          return or__3824__auto____12257
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____12262 = o;
    if(and__3822__auto____12262) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____12262
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2264__auto____12263 = o == null ? null : o;
    return function() {
      var or__3824__auto____12264 = cljs.core._seq[goog.typeOf(x__2264__auto____12263)];
      if(or__3824__auto____12264) {
        return or__3824__auto____12264
      }else {
        var or__3824__auto____12265 = cljs.core._seq["_"];
        if(or__3824__auto____12265) {
          return or__3824__auto____12265
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____12270 = coll;
    if(and__3822__auto____12270) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____12270
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2264__auto____12271 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12272 = cljs.core._rseq[goog.typeOf(x__2264__auto____12271)];
      if(or__3824__auto____12272) {
        return or__3824__auto____12272
      }else {
        var or__3824__auto____12273 = cljs.core._rseq["_"];
        if(or__3824__auto____12273) {
          return or__3824__auto____12273
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____12278 = coll;
    if(and__3822__auto____12278) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____12278
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2264__auto____12279 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12280 = cljs.core._sorted_seq[goog.typeOf(x__2264__auto____12279)];
      if(or__3824__auto____12280) {
        return or__3824__auto____12280
      }else {
        var or__3824__auto____12281 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____12281) {
          return or__3824__auto____12281
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____12286 = coll;
    if(and__3822__auto____12286) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____12286
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2264__auto____12287 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12288 = cljs.core._sorted_seq_from[goog.typeOf(x__2264__auto____12287)];
      if(or__3824__auto____12288) {
        return or__3824__auto____12288
      }else {
        var or__3824__auto____12289 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____12289) {
          return or__3824__auto____12289
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____12294 = coll;
    if(and__3822__auto____12294) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____12294
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2264__auto____12295 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12296 = cljs.core._entry_key[goog.typeOf(x__2264__auto____12295)];
      if(or__3824__auto____12296) {
        return or__3824__auto____12296
      }else {
        var or__3824__auto____12297 = cljs.core._entry_key["_"];
        if(or__3824__auto____12297) {
          return or__3824__auto____12297
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____12302 = coll;
    if(and__3822__auto____12302) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____12302
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2264__auto____12303 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12304 = cljs.core._comparator[goog.typeOf(x__2264__auto____12303)];
      if(or__3824__auto____12304) {
        return or__3824__auto____12304
      }else {
        var or__3824__auto____12305 = cljs.core._comparator["_"];
        if(or__3824__auto____12305) {
          return or__3824__auto____12305
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____12310 = o;
    if(and__3822__auto____12310) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____12310
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2264__auto____12311 = o == null ? null : o;
    return function() {
      var or__3824__auto____12312 = cljs.core._pr_seq[goog.typeOf(x__2264__auto____12311)];
      if(or__3824__auto____12312) {
        return or__3824__auto____12312
      }else {
        var or__3824__auto____12313 = cljs.core._pr_seq["_"];
        if(or__3824__auto____12313) {
          return or__3824__auto____12313
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____12318 = d;
    if(and__3822__auto____12318) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____12318
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2264__auto____12319 = d == null ? null : d;
    return function() {
      var or__3824__auto____12320 = cljs.core._realized_QMARK_[goog.typeOf(x__2264__auto____12319)];
      if(or__3824__auto____12320) {
        return or__3824__auto____12320
      }else {
        var or__3824__auto____12321 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____12321) {
          return or__3824__auto____12321
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____12326 = this$;
    if(and__3822__auto____12326) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____12326
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2264__auto____12327 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____12328 = cljs.core._notify_watches[goog.typeOf(x__2264__auto____12327)];
      if(or__3824__auto____12328) {
        return or__3824__auto____12328
      }else {
        var or__3824__auto____12329 = cljs.core._notify_watches["_"];
        if(or__3824__auto____12329) {
          return or__3824__auto____12329
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____12334 = this$;
    if(and__3822__auto____12334) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____12334
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2264__auto____12335 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____12336 = cljs.core._add_watch[goog.typeOf(x__2264__auto____12335)];
      if(or__3824__auto____12336) {
        return or__3824__auto____12336
      }else {
        var or__3824__auto____12337 = cljs.core._add_watch["_"];
        if(or__3824__auto____12337) {
          return or__3824__auto____12337
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____12342 = this$;
    if(and__3822__auto____12342) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____12342
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2264__auto____12343 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____12344 = cljs.core._remove_watch[goog.typeOf(x__2264__auto____12343)];
      if(or__3824__auto____12344) {
        return or__3824__auto____12344
      }else {
        var or__3824__auto____12345 = cljs.core._remove_watch["_"];
        if(or__3824__auto____12345) {
          return or__3824__auto____12345
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____12350 = coll;
    if(and__3822__auto____12350) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____12350
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2264__auto____12351 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12352 = cljs.core._as_transient[goog.typeOf(x__2264__auto____12351)];
      if(or__3824__auto____12352) {
        return or__3824__auto____12352
      }else {
        var or__3824__auto____12353 = cljs.core._as_transient["_"];
        if(or__3824__auto____12353) {
          return or__3824__auto____12353
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____12358 = tcoll;
    if(and__3822__auto____12358) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____12358
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2264__auto____12359 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____12360 = cljs.core._conj_BANG_[goog.typeOf(x__2264__auto____12359)];
      if(or__3824__auto____12360) {
        return or__3824__auto____12360
      }else {
        var or__3824__auto____12361 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____12361) {
          return or__3824__auto____12361
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____12366 = tcoll;
    if(and__3822__auto____12366) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____12366
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2264__auto____12367 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____12368 = cljs.core._persistent_BANG_[goog.typeOf(x__2264__auto____12367)];
      if(or__3824__auto____12368) {
        return or__3824__auto____12368
      }else {
        var or__3824__auto____12369 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____12369) {
          return or__3824__auto____12369
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____12374 = tcoll;
    if(and__3822__auto____12374) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____12374
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2264__auto____12375 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____12376 = cljs.core._assoc_BANG_[goog.typeOf(x__2264__auto____12375)];
      if(or__3824__auto____12376) {
        return or__3824__auto____12376
      }else {
        var or__3824__auto____12377 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____12377) {
          return or__3824__auto____12377
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____12382 = tcoll;
    if(and__3822__auto____12382) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____12382
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2264__auto____12383 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____12384 = cljs.core._dissoc_BANG_[goog.typeOf(x__2264__auto____12383)];
      if(or__3824__auto____12384) {
        return or__3824__auto____12384
      }else {
        var or__3824__auto____12385 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____12385) {
          return or__3824__auto____12385
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____12390 = tcoll;
    if(and__3822__auto____12390) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____12390
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2264__auto____12391 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____12392 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2264__auto____12391)];
      if(or__3824__auto____12392) {
        return or__3824__auto____12392
      }else {
        var or__3824__auto____12393 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____12393) {
          return or__3824__auto____12393
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____12398 = tcoll;
    if(and__3822__auto____12398) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____12398
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2264__auto____12399 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____12400 = cljs.core._pop_BANG_[goog.typeOf(x__2264__auto____12399)];
      if(or__3824__auto____12400) {
        return or__3824__auto____12400
      }else {
        var or__3824__auto____12401 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____12401) {
          return or__3824__auto____12401
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____12406 = tcoll;
    if(and__3822__auto____12406) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____12406
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2264__auto____12407 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____12408 = cljs.core._disjoin_BANG_[goog.typeOf(x__2264__auto____12407)];
      if(or__3824__auto____12408) {
        return or__3824__auto____12408
      }else {
        var or__3824__auto____12409 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____12409) {
          return or__3824__auto____12409
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____12414 = x;
    if(and__3822__auto____12414) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____12414
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2264__auto____12415 = x == null ? null : x;
    return function() {
      var or__3824__auto____12416 = cljs.core._compare[goog.typeOf(x__2264__auto____12415)];
      if(or__3824__auto____12416) {
        return or__3824__auto____12416
      }else {
        var or__3824__auto____12417 = cljs.core._compare["_"];
        if(or__3824__auto____12417) {
          return or__3824__auto____12417
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____12422 = coll;
    if(and__3822__auto____12422) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____12422
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2264__auto____12423 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12424 = cljs.core._drop_first[goog.typeOf(x__2264__auto____12423)];
      if(or__3824__auto____12424) {
        return or__3824__auto____12424
      }else {
        var or__3824__auto____12425 = cljs.core._drop_first["_"];
        if(or__3824__auto____12425) {
          return or__3824__auto____12425
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____12430 = coll;
    if(and__3822__auto____12430) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____12430
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2264__auto____12431 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12432 = cljs.core._chunked_first[goog.typeOf(x__2264__auto____12431)];
      if(or__3824__auto____12432) {
        return or__3824__auto____12432
      }else {
        var or__3824__auto____12433 = cljs.core._chunked_first["_"];
        if(or__3824__auto____12433) {
          return or__3824__auto____12433
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____12438 = coll;
    if(and__3822__auto____12438) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____12438
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2264__auto____12439 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12440 = cljs.core._chunked_rest[goog.typeOf(x__2264__auto____12439)];
      if(or__3824__auto____12440) {
        return or__3824__auto____12440
      }else {
        var or__3824__auto____12441 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____12441) {
          return or__3824__auto____12441
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____12446 = coll;
    if(and__3822__auto____12446) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____12446
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2264__auto____12447 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12448 = cljs.core._chunked_next[goog.typeOf(x__2264__auto____12447)];
      if(or__3824__auto____12448) {
        return or__3824__auto____12448
      }else {
        var or__3824__auto____12449 = cljs.core._chunked_next["_"];
        if(or__3824__auto____12449) {
          return or__3824__auto____12449
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____12451 = x === y;
    if(or__3824__auto____12451) {
      return or__3824__auto____12451
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__12452__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__12453 = y;
            var G__12454 = cljs.core.first.call(null, more);
            var G__12455 = cljs.core.next.call(null, more);
            x = G__12453;
            y = G__12454;
            more = G__12455;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12452 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12452__delegate.call(this, x, y, more)
    };
    G__12452.cljs$lang$maxFixedArity = 2;
    G__12452.cljs$lang$applyTo = function(arglist__12456) {
      var x = cljs.core.first(arglist__12456);
      var y = cljs.core.first(cljs.core.next(arglist__12456));
      var more = cljs.core.rest(cljs.core.next(arglist__12456));
      return G__12452__delegate(x, y, more)
    };
    G__12452.cljs$lang$arity$variadic = G__12452__delegate;
    return G__12452
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__12457 = null;
  var G__12457__2 = function(o, k) {
    return null
  };
  var G__12457__3 = function(o, k, not_found) {
    return not_found
  };
  G__12457 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12457__2.call(this, o, k);
      case 3:
        return G__12457__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12457
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__12458 = null;
  var G__12458__2 = function(_, f) {
    return f.call(null)
  };
  var G__12458__3 = function(_, f, start) {
    return start
  };
  G__12458 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__12458__2.call(this, _, f);
      case 3:
        return G__12458__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12458
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__12459 = null;
  var G__12459__2 = function(_, n) {
    return null
  };
  var G__12459__3 = function(_, n, not_found) {
    return not_found
  };
  G__12459 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12459__2.call(this, _, n);
      case 3:
        return G__12459__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12459
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____12460 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____12460) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____12460
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__12473 = cljs.core._count.call(null, cicoll);
    if(cnt__12473 === 0) {
      return f.call(null)
    }else {
      var val__12474 = cljs.core._nth.call(null, cicoll, 0);
      var n__12475 = 1;
      while(true) {
        if(n__12475 < cnt__12473) {
          var nval__12476 = f.call(null, val__12474, cljs.core._nth.call(null, cicoll, n__12475));
          if(cljs.core.reduced_QMARK_.call(null, nval__12476)) {
            return cljs.core.deref.call(null, nval__12476)
          }else {
            var G__12485 = nval__12476;
            var G__12486 = n__12475 + 1;
            val__12474 = G__12485;
            n__12475 = G__12486;
            continue
          }
        }else {
          return val__12474
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__12477 = cljs.core._count.call(null, cicoll);
    var val__12478 = val;
    var n__12479 = 0;
    while(true) {
      if(n__12479 < cnt__12477) {
        var nval__12480 = f.call(null, val__12478, cljs.core._nth.call(null, cicoll, n__12479));
        if(cljs.core.reduced_QMARK_.call(null, nval__12480)) {
          return cljs.core.deref.call(null, nval__12480)
        }else {
          var G__12487 = nval__12480;
          var G__12488 = n__12479 + 1;
          val__12478 = G__12487;
          n__12479 = G__12488;
          continue
        }
      }else {
        return val__12478
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__12481 = cljs.core._count.call(null, cicoll);
    var val__12482 = val;
    var n__12483 = idx;
    while(true) {
      if(n__12483 < cnt__12481) {
        var nval__12484 = f.call(null, val__12482, cljs.core._nth.call(null, cicoll, n__12483));
        if(cljs.core.reduced_QMARK_.call(null, nval__12484)) {
          return cljs.core.deref.call(null, nval__12484)
        }else {
          var G__12489 = nval__12484;
          var G__12490 = n__12483 + 1;
          val__12482 = G__12489;
          n__12483 = G__12490;
          continue
        }
      }else {
        return val__12482
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__12503 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__12504 = arr[0];
      var n__12505 = 1;
      while(true) {
        if(n__12505 < cnt__12503) {
          var nval__12506 = f.call(null, val__12504, arr[n__12505]);
          if(cljs.core.reduced_QMARK_.call(null, nval__12506)) {
            return cljs.core.deref.call(null, nval__12506)
          }else {
            var G__12515 = nval__12506;
            var G__12516 = n__12505 + 1;
            val__12504 = G__12515;
            n__12505 = G__12516;
            continue
          }
        }else {
          return val__12504
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__12507 = arr.length;
    var val__12508 = val;
    var n__12509 = 0;
    while(true) {
      if(n__12509 < cnt__12507) {
        var nval__12510 = f.call(null, val__12508, arr[n__12509]);
        if(cljs.core.reduced_QMARK_.call(null, nval__12510)) {
          return cljs.core.deref.call(null, nval__12510)
        }else {
          var G__12517 = nval__12510;
          var G__12518 = n__12509 + 1;
          val__12508 = G__12517;
          n__12509 = G__12518;
          continue
        }
      }else {
        return val__12508
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__12511 = arr.length;
    var val__12512 = val;
    var n__12513 = idx;
    while(true) {
      if(n__12513 < cnt__12511) {
        var nval__12514 = f.call(null, val__12512, arr[n__12513]);
        if(cljs.core.reduced_QMARK_.call(null, nval__12514)) {
          return cljs.core.deref.call(null, nval__12514)
        }else {
          var G__12519 = nval__12514;
          var G__12520 = n__12513 + 1;
          val__12512 = G__12519;
          n__12513 = G__12520;
          continue
        }
      }else {
        return val__12512
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12521 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__12522 = this;
  if(this__12522.i + 1 < this__12522.a.length) {
    return new cljs.core.IndexedSeq(this__12522.a, this__12522.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12523 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__12524 = this;
  var c__12525 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__12525 > 0) {
    return new cljs.core.RSeq(coll, c__12525 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__12526 = this;
  var this__12527 = this;
  return cljs.core.pr_str.call(null, this__12527)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__12528 = this;
  if(cljs.core.counted_QMARK_.call(null, this__12528.a)) {
    return cljs.core.ci_reduce.call(null, this__12528.a, f, this__12528.a[this__12528.i], this__12528.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__12528.a[this__12528.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__12529 = this;
  if(cljs.core.counted_QMARK_.call(null, this__12529.a)) {
    return cljs.core.ci_reduce.call(null, this__12529.a, f, start, this__12529.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__12530 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__12531 = this;
  return this__12531.a.length - this__12531.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__12532 = this;
  return this__12532.a[this__12532.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__12533 = this;
  if(this__12533.i + 1 < this__12533.a.length) {
    return new cljs.core.IndexedSeq(this__12533.a, this__12533.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12534 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__12535 = this;
  var i__12536 = n + this__12535.i;
  if(i__12536 < this__12535.a.length) {
    return this__12535.a[i__12536]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__12537 = this;
  var i__12538 = n + this__12537.i;
  if(i__12538 < this__12537.a.length) {
    return this__12537.a[i__12538]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__12539 = null;
  var G__12539__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__12539__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__12539 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__12539__2.call(this, array, f);
      case 3:
        return G__12539__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12539
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__12540 = null;
  var G__12540__2 = function(array, k) {
    return array[k]
  };
  var G__12540__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__12540 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12540__2.call(this, array, k);
      case 3:
        return G__12540__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12540
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__12541 = null;
  var G__12541__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__12541__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__12541 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12541__2.call(this, array, n);
      case 3:
        return G__12541__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12541
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12542 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12543 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__12544 = this;
  var this__12545 = this;
  return cljs.core.pr_str.call(null, this__12545)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12546 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12547 = this;
  return this__12547.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12548 = this;
  return cljs.core._nth.call(null, this__12548.ci, this__12548.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12549 = this;
  if(this__12549.i > 0) {
    return new cljs.core.RSeq(this__12549.ci, this__12549.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12550 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__12551 = this;
  return new cljs.core.RSeq(this__12551.ci, this__12551.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12552 = this;
  return this__12552.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__12556__12557 = coll;
      if(G__12556__12557) {
        if(function() {
          var or__3824__auto____12558 = G__12556__12557.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____12558) {
            return or__3824__auto____12558
          }else {
            return G__12556__12557.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__12556__12557.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__12556__12557)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__12556__12557)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__12563__12564 = coll;
      if(G__12563__12564) {
        if(function() {
          var or__3824__auto____12565 = G__12563__12564.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____12565) {
            return or__3824__auto____12565
          }else {
            return G__12563__12564.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__12563__12564.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12563__12564)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12563__12564)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__12566 = cljs.core.seq.call(null, coll);
      if(s__12566 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__12566)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__12571__12572 = coll;
      if(G__12571__12572) {
        if(function() {
          var or__3824__auto____12573 = G__12571__12572.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____12573) {
            return or__3824__auto____12573
          }else {
            return G__12571__12572.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__12571__12572.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12571__12572)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12571__12572)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__12574 = cljs.core.seq.call(null, coll);
      if(!(s__12574 == null)) {
        return cljs.core._rest.call(null, s__12574)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__12578__12579 = coll;
      if(G__12578__12579) {
        if(function() {
          var or__3824__auto____12580 = G__12578__12579.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____12580) {
            return or__3824__auto____12580
          }else {
            return G__12578__12579.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__12578__12579.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12578__12579)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12578__12579)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__12582 = cljs.core.next.call(null, s);
    if(!(sn__12582 == null)) {
      var G__12583 = sn__12582;
      s = G__12583;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__12584__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__12585 = conj.call(null, coll, x);
          var G__12586 = cljs.core.first.call(null, xs);
          var G__12587 = cljs.core.next.call(null, xs);
          coll = G__12585;
          x = G__12586;
          xs = G__12587;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__12584 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12584__delegate.call(this, coll, x, xs)
    };
    G__12584.cljs$lang$maxFixedArity = 2;
    G__12584.cljs$lang$applyTo = function(arglist__12588) {
      var coll = cljs.core.first(arglist__12588);
      var x = cljs.core.first(cljs.core.next(arglist__12588));
      var xs = cljs.core.rest(cljs.core.next(arglist__12588));
      return G__12584__delegate(coll, x, xs)
    };
    G__12584.cljs$lang$arity$variadic = G__12584__delegate;
    return G__12584
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__12591 = cljs.core.seq.call(null, coll);
  var acc__12592 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__12591)) {
      return acc__12592 + cljs.core._count.call(null, s__12591)
    }else {
      var G__12593 = cljs.core.next.call(null, s__12591);
      var G__12594 = acc__12592 + 1;
      s__12591 = G__12593;
      acc__12592 = G__12594;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__12601__12602 = coll;
        if(G__12601__12602) {
          if(function() {
            var or__3824__auto____12603 = G__12601__12602.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____12603) {
              return or__3824__auto____12603
            }else {
              return G__12601__12602.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__12601__12602.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12601__12602)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12601__12602)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__12604__12605 = coll;
        if(G__12604__12605) {
          if(function() {
            var or__3824__auto____12606 = G__12604__12605.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____12606) {
              return or__3824__auto____12606
            }else {
              return G__12604__12605.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__12604__12605.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12604__12605)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12604__12605)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__12609__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__12608 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__12610 = ret__12608;
          var G__12611 = cljs.core.first.call(null, kvs);
          var G__12612 = cljs.core.second.call(null, kvs);
          var G__12613 = cljs.core.nnext.call(null, kvs);
          coll = G__12610;
          k = G__12611;
          v = G__12612;
          kvs = G__12613;
          continue
        }else {
          return ret__12608
        }
        break
      }
    };
    var G__12609 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12609__delegate.call(this, coll, k, v, kvs)
    };
    G__12609.cljs$lang$maxFixedArity = 3;
    G__12609.cljs$lang$applyTo = function(arglist__12614) {
      var coll = cljs.core.first(arglist__12614);
      var k = cljs.core.first(cljs.core.next(arglist__12614));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12614)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12614)));
      return G__12609__delegate(coll, k, v, kvs)
    };
    G__12609.cljs$lang$arity$variadic = G__12609__delegate;
    return G__12609
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__12617__delegate = function(coll, k, ks) {
      while(true) {
        var ret__12616 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__12618 = ret__12616;
          var G__12619 = cljs.core.first.call(null, ks);
          var G__12620 = cljs.core.next.call(null, ks);
          coll = G__12618;
          k = G__12619;
          ks = G__12620;
          continue
        }else {
          return ret__12616
        }
        break
      }
    };
    var G__12617 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12617__delegate.call(this, coll, k, ks)
    };
    G__12617.cljs$lang$maxFixedArity = 2;
    G__12617.cljs$lang$applyTo = function(arglist__12621) {
      var coll = cljs.core.first(arglist__12621);
      var k = cljs.core.first(cljs.core.next(arglist__12621));
      var ks = cljs.core.rest(cljs.core.next(arglist__12621));
      return G__12617__delegate(coll, k, ks)
    };
    G__12617.cljs$lang$arity$variadic = G__12617__delegate;
    return G__12617
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__12625__12626 = o;
    if(G__12625__12626) {
      if(function() {
        var or__3824__auto____12627 = G__12625__12626.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____12627) {
          return or__3824__auto____12627
        }else {
          return G__12625__12626.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__12625__12626.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__12625__12626)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__12625__12626)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__12630__delegate = function(coll, k, ks) {
      while(true) {
        var ret__12629 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__12631 = ret__12629;
          var G__12632 = cljs.core.first.call(null, ks);
          var G__12633 = cljs.core.next.call(null, ks);
          coll = G__12631;
          k = G__12632;
          ks = G__12633;
          continue
        }else {
          return ret__12629
        }
        break
      }
    };
    var G__12630 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12630__delegate.call(this, coll, k, ks)
    };
    G__12630.cljs$lang$maxFixedArity = 2;
    G__12630.cljs$lang$applyTo = function(arglist__12634) {
      var coll = cljs.core.first(arglist__12634);
      var k = cljs.core.first(cljs.core.next(arglist__12634));
      var ks = cljs.core.rest(cljs.core.next(arglist__12634));
      return G__12630__delegate(coll, k, ks)
    };
    G__12630.cljs$lang$arity$variadic = G__12630__delegate;
    return G__12630
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__12636 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__12636;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__12636
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__12638 = cljs.core.string_hash_cache[k];
  if(!(h__12638 == null)) {
    return h__12638
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____12640 = goog.isString(o);
      if(and__3822__auto____12640) {
        return check_cache
      }else {
        return and__3822__auto____12640
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__12644__12645 = x;
    if(G__12644__12645) {
      if(function() {
        var or__3824__auto____12646 = G__12644__12645.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____12646) {
          return or__3824__auto____12646
        }else {
          return G__12644__12645.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__12644__12645.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__12644__12645)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__12644__12645)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__12650__12651 = x;
    if(G__12650__12651) {
      if(function() {
        var or__3824__auto____12652 = G__12650__12651.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____12652) {
          return or__3824__auto____12652
        }else {
          return G__12650__12651.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__12650__12651.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__12650__12651)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__12650__12651)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__12656__12657 = x;
  if(G__12656__12657) {
    if(function() {
      var or__3824__auto____12658 = G__12656__12657.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____12658) {
        return or__3824__auto____12658
      }else {
        return G__12656__12657.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__12656__12657.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__12656__12657)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__12656__12657)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__12662__12663 = x;
  if(G__12662__12663) {
    if(function() {
      var or__3824__auto____12664 = G__12662__12663.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____12664) {
        return or__3824__auto____12664
      }else {
        return G__12662__12663.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__12662__12663.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__12662__12663)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__12662__12663)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__12668__12669 = x;
  if(G__12668__12669) {
    if(function() {
      var or__3824__auto____12670 = G__12668__12669.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____12670) {
        return or__3824__auto____12670
      }else {
        return G__12668__12669.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__12668__12669.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__12668__12669)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__12668__12669)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__12674__12675 = x;
  if(G__12674__12675) {
    if(function() {
      var or__3824__auto____12676 = G__12674__12675.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____12676) {
        return or__3824__auto____12676
      }else {
        return G__12674__12675.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__12674__12675.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12674__12675)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12674__12675)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__12680__12681 = x;
  if(G__12680__12681) {
    if(function() {
      var or__3824__auto____12682 = G__12680__12681.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____12682) {
        return or__3824__auto____12682
      }else {
        return G__12680__12681.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__12680__12681.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12680__12681)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12680__12681)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__12686__12687 = x;
    if(G__12686__12687) {
      if(function() {
        var or__3824__auto____12688 = G__12686__12687.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____12688) {
          return or__3824__auto____12688
        }else {
          return G__12686__12687.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__12686__12687.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__12686__12687)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__12686__12687)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__12692__12693 = x;
  if(G__12692__12693) {
    if(function() {
      var or__3824__auto____12694 = G__12692__12693.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____12694) {
        return or__3824__auto____12694
      }else {
        return G__12692__12693.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__12692__12693.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__12692__12693)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__12692__12693)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__12698__12699 = x;
  if(G__12698__12699) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____12700 = null;
      if(cljs.core.truth_(or__3824__auto____12700)) {
        return or__3824__auto____12700
      }else {
        return G__12698__12699.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__12698__12699.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__12698__12699)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__12698__12699)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__12701__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__12701 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__12701__delegate.call(this, keyvals)
    };
    G__12701.cljs$lang$maxFixedArity = 0;
    G__12701.cljs$lang$applyTo = function(arglist__12702) {
      var keyvals = cljs.core.seq(arglist__12702);
      return G__12701__delegate(keyvals)
    };
    G__12701.cljs$lang$arity$variadic = G__12701__delegate;
    return G__12701
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__12704 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__12704.push(key)
  });
  return keys__12704
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__12708 = i;
  var j__12709 = j;
  var len__12710 = len;
  while(true) {
    if(len__12710 === 0) {
      return to
    }else {
      to[j__12709] = from[i__12708];
      var G__12711 = i__12708 + 1;
      var G__12712 = j__12709 + 1;
      var G__12713 = len__12710 - 1;
      i__12708 = G__12711;
      j__12709 = G__12712;
      len__12710 = G__12713;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__12717 = i + (len - 1);
  var j__12718 = j + (len - 1);
  var len__12719 = len;
  while(true) {
    if(len__12719 === 0) {
      return to
    }else {
      to[j__12718] = from[i__12717];
      var G__12720 = i__12717 - 1;
      var G__12721 = j__12718 - 1;
      var G__12722 = len__12719 - 1;
      i__12717 = G__12720;
      j__12718 = G__12721;
      len__12719 = G__12722;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__12726__12727 = s;
    if(G__12726__12727) {
      if(function() {
        var or__3824__auto____12728 = G__12726__12727.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____12728) {
          return or__3824__auto____12728
        }else {
          return G__12726__12727.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__12726__12727.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12726__12727)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12726__12727)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__12732__12733 = s;
  if(G__12732__12733) {
    if(function() {
      var or__3824__auto____12734 = G__12732__12733.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____12734) {
        return or__3824__auto____12734
      }else {
        return G__12732__12733.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__12732__12733.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12732__12733)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12732__12733)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____12737 = goog.isString(x);
  if(and__3822__auto____12737) {
    return!function() {
      var or__3824__auto____12738 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____12738) {
        return or__3824__auto____12738
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____12737
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____12740 = goog.isString(x);
  if(and__3822__auto____12740) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____12740
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____12742 = goog.isString(x);
  if(and__3822__auto____12742) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____12742
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____12747 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____12747) {
    return or__3824__auto____12747
  }else {
    var G__12748__12749 = f;
    if(G__12748__12749) {
      if(function() {
        var or__3824__auto____12750 = G__12748__12749.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____12750) {
          return or__3824__auto____12750
        }else {
          return G__12748__12749.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__12748__12749.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__12748__12749)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__12748__12749)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____12752 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____12752) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____12752
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____12755 = coll;
    if(cljs.core.truth_(and__3822__auto____12755)) {
      var and__3822__auto____12756 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____12756) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____12756
      }
    }else {
      return and__3822__auto____12755
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__12765__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__12761 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__12762 = more;
        while(true) {
          var x__12763 = cljs.core.first.call(null, xs__12762);
          var etc__12764 = cljs.core.next.call(null, xs__12762);
          if(cljs.core.truth_(xs__12762)) {
            if(cljs.core.contains_QMARK_.call(null, s__12761, x__12763)) {
              return false
            }else {
              var G__12766 = cljs.core.conj.call(null, s__12761, x__12763);
              var G__12767 = etc__12764;
              s__12761 = G__12766;
              xs__12762 = G__12767;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__12765 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12765__delegate.call(this, x, y, more)
    };
    G__12765.cljs$lang$maxFixedArity = 2;
    G__12765.cljs$lang$applyTo = function(arglist__12768) {
      var x = cljs.core.first(arglist__12768);
      var y = cljs.core.first(cljs.core.next(arglist__12768));
      var more = cljs.core.rest(cljs.core.next(arglist__12768));
      return G__12765__delegate(x, y, more)
    };
    G__12765.cljs$lang$arity$variadic = G__12765__delegate;
    return G__12765
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__12772__12773 = x;
            if(G__12772__12773) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____12774 = null;
                if(cljs.core.truth_(or__3824__auto____12774)) {
                  return or__3824__auto____12774
                }else {
                  return G__12772__12773.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__12772__12773.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__12772__12773)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__12772__12773)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__12779 = cljs.core.count.call(null, xs);
    var yl__12780 = cljs.core.count.call(null, ys);
    if(xl__12779 < yl__12780) {
      return-1
    }else {
      if(xl__12779 > yl__12780) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__12779, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__12781 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____12782 = d__12781 === 0;
        if(and__3822__auto____12782) {
          return n + 1 < len
        }else {
          return and__3822__auto____12782
        }
      }()) {
        var G__12783 = xs;
        var G__12784 = ys;
        var G__12785 = len;
        var G__12786 = n + 1;
        xs = G__12783;
        ys = G__12784;
        len = G__12785;
        n = G__12786;
        continue
      }else {
        return d__12781
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__12788 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__12788)) {
        return r__12788
      }else {
        if(cljs.core.truth_(r__12788)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__12790 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__12790, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__12790)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____12796 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____12796) {
      var s__12797 = temp__3971__auto____12796;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__12797), cljs.core.next.call(null, s__12797))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__12798 = val;
    var coll__12799 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__12799) {
        var nval__12800 = f.call(null, val__12798, cljs.core.first.call(null, coll__12799));
        if(cljs.core.reduced_QMARK_.call(null, nval__12800)) {
          return cljs.core.deref.call(null, nval__12800)
        }else {
          var G__12801 = nval__12800;
          var G__12802 = cljs.core.next.call(null, coll__12799);
          val__12798 = G__12801;
          coll__12799 = G__12802;
          continue
        }
      }else {
        return val__12798
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__12804 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__12804);
  return cljs.core.vec.call(null, a__12804)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__12811__12812 = coll;
      if(G__12811__12812) {
        if(function() {
          var or__3824__auto____12813 = G__12811__12812.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____12813) {
            return or__3824__auto____12813
          }else {
            return G__12811__12812.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__12811__12812.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12811__12812)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12811__12812)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__12814__12815 = coll;
      if(G__12814__12815) {
        if(function() {
          var or__3824__auto____12816 = G__12814__12815.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____12816) {
            return or__3824__auto____12816
          }else {
            return G__12814__12815.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__12814__12815.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12814__12815)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12814__12815)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__12817 = this;
  return this__12817.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__12818__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__12818 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12818__delegate.call(this, x, y, more)
    };
    G__12818.cljs$lang$maxFixedArity = 2;
    G__12818.cljs$lang$applyTo = function(arglist__12819) {
      var x = cljs.core.first(arglist__12819);
      var y = cljs.core.first(cljs.core.next(arglist__12819));
      var more = cljs.core.rest(cljs.core.next(arglist__12819));
      return G__12818__delegate(x, y, more)
    };
    G__12818.cljs$lang$arity$variadic = G__12818__delegate;
    return G__12818
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__12820__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__12820 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12820__delegate.call(this, x, y, more)
    };
    G__12820.cljs$lang$maxFixedArity = 2;
    G__12820.cljs$lang$applyTo = function(arglist__12821) {
      var x = cljs.core.first(arglist__12821);
      var y = cljs.core.first(cljs.core.next(arglist__12821));
      var more = cljs.core.rest(cljs.core.next(arglist__12821));
      return G__12820__delegate(x, y, more)
    };
    G__12820.cljs$lang$arity$variadic = G__12820__delegate;
    return G__12820
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__12822__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__12822 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12822__delegate.call(this, x, y, more)
    };
    G__12822.cljs$lang$maxFixedArity = 2;
    G__12822.cljs$lang$applyTo = function(arglist__12823) {
      var x = cljs.core.first(arglist__12823);
      var y = cljs.core.first(cljs.core.next(arglist__12823));
      var more = cljs.core.rest(cljs.core.next(arglist__12823));
      return G__12822__delegate(x, y, more)
    };
    G__12822.cljs$lang$arity$variadic = G__12822__delegate;
    return G__12822
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__12824__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__12824 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12824__delegate.call(this, x, y, more)
    };
    G__12824.cljs$lang$maxFixedArity = 2;
    G__12824.cljs$lang$applyTo = function(arglist__12825) {
      var x = cljs.core.first(arglist__12825);
      var y = cljs.core.first(cljs.core.next(arglist__12825));
      var more = cljs.core.rest(cljs.core.next(arglist__12825));
      return G__12824__delegate(x, y, more)
    };
    G__12824.cljs$lang$arity$variadic = G__12824__delegate;
    return G__12824
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__12826__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__12827 = y;
            var G__12828 = cljs.core.first.call(null, more);
            var G__12829 = cljs.core.next.call(null, more);
            x = G__12827;
            y = G__12828;
            more = G__12829;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12826 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12826__delegate.call(this, x, y, more)
    };
    G__12826.cljs$lang$maxFixedArity = 2;
    G__12826.cljs$lang$applyTo = function(arglist__12830) {
      var x = cljs.core.first(arglist__12830);
      var y = cljs.core.first(cljs.core.next(arglist__12830));
      var more = cljs.core.rest(cljs.core.next(arglist__12830));
      return G__12826__delegate(x, y, more)
    };
    G__12826.cljs$lang$arity$variadic = G__12826__delegate;
    return G__12826
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__12831__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__12832 = y;
            var G__12833 = cljs.core.first.call(null, more);
            var G__12834 = cljs.core.next.call(null, more);
            x = G__12832;
            y = G__12833;
            more = G__12834;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12831 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12831__delegate.call(this, x, y, more)
    };
    G__12831.cljs$lang$maxFixedArity = 2;
    G__12831.cljs$lang$applyTo = function(arglist__12835) {
      var x = cljs.core.first(arglist__12835);
      var y = cljs.core.first(cljs.core.next(arglist__12835));
      var more = cljs.core.rest(cljs.core.next(arglist__12835));
      return G__12831__delegate(x, y, more)
    };
    G__12831.cljs$lang$arity$variadic = G__12831__delegate;
    return G__12831
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__12836__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__12837 = y;
            var G__12838 = cljs.core.first.call(null, more);
            var G__12839 = cljs.core.next.call(null, more);
            x = G__12837;
            y = G__12838;
            more = G__12839;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12836 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12836__delegate.call(this, x, y, more)
    };
    G__12836.cljs$lang$maxFixedArity = 2;
    G__12836.cljs$lang$applyTo = function(arglist__12840) {
      var x = cljs.core.first(arglist__12840);
      var y = cljs.core.first(cljs.core.next(arglist__12840));
      var more = cljs.core.rest(cljs.core.next(arglist__12840));
      return G__12836__delegate(x, y, more)
    };
    G__12836.cljs$lang$arity$variadic = G__12836__delegate;
    return G__12836
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__12841__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__12842 = y;
            var G__12843 = cljs.core.first.call(null, more);
            var G__12844 = cljs.core.next.call(null, more);
            x = G__12842;
            y = G__12843;
            more = G__12844;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12841 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12841__delegate.call(this, x, y, more)
    };
    G__12841.cljs$lang$maxFixedArity = 2;
    G__12841.cljs$lang$applyTo = function(arglist__12845) {
      var x = cljs.core.first(arglist__12845);
      var y = cljs.core.first(cljs.core.next(arglist__12845));
      var more = cljs.core.rest(cljs.core.next(arglist__12845));
      return G__12841__delegate(x, y, more)
    };
    G__12841.cljs$lang$arity$variadic = G__12841__delegate;
    return G__12841
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__12846__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__12846 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12846__delegate.call(this, x, y, more)
    };
    G__12846.cljs$lang$maxFixedArity = 2;
    G__12846.cljs$lang$applyTo = function(arglist__12847) {
      var x = cljs.core.first(arglist__12847);
      var y = cljs.core.first(cljs.core.next(arglist__12847));
      var more = cljs.core.rest(cljs.core.next(arglist__12847));
      return G__12846__delegate(x, y, more)
    };
    G__12846.cljs$lang$arity$variadic = G__12846__delegate;
    return G__12846
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__12848__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__12848 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12848__delegate.call(this, x, y, more)
    };
    G__12848.cljs$lang$maxFixedArity = 2;
    G__12848.cljs$lang$applyTo = function(arglist__12849) {
      var x = cljs.core.first(arglist__12849);
      var y = cljs.core.first(cljs.core.next(arglist__12849));
      var more = cljs.core.rest(cljs.core.next(arglist__12849));
      return G__12848__delegate(x, y, more)
    };
    G__12848.cljs$lang$arity$variadic = G__12848__delegate;
    return G__12848
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__12851 = n % d;
  return cljs.core.fix.call(null, (n - rem__12851) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__12853 = cljs.core.quot.call(null, n, d);
  return n - d * q__12853
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__12856 = v - (v >> 1 & 1431655765);
  var v__12857 = (v__12856 & 858993459) + (v__12856 >> 2 & 858993459);
  return(v__12857 + (v__12857 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__12858__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__12859 = y;
            var G__12860 = cljs.core.first.call(null, more);
            var G__12861 = cljs.core.next.call(null, more);
            x = G__12859;
            y = G__12860;
            more = G__12861;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12858 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12858__delegate.call(this, x, y, more)
    };
    G__12858.cljs$lang$maxFixedArity = 2;
    G__12858.cljs$lang$applyTo = function(arglist__12862) {
      var x = cljs.core.first(arglist__12862);
      var y = cljs.core.first(cljs.core.next(arglist__12862));
      var more = cljs.core.rest(cljs.core.next(arglist__12862));
      return G__12858__delegate(x, y, more)
    };
    G__12858.cljs$lang$arity$variadic = G__12858__delegate;
    return G__12858
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__12866 = n;
  var xs__12867 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____12868 = xs__12867;
      if(and__3822__auto____12868) {
        return n__12866 > 0
      }else {
        return and__3822__auto____12868
      }
    }())) {
      var G__12869 = n__12866 - 1;
      var G__12870 = cljs.core.next.call(null, xs__12867);
      n__12866 = G__12869;
      xs__12867 = G__12870;
      continue
    }else {
      return xs__12867
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__12871__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__12872 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__12873 = cljs.core.next.call(null, more);
            sb = G__12872;
            more = G__12873;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__12871 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__12871__delegate.call(this, x, ys)
    };
    G__12871.cljs$lang$maxFixedArity = 1;
    G__12871.cljs$lang$applyTo = function(arglist__12874) {
      var x = cljs.core.first(arglist__12874);
      var ys = cljs.core.rest(arglist__12874);
      return G__12871__delegate(x, ys)
    };
    G__12871.cljs$lang$arity$variadic = G__12871__delegate;
    return G__12871
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__12875__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__12876 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__12877 = cljs.core.next.call(null, more);
            sb = G__12876;
            more = G__12877;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__12875 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__12875__delegate.call(this, x, ys)
    };
    G__12875.cljs$lang$maxFixedArity = 1;
    G__12875.cljs$lang$applyTo = function(arglist__12878) {
      var x = cljs.core.first(arglist__12878);
      var ys = cljs.core.rest(arglist__12878);
      return G__12875__delegate(x, ys)
    };
    G__12875.cljs$lang$arity$variadic = G__12875__delegate;
    return G__12875
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__12879) {
    var fmt = cljs.core.first(arglist__12879);
    var args = cljs.core.rest(arglist__12879);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__12882 = cljs.core.seq.call(null, x);
    var ys__12883 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__12882 == null) {
        return ys__12883 == null
      }else {
        if(ys__12883 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__12882), cljs.core.first.call(null, ys__12883))) {
            var G__12884 = cljs.core.next.call(null, xs__12882);
            var G__12885 = cljs.core.next.call(null, ys__12883);
            xs__12882 = G__12884;
            ys__12883 = G__12885;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__12886_SHARP_, p2__12887_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__12886_SHARP_, cljs.core.hash.call(null, p2__12887_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__12891 = 0;
  var s__12892 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__12892) {
      var e__12893 = cljs.core.first.call(null, s__12892);
      var G__12894 = (h__12891 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__12893)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__12893)))) % 4503599627370496;
      var G__12895 = cljs.core.next.call(null, s__12892);
      h__12891 = G__12894;
      s__12892 = G__12895;
      continue
    }else {
      return h__12891
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__12899 = 0;
  var s__12900 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__12900) {
      var e__12901 = cljs.core.first.call(null, s__12900);
      var G__12902 = (h__12899 + cljs.core.hash.call(null, e__12901)) % 4503599627370496;
      var G__12903 = cljs.core.next.call(null, s__12900);
      h__12899 = G__12902;
      s__12900 = G__12903;
      continue
    }else {
      return h__12899
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__12924__12925 = cljs.core.seq.call(null, fn_map);
  if(G__12924__12925) {
    var G__12927__12929 = cljs.core.first.call(null, G__12924__12925);
    var vec__12928__12930 = G__12927__12929;
    var key_name__12931 = cljs.core.nth.call(null, vec__12928__12930, 0, null);
    var f__12932 = cljs.core.nth.call(null, vec__12928__12930, 1, null);
    var G__12924__12933 = G__12924__12925;
    var G__12927__12934 = G__12927__12929;
    var G__12924__12935 = G__12924__12933;
    while(true) {
      var vec__12936__12937 = G__12927__12934;
      var key_name__12938 = cljs.core.nth.call(null, vec__12936__12937, 0, null);
      var f__12939 = cljs.core.nth.call(null, vec__12936__12937, 1, null);
      var G__12924__12940 = G__12924__12935;
      var str_name__12941 = cljs.core.name.call(null, key_name__12938);
      obj[str_name__12941] = f__12939;
      var temp__3974__auto____12942 = cljs.core.next.call(null, G__12924__12940);
      if(temp__3974__auto____12942) {
        var G__12924__12943 = temp__3974__auto____12942;
        var G__12944 = cljs.core.first.call(null, G__12924__12943);
        var G__12945 = G__12924__12943;
        G__12927__12934 = G__12944;
        G__12924__12935 = G__12945;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12946 = this;
  var h__2093__auto____12947 = this__12946.__hash;
  if(!(h__2093__auto____12947 == null)) {
    return h__2093__auto____12947
  }else {
    var h__2093__auto____12948 = cljs.core.hash_coll.call(null, coll);
    this__12946.__hash = h__2093__auto____12948;
    return h__2093__auto____12948
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__12949 = this;
  if(this__12949.count === 1) {
    return null
  }else {
    return this__12949.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12950 = this;
  return new cljs.core.List(this__12950.meta, o, coll, this__12950.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__12951 = this;
  var this__12952 = this;
  return cljs.core.pr_str.call(null, this__12952)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12953 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12954 = this;
  return this__12954.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__12955 = this;
  return this__12955.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__12956 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12957 = this;
  return this__12957.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12958 = this;
  if(this__12958.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__12958.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12959 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12960 = this;
  return new cljs.core.List(meta, this__12960.first, this__12960.rest, this__12960.count, this__12960.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12961 = this;
  return this__12961.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12962 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12963 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__12964 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12965 = this;
  return new cljs.core.List(this__12965.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__12966 = this;
  var this__12967 = this;
  return cljs.core.pr_str.call(null, this__12967)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12968 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12969 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__12970 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__12971 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12972 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12973 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12974 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12975 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12976 = this;
  return this__12976.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12977 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__12981__12982 = coll;
  if(G__12981__12982) {
    if(function() {
      var or__3824__auto____12983 = G__12981__12982.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____12983) {
        return or__3824__auto____12983
      }else {
        return G__12981__12982.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__12981__12982.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__12981__12982)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__12981__12982)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__12984__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__12984 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12984__delegate.call(this, x, y, z, items)
    };
    G__12984.cljs$lang$maxFixedArity = 3;
    G__12984.cljs$lang$applyTo = function(arglist__12985) {
      var x = cljs.core.first(arglist__12985);
      var y = cljs.core.first(cljs.core.next(arglist__12985));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12985)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12985)));
      return G__12984__delegate(x, y, z, items)
    };
    G__12984.cljs$lang$arity$variadic = G__12984__delegate;
    return G__12984
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12986 = this;
  var h__2093__auto____12987 = this__12986.__hash;
  if(!(h__2093__auto____12987 == null)) {
    return h__2093__auto____12987
  }else {
    var h__2093__auto____12988 = cljs.core.hash_coll.call(null, coll);
    this__12986.__hash = h__2093__auto____12988;
    return h__2093__auto____12988
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__12989 = this;
  if(this__12989.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__12989.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12990 = this;
  return new cljs.core.Cons(null, o, coll, this__12990.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__12991 = this;
  var this__12992 = this;
  return cljs.core.pr_str.call(null, this__12992)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12993 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12994 = this;
  return this__12994.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12995 = this;
  if(this__12995.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__12995.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12996 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12997 = this;
  return new cljs.core.Cons(meta, this__12997.first, this__12997.rest, this__12997.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12998 = this;
  return this__12998.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12999 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__12999.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____13004 = coll == null;
    if(or__3824__auto____13004) {
      return or__3824__auto____13004
    }else {
      var G__13005__13006 = coll;
      if(G__13005__13006) {
        if(function() {
          var or__3824__auto____13007 = G__13005__13006.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____13007) {
            return or__3824__auto____13007
          }else {
            return G__13005__13006.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__13005__13006.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__13005__13006)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__13005__13006)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__13011__13012 = x;
  if(G__13011__13012) {
    if(function() {
      var or__3824__auto____13013 = G__13011__13012.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____13013) {
        return or__3824__auto____13013
      }else {
        return G__13011__13012.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__13011__13012.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__13011__13012)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__13011__13012)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__13014 = null;
  var G__13014__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__13014__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__13014 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__13014__2.call(this, string, f);
      case 3:
        return G__13014__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13014
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__13015 = null;
  var G__13015__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__13015__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__13015 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13015__2.call(this, string, k);
      case 3:
        return G__13015__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13015
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__13016 = null;
  var G__13016__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__13016__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__13016 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13016__2.call(this, string, n);
      case 3:
        return G__13016__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13016
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__13028 = null;
  var G__13028__2 = function(this_sym13019, coll) {
    var this__13021 = this;
    var this_sym13019__13022 = this;
    var ___13023 = this_sym13019__13022;
    if(coll == null) {
      return null
    }else {
      var strobj__13024 = coll.strobj;
      if(strobj__13024 == null) {
        return cljs.core._lookup.call(null, coll, this__13021.k, null)
      }else {
        return strobj__13024[this__13021.k]
      }
    }
  };
  var G__13028__3 = function(this_sym13020, coll, not_found) {
    var this__13021 = this;
    var this_sym13020__13025 = this;
    var ___13026 = this_sym13020__13025;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__13021.k, not_found)
    }
  };
  G__13028 = function(this_sym13020, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13028__2.call(this, this_sym13020, coll);
      case 3:
        return G__13028__3.call(this, this_sym13020, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13028
}();
cljs.core.Keyword.prototype.apply = function(this_sym13017, args13018) {
  var this__13027 = this;
  return this_sym13017.call.apply(this_sym13017, [this_sym13017].concat(args13018.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__13037 = null;
  var G__13037__2 = function(this_sym13031, coll) {
    var this_sym13031__13033 = this;
    var this__13034 = this_sym13031__13033;
    return cljs.core._lookup.call(null, coll, this__13034.toString(), null)
  };
  var G__13037__3 = function(this_sym13032, coll, not_found) {
    var this_sym13032__13035 = this;
    var this__13036 = this_sym13032__13035;
    return cljs.core._lookup.call(null, coll, this__13036.toString(), not_found)
  };
  G__13037 = function(this_sym13032, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13037__2.call(this, this_sym13032, coll);
      case 3:
        return G__13037__3.call(this, this_sym13032, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13037
}();
String.prototype.apply = function(this_sym13029, args13030) {
  return this_sym13029.call.apply(this_sym13029, [this_sym13029].concat(args13030.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__13039 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__13039
  }else {
    lazy_seq.x = x__13039.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13040 = this;
  var h__2093__auto____13041 = this__13040.__hash;
  if(!(h__2093__auto____13041 == null)) {
    return h__2093__auto____13041
  }else {
    var h__2093__auto____13042 = cljs.core.hash_coll.call(null, coll);
    this__13040.__hash = h__2093__auto____13042;
    return h__2093__auto____13042
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__13043 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13044 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__13045 = this;
  var this__13046 = this;
  return cljs.core.pr_str.call(null, this__13046)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13047 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__13048 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__13049 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13050 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13051 = this;
  return new cljs.core.LazySeq(meta, this__13051.realized, this__13051.x, this__13051.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13052 = this;
  return this__13052.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13053 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__13053.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__13054 = this;
  return this__13054.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__13055 = this;
  var ___13056 = this;
  this__13055.buf[this__13055.end] = o;
  return this__13055.end = this__13055.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__13057 = this;
  var ___13058 = this;
  var ret__13059 = new cljs.core.ArrayChunk(this__13057.buf, 0, this__13057.end);
  this__13057.buf = null;
  return ret__13059
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__13060 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__13060.arr[this__13060.off], this__13060.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__13061 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__13061.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__13062 = this;
  if(this__13062.off === this__13062.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__13062.arr, this__13062.off + 1, this__13062.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__13063 = this;
  return this__13063.arr[this__13063.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__13064 = this;
  if(function() {
    var and__3822__auto____13065 = i >= 0;
    if(and__3822__auto____13065) {
      return i < this__13064.end - this__13064.off
    }else {
      return and__3822__auto____13065
    }
  }()) {
    return this__13064.arr[this__13064.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__13066 = this;
  return this__13066.end - this__13066.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__13067 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13068 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__13069 = this;
  return cljs.core._nth.call(null, this__13069.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__13070 = this;
  if(cljs.core._count.call(null, this__13070.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__13070.chunk), this__13070.more, this__13070.meta)
  }else {
    if(this__13070.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__13070.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__13071 = this;
  if(this__13071.more == null) {
    return null
  }else {
    return this__13071.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13072 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__13073 = this;
  return new cljs.core.ChunkedCons(this__13073.chunk, this__13073.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13074 = this;
  return this__13074.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__13075 = this;
  return this__13075.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__13076 = this;
  if(this__13076.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__13076.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__13080__13081 = s;
    if(G__13080__13081) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____13082 = null;
        if(cljs.core.truth_(or__3824__auto____13082)) {
          return or__3824__auto____13082
        }else {
          return G__13080__13081.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__13080__13081.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__13080__13081)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__13080__13081)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__13085 = [];
  var s__13086 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__13086)) {
      ary__13085.push(cljs.core.first.call(null, s__13086));
      var G__13087 = cljs.core.next.call(null, s__13086);
      s__13086 = G__13087;
      continue
    }else {
      return ary__13085
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__13091 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__13092 = 0;
  var xs__13093 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__13093) {
      ret__13091[i__13092] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__13093));
      var G__13094 = i__13092 + 1;
      var G__13095 = cljs.core.next.call(null, xs__13093);
      i__13092 = G__13094;
      xs__13093 = G__13095;
      continue
    }else {
    }
    break
  }
  return ret__13091
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__13103 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__13104 = cljs.core.seq.call(null, init_val_or_seq);
      var i__13105 = 0;
      var s__13106 = s__13104;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____13107 = s__13106;
          if(and__3822__auto____13107) {
            return i__13105 < size
          }else {
            return and__3822__auto____13107
          }
        }())) {
          a__13103[i__13105] = cljs.core.first.call(null, s__13106);
          var G__13110 = i__13105 + 1;
          var G__13111 = cljs.core.next.call(null, s__13106);
          i__13105 = G__13110;
          s__13106 = G__13111;
          continue
        }else {
          return a__13103
        }
        break
      }
    }else {
      var n__2428__auto____13108 = size;
      var i__13109 = 0;
      while(true) {
        if(i__13109 < n__2428__auto____13108) {
          a__13103[i__13109] = init_val_or_seq;
          var G__13112 = i__13109 + 1;
          i__13109 = G__13112;
          continue
        }else {
        }
        break
      }
      return a__13103
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__13120 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__13121 = cljs.core.seq.call(null, init_val_or_seq);
      var i__13122 = 0;
      var s__13123 = s__13121;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____13124 = s__13123;
          if(and__3822__auto____13124) {
            return i__13122 < size
          }else {
            return and__3822__auto____13124
          }
        }())) {
          a__13120[i__13122] = cljs.core.first.call(null, s__13123);
          var G__13127 = i__13122 + 1;
          var G__13128 = cljs.core.next.call(null, s__13123);
          i__13122 = G__13127;
          s__13123 = G__13128;
          continue
        }else {
          return a__13120
        }
        break
      }
    }else {
      var n__2428__auto____13125 = size;
      var i__13126 = 0;
      while(true) {
        if(i__13126 < n__2428__auto____13125) {
          a__13120[i__13126] = init_val_or_seq;
          var G__13129 = i__13126 + 1;
          i__13126 = G__13129;
          continue
        }else {
        }
        break
      }
      return a__13120
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__13137 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__13138 = cljs.core.seq.call(null, init_val_or_seq);
      var i__13139 = 0;
      var s__13140 = s__13138;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____13141 = s__13140;
          if(and__3822__auto____13141) {
            return i__13139 < size
          }else {
            return and__3822__auto____13141
          }
        }())) {
          a__13137[i__13139] = cljs.core.first.call(null, s__13140);
          var G__13144 = i__13139 + 1;
          var G__13145 = cljs.core.next.call(null, s__13140);
          i__13139 = G__13144;
          s__13140 = G__13145;
          continue
        }else {
          return a__13137
        }
        break
      }
    }else {
      var n__2428__auto____13142 = size;
      var i__13143 = 0;
      while(true) {
        if(i__13143 < n__2428__auto____13142) {
          a__13137[i__13143] = init_val_or_seq;
          var G__13146 = i__13143 + 1;
          i__13143 = G__13146;
          continue
        }else {
        }
        break
      }
      return a__13137
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__13151 = s;
    var i__13152 = n;
    var sum__13153 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____13154 = i__13152 > 0;
        if(and__3822__auto____13154) {
          return cljs.core.seq.call(null, s__13151)
        }else {
          return and__3822__auto____13154
        }
      }())) {
        var G__13155 = cljs.core.next.call(null, s__13151);
        var G__13156 = i__13152 - 1;
        var G__13157 = sum__13153 + 1;
        s__13151 = G__13155;
        i__13152 = G__13156;
        sum__13153 = G__13157;
        continue
      }else {
        return sum__13153
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__13162 = cljs.core.seq.call(null, x);
      if(s__13162) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__13162)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__13162), concat.call(null, cljs.core.chunk_rest.call(null, s__13162), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__13162), concat.call(null, cljs.core.rest.call(null, s__13162), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__13166__delegate = function(x, y, zs) {
      var cat__13165 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__13164 = cljs.core.seq.call(null, xys);
          if(xys__13164) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__13164)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__13164), cat.call(null, cljs.core.chunk_rest.call(null, xys__13164), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__13164), cat.call(null, cljs.core.rest.call(null, xys__13164), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__13165.call(null, concat.call(null, x, y), zs)
    };
    var G__13166 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13166__delegate.call(this, x, y, zs)
    };
    G__13166.cljs$lang$maxFixedArity = 2;
    G__13166.cljs$lang$applyTo = function(arglist__13167) {
      var x = cljs.core.first(arglist__13167);
      var y = cljs.core.first(cljs.core.next(arglist__13167));
      var zs = cljs.core.rest(cljs.core.next(arglist__13167));
      return G__13166__delegate(x, y, zs)
    };
    G__13166.cljs$lang$arity$variadic = G__13166__delegate;
    return G__13166
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__13168__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__13168 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__13168__delegate.call(this, a, b, c, d, more)
    };
    G__13168.cljs$lang$maxFixedArity = 4;
    G__13168.cljs$lang$applyTo = function(arglist__13169) {
      var a = cljs.core.first(arglist__13169);
      var b = cljs.core.first(cljs.core.next(arglist__13169));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13169)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13169))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13169))));
      return G__13168__delegate(a, b, c, d, more)
    };
    G__13168.cljs$lang$arity$variadic = G__13168__delegate;
    return G__13168
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__13211 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__13212 = cljs.core._first.call(null, args__13211);
    var args__13213 = cljs.core._rest.call(null, args__13211);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__13212)
      }else {
        return f.call(null, a__13212)
      }
    }else {
      var b__13214 = cljs.core._first.call(null, args__13213);
      var args__13215 = cljs.core._rest.call(null, args__13213);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__13212, b__13214)
        }else {
          return f.call(null, a__13212, b__13214)
        }
      }else {
        var c__13216 = cljs.core._first.call(null, args__13215);
        var args__13217 = cljs.core._rest.call(null, args__13215);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__13212, b__13214, c__13216)
          }else {
            return f.call(null, a__13212, b__13214, c__13216)
          }
        }else {
          var d__13218 = cljs.core._first.call(null, args__13217);
          var args__13219 = cljs.core._rest.call(null, args__13217);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__13212, b__13214, c__13216, d__13218)
            }else {
              return f.call(null, a__13212, b__13214, c__13216, d__13218)
            }
          }else {
            var e__13220 = cljs.core._first.call(null, args__13219);
            var args__13221 = cljs.core._rest.call(null, args__13219);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__13212, b__13214, c__13216, d__13218, e__13220)
              }else {
                return f.call(null, a__13212, b__13214, c__13216, d__13218, e__13220)
              }
            }else {
              var f__13222 = cljs.core._first.call(null, args__13221);
              var args__13223 = cljs.core._rest.call(null, args__13221);
              if(argc === 6) {
                if(f__13222.cljs$lang$arity$6) {
                  return f__13222.cljs$lang$arity$6(a__13212, b__13214, c__13216, d__13218, e__13220, f__13222)
                }else {
                  return f__13222.call(null, a__13212, b__13214, c__13216, d__13218, e__13220, f__13222)
                }
              }else {
                var g__13224 = cljs.core._first.call(null, args__13223);
                var args__13225 = cljs.core._rest.call(null, args__13223);
                if(argc === 7) {
                  if(f__13222.cljs$lang$arity$7) {
                    return f__13222.cljs$lang$arity$7(a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224)
                  }else {
                    return f__13222.call(null, a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224)
                  }
                }else {
                  var h__13226 = cljs.core._first.call(null, args__13225);
                  var args__13227 = cljs.core._rest.call(null, args__13225);
                  if(argc === 8) {
                    if(f__13222.cljs$lang$arity$8) {
                      return f__13222.cljs$lang$arity$8(a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226)
                    }else {
                      return f__13222.call(null, a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226)
                    }
                  }else {
                    var i__13228 = cljs.core._first.call(null, args__13227);
                    var args__13229 = cljs.core._rest.call(null, args__13227);
                    if(argc === 9) {
                      if(f__13222.cljs$lang$arity$9) {
                        return f__13222.cljs$lang$arity$9(a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228)
                      }else {
                        return f__13222.call(null, a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228)
                      }
                    }else {
                      var j__13230 = cljs.core._first.call(null, args__13229);
                      var args__13231 = cljs.core._rest.call(null, args__13229);
                      if(argc === 10) {
                        if(f__13222.cljs$lang$arity$10) {
                          return f__13222.cljs$lang$arity$10(a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228, j__13230)
                        }else {
                          return f__13222.call(null, a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228, j__13230)
                        }
                      }else {
                        var k__13232 = cljs.core._first.call(null, args__13231);
                        var args__13233 = cljs.core._rest.call(null, args__13231);
                        if(argc === 11) {
                          if(f__13222.cljs$lang$arity$11) {
                            return f__13222.cljs$lang$arity$11(a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228, j__13230, k__13232)
                          }else {
                            return f__13222.call(null, a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228, j__13230, k__13232)
                          }
                        }else {
                          var l__13234 = cljs.core._first.call(null, args__13233);
                          var args__13235 = cljs.core._rest.call(null, args__13233);
                          if(argc === 12) {
                            if(f__13222.cljs$lang$arity$12) {
                              return f__13222.cljs$lang$arity$12(a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228, j__13230, k__13232, l__13234)
                            }else {
                              return f__13222.call(null, a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228, j__13230, k__13232, l__13234)
                            }
                          }else {
                            var m__13236 = cljs.core._first.call(null, args__13235);
                            var args__13237 = cljs.core._rest.call(null, args__13235);
                            if(argc === 13) {
                              if(f__13222.cljs$lang$arity$13) {
                                return f__13222.cljs$lang$arity$13(a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228, j__13230, k__13232, l__13234, m__13236)
                              }else {
                                return f__13222.call(null, a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228, j__13230, k__13232, l__13234, m__13236)
                              }
                            }else {
                              var n__13238 = cljs.core._first.call(null, args__13237);
                              var args__13239 = cljs.core._rest.call(null, args__13237);
                              if(argc === 14) {
                                if(f__13222.cljs$lang$arity$14) {
                                  return f__13222.cljs$lang$arity$14(a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228, j__13230, k__13232, l__13234, m__13236, n__13238)
                                }else {
                                  return f__13222.call(null, a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228, j__13230, k__13232, l__13234, m__13236, n__13238)
                                }
                              }else {
                                var o__13240 = cljs.core._first.call(null, args__13239);
                                var args__13241 = cljs.core._rest.call(null, args__13239);
                                if(argc === 15) {
                                  if(f__13222.cljs$lang$arity$15) {
                                    return f__13222.cljs$lang$arity$15(a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228, j__13230, k__13232, l__13234, m__13236, n__13238, o__13240)
                                  }else {
                                    return f__13222.call(null, a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228, j__13230, k__13232, l__13234, m__13236, n__13238, o__13240)
                                  }
                                }else {
                                  var p__13242 = cljs.core._first.call(null, args__13241);
                                  var args__13243 = cljs.core._rest.call(null, args__13241);
                                  if(argc === 16) {
                                    if(f__13222.cljs$lang$arity$16) {
                                      return f__13222.cljs$lang$arity$16(a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228, j__13230, k__13232, l__13234, m__13236, n__13238, o__13240, p__13242)
                                    }else {
                                      return f__13222.call(null, a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228, j__13230, k__13232, l__13234, m__13236, n__13238, o__13240, p__13242)
                                    }
                                  }else {
                                    var q__13244 = cljs.core._first.call(null, args__13243);
                                    var args__13245 = cljs.core._rest.call(null, args__13243);
                                    if(argc === 17) {
                                      if(f__13222.cljs$lang$arity$17) {
                                        return f__13222.cljs$lang$arity$17(a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228, j__13230, k__13232, l__13234, m__13236, n__13238, o__13240, p__13242, q__13244)
                                      }else {
                                        return f__13222.call(null, a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228, j__13230, k__13232, l__13234, m__13236, n__13238, o__13240, p__13242, q__13244)
                                      }
                                    }else {
                                      var r__13246 = cljs.core._first.call(null, args__13245);
                                      var args__13247 = cljs.core._rest.call(null, args__13245);
                                      if(argc === 18) {
                                        if(f__13222.cljs$lang$arity$18) {
                                          return f__13222.cljs$lang$arity$18(a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228, j__13230, k__13232, l__13234, m__13236, n__13238, o__13240, p__13242, q__13244, r__13246)
                                        }else {
                                          return f__13222.call(null, a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228, j__13230, k__13232, l__13234, m__13236, n__13238, o__13240, p__13242, q__13244, r__13246)
                                        }
                                      }else {
                                        var s__13248 = cljs.core._first.call(null, args__13247);
                                        var args__13249 = cljs.core._rest.call(null, args__13247);
                                        if(argc === 19) {
                                          if(f__13222.cljs$lang$arity$19) {
                                            return f__13222.cljs$lang$arity$19(a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228, j__13230, k__13232, l__13234, m__13236, n__13238, o__13240, p__13242, q__13244, r__13246, s__13248)
                                          }else {
                                            return f__13222.call(null, a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228, j__13230, k__13232, l__13234, m__13236, n__13238, o__13240, p__13242, q__13244, r__13246, s__13248)
                                          }
                                        }else {
                                          var t__13250 = cljs.core._first.call(null, args__13249);
                                          var args__13251 = cljs.core._rest.call(null, args__13249);
                                          if(argc === 20) {
                                            if(f__13222.cljs$lang$arity$20) {
                                              return f__13222.cljs$lang$arity$20(a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228, j__13230, k__13232, l__13234, m__13236, n__13238, o__13240, p__13242, q__13244, r__13246, s__13248, t__13250)
                                            }else {
                                              return f__13222.call(null, a__13212, b__13214, c__13216, d__13218, e__13220, f__13222, g__13224, h__13226, i__13228, j__13230, k__13232, l__13234, m__13236, n__13238, o__13240, p__13242, q__13244, r__13246, s__13248, t__13250)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__13266 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__13267 = cljs.core.bounded_count.call(null, args, fixed_arity__13266 + 1);
      if(bc__13267 <= fixed_arity__13266) {
        return cljs.core.apply_to.call(null, f, bc__13267, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__13268 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__13269 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__13270 = cljs.core.bounded_count.call(null, arglist__13268, fixed_arity__13269 + 1);
      if(bc__13270 <= fixed_arity__13269) {
        return cljs.core.apply_to.call(null, f, bc__13270, arglist__13268)
      }else {
        return f.cljs$lang$applyTo(arglist__13268)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__13268))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__13271 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__13272 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__13273 = cljs.core.bounded_count.call(null, arglist__13271, fixed_arity__13272 + 1);
      if(bc__13273 <= fixed_arity__13272) {
        return cljs.core.apply_to.call(null, f, bc__13273, arglist__13271)
      }else {
        return f.cljs$lang$applyTo(arglist__13271)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__13271))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__13274 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__13275 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__13276 = cljs.core.bounded_count.call(null, arglist__13274, fixed_arity__13275 + 1);
      if(bc__13276 <= fixed_arity__13275) {
        return cljs.core.apply_to.call(null, f, bc__13276, arglist__13274)
      }else {
        return f.cljs$lang$applyTo(arglist__13274)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__13274))
    }
  };
  var apply__6 = function() {
    var G__13280__delegate = function(f, a, b, c, d, args) {
      var arglist__13277 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__13278 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__13279 = cljs.core.bounded_count.call(null, arglist__13277, fixed_arity__13278 + 1);
        if(bc__13279 <= fixed_arity__13278) {
          return cljs.core.apply_to.call(null, f, bc__13279, arglist__13277)
        }else {
          return f.cljs$lang$applyTo(arglist__13277)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__13277))
      }
    };
    var G__13280 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__13280__delegate.call(this, f, a, b, c, d, args)
    };
    G__13280.cljs$lang$maxFixedArity = 5;
    G__13280.cljs$lang$applyTo = function(arglist__13281) {
      var f = cljs.core.first(arglist__13281);
      var a = cljs.core.first(cljs.core.next(arglist__13281));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13281)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13281))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13281)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13281)))));
      return G__13280__delegate(f, a, b, c, d, args)
    };
    G__13280.cljs$lang$arity$variadic = G__13280__delegate;
    return G__13280
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__13282) {
    var obj = cljs.core.first(arglist__13282);
    var f = cljs.core.first(cljs.core.next(arglist__13282));
    var args = cljs.core.rest(cljs.core.next(arglist__13282));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__13283__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__13283 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13283__delegate.call(this, x, y, more)
    };
    G__13283.cljs$lang$maxFixedArity = 2;
    G__13283.cljs$lang$applyTo = function(arglist__13284) {
      var x = cljs.core.first(arglist__13284);
      var y = cljs.core.first(cljs.core.next(arglist__13284));
      var more = cljs.core.rest(cljs.core.next(arglist__13284));
      return G__13283__delegate(x, y, more)
    };
    G__13283.cljs$lang$arity$variadic = G__13283__delegate;
    return G__13283
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__13285 = pred;
        var G__13286 = cljs.core.next.call(null, coll);
        pred = G__13285;
        coll = G__13286;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____13288 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____13288)) {
        return or__3824__auto____13288
      }else {
        var G__13289 = pred;
        var G__13290 = cljs.core.next.call(null, coll);
        pred = G__13289;
        coll = G__13290;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__13291 = null;
    var G__13291__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__13291__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__13291__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__13291__3 = function() {
      var G__13292__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__13292 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__13292__delegate.call(this, x, y, zs)
      };
      G__13292.cljs$lang$maxFixedArity = 2;
      G__13292.cljs$lang$applyTo = function(arglist__13293) {
        var x = cljs.core.first(arglist__13293);
        var y = cljs.core.first(cljs.core.next(arglist__13293));
        var zs = cljs.core.rest(cljs.core.next(arglist__13293));
        return G__13292__delegate(x, y, zs)
      };
      G__13292.cljs$lang$arity$variadic = G__13292__delegate;
      return G__13292
    }();
    G__13291 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__13291__0.call(this);
        case 1:
          return G__13291__1.call(this, x);
        case 2:
          return G__13291__2.call(this, x, y);
        default:
          return G__13291__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__13291.cljs$lang$maxFixedArity = 2;
    G__13291.cljs$lang$applyTo = G__13291__3.cljs$lang$applyTo;
    return G__13291
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__13294__delegate = function(args) {
      return x
    };
    var G__13294 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__13294__delegate.call(this, args)
    };
    G__13294.cljs$lang$maxFixedArity = 0;
    G__13294.cljs$lang$applyTo = function(arglist__13295) {
      var args = cljs.core.seq(arglist__13295);
      return G__13294__delegate(args)
    };
    G__13294.cljs$lang$arity$variadic = G__13294__delegate;
    return G__13294
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__13302 = null;
      var G__13302__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__13302__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__13302__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__13302__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__13302__4 = function() {
        var G__13303__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__13303 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13303__delegate.call(this, x, y, z, args)
        };
        G__13303.cljs$lang$maxFixedArity = 3;
        G__13303.cljs$lang$applyTo = function(arglist__13304) {
          var x = cljs.core.first(arglist__13304);
          var y = cljs.core.first(cljs.core.next(arglist__13304));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13304)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13304)));
          return G__13303__delegate(x, y, z, args)
        };
        G__13303.cljs$lang$arity$variadic = G__13303__delegate;
        return G__13303
      }();
      G__13302 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13302__0.call(this);
          case 1:
            return G__13302__1.call(this, x);
          case 2:
            return G__13302__2.call(this, x, y);
          case 3:
            return G__13302__3.call(this, x, y, z);
          default:
            return G__13302__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__13302.cljs$lang$maxFixedArity = 3;
      G__13302.cljs$lang$applyTo = G__13302__4.cljs$lang$applyTo;
      return G__13302
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__13305 = null;
      var G__13305__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__13305__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__13305__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__13305__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__13305__4 = function() {
        var G__13306__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__13306 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13306__delegate.call(this, x, y, z, args)
        };
        G__13306.cljs$lang$maxFixedArity = 3;
        G__13306.cljs$lang$applyTo = function(arglist__13307) {
          var x = cljs.core.first(arglist__13307);
          var y = cljs.core.first(cljs.core.next(arglist__13307));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13307)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13307)));
          return G__13306__delegate(x, y, z, args)
        };
        G__13306.cljs$lang$arity$variadic = G__13306__delegate;
        return G__13306
      }();
      G__13305 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13305__0.call(this);
          case 1:
            return G__13305__1.call(this, x);
          case 2:
            return G__13305__2.call(this, x, y);
          case 3:
            return G__13305__3.call(this, x, y, z);
          default:
            return G__13305__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__13305.cljs$lang$maxFixedArity = 3;
      G__13305.cljs$lang$applyTo = G__13305__4.cljs$lang$applyTo;
      return G__13305
    }()
  };
  var comp__4 = function() {
    var G__13308__delegate = function(f1, f2, f3, fs) {
      var fs__13299 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__13309__delegate = function(args) {
          var ret__13300 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__13299), args);
          var fs__13301 = cljs.core.next.call(null, fs__13299);
          while(true) {
            if(fs__13301) {
              var G__13310 = cljs.core.first.call(null, fs__13301).call(null, ret__13300);
              var G__13311 = cljs.core.next.call(null, fs__13301);
              ret__13300 = G__13310;
              fs__13301 = G__13311;
              continue
            }else {
              return ret__13300
            }
            break
          }
        };
        var G__13309 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__13309__delegate.call(this, args)
        };
        G__13309.cljs$lang$maxFixedArity = 0;
        G__13309.cljs$lang$applyTo = function(arglist__13312) {
          var args = cljs.core.seq(arglist__13312);
          return G__13309__delegate(args)
        };
        G__13309.cljs$lang$arity$variadic = G__13309__delegate;
        return G__13309
      }()
    };
    var G__13308 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13308__delegate.call(this, f1, f2, f3, fs)
    };
    G__13308.cljs$lang$maxFixedArity = 3;
    G__13308.cljs$lang$applyTo = function(arglist__13313) {
      var f1 = cljs.core.first(arglist__13313);
      var f2 = cljs.core.first(cljs.core.next(arglist__13313));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13313)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13313)));
      return G__13308__delegate(f1, f2, f3, fs)
    };
    G__13308.cljs$lang$arity$variadic = G__13308__delegate;
    return G__13308
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__13314__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__13314 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__13314__delegate.call(this, args)
      };
      G__13314.cljs$lang$maxFixedArity = 0;
      G__13314.cljs$lang$applyTo = function(arglist__13315) {
        var args = cljs.core.seq(arglist__13315);
        return G__13314__delegate(args)
      };
      G__13314.cljs$lang$arity$variadic = G__13314__delegate;
      return G__13314
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__13316__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__13316 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__13316__delegate.call(this, args)
      };
      G__13316.cljs$lang$maxFixedArity = 0;
      G__13316.cljs$lang$applyTo = function(arglist__13317) {
        var args = cljs.core.seq(arglist__13317);
        return G__13316__delegate(args)
      };
      G__13316.cljs$lang$arity$variadic = G__13316__delegate;
      return G__13316
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__13318__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__13318 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__13318__delegate.call(this, args)
      };
      G__13318.cljs$lang$maxFixedArity = 0;
      G__13318.cljs$lang$applyTo = function(arglist__13319) {
        var args = cljs.core.seq(arglist__13319);
        return G__13318__delegate(args)
      };
      G__13318.cljs$lang$arity$variadic = G__13318__delegate;
      return G__13318
    }()
  };
  var partial__5 = function() {
    var G__13320__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__13321__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__13321 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__13321__delegate.call(this, args)
        };
        G__13321.cljs$lang$maxFixedArity = 0;
        G__13321.cljs$lang$applyTo = function(arglist__13322) {
          var args = cljs.core.seq(arglist__13322);
          return G__13321__delegate(args)
        };
        G__13321.cljs$lang$arity$variadic = G__13321__delegate;
        return G__13321
      }()
    };
    var G__13320 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__13320__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__13320.cljs$lang$maxFixedArity = 4;
    G__13320.cljs$lang$applyTo = function(arglist__13323) {
      var f = cljs.core.first(arglist__13323);
      var arg1 = cljs.core.first(cljs.core.next(arglist__13323));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13323)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13323))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13323))));
      return G__13320__delegate(f, arg1, arg2, arg3, more)
    };
    G__13320.cljs$lang$arity$variadic = G__13320__delegate;
    return G__13320
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__13324 = null;
      var G__13324__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__13324__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__13324__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__13324__4 = function() {
        var G__13325__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__13325 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13325__delegate.call(this, a, b, c, ds)
        };
        G__13325.cljs$lang$maxFixedArity = 3;
        G__13325.cljs$lang$applyTo = function(arglist__13326) {
          var a = cljs.core.first(arglist__13326);
          var b = cljs.core.first(cljs.core.next(arglist__13326));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13326)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13326)));
          return G__13325__delegate(a, b, c, ds)
        };
        G__13325.cljs$lang$arity$variadic = G__13325__delegate;
        return G__13325
      }();
      G__13324 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__13324__1.call(this, a);
          case 2:
            return G__13324__2.call(this, a, b);
          case 3:
            return G__13324__3.call(this, a, b, c);
          default:
            return G__13324__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__13324.cljs$lang$maxFixedArity = 3;
      G__13324.cljs$lang$applyTo = G__13324__4.cljs$lang$applyTo;
      return G__13324
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__13327 = null;
      var G__13327__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__13327__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__13327__4 = function() {
        var G__13328__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__13328 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13328__delegate.call(this, a, b, c, ds)
        };
        G__13328.cljs$lang$maxFixedArity = 3;
        G__13328.cljs$lang$applyTo = function(arglist__13329) {
          var a = cljs.core.first(arglist__13329);
          var b = cljs.core.first(cljs.core.next(arglist__13329));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13329)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13329)));
          return G__13328__delegate(a, b, c, ds)
        };
        G__13328.cljs$lang$arity$variadic = G__13328__delegate;
        return G__13328
      }();
      G__13327 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__13327__2.call(this, a, b);
          case 3:
            return G__13327__3.call(this, a, b, c);
          default:
            return G__13327__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__13327.cljs$lang$maxFixedArity = 3;
      G__13327.cljs$lang$applyTo = G__13327__4.cljs$lang$applyTo;
      return G__13327
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__13330 = null;
      var G__13330__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__13330__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__13330__4 = function() {
        var G__13331__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__13331 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13331__delegate.call(this, a, b, c, ds)
        };
        G__13331.cljs$lang$maxFixedArity = 3;
        G__13331.cljs$lang$applyTo = function(arglist__13332) {
          var a = cljs.core.first(arglist__13332);
          var b = cljs.core.first(cljs.core.next(arglist__13332));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13332)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13332)));
          return G__13331__delegate(a, b, c, ds)
        };
        G__13331.cljs$lang$arity$variadic = G__13331__delegate;
        return G__13331
      }();
      G__13330 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__13330__2.call(this, a, b);
          case 3:
            return G__13330__3.call(this, a, b, c);
          default:
            return G__13330__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__13330.cljs$lang$maxFixedArity = 3;
      G__13330.cljs$lang$applyTo = G__13330__4.cljs$lang$applyTo;
      return G__13330
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__13348 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____13356 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____13356) {
        var s__13357 = temp__3974__auto____13356;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__13357)) {
          var c__13358 = cljs.core.chunk_first.call(null, s__13357);
          var size__13359 = cljs.core.count.call(null, c__13358);
          var b__13360 = cljs.core.chunk_buffer.call(null, size__13359);
          var n__2428__auto____13361 = size__13359;
          var i__13362 = 0;
          while(true) {
            if(i__13362 < n__2428__auto____13361) {
              cljs.core.chunk_append.call(null, b__13360, f.call(null, idx + i__13362, cljs.core._nth.call(null, c__13358, i__13362)));
              var G__13363 = i__13362 + 1;
              i__13362 = G__13363;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13360), mapi.call(null, idx + size__13359, cljs.core.chunk_rest.call(null, s__13357)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__13357)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__13357)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__13348.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____13373 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____13373) {
      var s__13374 = temp__3974__auto____13373;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__13374)) {
        var c__13375 = cljs.core.chunk_first.call(null, s__13374);
        var size__13376 = cljs.core.count.call(null, c__13375);
        var b__13377 = cljs.core.chunk_buffer.call(null, size__13376);
        var n__2428__auto____13378 = size__13376;
        var i__13379 = 0;
        while(true) {
          if(i__13379 < n__2428__auto____13378) {
            var x__13380 = f.call(null, cljs.core._nth.call(null, c__13375, i__13379));
            if(x__13380 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__13377, x__13380)
            }
            var G__13382 = i__13379 + 1;
            i__13379 = G__13382;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13377), keep.call(null, f, cljs.core.chunk_rest.call(null, s__13374)))
      }else {
        var x__13381 = f.call(null, cljs.core.first.call(null, s__13374));
        if(x__13381 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__13374))
        }else {
          return cljs.core.cons.call(null, x__13381, keep.call(null, f, cljs.core.rest.call(null, s__13374)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__13408 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____13418 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____13418) {
        var s__13419 = temp__3974__auto____13418;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__13419)) {
          var c__13420 = cljs.core.chunk_first.call(null, s__13419);
          var size__13421 = cljs.core.count.call(null, c__13420);
          var b__13422 = cljs.core.chunk_buffer.call(null, size__13421);
          var n__2428__auto____13423 = size__13421;
          var i__13424 = 0;
          while(true) {
            if(i__13424 < n__2428__auto____13423) {
              var x__13425 = f.call(null, idx + i__13424, cljs.core._nth.call(null, c__13420, i__13424));
              if(x__13425 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__13422, x__13425)
              }
              var G__13427 = i__13424 + 1;
              i__13424 = G__13427;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13422), keepi.call(null, idx + size__13421, cljs.core.chunk_rest.call(null, s__13419)))
        }else {
          var x__13426 = f.call(null, idx, cljs.core.first.call(null, s__13419));
          if(x__13426 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__13419))
          }else {
            return cljs.core.cons.call(null, x__13426, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__13419)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__13408.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13513 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13513)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____13513
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13514 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13514)) {
            var and__3822__auto____13515 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____13515)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____13515
            }
          }else {
            return and__3822__auto____13514
          }
        }())
      };
      var ep1__4 = function() {
        var G__13584__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____13516 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____13516)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____13516
            }
          }())
        };
        var G__13584 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13584__delegate.call(this, x, y, z, args)
        };
        G__13584.cljs$lang$maxFixedArity = 3;
        G__13584.cljs$lang$applyTo = function(arglist__13585) {
          var x = cljs.core.first(arglist__13585);
          var y = cljs.core.first(cljs.core.next(arglist__13585));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13585)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13585)));
          return G__13584__delegate(x, y, z, args)
        };
        G__13584.cljs$lang$arity$variadic = G__13584__delegate;
        return G__13584
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13528 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13528)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____13528
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13529 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13529)) {
            var and__3822__auto____13530 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____13530)) {
              var and__3822__auto____13531 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____13531)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____13531
              }
            }else {
              return and__3822__auto____13530
            }
          }else {
            return and__3822__auto____13529
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13532 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13532)) {
            var and__3822__auto____13533 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____13533)) {
              var and__3822__auto____13534 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____13534)) {
                var and__3822__auto____13535 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____13535)) {
                  var and__3822__auto____13536 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____13536)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____13536
                  }
                }else {
                  return and__3822__auto____13535
                }
              }else {
                return and__3822__auto____13534
              }
            }else {
              return and__3822__auto____13533
            }
          }else {
            return and__3822__auto____13532
          }
        }())
      };
      var ep2__4 = function() {
        var G__13586__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____13537 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____13537)) {
              return cljs.core.every_QMARK_.call(null, function(p1__13383_SHARP_) {
                var and__3822__auto____13538 = p1.call(null, p1__13383_SHARP_);
                if(cljs.core.truth_(and__3822__auto____13538)) {
                  return p2.call(null, p1__13383_SHARP_)
                }else {
                  return and__3822__auto____13538
                }
              }, args)
            }else {
              return and__3822__auto____13537
            }
          }())
        };
        var G__13586 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13586__delegate.call(this, x, y, z, args)
        };
        G__13586.cljs$lang$maxFixedArity = 3;
        G__13586.cljs$lang$applyTo = function(arglist__13587) {
          var x = cljs.core.first(arglist__13587);
          var y = cljs.core.first(cljs.core.next(arglist__13587));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13587)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13587)));
          return G__13586__delegate(x, y, z, args)
        };
        G__13586.cljs$lang$arity$variadic = G__13586__delegate;
        return G__13586
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13557 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13557)) {
            var and__3822__auto____13558 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____13558)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____13558
            }
          }else {
            return and__3822__auto____13557
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13559 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13559)) {
            var and__3822__auto____13560 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____13560)) {
              var and__3822__auto____13561 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____13561)) {
                var and__3822__auto____13562 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____13562)) {
                  var and__3822__auto____13563 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____13563)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____13563
                  }
                }else {
                  return and__3822__auto____13562
                }
              }else {
                return and__3822__auto____13561
              }
            }else {
              return and__3822__auto____13560
            }
          }else {
            return and__3822__auto____13559
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13564 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13564)) {
            var and__3822__auto____13565 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____13565)) {
              var and__3822__auto____13566 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____13566)) {
                var and__3822__auto____13567 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____13567)) {
                  var and__3822__auto____13568 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____13568)) {
                    var and__3822__auto____13569 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____13569)) {
                      var and__3822__auto____13570 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____13570)) {
                        var and__3822__auto____13571 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____13571)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____13571
                        }
                      }else {
                        return and__3822__auto____13570
                      }
                    }else {
                      return and__3822__auto____13569
                    }
                  }else {
                    return and__3822__auto____13568
                  }
                }else {
                  return and__3822__auto____13567
                }
              }else {
                return and__3822__auto____13566
              }
            }else {
              return and__3822__auto____13565
            }
          }else {
            return and__3822__auto____13564
          }
        }())
      };
      var ep3__4 = function() {
        var G__13588__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____13572 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____13572)) {
              return cljs.core.every_QMARK_.call(null, function(p1__13384_SHARP_) {
                var and__3822__auto____13573 = p1.call(null, p1__13384_SHARP_);
                if(cljs.core.truth_(and__3822__auto____13573)) {
                  var and__3822__auto____13574 = p2.call(null, p1__13384_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____13574)) {
                    return p3.call(null, p1__13384_SHARP_)
                  }else {
                    return and__3822__auto____13574
                  }
                }else {
                  return and__3822__auto____13573
                }
              }, args)
            }else {
              return and__3822__auto____13572
            }
          }())
        };
        var G__13588 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13588__delegate.call(this, x, y, z, args)
        };
        G__13588.cljs$lang$maxFixedArity = 3;
        G__13588.cljs$lang$applyTo = function(arglist__13589) {
          var x = cljs.core.first(arglist__13589);
          var y = cljs.core.first(cljs.core.next(arglist__13589));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13589)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13589)));
          return G__13588__delegate(x, y, z, args)
        };
        G__13588.cljs$lang$arity$variadic = G__13588__delegate;
        return G__13588
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__13590__delegate = function(p1, p2, p3, ps) {
      var ps__13575 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__13385_SHARP_) {
            return p1__13385_SHARP_.call(null, x)
          }, ps__13575)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__13386_SHARP_) {
            var and__3822__auto____13580 = p1__13386_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____13580)) {
              return p1__13386_SHARP_.call(null, y)
            }else {
              return and__3822__auto____13580
            }
          }, ps__13575)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__13387_SHARP_) {
            var and__3822__auto____13581 = p1__13387_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____13581)) {
              var and__3822__auto____13582 = p1__13387_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____13582)) {
                return p1__13387_SHARP_.call(null, z)
              }else {
                return and__3822__auto____13582
              }
            }else {
              return and__3822__auto____13581
            }
          }, ps__13575)
        };
        var epn__4 = function() {
          var G__13591__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____13583 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____13583)) {
                return cljs.core.every_QMARK_.call(null, function(p1__13388_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__13388_SHARP_, args)
                }, ps__13575)
              }else {
                return and__3822__auto____13583
              }
            }())
          };
          var G__13591 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__13591__delegate.call(this, x, y, z, args)
          };
          G__13591.cljs$lang$maxFixedArity = 3;
          G__13591.cljs$lang$applyTo = function(arglist__13592) {
            var x = cljs.core.first(arglist__13592);
            var y = cljs.core.first(cljs.core.next(arglist__13592));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13592)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13592)));
            return G__13591__delegate(x, y, z, args)
          };
          G__13591.cljs$lang$arity$variadic = G__13591__delegate;
          return G__13591
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__13590 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13590__delegate.call(this, p1, p2, p3, ps)
    };
    G__13590.cljs$lang$maxFixedArity = 3;
    G__13590.cljs$lang$applyTo = function(arglist__13593) {
      var p1 = cljs.core.first(arglist__13593);
      var p2 = cljs.core.first(cljs.core.next(arglist__13593));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13593)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13593)));
      return G__13590__delegate(p1, p2, p3, ps)
    };
    G__13590.cljs$lang$arity$variadic = G__13590__delegate;
    return G__13590
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____13674 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13674)) {
          return or__3824__auto____13674
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____13675 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13675)) {
          return or__3824__auto____13675
        }else {
          var or__3824__auto____13676 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____13676)) {
            return or__3824__auto____13676
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__13745__delegate = function(x, y, z, args) {
          var or__3824__auto____13677 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____13677)) {
            return or__3824__auto____13677
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__13745 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13745__delegate.call(this, x, y, z, args)
        };
        G__13745.cljs$lang$maxFixedArity = 3;
        G__13745.cljs$lang$applyTo = function(arglist__13746) {
          var x = cljs.core.first(arglist__13746);
          var y = cljs.core.first(cljs.core.next(arglist__13746));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13746)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13746)));
          return G__13745__delegate(x, y, z, args)
        };
        G__13745.cljs$lang$arity$variadic = G__13745__delegate;
        return G__13745
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____13689 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13689)) {
          return or__3824__auto____13689
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____13690 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13690)) {
          return or__3824__auto____13690
        }else {
          var or__3824__auto____13691 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____13691)) {
            return or__3824__auto____13691
          }else {
            var or__3824__auto____13692 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____13692)) {
              return or__3824__auto____13692
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____13693 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13693)) {
          return or__3824__auto____13693
        }else {
          var or__3824__auto____13694 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____13694)) {
            return or__3824__auto____13694
          }else {
            var or__3824__auto____13695 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____13695)) {
              return or__3824__auto____13695
            }else {
              var or__3824__auto____13696 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____13696)) {
                return or__3824__auto____13696
              }else {
                var or__3824__auto____13697 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____13697)) {
                  return or__3824__auto____13697
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__13747__delegate = function(x, y, z, args) {
          var or__3824__auto____13698 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____13698)) {
            return or__3824__auto____13698
          }else {
            return cljs.core.some.call(null, function(p1__13428_SHARP_) {
              var or__3824__auto____13699 = p1.call(null, p1__13428_SHARP_);
              if(cljs.core.truth_(or__3824__auto____13699)) {
                return or__3824__auto____13699
              }else {
                return p2.call(null, p1__13428_SHARP_)
              }
            }, args)
          }
        };
        var G__13747 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13747__delegate.call(this, x, y, z, args)
        };
        G__13747.cljs$lang$maxFixedArity = 3;
        G__13747.cljs$lang$applyTo = function(arglist__13748) {
          var x = cljs.core.first(arglist__13748);
          var y = cljs.core.first(cljs.core.next(arglist__13748));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13748)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13748)));
          return G__13747__delegate(x, y, z, args)
        };
        G__13747.cljs$lang$arity$variadic = G__13747__delegate;
        return G__13747
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____13718 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13718)) {
          return or__3824__auto____13718
        }else {
          var or__3824__auto____13719 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____13719)) {
            return or__3824__auto____13719
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____13720 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13720)) {
          return or__3824__auto____13720
        }else {
          var or__3824__auto____13721 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____13721)) {
            return or__3824__auto____13721
          }else {
            var or__3824__auto____13722 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____13722)) {
              return or__3824__auto____13722
            }else {
              var or__3824__auto____13723 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____13723)) {
                return or__3824__auto____13723
              }else {
                var or__3824__auto____13724 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____13724)) {
                  return or__3824__auto____13724
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____13725 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13725)) {
          return or__3824__auto____13725
        }else {
          var or__3824__auto____13726 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____13726)) {
            return or__3824__auto____13726
          }else {
            var or__3824__auto____13727 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____13727)) {
              return or__3824__auto____13727
            }else {
              var or__3824__auto____13728 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____13728)) {
                return or__3824__auto____13728
              }else {
                var or__3824__auto____13729 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____13729)) {
                  return or__3824__auto____13729
                }else {
                  var or__3824__auto____13730 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____13730)) {
                    return or__3824__auto____13730
                  }else {
                    var or__3824__auto____13731 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____13731)) {
                      return or__3824__auto____13731
                    }else {
                      var or__3824__auto____13732 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____13732)) {
                        return or__3824__auto____13732
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__13749__delegate = function(x, y, z, args) {
          var or__3824__auto____13733 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____13733)) {
            return or__3824__auto____13733
          }else {
            return cljs.core.some.call(null, function(p1__13429_SHARP_) {
              var or__3824__auto____13734 = p1.call(null, p1__13429_SHARP_);
              if(cljs.core.truth_(or__3824__auto____13734)) {
                return or__3824__auto____13734
              }else {
                var or__3824__auto____13735 = p2.call(null, p1__13429_SHARP_);
                if(cljs.core.truth_(or__3824__auto____13735)) {
                  return or__3824__auto____13735
                }else {
                  return p3.call(null, p1__13429_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__13749 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13749__delegate.call(this, x, y, z, args)
        };
        G__13749.cljs$lang$maxFixedArity = 3;
        G__13749.cljs$lang$applyTo = function(arglist__13750) {
          var x = cljs.core.first(arglist__13750);
          var y = cljs.core.first(cljs.core.next(arglist__13750));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13750)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13750)));
          return G__13749__delegate(x, y, z, args)
        };
        G__13749.cljs$lang$arity$variadic = G__13749__delegate;
        return G__13749
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__13751__delegate = function(p1, p2, p3, ps) {
      var ps__13736 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__13430_SHARP_) {
            return p1__13430_SHARP_.call(null, x)
          }, ps__13736)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__13431_SHARP_) {
            var or__3824__auto____13741 = p1__13431_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____13741)) {
              return or__3824__auto____13741
            }else {
              return p1__13431_SHARP_.call(null, y)
            }
          }, ps__13736)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__13432_SHARP_) {
            var or__3824__auto____13742 = p1__13432_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____13742)) {
              return or__3824__auto____13742
            }else {
              var or__3824__auto____13743 = p1__13432_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____13743)) {
                return or__3824__auto____13743
              }else {
                return p1__13432_SHARP_.call(null, z)
              }
            }
          }, ps__13736)
        };
        var spn__4 = function() {
          var G__13752__delegate = function(x, y, z, args) {
            var or__3824__auto____13744 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____13744)) {
              return or__3824__auto____13744
            }else {
              return cljs.core.some.call(null, function(p1__13433_SHARP_) {
                return cljs.core.some.call(null, p1__13433_SHARP_, args)
              }, ps__13736)
            }
          };
          var G__13752 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__13752__delegate.call(this, x, y, z, args)
          };
          G__13752.cljs$lang$maxFixedArity = 3;
          G__13752.cljs$lang$applyTo = function(arglist__13753) {
            var x = cljs.core.first(arglist__13753);
            var y = cljs.core.first(cljs.core.next(arglist__13753));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13753)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13753)));
            return G__13752__delegate(x, y, z, args)
          };
          G__13752.cljs$lang$arity$variadic = G__13752__delegate;
          return G__13752
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__13751 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13751__delegate.call(this, p1, p2, p3, ps)
    };
    G__13751.cljs$lang$maxFixedArity = 3;
    G__13751.cljs$lang$applyTo = function(arglist__13754) {
      var p1 = cljs.core.first(arglist__13754);
      var p2 = cljs.core.first(cljs.core.next(arglist__13754));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13754)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13754)));
      return G__13751__delegate(p1, p2, p3, ps)
    };
    G__13751.cljs$lang$arity$variadic = G__13751__delegate;
    return G__13751
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____13773 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____13773) {
        var s__13774 = temp__3974__auto____13773;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__13774)) {
          var c__13775 = cljs.core.chunk_first.call(null, s__13774);
          var size__13776 = cljs.core.count.call(null, c__13775);
          var b__13777 = cljs.core.chunk_buffer.call(null, size__13776);
          var n__2428__auto____13778 = size__13776;
          var i__13779 = 0;
          while(true) {
            if(i__13779 < n__2428__auto____13778) {
              cljs.core.chunk_append.call(null, b__13777, f.call(null, cljs.core._nth.call(null, c__13775, i__13779)));
              var G__13791 = i__13779 + 1;
              i__13779 = G__13791;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13777), map.call(null, f, cljs.core.chunk_rest.call(null, s__13774)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__13774)), map.call(null, f, cljs.core.rest.call(null, s__13774)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__13780 = cljs.core.seq.call(null, c1);
      var s2__13781 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____13782 = s1__13780;
        if(and__3822__auto____13782) {
          return s2__13781
        }else {
          return and__3822__auto____13782
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__13780), cljs.core.first.call(null, s2__13781)), map.call(null, f, cljs.core.rest.call(null, s1__13780), cljs.core.rest.call(null, s2__13781)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__13783 = cljs.core.seq.call(null, c1);
      var s2__13784 = cljs.core.seq.call(null, c2);
      var s3__13785 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____13786 = s1__13783;
        if(and__3822__auto____13786) {
          var and__3822__auto____13787 = s2__13784;
          if(and__3822__auto____13787) {
            return s3__13785
          }else {
            return and__3822__auto____13787
          }
        }else {
          return and__3822__auto____13786
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__13783), cljs.core.first.call(null, s2__13784), cljs.core.first.call(null, s3__13785)), map.call(null, f, cljs.core.rest.call(null, s1__13783), cljs.core.rest.call(null, s2__13784), cljs.core.rest.call(null, s3__13785)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__13792__delegate = function(f, c1, c2, c3, colls) {
      var step__13790 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__13789 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__13789)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__13789), step.call(null, map.call(null, cljs.core.rest, ss__13789)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__13594_SHARP_) {
        return cljs.core.apply.call(null, f, p1__13594_SHARP_)
      }, step__13790.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__13792 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__13792__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__13792.cljs$lang$maxFixedArity = 4;
    G__13792.cljs$lang$applyTo = function(arglist__13793) {
      var f = cljs.core.first(arglist__13793);
      var c1 = cljs.core.first(cljs.core.next(arglist__13793));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13793)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13793))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13793))));
      return G__13792__delegate(f, c1, c2, c3, colls)
    };
    G__13792.cljs$lang$arity$variadic = G__13792__delegate;
    return G__13792
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____13796 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____13796) {
        var s__13797 = temp__3974__auto____13796;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__13797), take.call(null, n - 1, cljs.core.rest.call(null, s__13797)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__13803 = function(n, coll) {
    while(true) {
      var s__13801 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____13802 = n > 0;
        if(and__3822__auto____13802) {
          return s__13801
        }else {
          return and__3822__auto____13802
        }
      }())) {
        var G__13804 = n - 1;
        var G__13805 = cljs.core.rest.call(null, s__13801);
        n = G__13804;
        coll = G__13805;
        continue
      }else {
        return s__13801
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__13803.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__13808 = cljs.core.seq.call(null, coll);
  var lead__13809 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__13809) {
      var G__13810 = cljs.core.next.call(null, s__13808);
      var G__13811 = cljs.core.next.call(null, lead__13809);
      s__13808 = G__13810;
      lead__13809 = G__13811;
      continue
    }else {
      return s__13808
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__13817 = function(pred, coll) {
    while(true) {
      var s__13815 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____13816 = s__13815;
        if(and__3822__auto____13816) {
          return pred.call(null, cljs.core.first.call(null, s__13815))
        }else {
          return and__3822__auto____13816
        }
      }())) {
        var G__13818 = pred;
        var G__13819 = cljs.core.rest.call(null, s__13815);
        pred = G__13818;
        coll = G__13819;
        continue
      }else {
        return s__13815
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__13817.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____13822 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____13822) {
      var s__13823 = temp__3974__auto____13822;
      return cljs.core.concat.call(null, s__13823, cycle.call(null, s__13823))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__13828 = cljs.core.seq.call(null, c1);
      var s2__13829 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____13830 = s1__13828;
        if(and__3822__auto____13830) {
          return s2__13829
        }else {
          return and__3822__auto____13830
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__13828), cljs.core.cons.call(null, cljs.core.first.call(null, s2__13829), interleave.call(null, cljs.core.rest.call(null, s1__13828), cljs.core.rest.call(null, s2__13829))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__13832__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__13831 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__13831)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__13831), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__13831)))
        }else {
          return null
        }
      }, null)
    };
    var G__13832 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13832__delegate.call(this, c1, c2, colls)
    };
    G__13832.cljs$lang$maxFixedArity = 2;
    G__13832.cljs$lang$applyTo = function(arglist__13833) {
      var c1 = cljs.core.first(arglist__13833);
      var c2 = cljs.core.first(cljs.core.next(arglist__13833));
      var colls = cljs.core.rest(cljs.core.next(arglist__13833));
      return G__13832__delegate(c1, c2, colls)
    };
    G__13832.cljs$lang$arity$variadic = G__13832__delegate;
    return G__13832
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__13843 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____13841 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____13841) {
        var coll__13842 = temp__3971__auto____13841;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__13842), cat.call(null, cljs.core.rest.call(null, coll__13842), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__13843.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__13844__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__13844 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13844__delegate.call(this, f, coll, colls)
    };
    G__13844.cljs$lang$maxFixedArity = 2;
    G__13844.cljs$lang$applyTo = function(arglist__13845) {
      var f = cljs.core.first(arglist__13845);
      var coll = cljs.core.first(cljs.core.next(arglist__13845));
      var colls = cljs.core.rest(cljs.core.next(arglist__13845));
      return G__13844__delegate(f, coll, colls)
    };
    G__13844.cljs$lang$arity$variadic = G__13844__delegate;
    return G__13844
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____13855 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____13855) {
      var s__13856 = temp__3974__auto____13855;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__13856)) {
        var c__13857 = cljs.core.chunk_first.call(null, s__13856);
        var size__13858 = cljs.core.count.call(null, c__13857);
        var b__13859 = cljs.core.chunk_buffer.call(null, size__13858);
        var n__2428__auto____13860 = size__13858;
        var i__13861 = 0;
        while(true) {
          if(i__13861 < n__2428__auto____13860) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__13857, i__13861)))) {
              cljs.core.chunk_append.call(null, b__13859, cljs.core._nth.call(null, c__13857, i__13861))
            }else {
            }
            var G__13864 = i__13861 + 1;
            i__13861 = G__13864;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13859), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__13856)))
      }else {
        var f__13862 = cljs.core.first.call(null, s__13856);
        var r__13863 = cljs.core.rest.call(null, s__13856);
        if(cljs.core.truth_(pred.call(null, f__13862))) {
          return cljs.core.cons.call(null, f__13862, filter.call(null, pred, r__13863))
        }else {
          return filter.call(null, pred, r__13863)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__13867 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__13867.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__13865_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__13865_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__13871__13872 = to;
    if(G__13871__13872) {
      if(function() {
        var or__3824__auto____13873 = G__13871__13872.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____13873) {
          return or__3824__auto____13873
        }else {
          return G__13871__13872.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__13871__13872.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__13871__13872)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__13871__13872)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__13874__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__13874 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__13874__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__13874.cljs$lang$maxFixedArity = 4;
    G__13874.cljs$lang$applyTo = function(arglist__13875) {
      var f = cljs.core.first(arglist__13875);
      var c1 = cljs.core.first(cljs.core.next(arglist__13875));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13875)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13875))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13875))));
      return G__13874__delegate(f, c1, c2, c3, colls)
    };
    G__13874.cljs$lang$arity$variadic = G__13874__delegate;
    return G__13874
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____13882 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____13882) {
        var s__13883 = temp__3974__auto____13882;
        var p__13884 = cljs.core.take.call(null, n, s__13883);
        if(n === cljs.core.count.call(null, p__13884)) {
          return cljs.core.cons.call(null, p__13884, partition.call(null, n, step, cljs.core.drop.call(null, step, s__13883)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____13885 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____13885) {
        var s__13886 = temp__3974__auto____13885;
        var p__13887 = cljs.core.take.call(null, n, s__13886);
        if(n === cljs.core.count.call(null, p__13887)) {
          return cljs.core.cons.call(null, p__13887, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__13886)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__13887, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__13892 = cljs.core.lookup_sentinel;
    var m__13893 = m;
    var ks__13894 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__13894) {
        var m__13895 = cljs.core._lookup.call(null, m__13893, cljs.core.first.call(null, ks__13894), sentinel__13892);
        if(sentinel__13892 === m__13895) {
          return not_found
        }else {
          var G__13896 = sentinel__13892;
          var G__13897 = m__13895;
          var G__13898 = cljs.core.next.call(null, ks__13894);
          sentinel__13892 = G__13896;
          m__13893 = G__13897;
          ks__13894 = G__13898;
          continue
        }
      }else {
        return m__13893
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__13899, v) {
  var vec__13904__13905 = p__13899;
  var k__13906 = cljs.core.nth.call(null, vec__13904__13905, 0, null);
  var ks__13907 = cljs.core.nthnext.call(null, vec__13904__13905, 1);
  if(cljs.core.truth_(ks__13907)) {
    return cljs.core.assoc.call(null, m, k__13906, assoc_in.call(null, cljs.core._lookup.call(null, m, k__13906, null), ks__13907, v))
  }else {
    return cljs.core.assoc.call(null, m, k__13906, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__13908, f, args) {
    var vec__13913__13914 = p__13908;
    var k__13915 = cljs.core.nth.call(null, vec__13913__13914, 0, null);
    var ks__13916 = cljs.core.nthnext.call(null, vec__13913__13914, 1);
    if(cljs.core.truth_(ks__13916)) {
      return cljs.core.assoc.call(null, m, k__13915, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__13915, null), ks__13916, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__13915, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__13915, null), args))
    }
  };
  var update_in = function(m, p__13908, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__13908, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__13917) {
    var m = cljs.core.first(arglist__13917);
    var p__13908 = cljs.core.first(cljs.core.next(arglist__13917));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13917)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13917)));
    return update_in__delegate(m, p__13908, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13920 = this;
  var h__2093__auto____13921 = this__13920.__hash;
  if(!(h__2093__auto____13921 == null)) {
    return h__2093__auto____13921
  }else {
    var h__2093__auto____13922 = cljs.core.hash_coll.call(null, coll);
    this__13920.__hash = h__2093__auto____13922;
    return h__2093__auto____13922
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13923 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13924 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__13925 = this;
  var new_array__13926 = this__13925.array.slice();
  new_array__13926[k] = v;
  return new cljs.core.Vector(this__13925.meta, new_array__13926, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__13957 = null;
  var G__13957__2 = function(this_sym13927, k) {
    var this__13929 = this;
    var this_sym13927__13930 = this;
    var coll__13931 = this_sym13927__13930;
    return coll__13931.cljs$core$ILookup$_lookup$arity$2(coll__13931, k)
  };
  var G__13957__3 = function(this_sym13928, k, not_found) {
    var this__13929 = this;
    var this_sym13928__13932 = this;
    var coll__13933 = this_sym13928__13932;
    return coll__13933.cljs$core$ILookup$_lookup$arity$3(coll__13933, k, not_found)
  };
  G__13957 = function(this_sym13928, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13957__2.call(this, this_sym13928, k);
      case 3:
        return G__13957__3.call(this, this_sym13928, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13957
}();
cljs.core.Vector.prototype.apply = function(this_sym13918, args13919) {
  var this__13934 = this;
  return this_sym13918.call.apply(this_sym13918, [this_sym13918].concat(args13919.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13935 = this;
  var new_array__13936 = this__13935.array.slice();
  new_array__13936.push(o);
  return new cljs.core.Vector(this__13935.meta, new_array__13936, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__13937 = this;
  var this__13938 = this;
  return cljs.core.pr_str.call(null, this__13938)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__13939 = this;
  return cljs.core.ci_reduce.call(null, this__13939.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__13940 = this;
  return cljs.core.ci_reduce.call(null, this__13940.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13941 = this;
  if(this__13941.array.length > 0) {
    var vector_seq__13942 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__13941.array.length) {
          return cljs.core.cons.call(null, this__13941.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__13942.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13943 = this;
  return this__13943.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__13944 = this;
  var count__13945 = this__13944.array.length;
  if(count__13945 > 0) {
    return this__13944.array[count__13945 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__13946 = this;
  if(this__13946.array.length > 0) {
    var new_array__13947 = this__13946.array.slice();
    new_array__13947.pop();
    return new cljs.core.Vector(this__13946.meta, new_array__13947, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__13948 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13949 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13950 = this;
  return new cljs.core.Vector(meta, this__13950.array, this__13950.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13951 = this;
  return this__13951.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__13952 = this;
  if(function() {
    var and__3822__auto____13953 = 0 <= n;
    if(and__3822__auto____13953) {
      return n < this__13952.array.length
    }else {
      return and__3822__auto____13953
    }
  }()) {
    return this__13952.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__13954 = this;
  if(function() {
    var and__3822__auto____13955 = 0 <= n;
    if(and__3822__auto____13955) {
      return n < this__13954.array.length
    }else {
      return and__3822__auto____13955
    }
  }()) {
    return this__13954.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13956 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__13956.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2211__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__13959 = pv.cnt;
  if(cnt__13959 < 32) {
    return 0
  }else {
    return cnt__13959 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__13965 = level;
  var ret__13966 = node;
  while(true) {
    if(ll__13965 === 0) {
      return ret__13966
    }else {
      var embed__13967 = ret__13966;
      var r__13968 = cljs.core.pv_fresh_node.call(null, edit);
      var ___13969 = cljs.core.pv_aset.call(null, r__13968, 0, embed__13967);
      var G__13970 = ll__13965 - 5;
      var G__13971 = r__13968;
      ll__13965 = G__13970;
      ret__13966 = G__13971;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__13977 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__13978 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__13977, subidx__13978, tailnode);
    return ret__13977
  }else {
    var child__13979 = cljs.core.pv_aget.call(null, parent, subidx__13978);
    if(!(child__13979 == null)) {
      var node_to_insert__13980 = push_tail.call(null, pv, level - 5, child__13979, tailnode);
      cljs.core.pv_aset.call(null, ret__13977, subidx__13978, node_to_insert__13980);
      return ret__13977
    }else {
      var node_to_insert__13981 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__13977, subidx__13978, node_to_insert__13981);
      return ret__13977
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____13985 = 0 <= i;
    if(and__3822__auto____13985) {
      return i < pv.cnt
    }else {
      return and__3822__auto____13985
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__13986 = pv.root;
      var level__13987 = pv.shift;
      while(true) {
        if(level__13987 > 0) {
          var G__13988 = cljs.core.pv_aget.call(null, node__13986, i >>> level__13987 & 31);
          var G__13989 = level__13987 - 5;
          node__13986 = G__13988;
          level__13987 = G__13989;
          continue
        }else {
          return node__13986.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__13992 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__13992, i & 31, val);
    return ret__13992
  }else {
    var subidx__13993 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__13992, subidx__13993, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__13993), i, val));
    return ret__13992
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__13999 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__14000 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__13999));
    if(function() {
      var and__3822__auto____14001 = new_child__14000 == null;
      if(and__3822__auto____14001) {
        return subidx__13999 === 0
      }else {
        return and__3822__auto____14001
      }
    }()) {
      return null
    }else {
      var ret__14002 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__14002, subidx__13999, new_child__14000);
      return ret__14002
    }
  }else {
    if(subidx__13999 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__14003 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__14003, subidx__13999, null);
        return ret__14003
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__14006 = this;
  return new cljs.core.TransientVector(this__14006.cnt, this__14006.shift, cljs.core.tv_editable_root.call(null, this__14006.root), cljs.core.tv_editable_tail.call(null, this__14006.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14007 = this;
  var h__2093__auto____14008 = this__14007.__hash;
  if(!(h__2093__auto____14008 == null)) {
    return h__2093__auto____14008
  }else {
    var h__2093__auto____14009 = cljs.core.hash_coll.call(null, coll);
    this__14007.__hash = h__2093__auto____14009;
    return h__2093__auto____14009
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__14010 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__14011 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__14012 = this;
  if(function() {
    var and__3822__auto____14013 = 0 <= k;
    if(and__3822__auto____14013) {
      return k < this__14012.cnt
    }else {
      return and__3822__auto____14013
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__14014 = this__14012.tail.slice();
      new_tail__14014[k & 31] = v;
      return new cljs.core.PersistentVector(this__14012.meta, this__14012.cnt, this__14012.shift, this__14012.root, new_tail__14014, null)
    }else {
      return new cljs.core.PersistentVector(this__14012.meta, this__14012.cnt, this__14012.shift, cljs.core.do_assoc.call(null, coll, this__14012.shift, this__14012.root, k, v), this__14012.tail, null)
    }
  }else {
    if(k === this__14012.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__14012.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__14062 = null;
  var G__14062__2 = function(this_sym14015, k) {
    var this__14017 = this;
    var this_sym14015__14018 = this;
    var coll__14019 = this_sym14015__14018;
    return coll__14019.cljs$core$ILookup$_lookup$arity$2(coll__14019, k)
  };
  var G__14062__3 = function(this_sym14016, k, not_found) {
    var this__14017 = this;
    var this_sym14016__14020 = this;
    var coll__14021 = this_sym14016__14020;
    return coll__14021.cljs$core$ILookup$_lookup$arity$3(coll__14021, k, not_found)
  };
  G__14062 = function(this_sym14016, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14062__2.call(this, this_sym14016, k);
      case 3:
        return G__14062__3.call(this, this_sym14016, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14062
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym14004, args14005) {
  var this__14022 = this;
  return this_sym14004.call.apply(this_sym14004, [this_sym14004].concat(args14005.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__14023 = this;
  var step_init__14024 = [0, init];
  var i__14025 = 0;
  while(true) {
    if(i__14025 < this__14023.cnt) {
      var arr__14026 = cljs.core.array_for.call(null, v, i__14025);
      var len__14027 = arr__14026.length;
      var init__14031 = function() {
        var j__14028 = 0;
        var init__14029 = step_init__14024[1];
        while(true) {
          if(j__14028 < len__14027) {
            var init__14030 = f.call(null, init__14029, j__14028 + i__14025, arr__14026[j__14028]);
            if(cljs.core.reduced_QMARK_.call(null, init__14030)) {
              return init__14030
            }else {
              var G__14063 = j__14028 + 1;
              var G__14064 = init__14030;
              j__14028 = G__14063;
              init__14029 = G__14064;
              continue
            }
          }else {
            step_init__14024[0] = len__14027;
            step_init__14024[1] = init__14029;
            return init__14029
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__14031)) {
        return cljs.core.deref.call(null, init__14031)
      }else {
        var G__14065 = i__14025 + step_init__14024[0];
        i__14025 = G__14065;
        continue
      }
    }else {
      return step_init__14024[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14032 = this;
  if(this__14032.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__14033 = this__14032.tail.slice();
    new_tail__14033.push(o);
    return new cljs.core.PersistentVector(this__14032.meta, this__14032.cnt + 1, this__14032.shift, this__14032.root, new_tail__14033, null)
  }else {
    var root_overflow_QMARK___14034 = this__14032.cnt >>> 5 > 1 << this__14032.shift;
    var new_shift__14035 = root_overflow_QMARK___14034 ? this__14032.shift + 5 : this__14032.shift;
    var new_root__14037 = root_overflow_QMARK___14034 ? function() {
      var n_r__14036 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__14036, 0, this__14032.root);
      cljs.core.pv_aset.call(null, n_r__14036, 1, cljs.core.new_path.call(null, null, this__14032.shift, new cljs.core.VectorNode(null, this__14032.tail)));
      return n_r__14036
    }() : cljs.core.push_tail.call(null, coll, this__14032.shift, this__14032.root, new cljs.core.VectorNode(null, this__14032.tail));
    return new cljs.core.PersistentVector(this__14032.meta, this__14032.cnt + 1, new_shift__14035, new_root__14037, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__14038 = this;
  if(this__14038.cnt > 0) {
    return new cljs.core.RSeq(coll, this__14038.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__14039 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__14040 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__14041 = this;
  var this__14042 = this;
  return cljs.core.pr_str.call(null, this__14042)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__14043 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__14044 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14045 = this;
  if(this__14045.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14046 = this;
  return this__14046.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__14047 = this;
  if(this__14047.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__14047.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__14048 = this;
  if(this__14048.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__14048.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__14048.meta)
    }else {
      if(1 < this__14048.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__14048.meta, this__14048.cnt - 1, this__14048.shift, this__14048.root, this__14048.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__14049 = cljs.core.array_for.call(null, coll, this__14048.cnt - 2);
          var nr__14050 = cljs.core.pop_tail.call(null, coll, this__14048.shift, this__14048.root);
          var new_root__14051 = nr__14050 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__14050;
          var cnt_1__14052 = this__14048.cnt - 1;
          if(function() {
            var and__3822__auto____14053 = 5 < this__14048.shift;
            if(and__3822__auto____14053) {
              return cljs.core.pv_aget.call(null, new_root__14051, 1) == null
            }else {
              return and__3822__auto____14053
            }
          }()) {
            return new cljs.core.PersistentVector(this__14048.meta, cnt_1__14052, this__14048.shift - 5, cljs.core.pv_aget.call(null, new_root__14051, 0), new_tail__14049, null)
          }else {
            return new cljs.core.PersistentVector(this__14048.meta, cnt_1__14052, this__14048.shift, new_root__14051, new_tail__14049, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__14054 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14055 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14056 = this;
  return new cljs.core.PersistentVector(meta, this__14056.cnt, this__14056.shift, this__14056.root, this__14056.tail, this__14056.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14057 = this;
  return this__14057.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__14058 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__14059 = this;
  if(function() {
    var and__3822__auto____14060 = 0 <= n;
    if(and__3822__auto____14060) {
      return n < this__14059.cnt
    }else {
      return and__3822__auto____14060
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14061 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__14061.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__14066 = xs.length;
  var xs__14067 = no_clone === true ? xs : xs.slice();
  if(l__14066 < 32) {
    return new cljs.core.PersistentVector(null, l__14066, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__14067, null)
  }else {
    var node__14068 = xs__14067.slice(0, 32);
    var v__14069 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__14068, null);
    var i__14070 = 32;
    var out__14071 = cljs.core._as_transient.call(null, v__14069);
    while(true) {
      if(i__14070 < l__14066) {
        var G__14072 = i__14070 + 1;
        var G__14073 = cljs.core.conj_BANG_.call(null, out__14071, xs__14067[i__14070]);
        i__14070 = G__14072;
        out__14071 = G__14073;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__14071)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__14074) {
    var args = cljs.core.seq(arglist__14074);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__14075 = this;
  if(this__14075.off + 1 < this__14075.node.length) {
    var s__14076 = cljs.core.chunked_seq.call(null, this__14075.vec, this__14075.node, this__14075.i, this__14075.off + 1);
    if(s__14076 == null) {
      return null
    }else {
      return s__14076
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14077 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14078 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__14079 = this;
  return this__14079.node[this__14079.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__14080 = this;
  if(this__14080.off + 1 < this__14080.node.length) {
    var s__14081 = cljs.core.chunked_seq.call(null, this__14080.vec, this__14080.node, this__14080.i, this__14080.off + 1);
    if(s__14081 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__14081
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__14082 = this;
  var l__14083 = this__14082.node.length;
  var s__14084 = this__14082.i + l__14083 < cljs.core._count.call(null, this__14082.vec) ? cljs.core.chunked_seq.call(null, this__14082.vec, this__14082.i + l__14083, 0) : null;
  if(s__14084 == null) {
    return null
  }else {
    return s__14084
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14085 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__14086 = this;
  return cljs.core.chunked_seq.call(null, this__14086.vec, this__14086.node, this__14086.i, this__14086.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__14087 = this;
  return this__14087.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14088 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__14088.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__14089 = this;
  return cljs.core.array_chunk.call(null, this__14089.node, this__14089.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__14090 = this;
  var l__14091 = this__14090.node.length;
  var s__14092 = this__14090.i + l__14091 < cljs.core._count.call(null, this__14090.vec) ? cljs.core.chunked_seq.call(null, this__14090.vec, this__14090.i + l__14091, 0) : null;
  if(s__14092 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__14092
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14095 = this;
  var h__2093__auto____14096 = this__14095.__hash;
  if(!(h__2093__auto____14096 == null)) {
    return h__2093__auto____14096
  }else {
    var h__2093__auto____14097 = cljs.core.hash_coll.call(null, coll);
    this__14095.__hash = h__2093__auto____14097;
    return h__2093__auto____14097
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__14098 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__14099 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__14100 = this;
  var v_pos__14101 = this__14100.start + key;
  return new cljs.core.Subvec(this__14100.meta, cljs.core._assoc.call(null, this__14100.v, v_pos__14101, val), this__14100.start, this__14100.end > v_pos__14101 + 1 ? this__14100.end : v_pos__14101 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__14127 = null;
  var G__14127__2 = function(this_sym14102, k) {
    var this__14104 = this;
    var this_sym14102__14105 = this;
    var coll__14106 = this_sym14102__14105;
    return coll__14106.cljs$core$ILookup$_lookup$arity$2(coll__14106, k)
  };
  var G__14127__3 = function(this_sym14103, k, not_found) {
    var this__14104 = this;
    var this_sym14103__14107 = this;
    var coll__14108 = this_sym14103__14107;
    return coll__14108.cljs$core$ILookup$_lookup$arity$3(coll__14108, k, not_found)
  };
  G__14127 = function(this_sym14103, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14127__2.call(this, this_sym14103, k);
      case 3:
        return G__14127__3.call(this, this_sym14103, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14127
}();
cljs.core.Subvec.prototype.apply = function(this_sym14093, args14094) {
  var this__14109 = this;
  return this_sym14093.call.apply(this_sym14093, [this_sym14093].concat(args14094.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14110 = this;
  return new cljs.core.Subvec(this__14110.meta, cljs.core._assoc_n.call(null, this__14110.v, this__14110.end, o), this__14110.start, this__14110.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__14111 = this;
  var this__14112 = this;
  return cljs.core.pr_str.call(null, this__14112)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__14113 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__14114 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14115 = this;
  var subvec_seq__14116 = function subvec_seq(i) {
    if(i === this__14115.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__14115.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__14116.call(null, this__14115.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14117 = this;
  return this__14117.end - this__14117.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__14118 = this;
  return cljs.core._nth.call(null, this__14118.v, this__14118.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__14119 = this;
  if(this__14119.start === this__14119.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__14119.meta, this__14119.v, this__14119.start, this__14119.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__14120 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14121 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14122 = this;
  return new cljs.core.Subvec(meta, this__14122.v, this__14122.start, this__14122.end, this__14122.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14123 = this;
  return this__14123.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__14124 = this;
  return cljs.core._nth.call(null, this__14124.v, this__14124.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__14125 = this;
  return cljs.core._nth.call(null, this__14125.v, this__14125.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14126 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__14126.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__14129 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__14129, 0, tl.length);
  return ret__14129
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__14133 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__14134 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__14133, subidx__14134, level === 5 ? tail_node : function() {
    var child__14135 = cljs.core.pv_aget.call(null, ret__14133, subidx__14134);
    if(!(child__14135 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__14135, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__14133
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__14140 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__14141 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__14142 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__14140, subidx__14141));
    if(function() {
      var and__3822__auto____14143 = new_child__14142 == null;
      if(and__3822__auto____14143) {
        return subidx__14141 === 0
      }else {
        return and__3822__auto____14143
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__14140, subidx__14141, new_child__14142);
      return node__14140
    }
  }else {
    if(subidx__14141 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__14140, subidx__14141, null);
        return node__14140
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____14148 = 0 <= i;
    if(and__3822__auto____14148) {
      return i < tv.cnt
    }else {
      return and__3822__auto____14148
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__14149 = tv.root;
      var node__14150 = root__14149;
      var level__14151 = tv.shift;
      while(true) {
        if(level__14151 > 0) {
          var G__14152 = cljs.core.tv_ensure_editable.call(null, root__14149.edit, cljs.core.pv_aget.call(null, node__14150, i >>> level__14151 & 31));
          var G__14153 = level__14151 - 5;
          node__14150 = G__14152;
          level__14151 = G__14153;
          continue
        }else {
          return node__14150.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__14193 = null;
  var G__14193__2 = function(this_sym14156, k) {
    var this__14158 = this;
    var this_sym14156__14159 = this;
    var coll__14160 = this_sym14156__14159;
    return coll__14160.cljs$core$ILookup$_lookup$arity$2(coll__14160, k)
  };
  var G__14193__3 = function(this_sym14157, k, not_found) {
    var this__14158 = this;
    var this_sym14157__14161 = this;
    var coll__14162 = this_sym14157__14161;
    return coll__14162.cljs$core$ILookup$_lookup$arity$3(coll__14162, k, not_found)
  };
  G__14193 = function(this_sym14157, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14193__2.call(this, this_sym14157, k);
      case 3:
        return G__14193__3.call(this, this_sym14157, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14193
}();
cljs.core.TransientVector.prototype.apply = function(this_sym14154, args14155) {
  var this__14163 = this;
  return this_sym14154.call.apply(this_sym14154, [this_sym14154].concat(args14155.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__14164 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__14165 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__14166 = this;
  if(this__14166.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__14167 = this;
  if(function() {
    var and__3822__auto____14168 = 0 <= n;
    if(and__3822__auto____14168) {
      return n < this__14167.cnt
    }else {
      return and__3822__auto____14168
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14169 = this;
  if(this__14169.root.edit) {
    return this__14169.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__14170 = this;
  if(this__14170.root.edit) {
    if(function() {
      var and__3822__auto____14171 = 0 <= n;
      if(and__3822__auto____14171) {
        return n < this__14170.cnt
      }else {
        return and__3822__auto____14171
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__14170.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__14176 = function go(level, node) {
          var node__14174 = cljs.core.tv_ensure_editable.call(null, this__14170.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__14174, n & 31, val);
            return node__14174
          }else {
            var subidx__14175 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__14174, subidx__14175, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__14174, subidx__14175)));
            return node__14174
          }
        }.call(null, this__14170.shift, this__14170.root);
        this__14170.root = new_root__14176;
        return tcoll
      }
    }else {
      if(n === this__14170.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__14170.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__14177 = this;
  if(this__14177.root.edit) {
    if(this__14177.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__14177.cnt) {
        this__14177.cnt = 0;
        return tcoll
      }else {
        if((this__14177.cnt - 1 & 31) > 0) {
          this__14177.cnt = this__14177.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__14178 = cljs.core.editable_array_for.call(null, tcoll, this__14177.cnt - 2);
            var new_root__14180 = function() {
              var nr__14179 = cljs.core.tv_pop_tail.call(null, tcoll, this__14177.shift, this__14177.root);
              if(!(nr__14179 == null)) {
                return nr__14179
              }else {
                return new cljs.core.VectorNode(this__14177.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____14181 = 5 < this__14177.shift;
              if(and__3822__auto____14181) {
                return cljs.core.pv_aget.call(null, new_root__14180, 1) == null
              }else {
                return and__3822__auto____14181
              }
            }()) {
              var new_root__14182 = cljs.core.tv_ensure_editable.call(null, this__14177.root.edit, cljs.core.pv_aget.call(null, new_root__14180, 0));
              this__14177.root = new_root__14182;
              this__14177.shift = this__14177.shift - 5;
              this__14177.cnt = this__14177.cnt - 1;
              this__14177.tail = new_tail__14178;
              return tcoll
            }else {
              this__14177.root = new_root__14180;
              this__14177.cnt = this__14177.cnt - 1;
              this__14177.tail = new_tail__14178;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__14183 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__14184 = this;
  if(this__14184.root.edit) {
    if(this__14184.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__14184.tail[this__14184.cnt & 31] = o;
      this__14184.cnt = this__14184.cnt + 1;
      return tcoll
    }else {
      var tail_node__14185 = new cljs.core.VectorNode(this__14184.root.edit, this__14184.tail);
      var new_tail__14186 = cljs.core.make_array.call(null, 32);
      new_tail__14186[0] = o;
      this__14184.tail = new_tail__14186;
      if(this__14184.cnt >>> 5 > 1 << this__14184.shift) {
        var new_root_array__14187 = cljs.core.make_array.call(null, 32);
        var new_shift__14188 = this__14184.shift + 5;
        new_root_array__14187[0] = this__14184.root;
        new_root_array__14187[1] = cljs.core.new_path.call(null, this__14184.root.edit, this__14184.shift, tail_node__14185);
        this__14184.root = new cljs.core.VectorNode(this__14184.root.edit, new_root_array__14187);
        this__14184.shift = new_shift__14188;
        this__14184.cnt = this__14184.cnt + 1;
        return tcoll
      }else {
        var new_root__14189 = cljs.core.tv_push_tail.call(null, tcoll, this__14184.shift, this__14184.root, tail_node__14185);
        this__14184.root = new_root__14189;
        this__14184.cnt = this__14184.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__14190 = this;
  if(this__14190.root.edit) {
    this__14190.root.edit = null;
    var len__14191 = this__14190.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__14192 = cljs.core.make_array.call(null, len__14191);
    cljs.core.array_copy.call(null, this__14190.tail, 0, trimmed_tail__14192, 0, len__14191);
    return new cljs.core.PersistentVector(null, this__14190.cnt, this__14190.shift, this__14190.root, trimmed_tail__14192, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14194 = this;
  var h__2093__auto____14195 = this__14194.__hash;
  if(!(h__2093__auto____14195 == null)) {
    return h__2093__auto____14195
  }else {
    var h__2093__auto____14196 = cljs.core.hash_coll.call(null, coll);
    this__14194.__hash = h__2093__auto____14196;
    return h__2093__auto____14196
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14197 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__14198 = this;
  var this__14199 = this;
  return cljs.core.pr_str.call(null, this__14199)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14200 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__14201 = this;
  return cljs.core._first.call(null, this__14201.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__14202 = this;
  var temp__3971__auto____14203 = cljs.core.next.call(null, this__14202.front);
  if(temp__3971__auto____14203) {
    var f1__14204 = temp__3971__auto____14203;
    return new cljs.core.PersistentQueueSeq(this__14202.meta, f1__14204, this__14202.rear, null)
  }else {
    if(this__14202.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__14202.meta, this__14202.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14205 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14206 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__14206.front, this__14206.rear, this__14206.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14207 = this;
  return this__14207.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14208 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__14208.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14209 = this;
  var h__2093__auto____14210 = this__14209.__hash;
  if(!(h__2093__auto____14210 == null)) {
    return h__2093__auto____14210
  }else {
    var h__2093__auto____14211 = cljs.core.hash_coll.call(null, coll);
    this__14209.__hash = h__2093__auto____14211;
    return h__2093__auto____14211
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14212 = this;
  if(cljs.core.truth_(this__14212.front)) {
    return new cljs.core.PersistentQueue(this__14212.meta, this__14212.count + 1, this__14212.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____14213 = this__14212.rear;
      if(cljs.core.truth_(or__3824__auto____14213)) {
        return or__3824__auto____14213
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__14212.meta, this__14212.count + 1, cljs.core.conj.call(null, this__14212.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__14214 = this;
  var this__14215 = this;
  return cljs.core.pr_str.call(null, this__14215)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14216 = this;
  var rear__14217 = cljs.core.seq.call(null, this__14216.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____14218 = this__14216.front;
    if(cljs.core.truth_(or__3824__auto____14218)) {
      return or__3824__auto____14218
    }else {
      return rear__14217
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__14216.front, cljs.core.seq.call(null, rear__14217), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14219 = this;
  return this__14219.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__14220 = this;
  return cljs.core._first.call(null, this__14220.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__14221 = this;
  if(cljs.core.truth_(this__14221.front)) {
    var temp__3971__auto____14222 = cljs.core.next.call(null, this__14221.front);
    if(temp__3971__auto____14222) {
      var f1__14223 = temp__3971__auto____14222;
      return new cljs.core.PersistentQueue(this__14221.meta, this__14221.count - 1, f1__14223, this__14221.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__14221.meta, this__14221.count - 1, cljs.core.seq.call(null, this__14221.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__14224 = this;
  return cljs.core.first.call(null, this__14224.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__14225 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14226 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14227 = this;
  return new cljs.core.PersistentQueue(meta, this__14227.count, this__14227.front, this__14227.rear, this__14227.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14228 = this;
  return this__14228.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14229 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__14230 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__14233 = array.length;
  var i__14234 = 0;
  while(true) {
    if(i__14234 < len__14233) {
      if(k === array[i__14234]) {
        return i__14234
      }else {
        var G__14235 = i__14234 + incr;
        i__14234 = G__14235;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__14238 = cljs.core.hash.call(null, a);
  var b__14239 = cljs.core.hash.call(null, b);
  if(a__14238 < b__14239) {
    return-1
  }else {
    if(a__14238 > b__14239) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__14247 = m.keys;
  var len__14248 = ks__14247.length;
  var so__14249 = m.strobj;
  var out__14250 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__14251 = 0;
  var out__14252 = cljs.core.transient$.call(null, out__14250);
  while(true) {
    if(i__14251 < len__14248) {
      var k__14253 = ks__14247[i__14251];
      var G__14254 = i__14251 + 1;
      var G__14255 = cljs.core.assoc_BANG_.call(null, out__14252, k__14253, so__14249[k__14253]);
      i__14251 = G__14254;
      out__14252 = G__14255;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__14252, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__14261 = {};
  var l__14262 = ks.length;
  var i__14263 = 0;
  while(true) {
    if(i__14263 < l__14262) {
      var k__14264 = ks[i__14263];
      new_obj__14261[k__14264] = obj[k__14264];
      var G__14265 = i__14263 + 1;
      i__14263 = G__14265;
      continue
    }else {
    }
    break
  }
  return new_obj__14261
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__14268 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14269 = this;
  var h__2093__auto____14270 = this__14269.__hash;
  if(!(h__2093__auto____14270 == null)) {
    return h__2093__auto____14270
  }else {
    var h__2093__auto____14271 = cljs.core.hash_imap.call(null, coll);
    this__14269.__hash = h__2093__auto____14271;
    return h__2093__auto____14271
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__14272 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__14273 = this;
  if(function() {
    var and__3822__auto____14274 = goog.isString(k);
    if(and__3822__auto____14274) {
      return!(cljs.core.scan_array.call(null, 1, k, this__14273.keys) == null)
    }else {
      return and__3822__auto____14274
    }
  }()) {
    return this__14273.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__14275 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____14276 = this__14275.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____14276) {
        return or__3824__auto____14276
      }else {
        return this__14275.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__14275.keys) == null)) {
        var new_strobj__14277 = cljs.core.obj_clone.call(null, this__14275.strobj, this__14275.keys);
        new_strobj__14277[k] = v;
        return new cljs.core.ObjMap(this__14275.meta, this__14275.keys, new_strobj__14277, this__14275.update_count + 1, null)
      }else {
        var new_strobj__14278 = cljs.core.obj_clone.call(null, this__14275.strobj, this__14275.keys);
        var new_keys__14279 = this__14275.keys.slice();
        new_strobj__14278[k] = v;
        new_keys__14279.push(k);
        return new cljs.core.ObjMap(this__14275.meta, new_keys__14279, new_strobj__14278, this__14275.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__14280 = this;
  if(function() {
    var and__3822__auto____14281 = goog.isString(k);
    if(and__3822__auto____14281) {
      return!(cljs.core.scan_array.call(null, 1, k, this__14280.keys) == null)
    }else {
      return and__3822__auto____14281
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__14303 = null;
  var G__14303__2 = function(this_sym14282, k) {
    var this__14284 = this;
    var this_sym14282__14285 = this;
    var coll__14286 = this_sym14282__14285;
    return coll__14286.cljs$core$ILookup$_lookup$arity$2(coll__14286, k)
  };
  var G__14303__3 = function(this_sym14283, k, not_found) {
    var this__14284 = this;
    var this_sym14283__14287 = this;
    var coll__14288 = this_sym14283__14287;
    return coll__14288.cljs$core$ILookup$_lookup$arity$3(coll__14288, k, not_found)
  };
  G__14303 = function(this_sym14283, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14303__2.call(this, this_sym14283, k);
      case 3:
        return G__14303__3.call(this, this_sym14283, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14303
}();
cljs.core.ObjMap.prototype.apply = function(this_sym14266, args14267) {
  var this__14289 = this;
  return this_sym14266.call.apply(this_sym14266, [this_sym14266].concat(args14267.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__14290 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__14291 = this;
  var this__14292 = this;
  return cljs.core.pr_str.call(null, this__14292)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14293 = this;
  if(this__14293.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__14256_SHARP_) {
      return cljs.core.vector.call(null, p1__14256_SHARP_, this__14293.strobj[p1__14256_SHARP_])
    }, this__14293.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14294 = this;
  return this__14294.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14295 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14296 = this;
  return new cljs.core.ObjMap(meta, this__14296.keys, this__14296.strobj, this__14296.update_count, this__14296.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14297 = this;
  return this__14297.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14298 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__14298.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__14299 = this;
  if(function() {
    var and__3822__auto____14300 = goog.isString(k);
    if(and__3822__auto____14300) {
      return!(cljs.core.scan_array.call(null, 1, k, this__14299.keys) == null)
    }else {
      return and__3822__auto____14300
    }
  }()) {
    var new_keys__14301 = this__14299.keys.slice();
    var new_strobj__14302 = cljs.core.obj_clone.call(null, this__14299.strobj, this__14299.keys);
    new_keys__14301.splice(cljs.core.scan_array.call(null, 1, k, new_keys__14301), 1);
    cljs.core.js_delete.call(null, new_strobj__14302, k);
    return new cljs.core.ObjMap(this__14299.meta, new_keys__14301, new_strobj__14302, this__14299.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14307 = this;
  var h__2093__auto____14308 = this__14307.__hash;
  if(!(h__2093__auto____14308 == null)) {
    return h__2093__auto____14308
  }else {
    var h__2093__auto____14309 = cljs.core.hash_imap.call(null, coll);
    this__14307.__hash = h__2093__auto____14309;
    return h__2093__auto____14309
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__14310 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__14311 = this;
  var bucket__14312 = this__14311.hashobj[cljs.core.hash.call(null, k)];
  var i__14313 = cljs.core.truth_(bucket__14312) ? cljs.core.scan_array.call(null, 2, k, bucket__14312) : null;
  if(cljs.core.truth_(i__14313)) {
    return bucket__14312[i__14313 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__14314 = this;
  var h__14315 = cljs.core.hash.call(null, k);
  var bucket__14316 = this__14314.hashobj[h__14315];
  if(cljs.core.truth_(bucket__14316)) {
    var new_bucket__14317 = bucket__14316.slice();
    var new_hashobj__14318 = goog.object.clone(this__14314.hashobj);
    new_hashobj__14318[h__14315] = new_bucket__14317;
    var temp__3971__auto____14319 = cljs.core.scan_array.call(null, 2, k, new_bucket__14317);
    if(cljs.core.truth_(temp__3971__auto____14319)) {
      var i__14320 = temp__3971__auto____14319;
      new_bucket__14317[i__14320 + 1] = v;
      return new cljs.core.HashMap(this__14314.meta, this__14314.count, new_hashobj__14318, null)
    }else {
      new_bucket__14317.push(k, v);
      return new cljs.core.HashMap(this__14314.meta, this__14314.count + 1, new_hashobj__14318, null)
    }
  }else {
    var new_hashobj__14321 = goog.object.clone(this__14314.hashobj);
    new_hashobj__14321[h__14315] = [k, v];
    return new cljs.core.HashMap(this__14314.meta, this__14314.count + 1, new_hashobj__14321, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__14322 = this;
  var bucket__14323 = this__14322.hashobj[cljs.core.hash.call(null, k)];
  var i__14324 = cljs.core.truth_(bucket__14323) ? cljs.core.scan_array.call(null, 2, k, bucket__14323) : null;
  if(cljs.core.truth_(i__14324)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__14349 = null;
  var G__14349__2 = function(this_sym14325, k) {
    var this__14327 = this;
    var this_sym14325__14328 = this;
    var coll__14329 = this_sym14325__14328;
    return coll__14329.cljs$core$ILookup$_lookup$arity$2(coll__14329, k)
  };
  var G__14349__3 = function(this_sym14326, k, not_found) {
    var this__14327 = this;
    var this_sym14326__14330 = this;
    var coll__14331 = this_sym14326__14330;
    return coll__14331.cljs$core$ILookup$_lookup$arity$3(coll__14331, k, not_found)
  };
  G__14349 = function(this_sym14326, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14349__2.call(this, this_sym14326, k);
      case 3:
        return G__14349__3.call(this, this_sym14326, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14349
}();
cljs.core.HashMap.prototype.apply = function(this_sym14305, args14306) {
  var this__14332 = this;
  return this_sym14305.call.apply(this_sym14305, [this_sym14305].concat(args14306.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__14333 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__14334 = this;
  var this__14335 = this;
  return cljs.core.pr_str.call(null, this__14335)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14336 = this;
  if(this__14336.count > 0) {
    var hashes__14337 = cljs.core.js_keys.call(null, this__14336.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__14304_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__14336.hashobj[p1__14304_SHARP_]))
    }, hashes__14337)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14338 = this;
  return this__14338.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14339 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14340 = this;
  return new cljs.core.HashMap(meta, this__14340.count, this__14340.hashobj, this__14340.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14341 = this;
  return this__14341.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14342 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__14342.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__14343 = this;
  var h__14344 = cljs.core.hash.call(null, k);
  var bucket__14345 = this__14343.hashobj[h__14344];
  var i__14346 = cljs.core.truth_(bucket__14345) ? cljs.core.scan_array.call(null, 2, k, bucket__14345) : null;
  if(cljs.core.not.call(null, i__14346)) {
    return coll
  }else {
    var new_hashobj__14347 = goog.object.clone(this__14343.hashobj);
    if(3 > bucket__14345.length) {
      cljs.core.js_delete.call(null, new_hashobj__14347, h__14344)
    }else {
      var new_bucket__14348 = bucket__14345.slice();
      new_bucket__14348.splice(i__14346, 2);
      new_hashobj__14347[h__14344] = new_bucket__14348
    }
    return new cljs.core.HashMap(this__14343.meta, this__14343.count - 1, new_hashobj__14347, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__14350 = ks.length;
  var i__14351 = 0;
  var out__14352 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__14351 < len__14350) {
      var G__14353 = i__14351 + 1;
      var G__14354 = cljs.core.assoc.call(null, out__14352, ks[i__14351], vs[i__14351]);
      i__14351 = G__14353;
      out__14352 = G__14354;
      continue
    }else {
      return out__14352
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__14358 = m.arr;
  var len__14359 = arr__14358.length;
  var i__14360 = 0;
  while(true) {
    if(len__14359 <= i__14360) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__14358[i__14360], k)) {
        return i__14360
      }else {
        if("\ufdd0'else") {
          var G__14361 = i__14360 + 2;
          i__14360 = G__14361;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__14364 = this;
  return new cljs.core.TransientArrayMap({}, this__14364.arr.length, this__14364.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14365 = this;
  var h__2093__auto____14366 = this__14365.__hash;
  if(!(h__2093__auto____14366 == null)) {
    return h__2093__auto____14366
  }else {
    var h__2093__auto____14367 = cljs.core.hash_imap.call(null, coll);
    this__14365.__hash = h__2093__auto____14367;
    return h__2093__auto____14367
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__14368 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__14369 = this;
  var idx__14370 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__14370 === -1) {
    return not_found
  }else {
    return this__14369.arr[idx__14370 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__14371 = this;
  var idx__14372 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__14372 === -1) {
    if(this__14371.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__14371.meta, this__14371.cnt + 1, function() {
        var G__14373__14374 = this__14371.arr.slice();
        G__14373__14374.push(k);
        G__14373__14374.push(v);
        return G__14373__14374
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__14371.arr[idx__14372 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__14371.meta, this__14371.cnt, function() {
          var G__14375__14376 = this__14371.arr.slice();
          G__14375__14376[idx__14372 + 1] = v;
          return G__14375__14376
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__14377 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__14409 = null;
  var G__14409__2 = function(this_sym14378, k) {
    var this__14380 = this;
    var this_sym14378__14381 = this;
    var coll__14382 = this_sym14378__14381;
    return coll__14382.cljs$core$ILookup$_lookup$arity$2(coll__14382, k)
  };
  var G__14409__3 = function(this_sym14379, k, not_found) {
    var this__14380 = this;
    var this_sym14379__14383 = this;
    var coll__14384 = this_sym14379__14383;
    return coll__14384.cljs$core$ILookup$_lookup$arity$3(coll__14384, k, not_found)
  };
  G__14409 = function(this_sym14379, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14409__2.call(this, this_sym14379, k);
      case 3:
        return G__14409__3.call(this, this_sym14379, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14409
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym14362, args14363) {
  var this__14385 = this;
  return this_sym14362.call.apply(this_sym14362, [this_sym14362].concat(args14363.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__14386 = this;
  var len__14387 = this__14386.arr.length;
  var i__14388 = 0;
  var init__14389 = init;
  while(true) {
    if(i__14388 < len__14387) {
      var init__14390 = f.call(null, init__14389, this__14386.arr[i__14388], this__14386.arr[i__14388 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__14390)) {
        return cljs.core.deref.call(null, init__14390)
      }else {
        var G__14410 = i__14388 + 2;
        var G__14411 = init__14390;
        i__14388 = G__14410;
        init__14389 = G__14411;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__14391 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__14392 = this;
  var this__14393 = this;
  return cljs.core.pr_str.call(null, this__14393)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14394 = this;
  if(this__14394.cnt > 0) {
    var len__14395 = this__14394.arr.length;
    var array_map_seq__14396 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__14395) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__14394.arr[i], this__14394.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__14396.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14397 = this;
  return this__14397.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14398 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14399 = this;
  return new cljs.core.PersistentArrayMap(meta, this__14399.cnt, this__14399.arr, this__14399.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14400 = this;
  return this__14400.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14401 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__14401.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__14402 = this;
  var idx__14403 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__14403 >= 0) {
    var len__14404 = this__14402.arr.length;
    var new_len__14405 = len__14404 - 2;
    if(new_len__14405 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__14406 = cljs.core.make_array.call(null, new_len__14405);
      var s__14407 = 0;
      var d__14408 = 0;
      while(true) {
        if(s__14407 >= len__14404) {
          return new cljs.core.PersistentArrayMap(this__14402.meta, this__14402.cnt - 1, new_arr__14406, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__14402.arr[s__14407])) {
            var G__14412 = s__14407 + 2;
            var G__14413 = d__14408;
            s__14407 = G__14412;
            d__14408 = G__14413;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__14406[d__14408] = this__14402.arr[s__14407];
              new_arr__14406[d__14408 + 1] = this__14402.arr[s__14407 + 1];
              var G__14414 = s__14407 + 2;
              var G__14415 = d__14408 + 2;
              s__14407 = G__14414;
              d__14408 = G__14415;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__14416 = cljs.core.count.call(null, ks);
  var i__14417 = 0;
  var out__14418 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__14417 < len__14416) {
      var G__14419 = i__14417 + 1;
      var G__14420 = cljs.core.assoc_BANG_.call(null, out__14418, ks[i__14417], vs[i__14417]);
      i__14417 = G__14419;
      out__14418 = G__14420;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__14418)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__14421 = this;
  if(cljs.core.truth_(this__14421.editable_QMARK_)) {
    var idx__14422 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__14422 >= 0) {
      this__14421.arr[idx__14422] = this__14421.arr[this__14421.len - 2];
      this__14421.arr[idx__14422 + 1] = this__14421.arr[this__14421.len - 1];
      var G__14423__14424 = this__14421.arr;
      G__14423__14424.pop();
      G__14423__14424.pop();
      G__14423__14424;
      this__14421.len = this__14421.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__14425 = this;
  if(cljs.core.truth_(this__14425.editable_QMARK_)) {
    var idx__14426 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__14426 === -1) {
      if(this__14425.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__14425.len = this__14425.len + 2;
        this__14425.arr.push(key);
        this__14425.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__14425.len, this__14425.arr), key, val)
      }
    }else {
      if(val === this__14425.arr[idx__14426 + 1]) {
        return tcoll
      }else {
        this__14425.arr[idx__14426 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__14427 = this;
  if(cljs.core.truth_(this__14427.editable_QMARK_)) {
    if(function() {
      var G__14428__14429 = o;
      if(G__14428__14429) {
        if(function() {
          var or__3824__auto____14430 = G__14428__14429.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____14430) {
            return or__3824__auto____14430
          }else {
            return G__14428__14429.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__14428__14429.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__14428__14429)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__14428__14429)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__14431 = cljs.core.seq.call(null, o);
      var tcoll__14432 = tcoll;
      while(true) {
        var temp__3971__auto____14433 = cljs.core.first.call(null, es__14431);
        if(cljs.core.truth_(temp__3971__auto____14433)) {
          var e__14434 = temp__3971__auto____14433;
          var G__14440 = cljs.core.next.call(null, es__14431);
          var G__14441 = tcoll__14432.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__14432, cljs.core.key.call(null, e__14434), cljs.core.val.call(null, e__14434));
          es__14431 = G__14440;
          tcoll__14432 = G__14441;
          continue
        }else {
          return tcoll__14432
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__14435 = this;
  if(cljs.core.truth_(this__14435.editable_QMARK_)) {
    this__14435.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__14435.len, 2), this__14435.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__14436 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__14437 = this;
  if(cljs.core.truth_(this__14437.editable_QMARK_)) {
    var idx__14438 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__14438 === -1) {
      return not_found
    }else {
      return this__14437.arr[idx__14438 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__14439 = this;
  if(cljs.core.truth_(this__14439.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__14439.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__14444 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__14445 = 0;
  while(true) {
    if(i__14445 < len) {
      var G__14446 = cljs.core.assoc_BANG_.call(null, out__14444, arr[i__14445], arr[i__14445 + 1]);
      var G__14447 = i__14445 + 2;
      out__14444 = G__14446;
      i__14445 = G__14447;
      continue
    }else {
      return out__14444
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2211__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__14452__14453 = arr.slice();
    G__14452__14453[i] = a;
    return G__14452__14453
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__14454__14455 = arr.slice();
    G__14454__14455[i] = a;
    G__14454__14455[j] = b;
    return G__14454__14455
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__14457 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__14457, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__14457, 2 * i, new_arr__14457.length - 2 * i);
  return new_arr__14457
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__14460 = inode.ensure_editable(edit);
    editable__14460.arr[i] = a;
    return editable__14460
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__14461 = inode.ensure_editable(edit);
    editable__14461.arr[i] = a;
    editable__14461.arr[j] = b;
    return editable__14461
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__14468 = arr.length;
  var i__14469 = 0;
  var init__14470 = init;
  while(true) {
    if(i__14469 < len__14468) {
      var init__14473 = function() {
        var k__14471 = arr[i__14469];
        if(!(k__14471 == null)) {
          return f.call(null, init__14470, k__14471, arr[i__14469 + 1])
        }else {
          var node__14472 = arr[i__14469 + 1];
          if(!(node__14472 == null)) {
            return node__14472.kv_reduce(f, init__14470)
          }else {
            return init__14470
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__14473)) {
        return cljs.core.deref.call(null, init__14473)
      }else {
        var G__14474 = i__14469 + 2;
        var G__14475 = init__14473;
        i__14469 = G__14474;
        init__14470 = G__14475;
        continue
      }
    }else {
      return init__14470
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__14476 = this;
  var inode__14477 = this;
  if(this__14476.bitmap === bit) {
    return null
  }else {
    var editable__14478 = inode__14477.ensure_editable(e);
    var earr__14479 = editable__14478.arr;
    var len__14480 = earr__14479.length;
    editable__14478.bitmap = bit ^ editable__14478.bitmap;
    cljs.core.array_copy.call(null, earr__14479, 2 * (i + 1), earr__14479, 2 * i, len__14480 - 2 * (i + 1));
    earr__14479[len__14480 - 2] = null;
    earr__14479[len__14480 - 1] = null;
    return editable__14478
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__14481 = this;
  var inode__14482 = this;
  var bit__14483 = 1 << (hash >>> shift & 31);
  var idx__14484 = cljs.core.bitmap_indexed_node_index.call(null, this__14481.bitmap, bit__14483);
  if((this__14481.bitmap & bit__14483) === 0) {
    var n__14485 = cljs.core.bit_count.call(null, this__14481.bitmap);
    if(2 * n__14485 < this__14481.arr.length) {
      var editable__14486 = inode__14482.ensure_editable(edit);
      var earr__14487 = editable__14486.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__14487, 2 * idx__14484, earr__14487, 2 * (idx__14484 + 1), 2 * (n__14485 - idx__14484));
      earr__14487[2 * idx__14484] = key;
      earr__14487[2 * idx__14484 + 1] = val;
      editable__14486.bitmap = editable__14486.bitmap | bit__14483;
      return editable__14486
    }else {
      if(n__14485 >= 16) {
        var nodes__14488 = cljs.core.make_array.call(null, 32);
        var jdx__14489 = hash >>> shift & 31;
        nodes__14488[jdx__14489] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__14490 = 0;
        var j__14491 = 0;
        while(true) {
          if(i__14490 < 32) {
            if((this__14481.bitmap >>> i__14490 & 1) === 0) {
              var G__14544 = i__14490 + 1;
              var G__14545 = j__14491;
              i__14490 = G__14544;
              j__14491 = G__14545;
              continue
            }else {
              nodes__14488[i__14490] = !(this__14481.arr[j__14491] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__14481.arr[j__14491]), this__14481.arr[j__14491], this__14481.arr[j__14491 + 1], added_leaf_QMARK_) : this__14481.arr[j__14491 + 1];
              var G__14546 = i__14490 + 1;
              var G__14547 = j__14491 + 2;
              i__14490 = G__14546;
              j__14491 = G__14547;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__14485 + 1, nodes__14488)
      }else {
        if("\ufdd0'else") {
          var new_arr__14492 = cljs.core.make_array.call(null, 2 * (n__14485 + 4));
          cljs.core.array_copy.call(null, this__14481.arr, 0, new_arr__14492, 0, 2 * idx__14484);
          new_arr__14492[2 * idx__14484] = key;
          new_arr__14492[2 * idx__14484 + 1] = val;
          cljs.core.array_copy.call(null, this__14481.arr, 2 * idx__14484, new_arr__14492, 2 * (idx__14484 + 1), 2 * (n__14485 - idx__14484));
          added_leaf_QMARK_.val = true;
          var editable__14493 = inode__14482.ensure_editable(edit);
          editable__14493.arr = new_arr__14492;
          editable__14493.bitmap = editable__14493.bitmap | bit__14483;
          return editable__14493
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__14494 = this__14481.arr[2 * idx__14484];
    var val_or_node__14495 = this__14481.arr[2 * idx__14484 + 1];
    if(key_or_nil__14494 == null) {
      var n__14496 = val_or_node__14495.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__14496 === val_or_node__14495) {
        return inode__14482
      }else {
        return cljs.core.edit_and_set.call(null, inode__14482, edit, 2 * idx__14484 + 1, n__14496)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__14494)) {
        if(val === val_or_node__14495) {
          return inode__14482
        }else {
          return cljs.core.edit_and_set.call(null, inode__14482, edit, 2 * idx__14484 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__14482, edit, 2 * idx__14484, null, 2 * idx__14484 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__14494, val_or_node__14495, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__14497 = this;
  var inode__14498 = this;
  return cljs.core.create_inode_seq.call(null, this__14497.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__14499 = this;
  var inode__14500 = this;
  var bit__14501 = 1 << (hash >>> shift & 31);
  if((this__14499.bitmap & bit__14501) === 0) {
    return inode__14500
  }else {
    var idx__14502 = cljs.core.bitmap_indexed_node_index.call(null, this__14499.bitmap, bit__14501);
    var key_or_nil__14503 = this__14499.arr[2 * idx__14502];
    var val_or_node__14504 = this__14499.arr[2 * idx__14502 + 1];
    if(key_or_nil__14503 == null) {
      var n__14505 = val_or_node__14504.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__14505 === val_or_node__14504) {
        return inode__14500
      }else {
        if(!(n__14505 == null)) {
          return cljs.core.edit_and_set.call(null, inode__14500, edit, 2 * idx__14502 + 1, n__14505)
        }else {
          if(this__14499.bitmap === bit__14501) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__14500.edit_and_remove_pair(edit, bit__14501, idx__14502)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__14503)) {
        removed_leaf_QMARK_[0] = true;
        return inode__14500.edit_and_remove_pair(edit, bit__14501, idx__14502)
      }else {
        if("\ufdd0'else") {
          return inode__14500
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__14506 = this;
  var inode__14507 = this;
  if(e === this__14506.edit) {
    return inode__14507
  }else {
    var n__14508 = cljs.core.bit_count.call(null, this__14506.bitmap);
    var new_arr__14509 = cljs.core.make_array.call(null, n__14508 < 0 ? 4 : 2 * (n__14508 + 1));
    cljs.core.array_copy.call(null, this__14506.arr, 0, new_arr__14509, 0, 2 * n__14508);
    return new cljs.core.BitmapIndexedNode(e, this__14506.bitmap, new_arr__14509)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__14510 = this;
  var inode__14511 = this;
  return cljs.core.inode_kv_reduce.call(null, this__14510.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__14512 = this;
  var inode__14513 = this;
  var bit__14514 = 1 << (hash >>> shift & 31);
  if((this__14512.bitmap & bit__14514) === 0) {
    return not_found
  }else {
    var idx__14515 = cljs.core.bitmap_indexed_node_index.call(null, this__14512.bitmap, bit__14514);
    var key_or_nil__14516 = this__14512.arr[2 * idx__14515];
    var val_or_node__14517 = this__14512.arr[2 * idx__14515 + 1];
    if(key_or_nil__14516 == null) {
      return val_or_node__14517.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__14516)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__14516, val_or_node__14517], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__14518 = this;
  var inode__14519 = this;
  var bit__14520 = 1 << (hash >>> shift & 31);
  if((this__14518.bitmap & bit__14520) === 0) {
    return inode__14519
  }else {
    var idx__14521 = cljs.core.bitmap_indexed_node_index.call(null, this__14518.bitmap, bit__14520);
    var key_or_nil__14522 = this__14518.arr[2 * idx__14521];
    var val_or_node__14523 = this__14518.arr[2 * idx__14521 + 1];
    if(key_or_nil__14522 == null) {
      var n__14524 = val_or_node__14523.inode_without(shift + 5, hash, key);
      if(n__14524 === val_or_node__14523) {
        return inode__14519
      }else {
        if(!(n__14524 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__14518.bitmap, cljs.core.clone_and_set.call(null, this__14518.arr, 2 * idx__14521 + 1, n__14524))
        }else {
          if(this__14518.bitmap === bit__14520) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__14518.bitmap ^ bit__14520, cljs.core.remove_pair.call(null, this__14518.arr, idx__14521))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__14522)) {
        return new cljs.core.BitmapIndexedNode(null, this__14518.bitmap ^ bit__14520, cljs.core.remove_pair.call(null, this__14518.arr, idx__14521))
      }else {
        if("\ufdd0'else") {
          return inode__14519
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__14525 = this;
  var inode__14526 = this;
  var bit__14527 = 1 << (hash >>> shift & 31);
  var idx__14528 = cljs.core.bitmap_indexed_node_index.call(null, this__14525.bitmap, bit__14527);
  if((this__14525.bitmap & bit__14527) === 0) {
    var n__14529 = cljs.core.bit_count.call(null, this__14525.bitmap);
    if(n__14529 >= 16) {
      var nodes__14530 = cljs.core.make_array.call(null, 32);
      var jdx__14531 = hash >>> shift & 31;
      nodes__14530[jdx__14531] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__14532 = 0;
      var j__14533 = 0;
      while(true) {
        if(i__14532 < 32) {
          if((this__14525.bitmap >>> i__14532 & 1) === 0) {
            var G__14548 = i__14532 + 1;
            var G__14549 = j__14533;
            i__14532 = G__14548;
            j__14533 = G__14549;
            continue
          }else {
            nodes__14530[i__14532] = !(this__14525.arr[j__14533] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__14525.arr[j__14533]), this__14525.arr[j__14533], this__14525.arr[j__14533 + 1], added_leaf_QMARK_) : this__14525.arr[j__14533 + 1];
            var G__14550 = i__14532 + 1;
            var G__14551 = j__14533 + 2;
            i__14532 = G__14550;
            j__14533 = G__14551;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__14529 + 1, nodes__14530)
    }else {
      var new_arr__14534 = cljs.core.make_array.call(null, 2 * (n__14529 + 1));
      cljs.core.array_copy.call(null, this__14525.arr, 0, new_arr__14534, 0, 2 * idx__14528);
      new_arr__14534[2 * idx__14528] = key;
      new_arr__14534[2 * idx__14528 + 1] = val;
      cljs.core.array_copy.call(null, this__14525.arr, 2 * idx__14528, new_arr__14534, 2 * (idx__14528 + 1), 2 * (n__14529 - idx__14528));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__14525.bitmap | bit__14527, new_arr__14534)
    }
  }else {
    var key_or_nil__14535 = this__14525.arr[2 * idx__14528];
    var val_or_node__14536 = this__14525.arr[2 * idx__14528 + 1];
    if(key_or_nil__14535 == null) {
      var n__14537 = val_or_node__14536.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__14537 === val_or_node__14536) {
        return inode__14526
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__14525.bitmap, cljs.core.clone_and_set.call(null, this__14525.arr, 2 * idx__14528 + 1, n__14537))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__14535)) {
        if(val === val_or_node__14536) {
          return inode__14526
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__14525.bitmap, cljs.core.clone_and_set.call(null, this__14525.arr, 2 * idx__14528 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__14525.bitmap, cljs.core.clone_and_set.call(null, this__14525.arr, 2 * idx__14528, null, 2 * idx__14528 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__14535, val_or_node__14536, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__14538 = this;
  var inode__14539 = this;
  var bit__14540 = 1 << (hash >>> shift & 31);
  if((this__14538.bitmap & bit__14540) === 0) {
    return not_found
  }else {
    var idx__14541 = cljs.core.bitmap_indexed_node_index.call(null, this__14538.bitmap, bit__14540);
    var key_or_nil__14542 = this__14538.arr[2 * idx__14541];
    var val_or_node__14543 = this__14538.arr[2 * idx__14541 + 1];
    if(key_or_nil__14542 == null) {
      return val_or_node__14543.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__14542)) {
        return val_or_node__14543
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__14559 = array_node.arr;
  var len__14560 = 2 * (array_node.cnt - 1);
  var new_arr__14561 = cljs.core.make_array.call(null, len__14560);
  var i__14562 = 0;
  var j__14563 = 1;
  var bitmap__14564 = 0;
  while(true) {
    if(i__14562 < len__14560) {
      if(function() {
        var and__3822__auto____14565 = !(i__14562 === idx);
        if(and__3822__auto____14565) {
          return!(arr__14559[i__14562] == null)
        }else {
          return and__3822__auto____14565
        }
      }()) {
        new_arr__14561[j__14563] = arr__14559[i__14562];
        var G__14566 = i__14562 + 1;
        var G__14567 = j__14563 + 2;
        var G__14568 = bitmap__14564 | 1 << i__14562;
        i__14562 = G__14566;
        j__14563 = G__14567;
        bitmap__14564 = G__14568;
        continue
      }else {
        var G__14569 = i__14562 + 1;
        var G__14570 = j__14563;
        var G__14571 = bitmap__14564;
        i__14562 = G__14569;
        j__14563 = G__14570;
        bitmap__14564 = G__14571;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__14564, new_arr__14561)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__14572 = this;
  var inode__14573 = this;
  var idx__14574 = hash >>> shift & 31;
  var node__14575 = this__14572.arr[idx__14574];
  if(node__14575 == null) {
    var editable__14576 = cljs.core.edit_and_set.call(null, inode__14573, edit, idx__14574, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__14576.cnt = editable__14576.cnt + 1;
    return editable__14576
  }else {
    var n__14577 = node__14575.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__14577 === node__14575) {
      return inode__14573
    }else {
      return cljs.core.edit_and_set.call(null, inode__14573, edit, idx__14574, n__14577)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__14578 = this;
  var inode__14579 = this;
  return cljs.core.create_array_node_seq.call(null, this__14578.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__14580 = this;
  var inode__14581 = this;
  var idx__14582 = hash >>> shift & 31;
  var node__14583 = this__14580.arr[idx__14582];
  if(node__14583 == null) {
    return inode__14581
  }else {
    var n__14584 = node__14583.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__14584 === node__14583) {
      return inode__14581
    }else {
      if(n__14584 == null) {
        if(this__14580.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__14581, edit, idx__14582)
        }else {
          var editable__14585 = cljs.core.edit_and_set.call(null, inode__14581, edit, idx__14582, n__14584);
          editable__14585.cnt = editable__14585.cnt - 1;
          return editable__14585
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__14581, edit, idx__14582, n__14584)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__14586 = this;
  var inode__14587 = this;
  if(e === this__14586.edit) {
    return inode__14587
  }else {
    return new cljs.core.ArrayNode(e, this__14586.cnt, this__14586.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__14588 = this;
  var inode__14589 = this;
  var len__14590 = this__14588.arr.length;
  var i__14591 = 0;
  var init__14592 = init;
  while(true) {
    if(i__14591 < len__14590) {
      var node__14593 = this__14588.arr[i__14591];
      if(!(node__14593 == null)) {
        var init__14594 = node__14593.kv_reduce(f, init__14592);
        if(cljs.core.reduced_QMARK_.call(null, init__14594)) {
          return cljs.core.deref.call(null, init__14594)
        }else {
          var G__14613 = i__14591 + 1;
          var G__14614 = init__14594;
          i__14591 = G__14613;
          init__14592 = G__14614;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__14592
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__14595 = this;
  var inode__14596 = this;
  var idx__14597 = hash >>> shift & 31;
  var node__14598 = this__14595.arr[idx__14597];
  if(!(node__14598 == null)) {
    return node__14598.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__14599 = this;
  var inode__14600 = this;
  var idx__14601 = hash >>> shift & 31;
  var node__14602 = this__14599.arr[idx__14601];
  if(!(node__14602 == null)) {
    var n__14603 = node__14602.inode_without(shift + 5, hash, key);
    if(n__14603 === node__14602) {
      return inode__14600
    }else {
      if(n__14603 == null) {
        if(this__14599.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__14600, null, idx__14601)
        }else {
          return new cljs.core.ArrayNode(null, this__14599.cnt - 1, cljs.core.clone_and_set.call(null, this__14599.arr, idx__14601, n__14603))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__14599.cnt, cljs.core.clone_and_set.call(null, this__14599.arr, idx__14601, n__14603))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__14600
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__14604 = this;
  var inode__14605 = this;
  var idx__14606 = hash >>> shift & 31;
  var node__14607 = this__14604.arr[idx__14606];
  if(node__14607 == null) {
    return new cljs.core.ArrayNode(null, this__14604.cnt + 1, cljs.core.clone_and_set.call(null, this__14604.arr, idx__14606, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__14608 = node__14607.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__14608 === node__14607) {
      return inode__14605
    }else {
      return new cljs.core.ArrayNode(null, this__14604.cnt, cljs.core.clone_and_set.call(null, this__14604.arr, idx__14606, n__14608))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__14609 = this;
  var inode__14610 = this;
  var idx__14611 = hash >>> shift & 31;
  var node__14612 = this__14609.arr[idx__14611];
  if(!(node__14612 == null)) {
    return node__14612.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__14617 = 2 * cnt;
  var i__14618 = 0;
  while(true) {
    if(i__14618 < lim__14617) {
      if(cljs.core.key_test.call(null, key, arr[i__14618])) {
        return i__14618
      }else {
        var G__14619 = i__14618 + 2;
        i__14618 = G__14619;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__14620 = this;
  var inode__14621 = this;
  if(hash === this__14620.collision_hash) {
    var idx__14622 = cljs.core.hash_collision_node_find_index.call(null, this__14620.arr, this__14620.cnt, key);
    if(idx__14622 === -1) {
      if(this__14620.arr.length > 2 * this__14620.cnt) {
        var editable__14623 = cljs.core.edit_and_set.call(null, inode__14621, edit, 2 * this__14620.cnt, key, 2 * this__14620.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__14623.cnt = editable__14623.cnt + 1;
        return editable__14623
      }else {
        var len__14624 = this__14620.arr.length;
        var new_arr__14625 = cljs.core.make_array.call(null, len__14624 + 2);
        cljs.core.array_copy.call(null, this__14620.arr, 0, new_arr__14625, 0, len__14624);
        new_arr__14625[len__14624] = key;
        new_arr__14625[len__14624 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__14621.ensure_editable_array(edit, this__14620.cnt + 1, new_arr__14625)
      }
    }else {
      if(this__14620.arr[idx__14622 + 1] === val) {
        return inode__14621
      }else {
        return cljs.core.edit_and_set.call(null, inode__14621, edit, idx__14622 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__14620.collision_hash >>> shift & 31), [null, inode__14621, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__14626 = this;
  var inode__14627 = this;
  return cljs.core.create_inode_seq.call(null, this__14626.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__14628 = this;
  var inode__14629 = this;
  var idx__14630 = cljs.core.hash_collision_node_find_index.call(null, this__14628.arr, this__14628.cnt, key);
  if(idx__14630 === -1) {
    return inode__14629
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__14628.cnt === 1) {
      return null
    }else {
      var editable__14631 = inode__14629.ensure_editable(edit);
      var earr__14632 = editable__14631.arr;
      earr__14632[idx__14630] = earr__14632[2 * this__14628.cnt - 2];
      earr__14632[idx__14630 + 1] = earr__14632[2 * this__14628.cnt - 1];
      earr__14632[2 * this__14628.cnt - 1] = null;
      earr__14632[2 * this__14628.cnt - 2] = null;
      editable__14631.cnt = editable__14631.cnt - 1;
      return editable__14631
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__14633 = this;
  var inode__14634 = this;
  if(e === this__14633.edit) {
    return inode__14634
  }else {
    var new_arr__14635 = cljs.core.make_array.call(null, 2 * (this__14633.cnt + 1));
    cljs.core.array_copy.call(null, this__14633.arr, 0, new_arr__14635, 0, 2 * this__14633.cnt);
    return new cljs.core.HashCollisionNode(e, this__14633.collision_hash, this__14633.cnt, new_arr__14635)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__14636 = this;
  var inode__14637 = this;
  return cljs.core.inode_kv_reduce.call(null, this__14636.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__14638 = this;
  var inode__14639 = this;
  var idx__14640 = cljs.core.hash_collision_node_find_index.call(null, this__14638.arr, this__14638.cnt, key);
  if(idx__14640 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__14638.arr[idx__14640])) {
      return cljs.core.PersistentVector.fromArray([this__14638.arr[idx__14640], this__14638.arr[idx__14640 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__14641 = this;
  var inode__14642 = this;
  var idx__14643 = cljs.core.hash_collision_node_find_index.call(null, this__14641.arr, this__14641.cnt, key);
  if(idx__14643 === -1) {
    return inode__14642
  }else {
    if(this__14641.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__14641.collision_hash, this__14641.cnt - 1, cljs.core.remove_pair.call(null, this__14641.arr, cljs.core.quot.call(null, idx__14643, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__14644 = this;
  var inode__14645 = this;
  if(hash === this__14644.collision_hash) {
    var idx__14646 = cljs.core.hash_collision_node_find_index.call(null, this__14644.arr, this__14644.cnt, key);
    if(idx__14646 === -1) {
      var len__14647 = this__14644.arr.length;
      var new_arr__14648 = cljs.core.make_array.call(null, len__14647 + 2);
      cljs.core.array_copy.call(null, this__14644.arr, 0, new_arr__14648, 0, len__14647);
      new_arr__14648[len__14647] = key;
      new_arr__14648[len__14647 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__14644.collision_hash, this__14644.cnt + 1, new_arr__14648)
    }else {
      if(cljs.core._EQ_.call(null, this__14644.arr[idx__14646], val)) {
        return inode__14645
      }else {
        return new cljs.core.HashCollisionNode(null, this__14644.collision_hash, this__14644.cnt, cljs.core.clone_and_set.call(null, this__14644.arr, idx__14646 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__14644.collision_hash >>> shift & 31), [null, inode__14645])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__14649 = this;
  var inode__14650 = this;
  var idx__14651 = cljs.core.hash_collision_node_find_index.call(null, this__14649.arr, this__14649.cnt, key);
  if(idx__14651 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__14649.arr[idx__14651])) {
      return this__14649.arr[idx__14651 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__14652 = this;
  var inode__14653 = this;
  if(e === this__14652.edit) {
    this__14652.arr = array;
    this__14652.cnt = count;
    return inode__14653
  }else {
    return new cljs.core.HashCollisionNode(this__14652.edit, this__14652.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__14658 = cljs.core.hash.call(null, key1);
    if(key1hash__14658 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__14658, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___14659 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__14658, key1, val1, added_leaf_QMARK___14659).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___14659)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__14660 = cljs.core.hash.call(null, key1);
    if(key1hash__14660 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__14660, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___14661 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__14660, key1, val1, added_leaf_QMARK___14661).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___14661)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14662 = this;
  var h__2093__auto____14663 = this__14662.__hash;
  if(!(h__2093__auto____14663 == null)) {
    return h__2093__auto____14663
  }else {
    var h__2093__auto____14664 = cljs.core.hash_coll.call(null, coll);
    this__14662.__hash = h__2093__auto____14664;
    return h__2093__auto____14664
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14665 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__14666 = this;
  var this__14667 = this;
  return cljs.core.pr_str.call(null, this__14667)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__14668 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__14669 = this;
  if(this__14669.s == null) {
    return cljs.core.PersistentVector.fromArray([this__14669.nodes[this__14669.i], this__14669.nodes[this__14669.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__14669.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__14670 = this;
  if(this__14670.s == null) {
    return cljs.core.create_inode_seq.call(null, this__14670.nodes, this__14670.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__14670.nodes, this__14670.i, cljs.core.next.call(null, this__14670.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14671 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14672 = this;
  return new cljs.core.NodeSeq(meta, this__14672.nodes, this__14672.i, this__14672.s, this__14672.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14673 = this;
  return this__14673.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14674 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__14674.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__14681 = nodes.length;
      var j__14682 = i;
      while(true) {
        if(j__14682 < len__14681) {
          if(!(nodes[j__14682] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__14682, null, null)
          }else {
            var temp__3971__auto____14683 = nodes[j__14682 + 1];
            if(cljs.core.truth_(temp__3971__auto____14683)) {
              var node__14684 = temp__3971__auto____14683;
              var temp__3971__auto____14685 = node__14684.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____14685)) {
                var node_seq__14686 = temp__3971__auto____14685;
                return new cljs.core.NodeSeq(null, nodes, j__14682 + 2, node_seq__14686, null)
              }else {
                var G__14687 = j__14682 + 2;
                j__14682 = G__14687;
                continue
              }
            }else {
              var G__14688 = j__14682 + 2;
              j__14682 = G__14688;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14689 = this;
  var h__2093__auto____14690 = this__14689.__hash;
  if(!(h__2093__auto____14690 == null)) {
    return h__2093__auto____14690
  }else {
    var h__2093__auto____14691 = cljs.core.hash_coll.call(null, coll);
    this__14689.__hash = h__2093__auto____14691;
    return h__2093__auto____14691
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14692 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__14693 = this;
  var this__14694 = this;
  return cljs.core.pr_str.call(null, this__14694)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__14695 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__14696 = this;
  return cljs.core.first.call(null, this__14696.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__14697 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__14697.nodes, this__14697.i, cljs.core.next.call(null, this__14697.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14698 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14699 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__14699.nodes, this__14699.i, this__14699.s, this__14699.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14700 = this;
  return this__14700.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14701 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__14701.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__14708 = nodes.length;
      var j__14709 = i;
      while(true) {
        if(j__14709 < len__14708) {
          var temp__3971__auto____14710 = nodes[j__14709];
          if(cljs.core.truth_(temp__3971__auto____14710)) {
            var nj__14711 = temp__3971__auto____14710;
            var temp__3971__auto____14712 = nj__14711.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____14712)) {
              var ns__14713 = temp__3971__auto____14712;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__14709 + 1, ns__14713, null)
            }else {
              var G__14714 = j__14709 + 1;
              j__14709 = G__14714;
              continue
            }
          }else {
            var G__14715 = j__14709 + 1;
            j__14709 = G__14715;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__14718 = this;
  return new cljs.core.TransientHashMap({}, this__14718.root, this__14718.cnt, this__14718.has_nil_QMARK_, this__14718.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14719 = this;
  var h__2093__auto____14720 = this__14719.__hash;
  if(!(h__2093__auto____14720 == null)) {
    return h__2093__auto____14720
  }else {
    var h__2093__auto____14721 = cljs.core.hash_imap.call(null, coll);
    this__14719.__hash = h__2093__auto____14721;
    return h__2093__auto____14721
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__14722 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__14723 = this;
  if(k == null) {
    if(this__14723.has_nil_QMARK_) {
      return this__14723.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__14723.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__14723.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__14724 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____14725 = this__14724.has_nil_QMARK_;
      if(and__3822__auto____14725) {
        return v === this__14724.nil_val
      }else {
        return and__3822__auto____14725
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__14724.meta, this__14724.has_nil_QMARK_ ? this__14724.cnt : this__14724.cnt + 1, this__14724.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___14726 = new cljs.core.Box(false);
    var new_root__14727 = (this__14724.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__14724.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___14726);
    if(new_root__14727 === this__14724.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__14724.meta, added_leaf_QMARK___14726.val ? this__14724.cnt + 1 : this__14724.cnt, new_root__14727, this__14724.has_nil_QMARK_, this__14724.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__14728 = this;
  if(k == null) {
    return this__14728.has_nil_QMARK_
  }else {
    if(this__14728.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__14728.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__14751 = null;
  var G__14751__2 = function(this_sym14729, k) {
    var this__14731 = this;
    var this_sym14729__14732 = this;
    var coll__14733 = this_sym14729__14732;
    return coll__14733.cljs$core$ILookup$_lookup$arity$2(coll__14733, k)
  };
  var G__14751__3 = function(this_sym14730, k, not_found) {
    var this__14731 = this;
    var this_sym14730__14734 = this;
    var coll__14735 = this_sym14730__14734;
    return coll__14735.cljs$core$ILookup$_lookup$arity$3(coll__14735, k, not_found)
  };
  G__14751 = function(this_sym14730, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14751__2.call(this, this_sym14730, k);
      case 3:
        return G__14751__3.call(this, this_sym14730, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14751
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym14716, args14717) {
  var this__14736 = this;
  return this_sym14716.call.apply(this_sym14716, [this_sym14716].concat(args14717.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__14737 = this;
  var init__14738 = this__14737.has_nil_QMARK_ ? f.call(null, init, null, this__14737.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__14738)) {
    return cljs.core.deref.call(null, init__14738)
  }else {
    if(!(this__14737.root == null)) {
      return this__14737.root.kv_reduce(f, init__14738)
    }else {
      if("\ufdd0'else") {
        return init__14738
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__14739 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__14740 = this;
  var this__14741 = this;
  return cljs.core.pr_str.call(null, this__14741)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14742 = this;
  if(this__14742.cnt > 0) {
    var s__14743 = !(this__14742.root == null) ? this__14742.root.inode_seq() : null;
    if(this__14742.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__14742.nil_val], true), s__14743)
    }else {
      return s__14743
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14744 = this;
  return this__14744.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14745 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14746 = this;
  return new cljs.core.PersistentHashMap(meta, this__14746.cnt, this__14746.root, this__14746.has_nil_QMARK_, this__14746.nil_val, this__14746.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14747 = this;
  return this__14747.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14748 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__14748.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__14749 = this;
  if(k == null) {
    if(this__14749.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__14749.meta, this__14749.cnt - 1, this__14749.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__14749.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__14750 = this__14749.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__14750 === this__14749.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__14749.meta, this__14749.cnt - 1, new_root__14750, this__14749.has_nil_QMARK_, this__14749.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__14752 = ks.length;
  var i__14753 = 0;
  var out__14754 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__14753 < len__14752) {
      var G__14755 = i__14753 + 1;
      var G__14756 = cljs.core.assoc_BANG_.call(null, out__14754, ks[i__14753], vs[i__14753]);
      i__14753 = G__14755;
      out__14754 = G__14756;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__14754)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__14757 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__14758 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__14759 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__14760 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__14761 = this;
  if(k == null) {
    if(this__14761.has_nil_QMARK_) {
      return this__14761.nil_val
    }else {
      return null
    }
  }else {
    if(this__14761.root == null) {
      return null
    }else {
      return this__14761.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__14762 = this;
  if(k == null) {
    if(this__14762.has_nil_QMARK_) {
      return this__14762.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__14762.root == null) {
      return not_found
    }else {
      return this__14762.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14763 = this;
  if(this__14763.edit) {
    return this__14763.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__14764 = this;
  var tcoll__14765 = this;
  if(this__14764.edit) {
    if(function() {
      var G__14766__14767 = o;
      if(G__14766__14767) {
        if(function() {
          var or__3824__auto____14768 = G__14766__14767.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____14768) {
            return or__3824__auto____14768
          }else {
            return G__14766__14767.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__14766__14767.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__14766__14767)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__14766__14767)
      }
    }()) {
      return tcoll__14765.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__14769 = cljs.core.seq.call(null, o);
      var tcoll__14770 = tcoll__14765;
      while(true) {
        var temp__3971__auto____14771 = cljs.core.first.call(null, es__14769);
        if(cljs.core.truth_(temp__3971__auto____14771)) {
          var e__14772 = temp__3971__auto____14771;
          var G__14783 = cljs.core.next.call(null, es__14769);
          var G__14784 = tcoll__14770.assoc_BANG_(cljs.core.key.call(null, e__14772), cljs.core.val.call(null, e__14772));
          es__14769 = G__14783;
          tcoll__14770 = G__14784;
          continue
        }else {
          return tcoll__14770
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__14773 = this;
  var tcoll__14774 = this;
  if(this__14773.edit) {
    if(k == null) {
      if(this__14773.nil_val === v) {
      }else {
        this__14773.nil_val = v
      }
      if(this__14773.has_nil_QMARK_) {
      }else {
        this__14773.count = this__14773.count + 1;
        this__14773.has_nil_QMARK_ = true
      }
      return tcoll__14774
    }else {
      var added_leaf_QMARK___14775 = new cljs.core.Box(false);
      var node__14776 = (this__14773.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__14773.root).inode_assoc_BANG_(this__14773.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___14775);
      if(node__14776 === this__14773.root) {
      }else {
        this__14773.root = node__14776
      }
      if(added_leaf_QMARK___14775.val) {
        this__14773.count = this__14773.count + 1
      }else {
      }
      return tcoll__14774
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__14777 = this;
  var tcoll__14778 = this;
  if(this__14777.edit) {
    if(k == null) {
      if(this__14777.has_nil_QMARK_) {
        this__14777.has_nil_QMARK_ = false;
        this__14777.nil_val = null;
        this__14777.count = this__14777.count - 1;
        return tcoll__14778
      }else {
        return tcoll__14778
      }
    }else {
      if(this__14777.root == null) {
        return tcoll__14778
      }else {
        var removed_leaf_QMARK___14779 = new cljs.core.Box(false);
        var node__14780 = this__14777.root.inode_without_BANG_(this__14777.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___14779);
        if(node__14780 === this__14777.root) {
        }else {
          this__14777.root = node__14780
        }
        if(cljs.core.truth_(removed_leaf_QMARK___14779[0])) {
          this__14777.count = this__14777.count - 1
        }else {
        }
        return tcoll__14778
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__14781 = this;
  var tcoll__14782 = this;
  if(this__14781.edit) {
    this__14781.edit = null;
    return new cljs.core.PersistentHashMap(null, this__14781.count, this__14781.root, this__14781.has_nil_QMARK_, this__14781.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__14787 = node;
  var stack__14788 = stack;
  while(true) {
    if(!(t__14787 == null)) {
      var G__14789 = ascending_QMARK_ ? t__14787.left : t__14787.right;
      var G__14790 = cljs.core.conj.call(null, stack__14788, t__14787);
      t__14787 = G__14789;
      stack__14788 = G__14790;
      continue
    }else {
      return stack__14788
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14791 = this;
  var h__2093__auto____14792 = this__14791.__hash;
  if(!(h__2093__auto____14792 == null)) {
    return h__2093__auto____14792
  }else {
    var h__2093__auto____14793 = cljs.core.hash_coll.call(null, coll);
    this__14791.__hash = h__2093__auto____14793;
    return h__2093__auto____14793
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14794 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__14795 = this;
  var this__14796 = this;
  return cljs.core.pr_str.call(null, this__14796)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__14797 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14798 = this;
  if(this__14798.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__14798.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__14799 = this;
  return cljs.core.peek.call(null, this__14799.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__14800 = this;
  var t__14801 = cljs.core.first.call(null, this__14800.stack);
  var next_stack__14802 = cljs.core.tree_map_seq_push.call(null, this__14800.ascending_QMARK_ ? t__14801.right : t__14801.left, cljs.core.next.call(null, this__14800.stack), this__14800.ascending_QMARK_);
  if(!(next_stack__14802 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__14802, this__14800.ascending_QMARK_, this__14800.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14803 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14804 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__14804.stack, this__14804.ascending_QMARK_, this__14804.cnt, this__14804.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14805 = this;
  return this__14805.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____14807 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____14807) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____14807
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____14809 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____14809) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____14809
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__14813 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__14813)) {
    return cljs.core.deref.call(null, init__14813)
  }else {
    var init__14814 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__14813) : init__14813;
    if(cljs.core.reduced_QMARK_.call(null, init__14814)) {
      return cljs.core.deref.call(null, init__14814)
    }else {
      var init__14815 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__14814) : init__14814;
      if(cljs.core.reduced_QMARK_.call(null, init__14815)) {
        return cljs.core.deref.call(null, init__14815)
      }else {
        return init__14815
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14818 = this;
  var h__2093__auto____14819 = this__14818.__hash;
  if(!(h__2093__auto____14819 == null)) {
    return h__2093__auto____14819
  }else {
    var h__2093__auto____14820 = cljs.core.hash_coll.call(null, coll);
    this__14818.__hash = h__2093__auto____14820;
    return h__2093__auto____14820
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__14821 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__14822 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__14823 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__14823.key, this__14823.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__14871 = null;
  var G__14871__2 = function(this_sym14824, k) {
    var this__14826 = this;
    var this_sym14824__14827 = this;
    var node__14828 = this_sym14824__14827;
    return node__14828.cljs$core$ILookup$_lookup$arity$2(node__14828, k)
  };
  var G__14871__3 = function(this_sym14825, k, not_found) {
    var this__14826 = this;
    var this_sym14825__14829 = this;
    var node__14830 = this_sym14825__14829;
    return node__14830.cljs$core$ILookup$_lookup$arity$3(node__14830, k, not_found)
  };
  G__14871 = function(this_sym14825, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14871__2.call(this, this_sym14825, k);
      case 3:
        return G__14871__3.call(this, this_sym14825, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14871
}();
cljs.core.BlackNode.prototype.apply = function(this_sym14816, args14817) {
  var this__14831 = this;
  return this_sym14816.call.apply(this_sym14816, [this_sym14816].concat(args14817.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__14832 = this;
  return cljs.core.PersistentVector.fromArray([this__14832.key, this__14832.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__14833 = this;
  return this__14833.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__14834 = this;
  return this__14834.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__14835 = this;
  var node__14836 = this;
  return ins.balance_right(node__14836)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__14837 = this;
  var node__14838 = this;
  return new cljs.core.RedNode(this__14837.key, this__14837.val, this__14837.left, this__14837.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__14839 = this;
  var node__14840 = this;
  return cljs.core.balance_right_del.call(null, this__14839.key, this__14839.val, this__14839.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__14841 = this;
  var node__14842 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__14843 = this;
  var node__14844 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__14844, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__14845 = this;
  var node__14846 = this;
  return cljs.core.balance_left_del.call(null, this__14845.key, this__14845.val, del, this__14845.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__14847 = this;
  var node__14848 = this;
  return ins.balance_left(node__14848)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__14849 = this;
  var node__14850 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__14850, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__14872 = null;
  var G__14872__0 = function() {
    var this__14851 = this;
    var this__14853 = this;
    return cljs.core.pr_str.call(null, this__14853)
  };
  G__14872 = function() {
    switch(arguments.length) {
      case 0:
        return G__14872__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14872
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__14854 = this;
  var node__14855 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__14855, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__14856 = this;
  var node__14857 = this;
  return node__14857
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__14858 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__14859 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__14860 = this;
  return cljs.core.list.call(null, this__14860.key, this__14860.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__14861 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__14862 = this;
  return this__14862.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__14863 = this;
  return cljs.core.PersistentVector.fromArray([this__14863.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__14864 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__14864.key, this__14864.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14865 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__14866 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__14866.key, this__14866.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__14867 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__14868 = this;
  if(n === 0) {
    return this__14868.key
  }else {
    if(n === 1) {
      return this__14868.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__14869 = this;
  if(n === 0) {
    return this__14869.key
  }else {
    if(n === 1) {
      return this__14869.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__14870 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14875 = this;
  var h__2093__auto____14876 = this__14875.__hash;
  if(!(h__2093__auto____14876 == null)) {
    return h__2093__auto____14876
  }else {
    var h__2093__auto____14877 = cljs.core.hash_coll.call(null, coll);
    this__14875.__hash = h__2093__auto____14877;
    return h__2093__auto____14877
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__14878 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__14879 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__14880 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__14880.key, this__14880.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__14928 = null;
  var G__14928__2 = function(this_sym14881, k) {
    var this__14883 = this;
    var this_sym14881__14884 = this;
    var node__14885 = this_sym14881__14884;
    return node__14885.cljs$core$ILookup$_lookup$arity$2(node__14885, k)
  };
  var G__14928__3 = function(this_sym14882, k, not_found) {
    var this__14883 = this;
    var this_sym14882__14886 = this;
    var node__14887 = this_sym14882__14886;
    return node__14887.cljs$core$ILookup$_lookup$arity$3(node__14887, k, not_found)
  };
  G__14928 = function(this_sym14882, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14928__2.call(this, this_sym14882, k);
      case 3:
        return G__14928__3.call(this, this_sym14882, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14928
}();
cljs.core.RedNode.prototype.apply = function(this_sym14873, args14874) {
  var this__14888 = this;
  return this_sym14873.call.apply(this_sym14873, [this_sym14873].concat(args14874.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__14889 = this;
  return cljs.core.PersistentVector.fromArray([this__14889.key, this__14889.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__14890 = this;
  return this__14890.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__14891 = this;
  return this__14891.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__14892 = this;
  var node__14893 = this;
  return new cljs.core.RedNode(this__14892.key, this__14892.val, this__14892.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__14894 = this;
  var node__14895 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__14896 = this;
  var node__14897 = this;
  return new cljs.core.RedNode(this__14896.key, this__14896.val, this__14896.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__14898 = this;
  var node__14899 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__14900 = this;
  var node__14901 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__14901, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__14902 = this;
  var node__14903 = this;
  return new cljs.core.RedNode(this__14902.key, this__14902.val, del, this__14902.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__14904 = this;
  var node__14905 = this;
  return new cljs.core.RedNode(this__14904.key, this__14904.val, ins, this__14904.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__14906 = this;
  var node__14907 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__14906.left)) {
    return new cljs.core.RedNode(this__14906.key, this__14906.val, this__14906.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__14906.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__14906.right)) {
      return new cljs.core.RedNode(this__14906.right.key, this__14906.right.val, new cljs.core.BlackNode(this__14906.key, this__14906.val, this__14906.left, this__14906.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__14906.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__14907, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__14929 = null;
  var G__14929__0 = function() {
    var this__14908 = this;
    var this__14910 = this;
    return cljs.core.pr_str.call(null, this__14910)
  };
  G__14929 = function() {
    switch(arguments.length) {
      case 0:
        return G__14929__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14929
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__14911 = this;
  var node__14912 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__14911.right)) {
    return new cljs.core.RedNode(this__14911.key, this__14911.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__14911.left, null), this__14911.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__14911.left)) {
      return new cljs.core.RedNode(this__14911.left.key, this__14911.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__14911.left.left, null), new cljs.core.BlackNode(this__14911.key, this__14911.val, this__14911.left.right, this__14911.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__14912, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__14913 = this;
  var node__14914 = this;
  return new cljs.core.BlackNode(this__14913.key, this__14913.val, this__14913.left, this__14913.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__14915 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__14916 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__14917 = this;
  return cljs.core.list.call(null, this__14917.key, this__14917.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__14918 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__14919 = this;
  return this__14919.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__14920 = this;
  return cljs.core.PersistentVector.fromArray([this__14920.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__14921 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__14921.key, this__14921.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14922 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__14923 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__14923.key, this__14923.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__14924 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__14925 = this;
  if(n === 0) {
    return this__14925.key
  }else {
    if(n === 1) {
      return this__14925.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__14926 = this;
  if(n === 0) {
    return this__14926.key
  }else {
    if(n === 1) {
      return this__14926.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__14927 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__14933 = comp.call(null, k, tree.key);
    if(c__14933 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__14933 < 0) {
        var ins__14934 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__14934 == null)) {
          return tree.add_left(ins__14934)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__14935 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__14935 == null)) {
            return tree.add_right(ins__14935)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__14938 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__14938)) {
            return new cljs.core.RedNode(app__14938.key, app__14938.val, new cljs.core.RedNode(left.key, left.val, left.left, app__14938.left, null), new cljs.core.RedNode(right.key, right.val, app__14938.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__14938, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__14939 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__14939)) {
              return new cljs.core.RedNode(app__14939.key, app__14939.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__14939.left, null), new cljs.core.BlackNode(right.key, right.val, app__14939.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__14939, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__14945 = comp.call(null, k, tree.key);
    if(c__14945 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__14945 < 0) {
        var del__14946 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____14947 = !(del__14946 == null);
          if(or__3824__auto____14947) {
            return or__3824__auto____14947
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__14946, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__14946, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__14948 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____14949 = !(del__14948 == null);
            if(or__3824__auto____14949) {
              return or__3824__auto____14949
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__14948)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__14948, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__14952 = tree.key;
  var c__14953 = comp.call(null, k, tk__14952);
  if(c__14953 === 0) {
    return tree.replace(tk__14952, v, tree.left, tree.right)
  }else {
    if(c__14953 < 0) {
      return tree.replace(tk__14952, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__14952, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14956 = this;
  var h__2093__auto____14957 = this__14956.__hash;
  if(!(h__2093__auto____14957 == null)) {
    return h__2093__auto____14957
  }else {
    var h__2093__auto____14958 = cljs.core.hash_imap.call(null, coll);
    this__14956.__hash = h__2093__auto____14958;
    return h__2093__auto____14958
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__14959 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__14960 = this;
  var n__14961 = coll.entry_at(k);
  if(!(n__14961 == null)) {
    return n__14961.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__14962 = this;
  var found__14963 = [null];
  var t__14964 = cljs.core.tree_map_add.call(null, this__14962.comp, this__14962.tree, k, v, found__14963);
  if(t__14964 == null) {
    var found_node__14965 = cljs.core.nth.call(null, found__14963, 0);
    if(cljs.core._EQ_.call(null, v, found_node__14965.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__14962.comp, cljs.core.tree_map_replace.call(null, this__14962.comp, this__14962.tree, k, v), this__14962.cnt, this__14962.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__14962.comp, t__14964.blacken(), this__14962.cnt + 1, this__14962.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__14966 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__15000 = null;
  var G__15000__2 = function(this_sym14967, k) {
    var this__14969 = this;
    var this_sym14967__14970 = this;
    var coll__14971 = this_sym14967__14970;
    return coll__14971.cljs$core$ILookup$_lookup$arity$2(coll__14971, k)
  };
  var G__15000__3 = function(this_sym14968, k, not_found) {
    var this__14969 = this;
    var this_sym14968__14972 = this;
    var coll__14973 = this_sym14968__14972;
    return coll__14973.cljs$core$ILookup$_lookup$arity$3(coll__14973, k, not_found)
  };
  G__15000 = function(this_sym14968, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15000__2.call(this, this_sym14968, k);
      case 3:
        return G__15000__3.call(this, this_sym14968, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__15000
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym14954, args14955) {
  var this__14974 = this;
  return this_sym14954.call.apply(this_sym14954, [this_sym14954].concat(args14955.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__14975 = this;
  if(!(this__14975.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__14975.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__14976 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__14977 = this;
  if(this__14977.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__14977.tree, false, this__14977.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__14978 = this;
  var this__14979 = this;
  return cljs.core.pr_str.call(null, this__14979)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__14980 = this;
  var coll__14981 = this;
  var t__14982 = this__14980.tree;
  while(true) {
    if(!(t__14982 == null)) {
      var c__14983 = this__14980.comp.call(null, k, t__14982.key);
      if(c__14983 === 0) {
        return t__14982
      }else {
        if(c__14983 < 0) {
          var G__15001 = t__14982.left;
          t__14982 = G__15001;
          continue
        }else {
          if("\ufdd0'else") {
            var G__15002 = t__14982.right;
            t__14982 = G__15002;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__14984 = this;
  if(this__14984.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__14984.tree, ascending_QMARK_, this__14984.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__14985 = this;
  if(this__14985.cnt > 0) {
    var stack__14986 = null;
    var t__14987 = this__14985.tree;
    while(true) {
      if(!(t__14987 == null)) {
        var c__14988 = this__14985.comp.call(null, k, t__14987.key);
        if(c__14988 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__14986, t__14987), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__14988 < 0) {
              var G__15003 = cljs.core.conj.call(null, stack__14986, t__14987);
              var G__15004 = t__14987.left;
              stack__14986 = G__15003;
              t__14987 = G__15004;
              continue
            }else {
              var G__15005 = stack__14986;
              var G__15006 = t__14987.right;
              stack__14986 = G__15005;
              t__14987 = G__15006;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__14988 > 0) {
                var G__15007 = cljs.core.conj.call(null, stack__14986, t__14987);
                var G__15008 = t__14987.right;
                stack__14986 = G__15007;
                t__14987 = G__15008;
                continue
              }else {
                var G__15009 = stack__14986;
                var G__15010 = t__14987.left;
                stack__14986 = G__15009;
                t__14987 = G__15010;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__14986 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__14986, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__14989 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__14990 = this;
  return this__14990.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14991 = this;
  if(this__14991.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__14991.tree, true, this__14991.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14992 = this;
  return this__14992.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14993 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14994 = this;
  return new cljs.core.PersistentTreeMap(this__14994.comp, this__14994.tree, this__14994.cnt, meta, this__14994.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14995 = this;
  return this__14995.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14996 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__14996.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__14997 = this;
  var found__14998 = [null];
  var t__14999 = cljs.core.tree_map_remove.call(null, this__14997.comp, this__14997.tree, k, found__14998);
  if(t__14999 == null) {
    if(cljs.core.nth.call(null, found__14998, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__14997.comp, null, 0, this__14997.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__14997.comp, t__14999.blacken(), this__14997.cnt - 1, this__14997.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__15013 = cljs.core.seq.call(null, keyvals);
    var out__15014 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__15013) {
        var G__15015 = cljs.core.nnext.call(null, in__15013);
        var G__15016 = cljs.core.assoc_BANG_.call(null, out__15014, cljs.core.first.call(null, in__15013), cljs.core.second.call(null, in__15013));
        in__15013 = G__15015;
        out__15014 = G__15016;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__15014)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__15017) {
    var keyvals = cljs.core.seq(arglist__15017);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__15018) {
    var keyvals = cljs.core.seq(arglist__15018);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__15022 = [];
    var obj__15023 = {};
    var kvs__15024 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__15024) {
        ks__15022.push(cljs.core.first.call(null, kvs__15024));
        obj__15023[cljs.core.first.call(null, kvs__15024)] = cljs.core.second.call(null, kvs__15024);
        var G__15025 = cljs.core.nnext.call(null, kvs__15024);
        kvs__15024 = G__15025;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__15022, obj__15023)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__15026) {
    var keyvals = cljs.core.seq(arglist__15026);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__15029 = cljs.core.seq.call(null, keyvals);
    var out__15030 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__15029) {
        var G__15031 = cljs.core.nnext.call(null, in__15029);
        var G__15032 = cljs.core.assoc.call(null, out__15030, cljs.core.first.call(null, in__15029), cljs.core.second.call(null, in__15029));
        in__15029 = G__15031;
        out__15030 = G__15032;
        continue
      }else {
        return out__15030
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__15033) {
    var keyvals = cljs.core.seq(arglist__15033);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__15036 = cljs.core.seq.call(null, keyvals);
    var out__15037 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__15036) {
        var G__15038 = cljs.core.nnext.call(null, in__15036);
        var G__15039 = cljs.core.assoc.call(null, out__15037, cljs.core.first.call(null, in__15036), cljs.core.second.call(null, in__15036));
        in__15036 = G__15038;
        out__15037 = G__15039;
        continue
      }else {
        return out__15037
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__15040) {
    var comparator = cljs.core.first(arglist__15040);
    var keyvals = cljs.core.rest(arglist__15040);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__15041_SHARP_, p2__15042_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____15044 = p1__15041_SHARP_;
          if(cljs.core.truth_(or__3824__auto____15044)) {
            return or__3824__auto____15044
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__15042_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__15045) {
    var maps = cljs.core.seq(arglist__15045);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__15053 = function(m, e) {
        var k__15051 = cljs.core.first.call(null, e);
        var v__15052 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__15051)) {
          return cljs.core.assoc.call(null, m, k__15051, f.call(null, cljs.core._lookup.call(null, m, k__15051, null), v__15052))
        }else {
          return cljs.core.assoc.call(null, m, k__15051, v__15052)
        }
      };
      var merge2__15055 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__15053, function() {
          var or__3824__auto____15054 = m1;
          if(cljs.core.truth_(or__3824__auto____15054)) {
            return or__3824__auto____15054
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__15055, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__15056) {
    var f = cljs.core.first(arglist__15056);
    var maps = cljs.core.rest(arglist__15056);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__15061 = cljs.core.ObjMap.EMPTY;
  var keys__15062 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__15062) {
      var key__15063 = cljs.core.first.call(null, keys__15062);
      var entry__15064 = cljs.core._lookup.call(null, map, key__15063, "\ufdd0'cljs.core/not-found");
      var G__15065 = cljs.core.not_EQ_.call(null, entry__15064, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__15061, key__15063, entry__15064) : ret__15061;
      var G__15066 = cljs.core.next.call(null, keys__15062);
      ret__15061 = G__15065;
      keys__15062 = G__15066;
      continue
    }else {
      return ret__15061
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__15070 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__15070.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__15071 = this;
  var h__2093__auto____15072 = this__15071.__hash;
  if(!(h__2093__auto____15072 == null)) {
    return h__2093__auto____15072
  }else {
    var h__2093__auto____15073 = cljs.core.hash_iset.call(null, coll);
    this__15071.__hash = h__2093__auto____15073;
    return h__2093__auto____15073
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__15074 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__15075 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__15075.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__15096 = null;
  var G__15096__2 = function(this_sym15076, k) {
    var this__15078 = this;
    var this_sym15076__15079 = this;
    var coll__15080 = this_sym15076__15079;
    return coll__15080.cljs$core$ILookup$_lookup$arity$2(coll__15080, k)
  };
  var G__15096__3 = function(this_sym15077, k, not_found) {
    var this__15078 = this;
    var this_sym15077__15081 = this;
    var coll__15082 = this_sym15077__15081;
    return coll__15082.cljs$core$ILookup$_lookup$arity$3(coll__15082, k, not_found)
  };
  G__15096 = function(this_sym15077, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15096__2.call(this, this_sym15077, k);
      case 3:
        return G__15096__3.call(this, this_sym15077, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__15096
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym15068, args15069) {
  var this__15083 = this;
  return this_sym15068.call.apply(this_sym15068, [this_sym15068].concat(args15069.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__15084 = this;
  return new cljs.core.PersistentHashSet(this__15084.meta, cljs.core.assoc.call(null, this__15084.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__15085 = this;
  var this__15086 = this;
  return cljs.core.pr_str.call(null, this__15086)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__15087 = this;
  return cljs.core.keys.call(null, this__15087.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__15088 = this;
  return new cljs.core.PersistentHashSet(this__15088.meta, cljs.core.dissoc.call(null, this__15088.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__15089 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__15090 = this;
  var and__3822__auto____15091 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____15091) {
    var and__3822__auto____15092 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____15092) {
      return cljs.core.every_QMARK_.call(null, function(p1__15067_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__15067_SHARP_)
      }, other)
    }else {
      return and__3822__auto____15092
    }
  }else {
    return and__3822__auto____15091
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__15093 = this;
  return new cljs.core.PersistentHashSet(meta, this__15093.hash_map, this__15093.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__15094 = this;
  return this__15094.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__15095 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__15095.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__15097 = cljs.core.count.call(null, items);
  var i__15098 = 0;
  var out__15099 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__15098 < len__15097) {
      var G__15100 = i__15098 + 1;
      var G__15101 = cljs.core.conj_BANG_.call(null, out__15099, items[i__15098]);
      i__15098 = G__15100;
      out__15099 = G__15101;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__15099)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__15119 = null;
  var G__15119__2 = function(this_sym15105, k) {
    var this__15107 = this;
    var this_sym15105__15108 = this;
    var tcoll__15109 = this_sym15105__15108;
    if(cljs.core._lookup.call(null, this__15107.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__15119__3 = function(this_sym15106, k, not_found) {
    var this__15107 = this;
    var this_sym15106__15110 = this;
    var tcoll__15111 = this_sym15106__15110;
    if(cljs.core._lookup.call(null, this__15107.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__15119 = function(this_sym15106, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15119__2.call(this, this_sym15106, k);
      case 3:
        return G__15119__3.call(this, this_sym15106, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__15119
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym15103, args15104) {
  var this__15112 = this;
  return this_sym15103.call.apply(this_sym15103, [this_sym15103].concat(args15104.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__15113 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__15114 = this;
  if(cljs.core._lookup.call(null, this__15114.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__15115 = this;
  return cljs.core.count.call(null, this__15115.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__15116 = this;
  this__15116.transient_map = cljs.core.dissoc_BANG_.call(null, this__15116.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__15117 = this;
  this__15117.transient_map = cljs.core.assoc_BANG_.call(null, this__15117.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__15118 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__15118.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__15122 = this;
  var h__2093__auto____15123 = this__15122.__hash;
  if(!(h__2093__auto____15123 == null)) {
    return h__2093__auto____15123
  }else {
    var h__2093__auto____15124 = cljs.core.hash_iset.call(null, coll);
    this__15122.__hash = h__2093__auto____15124;
    return h__2093__auto____15124
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__15125 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__15126 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__15126.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__15152 = null;
  var G__15152__2 = function(this_sym15127, k) {
    var this__15129 = this;
    var this_sym15127__15130 = this;
    var coll__15131 = this_sym15127__15130;
    return coll__15131.cljs$core$ILookup$_lookup$arity$2(coll__15131, k)
  };
  var G__15152__3 = function(this_sym15128, k, not_found) {
    var this__15129 = this;
    var this_sym15128__15132 = this;
    var coll__15133 = this_sym15128__15132;
    return coll__15133.cljs$core$ILookup$_lookup$arity$3(coll__15133, k, not_found)
  };
  G__15152 = function(this_sym15128, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15152__2.call(this, this_sym15128, k);
      case 3:
        return G__15152__3.call(this, this_sym15128, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__15152
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym15120, args15121) {
  var this__15134 = this;
  return this_sym15120.call.apply(this_sym15120, [this_sym15120].concat(args15121.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__15135 = this;
  return new cljs.core.PersistentTreeSet(this__15135.meta, cljs.core.assoc.call(null, this__15135.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__15136 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__15136.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__15137 = this;
  var this__15138 = this;
  return cljs.core.pr_str.call(null, this__15138)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__15139 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__15139.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__15140 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__15140.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__15141 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__15142 = this;
  return cljs.core._comparator.call(null, this__15142.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__15143 = this;
  return cljs.core.keys.call(null, this__15143.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__15144 = this;
  return new cljs.core.PersistentTreeSet(this__15144.meta, cljs.core.dissoc.call(null, this__15144.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__15145 = this;
  return cljs.core.count.call(null, this__15145.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__15146 = this;
  var and__3822__auto____15147 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____15147) {
    var and__3822__auto____15148 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____15148) {
      return cljs.core.every_QMARK_.call(null, function(p1__15102_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__15102_SHARP_)
      }, other)
    }else {
      return and__3822__auto____15148
    }
  }else {
    return and__3822__auto____15147
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__15149 = this;
  return new cljs.core.PersistentTreeSet(meta, this__15149.tree_map, this__15149.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__15150 = this;
  return this__15150.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__15151 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__15151.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__15157__delegate = function(keys) {
      var in__15155 = cljs.core.seq.call(null, keys);
      var out__15156 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__15155)) {
          var G__15158 = cljs.core.next.call(null, in__15155);
          var G__15159 = cljs.core.conj_BANG_.call(null, out__15156, cljs.core.first.call(null, in__15155));
          in__15155 = G__15158;
          out__15156 = G__15159;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__15156)
        }
        break
      }
    };
    var G__15157 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__15157__delegate.call(this, keys)
    };
    G__15157.cljs$lang$maxFixedArity = 0;
    G__15157.cljs$lang$applyTo = function(arglist__15160) {
      var keys = cljs.core.seq(arglist__15160);
      return G__15157__delegate(keys)
    };
    G__15157.cljs$lang$arity$variadic = G__15157__delegate;
    return G__15157
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__15161) {
    var keys = cljs.core.seq(arglist__15161);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__15163) {
    var comparator = cljs.core.first(arglist__15163);
    var keys = cljs.core.rest(arglist__15163);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__15169 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____15170 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____15170)) {
        var e__15171 = temp__3971__auto____15170;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__15171))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__15169, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__15162_SHARP_) {
      var temp__3971__auto____15172 = cljs.core.find.call(null, smap, p1__15162_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____15172)) {
        var e__15173 = temp__3971__auto____15172;
        return cljs.core.second.call(null, e__15173)
      }else {
        return p1__15162_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__15203 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__15196, seen) {
        while(true) {
          var vec__15197__15198 = p__15196;
          var f__15199 = cljs.core.nth.call(null, vec__15197__15198, 0, null);
          var xs__15200 = vec__15197__15198;
          var temp__3974__auto____15201 = cljs.core.seq.call(null, xs__15200);
          if(temp__3974__auto____15201) {
            var s__15202 = temp__3974__auto____15201;
            if(cljs.core.contains_QMARK_.call(null, seen, f__15199)) {
              var G__15204 = cljs.core.rest.call(null, s__15202);
              var G__15205 = seen;
              p__15196 = G__15204;
              seen = G__15205;
              continue
            }else {
              return cljs.core.cons.call(null, f__15199, step.call(null, cljs.core.rest.call(null, s__15202), cljs.core.conj.call(null, seen, f__15199)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__15203.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__15208 = cljs.core.PersistentVector.EMPTY;
  var s__15209 = s;
  while(true) {
    if(cljs.core.next.call(null, s__15209)) {
      var G__15210 = cljs.core.conj.call(null, ret__15208, cljs.core.first.call(null, s__15209));
      var G__15211 = cljs.core.next.call(null, s__15209);
      ret__15208 = G__15210;
      s__15209 = G__15211;
      continue
    }else {
      return cljs.core.seq.call(null, ret__15208)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____15214 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____15214) {
        return or__3824__auto____15214
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__15215 = x.lastIndexOf("/");
      if(i__15215 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__15215 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____15218 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____15218) {
      return or__3824__auto____15218
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__15219 = x.lastIndexOf("/");
    if(i__15219 > -1) {
      return cljs.core.subs.call(null, x, 2, i__15219)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__15226 = cljs.core.ObjMap.EMPTY;
  var ks__15227 = cljs.core.seq.call(null, keys);
  var vs__15228 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____15229 = ks__15227;
      if(and__3822__auto____15229) {
        return vs__15228
      }else {
        return and__3822__auto____15229
      }
    }()) {
      var G__15230 = cljs.core.assoc.call(null, map__15226, cljs.core.first.call(null, ks__15227), cljs.core.first.call(null, vs__15228));
      var G__15231 = cljs.core.next.call(null, ks__15227);
      var G__15232 = cljs.core.next.call(null, vs__15228);
      map__15226 = G__15230;
      ks__15227 = G__15231;
      vs__15228 = G__15232;
      continue
    }else {
      return map__15226
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__15235__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__15220_SHARP_, p2__15221_SHARP_) {
        return max_key.call(null, k, p1__15220_SHARP_, p2__15221_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__15235 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__15235__delegate.call(this, k, x, y, more)
    };
    G__15235.cljs$lang$maxFixedArity = 3;
    G__15235.cljs$lang$applyTo = function(arglist__15236) {
      var k = cljs.core.first(arglist__15236);
      var x = cljs.core.first(cljs.core.next(arglist__15236));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15236)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__15236)));
      return G__15235__delegate(k, x, y, more)
    };
    G__15235.cljs$lang$arity$variadic = G__15235__delegate;
    return G__15235
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__15237__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__15233_SHARP_, p2__15234_SHARP_) {
        return min_key.call(null, k, p1__15233_SHARP_, p2__15234_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__15237 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__15237__delegate.call(this, k, x, y, more)
    };
    G__15237.cljs$lang$maxFixedArity = 3;
    G__15237.cljs$lang$applyTo = function(arglist__15238) {
      var k = cljs.core.first(arglist__15238);
      var x = cljs.core.first(cljs.core.next(arglist__15238));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15238)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__15238)));
      return G__15237__delegate(k, x, y, more)
    };
    G__15237.cljs$lang$arity$variadic = G__15237__delegate;
    return G__15237
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____15241 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____15241) {
        var s__15242 = temp__3974__auto____15241;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__15242), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__15242)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____15245 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____15245) {
      var s__15246 = temp__3974__auto____15245;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__15246)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__15246), take_while.call(null, pred, cljs.core.rest.call(null, s__15246)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__15248 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__15248.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__15260 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____15261 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____15261)) {
        var vec__15262__15263 = temp__3974__auto____15261;
        var e__15264 = cljs.core.nth.call(null, vec__15262__15263, 0, null);
        var s__15265 = vec__15262__15263;
        if(cljs.core.truth_(include__15260.call(null, e__15264))) {
          return s__15265
        }else {
          return cljs.core.next.call(null, s__15265)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__15260, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____15266 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____15266)) {
      var vec__15267__15268 = temp__3974__auto____15266;
      var e__15269 = cljs.core.nth.call(null, vec__15267__15268, 0, null);
      var s__15270 = vec__15267__15268;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__15269)) ? s__15270 : cljs.core.next.call(null, s__15270))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__15282 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____15283 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____15283)) {
        var vec__15284__15285 = temp__3974__auto____15283;
        var e__15286 = cljs.core.nth.call(null, vec__15284__15285, 0, null);
        var s__15287 = vec__15284__15285;
        if(cljs.core.truth_(include__15282.call(null, e__15286))) {
          return s__15287
        }else {
          return cljs.core.next.call(null, s__15287)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__15282, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____15288 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____15288)) {
      var vec__15289__15290 = temp__3974__auto____15288;
      var e__15291 = cljs.core.nth.call(null, vec__15289__15290, 0, null);
      var s__15292 = vec__15289__15290;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__15291)) ? s__15292 : cljs.core.next.call(null, s__15292))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__15293 = this;
  var h__2093__auto____15294 = this__15293.__hash;
  if(!(h__2093__auto____15294 == null)) {
    return h__2093__auto____15294
  }else {
    var h__2093__auto____15295 = cljs.core.hash_coll.call(null, rng);
    this__15293.__hash = h__2093__auto____15295;
    return h__2093__auto____15295
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__15296 = this;
  if(this__15296.step > 0) {
    if(this__15296.start + this__15296.step < this__15296.end) {
      return new cljs.core.Range(this__15296.meta, this__15296.start + this__15296.step, this__15296.end, this__15296.step, null)
    }else {
      return null
    }
  }else {
    if(this__15296.start + this__15296.step > this__15296.end) {
      return new cljs.core.Range(this__15296.meta, this__15296.start + this__15296.step, this__15296.end, this__15296.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__15297 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__15298 = this;
  var this__15299 = this;
  return cljs.core.pr_str.call(null, this__15299)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__15300 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__15301 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__15302 = this;
  if(this__15302.step > 0) {
    if(this__15302.start < this__15302.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__15302.start > this__15302.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__15303 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__15303.end - this__15303.start) / this__15303.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__15304 = this;
  return this__15304.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__15305 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__15305.meta, this__15305.start + this__15305.step, this__15305.end, this__15305.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__15306 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__15307 = this;
  return new cljs.core.Range(meta, this__15307.start, this__15307.end, this__15307.step, this__15307.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__15308 = this;
  return this__15308.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__15309 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__15309.start + n * this__15309.step
  }else {
    if(function() {
      var and__3822__auto____15310 = this__15309.start > this__15309.end;
      if(and__3822__auto____15310) {
        return this__15309.step === 0
      }else {
        return and__3822__auto____15310
      }
    }()) {
      return this__15309.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__15311 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__15311.start + n * this__15311.step
  }else {
    if(function() {
      var and__3822__auto____15312 = this__15311.start > this__15311.end;
      if(and__3822__auto____15312) {
        return this__15311.step === 0
      }else {
        return and__3822__auto____15312
      }
    }()) {
      return this__15311.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__15313 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__15313.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____15316 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____15316) {
      var s__15317 = temp__3974__auto____15316;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__15317), take_nth.call(null, n, cljs.core.drop.call(null, n, s__15317)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____15324 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____15324) {
      var s__15325 = temp__3974__auto____15324;
      var fst__15326 = cljs.core.first.call(null, s__15325);
      var fv__15327 = f.call(null, fst__15326);
      var run__15328 = cljs.core.cons.call(null, fst__15326, cljs.core.take_while.call(null, function(p1__15318_SHARP_) {
        return cljs.core._EQ_.call(null, fv__15327, f.call(null, p1__15318_SHARP_))
      }, cljs.core.next.call(null, s__15325)));
      return cljs.core.cons.call(null, run__15328, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__15328), s__15325))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____15343 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____15343) {
        var s__15344 = temp__3971__auto____15343;
        return reductions.call(null, f, cljs.core.first.call(null, s__15344), cljs.core.rest.call(null, s__15344))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____15345 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____15345) {
        var s__15346 = temp__3974__auto____15345;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__15346)), cljs.core.rest.call(null, s__15346))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__15349 = null;
      var G__15349__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__15349__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__15349__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__15349__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__15349__4 = function() {
        var G__15350__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__15350 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__15350__delegate.call(this, x, y, z, args)
        };
        G__15350.cljs$lang$maxFixedArity = 3;
        G__15350.cljs$lang$applyTo = function(arglist__15351) {
          var x = cljs.core.first(arglist__15351);
          var y = cljs.core.first(cljs.core.next(arglist__15351));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15351)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__15351)));
          return G__15350__delegate(x, y, z, args)
        };
        G__15350.cljs$lang$arity$variadic = G__15350__delegate;
        return G__15350
      }();
      G__15349 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15349__0.call(this);
          case 1:
            return G__15349__1.call(this, x);
          case 2:
            return G__15349__2.call(this, x, y);
          case 3:
            return G__15349__3.call(this, x, y, z);
          default:
            return G__15349__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__15349.cljs$lang$maxFixedArity = 3;
      G__15349.cljs$lang$applyTo = G__15349__4.cljs$lang$applyTo;
      return G__15349
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__15352 = null;
      var G__15352__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__15352__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__15352__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__15352__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__15352__4 = function() {
        var G__15353__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__15353 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__15353__delegate.call(this, x, y, z, args)
        };
        G__15353.cljs$lang$maxFixedArity = 3;
        G__15353.cljs$lang$applyTo = function(arglist__15354) {
          var x = cljs.core.first(arglist__15354);
          var y = cljs.core.first(cljs.core.next(arglist__15354));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15354)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__15354)));
          return G__15353__delegate(x, y, z, args)
        };
        G__15353.cljs$lang$arity$variadic = G__15353__delegate;
        return G__15353
      }();
      G__15352 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15352__0.call(this);
          case 1:
            return G__15352__1.call(this, x);
          case 2:
            return G__15352__2.call(this, x, y);
          case 3:
            return G__15352__3.call(this, x, y, z);
          default:
            return G__15352__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__15352.cljs$lang$maxFixedArity = 3;
      G__15352.cljs$lang$applyTo = G__15352__4.cljs$lang$applyTo;
      return G__15352
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__15355 = null;
      var G__15355__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__15355__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__15355__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__15355__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__15355__4 = function() {
        var G__15356__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__15356 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__15356__delegate.call(this, x, y, z, args)
        };
        G__15356.cljs$lang$maxFixedArity = 3;
        G__15356.cljs$lang$applyTo = function(arglist__15357) {
          var x = cljs.core.first(arglist__15357);
          var y = cljs.core.first(cljs.core.next(arglist__15357));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15357)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__15357)));
          return G__15356__delegate(x, y, z, args)
        };
        G__15356.cljs$lang$arity$variadic = G__15356__delegate;
        return G__15356
      }();
      G__15355 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15355__0.call(this);
          case 1:
            return G__15355__1.call(this, x);
          case 2:
            return G__15355__2.call(this, x, y);
          case 3:
            return G__15355__3.call(this, x, y, z);
          default:
            return G__15355__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__15355.cljs$lang$maxFixedArity = 3;
      G__15355.cljs$lang$applyTo = G__15355__4.cljs$lang$applyTo;
      return G__15355
    }()
  };
  var juxt__4 = function() {
    var G__15358__delegate = function(f, g, h, fs) {
      var fs__15348 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__15359 = null;
        var G__15359__0 = function() {
          return cljs.core.reduce.call(null, function(p1__15329_SHARP_, p2__15330_SHARP_) {
            return cljs.core.conj.call(null, p1__15329_SHARP_, p2__15330_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__15348)
        };
        var G__15359__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__15331_SHARP_, p2__15332_SHARP_) {
            return cljs.core.conj.call(null, p1__15331_SHARP_, p2__15332_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__15348)
        };
        var G__15359__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__15333_SHARP_, p2__15334_SHARP_) {
            return cljs.core.conj.call(null, p1__15333_SHARP_, p2__15334_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__15348)
        };
        var G__15359__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__15335_SHARP_, p2__15336_SHARP_) {
            return cljs.core.conj.call(null, p1__15335_SHARP_, p2__15336_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__15348)
        };
        var G__15359__4 = function() {
          var G__15360__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__15337_SHARP_, p2__15338_SHARP_) {
              return cljs.core.conj.call(null, p1__15337_SHARP_, cljs.core.apply.call(null, p2__15338_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__15348)
          };
          var G__15360 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__15360__delegate.call(this, x, y, z, args)
          };
          G__15360.cljs$lang$maxFixedArity = 3;
          G__15360.cljs$lang$applyTo = function(arglist__15361) {
            var x = cljs.core.first(arglist__15361);
            var y = cljs.core.first(cljs.core.next(arglist__15361));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15361)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__15361)));
            return G__15360__delegate(x, y, z, args)
          };
          G__15360.cljs$lang$arity$variadic = G__15360__delegate;
          return G__15360
        }();
        G__15359 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__15359__0.call(this);
            case 1:
              return G__15359__1.call(this, x);
            case 2:
              return G__15359__2.call(this, x, y);
            case 3:
              return G__15359__3.call(this, x, y, z);
            default:
              return G__15359__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__15359.cljs$lang$maxFixedArity = 3;
        G__15359.cljs$lang$applyTo = G__15359__4.cljs$lang$applyTo;
        return G__15359
      }()
    };
    var G__15358 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__15358__delegate.call(this, f, g, h, fs)
    };
    G__15358.cljs$lang$maxFixedArity = 3;
    G__15358.cljs$lang$applyTo = function(arglist__15362) {
      var f = cljs.core.first(arglist__15362);
      var g = cljs.core.first(cljs.core.next(arglist__15362));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15362)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__15362)));
      return G__15358__delegate(f, g, h, fs)
    };
    G__15358.cljs$lang$arity$variadic = G__15358__delegate;
    return G__15358
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__15365 = cljs.core.next.call(null, coll);
        coll = G__15365;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____15364 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____15364) {
          return n > 0
        }else {
          return and__3822__auto____15364
        }
      }())) {
        var G__15366 = n - 1;
        var G__15367 = cljs.core.next.call(null, coll);
        n = G__15366;
        coll = G__15367;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__15369 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__15369), s)) {
    if(cljs.core.count.call(null, matches__15369) === 1) {
      return cljs.core.first.call(null, matches__15369)
    }else {
      return cljs.core.vec.call(null, matches__15369)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__15371 = re.exec(s);
  if(matches__15371 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__15371) === 1) {
      return cljs.core.first.call(null, matches__15371)
    }else {
      return cljs.core.vec.call(null, matches__15371)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__15376 = cljs.core.re_find.call(null, re, s);
  var match_idx__15377 = s.search(re);
  var match_str__15378 = cljs.core.coll_QMARK_.call(null, match_data__15376) ? cljs.core.first.call(null, match_data__15376) : match_data__15376;
  var post_match__15379 = cljs.core.subs.call(null, s, match_idx__15377 + cljs.core.count.call(null, match_str__15378));
  if(cljs.core.truth_(match_data__15376)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__15376, re_seq.call(null, re, post_match__15379))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__15386__15387 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___15388 = cljs.core.nth.call(null, vec__15386__15387, 0, null);
  var flags__15389 = cljs.core.nth.call(null, vec__15386__15387, 1, null);
  var pattern__15390 = cljs.core.nth.call(null, vec__15386__15387, 2, null);
  return new RegExp(pattern__15390, flags__15389)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__15380_SHARP_) {
    return print_one.call(null, p1__15380_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____15400 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____15400)) {
            var and__3822__auto____15404 = function() {
              var G__15401__15402 = obj;
              if(G__15401__15402) {
                if(function() {
                  var or__3824__auto____15403 = G__15401__15402.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____15403) {
                    return or__3824__auto____15403
                  }else {
                    return G__15401__15402.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__15401__15402.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__15401__15402)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__15401__15402)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____15404)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____15404
            }
          }else {
            return and__3822__auto____15400
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____15405 = !(obj == null);
          if(and__3822__auto____15405) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____15405
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__15406__15407 = obj;
          if(G__15406__15407) {
            if(function() {
              var or__3824__auto____15408 = G__15406__15407.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____15408) {
                return or__3824__auto____15408
              }else {
                return G__15406__15407.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__15406__15407.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__15406__15407)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__15406__15407)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__15428 = new goog.string.StringBuffer;
  var G__15429__15430 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__15429__15430) {
    var string__15431 = cljs.core.first.call(null, G__15429__15430);
    var G__15429__15432 = G__15429__15430;
    while(true) {
      sb__15428.append(string__15431);
      var temp__3974__auto____15433 = cljs.core.next.call(null, G__15429__15432);
      if(temp__3974__auto____15433) {
        var G__15429__15434 = temp__3974__auto____15433;
        var G__15447 = cljs.core.first.call(null, G__15429__15434);
        var G__15448 = G__15429__15434;
        string__15431 = G__15447;
        G__15429__15432 = G__15448;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__15435__15436 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__15435__15436) {
    var obj__15437 = cljs.core.first.call(null, G__15435__15436);
    var G__15435__15438 = G__15435__15436;
    while(true) {
      sb__15428.append(" ");
      var G__15439__15440 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__15437, opts));
      if(G__15439__15440) {
        var string__15441 = cljs.core.first.call(null, G__15439__15440);
        var G__15439__15442 = G__15439__15440;
        while(true) {
          sb__15428.append(string__15441);
          var temp__3974__auto____15443 = cljs.core.next.call(null, G__15439__15442);
          if(temp__3974__auto____15443) {
            var G__15439__15444 = temp__3974__auto____15443;
            var G__15449 = cljs.core.first.call(null, G__15439__15444);
            var G__15450 = G__15439__15444;
            string__15441 = G__15449;
            G__15439__15442 = G__15450;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____15445 = cljs.core.next.call(null, G__15435__15438);
      if(temp__3974__auto____15445) {
        var G__15435__15446 = temp__3974__auto____15445;
        var G__15451 = cljs.core.first.call(null, G__15435__15446);
        var G__15452 = G__15435__15446;
        obj__15437 = G__15451;
        G__15435__15438 = G__15452;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__15428
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__15454 = cljs.core.pr_sb.call(null, objs, opts);
  sb__15454.append("\n");
  return[cljs.core.str(sb__15454)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__15473__15474 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__15473__15474) {
    var string__15475 = cljs.core.first.call(null, G__15473__15474);
    var G__15473__15476 = G__15473__15474;
    while(true) {
      cljs.core.string_print.call(null, string__15475);
      var temp__3974__auto____15477 = cljs.core.next.call(null, G__15473__15476);
      if(temp__3974__auto____15477) {
        var G__15473__15478 = temp__3974__auto____15477;
        var G__15491 = cljs.core.first.call(null, G__15473__15478);
        var G__15492 = G__15473__15478;
        string__15475 = G__15491;
        G__15473__15476 = G__15492;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__15479__15480 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__15479__15480) {
    var obj__15481 = cljs.core.first.call(null, G__15479__15480);
    var G__15479__15482 = G__15479__15480;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__15483__15484 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__15481, opts));
      if(G__15483__15484) {
        var string__15485 = cljs.core.first.call(null, G__15483__15484);
        var G__15483__15486 = G__15483__15484;
        while(true) {
          cljs.core.string_print.call(null, string__15485);
          var temp__3974__auto____15487 = cljs.core.next.call(null, G__15483__15486);
          if(temp__3974__auto____15487) {
            var G__15483__15488 = temp__3974__auto____15487;
            var G__15493 = cljs.core.first.call(null, G__15483__15488);
            var G__15494 = G__15483__15488;
            string__15485 = G__15493;
            G__15483__15486 = G__15494;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____15489 = cljs.core.next.call(null, G__15479__15482);
      if(temp__3974__auto____15489) {
        var G__15479__15490 = temp__3974__auto____15489;
        var G__15495 = cljs.core.first.call(null, G__15479__15490);
        var G__15496 = G__15479__15490;
        obj__15481 = G__15495;
        G__15479__15482 = G__15496;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__15497) {
    var objs = cljs.core.seq(arglist__15497);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__15498) {
    var objs = cljs.core.seq(arglist__15498);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__15499) {
    var objs = cljs.core.seq(arglist__15499);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__15500) {
    var objs = cljs.core.seq(arglist__15500);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__15501) {
    var objs = cljs.core.seq(arglist__15501);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__15502) {
    var objs = cljs.core.seq(arglist__15502);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__15503) {
    var objs = cljs.core.seq(arglist__15503);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__15504) {
    var objs = cljs.core.seq(arglist__15504);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__15505) {
    var fmt = cljs.core.first(arglist__15505);
    var args = cljs.core.rest(arglist__15505);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__15506 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__15506, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__15507 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__15507, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__15508 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__15508, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____15509 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____15509)) {
        var nspc__15510 = temp__3974__auto____15509;
        return[cljs.core.str(nspc__15510), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____15511 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____15511)) {
          var nspc__15512 = temp__3974__auto____15511;
          return[cljs.core.str(nspc__15512), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__15513 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__15513, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__15515 = function(n, len) {
    var ns__15514 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__15514) < len) {
        var G__15517 = [cljs.core.str("0"), cljs.core.str(ns__15514)].join("");
        ns__15514 = G__15517;
        continue
      }else {
        return ns__15514
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__15515.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__15515.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__15515.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__15515.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__15515.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__15515.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__15516 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__15516, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__15518 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__15519 = this;
  var G__15520__15521 = cljs.core.seq.call(null, this__15519.watches);
  if(G__15520__15521) {
    var G__15523__15525 = cljs.core.first.call(null, G__15520__15521);
    var vec__15524__15526 = G__15523__15525;
    var key__15527 = cljs.core.nth.call(null, vec__15524__15526, 0, null);
    var f__15528 = cljs.core.nth.call(null, vec__15524__15526, 1, null);
    var G__15520__15529 = G__15520__15521;
    var G__15523__15530 = G__15523__15525;
    var G__15520__15531 = G__15520__15529;
    while(true) {
      var vec__15532__15533 = G__15523__15530;
      var key__15534 = cljs.core.nth.call(null, vec__15532__15533, 0, null);
      var f__15535 = cljs.core.nth.call(null, vec__15532__15533, 1, null);
      var G__15520__15536 = G__15520__15531;
      f__15535.call(null, key__15534, this$, oldval, newval);
      var temp__3974__auto____15537 = cljs.core.next.call(null, G__15520__15536);
      if(temp__3974__auto____15537) {
        var G__15520__15538 = temp__3974__auto____15537;
        var G__15545 = cljs.core.first.call(null, G__15520__15538);
        var G__15546 = G__15520__15538;
        G__15523__15530 = G__15545;
        G__15520__15531 = G__15546;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__15539 = this;
  return this$.watches = cljs.core.assoc.call(null, this__15539.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__15540 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__15540.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__15541 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__15541.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__15542 = this;
  return this__15542.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__15543 = this;
  return this__15543.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__15544 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__15558__delegate = function(x, p__15547) {
      var map__15553__15554 = p__15547;
      var map__15553__15555 = cljs.core.seq_QMARK_.call(null, map__15553__15554) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15553__15554) : map__15553__15554;
      var validator__15556 = cljs.core._lookup.call(null, map__15553__15555, "\ufdd0'validator", null);
      var meta__15557 = cljs.core._lookup.call(null, map__15553__15555, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__15557, validator__15556, null)
    };
    var G__15558 = function(x, var_args) {
      var p__15547 = null;
      if(goog.isDef(var_args)) {
        p__15547 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__15558__delegate.call(this, x, p__15547)
    };
    G__15558.cljs$lang$maxFixedArity = 1;
    G__15558.cljs$lang$applyTo = function(arglist__15559) {
      var x = cljs.core.first(arglist__15559);
      var p__15547 = cljs.core.rest(arglist__15559);
      return G__15558__delegate(x, p__15547)
    };
    G__15558.cljs$lang$arity$variadic = G__15558__delegate;
    return G__15558
  }();
  atom = function(x, var_args) {
    var p__15547 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____15563 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____15563)) {
    var validate__15564 = temp__3974__auto____15563;
    if(cljs.core.truth_(validate__15564.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440))))].join(""));
    }
  }else {
  }
  var old_value__15565 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__15565, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__15566__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__15566 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__15566__delegate.call(this, a, f, x, y, z, more)
    };
    G__15566.cljs$lang$maxFixedArity = 5;
    G__15566.cljs$lang$applyTo = function(arglist__15567) {
      var a = cljs.core.first(arglist__15567);
      var f = cljs.core.first(cljs.core.next(arglist__15567));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15567)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__15567))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__15567)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__15567)))));
      return G__15566__delegate(a, f, x, y, z, more)
    };
    G__15566.cljs$lang$arity$variadic = G__15566__delegate;
    return G__15566
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__15568) {
    var iref = cljs.core.first(arglist__15568);
    var f = cljs.core.first(cljs.core.next(arglist__15568));
    var args = cljs.core.rest(cljs.core.next(arglist__15568));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__15569 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__15569.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__15570 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__15570.state, function(p__15571) {
    var map__15572__15573 = p__15571;
    var map__15572__15574 = cljs.core.seq_QMARK_.call(null, map__15572__15573) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15572__15573) : map__15572__15573;
    var curr_state__15575 = map__15572__15574;
    var done__15576 = cljs.core._lookup.call(null, map__15572__15574, "\ufdd0'done", null);
    if(cljs.core.truth_(done__15576)) {
      return curr_state__15575
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__15570.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__15597__15598 = options;
    var map__15597__15599 = cljs.core.seq_QMARK_.call(null, map__15597__15598) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15597__15598) : map__15597__15598;
    var keywordize_keys__15600 = cljs.core._lookup.call(null, map__15597__15599, "\ufdd0'keywordize-keys", null);
    var keyfn__15601 = cljs.core.truth_(keywordize_keys__15600) ? cljs.core.keyword : cljs.core.str;
    var f__15616 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2363__auto____15615 = function iter__15609(s__15610) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__15610__15613 = s__15610;
                    while(true) {
                      if(cljs.core.seq.call(null, s__15610__15613)) {
                        var k__15614 = cljs.core.first.call(null, s__15610__15613);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__15601.call(null, k__15614), thisfn.call(null, x[k__15614])], true), iter__15609.call(null, cljs.core.rest.call(null, s__15610__15613)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2363__auto____15615.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__15616.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__15617) {
    var x = cljs.core.first(arglist__15617);
    var options = cljs.core.rest(arglist__15617);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__15622 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__15626__delegate = function(args) {
      var temp__3971__auto____15623 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__15622), args, null);
      if(cljs.core.truth_(temp__3971__auto____15623)) {
        var v__15624 = temp__3971__auto____15623;
        return v__15624
      }else {
        var ret__15625 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__15622, cljs.core.assoc, args, ret__15625);
        return ret__15625
      }
    };
    var G__15626 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__15626__delegate.call(this, args)
    };
    G__15626.cljs$lang$maxFixedArity = 0;
    G__15626.cljs$lang$applyTo = function(arglist__15627) {
      var args = cljs.core.seq(arglist__15627);
      return G__15626__delegate(args)
    };
    G__15626.cljs$lang$arity$variadic = G__15626__delegate;
    return G__15626
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__15629 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__15629)) {
        var G__15630 = ret__15629;
        f = G__15630;
        continue
      }else {
        return ret__15629
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__15631__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__15631 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__15631__delegate.call(this, f, args)
    };
    G__15631.cljs$lang$maxFixedArity = 1;
    G__15631.cljs$lang$applyTo = function(arglist__15632) {
      var f = cljs.core.first(arglist__15632);
      var args = cljs.core.rest(arglist__15632);
      return G__15631__delegate(f, args)
    };
    G__15631.cljs$lang$arity$variadic = G__15631__delegate;
    return G__15631
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__15634 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__15634, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__15634, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____15643 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____15643) {
      return or__3824__auto____15643
    }else {
      var or__3824__auto____15644 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____15644) {
        return or__3824__auto____15644
      }else {
        var and__3822__auto____15645 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____15645) {
          var and__3822__auto____15646 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____15646) {
            var and__3822__auto____15647 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____15647) {
              var ret__15648 = true;
              var i__15649 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____15650 = cljs.core.not.call(null, ret__15648);
                  if(or__3824__auto____15650) {
                    return or__3824__auto____15650
                  }else {
                    return i__15649 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__15648
                }else {
                  var G__15651 = isa_QMARK_.call(null, h, child.call(null, i__15649), parent.call(null, i__15649));
                  var G__15652 = i__15649 + 1;
                  ret__15648 = G__15651;
                  i__15649 = G__15652;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____15647
            }
          }else {
            return and__3822__auto____15646
          }
        }else {
          return and__3822__auto____15645
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728))))].join(""));
    }
    var tp__15661 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__15662 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__15663 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__15664 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____15665 = cljs.core.contains_QMARK_.call(null, tp__15661.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__15663.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__15663.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__15661, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__15664.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__15662, parent, ta__15663), "\ufdd0'descendants":tf__15664.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__15663, tag, td__15662)})
    }();
    if(cljs.core.truth_(or__3824__auto____15665)) {
      return or__3824__auto____15665
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__15670 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__15671 = cljs.core.truth_(parentMap__15670.call(null, tag)) ? cljs.core.disj.call(null, parentMap__15670.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__15672 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__15671)) ? cljs.core.assoc.call(null, parentMap__15670, tag, childsParents__15671) : cljs.core.dissoc.call(null, parentMap__15670, tag);
    var deriv_seq__15673 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__15653_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__15653_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__15653_SHARP_), cljs.core.second.call(null, p1__15653_SHARP_)))
    }, cljs.core.seq.call(null, newParents__15672)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__15670.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__15654_SHARP_, p2__15655_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__15654_SHARP_, p2__15655_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__15673))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__15681 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____15683 = cljs.core.truth_(function() {
    var and__3822__auto____15682 = xprefs__15681;
    if(cljs.core.truth_(and__3822__auto____15682)) {
      return xprefs__15681.call(null, y)
    }else {
      return and__3822__auto____15682
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____15683)) {
    return or__3824__auto____15683
  }else {
    var or__3824__auto____15685 = function() {
      var ps__15684 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__15684) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__15684), prefer_table))) {
          }else {
          }
          var G__15688 = cljs.core.rest.call(null, ps__15684);
          ps__15684 = G__15688;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____15685)) {
      return or__3824__auto____15685
    }else {
      var or__3824__auto____15687 = function() {
        var ps__15686 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__15686) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__15686), y, prefer_table))) {
            }else {
            }
            var G__15689 = cljs.core.rest.call(null, ps__15686);
            ps__15686 = G__15689;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____15687)) {
        return or__3824__auto____15687
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____15691 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____15691)) {
    return or__3824__auto____15691
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__15709 = cljs.core.reduce.call(null, function(be, p__15701) {
    var vec__15702__15703 = p__15701;
    var k__15704 = cljs.core.nth.call(null, vec__15702__15703, 0, null);
    var ___15705 = cljs.core.nth.call(null, vec__15702__15703, 1, null);
    var e__15706 = vec__15702__15703;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__15704)) {
      var be2__15708 = cljs.core.truth_(function() {
        var or__3824__auto____15707 = be == null;
        if(or__3824__auto____15707) {
          return or__3824__auto____15707
        }else {
          return cljs.core.dominates.call(null, k__15704, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__15706 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__15708), k__15704, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__15704), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__15708)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__15708
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__15709)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__15709));
      return cljs.core.second.call(null, best_entry__15709)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____15714 = mf;
    if(and__3822__auto____15714) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____15714
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2264__auto____15715 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15716 = cljs.core._reset[goog.typeOf(x__2264__auto____15715)];
      if(or__3824__auto____15716) {
        return or__3824__auto____15716
      }else {
        var or__3824__auto____15717 = cljs.core._reset["_"];
        if(or__3824__auto____15717) {
          return or__3824__auto____15717
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____15722 = mf;
    if(and__3822__auto____15722) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____15722
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2264__auto____15723 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15724 = cljs.core._add_method[goog.typeOf(x__2264__auto____15723)];
      if(or__3824__auto____15724) {
        return or__3824__auto____15724
      }else {
        var or__3824__auto____15725 = cljs.core._add_method["_"];
        if(or__3824__auto____15725) {
          return or__3824__auto____15725
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____15730 = mf;
    if(and__3822__auto____15730) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____15730
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2264__auto____15731 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15732 = cljs.core._remove_method[goog.typeOf(x__2264__auto____15731)];
      if(or__3824__auto____15732) {
        return or__3824__auto____15732
      }else {
        var or__3824__auto____15733 = cljs.core._remove_method["_"];
        if(or__3824__auto____15733) {
          return or__3824__auto____15733
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____15738 = mf;
    if(and__3822__auto____15738) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____15738
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2264__auto____15739 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15740 = cljs.core._prefer_method[goog.typeOf(x__2264__auto____15739)];
      if(or__3824__auto____15740) {
        return or__3824__auto____15740
      }else {
        var or__3824__auto____15741 = cljs.core._prefer_method["_"];
        if(or__3824__auto____15741) {
          return or__3824__auto____15741
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____15746 = mf;
    if(and__3822__auto____15746) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____15746
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2264__auto____15747 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15748 = cljs.core._get_method[goog.typeOf(x__2264__auto____15747)];
      if(or__3824__auto____15748) {
        return or__3824__auto____15748
      }else {
        var or__3824__auto____15749 = cljs.core._get_method["_"];
        if(or__3824__auto____15749) {
          return or__3824__auto____15749
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____15754 = mf;
    if(and__3822__auto____15754) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____15754
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2264__auto____15755 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15756 = cljs.core._methods[goog.typeOf(x__2264__auto____15755)];
      if(or__3824__auto____15756) {
        return or__3824__auto____15756
      }else {
        var or__3824__auto____15757 = cljs.core._methods["_"];
        if(or__3824__auto____15757) {
          return or__3824__auto____15757
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____15762 = mf;
    if(and__3822__auto____15762) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____15762
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2264__auto____15763 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15764 = cljs.core._prefers[goog.typeOf(x__2264__auto____15763)];
      if(or__3824__auto____15764) {
        return or__3824__auto____15764
      }else {
        var or__3824__auto____15765 = cljs.core._prefers["_"];
        if(or__3824__auto____15765) {
          return or__3824__auto____15765
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____15770 = mf;
    if(and__3822__auto____15770) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____15770
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2264__auto____15771 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15772 = cljs.core._dispatch[goog.typeOf(x__2264__auto____15771)];
      if(or__3824__auto____15772) {
        return or__3824__auto____15772
      }else {
        var or__3824__auto____15773 = cljs.core._dispatch["_"];
        if(or__3824__auto____15773) {
          return or__3824__auto____15773
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__15776 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__15777 = cljs.core._get_method.call(null, mf, dispatch_val__15776);
  if(cljs.core.truth_(target_fn__15777)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__15776)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__15777, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__15778 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__15779 = this;
  cljs.core.swap_BANG_.call(null, this__15779.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__15779.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__15779.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__15779.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__15780 = this;
  cljs.core.swap_BANG_.call(null, this__15780.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__15780.method_cache, this__15780.method_table, this__15780.cached_hierarchy, this__15780.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__15781 = this;
  cljs.core.swap_BANG_.call(null, this__15781.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__15781.method_cache, this__15781.method_table, this__15781.cached_hierarchy, this__15781.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__15782 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__15782.cached_hierarchy), cljs.core.deref.call(null, this__15782.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__15782.method_cache, this__15782.method_table, this__15782.cached_hierarchy, this__15782.hierarchy)
  }
  var temp__3971__auto____15783 = cljs.core.deref.call(null, this__15782.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____15783)) {
    var target_fn__15784 = temp__3971__auto____15783;
    return target_fn__15784
  }else {
    var temp__3971__auto____15785 = cljs.core.find_and_cache_best_method.call(null, this__15782.name, dispatch_val, this__15782.hierarchy, this__15782.method_table, this__15782.prefer_table, this__15782.method_cache, this__15782.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____15785)) {
      var target_fn__15786 = temp__3971__auto____15785;
      return target_fn__15786
    }else {
      return cljs.core.deref.call(null, this__15782.method_table).call(null, this__15782.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__15787 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__15787.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__15787.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__15787.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__15787.method_cache, this__15787.method_table, this__15787.cached_hierarchy, this__15787.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__15788 = this;
  return cljs.core.deref.call(null, this__15788.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__15789 = this;
  return cljs.core.deref.call(null, this__15789.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__15790 = this;
  return cljs.core.do_dispatch.call(null, mf, this__15790.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__15792__delegate = function(_, args) {
    var self__15791 = this;
    return cljs.core._dispatch.call(null, self__15791, args)
  };
  var G__15792 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__15792__delegate.call(this, _, args)
  };
  G__15792.cljs$lang$maxFixedArity = 1;
  G__15792.cljs$lang$applyTo = function(arglist__15793) {
    var _ = cljs.core.first(arglist__15793);
    var args = cljs.core.rest(arglist__15793);
    return G__15792__delegate(_, args)
  };
  G__15792.cljs$lang$arity$variadic = G__15792__delegate;
  return G__15792
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__15794 = this;
  return cljs.core._dispatch.call(null, self__15794, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__15795 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_15797, _) {
  var this__15796 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__15796.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__15798 = this;
  var and__3822__auto____15799 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____15799) {
    return this__15798.uuid === other.uuid
  }else {
    return and__3822__auto____15799
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__15800 = this;
  var this__15801 = this;
  return cljs.core.pr_str.call(null, this__15801)
};
cljs.core.UUID;
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__11826 = s;
      var limit__11827 = limit;
      var parts__11828 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__11827, 1)) {
          return cljs.core.conj.call(null, parts__11828, s__11826)
        }else {
          var temp__3971__auto____11829 = cljs.core.re_find.call(null, re, s__11826);
          if(cljs.core.truth_(temp__3971__auto____11829)) {
            var m__11830 = temp__3971__auto____11829;
            var index__11831 = s__11826.indexOf(m__11830);
            var G__11832 = s__11826.substring(index__11831 + cljs.core.count.call(null, m__11830));
            var G__11833 = limit__11827 - 1;
            var G__11834 = cljs.core.conj.call(null, parts__11828, s__11826.substring(0, index__11831));
            s__11826 = G__11832;
            limit__11827 = G__11833;
            parts__11828 = G__11834;
            continue
          }else {
            return cljs.core.conj.call(null, parts__11828, s__11826)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__11838 = s.length;
  while(true) {
    if(index__11838 === 0) {
      return""
    }else {
      var ch__11839 = cljs.core._lookup.call(null, s, index__11838 - 1, null);
      if(function() {
        var or__3824__auto____11840 = cljs.core._EQ_.call(null, ch__11839, "\n");
        if(or__3824__auto____11840) {
          return or__3824__auto____11840
        }else {
          return cljs.core._EQ_.call(null, ch__11839, "\r")
        }
      }()) {
        var G__11841 = index__11838 - 1;
        index__11838 = G__11841;
        continue
      }else {
        return s.substring(0, index__11838)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__11845 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____11846 = cljs.core.not.call(null, s__11845);
    if(or__3824__auto____11846) {
      return or__3824__auto____11846
    }else {
      var or__3824__auto____11847 = cljs.core._EQ_.call(null, "", s__11845);
      if(or__3824__auto____11847) {
        return or__3824__auto____11847
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__11845)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__11854 = new goog.string.StringBuffer;
  var length__11855 = s.length;
  var index__11856 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__11855, index__11856)) {
      return buffer__11854.toString()
    }else {
      var ch__11857 = s.charAt(index__11856);
      var temp__3971__auto____11858 = cljs.core._lookup.call(null, cmap, ch__11857, null);
      if(cljs.core.truth_(temp__3971__auto____11858)) {
        var replacement__11859 = temp__3971__auto____11858;
        buffer__11854.append([cljs.core.str(replacement__11859)].join(""))
      }else {
        buffer__11854.append(ch__11857)
      }
      var G__11860 = index__11856 + 1;
      index__11856 = G__11860;
      continue
    }
    break
  }
};
goog.provide("crate.util");
goog.require("cljs.core");
goog.require("clojure.string");
crate.util._STAR_base_url_STAR_ = null;
crate.util.as_str = function() {
  var as_str = null;
  var as_str__0 = function() {
    return""
  };
  var as_str__1 = function(x) {
    if(function() {
      var or__3824__auto____19070 = cljs.core.symbol_QMARK_.call(null, x);
      if(or__3824__auto____19070) {
        return or__3824__auto____19070
      }else {
        return cljs.core.keyword_QMARK_.call(null, x)
      }
    }()) {
      return cljs.core.name.call(null, x)
    }else {
      return[cljs.core.str(x)].join("")
    }
  };
  var as_str__2 = function() {
    var G__19071__delegate = function(x, xs) {
      return function(s, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__19072 = [cljs.core.str(s), cljs.core.str(as_str.call(null, cljs.core.first.call(null, more)))].join("");
            var G__19073 = cljs.core.next.call(null, more);
            s = G__19072;
            more = G__19073;
            continue
          }else {
            return s
          }
          break
        }
      }.call(null, as_str.call(null, x), xs)
    };
    var G__19071 = function(x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__19071__delegate.call(this, x, xs)
    };
    G__19071.cljs$lang$maxFixedArity = 1;
    G__19071.cljs$lang$applyTo = function(arglist__19074) {
      var x = cljs.core.first(arglist__19074);
      var xs = cljs.core.rest(arglist__19074);
      return G__19071__delegate(x, xs)
    };
    G__19071.cljs$lang$arity$variadic = G__19071__delegate;
    return G__19071
  }();
  as_str = function(x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return as_str__0.call(this);
      case 1:
        return as_str__1.call(this, x);
      default:
        return as_str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  as_str.cljs$lang$maxFixedArity = 1;
  as_str.cljs$lang$applyTo = as_str__2.cljs$lang$applyTo;
  as_str.cljs$lang$arity$0 = as_str__0;
  as_str.cljs$lang$arity$1 = as_str__1;
  as_str.cljs$lang$arity$variadic = as_str__2.cljs$lang$arity$variadic;
  return as_str
}();
crate.util.escape_html = function escape_html(text) {
  return clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, crate.util.as_str.call(null, text), "&", "&amp;"), "<", "&lt;"), ">", "&gt;"), '"', "&quot;")
};
crate.util.to_uri = function to_uri(uri) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, /^\w+:.*/, uri))) {
    return uri
  }else {
    return[cljs.core.str(crate.util._STAR_base_url_STAR_), cljs.core.str(uri)].join("")
  }
};
crate.util.url_encode_component = function url_encode_component(s) {
  return encodeURIComponent(crate.util.as_str.call(null, s))
};
crate.util.url_encode = function url_encode(params) {
  return clojure.string.join.call(null, "&", function() {
    var iter__2363__auto____19100 = function iter__19088(s__19089) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__19089__19095 = s__19089;
        while(true) {
          if(cljs.core.seq.call(null, s__19089__19095)) {
            var vec__19096__19097 = cljs.core.first.call(null, s__19089__19095);
            var k__19098 = cljs.core.nth.call(null, vec__19096__19097, 0, null);
            var v__19099 = cljs.core.nth.call(null, vec__19096__19097, 1, null);
            return cljs.core.cons.call(null, [cljs.core.str(crate.util.url_encode_component.call(null, k__19098)), cljs.core.str("="), cljs.core.str(crate.util.url_encode_component.call(null, v__19099))].join(""), iter__19088.call(null, cljs.core.rest.call(null, s__19089__19095)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____19100.call(null, params)
  }())
};
crate.util.url = function() {
  var url__delegate = function(args) {
    var params__19103 = cljs.core.last.call(null, args);
    var args__19104 = cljs.core.butlast.call(null, args);
    return[cljs.core.str(crate.util.to_uri.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, args__19104)), cljs.core.str(cljs.core.map_QMARK_.call(null, params__19103) ? [cljs.core.str("?"), cljs.core.str(crate.util.url_encode.call(null, params__19103))].join("") : params__19103)].join("")))].join("")
  };
  var url = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return url__delegate.call(this, args)
  };
  url.cljs$lang$maxFixedArity = 0;
  url.cljs$lang$applyTo = function(arglist__19105) {
    var args = cljs.core.seq(arglist__19105);
    return url__delegate(args)
  };
  url.cljs$lang$arity$variadic = url__delegate;
  return url
}();
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isDocumentModeCache_ = {};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.isDocumentModeCache_[documentMode] || (goog.userAgent.isDocumentModeCache_[documentMode] = goog.userAgent.IE && document.documentMode && document.documentMode >= documentMode)
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max__17093 = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max__17093, cljs.core.remove.call(null, function(p1__17091_SHARP_) {
    return max__17093 === p1__17091_SHARP_
  }, coll))
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var union__1 = function(s1) {
    return s1
  };
  var union__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2)
    }
  };
  var union__3 = function() {
    var G__17097__delegate = function(s1, s2, sets) {
      var bubbled_sets__17096 = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets__17096), cljs.core.rest.call(null, bubbled_sets__17096))
    };
    var G__17097 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__17097__delegate.call(this, s1, s2, sets)
    };
    G__17097.cljs$lang$maxFixedArity = 2;
    G__17097.cljs$lang$applyTo = function(arglist__17098) {
      var s1 = cljs.core.first(arglist__17098);
      var s2 = cljs.core.first(cljs.core.next(arglist__17098));
      var sets = cljs.core.rest(cljs.core.next(arglist__17098));
      return G__17097__delegate(s1, s2, sets)
    };
    G__17097.cljs$lang$arity$variadic = G__17097__delegate;
    return G__17097
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$lang$arity$0 = union__0;
  union.cljs$lang$arity$1 = union__1;
  union.cljs$lang$arity$2 = union__2;
  union.cljs$lang$arity$variadic = union__3.cljs$lang$arity$variadic;
  return union
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1
  };
  var intersection__2 = function(s1, s2) {
    while(true) {
      if(cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__17101 = s2;
        var G__17102 = s1;
        s1 = G__17101;
        s2 = G__17102;
        continue
      }else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if(cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result
            }else {
              return cljs.core.disj.call(null, result, item)
            }
          }
        }(s1, s2), s1, s1)
      }
      break
    }
  };
  var intersection__3 = function() {
    var G__17103__delegate = function(s1, s2, sets) {
      var bubbled_sets__17100 = clojure.set.bubble_max_key.call(null, function(p1__17094_SHARP_) {
        return-cljs.core.count.call(null, p1__17094_SHARP_)
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets__17100), cljs.core.rest.call(null, bubbled_sets__17100))
    };
    var G__17103 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__17103__delegate.call(this, s1, s2, sets)
    };
    G__17103.cljs$lang$maxFixedArity = 2;
    G__17103.cljs$lang$applyTo = function(arglist__17104) {
      var s1 = cljs.core.first(arglist__17104);
      var s2 = cljs.core.first(cljs.core.next(arglist__17104));
      var sets = cljs.core.rest(cljs.core.next(arglist__17104));
      return G__17103__delegate(s1, s2, sets)
    };
    G__17103.cljs$lang$arity$variadic = G__17103__delegate;
    return G__17103
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$lang$arity$1 = intersection__1;
  intersection.cljs$lang$arity$2 = intersection__2;
  intersection.cljs$lang$arity$variadic = intersection__3.cljs$lang$arity$variadic;
  return intersection
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1
  };
  var difference__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if(cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item)
        }else {
          return result
        }
      }, s1, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2)
    }
  };
  var difference__3 = function() {
    var G__17105__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2))
    };
    var G__17105 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__17105__delegate.call(this, s1, s2, sets)
    };
    G__17105.cljs$lang$maxFixedArity = 2;
    G__17105.cljs$lang$applyTo = function(arglist__17106) {
      var s1 = cljs.core.first(arglist__17106);
      var s2 = cljs.core.first(cljs.core.next(arglist__17106));
      var sets = cljs.core.rest(cljs.core.next(arglist__17106));
      return G__17105__delegate(s1, s2, sets)
    };
    G__17105.cljs$lang$arity$variadic = G__17105__delegate;
    return G__17105
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$lang$arity$1 = difference__1;
  difference.cljs$lang$arity$2 = difference__2;
  difference.cljs$lang$arity$variadic = difference__3.cljs$lang$arity$variadic;
  return difference
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if(cljs.core.truth_(pred.call(null, k))) {
      return s
    }else {
      return cljs.core.disj.call(null, s, k)
    }
  }, xset, xset)
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__17107_SHARP_) {
    return cljs.core.select_keys.call(null, p1__17107_SHARP_, ks)
  }, xrel))
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__17115) {
    var vec__17116__17117 = p__17115;
    var old__17118 = cljs.core.nth.call(null, vec__17116__17117, 0, null);
    var new__17119 = cljs.core.nth.call(null, vec__17116__17117, 1, null);
    if(function() {
      var and__3822__auto____17120 = cljs.core.not_EQ_.call(null, old__17118, new__17119);
      if(and__3822__auto____17120) {
        return cljs.core.contains_QMARK_.call(null, m, old__17118)
      }else {
        return and__3822__auto____17120
      }
    }()) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, m, new__17119, cljs.core._lookup.call(null, m, old__17118, null)), old__17118)
    }else {
      return m
    }
  }, map, kmap)
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__17108_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__17108_SHARP_, kmap)
  }, xrel))
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik__17122 = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik__17122, cljs.core.conj.call(null, cljs.core._lookup.call(null, m, ik__17122, cljs.core.PersistentHashSet.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, xrel)
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m, p__17132) {
    var vec__17133__17134 = p__17132;
    var k__17135 = cljs.core.nth.call(null, vec__17133__17134, 0, null);
    var v__17136 = cljs.core.nth.call(null, vec__17133__17134, 1, null);
    return cljs.core.assoc.call(null, m, v__17136, k__17135)
  }, cljs.core.ObjMap.EMPTY, m)
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if(function() {
      var and__3822__auto____17153 = cljs.core.seq.call(null, xrel);
      if(and__3822__auto____17153) {
        return cljs.core.seq.call(null, yrel)
      }else {
        return and__3822__auto____17153
      }
    }()) {
      var ks__17155 = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__17154__17156 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel], true) : cljs.core.PersistentVector.fromArray([yrel, xrel], true);
      var r__17157 = cljs.core.nth.call(null, vec__17154__17156, 0, null);
      var s__17158 = cljs.core.nth.call(null, vec__17154__17156, 1, null);
      var idx__17159 = clojure.set.index.call(null, r__17157, ks__17155);
      return cljs.core.reduce.call(null, function(ret, x) {
        var found__17160 = idx__17159.call(null, cljs.core.select_keys.call(null, x, ks__17155));
        if(cljs.core.truth_(found__17160)) {
          return cljs.core.reduce.call(null, function(p1__17123_SHARP_, p2__17124_SHARP_) {
            return cljs.core.conj.call(null, p1__17123_SHARP_, cljs.core.merge.call(null, p2__17124_SHARP_, x))
          }, ret, found__17160)
        }else {
          return ret
        }
      }, cljs.core.PersistentHashSet.EMPTY, s__17158)
    }else {
      return cljs.core.PersistentHashSet.EMPTY
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__17161__17162 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel, clojure.set.map_invert.call(null, km)], true) : cljs.core.PersistentVector.fromArray([yrel, xrel, km], true);
    var r__17163 = cljs.core.nth.call(null, vec__17161__17162, 0, null);
    var s__17164 = cljs.core.nth.call(null, vec__17161__17162, 1, null);
    var k__17165 = cljs.core.nth.call(null, vec__17161__17162, 2, null);
    var idx__17166 = clojure.set.index.call(null, r__17163, cljs.core.vals.call(null, k__17165));
    return cljs.core.reduce.call(null, function(ret, x) {
      var found__17167 = idx__17166.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k__17165)), k__17165));
      if(cljs.core.truth_(found__17167)) {
        return cljs.core.reduce.call(null, function(p1__17125_SHARP_, p2__17126_SHARP_) {
          return cljs.core.conj.call(null, p1__17125_SHARP_, cljs.core.merge.call(null, p2__17126_SHARP_, x))
        }, ret, found__17167)
      }else {
        return ret
      }
    }, cljs.core.PersistentHashSet.EMPTY, s__17164)
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$2 = join__2;
  join.cljs$lang$arity$3 = join__3;
  return join
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  var and__3822__auto____17170 = cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2);
  if(and__3822__auto____17170) {
    return cljs.core.every_QMARK_.call(null, function(p1__17137_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set2, p1__17137_SHARP_)
    }, set1)
  }else {
    return and__3822__auto____17170
  }
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  var and__3822__auto____17172 = cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2);
  if(and__3822__auto____17172) {
    return cljs.core.every_QMARK_.call(null, function(p1__17168_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set1, p1__17168_SHARP_)
    }, set2)
  }else {
    return and__3822__auto____17172
  }
};
goog.provide("crate.binding");
goog.require("cljs.core");
goog.require("clojure.set");
crate.binding.SubAtom = function(atm, path, prevhash, watches) {
  this.atm = atm;
  this.path = path;
  this.prevhash = prevhash;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690678784
};
crate.binding.SubAtom.cljs$lang$type = true;
crate.binding.SubAtom.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "crate.binding/SubAtom")
};
crate.binding.SubAtom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__18840 = this;
  return goog.getUid(this$)
};
crate.binding.SubAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__18841 = this;
  var G__18842__18843 = cljs.core.seq.call(null, this__18841.watches);
  if(G__18842__18843) {
    var G__18845__18847 = cljs.core.first.call(null, G__18842__18843);
    var vec__18846__18848 = G__18845__18847;
    var key__18849 = cljs.core.nth.call(null, vec__18846__18848, 0, null);
    var f__18850 = cljs.core.nth.call(null, vec__18846__18848, 1, null);
    var G__18842__18851 = G__18842__18843;
    var G__18845__18852 = G__18845__18847;
    var G__18842__18853 = G__18842__18851;
    while(true) {
      var vec__18854__18855 = G__18845__18852;
      var key__18856 = cljs.core.nth.call(null, vec__18854__18855, 0, null);
      var f__18857 = cljs.core.nth.call(null, vec__18854__18855, 1, null);
      var G__18842__18858 = G__18842__18853;
      f__18857.call(null, key__18856, this$, oldval, newval);
      var temp__3974__auto____18859 = cljs.core.next.call(null, G__18842__18858);
      if(temp__3974__auto____18859) {
        var G__18842__18860 = temp__3974__auto____18859;
        var G__18866 = cljs.core.first.call(null, G__18842__18860);
        var G__18867 = G__18842__18860;
        G__18845__18852 = G__18866;
        G__18842__18853 = G__18867;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.binding.SubAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__18861 = this;
  if(cljs.core.truth_(f)) {
    return this$.watches = cljs.core.assoc.call(null, this__18861.watches, key, f)
  }else {
    return null
  }
};
crate.binding.SubAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__18862 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__18862.watches, key)
};
crate.binding.SubAtom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__18863 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<SubAtom: "], true), cljs.core._pr_seq.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, this__18863.atm), this__18863.path), opts), ">")
};
crate.binding.SubAtom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__18864 = this;
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, this__18864.atm), this__18864.path)
};
crate.binding.SubAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__18865 = this;
  return o === other
};
crate.binding.SubAtom;
crate.binding.subatom = function subatom(atm, path) {
  var path__18881 = cljs.core.coll_QMARK_.call(null, path) ? path : cljs.core.PersistentVector.fromArray([path], true);
  var vec__18880__18882 = cljs.core.instance_QMARK_.call(null, crate.binding.SubAtom, atm) ? cljs.core.PersistentVector.fromArray([atm.atm, cljs.core.concat.call(null, atm.path, path__18881)], true) : cljs.core.PersistentVector.fromArray([atm, path__18881], true);
  var atm__18883 = cljs.core.nth.call(null, vec__18880__18882, 0, null);
  var path__18884 = cljs.core.nth.call(null, vec__18880__18882, 1, null);
  var k__18885 = cljs.core.gensym.call(null, "subatom");
  var sa__18886 = new crate.binding.SubAtom(atm__18883, path__18884, cljs.core.hash.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, atm__18883), path__18884)), null);
  cljs.core.add_watch.call(null, atm__18883, k__18885, function(_18887, _, ov, nv) {
    var latest__18888 = cljs.core.get_in.call(null, nv, path__18884);
    var prev__18889 = cljs.core.get_in.call(null, ov, path__18884);
    var latest_hash__18890 = cljs.core.hash.call(null, latest__18888);
    if(function() {
      var and__3822__auto____18891 = cljs.core.not_EQ_.call(null, sa__18886.prevhash, latest_hash__18890);
      if(and__3822__auto____18891) {
        return cljs.core.not_EQ_.call(null, prev__18889, latest__18888)
      }else {
        return and__3822__auto____18891
      }
    }()) {
      sa__18886.prevhash = latest_hash__18890;
      return cljs.core._notify_watches.call(null, sa__18886, cljs.core.get_in.call(null, ov, path__18884), latest__18888)
    }else {
      return null
    }
  });
  return sa__18886
};
crate.binding.sub_reset_BANG_ = function sub_reset_BANG_(sa, new_value) {
  cljs.core.swap_BANG_.call(null, sa.atm, cljs.core.assoc_in, sa.path, new_value);
  return new_value
};
crate.binding.sub_swap_BANG_ = function() {
  var sub_swap_BANG_ = null;
  var sub_swap_BANG___2 = function(sa, f) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa)))
  };
  var sub_swap_BANG___3 = function(sa, f, x) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa), x))
  };
  var sub_swap_BANG___4 = function(sa, f, x, y) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa), x, y))
  };
  var sub_swap_BANG___5 = function(sa, f, x, y, z) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa), x, y, z))
  };
  var sub_swap_BANG___6 = function() {
    var G__18892__delegate = function(sa, f, x, y, z, more) {
      return crate.binding.sub_reset_BANG_.call(null, sa, cljs.core.apply.call(null, f, cljs.core.deref.call(null, sa), x, y, z, more))
    };
    var G__18892 = function(sa, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__18892__delegate.call(this, sa, f, x, y, z, more)
    };
    G__18892.cljs$lang$maxFixedArity = 5;
    G__18892.cljs$lang$applyTo = function(arglist__18893) {
      var sa = cljs.core.first(arglist__18893);
      var f = cljs.core.first(cljs.core.next(arglist__18893));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__18893)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__18893))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__18893)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__18893)))));
      return G__18892__delegate(sa, f, x, y, z, more)
    };
    G__18892.cljs$lang$arity$variadic = G__18892__delegate;
    return G__18892
  }();
  sub_swap_BANG_ = function(sa, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return sub_swap_BANG___2.call(this, sa, f);
      case 3:
        return sub_swap_BANG___3.call(this, sa, f, x);
      case 4:
        return sub_swap_BANG___4.call(this, sa, f, x, y);
      case 5:
        return sub_swap_BANG___5.call(this, sa, f, x, y, z);
      default:
        return sub_swap_BANG___6.cljs$lang$arity$variadic(sa, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  sub_swap_BANG_.cljs$lang$maxFixedArity = 5;
  sub_swap_BANG_.cljs$lang$applyTo = sub_swap_BANG___6.cljs$lang$applyTo;
  sub_swap_BANG_.cljs$lang$arity$2 = sub_swap_BANG___2;
  sub_swap_BANG_.cljs$lang$arity$3 = sub_swap_BANG___3;
  sub_swap_BANG_.cljs$lang$arity$4 = sub_swap_BANG___4;
  sub_swap_BANG_.cljs$lang$arity$5 = sub_swap_BANG___5;
  sub_swap_BANG_.cljs$lang$arity$variadic = sub_swap_BANG___6.cljs$lang$arity$variadic;
  return sub_swap_BANG_
}();
crate.binding.notify = function notify(w, o, v) {
  return cljs.core._notify_watches.call(null, w, o, v)
};
crate.binding.bindable_coll = {};
crate.binding.bindable = {};
crate.binding._value = function _value(this$) {
  if(function() {
    var and__3822__auto____18898 = this$;
    if(and__3822__auto____18898) {
      return this$.crate$binding$bindable$_value$arity$1
    }else {
      return and__3822__auto____18898
    }
  }()) {
    return this$.crate$binding$bindable$_value$arity$1(this$)
  }else {
    var x__2264__auto____18899 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____18900 = crate.binding._value[goog.typeOf(x__2264__auto____18899)];
      if(or__3824__auto____18900) {
        return or__3824__auto____18900
      }else {
        var or__3824__auto____18901 = crate.binding._value["_"];
        if(or__3824__auto____18901) {
          return or__3824__auto____18901
        }else {
          throw cljs.core.missing_protocol.call(null, "bindable.-value", this$);
        }
      }
    }().call(null, this$)
  }
};
crate.binding._on_change = function _on_change(this$, func) {
  if(function() {
    var and__3822__auto____18906 = this$;
    if(and__3822__auto____18906) {
      return this$.crate$binding$bindable$_on_change$arity$2
    }else {
      return and__3822__auto____18906
    }
  }()) {
    return this$.crate$binding$bindable$_on_change$arity$2(this$, func)
  }else {
    var x__2264__auto____18907 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____18908 = crate.binding._on_change[goog.typeOf(x__2264__auto____18907)];
      if(or__3824__auto____18908) {
        return or__3824__auto____18908
      }else {
        var or__3824__auto____18909 = crate.binding._on_change["_"];
        if(or__3824__auto____18909) {
          return or__3824__auto____18909
        }else {
          throw cljs.core.missing_protocol.call(null, "bindable.-on-change", this$);
        }
      }
    }().call(null, this$, func)
  }
};
crate.binding.atom_binding = function(atm, value_func) {
  this.atm = atm;
  this.value_func = value_func
};
crate.binding.atom_binding.cljs$lang$type = true;
crate.binding.atom_binding.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "crate.binding/atom-binding")
};
crate.binding.atom_binding.prototype.crate$binding$bindable$ = true;
crate.binding.atom_binding.prototype.crate$binding$bindable$_value$arity$1 = function(this$) {
  var this__18910 = this;
  return this__18910.value_func.call(null, cljs.core.deref.call(null, this__18910.atm))
};
crate.binding.atom_binding.prototype.crate$binding$bindable$_on_change$arity$2 = function(this$, func) {
  var this__18911 = this;
  return cljs.core.add_watch.call(null, this__18911.atm, cljs.core.gensym.call(null, "atom-binding"), function() {
    return func.call(null, crate.binding._value.call(null, this$))
  })
};
crate.binding.atom_binding;
crate.binding.notifier = function(watches) {
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147483648
};
crate.binding.notifier.cljs$lang$type = true;
crate.binding.notifier.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "crate.binding/notifier")
};
crate.binding.notifier.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__18912 = this;
  var G__18913__18914 = cljs.core.seq.call(null, this__18912.watches);
  if(G__18913__18914) {
    var G__18916__18918 = cljs.core.first.call(null, G__18913__18914);
    var vec__18917__18919 = G__18916__18918;
    var key__18920 = cljs.core.nth.call(null, vec__18917__18919, 0, null);
    var f__18921 = cljs.core.nth.call(null, vec__18917__18919, 1, null);
    var G__18913__18922 = G__18913__18914;
    var G__18916__18923 = G__18916__18918;
    var G__18913__18924 = G__18913__18922;
    while(true) {
      var vec__18925__18926 = G__18916__18923;
      var key__18927 = cljs.core.nth.call(null, vec__18925__18926, 0, null);
      var f__18928 = cljs.core.nth.call(null, vec__18925__18926, 1, null);
      var G__18913__18929 = G__18913__18924;
      f__18928.call(null, key__18927, this$, oldval, newval);
      var temp__3974__auto____18930 = cljs.core.next.call(null, G__18913__18929);
      if(temp__3974__auto____18930) {
        var G__18913__18931 = temp__3974__auto____18930;
        var G__18934 = cljs.core.first.call(null, G__18913__18931);
        var G__18935 = G__18913__18931;
        G__18916__18923 = G__18934;
        G__18913__18924 = G__18935;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.binding.notifier.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__18932 = this;
  return this$.watches = cljs.core.assoc.call(null, this__18932.watches, key, f)
};
crate.binding.notifier.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__18933 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__18933.watches, key)
};
crate.binding.notifier;
crate.binding.bound_collection = function(atm, notif, opts, stuff) {
  this.atm = atm;
  this.notif = notif;
  this.opts = opts;
  this.stuff = stuff
};
crate.binding.bound_collection.cljs$lang$type = true;
crate.binding.bound_collection.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "crate.binding/bound-collection")
};
crate.binding.bound_collection.prototype.crate$binding$bindable$ = true;
crate.binding.bound_collection.prototype.crate$binding$bindable$_value$arity$1 = function(this$) {
  var this__18936 = this;
  return cljs.core.map.call(null, "\ufdd0'elem", cljs.core.vals.call(null, this$.stuff))
};
crate.binding.bound_collection.prototype.crate$binding$bindable$_on_change$arity$2 = function(this$, func) {
  var this__18937 = this;
  return cljs.core.add_watch.call(null, this__18937.notif, cljs.core.gensym.call(null, "bound-coll"), function(_18939, _18940, _, p__18938) {
    var vec__18941__18942 = p__18938;
    var event__18943 = cljs.core.nth.call(null, vec__18941__18942, 0, null);
    var el__18944 = cljs.core.nth.call(null, vec__18941__18942, 1, null);
    var v__18945 = cljs.core.nth.call(null, vec__18941__18942, 2, null);
    return func.call(null, event__18943, el__18944, v__18945)
  })
};
crate.binding.bound_collection.prototype.crate$binding$bindable_coll$ = true;
crate.binding.bound_collection;
crate.binding.opt = function opt(bc, k) {
  return bc.opts.call(null, k)
};
crate.binding.bc_add = function bc_add(bc, path, key) {
  var sa__18948 = crate.binding.subatom.call(null, bc.atm, path);
  var elem__18949 = crate.binding.opt.call(null, bc, "\ufdd0'as").call(null, sa__18948);
  bc.stuff = cljs.core.assoc.call(null, bc.stuff, key, cljs.core.ObjMap.fromObject(["\ufdd0'elem", "\ufdd0'subatom"], {"\ufdd0'elem":elem__18949, "\ufdd0'subatom":sa__18948}));
  return crate.binding.notify.call(null, bc.notif, null, cljs.core.PersistentVector.fromArray(["\ufdd0'add", elem__18949, cljs.core.deref.call(null, sa__18948)], true))
};
crate.binding.bc_remove = function bc_remove(bc, key) {
  var notif__18952 = bc.notif;
  var prev__18953 = bc.stuff.call(null, key);
  bc.stuff = cljs.core.dissoc.call(null, bc.stuff, key);
  return crate.binding.notify.call(null, bc.notif, null, cljs.core.PersistentVector.fromArray(["\ufdd0'remove", (new cljs.core.Keyword("\ufdd0'elem")).call(null, prev__18953), null], true))
};
crate.binding.__GT_indexed = function __GT_indexed(coll) {
  if(cljs.core.map_QMARK_.call(null, coll)) {
    return cljs.core.seq.call(null, coll)
  }else {
    if(cljs.core.set_QMARK_.call(null, coll)) {
      return cljs.core.map.call(null, cljs.core.juxt.call(null, cljs.core.identity, cljs.core.identity), coll)
    }else {
      if("\ufdd0'else") {
        return cljs.core.map_indexed.call(null, cljs.core.vector, coll)
      }else {
        return null
      }
    }
  }
};
crate.binding.__GT_keyed = function __GT_keyed(coll, keyfn) {
  return cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.map.call(null, keyfn, crate.binding.__GT_indexed.call(null, coll)))
};
crate.binding.__GT_path = function() {
  var __GT_path__delegate = function(bc, segs) {
    return cljs.core.concat.call(null, function() {
      var or__3824__auto____18955 = crate.binding.opt.call(null, bc, "\ufdd0'path");
      if(cljs.core.truth_(or__3824__auto____18955)) {
        return or__3824__auto____18955
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), segs)
  };
  var __GT_path = function(bc, var_args) {
    var segs = null;
    if(goog.isDef(var_args)) {
      segs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return __GT_path__delegate.call(this, bc, segs)
  };
  __GT_path.cljs$lang$maxFixedArity = 1;
  __GT_path.cljs$lang$applyTo = function(arglist__18956) {
    var bc = cljs.core.first(arglist__18956);
    var segs = cljs.core.rest(arglist__18956);
    return __GT_path__delegate(bc, segs)
  };
  __GT_path.cljs$lang$arity$variadic = __GT_path__delegate;
  return __GT_path
}();
crate.binding.bc_compare = function bc_compare(bc, neue) {
  var prev__18974 = bc.stuff;
  var pset__18975 = cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.keys.call(null, prev__18974));
  var nset__18976 = crate.binding.__GT_keyed.call(null, neue, crate.binding.opt.call(null, bc, "\ufdd0'keyfn"));
  var added__18977 = cljs.core.into.call(null, cljs.core.sorted_set.call(null), clojure.set.difference.call(null, nset__18976, pset__18975));
  var removed__18978 = cljs.core.into.call(null, cljs.core.sorted_set.call(null), clojure.set.difference.call(null, pset__18975, nset__18976));
  var G__18979__18980 = cljs.core.seq.call(null, added__18977);
  if(G__18979__18980) {
    var a__18981 = cljs.core.first.call(null, G__18979__18980);
    var G__18979__18982 = G__18979__18980;
    while(true) {
      crate.binding.bc_add.call(null, bc, a__18981, a__18981);
      var temp__3974__auto____18983 = cljs.core.next.call(null, G__18979__18982);
      if(temp__3974__auto____18983) {
        var G__18979__18984 = temp__3974__auto____18983;
        var G__18991 = cljs.core.first.call(null, G__18979__18984);
        var G__18992 = G__18979__18984;
        a__18981 = G__18991;
        G__18979__18982 = G__18992;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__18985__18986 = cljs.core.seq.call(null, removed__18978);
  if(G__18985__18986) {
    var r__18987 = cljs.core.first.call(null, G__18985__18986);
    var G__18985__18988 = G__18985__18986;
    while(true) {
      crate.binding.bc_remove.call(null, bc, r__18987);
      var temp__3974__auto____18989 = cljs.core.next.call(null, G__18985__18988);
      if(temp__3974__auto____18989) {
        var G__18985__18990 = temp__3974__auto____18989;
        var G__18993 = cljs.core.first.call(null, G__18985__18990);
        var G__18994 = G__18985__18990;
        r__18987 = G__18993;
        G__18985__18988 = G__18994;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.binding.bound_coll = function() {
  var bound_coll__delegate = function(atm, p__18995) {
    var vec__19010__19011 = p__18995;
    var path__19012 = cljs.core.nth.call(null, vec__19010__19011, 0, null);
    var opts__19013 = cljs.core.nth.call(null, vec__19010__19011, 1, null);
    var vec__19014__19015 = cljs.core.truth_(opts__19013) ? cljs.core.PersistentVector.fromArray([path__19012, opts__19013], true) : cljs.core.PersistentVector.fromArray([null, path__19012], true);
    var path__19016 = cljs.core.nth.call(null, vec__19014__19015, 0, null);
    var opts__19017 = cljs.core.nth.call(null, vec__19014__19015, 1, null);
    var atm__19018 = cljs.core.not.call(null, path__19016) ? atm : crate.binding.subatom.call(null, atm, path__19016);
    var opts__19019 = cljs.core.assoc.call(null, opts__19017, "\ufdd0'path", path__19016);
    var opts__19020 = cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'keyfn")).call(null, opts__19019)) ? cljs.core.assoc.call(null, opts__19019, "\ufdd0'keyfn", cljs.core.first) : cljs.core.assoc.call(null, opts__19019, "\ufdd0'keyfn", cljs.core.comp.call(null, (new cljs.core.Keyword("\ufdd0'keyfn")).call(null, opts__19019), cljs.core.second));
    var bc__19021 = new crate.binding.bound_collection(atm__19018, new crate.binding.notifier(null), opts__19020, cljs.core.sorted_map.call(null));
    cljs.core.add_watch.call(null, atm__19018, cljs.core.gensym.call(null, "bound-coll"), function(_19022, _19023, _, neue) {
      return crate.binding.bc_compare.call(null, bc__19021, neue)
    });
    crate.binding.bc_compare.call(null, bc__19021, cljs.core.deref.call(null, atm__19018));
    return bc__19021
  };
  var bound_coll = function(atm, var_args) {
    var p__18995 = null;
    if(goog.isDef(var_args)) {
      p__18995 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return bound_coll__delegate.call(this, atm, p__18995)
  };
  bound_coll.cljs$lang$maxFixedArity = 1;
  bound_coll.cljs$lang$applyTo = function(arglist__19024) {
    var atm = cljs.core.first(arglist__19024);
    var p__18995 = cljs.core.rest(arglist__19024);
    return bound_coll__delegate(atm, p__18995)
  };
  bound_coll.cljs$lang$arity$variadic = bound_coll__delegate;
  return bound_coll
}();
crate.binding.map_bound = function() {
  var map_bound__delegate = function(as, atm, p__19025) {
    var vec__19035__19036 = p__19025;
    var opts__19037 = cljs.core.nth.call(null, vec__19035__19036, 0, null);
    var opts__19038 = cljs.core.assoc.call(null, opts__19037, "\ufdd0'as", as);
    var atm__19039 = cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'path")).call(null, opts__19038)) ? atm : crate.binding.subatom.call(null, atm, (new cljs.core.Keyword("\ufdd0'path")).call(null, opts__19038));
    var opts__19040 = cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'keyfn")).call(null, opts__19038)) ? cljs.core.assoc.call(null, opts__19038, "\ufdd0'keyfn", cljs.core.first) : cljs.core.assoc.call(null, opts__19038, "\ufdd0'keyfn", cljs.core.comp.call(null, (new cljs.core.Keyword("\ufdd0'keyfn")).call(null, opts__19038), cljs.core.second));
    var bc__19041 = new crate.binding.bound_collection(atm__19039, new crate.binding.notifier(null), opts__19040, cljs.core.sorted_map.call(null));
    cljs.core.add_watch.call(null, atm__19039, cljs.core.gensym.call(null, "bound-coll"), function(_19042, _19043, _, neue) {
      return crate.binding.bc_compare.call(null, bc__19041, neue)
    });
    crate.binding.bc_compare.call(null, bc__19041, cljs.core.deref.call(null, atm__19039));
    return bc__19041
  };
  var map_bound = function(as, atm, var_args) {
    var p__19025 = null;
    if(goog.isDef(var_args)) {
      p__19025 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return map_bound__delegate.call(this, as, atm, p__19025)
  };
  map_bound.cljs$lang$maxFixedArity = 2;
  map_bound.cljs$lang$applyTo = function(arglist__19044) {
    var as = cljs.core.first(arglist__19044);
    var atm = cljs.core.first(cljs.core.next(arglist__19044));
    var p__19025 = cljs.core.rest(cljs.core.next(arglist__19044));
    return map_bound__delegate(as, atm, p__19025)
  };
  map_bound.cljs$lang$arity$variadic = map_bound__delegate;
  return map_bound
}();
crate.binding.binding_QMARK_ = function binding_QMARK_(b) {
  var G__19048__19049 = b;
  if(G__19048__19049) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____19050 = null;
      if(cljs.core.truth_(or__3824__auto____19050)) {
        return or__3824__auto____19050
      }else {
        return G__19048__19049.crate$binding$bindable$
      }
    }())) {
      return true
    }else {
      if(!G__19048__19049.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, crate.binding.bindable, G__19048__19049)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, crate.binding.bindable, G__19048__19049)
  }
};
crate.binding.binding_coll_QMARK_ = function binding_coll_QMARK_(b) {
  var G__19054__19055 = b;
  if(G__19054__19055) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____19056 = null;
      if(cljs.core.truth_(or__3824__auto____19056)) {
        return or__3824__auto____19056
      }else {
        return G__19054__19055.crate$binding$bindable_coll$
      }
    }())) {
      return true
    }else {
      if(!G__19054__19055.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, crate.binding.bindable_coll, G__19054__19055)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, crate.binding.bindable_coll, G__19054__19055)
  }
};
crate.binding.value = function value(b) {
  return crate.binding._value.call(null, b)
};
crate.binding.index = function index(sub_atom) {
  return cljs.core.last.call(null, sub_atom.path)
};
crate.binding.on_change = function on_change(b, func) {
  return crate.binding._on_change.call(null, b, func)
};
crate.binding.bound = function() {
  var bound__delegate = function(atm, p__19057) {
    var vec__19063__19064 = p__19057;
    var func__19065 = cljs.core.nth.call(null, vec__19063__19064, 0, null);
    var func__19067 = function() {
      var or__3824__auto____19066 = func__19065;
      if(cljs.core.truth_(or__3824__auto____19066)) {
        return or__3824__auto____19066
      }else {
        return cljs.core.identity
      }
    }();
    return new crate.binding.atom_binding(atm, func__19067)
  };
  var bound = function(atm, var_args) {
    var p__19057 = null;
    if(goog.isDef(var_args)) {
      p__19057 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return bound__delegate.call(this, atm, p__19057)
  };
  bound.cljs$lang$maxFixedArity = 1;
  bound.cljs$lang$applyTo = function(arglist__19068) {
    var atm = cljs.core.first(arglist__19068);
    var p__19057 = cljs.core.rest(arglist__19068);
    return bound__delegate(atm, p__19057)
  };
  bound.cljs$lang$arity$variadic = bound__delegate;
  return bound
}();
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x)
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return goog.style.getSizeWithDisplay_(element)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var size = goog.style.getSizeWithDisplay_(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return size
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top)
  }
  return new goog.math.Size(offsetWidth, offsetHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if(opt_className) {
    outerDiv.className = opt_className
  }
  outerDiv.style.cssText = "visiblity:hidden;overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width
};
goog.provide("crate.compiler");
goog.require("cljs.core");
goog.require("crate.binding");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("goog.dom");
crate.compiler.xmlns = cljs.core.ObjMap.fromObject(["\ufdd0'xhtml", "\ufdd0'svg"], {"\ufdd0'xhtml":"http://www.w3.org/1999/xhtml", "\ufdd0'svg":"http://www.w3.org/2000/svg"});
crate.compiler.group_id = cljs.core.atom.call(null, 0);
crate.compiler.bindings = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
crate.compiler.capture_binding = function capture_binding(tag, b) {
  return cljs.core.swap_BANG_.call(null, crate.compiler.bindings, cljs.core.conj, cljs.core.PersistentVector.fromArray([tag, b], true))
};
crate.compiler.as_content = function as_content(parent, content) {
  var G__18584__18585 = cljs.core.seq.call(null, content);
  if(G__18584__18585) {
    var c__18586 = cljs.core.first.call(null, G__18584__18585);
    var G__18584__18587 = G__18584__18585;
    while(true) {
      var child__18588 = c__18586 == null ? null : cljs.core.map_QMARK_.call(null, c__18586) ? function() {
        throw"Maps cannot be used as content";
      }() : cljs.core.string_QMARK_.call(null, c__18586) ? goog.dom.createTextNode(c__18586) : cljs.core.vector_QMARK_.call(null, c__18586) ? crate.compiler.elem_factory.call(null, c__18586) : cljs.core.seq_QMARK_.call(null, c__18586) ? as_content.call(null, parent, c__18586) : cljs.core.truth_(crate.binding.binding_coll_QMARK_.call(null, c__18586)) ? function() {
        crate.compiler.capture_binding.call(null, "\ufdd0'coll", c__18586);
        return as_content.call(null, parent, cljs.core.PersistentVector.fromArray([crate.binding.value.call(null, c__18586)], true))
      }() : cljs.core.truth_(crate.binding.binding_QMARK_.call(null, c__18586)) ? function() {
        crate.compiler.capture_binding.call(null, "\ufdd0'text", c__18586);
        return as_content.call(null, parent, cljs.core.PersistentVector.fromArray([crate.binding.value.call(null, c__18586)], true))
      }() : cljs.core.truth_(c__18586.nodeName) ? c__18586 : cljs.core.truth_(c__18586.get) ? c__18586.get(0) : "\ufdd0'else" ? goog.dom.createTextNode([cljs.core.str(c__18586)].join("")) : null;
      if(cljs.core.truth_(child__18588)) {
        goog.dom.appendChild(parent, child__18588)
      }else {
      }
      var temp__3974__auto____18589 = cljs.core.next.call(null, G__18584__18587);
      if(temp__3974__auto____18589) {
        var G__18584__18590 = temp__3974__auto____18589;
        var G__18591 = cljs.core.first.call(null, G__18584__18590);
        var G__18592 = G__18584__18590;
        c__18586 = G__18591;
        G__18584__18587 = G__18592;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.compiler.dom_binding = function() {
  var method_table__2438__auto____18593 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  var prefer_table__2439__auto____18594 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  var method_cache__2440__auto____18595 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  var cached_hierarchy__2441__auto____18596 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  var hierarchy__2442__auto____18597 = cljs.core._lookup.call(null, cljs.core.ObjMap.EMPTY, "\ufdd0'hierarchy", cljs.core.global_hierarchy);
  return new cljs.core.MultiFn("dom-binding", function(type, _18598, _) {
    return type
  }, "\ufdd0'default", hierarchy__2442__auto____18597, method_table__2438__auto____18593, prefer_table__2439__auto____18594, method_cache__2440__auto____18595, cached_hierarchy__2441__auto____18596)
}();
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0'text", function(_, b, elem) {
  return crate.binding.on_change.call(null, b, function(v) {
    goog.dom.removeChildren(elem);
    return crate.compiler.as_content.call(null, elem, cljs.core.PersistentVector.fromArray([v], true))
  })
});
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0'attr", function(_, p__18599, elem) {
  var vec__18600__18601 = p__18599;
  var k__18602 = cljs.core.nth.call(null, vec__18600__18601, 0, null);
  var b__18603 = cljs.core.nth.call(null, vec__18600__18601, 1, null);
  return crate.binding.on_change.call(null, b__18603, function(v) {
    return crate.compiler.dom_attr.call(null, elem, k__18602, v)
  })
});
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0'style", function(_, p__18604, elem) {
  var vec__18605__18606 = p__18604;
  var k__18607 = cljs.core.nth.call(null, vec__18605__18606, 0, null);
  var b__18608 = cljs.core.nth.call(null, vec__18605__18606, 1, null);
  return crate.binding.on_change.call(null, b__18608, function(v) {
    if(cljs.core.truth_(k__18607)) {
      return crate.compiler.dom_style.call(null, elem, k__18607, v)
    }else {
      return crate.compiler.dom_style.call(null, elem, v)
    }
  })
});
crate.compiler.dom_add = function dom_add(bc, parent, elem, v) {
  var temp__3971__auto____18611 = crate.binding.opt.call(null, bc, "\ufdd0'add");
  if(cljs.core.truth_(temp__3971__auto____18611)) {
    var adder__18612 = temp__3971__auto____18611;
    return adder__18612.call(null, parent, elem, v)
  }else {
    return goog.dom.appendChild(parent, elem)
  }
};
crate.compiler.dom_remove = function dom_remove(bc, elem) {
  var temp__3971__auto____18615 = crate.binding.opt.call(null, bc, "\ufdd0'remove");
  if(cljs.core.truth_(temp__3971__auto____18615)) {
    var remover__18616 = temp__3971__auto____18615;
    return remover__18616.call(null, elem)
  }else {
    return goog.dom.removeNode(elem)
  }
};
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0'coll", function(_, bc, parent) {
  return crate.binding.on_change.call(null, bc, function(type, elem, v) {
    var pred__18617__18620 = cljs.core._EQ_;
    var expr__18618__18621 = type;
    if(pred__18617__18620.call(null, "\ufdd0'add", expr__18618__18621)) {
      return crate.compiler.dom_add.call(null, bc, parent, elem, v)
    }else {
      if(pred__18617__18620.call(null, "\ufdd0'remove", expr__18618__18621)) {
        return crate.compiler.dom_remove.call(null, bc, elem)
      }else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__18618__18621)].join(""));
      }
    }
  })
});
crate.compiler.handle_bindings = function handle_bindings(bs, elem) {
  var G__18641__18642 = cljs.core.seq.call(null, bs);
  if(G__18641__18642) {
    var G__18644__18646 = cljs.core.first.call(null, G__18641__18642);
    var vec__18645__18647 = G__18644__18646;
    var type__18648 = cljs.core.nth.call(null, vec__18645__18647, 0, null);
    var b__18649 = cljs.core.nth.call(null, vec__18645__18647, 1, null);
    var G__18641__18650 = G__18641__18642;
    var G__18644__18651 = G__18644__18646;
    var G__18641__18652 = G__18641__18650;
    while(true) {
      var vec__18653__18654 = G__18644__18651;
      var type__18655 = cljs.core.nth.call(null, vec__18653__18654, 0, null);
      var b__18656 = cljs.core.nth.call(null, vec__18653__18654, 1, null);
      var G__18641__18657 = G__18641__18652;
      crate.compiler.dom_binding.call(null, type__18655, b__18656, elem);
      var temp__3974__auto____18658 = cljs.core.next.call(null, G__18641__18657);
      if(temp__3974__auto____18658) {
        var G__18641__18659 = temp__3974__auto____18658;
        var G__18660 = cljs.core.first.call(null, G__18641__18659);
        var G__18661 = G__18641__18659;
        G__18644__18651 = G__18660;
        G__18641__18652 = G__18661;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.compiler.dom_style = function() {
  var dom_style = null;
  var dom_style__2 = function(elem, v) {
    if(cljs.core.string_QMARK_.call(null, v)) {
      elem.setAttribute("style", v)
    }else {
      if(cljs.core.map_QMARK_.call(null, v)) {
        var G__18682__18683 = cljs.core.seq.call(null, v);
        if(G__18682__18683) {
          var G__18685__18687 = cljs.core.first.call(null, G__18682__18683);
          var vec__18686__18688 = G__18685__18687;
          var k__18689 = cljs.core.nth.call(null, vec__18686__18688, 0, null);
          var v__18690 = cljs.core.nth.call(null, vec__18686__18688, 1, null);
          var G__18682__18691 = G__18682__18683;
          var G__18685__18692 = G__18685__18687;
          var G__18682__18693 = G__18682__18691;
          while(true) {
            var vec__18694__18695 = G__18685__18692;
            var k__18696 = cljs.core.nth.call(null, vec__18694__18695, 0, null);
            var v__18697 = cljs.core.nth.call(null, vec__18694__18695, 1, null);
            var G__18682__18698 = G__18682__18693;
            dom_style.call(null, elem, k__18696, v__18697);
            var temp__3974__auto____18699 = cljs.core.next.call(null, G__18682__18698);
            if(temp__3974__auto____18699) {
              var G__18682__18700 = temp__3974__auto____18699;
              var G__18702 = cljs.core.first.call(null, G__18682__18700);
              var G__18703 = G__18682__18700;
              G__18685__18692 = G__18702;
              G__18682__18693 = G__18703;
              continue
            }else {
            }
            break
          }
        }else {
        }
      }else {
        if(cljs.core.truth_(crate.binding.binding_QMARK_.call(null, v))) {
          crate.compiler.capture_binding.call(null, "\ufdd0'style", cljs.core.PersistentVector.fromArray([null, v], true));
          dom_style.call(null, elem, crate.binding.value.call(null, v))
        }else {
        }
      }
    }
    return elem
  };
  var dom_style__3 = function(elem, k, v) {
    var v__18701 = cljs.core.truth_(crate.binding.binding_QMARK_.call(null, v)) ? function() {
      crate.compiler.capture_binding.call(null, "\ufdd0'style", cljs.core.PersistentVector.fromArray([k, v], true));
      return crate.binding.value.call(null, v)
    }() : v;
    return goog.style.setStyle(elem, cljs.core.name.call(null, k), v__18701)
  };
  dom_style = function(elem, k, v) {
    switch(arguments.length) {
      case 2:
        return dom_style__2.call(this, elem, k);
      case 3:
        return dom_style__3.call(this, elem, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dom_style.cljs$lang$arity$2 = dom_style__2;
  dom_style.cljs$lang$arity$3 = dom_style__3;
  return dom_style
}();
crate.compiler.dom_attr = function() {
  var dom_attr = null;
  var dom_attr__2 = function(elem, attrs) {
    if(cljs.core.truth_(elem)) {
      if(!cljs.core.map_QMARK_.call(null, attrs)) {
        return elem.getAttribute(cljs.core.name.call(null, attrs))
      }else {
        var G__18724__18725 = cljs.core.seq.call(null, attrs);
        if(G__18724__18725) {
          var G__18727__18729 = cljs.core.first.call(null, G__18724__18725);
          var vec__18728__18730 = G__18727__18729;
          var k__18731 = cljs.core.nth.call(null, vec__18728__18730, 0, null);
          var v__18732 = cljs.core.nth.call(null, vec__18728__18730, 1, null);
          var G__18724__18733 = G__18724__18725;
          var G__18727__18734 = G__18727__18729;
          var G__18724__18735 = G__18724__18733;
          while(true) {
            var vec__18736__18737 = G__18727__18734;
            var k__18738 = cljs.core.nth.call(null, vec__18736__18737, 0, null);
            var v__18739 = cljs.core.nth.call(null, vec__18736__18737, 1, null);
            var G__18724__18740 = G__18724__18735;
            dom_attr.call(null, elem, k__18738, v__18739);
            var temp__3974__auto____18741 = cljs.core.next.call(null, G__18724__18740);
            if(temp__3974__auto____18741) {
              var G__18724__18742 = temp__3974__auto____18741;
              var G__18744 = cljs.core.first.call(null, G__18724__18742);
              var G__18745 = G__18724__18742;
              G__18727__18734 = G__18744;
              G__18724__18735 = G__18745;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return elem
      }
    }else {
      return null
    }
  };
  var dom_attr__3 = function(elem, k, v) {
    if(cljs.core._EQ_.call(null, k, "\ufdd0'style")) {
      crate.compiler.dom_style.call(null, elem, v)
    }else {
      var v__18743 = cljs.core.truth_(crate.binding.binding_QMARK_.call(null, v)) ? function() {
        crate.compiler.capture_binding.call(null, "\ufdd0'attr", cljs.core.PersistentVector.fromArray([k, v], true));
        return crate.binding.value.call(null, v)
      }() : v;
      elem.setAttribute(cljs.core.name.call(null, k), v__18743)
    }
    return elem
  };
  dom_attr = function(elem, k, v) {
    switch(arguments.length) {
      case 2:
        return dom_attr__2.call(this, elem, k);
      case 3:
        return dom_attr__3.call(this, elem, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dom_attr.cljs$lang$arity$2 = dom_attr__2;
  dom_attr.cljs$lang$arity$3 = dom_attr__3;
  return dom_attr
}();
crate.compiler.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
crate.compiler.normalize_map_attrs = function normalize_map_attrs(map_attrs) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__18752) {
    var vec__18753__18754 = p__18752;
    var n__18755 = cljs.core.nth.call(null, vec__18753__18754, 0, null);
    var v__18756 = cljs.core.nth.call(null, vec__18753__18754, 1, null);
    if(v__18756 === true) {
      return cljs.core.PersistentVector.fromArray([n__18755, cljs.core.name.call(null, n__18755)], true)
    }else {
      return cljs.core.PersistentVector.fromArray([n__18755, v__18756], true)
    }
  }, cljs.core.filter.call(null, cljs.core.comp.call(null, cljs.core.boolean$, cljs.core.second), map_attrs)))
};
crate.compiler.normalize_element = function normalize_element(p__18757) {
  var vec__18783__18784 = p__18757;
  var tag__18785 = cljs.core.nth.call(null, vec__18783__18784, 0, null);
  var content__18786 = cljs.core.nthnext.call(null, vec__18783__18784, 1);
  if(!function() {
    var or__3824__auto____18787 = cljs.core.keyword_QMARK_.call(null, tag__18785);
    if(or__3824__auto____18787) {
      return or__3824__auto____18787
    }else {
      var or__3824__auto____18788 = cljs.core.symbol_QMARK_.call(null, tag__18785);
      if(or__3824__auto____18788) {
        return or__3824__auto____18788
      }else {
        return cljs.core.string_QMARK_.call(null, tag__18785)
      }
    }
  }()) {
    throw[cljs.core.str(tag__18785), cljs.core.str(" is not a valid tag name.")].join("");
  }else {
  }
  var vec__18789__18791 = cljs.core.re_matches.call(null, crate.compiler.re_tag, cljs.core.name.call(null, tag__18785));
  var ___18792 = cljs.core.nth.call(null, vec__18789__18791, 0, null);
  var tag__18793 = cljs.core.nth.call(null, vec__18789__18791, 1, null);
  var id__18794 = cljs.core.nth.call(null, vec__18789__18791, 2, null);
  var class__18795 = cljs.core.nth.call(null, vec__18789__18791, 3, null);
  var vec__18790__18802 = function() {
    var vec__18796__18797 = clojure.string.split.call(null, tag__18793, /:/);
    var nsp__18798 = cljs.core.nth.call(null, vec__18796__18797, 0, null);
    var t__18799 = cljs.core.nth.call(null, vec__18796__18797, 1, null);
    var ns_xmlns__18800 = crate.compiler.xmlns.call(null, cljs.core.keyword.call(null, nsp__18798));
    if(cljs.core.truth_(t__18799)) {
      return cljs.core.PersistentVector.fromArray([function() {
        var or__3824__auto____18801 = ns_xmlns__18800;
        if(cljs.core.truth_(or__3824__auto____18801)) {
          return or__3824__auto____18801
        }else {
          return nsp__18798
        }
      }(), t__18799], true)
    }else {
      return cljs.core.PersistentVector.fromArray([(new cljs.core.Keyword("\ufdd0'xhtml")).call(null, crate.compiler.xmlns), nsp__18798], true)
    }
  }();
  var nsp__18803 = cljs.core.nth.call(null, vec__18790__18802, 0, null);
  var tag__18804 = cljs.core.nth.call(null, vec__18790__18802, 1, null);
  var tag_attrs__18806 = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.filter.call(null, function(p1__18746_SHARP_) {
    return!(cljs.core.second.call(null, p1__18746_SHARP_) == null)
  }, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":function() {
    var or__3824__auto____18805 = id__18794;
    if(cljs.core.truth_(or__3824__auto____18805)) {
      return or__3824__auto____18805
    }else {
      return null
    }
  }(), "\ufdd0'class":cljs.core.truth_(class__18795) ? clojure.string.replace.call(null, class__18795, /\./, " ") : null})));
  var map_attrs__18807 = cljs.core.first.call(null, content__18786);
  if(cljs.core.map_QMARK_.call(null, map_attrs__18807)) {
    return cljs.core.PersistentVector.fromArray([nsp__18803, tag__18804, cljs.core.merge.call(null, tag_attrs__18806, crate.compiler.normalize_map_attrs.call(null, map_attrs__18807)), cljs.core.next.call(null, content__18786)], true)
  }else {
    return cljs.core.PersistentVector.fromArray([nsp__18803, tag__18804, tag_attrs__18806, content__18786], true)
  }
};
crate.compiler.parse_content = function parse_content(elem, content) {
  var attrs__18809 = cljs.core.first.call(null, content);
  if(cljs.core.map_QMARK_.call(null, attrs__18809)) {
    crate.compiler.dom_attr.call(null, elem, attrs__18809);
    return cljs.core.rest.call(null, content)
  }else {
    return content
  }
};
crate.compiler.create_elem = cljs.core.truth_(document.createElementNS) ? function(nsp, tag) {
  return document.createElementNS(nsp, tag)
} : function(_, tag) {
  return document.createElement(tag)
};
crate.compiler.elem_factory = function elem_factory(tag_def) {
  var bindings18820__18821 = crate.compiler.bindings;
  try {
    crate.compiler.bindings = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
    var vec__18823__18824 = crate.compiler.normalize_element.call(null, tag_def);
    var nsp__18825 = cljs.core.nth.call(null, vec__18823__18824, 0, null);
    var tag__18826 = cljs.core.nth.call(null, vec__18823__18824, 1, null);
    var attrs__18827 = cljs.core.nth.call(null, vec__18823__18824, 2, null);
    var content__18828 = cljs.core.nth.call(null, vec__18823__18824, 3, null);
    var elem__18829 = crate.compiler.create_elem.call(null, nsp__18825, tag__18826);
    crate.compiler.dom_attr.call(null, elem__18829, attrs__18827);
    crate.compiler.as_content.call(null, elem__18829, content__18828);
    crate.compiler.handle_bindings.call(null, cljs.core.deref.call(null, crate.compiler.bindings), elem__18829);
    return elem__18829
  }finally {
    crate.compiler.bindings = bindings18820__18821
  }
};
crate.compiler.add_optional_attrs = function add_optional_attrs(func) {
  return function() {
    var G__18838__delegate = function(args) {
      if(cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, args))) {
        var vec__18834__18835 = cljs.core.apply.call(null, func, cljs.core.rest.call(null, args));
        var tag__18836 = cljs.core.nth.call(null, vec__18834__18835, 0, null);
        var body__18837 = cljs.core.nthnext.call(null, vec__18834__18835, 1);
        if(cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, body__18837))) {
          return cljs.core.apply.call(null, cljs.core.vector, tag__18836, cljs.core.merge.call(null, cljs.core.first.call(null, body__18837), cljs.core.first.call(null, args)), cljs.core.rest.call(null, body__18837))
        }else {
          return cljs.core.apply.call(null, cljs.core.vector, tag__18836, cljs.core.first.call(null, args), body__18837)
        }
      }else {
        return cljs.core.apply.call(null, func, args)
      }
    };
    var G__18838 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__18838__delegate.call(this, args)
    };
    G__18838.cljs$lang$maxFixedArity = 0;
    G__18838.cljs$lang$applyTo = function(arglist__18839) {
      var args = cljs.core.seq(arglist__18839);
      return G__18838__delegate(args)
    };
    G__18838.cljs$lang$arity$variadic = G__18838__delegate;
    return G__18838
  }()
};
goog.provide("crate.core");
goog.require("cljs.core");
goog.require("crate.util");
goog.require("crate.compiler");
crate.core.group_id = cljs.core.atom.call(null, 0);
crate.core.html = function() {
  var html__delegate = function(tags) {
    var res__18575 = cljs.core.map.call(null, crate.compiler.elem_factory, tags);
    if(cljs.core.truth_(cljs.core.second.call(null, res__18575))) {
      return res__18575
    }else {
      return cljs.core.first.call(null, res__18575)
    }
  };
  var html = function(var_args) {
    var tags = null;
    if(goog.isDef(var_args)) {
      tags = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return html__delegate.call(this, tags)
  };
  html.cljs$lang$maxFixedArity = 0;
  html.cljs$lang$applyTo = function(arglist__18576) {
    var tags = cljs.core.seq(arglist__18576);
    return html__delegate(tags)
  };
  html.cljs$lang$arity$variadic = html__delegate;
  return html
}();
crate.core.h = crate.util.escape_html;
var array_p, explode_p, ignore_p, key_prefix, map_p, namespace_tag, number_p, p, re_svg_tags, re_tag, re_whitespace, string_p, unify_p, whitespace_node_p, xmlns, __hasProp = {}.hasOwnProperty;
goog.require("goog.string");
goog.provide("singult.coffee");
goog.provide("singult.coffee.Unify");
goog.provide("singult.coffee.Ignore");
p = function(x) {
  console.log(x);
  return x
};
re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
re_svg_tags = /^(svg|g|rect|circle|clipPath|path|line|polygon|polyline|text|textPath)$/;
re_whitespace = /^\s+$/;
key_prefix = "\x00";
xmlns = {xhtml:"http://www.w3.org/1999/xhtml", svg:"http://www.w3.org/2000/svg"};
namespace_tag = function(tag_str) {
  var nsp, tag, _ref;
  _ref = tag_str.split(":"), nsp = _ref[0], tag = _ref[1];
  if(tag != null) {
    return[xmlns[nsp] || nsp, tag]
  }else {
    if(tag_str.match(re_svg_tags)) {
      return[xmlns.svg, tag_str]
    }else {
      return[xmlns.xhtml, tag_str]
    }
  }
};
explode_p = function(v) {
  return v[0] === ":*:"
};
unify_p = function(x) {
  return x != null && x instanceof singult.coffee.Unify
};
ignore_p = function(x) {
  return x != null && x instanceof singult.coffee.Ignore
};
array_p = function(x) {
  return x != null && x.forEach != null
};
map_p = function(x) {
  return x != null && !array_p(x) && !unify_p(x) && !ignore_p(x) && x instanceof Object
};
string_p = function(x) {
  return x != null && x.substring != null
};
number_p = function(x) {
  return x != null && x.toFixed != null
};
whitespace_node_p = function($n) {
  return $n.nodeType === 8 || $n.nodeType === 3 && $n.textContent.match(re_whitespace)
};
singult.coffee.style = function($e, m) {
  var k, v, _results;
  _results = [];
  for(k in m) {
    if(!__hasProp.call(m, k)) {
      continue
    }
    v = m[k];
    _results.push($e.style[goog.string.toCamelCase(k)] = v)
  }
  return _results
};
singult.coffee.properties = function($e, m) {
  var prop, v, _results;
  _results = [];
  for(prop in m) {
    if(!__hasProp.call(m, prop)) {
      continue
    }
    v = m[prop];
    _results.push($e[prop] = v)
  }
  return _results
};
singult.coffee.attr = function($e, attr_map) {
  var k, v, _results;
  if(attr_map["style"] != null) {
    singult.coffee.style($e, attr_map["style"]);
    delete attr_map["style"]
  }
  if(attr_map["properties"] != null) {
    singult.coffee.properties($e, attr_map["properties"]);
    delete attr_map["properties"]
  }
  if(array_p(attr_map["class"])) {
    $e.setAttribute("class", attr_map["class"].join(" "));
    delete attr_map["class"]
  }
  _results = [];
  for(k in attr_map) {
    if(!__hasProp.call(attr_map, k)) {
      continue
    }
    v = attr_map[k];
    if(v != null) {
      _results.push($e.setAttribute(k, v))
    }else {
      _results.push($e.removeAttribute(k))
    }
  }
  return _results
};
singult.coffee.node_data = function($e, d) {
  if(d != null) {
    return $e["__singult_data__"] = d
  }else {
    return $e["__singult_data__"]
  }
};
singult.coffee.canonicalize = function(x) {
  if(number_p(x)) {
    return x.toString()
  }else {
    if(array_p(x)) {
      return singult.coffee.canonicalize_hiccup(x)
    }else {
      return x
    }
  }
};
singult.coffee.canonicalize_hiccup = function(v) {
  var abbreviated_classes, attr, canonical, canonical_children, children, cls_str, id, nsp, tag, tag_str, _, _ref, _ref1, _ref2;
  tag = v[0];
  _ref = map_p(v[1]) ? [v[1], v.slice(2)] : [{}, v.slice(1)], attr = _ref[0], children = _ref[1];
  _ref1 = tag.match(re_tag), _ = _ref1[0], tag_str = _ref1[1], id = _ref1[2], cls_str = _ref1[3];
  if(id != null) {
    attr["id"] = id
  }
  if(cls_str != null) {
    abbreviated_classes = cls_str.split(".");
    if(array_p(attr["class"])) {
      attr["class"] = attr["class"].concat(abbreviated_classes)
    }else {
      if(string_p(attr["class"])) {
        attr["class"] = abbreviated_classes.concat([attr["class"]])
      }else {
        if(!(attr["class"] != null)) {
          attr["class"] = abbreviated_classes
        }
      }
    }
  }
  _ref2 = namespace_tag(tag_str), nsp = _ref2[0], tag = _ref2[1];
  canonical_children = [];
  children.forEach(function(v) {
    if(v != null) {
      if(explode_p(v)) {
        return v.slice(1).forEach(function(v) {
          return canonical_children.push(singult.coffee.canonicalize(v))
        })
      }else {
        return canonical_children.push(singult.coffee.canonicalize(v))
      }
    }
  });
  canonical = {nsp:nsp, tag:tag, attr:attr, children:canonical_children};
  return canonical
};
singult.coffee.render = function(m) {
  var $e, c;
  if(unify_p(m)) {
    throw new Error("Unify must be the first and only child of its parent.");
  }else {
    if(ignore_p(m)) {
      return null
    }else {
      if(string_p(m)) {
        return document.createTextNode(m)
      }else {
        $e = document.createElementNS(m.nsp, m.tag);
        singult.coffee.attr($e, m.attr);
        if(unify_p(c = m.children[0])) {
          if(c.enter != null) {
            c.data.forEach(function(d) {
              var $el;
              $el = c.enter(d);
              singult.coffee.node_data($el, d);
              return $e.appendChild($el)
            })
          }else {
            c.data.forEach(function(d) {
              var $el;
              $el = singult.coffee.render(singult.coffee.canonicalize(c.mapping(d)));
              singult.coffee.node_data($el, d);
              return $e.appendChild($el)
            })
          }
        }else {
          m.children.forEach(function(c) {
            var $c;
            $c = singult.coffee.render(c);
            if($c != null) {
              return $e.appendChild($c)
            }
          })
        }
        return $e
      }
    }
  }
};
singult.coffee.Unify = function(data, mapping, key_fn, enter, update, exit, force_update_p) {
  this.data = data;
  this.mapping = mapping;
  this.key_fn = key_fn;
  this.enter = enter;
  this.update = update;
  this.exit = exit;
  this.force_update_p = force_update_p;
  return this
};
singult.coffee.Ignore = function() {
  return this
};
singult.coffee.unify_ = function($container, u) {
  var $n, $nodes, enter, exit, i, key, key_fn, nodes_by_key, update, _;
  enter = u.enter || function(d) {
    var $el;
    $el = singult.coffee.render(singult.coffee.canonicalize(u.mapping(d)));
    $container.appendChild($el);
    return $el
  };
  update = u.update || function($n, d) {
    return singult.coffee.merge($n, singult.coffee.canonicalize(u.mapping(d)))
  };
  exit = u.exit || function($n) {
    return $container.removeChild($n)
  };
  key_fn = u.key_fn || function(d, idx) {
    return idx
  };
  $nodes = $container.childNodes;
  nodes_by_key = {};
  i = 0;
  while(i < $nodes.length) {
    key = key_prefix + key_fn(singult.coffee.node_data($nodes[i]), i);
    nodes_by_key[key] = $nodes[i];
    i += 1
  }
  u.data.forEach(function(d, i) {
    var $el, $n, identical_data_p, old_data;
    key = key_prefix + key_fn(d, i);
    if($n = nodes_by_key[key]) {
      if(u.force_update_p) {
        $el = update($n, d);
        singult.coffee.node_data($el, d)
      }else {
        old_data = singult.coffee.node_data($n);
        identical_data_p = old_data.cljs$core$IEquiv$_equiv$arity$2 != null ? old_data.cljs$core$IEquiv$_equiv$arity$2(old_data, d) : old_data === d;
        if(!identical_data_p) {
          $el = update($n, d);
          singult.coffee.node_data($el, d)
        }
      }
      return delete nodes_by_key[key]
    }else {
      $el = enter(d);
      return singult.coffee.node_data($el, d)
    }
  });
  for(_ in nodes_by_key) {
    $n = nodes_by_key[_];
    exit($n)
  }
  return null
};
singult.coffee.merge = function($e, m) {
  var $c, c, i, _i, _j, _ref, _ref1;
  if(unify_p(m)) {
    singult.coffee.unify_($e, m)
  }else {
    if(ignore_p(m)) {
    }else {
      if($e.nodeName.toLowerCase() !== m.tag.toLowerCase()) {
        p($e);
        p(m);
        throw new Error("Cannot merge $e into node of different type");
      }
      singult.coffee.attr($e, m.attr);
      if($e.hasChildNodes()) {
        for(i = _i = _ref = $e.childNodes.length - 1;_ref <= 0 ? _i <= 0 : _i >= 0;i = _ref <= 0 ? ++_i : --_i) {
          $c = $e.childNodes[i];
          if(whitespace_node_p($c)) {
            $e.removeChild($c)
          }
        }
      }
      if(unify_p(m.children[0])) {
        singult.coffee.merge($e, m.children[0])
      }else {
        if($e.childNodes.length > m.children.length) {
          for(i = _j = _ref1 = $e.childNodes.length - 1;_ref1 <= 0 ? _j <= 0 : _j >= 0;i = _ref1 <= 0 ? ++_j : --_j) {
            $e.removeChild($e.childNodes[i])
          }
        }
        i = 0;
        while(i < m.children.length) {
          c = m.children[i] || "";
          $c = $e.childNodes[i];
          if(string_p(c)) {
            if($c != null) {
              $c.textContent = c
            }else {
              $e.appendChild(document.createTextNode(c))
            }
          }else {
            if(ignore_p(c)) {
            }else {
              if(map_p(c)) {
                if($c != null) {
                  singult.coffee.merge($c, c)
                }else {
                  $e.appendChild(singult.coffee.render(c))
                }
              }else {
                p($c);
                p(c);
                throw new Error("Cannot merge children");
              }
            }
          }
          i += 1
        }
      }
    }
  }
  return $e
};
goog.provide("singult.core");
goog.require("cljs.core");
goog.require("singult.coffee");
singult.core.Unify = function(data, mapping, key_fn, enter, update, exit, force_update_QMARK_, __meta, __extmap) {
  this.data = data;
  this.mapping = mapping;
  this.key_fn = key_fn;
  this.enter = enter;
  this.update = update;
  this.exit = exit;
  this.force_update_QMARK_ = force_update_QMARK_;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054858;
  if(arguments.length > 7) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
singult.core.Unify.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__16202 = this;
  var h__2093__auto____16203 = this__16202.__hash;
  if(!(h__2093__auto____16203 == null)) {
    return h__2093__auto____16203
  }else {
    var h__2093__auto____16204 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__16202.__hash = h__2093__auto____16204;
    return h__2093__auto____16204
  }
};
singult.core.Unify.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__16205 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
singult.core.Unify.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k16200, else__2227__auto__) {
  var this__16206 = this;
  if(k16200 === "\ufdd0'data") {
    return this__16206.data
  }else {
    if(k16200 === "\ufdd0'mapping") {
      return this__16206.mapping
    }else {
      if(k16200 === "\ufdd0'key-fn") {
        return this__16206.key_fn
      }else {
        if(k16200 === "\ufdd0'enter") {
          return this__16206.enter
        }else {
          if(k16200 === "\ufdd0'update") {
            return this__16206.update
          }else {
            if(k16200 === "\ufdd0'exit") {
              return this__16206.exit
            }else {
              if(k16200 === "\ufdd0'force-update?") {
                return this__16206.force_update_QMARK_
              }else {
                if("\ufdd0'else") {
                  return cljs.core._lookup.call(null, this__16206.__extmap, k16200, else__2227__auto__)
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
singult.core.Unify.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__16199) {
  var this__16207 = this;
  var pred__16208__16211 = cljs.core.identical_QMARK_;
  var expr__16209__16212 = k__2232__auto__;
  if(pred__16208__16211.call(null, "\ufdd0'data", expr__16209__16212)) {
    return new singult.core.Unify(G__16199, this__16207.mapping, this__16207.key_fn, this__16207.enter, this__16207.update, this__16207.exit, this__16207.force_update_QMARK_, this__16207.__meta, this__16207.__extmap, null)
  }else {
    if(pred__16208__16211.call(null, "\ufdd0'mapping", expr__16209__16212)) {
      return new singult.core.Unify(this__16207.data, G__16199, this__16207.key_fn, this__16207.enter, this__16207.update, this__16207.exit, this__16207.force_update_QMARK_, this__16207.__meta, this__16207.__extmap, null)
    }else {
      if(pred__16208__16211.call(null, "\ufdd0'key-fn", expr__16209__16212)) {
        return new singult.core.Unify(this__16207.data, this__16207.mapping, G__16199, this__16207.enter, this__16207.update, this__16207.exit, this__16207.force_update_QMARK_, this__16207.__meta, this__16207.__extmap, null)
      }else {
        if(pred__16208__16211.call(null, "\ufdd0'enter", expr__16209__16212)) {
          return new singult.core.Unify(this__16207.data, this__16207.mapping, this__16207.key_fn, G__16199, this__16207.update, this__16207.exit, this__16207.force_update_QMARK_, this__16207.__meta, this__16207.__extmap, null)
        }else {
          if(pred__16208__16211.call(null, "\ufdd0'update", expr__16209__16212)) {
            return new singult.core.Unify(this__16207.data, this__16207.mapping, this__16207.key_fn, this__16207.enter, G__16199, this__16207.exit, this__16207.force_update_QMARK_, this__16207.__meta, this__16207.__extmap, null)
          }else {
            if(pred__16208__16211.call(null, "\ufdd0'exit", expr__16209__16212)) {
              return new singult.core.Unify(this__16207.data, this__16207.mapping, this__16207.key_fn, this__16207.enter, this__16207.update, G__16199, this__16207.force_update_QMARK_, this__16207.__meta, this__16207.__extmap, null)
            }else {
              if(pred__16208__16211.call(null, "\ufdd0'force-update?", expr__16209__16212)) {
                return new singult.core.Unify(this__16207.data, this__16207.mapping, this__16207.key_fn, this__16207.enter, this__16207.update, this__16207.exit, G__16199, this__16207.__meta, this__16207.__extmap, null)
              }else {
                return new singult.core.Unify(this__16207.data, this__16207.mapping, this__16207.key_fn, this__16207.enter, this__16207.update, this__16207.exit, this__16207.force_update_QMARK_, this__16207.__meta, cljs.core.assoc.call(null, this__16207.__extmap, k__2232__auto__, G__16199), null)
              }
            }
          }
        }
      }
    }
  }
};
singult.core.Unify.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__16213 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
singult.core.Unify.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__16214 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'data", this__16214.data), cljs.core.vector.call(null, "\ufdd0'mapping", this__16214.mapping), cljs.core.vector.call(null, "\ufdd0'key-fn", this__16214.key_fn), cljs.core.vector.call(null, "\ufdd0'enter", this__16214.enter), cljs.core.vector.call(null, "\ufdd0'update", this__16214.update), cljs.core.vector.call(null, "\ufdd0'exit", this__16214.exit), cljs.core.vector.call(null, 
  "\ufdd0'force-update?", this__16214.force_update_QMARK_)], true), this__16214.__extmap))
};
singult.core.Unify.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__16215 = this;
  var pr_pair__2240__auto____16216 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____16216, [cljs.core.str("#"), cljs.core.str("Unify"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'data", this__16215.data), cljs.core.vector.call(null, "\ufdd0'mapping", this__16215.mapping), cljs.core.vector.call(null, "\ufdd0'key-fn", this__16215.key_fn), cljs.core.vector.call(null, "\ufdd0'enter", this__16215.enter), 
  cljs.core.vector.call(null, "\ufdd0'update", this__16215.update), cljs.core.vector.call(null, "\ufdd0'exit", this__16215.exit), cljs.core.vector.call(null, "\ufdd0'force-update?", this__16215.force_update_QMARK_)], true), this__16215.__extmap))
};
singult.core.Unify.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__16217 = this;
  return 7 + cljs.core.count.call(null, this__16217.__extmap)
};
singult.core.Unify.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__16218 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____16219 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____16219)) {
      var and__3822__auto____16220 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____16220) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____16220
      }
    }else {
      return and__3822__auto____16219
    }
  }())) {
    return true
  }else {
    return false
  }
};
singult.core.Unify.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__16199) {
  var this__16221 = this;
  return new singult.core.Unify(this__16221.data, this__16221.mapping, this__16221.key_fn, this__16221.enter, this__16221.update, this__16221.exit, this__16221.force_update_QMARK_, G__16199, this__16221.__extmap, this__16221.__hash)
};
singult.core.Unify.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__16222 = this;
  return this__16222.__meta
};
singult.core.Unify.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__16223 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'data", "\ufdd0'force-update?", "\ufdd0'enter", "\ufdd0'exit", "\ufdd0'key-fn", "\ufdd0'update", "\ufdd0'mapping"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__16223.__meta), k__2234__auto__)
  }else {
    return new singult.core.Unify(this__16223.data, this__16223.mapping, this__16223.key_fn, this__16223.enter, this__16223.update, this__16223.exit, this__16223.force_update_QMARK_, this__16223.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__16223.__extmap, k__2234__auto__)), null)
  }
};
singult.core.Unify.cljs$lang$type = true;
singult.core.Unify.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "singult.core/Unify")
};
singult.core.__GT_Unify = function __GT_Unify(data, mapping, key_fn, enter, update, exit, force_update_QMARK_) {
  return new singult.core.Unify(data, mapping, key_fn, enter, update, exit, force_update_QMARK_)
};
singult.core.map__GT_Unify = function map__GT_Unify(G__16201) {
  return new singult.core.Unify((new cljs.core.Keyword("\ufdd0'data")).call(null, G__16201), (new cljs.core.Keyword("\ufdd0'mapping")).call(null, G__16201), (new cljs.core.Keyword("\ufdd0'key-fn")).call(null, G__16201), (new cljs.core.Keyword("\ufdd0'enter")).call(null, G__16201), (new cljs.core.Keyword("\ufdd0'update")).call(null, G__16201), (new cljs.core.Keyword("\ufdd0'exit")).call(null, G__16201), (new cljs.core.Keyword("\ufdd0'force-update?")).call(null, G__16201), null, cljs.core.dissoc.call(null, 
  G__16201, "\ufdd0'data", "\ufdd0'mapping", "\ufdd0'key-fn", "\ufdd0'enter", "\ufdd0'update", "\ufdd0'exit", "\ufdd0'force-update?"))
};
singult.core.Unify;
singult.core.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.instance_QMARK_.call(null, singult.core.Unify, x)) {
    var map__16277__16278 = x;
    var map__16277__16279 = cljs.core.seq_QMARK_.call(null, map__16277__16278) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16277__16278) : map__16277__16278;
    var force_update_QMARK___16280 = cljs.core._lookup.call(null, map__16277__16279, "\ufdd0'force-update?", null);
    var exit__16281 = cljs.core._lookup.call(null, map__16277__16279, "\ufdd0'exit", null);
    var update__16282 = cljs.core._lookup.call(null, map__16277__16279, "\ufdd0'update", null);
    var enter__16283 = cljs.core._lookup.call(null, map__16277__16279, "\ufdd0'enter", null);
    var key_fn__16284 = cljs.core._lookup.call(null, map__16277__16279, "\ufdd0'key-fn", null);
    var mapping__16285 = cljs.core._lookup.call(null, map__16277__16279, "\ufdd0'mapping", null);
    var data__16286 = cljs.core._lookup.call(null, map__16277__16279, "\ufdd0'data", null);
    var data_arr__16294 = function() {
      var a__16287 = [];
      var G__16288__16289 = cljs.core.seq.call(null, data__16286);
      if(G__16288__16289) {
        var d__16290 = cljs.core.first.call(null, G__16288__16289);
        var G__16288__16291 = G__16288__16289;
        while(true) {
          a__16287.push(d__16290);
          var temp__3974__auto____16292 = cljs.core.next.call(null, G__16288__16291);
          if(temp__3974__auto____16292) {
            var G__16288__16293 = temp__3974__auto____16292;
            var G__16330 = cljs.core.first.call(null, G__16288__16293);
            var G__16331 = G__16288__16293;
            d__16290 = G__16330;
            G__16288__16291 = G__16331;
            continue
          }else {
          }
          break
        }
      }else {
      }
      return a__16287
    }();
    return new singult.coffee.Unify(data_arr__16294, function(p1__16198_SHARP_) {
      return clj__GT_js.call(null, mapping__16285.call(null, p1__16198_SHARP_))
    }, key_fn__16284, enter__16283, update__16282, exit__16281, force_update_QMARK___16280)
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        var o__16295 = {};
        var G__16296__16297 = cljs.core.seq.call(null, x);
        if(G__16296__16297) {
          var G__16299__16301 = cljs.core.first.call(null, G__16296__16297);
          var vec__16300__16302 = G__16299__16301;
          var k__16303 = cljs.core.nth.call(null, vec__16300__16302, 0, null);
          var v__16304 = cljs.core.nth.call(null, vec__16300__16302, 1, null);
          var G__16296__16305 = G__16296__16297;
          var G__16299__16306 = G__16299__16301;
          var G__16296__16307 = G__16296__16305;
          while(true) {
            var vec__16308__16309 = G__16299__16306;
            var k__16310 = cljs.core.nth.call(null, vec__16308__16309, 0, null);
            var v__16311 = cljs.core.nth.call(null, vec__16308__16309, 1, null);
            var G__16296__16312 = G__16296__16307;
            var key__16313 = clj__GT_js.call(null, k__16310);
            if(cljs.core.string_QMARK_.call(null, key__16313)) {
            }else {
              throw"Cannot convert; JavaScript map keys must be strings";
            }
            o__16295[key__16313] = clj__GT_js.call(null, v__16311);
            var temp__3974__auto____16314 = cljs.core.next.call(null, G__16296__16312);
            if(temp__3974__auto____16314) {
              var G__16296__16315 = temp__3974__auto____16314;
              var G__16332 = cljs.core.first.call(null, G__16296__16315);
              var G__16333 = G__16296__16315;
              G__16299__16306 = G__16332;
              G__16296__16307 = G__16333;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return o__16295
      }else {
        if(cljs.core.seq_QMARK_.call(null, x)) {
          var a__16316 = [];
          a__16316.push(":*:");
          var G__16317__16318 = cljs.core.seq.call(null, x);
          if(G__16317__16318) {
            var item__16319 = cljs.core.first.call(null, G__16317__16318);
            var G__16317__16320 = G__16317__16318;
            while(true) {
              a__16316.push(clj__GT_js.call(null, item__16319));
              var temp__3974__auto____16321 = cljs.core.next.call(null, G__16317__16320);
              if(temp__3974__auto____16321) {
                var G__16317__16322 = temp__3974__auto____16321;
                var G__16334 = cljs.core.first.call(null, G__16317__16322);
                var G__16335 = G__16317__16322;
                item__16319 = G__16334;
                G__16317__16320 = G__16335;
                continue
              }else {
              }
              break
            }
          }else {
          }
          return a__16316
        }else {
          if(cljs.core.coll_QMARK_.call(null, x)) {
            var a__16323 = [];
            var G__16324__16325 = cljs.core.seq.call(null, x);
            if(G__16324__16325) {
              var item__16326 = cljs.core.first.call(null, G__16324__16325);
              var G__16324__16327 = G__16324__16325;
              while(true) {
                a__16323.push(clj__GT_js.call(null, item__16326));
                var temp__3974__auto____16328 = cljs.core.next.call(null, G__16324__16327);
                if(temp__3974__auto____16328) {
                  var G__16324__16329 = temp__3974__auto____16328;
                  var G__16336 = cljs.core.first.call(null, G__16324__16329);
                  var G__16337 = G__16324__16329;
                  item__16326 = G__16336;
                  G__16324__16327 = G__16337;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return a__16323
          }else {
            if("\ufdd0'else") {
              return x
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
singult.core.node_data = singult.coffee.node_data;
singult.core.attr = function attr($n, m) {
  return singult.coffee.attr.call(null, $n, singult.core.clj__GT_js.call(null, m))
};
singult.core.render = function render(v) {
  return singult.coffee.render.call(null, singult.coffee.canonicalize.call(null, singult.core.clj__GT_js.call(null, v)))
};
singult.core.merge_BANG_ = function merge_BANG_($n, v) {
  if(v == null) {
    return null
  }else {
    return singult.coffee.merge.call(null, $n, singult.coffee.canonicalize.call(null, singult.core.clj__GT_js.call(null, v)))
  }
};
singult.core.unify = function() {
  var unify__delegate = function(data, mapping, p__16338) {
    var map__16347__16348 = p__16338;
    var map__16347__16349 = cljs.core.seq_QMARK_.call(null, map__16347__16348) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16347__16348) : map__16347__16348;
    var force_update_QMARK___16350 = cljs.core._lookup.call(null, map__16347__16349, "\ufdd0'force-update?", null);
    var exit__16351 = cljs.core._lookup.call(null, map__16347__16349, "\ufdd0'exit", null);
    var update__16352 = cljs.core._lookup.call(null, map__16347__16349, "\ufdd0'update", null);
    var enter__16353 = cljs.core._lookup.call(null, map__16347__16349, "\ufdd0'enter", null);
    var key_fn__16354 = cljs.core._lookup.call(null, map__16347__16349, "\ufdd0'key-fn", null);
    return new singult.core.Unify(data, mapping, key_fn__16354, enter__16353, update__16352, exit__16351, force_update_QMARK___16350)
  };
  var unify = function(data, mapping, var_args) {
    var p__16338 = null;
    if(goog.isDef(var_args)) {
      p__16338 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unify__delegate.call(this, data, mapping, p__16338)
  };
  unify.cljs$lang$maxFixedArity = 2;
  unify.cljs$lang$applyTo = function(arglist__16355) {
    var data = cljs.core.first(arglist__16355);
    var mapping = cljs.core.first(cljs.core.next(arglist__16355));
    var p__16338 = cljs.core.rest(cljs.core.next(arglist__16355));
    return unify__delegate(data, mapping, p__16338)
  };
  unify.cljs$lang$arity$variadic = unify__delegate;
  return unify
}();
singult.core.ignore = function ignore() {
  return new singult.coffee.Ignore
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("&")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    var type = el.type.toLowerCase();
    switch(type) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "=" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, opt_value);
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, opt_value);
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, opt_value);
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
goog.provide("c2.dom");
goog.require("cljs.core");
goog.require("goog.style");
goog.require("goog.dom.classes");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("singult.core");
goog.require("clojure.string");
NodeList.prototype.cljs$core$ISeqable$ = true;
NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
HTMLCollection.prototype.cljs$core$ISeqable$ = true;
HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
Node.prototype.cljs$core$IHash$ = true;
Node.prototype.cljs$core$IHash$_hash$arity$1 = function(x) {
  return x
};
c2.dom.IDom = {};
c2.dom.__GT_dom = function __GT_dom(x) {
  if(function() {
    var and__3822__auto____16360 = x;
    if(and__3822__auto____16360) {
      return x.c2$dom$IDom$__GT_dom$arity$1
    }else {
      return and__3822__auto____16360
    }
  }()) {
    return x.c2$dom$IDom$__GT_dom$arity$1(x)
  }else {
    var x__2264__auto____16361 = x == null ? null : x;
    return function() {
      var or__3824__auto____16362 = c2.dom.__GT_dom[goog.typeOf(x__2264__auto____16361)];
      if(or__3824__auto____16362) {
        return or__3824__auto____16362
      }else {
        var or__3824__auto____16363 = c2.dom.__GT_dom["_"];
        if(or__3824__auto____16363) {
          return or__3824__auto____16363
        }else {
          throw cljs.core.missing_protocol.call(null, "IDom.->dom", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.PersistentVector.prototype.c2$dom$IDom$ = true;
cljs.core.PersistentVector.prototype.c2$dom$IDom$__GT_dom$arity$1 = function(v) {
  return singult.core.render.call(null, v)
};
Node.prototype.c2$dom$IDom$ = true;
Node.prototype.c2$dom$IDom$__GT_dom$arity$1 = function(node) {
  return node
};
c2.dom.IDom["string"] = true;
c2.dom.__GT_dom["string"] = function(selector) {
  return c2.dom.select.call(null, selector)
};
c2.dom.select = function() {
  var select = null;
  var select__1 = function(selector) {
    return document.querySelector(selector)
  };
  var select__2 = function(selector, container) {
    return c2.dom.__GT_dom.call(null, container).querySelector(selector)
  };
  select = function(selector, container) {
    switch(arguments.length) {
      case 1:
        return select__1.call(this, selector);
      case 2:
        return select__2.call(this, selector, container)
    }
    throw"Invalid arity: " + arguments.length;
  };
  select.cljs$lang$arity$1 = select__1;
  select.cljs$lang$arity$2 = select__2;
  return select
}();
c2.dom.select_all = function() {
  var select_all = null;
  var select_all__1 = function(selector) {
    return document.querySelectorAll(selector)
  };
  var select_all__2 = function(selector, container) {
    return c2.dom.__GT_dom.call(null, container).querySelectorAll(selector)
  };
  select_all = function(selector, container) {
    switch(arguments.length) {
      case 1:
        return select_all__1.call(this, selector);
      case 2:
        return select_all__2.call(this, selector, container)
    }
    throw"Invalid arity: " + arguments.length;
  };
  select_all.cljs$lang$arity$1 = select_all__1;
  select_all.cljs$lang$arity$2 = select_all__2;
  return select_all
}();
c2.dom.matches_selector_QMARK_ = function matches_selector_QMARK_(node, selector) {
  return node.webkitMatchesSelector(selector)
};
c2.dom.children = function children(node) {
  return c2.dom.__GT_dom.call(null, node).children
};
c2.dom.parent = function parent(node) {
  return c2.dom.__GT_dom.call(null, node).parentNode
};
c2.dom.append_BANG_ = function append_BANG_(container, el) {
  var el__16365 = c2.dom.__GT_dom.call(null, el);
  goog.dom.appendChild(c2.dom.__GT_dom.call(null, container), el__16365);
  return el__16365
};
c2.dom.prepend_BANG_ = function prepend_BANG_(container, el) {
  var el__16367 = c2.dom.__GT_dom.call(null, el);
  goog.dom.insertChildAt(c2.dom.__GT_dom.call(null, container), el__16367, 0);
  return el__16367
};
c2.dom.remove_BANG_ = function remove_BANG_(el) {
  return goog.dom.removeNode(c2.dom.__GT_dom.call(null, el))
};
c2.dom.replace_BANG_ = function replace_BANG_(old, new$) {
  var new__16369 = c2.dom.__GT_dom.call(null, new$);
  goog.dom.replaceNode(new__16369, c2.dom.__GT_dom.call(null, old));
  return new__16369
};
c2.dom.style = function() {
  var style = null;
  var style__1 = function(el) {
    throw new Error("TODO: return map of element styles");
  };
  var style__2 = function(el, x) {
    var el__16402 = c2.dom.__GT_dom.call(null, el);
    try {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        var k__16427 = x;
        return goog.style.getComputedStyle(el__16402, cljs.core.name.call(null, k__16427))
      }else {
        if("\ufdd0'else") {
          throw 0;
        }else {
          return null
        }
      }
    }catch(e__7036__auto__) {
      if(e__7036__auto__ === 0) {
        try {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m__16407 = x;
            var G__16408__16409 = cljs.core.seq.call(null, m__16407);
            if(G__16408__16409) {
              var G__16411__16413 = cljs.core.first.call(null, G__16408__16409);
              var vec__16412__16414 = G__16411__16413;
              var k__16415 = cljs.core.nth.call(null, vec__16412__16414, 0, null);
              var v__16416 = cljs.core.nth.call(null, vec__16412__16414, 1, null);
              var G__16408__16417 = G__16408__16409;
              var G__16411__16418 = G__16411__16413;
              var G__16408__16419 = G__16408__16417;
              while(true) {
                var vec__16420__16421 = G__16411__16418;
                var k__16422 = cljs.core.nth.call(null, vec__16420__16421, 0, null);
                var v__16423 = cljs.core.nth.call(null, vec__16420__16421, 1, null);
                var G__16408__16424 = G__16408__16419;
                style.call(null, el__16402, k__16422, v__16423);
                var temp__3974__auto____16425 = cljs.core.next.call(null, G__16408__16424);
                if(temp__3974__auto____16425) {
                  var G__16408__16426 = temp__3974__auto____16425;
                  var G__16434 = cljs.core.first.call(null, G__16408__16426);
                  var G__16435 = G__16408__16426;
                  G__16411__16418 = G__16434;
                  G__16408__16419 = G__16435;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return el__16402
          }else {
            if("\ufdd0'else") {
              throw 0;
            }else {
              return null
            }
          }
        }catch(e__7036__auto__) {
          if(e__7036__auto__ === 0) {
            var G__16403__16406 = x;
            return null
          }else {
            throw e__7036__auto__;
          }
        }
      }else {
        throw e__7036__auto__;
      }
    }
  };
  var style__3 = function(el, k, v) {
    goog.style.setStyle(c2.dom.__GT_dom.call(null, el), cljs.core.name.call(null, k), function() {
      try {
        if(cljs.core.string_QMARK_.call(null, v)) {
          var s__16433 = v;
          return s__16433
        }else {
          if("\ufdd0'else") {
            throw 0;
          }else {
            return null
          }
        }
      }catch(e__7036__auto__) {
        if(e__7036__auto__ === 0) {
          try {
            if(cljs.core.number_QMARK_.call(null, v)) {
              var n__16432 = v;
              if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray(["\ufdd0'bottom", "\ufdd0'width", "\ufdd0'top", "\ufdd0'right", "\ufdd0'left", "\ufdd0'height"]).call(null, cljs.core.keyword.call(null, k)))) {
                return[cljs.core.str(n__16432), cljs.core.str("px")].join("")
              }else {
                return n__16432
              }
            }else {
              if("\ufdd0'else") {
                throw 0;
              }else {
                return null
              }
            }
          }catch(e__7036__auto__) {
            if(e__7036__auto__ === 0) {
              var G__16428__16431 = v;
              return null
            }else {
              throw e__7036__auto__;
            }
          }
        }else {
          throw e__7036__auto__;
        }
      }
    }());
    return el
  };
  style = function(el, k, v) {
    switch(arguments.length) {
      case 1:
        return style__1.call(this, el);
      case 2:
        return style__2.call(this, el, k);
      case 3:
        return style__3.call(this, el, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  style.cljs$lang$arity$1 = style__1;
  style.cljs$lang$arity$2 = style__2;
  style.cljs$lang$arity$3 = style__3;
  return style
}();
c2.dom.attr = function() {
  var attr = null;
  var attr__1 = function(el) {
    var attrs__16471 = c2.dom.__GT_dom.call(null, el).attributes;
    return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
      var iter__2363__auto____16478 = function iter__16472(s__16473) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__16473__16476 = s__16473;
          while(true) {
            if(cljs.core.seq.call(null, s__16473__16476)) {
              var i__16477 = cljs.core.first.call(null, s__16473__16476);
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, attrs__16471[i__16477].name), attrs__16471[i__16477].value], true), iter__16472.call(null, cljs.core.rest.call(null, s__16473__16476)))
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__2363__auto____16478.call(null, cljs.core.range.call(null, attrs__16471.length))
    }())
  };
  var attr__2 = function(el, x) {
    var el__16479 = c2.dom.__GT_dom.call(null, el);
    try {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        var k__16504 = x;
        return el__16479.getAttribute(cljs.core.name.call(null, k__16504))
      }else {
        if("\ufdd0'else") {
          throw 0;
        }else {
          return null
        }
      }
    }catch(e__7036__auto__) {
      if(e__7036__auto__ === 0) {
        try {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m__16484 = x;
            var G__16485__16486 = cljs.core.seq.call(null, m__16484);
            if(G__16485__16486) {
              var G__16488__16490 = cljs.core.first.call(null, G__16485__16486);
              var vec__16489__16491 = G__16488__16490;
              var k__16492 = cljs.core.nth.call(null, vec__16489__16491, 0, null);
              var v__16493 = cljs.core.nth.call(null, vec__16489__16491, 1, null);
              var G__16485__16494 = G__16485__16486;
              var G__16488__16495 = G__16488__16490;
              var G__16485__16496 = G__16485__16494;
              while(true) {
                var vec__16497__16498 = G__16488__16495;
                var k__16499 = cljs.core.nth.call(null, vec__16497__16498, 0, null);
                var v__16500 = cljs.core.nth.call(null, vec__16497__16498, 1, null);
                var G__16485__16501 = G__16485__16496;
                attr.call(null, el__16479, k__16499, v__16500);
                var temp__3974__auto____16502 = cljs.core.next.call(null, G__16485__16501);
                if(temp__3974__auto____16502) {
                  var G__16485__16503 = temp__3974__auto____16502;
                  var G__16506 = cljs.core.first.call(null, G__16485__16503);
                  var G__16507 = G__16485__16503;
                  G__16488__16495 = G__16506;
                  G__16485__16496 = G__16507;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return el__16479
          }else {
            if("\ufdd0'else") {
              throw 0;
            }else {
              return null
            }
          }
        }catch(e__7036__auto__) {
          if(e__7036__auto__ === 0) {
            var G__16480__16483 = x;
            return null
          }else {
            throw e__7036__auto__;
          }
        }
      }else {
        throw e__7036__auto__;
      }
    }
  };
  var attr__3 = function(el, k, v) {
    var el__16505 = c2.dom.__GT_dom.call(null, el);
    if(v == null) {
      el__16505.removeAttribute(cljs.core.name.call(null, k))
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0'style", k)) {
        c2.dom.style.call(null, el__16505, v)
      }else {
        el__16505.setAttribute(cljs.core.name.call(null, k), v)
      }
    }
    return el__16505
  };
  attr = function(el, k, v) {
    switch(arguments.length) {
      case 1:
        return attr__1.call(this, el);
      case 2:
        return attr__2.call(this, el, k);
      case 3:
        return attr__3.call(this, el, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  attr.cljs$lang$arity$1 = attr__1;
  attr.cljs$lang$arity$2 = attr__2;
  attr.cljs$lang$arity$3 = attr__3;
  return attr
}();
c2.dom.text = function() {
  var text = null;
  var text__1 = function(el) {
    return goog.dom.getTextContent(c2.dom.__GT_dom.call(null, el))
  };
  var text__2 = function(el, v) {
    var el__16509 = c2.dom.__GT_dom.call(null, el);
    goog.dom.setTextContent(el__16509, v);
    return el__16509
  };
  text = function(el, v) {
    switch(arguments.length) {
      case 1:
        return text__1.call(this, el);
      case 2:
        return text__2.call(this, el, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  text.cljs$lang$arity$1 = text__1;
  text.cljs$lang$arity$2 = text__2;
  return text
}();
c2.dom.val = function() {
  var val = null;
  var val__1 = function(el) {
    return goog.dom.forms.getValue(c2.dom.__GT_dom.call(null, el))
  };
  var val__2 = function(el, v) {
    var el__16511 = c2.dom.__GT_dom.call(null, el);
    goog.dom.forms.setValue(el__16511, v);
    return el__16511
  };
  val = function(el, v) {
    switch(arguments.length) {
      case 1:
        return val__1.call(this, el);
      case 2:
        return val__2.call(this, el, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  val.cljs$lang$arity$1 = val__1;
  val.cljs$lang$arity$2 = val__2;
  return val
}();
c2.dom.classed_BANG_ = function classed_BANG_(el, class$, classed_QMARK_) {
  return goog.dom.classes.enable(c2.dom.__GT_dom.call(null, el), cljs.core.name.call(null, class$), classed_QMARK_)
};
c2.dom.add_class_BANG_ = function add_class_BANG_(el, class$) {
  return c2.dom.classed_BANG_.call(null, el, class$, true)
};
c2.dom.remove_class_BANG_ = function remove_class_BANG_(el, class$) {
  return c2.dom.classed_BANG_.call(null, el, class$, false)
};
c2.dom.request_animation_frame = function() {
  var or__3824__auto____16513 = window.requestAnimationFrame;
  if(cljs.core.truth_(or__3824__auto____16513)) {
    return or__3824__auto____16513
  }else {
    var or__3824__auto____16514 = window.webkitRequestAnimationFrame;
    if(cljs.core.truth_(or__3824__auto____16514)) {
      return or__3824__auto____16514
    }else {
      return function(p1__16512_SHARP_) {
        return setTimeout(function() {
          return p1__16512_SHARP_.call(null)
        }, 10)
      }
    }
  }
}();
goog.provide("reflex.core");
goog.require("cljs.core");
reflex.core.capture_derefed = function capture_derefed(f) {
  var _BANG_recently_derefed16586__16587 = reflex.core._BANG_recently_derefed;
  try {
    reflex.core._BANG_recently_derefed = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY, "\ufdd0'meta", cljs.core.ObjMap.fromObject(["\ufdd0'no-deref-monitor"], {"\ufdd0'no-deref-monitor":true}));
    var res__16589 = f.call(null);
    return cljs.core.ObjMap.fromObject(["\ufdd0'res", "\ufdd0'derefed"], {"\ufdd0'res":res__16589, "\ufdd0'derefed":cljs.core.deref.call(null, reflex.core._BANG_recently_derefed)})
  }finally {
    reflex.core._BANG_recently_derefed = _BANG_recently_derefed16586__16587
  }
};
reflex.core.notify_deref_watcher_BANG_ = function notify_deref_watcher_BANG_(derefable) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____16591 = reflex.core._BANG_recently_derefed;
    if(cljs.core.truth_(and__3822__auto____16591)) {
      return cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'no-deref-monitor")).call(null, cljs.core.meta.call(null, derefable)))
    }else {
      return and__3822__auto____16591
    }
  }())) {
    return cljs.core.swap_BANG_.call(null, reflex.core._BANG_recently_derefed, function(p1__16581_SHARP_) {
      return cljs.core.conj.call(null, p1__16581_SHARP_, derefable)
    })
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IDeref$ = true;
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  reflex.core.notify_deref_watcher_BANG_.call(null, this$);
  return this$.state
};
reflex.core.IDisposable = {};
reflex.core.dispose_BANG_ = function dispose_BANG_(this$) {
  if(function() {
    var and__3822__auto____16596 = this$;
    if(and__3822__auto____16596) {
      return this$.reflex$core$IDisposable$dispose_BANG_$arity$1
    }else {
      return and__3822__auto____16596
    }
  }()) {
    return this$.reflex$core$IDisposable$dispose_BANG_$arity$1(this$)
  }else {
    var x__2264__auto____16597 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____16598 = reflex.core.dispose_BANG_[goog.typeOf(x__2264__auto____16597)];
      if(or__3824__auto____16598) {
        return or__3824__auto____16598
      }else {
        var or__3824__auto____16599 = reflex.core.dispose_BANG_["_"];
        if(or__3824__auto____16599) {
          return or__3824__auto____16599
        }else {
          throw cljs.core.missing_protocol.call(null, "IDisposable.dispose!", this$);
        }
      }
    }().call(null, this$)
  }
};
reflex.core.ComputedObservable = function(state, dirty_QMARK_, f, key, parent_watchables, watches, __meta, __extmap) {
  this.state = state;
  this.dirty_QMARK_ = dirty_QMARK_;
  this.f = f;
  this.key = key;
  this.parent_watchables = parent_watchables;
  this.watches = watches;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2766571274;
  if(arguments.length > 6) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__16603 = this;
  var h__2093__auto____16604 = this__16603.__hash;
  if(!(h__2093__auto____16604 == null)) {
    return h__2093__auto____16604
  }else {
    var h__2093__auto____16605 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__16603.__hash = h__2093__auto____16605;
    return h__2093__auto____16605
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__16606 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
reflex.core.ComputedObservable.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k16601, else__2227__auto__) {
  var this__16607 = this;
  if(k16601 === "\ufdd0'state") {
    return this__16607.state
  }else {
    if(k16601 === "\ufdd0'dirty?") {
      return this__16607.dirty_QMARK_
    }else {
      if(k16601 === "\ufdd0'f") {
        return this__16607.f
      }else {
        if(k16601 === "\ufdd0'key") {
          return this__16607.key
        }else {
          if(k16601 === "\ufdd0'parent-watchables") {
            return this__16607.parent_watchables
          }else {
            if(k16601 === "\ufdd0'watches") {
              return this__16607.watches
            }else {
              if("\ufdd0'else") {
                return cljs.core._lookup.call(null, this__16607.__extmap, k16601, else__2227__auto__)
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__16600) {
  var this__16608 = this;
  var pred__16609__16612 = cljs.core.identical_QMARK_;
  var expr__16610__16613 = k__2232__auto__;
  if(pred__16609__16612.call(null, "\ufdd0'state", expr__16610__16613)) {
    return new reflex.core.ComputedObservable(G__16600, this__16608.dirty_QMARK_, this__16608.f, this__16608.key, this__16608.parent_watchables, this__16608.watches, this__16608.__meta, this__16608.__extmap, null)
  }else {
    if(pred__16609__16612.call(null, "\ufdd0'dirty?", expr__16610__16613)) {
      return new reflex.core.ComputedObservable(this__16608.state, G__16600, this__16608.f, this__16608.key, this__16608.parent_watchables, this__16608.watches, this__16608.__meta, this__16608.__extmap, null)
    }else {
      if(pred__16609__16612.call(null, "\ufdd0'f", expr__16610__16613)) {
        return new reflex.core.ComputedObservable(this__16608.state, this__16608.dirty_QMARK_, G__16600, this__16608.key, this__16608.parent_watchables, this__16608.watches, this__16608.__meta, this__16608.__extmap, null)
      }else {
        if(pred__16609__16612.call(null, "\ufdd0'key", expr__16610__16613)) {
          return new reflex.core.ComputedObservable(this__16608.state, this__16608.dirty_QMARK_, this__16608.f, G__16600, this__16608.parent_watchables, this__16608.watches, this__16608.__meta, this__16608.__extmap, null)
        }else {
          if(pred__16609__16612.call(null, "\ufdd0'parent-watchables", expr__16610__16613)) {
            return new reflex.core.ComputedObservable(this__16608.state, this__16608.dirty_QMARK_, this__16608.f, this__16608.key, G__16600, this__16608.watches, this__16608.__meta, this__16608.__extmap, null)
          }else {
            if(pred__16609__16612.call(null, "\ufdd0'watches", expr__16610__16613)) {
              return new reflex.core.ComputedObservable(this__16608.state, this__16608.dirty_QMARK_, this__16608.f, this__16608.key, this__16608.parent_watchables, G__16600, this__16608.__meta, this__16608.__extmap, null)
            }else {
              return new reflex.core.ComputedObservable(this__16608.state, this__16608.dirty_QMARK_, this__16608.f, this__16608.key, this__16608.parent_watchables, this__16608.watches, this__16608.__meta, cljs.core.assoc.call(null, this__16608.__extmap, k__2232__auto__, G__16600), null)
            }
          }
        }
      }
    }
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var this__16614 = this;
  reflex.core.notify_deref_watcher_BANG_.call(null, this$);
  if(cljs.core.not.call(null, this__16614.dirty_QMARK_)) {
    return this$.state
  }else {
    var map__16615__16616 = reflex.core.capture_derefed.call(null, this__16614.f);
    var map__16615__16617 = cljs.core.seq_QMARK_.call(null, map__16615__16616) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16615__16616) : map__16615__16616;
    var derefed__16618 = cljs.core._lookup.call(null, map__16615__16617, "\ufdd0'derefed", null);
    var res__16619 = cljs.core._lookup.call(null, map__16615__16617, "\ufdd0'res", null);
    var G__16620__16621 = cljs.core.seq.call(null, this__16614.parent_watchables);
    if(G__16620__16621) {
      var w__16622 = cljs.core.first.call(null, G__16620__16621);
      var G__16620__16623 = G__16620__16621;
      while(true) {
        cljs.core.remove_watch.call(null, w__16622, this__16614.key);
        var temp__3974__auto____16624 = cljs.core.next.call(null, G__16620__16623);
        if(temp__3974__auto____16624) {
          var G__16620__16625 = temp__3974__auto____16624;
          var G__16673 = cljs.core.first.call(null, G__16620__16625);
          var G__16674 = G__16620__16625;
          w__16622 = G__16673;
          G__16620__16623 = G__16674;
          continue
        }else {
        }
        break
      }
    }else {
    }
    this$.parent_watchables = derefed__16618;
    var G__16626__16627 = cljs.core.seq.call(null, derefed__16618);
    if(G__16626__16627) {
      var w__16628 = cljs.core.first.call(null, G__16626__16627);
      var G__16626__16629 = G__16626__16627;
      while(true) {
        cljs.core.add_watch.call(null, w__16628, this__16614.key, function(w__16628, G__16626__16629) {
          return function() {
            this$.dirty_QMARK_ = true;
            return cljs.core._notify_watches.call(null, this$, null, null)
          }
        }(w__16628, G__16626__16629));
        var temp__3974__auto____16630 = cljs.core.next.call(null, G__16626__16629);
        if(temp__3974__auto____16630) {
          var G__16626__16631 = temp__3974__auto____16630;
          var G__16675 = cljs.core.first.call(null, G__16626__16631);
          var G__16676 = G__16626__16631;
          w__16628 = G__16675;
          G__16626__16629 = G__16676;
          continue
        }else {
        }
        break
      }
    }else {
    }
    this$.state = res__16619;
    this$.dirty_QMARK_ = false;
    return res__16619
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__16632 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, _16634, _) {
  var this__16633 = this;
  var G__16635__16636 = cljs.core.seq.call(null, this__16633.watches);
  if(G__16635__16636) {
    var G__16638__16640 = cljs.core.first.call(null, G__16635__16636);
    var vec__16639__16641 = G__16638__16640;
    var key__16642 = cljs.core.nth.call(null, vec__16639__16641, 0, null);
    var wf__16643 = cljs.core.nth.call(null, vec__16639__16641, 1, null);
    var G__16635__16644 = G__16635__16636;
    var G__16638__16645 = G__16638__16640;
    var G__16635__16646 = G__16635__16644;
    while(true) {
      var vec__16647__16648 = G__16638__16645;
      var key__16649 = cljs.core.nth.call(null, vec__16647__16648, 0, null);
      var wf__16650 = cljs.core.nth.call(null, vec__16647__16648, 1, null);
      var G__16635__16651 = G__16635__16646;
      wf__16650.call(null);
      var temp__3974__auto____16652 = cljs.core.next.call(null, G__16635__16651);
      if(temp__3974__auto____16652) {
        var G__16635__16653 = temp__3974__auto____16652;
        var G__16677 = cljs.core.first.call(null, G__16635__16653);
        var G__16678 = G__16635__16653;
        G__16638__16645 = G__16677;
        G__16635__16646 = G__16678;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, wf) {
  var this__16654 = this;
  return this$.watches = cljs.core.assoc.call(null, this__16654.watches, key, wf)
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__16655 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__16655.watches, key)
};
reflex.core.ComputedObservable.prototype.reflex$core$IDisposable$ = true;
reflex.core.ComputedObservable.prototype.reflex$core$IDisposable$dispose_BANG_$arity$1 = function(this$) {
  var this__16656 = this;
  var G__16657__16658 = cljs.core.seq.call(null, this__16656.parent_watchables);
  if(G__16657__16658) {
    var w__16659 = cljs.core.first.call(null, G__16657__16658);
    var G__16657__16660 = G__16657__16658;
    while(true) {
      cljs.core.remove_watch.call(null, w__16659, this__16656.key);
      var temp__3974__auto____16661 = cljs.core.next.call(null, G__16657__16660);
      if(temp__3974__auto____16661) {
        var G__16657__16662 = temp__3974__auto____16661;
        var G__16679 = cljs.core.first.call(null, G__16657__16662);
        var G__16680 = G__16657__16662;
        w__16659 = G__16679;
        G__16657__16660 = G__16680;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return this$.watches = null
};
reflex.core.ComputedObservable.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__16663 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'state", this__16663.state), cljs.core.vector.call(null, "\ufdd0'dirty?", this__16663.dirty_QMARK_), cljs.core.vector.call(null, "\ufdd0'f", this__16663.f), cljs.core.vector.call(null, "\ufdd0'key", this__16663.key), cljs.core.vector.call(null, "\ufdd0'parent-watchables", this__16663.parent_watchables), cljs.core.vector.call(null, "\ufdd0'watches", this__16663.watches)], 
  true), this__16663.__extmap))
};
reflex.core.ComputedObservable.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__16664 = this;
  var pr_pair__2240__auto____16665 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____16665, [cljs.core.str("#"), cljs.core.str("ComputedObservable"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'state", this__16664.state), cljs.core.vector.call(null, "\ufdd0'dirty?", this__16664.dirty_QMARK_), cljs.core.vector.call(null, "\ufdd0'f", this__16664.f), cljs.core.vector.call(null, "\ufdd0'key", this__16664.key), 
  cljs.core.vector.call(null, "\ufdd0'parent-watchables", this__16664.parent_watchables), cljs.core.vector.call(null, "\ufdd0'watches", this__16664.watches)], true), this__16664.__extmap))
};
reflex.core.ComputedObservable.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__16666 = this;
  return 6 + cljs.core.count.call(null, this__16666.__extmap)
};
reflex.core.ComputedObservable.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__16667 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____16668 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____16668)) {
      var and__3822__auto____16669 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____16669) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____16669
      }
    }else {
      return and__3822__auto____16668
    }
  }())) {
    return true
  }else {
    return false
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__16600) {
  var this__16670 = this;
  return new reflex.core.ComputedObservable(this__16670.state, this__16670.dirty_QMARK_, this__16670.f, this__16670.key, this__16670.parent_watchables, this__16670.watches, G__16600, this__16670.__extmap, this__16670.__hash)
};
reflex.core.ComputedObservable.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__16671 = this;
  return this__16671.__meta
};
reflex.core.ComputedObservable.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__16672 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'dirty?", "\ufdd0'state", "\ufdd0'key", "\ufdd0'f", "\ufdd0'watches", "\ufdd0'parent-watchables"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__16672.__meta), k__2234__auto__)
  }else {
    return new reflex.core.ComputedObservable(this__16672.state, this__16672.dirty_QMARK_, this__16672.f, this__16672.key, this__16672.parent_watchables, this__16672.watches, this__16672.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__16672.__extmap, k__2234__auto__)), null)
  }
};
reflex.core.ComputedObservable.cljs$lang$type = true;
reflex.core.ComputedObservable.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "reflex.core/ComputedObservable")
};
reflex.core.__GT_ComputedObservable = function __GT_ComputedObservable(state, dirty_QMARK_, f, key, parent_watchables, watches) {
  return new reflex.core.ComputedObservable(state, dirty_QMARK_, f, key, parent_watchables, watches)
};
reflex.core.map__GT_ComputedObservable = function map__GT_ComputedObservable(G__16602) {
  return new reflex.core.ComputedObservable((new cljs.core.Keyword("\ufdd0'state")).call(null, G__16602), (new cljs.core.Keyword("\ufdd0'dirty?")).call(null, G__16602), (new cljs.core.Keyword("\ufdd0'f")).call(null, G__16602), (new cljs.core.Keyword("\ufdd0'key")).call(null, G__16602), (new cljs.core.Keyword("\ufdd0'parent-watchables")).call(null, G__16602), (new cljs.core.Keyword("\ufdd0'watches")).call(null, G__16602), null, cljs.core.dissoc.call(null, G__16602, "\ufdd0'state", "\ufdd0'dirty?", 
  "\ufdd0'f", "\ufdd0'key", "\ufdd0'parent-watchables", "\ufdd0'watches"))
};
reflex.core.ComputedObservable;
reflex.core.ComputedObservable.prototype.cljs$core$IHash$ = true;
reflex.core.ComputedObservable.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  return this$.key
};
goog.provide("dubstep.pubsub");
goog.require("cljs.core");
dubstep.pubsub._STAR__BANG_channel_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
goog.provide("c2.util");
goog.require("cljs.core");
goog.require("singult.core");
c2.util.clj__GT_js = singult.core.clj__GT_js;
c2.util.__GT_coll = function __GT_coll(x) {
  if(cljs.core.coll_QMARK_.call(null, x)) {
    return x
  }else {
    return cljs.core.PersistentVector.fromArray([x], true)
  }
};
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if(opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if(document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null)
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if(doc) {
        if(opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""))
        }
        return doc
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if(typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml")
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if(typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml)
  }
  var text = xml.xml;
  if(text) {
    return text
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if(typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectSingleNode(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue
    }
  }
  return null
};
goog.dom.xml.selectNodes = function(node, path) {
  if(typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectNodes(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for(var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i))
      }
      return results
    }else {
      return[]
    }
  }
};
goog.dom.xml.setAttributes = function(element, attributes) {
  for(var key in attributes) {
    if(attributes.hasOwnProperty(key)) {
      element.setAttribute(key, attributes[key])
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if(doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH)
    }catch(e) {
    }
  }
  return doc
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for(var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.dependentDisposables_;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  if(!this.dependentDisposables_) {
    this.dependentDisposables_ = []
  }
  this.dependentDisposables_.push(disposable)
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.dependentDisposables_) {
    goog.disposeAll.apply(null, this.dependentDisposables_)
  }
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if(goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable)
    }else {
      goog.dispose(disposable)
    }
  }
};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true
  }catch(e) {
  }
  return false
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      if(!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.ASSUME_GOOD_GC = false;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = {count_:0, remaining_:0}
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = {count_:0, remaining_:0};
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = [];
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.getProxy();
      proxy.src = src;
      listenerObj = new goog.events.Listener;
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = []
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.key, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.key, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(!listenerArray[i].removed && listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = [];
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0
      }
      evt.dispose()
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.dom");
var div__17089 = document.createElement("div");
var test_html__17090 = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
div__17089.innerHTML = test_html__17090;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div__17089.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div__17089.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div__17089.getElementsByTagName("link").length, 0);
goog.provide("domina");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.dom.classes");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper__16681 = cljs.core.PersistentVector.fromArray([1, "<select multiple='multiple'>", "</select>"], true);
var table_section_wrapper__16682 = cljs.core.PersistentVector.fromArray([1, "<table>", "</table>"], true);
var cell_wrapper__16683 = cljs.core.PersistentVector.fromArray([3, "<table><tbody><tr>", "</tr></tbody></table>"], true);
domina.wrap_map = cljs.core.ObjMap.fromObject(["col", "\ufdd0'default", "tfoot", "caption", "optgroup", "legend", "area", "td", "thead", "th", "option", "tbody", "tr", "colgroup"], {"col":cljs.core.PersistentVector.fromArray([2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], true), "\ufdd0'default":cljs.core.PersistentVector.fromArray([0, "", ""], true), "tfoot":table_section_wrapper__16682, "caption":table_section_wrapper__16682, "optgroup":opt_wrapper__16681, "legend":cljs.core.PersistentVector.fromArray([1, 
"<fieldset>", "</fieldset>"], true), "area":cljs.core.PersistentVector.fromArray([1, "<map>", "</map>"], true), "td":cell_wrapper__16683, "thead":table_section_wrapper__16682, "th":cell_wrapper__16683, "option":opt_wrapper__16681, "tbody":table_section_wrapper__16682, "tr":cljs.core.PersistentVector.fromArray([2, "<table><tbody>", "</tbody></table>"], true), "colgroup":table_section_wrapper__16682});
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html, tag_name, start_wrap) {
  var no_tbody_QMARK___16696 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody__16700 = function() {
    var and__3822__auto____16697 = cljs.core._EQ_.call(null, tag_name, "table");
    if(and__3822__auto____16697) {
      return no_tbody_QMARK___16696
    }else {
      return and__3822__auto____16697
    }
  }() ? function() {
    var and__3822__auto____16698 = div.firstChild;
    if(cljs.core.truth_(and__3822__auto____16698)) {
      return div.firstChild.childNodes
    }else {
      return and__3822__auto____16698
    }
  }() : function() {
    var and__3822__auto____16699 = cljs.core._EQ_.call(null, start_wrap, "<table>");
    if(and__3822__auto____16699) {
      return no_tbody_QMARK___16696
    }else {
      return and__3822__auto____16699
    }
  }() ? divchildNodes : cljs.core.PersistentVector.EMPTY;
  var G__16701__16702 = cljs.core.seq.call(null, tbody__16700);
  if(G__16701__16702) {
    var child__16703 = cljs.core.first.call(null, G__16701__16702);
    var G__16701__16704 = G__16701__16702;
    while(true) {
      if(function() {
        var and__3822__auto____16705 = cljs.core._EQ_.call(null, child__16703.nodeName, "tbody");
        if(and__3822__auto____16705) {
          return cljs.core._EQ_.call(null, child__16703.childNodes.length, 0)
        }else {
          return and__3822__auto____16705
        }
      }()) {
        child__16703.parentNode.removeChild(child__16703)
      }else {
      }
      var temp__3974__auto____16706 = cljs.core.next.call(null, G__16701__16704);
      if(temp__3974__auto____16706) {
        var G__16701__16707 = temp__3974__auto____16706;
        var G__16708 = cljs.core.first.call(null, G__16701__16707);
        var G__16709 = G__16701__16707;
        child__16703 = G__16708;
        G__16701__16704 = G__16709;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild)
};
domina.html_to_dom = function html_to_dom(html) {
  var html__16723 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "<$1></$2>");
  var tag_name__16724 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__16723)))].join("").toLowerCase();
  var vec__16722__16725 = cljs.core._lookup.call(null, domina.wrap_map, tag_name__16724, (new cljs.core.Keyword("\ufdd0'default")).call(null, domina.wrap_map));
  var depth__16726 = cljs.core.nth.call(null, vec__16722__16725, 0, null);
  var start_wrap__16727 = cljs.core.nth.call(null, vec__16722__16725, 1, null);
  var end_wrap__16728 = cljs.core.nth.call(null, vec__16722__16725, 2, null);
  var div__16732 = function() {
    var wrapper__16730 = function() {
      var div__16729 = document.createElement("div");
      div__16729.innerHTML = [cljs.core.str(start_wrap__16727), cljs.core.str(html__16723), cljs.core.str(end_wrap__16728)].join("");
      return div__16729
    }();
    var level__16731 = depth__16726;
    while(true) {
      if(level__16731 > 0) {
        var G__16734 = wrapper__16730.lastChild;
        var G__16735 = level__16731 - 1;
        wrapper__16730 = G__16734;
        level__16731 = G__16735;
        continue
      }else {
        return wrapper__16730
      }
      break
    }
  }();
  if(cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div__16732, html__16723, tag_name__16724, start_wrap__16727)
  }else {
  }
  if(cljs.core.truth_(function() {
    var and__3822__auto____16733 = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if(and__3822__auto____16733) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__16723)
    }else {
      return and__3822__auto____16733
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div__16732, html__16723)
  }else {
  }
  return div__16732.childNodes
};
domina.string_to_dom = function string_to_dom(s) {
  if(cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s)
  }else {
    return document.createTextNode(s)
  }
};
domina.DomContent = {};
domina.nodes = function nodes(content) {
  if(function() {
    var and__3822__auto____16740 = content;
    if(and__3822__auto____16740) {
      return content.domina$DomContent$nodes$arity$1
    }else {
      return and__3822__auto____16740
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content)
  }else {
    var x__2264__auto____16741 = content == null ? null : content;
    return function() {
      var or__3824__auto____16742 = domina.nodes[goog.typeOf(x__2264__auto____16741)];
      if(or__3824__auto____16742) {
        return or__3824__auto____16742
      }else {
        var or__3824__auto____16743 = domina.nodes["_"];
        if(or__3824__auto____16743) {
          return or__3824__auto____16743
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content)
  }
};
domina.single_node = function single_node(nodeseq) {
  if(function() {
    var and__3822__auto____16748 = nodeseq;
    if(and__3822__auto____16748) {
      return nodeseq.domina$DomContent$single_node$arity$1
    }else {
      return and__3822__auto____16748
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq)
  }else {
    var x__2264__auto____16749 = nodeseq == null ? null : nodeseq;
    return function() {
      var or__3824__auto____16750 = domina.single_node[goog.typeOf(x__2264__auto____16749)];
      if(or__3824__auto____16750) {
        return or__3824__auto____16750
      }else {
        var or__3824__auto____16751 = domina.single_node["_"];
        if(or__3824__auto____16751) {
          return or__3824__auto____16751
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq)
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____16753 = domina._STAR_debug_STAR_;
      if(cljs.core.truth_(and__3822__auto____16753)) {
        return!cljs.core._EQ_.call(null, window.console, undefined)
      }else {
        return and__3822__auto____16753
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log_debug__delegate.call(this, mesg)
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__16754) {
    var mesg = cljs.core.seq(arglist__16754);
    return log_debug__delegate(mesg)
  };
  log_debug.cljs$lang$arity$variadic = log_debug__delegate;
  return log_debug
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if(cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, mesg)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__16755) {
    var mesg = cljs.core.seq(arglist__16755);
    return log__delegate(mesg)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id))
};
domina.by_class = function by_class(class_name) {
  if(void 0 === domina.t16763) {
    domina.t16763 = function(class_name, by_class, meta16764) {
      this.class_name = class_name;
      this.by_class = by_class;
      this.meta16764 = meta16764;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    domina.t16763.cljs$lang$type = true;
    domina.t16763.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
      return cljs.core.list.call(null, "domina/t16763")
    };
    domina.t16763.prototype.domina$DomContent$ = true;
    domina.t16763.prototype.domina$DomContent$nodes$arity$1 = function(_) {
      var this__16766 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, this__16766.class_name)))
    };
    domina.t16763.prototype.domina$DomContent$single_node$arity$1 = function(_) {
      var this__16767 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementByClass(cljs.core.name.call(null, this__16767.class_name)))
    };
    domina.t16763.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16765) {
      var this__16768 = this;
      return this__16768.meta16764
    };
    domina.t16763.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16765, meta16764) {
      var this__16769 = this;
      return new domina.t16763(this__16769.class_name, this__16769.by_class, meta16764)
    };
    domina.t16763
  }else {
  }
  return new domina.t16763(class_name, by_class, null)
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)))
};
domina.common_ancestor = function() {
  var common_ancestor__delegate = function(contents) {
    return cljs.core.apply.call(null, goog.dom.findCommonAncestor, cljs.core.map.call(null, domina.single_node, contents))
  };
  var common_ancestor = function(var_args) {
    var contents = null;
    if(goog.isDef(var_args)) {
      contents = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return common_ancestor__delegate.call(this, contents)
  };
  common_ancestor.cljs$lang$maxFixedArity = 0;
  common_ancestor.cljs$lang$applyTo = function(arglist__16770) {
    var contents = cljs.core.seq(arglist__16770);
    return common_ancestor__delegate(contents)
  };
  common_ancestor.cljs$lang$arity$variadic = common_ancestor__delegate;
  return common_ancestor
}();
domina.ancestor_QMARK_ = function ancestor_QMARK_(ancestor_content, descendant_content) {
  return cljs.core._EQ_.call(null, domina.common_ancestor.call(null, ancestor_content, descendant_content), domina.single_node.call(null, ancestor_content))
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__16771_SHARP_) {
    return p1__16771_SHARP_.cloneNode(true)
  }, domina.nodes.call(null, content))
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__16772_SHARP_, p2__16773_SHARP_) {
    return goog.dom.insertChildAt(p1__16772_SHARP_, p2__16773_SHARP_, idx)
  }, parent_content, child_content);
  return parent_content
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__16775_SHARP_, p2__16774_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__16774_SHARP_, p1__16775_SHARP_)
  }, content, new_content);
  return content
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__16777_SHARP_, p2__16776_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__16776_SHARP_, p1__16777_SHARP_)
  }, content, new_content);
  return content
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__16779_SHARP_, p2__16778_SHARP_) {
    return goog.dom.replaceNode(p2__16778_SHARP_, p1__16779_SHARP_)
  }, old_content, new_content);
  return old_content
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content
};
domina.style = function style(content, name) {
  var s__16781 = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if(cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s__16781))) {
    return null
  }else {
    return s__16781
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name))
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var G__16788__16789 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__16788__16789) {
      var n__16790 = cljs.core.first.call(null, G__16788__16789);
      var G__16788__16791 = G__16788__16789;
      while(true) {
        goog.style.setStyle(n__16790, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____16792 = cljs.core.next.call(null, G__16788__16791);
        if(temp__3974__auto____16792) {
          var G__16788__16793 = temp__3974__auto____16792;
          var G__16794 = cljs.core.first.call(null, G__16788__16793);
          var G__16795 = G__16788__16793;
          n__16790 = G__16794;
          G__16788__16791 = G__16795;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_style_BANG___delegate.call(this, content, name, value)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__16796) {
    var content = cljs.core.first(arglist__16796);
    var name = cljs.core.first(cljs.core.next(arglist__16796));
    var value = cljs.core.rest(cljs.core.next(arglist__16796));
    return set_style_BANG___delegate(content, name, value)
  };
  set_style_BANG_.cljs$lang$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var G__16803__16804 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__16803__16804) {
      var n__16805 = cljs.core.first.call(null, G__16803__16804);
      var G__16803__16806 = G__16803__16804;
      while(true) {
        n__16805.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____16807 = cljs.core.next.call(null, G__16803__16806);
        if(temp__3974__auto____16807) {
          var G__16803__16808 = temp__3974__auto____16807;
          var G__16809 = cljs.core.first.call(null, G__16803__16808);
          var G__16810 = G__16803__16808;
          n__16805 = G__16809;
          G__16803__16806 = G__16810;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_attr_BANG___delegate.call(this, content, name, value)
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__16811) {
    var content = cljs.core.first(arglist__16811);
    var name = cljs.core.first(cljs.core.next(arglist__16811));
    var value = cljs.core.rest(cljs.core.next(arglist__16811));
    return set_attr_BANG___delegate(content, name, value)
  };
  set_attr_BANG_.cljs$lang$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var G__16818__16819 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__16818__16819) {
    var n__16820 = cljs.core.first.call(null, G__16818__16819);
    var G__16818__16821 = G__16818__16819;
    while(true) {
      n__16820.removeAttribute(cljs.core.name.call(null, name));
      var temp__3974__auto____16822 = cljs.core.next.call(null, G__16818__16821);
      if(temp__3974__auto____16822) {
        var G__16818__16823 = temp__3974__auto____16822;
        var G__16824 = cljs.core.first.call(null, G__16818__16823);
        var G__16825 = G__16818__16823;
        n__16820 = G__16824;
        G__16818__16821 = G__16825;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__16831__16832 = pair.split(/\s*:\s*/);
    var k__16833 = cljs.core.nth.call(null, vec__16831__16832, 0, null);
    var v__16834 = cljs.core.nth.call(null, vec__16831__16832, 1, null);
    if(cljs.core.truth_(function() {
      var and__3822__auto____16835 = k__16833;
      if(cljs.core.truth_(and__3822__auto____16835)) {
        return v__16834
      }else {
        return and__3822__auto____16835
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k__16833.toLowerCase()), v__16834)
    }else {
      return acc
    }
  }, cljs.core.ObjMap.EMPTY, style.split(/\s*;\s*/))
};
domina.styles = function styles(content) {
  var style__16838 = domina.attr.call(null, content, "style");
  if(cljs.core.string_QMARK_.call(null, style__16838)) {
    return domina.parse_style_attributes.call(null, style__16838)
  }else {
    if(cljs.core.truth_(style__16838.cssText)) {
      return domina.parse_style_attributes.call(null, style__16838.cssText)
    }else {
      return null
    }
  }
};
domina.attrs = function attrs(content) {
  var node__16844 = domina.single_node.call(null, content);
  var attrs__16845 = node__16844.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(p1__16836_SHARP_) {
    var attr__16846 = attrs__16845.item(p1__16836_SHARP_);
    var value__16847 = attr__16846.nodeValue;
    if(function() {
      var and__3822__auto____16848 = cljs.core.not_EQ_.call(null, null, value__16847);
      if(and__3822__auto____16848) {
        return cljs.core.not_EQ_.call(null, "", value__16847)
      }else {
        return and__3822__auto____16848
      }
    }()) {
      return cljs.core.PersistentArrayMap.fromArrays([cljs.core.keyword.call(null, attr__16846.nodeName.toLowerCase())], [attr__16846.nodeValue])
    }else {
      return null
    }
  }, cljs.core.range.call(null, attrs__16845.length))))
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var G__16868__16869 = cljs.core.seq.call(null, styles);
  if(G__16868__16869) {
    var G__16871__16873 = cljs.core.first.call(null, G__16868__16869);
    var vec__16872__16874 = G__16871__16873;
    var name__16875 = cljs.core.nth.call(null, vec__16872__16874, 0, null);
    var value__16876 = cljs.core.nth.call(null, vec__16872__16874, 1, null);
    var G__16868__16877 = G__16868__16869;
    var G__16871__16878 = G__16871__16873;
    var G__16868__16879 = G__16868__16877;
    while(true) {
      var vec__16880__16881 = G__16871__16878;
      var name__16882 = cljs.core.nth.call(null, vec__16880__16881, 0, null);
      var value__16883 = cljs.core.nth.call(null, vec__16880__16881, 1, null);
      var G__16868__16884 = G__16868__16879;
      domina.set_style_BANG_.call(null, content, name__16882, value__16883);
      var temp__3974__auto____16885 = cljs.core.next.call(null, G__16868__16884);
      if(temp__3974__auto____16885) {
        var G__16868__16886 = temp__3974__auto____16885;
        var G__16887 = cljs.core.first.call(null, G__16868__16886);
        var G__16888 = G__16868__16886;
        G__16871__16878 = G__16887;
        G__16868__16879 = G__16888;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var G__16908__16909 = cljs.core.seq.call(null, attrs);
  if(G__16908__16909) {
    var G__16911__16913 = cljs.core.first.call(null, G__16908__16909);
    var vec__16912__16914 = G__16911__16913;
    var name__16915 = cljs.core.nth.call(null, vec__16912__16914, 0, null);
    var value__16916 = cljs.core.nth.call(null, vec__16912__16914, 1, null);
    var G__16908__16917 = G__16908__16909;
    var G__16911__16918 = G__16911__16913;
    var G__16908__16919 = G__16908__16917;
    while(true) {
      var vec__16920__16921 = G__16911__16918;
      var name__16922 = cljs.core.nth.call(null, vec__16920__16921, 0, null);
      var value__16923 = cljs.core.nth.call(null, vec__16920__16921, 1, null);
      var G__16908__16924 = G__16908__16919;
      domina.set_attr_BANG_.call(null, content, name__16922, value__16923);
      var temp__3974__auto____16925 = cljs.core.next.call(null, G__16908__16924);
      if(temp__3974__auto____16925) {
        var G__16908__16926 = temp__3974__auto____16925;
        var G__16927 = cljs.core.first.call(null, G__16908__16926);
        var G__16928 = G__16908__16926;
        G__16911__16918 = G__16927;
        G__16908__16919 = G__16928;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$)
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var G__16935__16936 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__16935__16936) {
    var node__16937 = cljs.core.first.call(null, G__16935__16936);
    var G__16935__16938 = G__16935__16936;
    while(true) {
      goog.dom.classes.add(node__16937, class$);
      var temp__3974__auto____16939 = cljs.core.next.call(null, G__16935__16938);
      if(temp__3974__auto____16939) {
        var G__16935__16940 = temp__3974__auto____16939;
        var G__16941 = cljs.core.first.call(null, G__16935__16940);
        var G__16942 = G__16935__16940;
        node__16937 = G__16941;
        G__16935__16938 = G__16942;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var G__16949__16950 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__16949__16950) {
    var node__16951 = cljs.core.first.call(null, G__16949__16950);
    var G__16949__16952 = G__16949__16950;
    while(true) {
      goog.dom.classes.remove(node__16951, class$);
      var temp__3974__auto____16953 = cljs.core.next.call(null, G__16949__16952);
      if(temp__3974__auto____16953) {
        var G__16949__16954 = temp__3974__auto____16953;
        var G__16955 = cljs.core.first.call(null, G__16949__16954);
        var G__16956 = G__16949__16954;
        node__16951 = G__16955;
        G__16949__16952 = G__16956;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)))
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes__16964 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var G__16965__16966 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__16965__16966) {
    var node__16967 = cljs.core.first.call(null, G__16965__16966);
    var G__16965__16968 = G__16965__16966;
    while(true) {
      goog.dom.classes.set(node__16967, classes__16964);
      var temp__3974__auto____16969 = cljs.core.next.call(null, G__16965__16968);
      if(temp__3974__auto____16969) {
        var G__16965__16970 = temp__3974__auto____16969;
        var G__16971 = cljs.core.first.call(null, G__16965__16970);
        var G__16972 = G__16965__16970;
        node__16967 = G__16971;
        G__16965__16968 = G__16972;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)))
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var G__16979__16980 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__16979__16980) {
    var node__16981 = cljs.core.first.call(null, G__16979__16980);
    var G__16979__16982 = G__16979__16980;
    while(true) {
      goog.dom.setTextContent(node__16981, value);
      var temp__3974__auto____16983 = cljs.core.next.call(null, G__16979__16982);
      if(temp__3974__auto____16983) {
        var G__16979__16984 = temp__3974__auto____16983;
        var G__16985 = cljs.core.first.call(null, G__16979__16984);
        var G__16986 = G__16979__16984;
        node__16981 = G__16985;
        G__16979__16982 = G__16986;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content))
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var G__16993__16994 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__16993__16994) {
    var node__16995 = cljs.core.first.call(null, G__16993__16994);
    var G__16993__16996 = G__16993__16994;
    while(true) {
      goog.dom.forms.setValue(node__16995, value);
      var temp__3974__auto____16997 = cljs.core.next.call(null, G__16993__16996);
      if(temp__3974__auto____16997) {
        var G__16993__16998 = temp__3974__auto____16997;
        var G__16999 = cljs.core.first.call(null, G__16993__16998);
        var G__17000 = G__16993__16998;
        node__16995 = G__16999;
        G__16993__16996 = G__17000;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content)
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK___17017 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK___17018 = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name__17019 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK___17020 = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name__17019);
  if(cljs.core.truth_(function() {
    var and__3822__auto____17021 = allows_inner_html_QMARK___17017;
    if(and__3822__auto____17021) {
      var and__3822__auto____17023 = function() {
        var or__3824__auto____17022 = domina.support.leading_whitespace_QMARK_;
        if(cljs.core.truth_(or__3824__auto____17022)) {
          return or__3824__auto____17022
        }else {
          return cljs.core.not.call(null, leading_whitespace_QMARK___17018)
        }
      }();
      if(cljs.core.truth_(and__3822__auto____17023)) {
        return!special_tag_QMARK___17020
      }else {
        return and__3822__auto____17023
      }
    }else {
      return and__3822__auto____17021
    }
  }())) {
    var value__17024 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "<$1></$2>");
    try {
      var G__17027__17028 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      if(G__17027__17028) {
        var node__17029 = cljs.core.first.call(null, G__17027__17028);
        var G__17027__17030 = G__17027__17028;
        while(true) {
          goog.events.removeAll(node__17029);
          node__17029.innerHTML = value__17024;
          var temp__3974__auto____17031 = cljs.core.next.call(null, G__17027__17030);
          if(temp__3974__auto____17031) {
            var G__17027__17032 = temp__3974__auto____17031;
            var G__17033 = cljs.core.first.call(null, G__17027__17032);
            var G__17034 = G__17027__17032;
            node__17029 = G__17033;
            G__17027__17030 = G__17034;
            continue
          }else {
          }
          break
        }
      }else {
      }
    }catch(e17025) {
      if(cljs.core.instance_QMARK_.call(null, Error, e17025)) {
        var e__17026 = e17025;
        domina.replace_children_BANG_.call(null, content, value__17024)
      }else {
        if("\ufdd0'else") {
          throw e17025;
        }else {
        }
      }
    }
  }else {
    domina.replace_children_BANG_.call(null, content, html_string)
  }
  return content
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if(cljs.core.string_QMARK_.call(null, inner_content)) {
    return domina.set_inner_html_BANG_.call(null, content, inner_content)
  }else {
    return domina.replace_children_BANG_.call(null, content, inner_content)
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false)
  };
  var get_data__3 = function(node, key, bubble) {
    var m__17040 = domina.single_node.call(null, node).__domina_data;
    var value__17041 = cljs.core.truth_(m__17040) ? cljs.core._lookup.call(null, m__17040, key, null) : null;
    if(cljs.core.truth_(function() {
      var and__3822__auto____17042 = bubble;
      if(cljs.core.truth_(and__3822__auto____17042)) {
        return value__17041 == null
      }else {
        return and__3822__auto____17042
      }
    }())) {
      var temp__3974__auto____17043 = domina.single_node.call(null, node).parentNode;
      if(cljs.core.truth_(temp__3974__auto____17043)) {
        var parent__17044 = temp__3974__auto____17043;
        return get_data.call(null, parent__17044, key, true)
      }else {
        return null
      }
    }else {
      return value__17041
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_data.cljs$lang$arity$2 = get_data__2;
  get_data.cljs$lang$arity$3 = get_data__3;
  return get_data
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m__17050 = function() {
    var or__3824__auto____17049 = domina.single_node.call(null, node).__domina_data;
    if(cljs.core.truth_(or__3824__auto____17049)) {
      return or__3824__auto____17049
    }else {
      return cljs.core.ObjMap.EMPTY
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m__17050, key, value)
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents__17062 = domina.nodes.call(null, parent_content);
  var children__17063 = domina.nodes.call(null, child_content);
  var first_child__17071 = function() {
    var frag__17064 = document.createDocumentFragment();
    var G__17065__17066 = cljs.core.seq.call(null, children__17063);
    if(G__17065__17066) {
      var child__17067 = cljs.core.first.call(null, G__17065__17066);
      var G__17065__17068 = G__17065__17066;
      while(true) {
        frag__17064.appendChild(child__17067);
        var temp__3974__auto____17069 = cljs.core.next.call(null, G__17065__17068);
        if(temp__3974__auto____17069) {
          var G__17065__17070 = temp__3974__auto____17069;
          var G__17073 = cljs.core.first.call(null, G__17065__17070);
          var G__17074 = G__17065__17070;
          child__17067 = G__17073;
          G__17065__17068 = G__17074;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return frag__17064
  }();
  var other_children__17072 = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents__17062) - 1, function() {
    return first_child__17071.cloneNode(true)
  }));
  if(cljs.core.seq.call(null, parents__17062)) {
    f.call(null, cljs.core.first.call(null, parents__17062), first_child__17071);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__17045_SHARP_, p2__17046_SHARP_) {
      return f.call(null, p1__17045_SHARP_, p2__17046_SHARP_)
    }, cljs.core.rest.call(null, parents__17062), other_children__17072))
  }else {
    return null
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0)
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_item.cljs$lang$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$lang$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0)
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_array_ref.cljs$lang$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$lang$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if(cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl)
  }else {
    return domina.lazy_nl_via_array_ref.call(null, nl)
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3822__auto____17076 = obj;
  if(cljs.core.truth_(and__3822__auto____17076)) {
    return obj.length
  }else {
    return and__3822__auto____17076
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if(list_thing == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__17080__17081 = list_thing;
      if(G__17080__17081) {
        if(function() {
          var or__3824__auto____17082 = G__17080__17081.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____17082) {
            return or__3824__auto____17082
          }else {
            return G__17080__17081.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__17080__17081.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__17080__17081)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__17080__17081)
      }
    }()) {
      return cljs.core.seq.call(null, list_thing)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([list_thing], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if(content == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__17083__17084 = content;
      if(G__17083__17084) {
        if(function() {
          var or__3824__auto____17085 = G__17083__17084.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____17085) {
            return or__3824__auto____17085
          }else {
            return G__17083__17084.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__17083__17084.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__17083__17084)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__17083__17084)
      }
    }()) {
      return cljs.core.seq.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([content], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if(content == null) {
    return null
  }else {
    if(function() {
      var G__17086__17087 = content;
      if(G__17086__17087) {
        if(function() {
          var or__3824__auto____17088 = G__17086__17087.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____17088) {
            return or__3824__auto____17088
          }else {
            return G__17086__17087.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__17086__17087.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__17086__17087)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__17086__17087)
      }
    }()) {
      return cljs.core.first.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0)
      }else {
        if("\ufdd0'default") {
          return content
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)))
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s))
};
if(cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    return domina.lazy_nodelist.call(null, coll)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    return coll.item(n)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    if(coll.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, coll, n)
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    return coll.length
  }
}else {
}
;goog.provide("vcfvis.core");
goog.require("cljs.core");
goog.require("c2.util");
goog.require("dubstep.pubsub");
goog.require("reflex.core");
goog.require("clojure.set");
goog.require("domina");
goog.require("c2.util");
vcfvis.core._BANG_context = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
vcfvis.core._BANG_vcfs = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
vcfvis.core.check_new_vcfs_BANG_ = function check_new_vcfs_BANG_(new_vcfs) {
  if(cljs.core.seq.call(null, new_vcfs)) {
    cljs.core.reset_BANG_.call(null, vcfvis.core._BANG_vcfs, cljs.core.vec.call(null, cljs.core.filter.call(null, function(p1__11039_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, new_vcfs, (new cljs.core.Keyword("\ufdd0'file-url")).call(null, p1__11039_SHARP_))
    }, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs))));
    return clojure.set.difference.call(null, new_vcfs, cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.map.call(null, "\ufdd0'file-url", cljs.core.deref.call(null, vcfvis.core._BANG_vcfs))))
  }else {
    return cljs.core.reset_BANG_.call(null, vcfvis.core._BANG_vcfs, cljs.core.PersistentVector.EMPTY)
  }
};
vcfvis.core._BANG_available_files = function() {
  var co__6213__auto____11040 = new reflex.core.ComputedObservable(null, true, function() {
    return cljs.core._lookup.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_context), "\ufdd0'files", cljs.core.PersistentVector.EMPTY)
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6213__auto____11040);
  return co__6213__auto____11040
}();
vcfvis.core.intersection = function() {
  var intersection = null;
  var intersection__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var intersection__1 = function() {
    var G__11041__delegate = function(args) {
      return cljs.core.apply.call(null, clojure.set.intersection, args)
    };
    var G__11041 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__11041__delegate.call(this, args)
    };
    G__11041.cljs$lang$maxFixedArity = 0;
    G__11041.cljs$lang$applyTo = function(arglist__11042) {
      var args = cljs.core.seq(arglist__11042);
      return G__11041__delegate(args)
    };
    G__11041.cljs$lang$arity$variadic = G__11041__delegate;
    return G__11041
  }();
  intersection = function(var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 0:
        return intersection__0.call(this);
      default:
        return intersection__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  intersection.cljs$lang$maxFixedArity = 0;
  intersection.cljs$lang$applyTo = intersection__1.cljs$lang$applyTo;
  intersection.cljs$lang$arity$0 = intersection__0;
  intersection.cljs$lang$arity$variadic = intersection__1.cljs$lang$arity$variadic;
  return intersection
}();
vcfvis.core._BANG_shared_metrics = function() {
  var co__6213__auto____11043 = new reflex.core.ComputedObservable(null, true, function() {
    return cljs.core.reduce.call(null, vcfvis.core.intersection, cljs.core.map.call(null, "\ufdd0'available-metrics", cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)))
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6213__auto____11043);
  return co__6213__auto____11043
}();
vcfvis.core._BANG_metric = cljs.core.atom.call(null, null);
vcfvis.core.select_metric_BANG_ = function select_metric_BANG_(metric) {
  return cljs.core.reset_BANG_.call(null, vcfvis.core._BANG_metric, metric)
};
var co__6219__auto____11046 = function() {
  var co__6213__auto____11045 = new reflex.core.ComputedObservable(null, true, function() {
    var shared__11044 = cljs.core.deref.call(null, vcfvis.core._BANG_shared_metrics);
    if(cljs.core.seq.call(null, shared__11044)) {
      if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([cljs.core.deref.call(null, vcfvis.core._BANG_metric)]), shared__11044))) {
        return null
      }else {
        return vcfvis.core.select_metric_BANG_.call(null, cljs.core.first.call(null, shared__11044))
      }
    }else {
      return null
    }
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6213__auto____11045);
  return co__6213__auto____11045
}();
cljs.core.add_watch.call(null, co__6219__auto____11046, "\ufdd0'reflex-constraint", function() {
  var shared__11047 = cljs.core.deref.call(null, vcfvis.core._BANG_shared_metrics);
  if(cljs.core.seq.call(null, shared__11047)) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([cljs.core.deref.call(null, vcfvis.core._BANG_metric)]), shared__11047))) {
      return null
    }else {
      return vcfvis.core.select_metric_BANG_.call(null, cljs.core.first.call(null, shared__11047))
    }
  }else {
    return null
  }
});
co__6219__auto____11046;
vcfvis.core._BANG_filters = function() {
  var co__6213__auto____11050 = new reflex.core.ComputedObservable(null, true, function() {
    return cljs.core.reduce.call(null, function(filters, m) {
      var temp__3971__auto____11048 = cljs.core.deref.call(null, m.call(null, "\ufdd0'!filter-extent"));
      if(cljs.core.truth_(temp__3971__auto____11048)) {
        var extent__11049 = temp__3971__auto____11048;
        return cljs.core.assoc.call(null, filters, m.call(null, "\ufdd0'id"), extent__11049)
      }else {
        return filters
      }
    }, cljs.core.ObjMap.EMPTY, cljs.core.deref.call(null, vcfvis.core._BANG_shared_metrics))
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6213__auto____11050);
  return co__6213__auto____11050
}();
vcfvis.core._BANG_visible_metrics = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY, "\ufdd0'validator", function(ms) {
  if(cljs.core.contains_QMARK_.call(null, ms, cljs.core.deref.call(null, vcfvis.core._BANG_metric))) {
    throw new Error("Selected metric doesn't need a mini-histogram.");
  }else {
    return true
  }
});
var co__6219__auto____11053 = function() {
  var co__6213__auto____11052 = new reflex.core.ComputedObservable(null, true, function() {
    var m__11051 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
    if(cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_visible_metrics), m__11051)) {
      return cljs.core.swap_BANG_.call(null, vcfvis.core._BANG_visible_metrics, cljs.core.disj, m__11051)
    }else {
      return null
    }
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6213__auto____11052);
  return co__6213__auto____11052
}();
cljs.core.add_watch.call(null, co__6219__auto____11053, "\ufdd0'reflex-constraint", function() {
  var m__11054 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
  if(cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_visible_metrics), m__11054)) {
    return cljs.core.swap_BANG_.call(null, vcfvis.core._BANG_visible_metrics, cljs.core.disj, m__11054)
  }else {
    return null
  }
});
co__6219__auto____11053;
vcfvis.core.visible_metric_QMARK_ = function visible_metric_QMARK_(m) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_visible_metrics), m)
};
vcfvis.core.toggle_visible_metric_BANG_ = function toggle_visible_metric_BANG_(m) {
  return cljs.core.swap_BANG_.call(null, vcfvis.core._BANG_visible_metrics, cljs.core.truth_(vcfvis.core.visible_metric_QMARK_.call(null, m)) ? cljs.core.disj : cljs.core.conj, m)
};
vcfvis.core.update_metric_BANG_ = function update_metric_BANG_(m, extent) {
  var vec__11072__11073 = m.call(null, "\ufdd0'range");
  var min__11074 = cljs.core.nth.call(null, vec__11072__11073, 0, null);
  var max__11075 = cljs.core.nth.call(null, vec__11072__11073, 1, null);
  var extent__11076 = cljs.core.apply.call(null, cljs.core._, extent) === 0 ? null : cljs.core._EQ_.call(null, extent, cljs.core.PersistentVector.fromArray([min__11074, max__11075], true)) ? cljs.core.PersistentVector.fromArray([-Infinity, Infinity], true) : cljs.core._EQ_.call(null, cljs.core.first.call(null, extent), min__11074) ? cljs.core.PersistentVector.fromArray([-Infinity, cljs.core.second.call(null, extent)], true) : cljs.core._EQ_.call(null, cljs.core.second.call(null, extent), max__11075) ? 
  cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, extent), Infinity], true) : "\ufdd0'else" ? extent : null;
  var G__11077__11078 = cljs.core.seq.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs));
  if(G__11077__11078) {
    var vcf__11079 = cljs.core.first.call(null, G__11077__11078);
    var G__11077__11080 = G__11077__11078;
    while(true) {
      cljs.core.get_in.call(null, vcf__11079, cljs.core.PersistentVector.fromArray(["\ufdd0'cf", m.call(null, "\ufdd0'id"), "\ufdd0'dimension"], true)).filter(c2.util.clj__GT_js.call(null, extent__11076));
      var temp__3974__auto____11081 = cljs.core.next.call(null, G__11077__11080);
      if(temp__3974__auto____11081) {
        var G__11077__11082 = temp__3974__auto____11081;
        var G__11089 = cljs.core.first.call(null, G__11077__11082);
        var G__11090 = G__11077__11082;
        vcf__11079 = G__11089;
        G__11077__11080 = G__11090;
        continue
      }else {
      }
      break
    }
  }else {
  }
  cljs.core.reset_BANG_.call(null, m.call(null, "\ufdd0'!filter-extent"), extent__11076);
  var G__11083__11084 = cljs.core.seq.call(null, cljs.core.deref.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_));
  if(G__11083__11084) {
    var s__9347__auto____11085 = cljs.core.first.call(null, G__11083__11084);
    var G__11083__11086 = G__11083__11084;
    while(true) {
      s__9347__auto____11085.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'filter-updated"], {"\ufdd0'filter-updated":m}));
      var temp__3974__auto____11087 = cljs.core.next.call(null, G__11083__11086);
      if(temp__3974__auto____11087) {
        var G__11083__11088 = temp__3974__auto____11087;
        var G__11091 = cljs.core.first.call(null, G__11083__11088);
        var G__11092 = G__11083__11088;
        s__9347__auto____11085 = G__11091;
        G__11083__11086 = G__11092;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.swap_BANG_.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_, cljs.core.conj, function(m__9353__auto__) {
  try {
    if(function() {
      var G__11098__11099 = m__9353__auto__;
      if(G__11098__11099) {
        if(function() {
          var or__3824__auto____11100 = G__11098__11099.cljs$lang$protocol_mask$partition0$ & 256;
          if(or__3824__auto____11100) {
            return or__3824__auto____11100
          }else {
            return G__11098__11099.cljs$core$ILookup$
          }
        }()) {
          return true
        }else {
          if(!G__11098__11099.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__11098__11099)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__11098__11099)
      }
    }()) {
      var extent__11102 = function() {
        var val__6603__auto____11101 = cljs.core._lookup.call(null, m__9353__auto__, "\ufdd0'extent", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6603__auto____11101, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6603__auto____11101
        }
      }();
      var metric__11104 = function() {
        var val__6603__auto____11103 = cljs.core._lookup.call(null, m__9353__auto__, "\ufdd0'metric-brushed", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6603__auto____11103, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6603__auto____11103
        }
      }();
      return vcfvis.core.update_metric_BANG_.call(null, metric__11104, extent__11102)
    }else {
      if("\ufdd0'else") {
        throw 0;
      }else {
        return null
      }
    }
  }catch(e__7036__auto__) {
    if(e__7036__auto__ === 0) {
      var G__11093__11097 = m__9353__auto__;
      return null
    }else {
      throw e__7036__auto__;
    }
  }
});
goog.provide("vcfvis.ui");
goog.require("cljs.core");
goog.require("crate.core");
goog.require("c2.dom");
goog.require("vcfvis.core");
vcfvis.ui.logged_in_html = function logged_in_html(user) {
  return crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'div", cljs.core.ObjMap.fromObject(["\ufdd0'class", "\ufdd0'id"], {"\ufdd0'class":"btn-group", "\ufdd0'id":"user-dropdown"}), cljs.core.PersistentVector.fromArray(["\ufdd0'button", cljs.core.ObjMap.fromObject(["\ufdd0'class", "\ufdd0'data-toggle"], {"\ufdd0'class":"btn btn-info dropdown-toggle", "\ufdd0'data-toggle":"dropdown"}), cljs.core.PersistentVector.fromArray(["\ufdd0'i", cljs.core.ObjMap.fromObject(["\ufdd0'class", 
  "\ufdd0'style"], {"\ufdd0'class":"icon-user icon-white", "\ufdd0'style":"margin-right: 6px"})], true), user, cljs.core.PersistentVector.fromArray(["\ufdd0'span", cljs.core.ObjMap.fromObject(["\ufdd0'class", "\ufdd0'style"], {"\ufdd0'class":"caret", "\ufdd0'style":"margin-left: 6px"})], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'ul", cljs.core.ObjMap.fromObject(["\ufdd0'class"], {"\ufdd0'class":"dropdown-menu"}), cljs.core.PersistentVector.fromArray(["\ufdd0'li", cljs.core.PersistentVector.fromArray(["\ufdd0'a", 
  cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'href"], {"\ufdd0'id":"logout-btn", "\ufdd0'href":"/logout"}), "Logout"], true)], true)], true)], true))
};
vcfvis.ui.update_user_BANG_ = function update_user_BANG_(context) {
  return c2.dom.replace_BANG_.call(null, c2.dom.select.call(null, "#user-dropdown"), vcfvis.ui.logged_in_html.call(null, cljs.core._lookup.call(null, context, "\ufdd0'username", "user")))
};
vcfvis.ui.hist_margin = 20;
vcfvis.ui.inter_hist_margin = 20;
vcfvis.ui.axis_height = parseFloat(c2.dom.style.call(null, "#hist-axis", "\ufdd0'height"));
vcfvis.ui.hist_height = parseFloat(c2.dom.style.call(null, "#histograms", "\ufdd0'height"));
vcfvis.ui.hist_width = parseFloat(c2.dom.style.call(null, "#histograms", "\ufdd0'width")) - 2 * vcfvis.ui.hist_margin;
vcfvis.ui.hist_bins = 100;
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = goog.userAgent.WEBKIT ? !opt_cancel : !!opt_cancel;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver
};
goog.debug.getFunctionName = function(fn) {
  if(goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn]
  }
  if(goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if(name) {
      goog.debug.fnNameCache_[fn] = name;
      return name
    }
  }
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.logToProfilers = function(msg) {
  if(goog.global["console"]) {
    if(goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg)
    }else {
      if(goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg)
      }
    }
  }
  if(goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg)
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.Replacer;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object)
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp()
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if(!this.xhr_) {
      return null
    }
    if("response" in this.xhr_) {
      return this.xhr_.response
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer
        }
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("c2.maths");
goog.require("cljs.core");
c2.maths.Pi = Math.PI;
c2.maths.Tau = 2 * c2.maths.Pi;
c2.maths.e = Math.E;
c2.maths.radians_per_degree = c2.maths.Pi / 180;
c2.maths.rad = function rad(x) {
  return c2.maths.radians_per_degree * x
};
c2.maths.sin = function sin(x) {
  return Math.sin.call(null, x)
};
c2.maths.asin = function asin(x) {
  return Math.asin.call(null, x)
};
c2.maths.cos = function cos(x) {
  return Math.cos.call(null, x)
};
c2.maths.acos = function acos(x) {
  return Math.acos.call(null, x)
};
c2.maths.tan = function tan(x) {
  return Math.tan.call(null, x)
};
c2.maths.atan = function atan(x) {
  return Math.atan.call(null, x)
};
c2.maths.expt = function() {
  var expt = null;
  var expt__1 = function(x) {
    return Math.exp.call(null, x)
  };
  var expt__2 = function(x, y) {
    return Math.pow.call(null, x, y)
  };
  expt = function(x, y) {
    switch(arguments.length) {
      case 1:
        return expt__1.call(this, x);
      case 2:
        return expt__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  expt.cljs$lang$arity$1 = expt__1;
  expt.cljs$lang$arity$2 = expt__2;
  return expt
}();
c2.maths.sq = function sq(x) {
  return c2.maths.expt.call(null, x, 2)
};
c2.maths.sqrt = function sqrt(x) {
  return Math.sqrt.call(null, x)
};
c2.maths.floor = function floor(x) {
  return Math.floor.call(null, x)
};
c2.maths.ceil = function ceil(x) {
  return Math.ceil.call(null, x)
};
c2.maths.abs = function abs(x) {
  return Math.abs.call(null, x)
};
c2.maths.log = function() {
  var log = null;
  var log__1 = function(x) {
    return Math.log.call(null, x)
  };
  var log__2 = function(base, x) {
    return Math.log.call(null, x) / Math.log.call(null, base)
  };
  log = function(base, x) {
    switch(arguments.length) {
      case 1:
        return log__1.call(this, base);
      case 2:
        return log__2.call(this, base, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  log.cljs$lang$arity$1 = log__1;
  log.cljs$lang$arity$2 = log__2;
  return log
}();
c2.maths.log10 = function log10(x) {
  return Math.log(x) / Math.LN10
};
c2.maths.extent = function extent(xs) {
  return cljs.core.PersistentVector.fromArray([cljs.core.apply.call(null, cljs.core.min, xs), cljs.core.apply.call(null, cljs.core.max, xs)], true)
};
c2.maths.mean = function mean(xs) {
  return cljs.core.reduce.call(null, cljs.core._PLUS_, xs) / cljs.core.count.call(null, xs)
};
c2.maths.median = function median(xs) {
  var sorted__18387 = cljs.core.sort.call(null, xs);
  var n__18388 = cljs.core.count.call(null, xs);
  if(cljs.core._EQ_.call(null, n__18388, 1)) {
    return cljs.core.first.call(null, sorted__18387)
  }else {
    if(cljs.core.odd_QMARK_.call(null, n__18388)) {
      return cljs.core.nth.call(null, sorted__18387, (n__18388 + 1) / 2)
    }else {
      if("\ufdd0'else") {
        var mid__18389 = n__18388 / 2;
        return c2.maths.mean.call(null, cljs.core.PersistentVector.fromArray([cljs.core.nth.call(null, sorted__18387, c2.maths.floor.call(null, mid__18389)), cljs.core.nth.call(null, sorted__18387, c2.maths.ceil.call(null, mid__18389))], true))
      }else {
        return null
      }
    }
  }
};
c2.maths.irange = function() {
  var irange = null;
  var irange__1 = function(start) {
    return cljs.core.range.call(null, start)
  };
  var irange__2 = function(start, end) {
    return cljs.core.concat.call(null, cljs.core.range.call(null, start, end), cljs.core.PersistentVector.fromArray([end], true))
  };
  var irange__3 = function(start, end, step) {
    var r__18391 = cljs.core.range.call(null, start, end, step);
    if(cljs.core.first.call(null, r__18391) % step === end % step) {
      return cljs.core.concat.call(null, r__18391, cljs.core.PersistentVector.fromArray([end], true))
    }else {
      return r__18391
    }
  };
  irange = function(start, end, step) {
    switch(arguments.length) {
      case 1:
        return irange__1.call(this, start);
      case 2:
        return irange__2.call(this, start, end);
      case 3:
        return irange__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  irange.cljs$lang$arity$1 = irange__1;
  irange.cljs$lang$arity$2 = irange__2;
  irange.cljs$lang$arity$3 = irange__3;
  return irange
}();
c2.maths.within_QMARK_ = function within_QMARK_(x, p__18392) {
  var vec__18398__18399 = p__18392;
  var bottom__18400 = cljs.core.nth.call(null, vec__18398__18399, 0, null);
  var top__18401 = cljs.core.nth.call(null, vec__18398__18399, 1, null);
  var and__3822__auto____18402 = bottom__18400 <= x;
  if(and__3822__auto____18402) {
    return x <= top__18401
  }else {
    return and__3822__auto____18402
  }
};
c2.maths.add = function() {
  var add__delegate = function(args) {
    return cljs.core.reduce.call(null, function(A, B) {
      if(function() {
        var and__3822__auto____18407 = cljs.core.number_QMARK_.call(null, A);
        if(and__3822__auto____18407) {
          return cljs.core.number_QMARK_.call(null, B)
        }else {
          return and__3822__auto____18407
        }
      }()) {
        return A + B
      }else {
        if(function() {
          var and__3822__auto____18408 = cljs.core.coll_QMARK_.call(null, A);
          if(and__3822__auto____18408) {
            return cljs.core.coll_QMARK_.call(null, B)
          }else {
            return and__3822__auto____18408
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._PLUS_, A, B)
        }else {
          if(function() {
            var and__3822__auto____18409 = cljs.core.number_QMARK_.call(null, A);
            if(and__3822__auto____18409) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____18409
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._PLUS_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
          }else {
            if(function() {
              var and__3822__auto____18410 = cljs.core.coll_QMARK_.call(null, A);
              if(and__3822__auto____18410) {
                return cljs.core.number_QMARK_.call(null, B)
              }else {
                return and__3822__auto____18410
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._PLUS_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
            }else {
              return null
            }
          }
        }
      }
    }, args)
  };
  var add = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return add__delegate.call(this, args)
  };
  add.cljs$lang$maxFixedArity = 0;
  add.cljs$lang$applyTo = function(arglist__18411) {
    var args = cljs.core.seq(arglist__18411);
    return add__delegate(args)
  };
  add.cljs$lang$arity$variadic = add__delegate;
  return add
}();
c2.maths.sub = function() {
  var sub__delegate = function(args) {
    if(cljs.core._EQ_.call(null, cljs.core.count.call(null, args), 1)) {
      if(function() {
        var and__3822__auto____18420 = cljs.core.number_QMARK_.call(null, 0);
        if(and__3822__auto____18420) {
          return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
        }else {
          return and__3822__auto____18420
        }
      }()) {
        return 0 - cljs.core.first.call(null, args)
      }else {
        if(function() {
          var and__3822__auto____18421 = cljs.core.coll_QMARK_.call(null, 0);
          if(and__3822__auto____18421) {
            return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
          }else {
            return and__3822__auto____18421
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._, 0, cljs.core.first.call(null, args))
        }else {
          if(function() {
            var and__3822__auto____18422 = cljs.core.number_QMARK_.call(null, 0);
            if(and__3822__auto____18422) {
              return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
            }else {
              return and__3822__auto____18422
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._, cljs.core.replicate.call(null, cljs.core.count.call(null, cljs.core.first.call(null, args)), 0), cljs.core.first.call(null, args))
          }else {
            if(function() {
              var and__3822__auto____18423 = cljs.core.coll_QMARK_.call(null, 0);
              if(and__3822__auto____18423) {
                return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
              }else {
                return and__3822__auto____18423
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._, 0, cljs.core.replicate.call(null, cljs.core.count.call(null, 0), cljs.core.first.call(null, args)))
            }else {
              return null
            }
          }
        }
      }
    }else {
      return cljs.core.reduce.call(null, function(A, B) {
        if(function() {
          var and__3822__auto____18424 = cljs.core.number_QMARK_.call(null, A);
          if(and__3822__auto____18424) {
            return cljs.core.number_QMARK_.call(null, B)
          }else {
            return and__3822__auto____18424
          }
        }()) {
          return A - B
        }else {
          if(function() {
            var and__3822__auto____18425 = cljs.core.coll_QMARK_.call(null, A);
            if(and__3822__auto____18425) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____18425
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._, A, B)
          }else {
            if(function() {
              var and__3822__auto____18426 = cljs.core.number_QMARK_.call(null, A);
              if(and__3822__auto____18426) {
                return cljs.core.coll_QMARK_.call(null, B)
              }else {
                return and__3822__auto____18426
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
            }else {
              if(function() {
                var and__3822__auto____18427 = cljs.core.coll_QMARK_.call(null, A);
                if(and__3822__auto____18427) {
                  return cljs.core.number_QMARK_.call(null, B)
                }else {
                  return and__3822__auto____18427
                }
              }()) {
                return cljs.core.map.call(null, cljs.core._, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
              }else {
                return null
              }
            }
          }
        }
      }, args)
    }
  };
  var sub = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sub__delegate.call(this, args)
  };
  sub.cljs$lang$maxFixedArity = 0;
  sub.cljs$lang$applyTo = function(arglist__18428) {
    var args = cljs.core.seq(arglist__18428);
    return sub__delegate(args)
  };
  sub.cljs$lang$arity$variadic = sub__delegate;
  return sub
}();
c2.maths.mul = function() {
  var mul__delegate = function(args) {
    return cljs.core.reduce.call(null, function(A, B) {
      if(function() {
        var and__3822__auto____18433 = cljs.core.number_QMARK_.call(null, A);
        if(and__3822__auto____18433) {
          return cljs.core.number_QMARK_.call(null, B)
        }else {
          return and__3822__auto____18433
        }
      }()) {
        return A * B
      }else {
        if(function() {
          var and__3822__auto____18434 = cljs.core.coll_QMARK_.call(null, A);
          if(and__3822__auto____18434) {
            return cljs.core.coll_QMARK_.call(null, B)
          }else {
            return and__3822__auto____18434
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._STAR_, A, B)
        }else {
          if(function() {
            var and__3822__auto____18435 = cljs.core.number_QMARK_.call(null, A);
            if(and__3822__auto____18435) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____18435
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._STAR_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
          }else {
            if(function() {
              var and__3822__auto____18436 = cljs.core.coll_QMARK_.call(null, A);
              if(and__3822__auto____18436) {
                return cljs.core.number_QMARK_.call(null, B)
              }else {
                return and__3822__auto____18436
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._STAR_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
            }else {
              return null
            }
          }
        }
      }
    }, args)
  };
  var mul = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return mul__delegate.call(this, args)
  };
  mul.cljs$lang$maxFixedArity = 0;
  mul.cljs$lang$applyTo = function(arglist__18437) {
    var args = cljs.core.seq(arglist__18437);
    return mul__delegate(args)
  };
  mul.cljs$lang$arity$variadic = mul__delegate;
  return mul
}();
c2.maths.div = function() {
  var div__delegate = function(args) {
    if(cljs.core._EQ_.call(null, cljs.core.count.call(null, args), 1)) {
      if(function() {
        var and__3822__auto____18446 = cljs.core.number_QMARK_.call(null, 1);
        if(and__3822__auto____18446) {
          return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
        }else {
          return and__3822__auto____18446
        }
      }()) {
        return 1 / cljs.core.first.call(null, args)
      }else {
        if(function() {
          var and__3822__auto____18447 = cljs.core.coll_QMARK_.call(null, 1);
          if(and__3822__auto____18447) {
            return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
          }else {
            return and__3822__auto____18447
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._SLASH_, 1, cljs.core.first.call(null, args))
        }else {
          if(function() {
            var and__3822__auto____18448 = cljs.core.number_QMARK_.call(null, 1);
            if(and__3822__auto____18448) {
              return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
            }else {
              return and__3822__auto____18448
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._SLASH_, cljs.core.replicate.call(null, cljs.core.count.call(null, cljs.core.first.call(null, args)), 1), cljs.core.first.call(null, args))
          }else {
            if(function() {
              var and__3822__auto____18449 = cljs.core.coll_QMARK_.call(null, 1);
              if(and__3822__auto____18449) {
                return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
              }else {
                return and__3822__auto____18449
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._SLASH_, 1, cljs.core.replicate.call(null, cljs.core.count.call(null, 1), cljs.core.first.call(null, args)))
            }else {
              return null
            }
          }
        }
      }
    }else {
      return cljs.core.reduce.call(null, function(A, B) {
        if(function() {
          var and__3822__auto____18450 = cljs.core.number_QMARK_.call(null, A);
          if(and__3822__auto____18450) {
            return cljs.core.number_QMARK_.call(null, B)
          }else {
            return and__3822__auto____18450
          }
        }()) {
          return A / B
        }else {
          if(function() {
            var and__3822__auto____18451 = cljs.core.coll_QMARK_.call(null, A);
            if(and__3822__auto____18451) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____18451
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._SLASH_, A, B)
          }else {
            if(function() {
              var and__3822__auto____18452 = cljs.core.number_QMARK_.call(null, A);
              if(and__3822__auto____18452) {
                return cljs.core.coll_QMARK_.call(null, B)
              }else {
                return and__3822__auto____18452
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._SLASH_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
            }else {
              if(function() {
                var and__3822__auto____18453 = cljs.core.coll_QMARK_.call(null, A);
                if(and__3822__auto____18453) {
                  return cljs.core.number_QMARK_.call(null, B)
                }else {
                  return and__3822__auto____18453
                }
              }()) {
                return cljs.core.map.call(null, cljs.core._SLASH_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
              }else {
                return null
              }
            }
          }
        }
      }, args)
    }
  };
  var div = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return div__delegate.call(this, args)
  };
  div.cljs$lang$maxFixedArity = 0;
  div.cljs$lang$applyTo = function(arglist__18454) {
    var args = cljs.core.seq(arglist__18454);
    return div__delegate(args)
  };
  div.cljs$lang$arity$variadic = div__delegate;
  return div
}();
c2.maths.quantile = function() {
  var quantile__delegate = function(data, p__18455) {
    var map__18477__18478 = p__18455;
    var map__18477__18479 = cljs.core.seq_QMARK_.call(null, map__18477__18478) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18477__18478) : map__18477__18478;
    var probs__18480 = cljs.core._lookup.call(null, map__18477__18479, "\ufdd0'probs", cljs.core.PersistentVector.fromArray([0, 0.25, 0.5, 0.75, 1], true));
    var xs__18481 = cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.sort.call(null, data));
    var n_1__18482 = cljs.core.count.call(null, xs__18481) - 1;
    var iter__2363__auto____18497 = function iter__18483(s__18484) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__18484__18491 = s__18484;
        while(true) {
          if(cljs.core.seq.call(null, s__18484__18491)) {
            var q__18492 = cljs.core.first.call(null, s__18484__18491);
            return cljs.core.cons.call(null, function() {
              var index__18493 = q__18492 * n_1__18482 + 1;
              var lo__18494 = cljs.core.int$.call(null, c2.maths.floor.call(null, index__18493));
              var h__18495 = index__18493 - lo__18494;
              var a__18496 = xs__18481.call(null, lo__18494 - 1);
              if(cljs.core._EQ_.call(null, h__18495, 0)) {
                return a__18496
              }else {
                return a__18496 + h__18495 * (xs__18481.call(null, lo__18494) - a__18496)
              }
            }(), iter__18483.call(null, cljs.core.rest.call(null, s__18484__18491)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____18497.call(null, probs__18480)
  };
  var quantile = function(data, var_args) {
    var p__18455 = null;
    if(goog.isDef(var_args)) {
      p__18455 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return quantile__delegate.call(this, data, p__18455)
  };
  quantile.cljs$lang$maxFixedArity = 1;
  quantile.cljs$lang$applyTo = function(arglist__18498) {
    var data = cljs.core.first(arglist__18498);
    var p__18455 = cljs.core.rest(arglist__18498);
    return quantile__delegate(data, p__18455)
  };
  quantile.cljs$lang$arity$variadic = quantile__delegate;
  return quantile
}();
goog.provide("c2.scale");
goog.require("cljs.core");
goog.require("c2.maths");
goog.require("c2.maths");
goog.require("c2.maths");
c2.scale.IInvertable = {};
c2.scale.invert = function invert(scale) {
  if(function() {
    var and__3822__auto____17177 = scale;
    if(and__3822__auto____17177) {
      return scale.c2$scale$IInvertable$invert$arity$1
    }else {
      return and__3822__auto____17177
    }
  }()) {
    return scale.c2$scale$IInvertable$invert$arity$1(scale)
  }else {
    var x__2264__auto____17178 = scale == null ? null : scale;
    return function() {
      var or__3824__auto____17179 = c2.scale.invert[goog.typeOf(x__2264__auto____17178)];
      if(or__3824__auto____17179) {
        return or__3824__auto____17179
      }else {
        var or__3824__auto____17180 = c2.scale.invert["_"];
        if(or__3824__auto____17180) {
          return or__3824__auto____17180
        }else {
          throw cljs.core.missing_protocol.call(null, "IInvertable.invert", scale);
        }
      }
    }().call(null, scale)
  }
};
c2.scale._linear = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054859;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
c2.scale._linear.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__17186 = this;
  var h__2093__auto____17187 = this__17186.__hash;
  if(!(h__2093__auto____17187 == null)) {
    return h__2093__auto____17187
  }else {
    var h__2093__auto____17188 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__17186.__hash = h__2093__auto____17188;
    return h__2093__auto____17188
  }
};
c2.scale._linear.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__17189 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
c2.scale._linear.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k17182, else__2227__auto__) {
  var this__17190 = this;
  if(k17182 === "\ufdd0'domain") {
    return this__17190.domain
  }else {
    if(k17182 === "\ufdd0'range") {
      return this__17190.range
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__17190.__extmap, k17182, else__2227__auto__)
      }else {
        return null
      }
    }
  }
};
c2.scale._linear.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__17181) {
  var this__17191 = this;
  var pred__17192__17195 = cljs.core.identical_QMARK_;
  var expr__17193__17196 = k__2232__auto__;
  if(pred__17192__17195.call(null, "\ufdd0'domain", expr__17193__17196)) {
    return new c2.scale._linear(G__17181, this__17191.range, this__17191.__meta, this__17191.__extmap, null)
  }else {
    if(pred__17192__17195.call(null, "\ufdd0'range", expr__17193__17196)) {
      return new c2.scale._linear(this__17191.domain, G__17181, this__17191.__meta, this__17191.__extmap, null)
    }else {
      return new c2.scale._linear(this__17191.domain, this__17191.range, this__17191.__meta, cljs.core.assoc.call(null, this__17191.__extmap, k__2232__auto__, G__17181), null)
    }
  }
};
c2.scale._linear.prototype.call = function(this_sym17197, x) {
  var this__17198 = this;
  var this_sym17197__17199 = this;
  var ___17200 = this_sym17197__17199;
  var domain_length__17201 = cljs.core.last.call(null, this__17198.domain) - cljs.core.first.call(null, this__17198.domain);
  var range_length__17202 = cljs.core.last.call(null, this__17198.range) - cljs.core.first.call(null, this__17198.range);
  return cljs.core.first.call(null, this__17198.range) + range_length__17202 * ((x - cljs.core.first.call(null, this__17198.domain)) / domain_length__17201)
};
c2.scale._linear.prototype.apply = function(this_sym17184, args17185) {
  var this__17203 = this;
  return this_sym17184.call.apply(this_sym17184, [this_sym17184].concat(args17185.slice()))
};
c2.scale._linear.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__17204 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
c2.scale._linear.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__17205 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__17205.domain), cljs.core.vector.call(null, "\ufdd0'range", this__17205.range)], true), this__17205.__extmap))
};
c2.scale._linear.prototype.c2$scale$IInvertable$ = true;
c2.scale._linear.prototype.c2$scale$IInvertable$invert$arity$1 = function(this$) {
  var this__17206 = this;
  return cljs.core.assoc.call(null, this$, "\ufdd0'domain", this__17206.range, "\ufdd0'range", this__17206.domain)
};
c2.scale._linear.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__17207 = this;
  var pr_pair__2240__auto____17208 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____17208, [cljs.core.str("#"), cljs.core.str("_linear"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__17207.domain), cljs.core.vector.call(null, "\ufdd0'range", this__17207.range)], true), this__17207.__extmap))
};
c2.scale._linear.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__17209 = this;
  return 2 + cljs.core.count.call(null, this__17209.__extmap)
};
c2.scale._linear.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__17210 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____17211 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____17211)) {
      var and__3822__auto____17212 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____17212) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____17212
      }
    }else {
      return and__3822__auto____17211
    }
  }())) {
    return true
  }else {
    return false
  }
};
c2.scale._linear.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__17181) {
  var this__17213 = this;
  return new c2.scale._linear(this__17213.domain, this__17213.range, G__17181, this__17213.__extmap, this__17213.__hash)
};
c2.scale._linear.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__17214 = this;
  return this__17214.__meta
};
c2.scale._linear.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__17215 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'domain", "\ufdd0'range"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__17215.__meta), k__2234__auto__)
  }else {
    return new c2.scale._linear(this__17215.domain, this__17215.range, this__17215.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__17215.__extmap, k__2234__auto__)), null)
  }
};
c2.scale._linear.cljs$lang$type = true;
c2.scale._linear.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "c2.scale/_linear")
};
c2.scale.__GT__linear = function __GT__linear(domain, range) {
  return new c2.scale._linear(domain, range)
};
c2.scale.map__GT__linear = function map__GT__linear(G__17183) {
  return new c2.scale._linear((new cljs.core.Keyword("\ufdd0'domain")).call(null, G__17183), (new cljs.core.Keyword("\ufdd0'range")).call(null, G__17183), null, cljs.core.dissoc.call(null, G__17183, "\ufdd0'domain", "\ufdd0'range"))
};
c2.scale._linear;
c2.scale.linear = function() {
  var linear__delegate = function(kwargs) {
    return c2.scale.map__GT__linear.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'domain", "\ufdd0'range"], {"\ufdd0'domain":cljs.core.PersistentVector.fromArray([0, 1], true), "\ufdd0'range":cljs.core.PersistentVector.fromArray([0, 1], true)}), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)))
  };
  var linear = function(var_args) {
    var kwargs = null;
    if(goog.isDef(var_args)) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return linear__delegate.call(this, kwargs)
  };
  linear.cljs$lang$maxFixedArity = 0;
  linear.cljs$lang$applyTo = function(arglist__17216) {
    var kwargs = cljs.core.seq(arglist__17216);
    return linear__delegate(kwargs)
  };
  linear.cljs$lang$arity$variadic = linear__delegate;
  return linear
}();
c2.scale._power = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054859;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
c2.scale._power.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__17222 = this;
  var h__2093__auto____17223 = this__17222.__hash;
  if(!(h__2093__auto____17223 == null)) {
    return h__2093__auto____17223
  }else {
    var h__2093__auto____17224 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__17222.__hash = h__2093__auto____17224;
    return h__2093__auto____17224
  }
};
c2.scale._power.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__17225 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
c2.scale._power.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k17218, else__2227__auto__) {
  var this__17226 = this;
  if(k17218 === "\ufdd0'domain") {
    return this__17226.domain
  }else {
    if(k17218 === "\ufdd0'range") {
      return this__17226.range
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__17226.__extmap, k17218, else__2227__auto__)
      }else {
        return null
      }
    }
  }
};
c2.scale._power.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__17217) {
  var this__17227 = this;
  var pred__17228__17231 = cljs.core.identical_QMARK_;
  var expr__17229__17232 = k__2232__auto__;
  if(pred__17228__17231.call(null, "\ufdd0'domain", expr__17229__17232)) {
    return new c2.scale._power(G__17217, this__17227.range, this__17227.__meta, this__17227.__extmap, null)
  }else {
    if(pred__17228__17231.call(null, "\ufdd0'range", expr__17229__17232)) {
      return new c2.scale._power(this__17227.domain, G__17217, this__17227.__meta, this__17227.__extmap, null)
    }else {
      return new c2.scale._power(this__17227.domain, this__17227.range, this__17227.__meta, cljs.core.assoc.call(null, this__17227.__extmap, k__2232__auto__, G__17217), null)
    }
  }
};
c2.scale._power.prototype.call = function(this_sym17233, x) {
  var this__17234 = this;
  var this_sym17233__17235 = this;
  var ___17236 = this_sym17233__17235;
  return cljs.core.comp.call(null, c2.scale.linear.call(null, "\ufdd0'domain", cljs.core.map.call(null, c2.maths.expt, this__17234.domain), "\ufdd0'range", this__17234.range), c2.maths.expt).call(null, x)
};
c2.scale._power.prototype.apply = function(this_sym17220, args17221) {
  var this__17237 = this;
  return this_sym17220.call.apply(this_sym17220, [this_sym17220].concat(args17221.slice()))
};
c2.scale._power.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__17238 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
c2.scale._power.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__17239 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__17239.domain), cljs.core.vector.call(null, "\ufdd0'range", this__17239.range)], true), this__17239.__extmap))
};
c2.scale._power.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__17240 = this;
  var pr_pair__2240__auto____17241 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____17241, [cljs.core.str("#"), cljs.core.str("_power"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__17240.domain), cljs.core.vector.call(null, "\ufdd0'range", this__17240.range)], true), this__17240.__extmap))
};
c2.scale._power.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__17242 = this;
  return 2 + cljs.core.count.call(null, this__17242.__extmap)
};
c2.scale._power.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__17243 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____17244 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____17244)) {
      var and__3822__auto____17245 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____17245) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____17245
      }
    }else {
      return and__3822__auto____17244
    }
  }())) {
    return true
  }else {
    return false
  }
};
c2.scale._power.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__17217) {
  var this__17246 = this;
  return new c2.scale._power(this__17246.domain, this__17246.range, G__17217, this__17246.__extmap, this__17246.__hash)
};
c2.scale._power.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__17247 = this;
  return this__17247.__meta
};
c2.scale._power.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__17248 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'domain", "\ufdd0'range"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__17248.__meta), k__2234__auto__)
  }else {
    return new c2.scale._power(this__17248.domain, this__17248.range, this__17248.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__17248.__extmap, k__2234__auto__)), null)
  }
};
c2.scale._power.cljs$lang$type = true;
c2.scale._power.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "c2.scale/_power")
};
c2.scale.__GT__power = function __GT__power(domain, range) {
  return new c2.scale._power(domain, range)
};
c2.scale.map__GT__power = function map__GT__power(G__17219) {
  return new c2.scale._power((new cljs.core.Keyword("\ufdd0'domain")).call(null, G__17219), (new cljs.core.Keyword("\ufdd0'range")).call(null, G__17219), null, cljs.core.dissoc.call(null, G__17219, "\ufdd0'domain", "\ufdd0'range"))
};
c2.scale._power;
c2.scale.power = function() {
  var power__delegate = function(kwargs) {
    return c2.scale.map__GT__power.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'domain", "\ufdd0'range"], {"\ufdd0'domain":cljs.core.PersistentVector.fromArray([0, 1], true), "\ufdd0'range":cljs.core.PersistentVector.fromArray([0, 1], true)}), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)))
  };
  var power = function(var_args) {
    var kwargs = null;
    if(goog.isDef(var_args)) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return power__delegate.call(this, kwargs)
  };
  power.cljs$lang$maxFixedArity = 0;
  power.cljs$lang$applyTo = function(arglist__17249) {
    var kwargs = cljs.core.seq(arglist__17249);
    return power__delegate(kwargs)
  };
  power.cljs$lang$arity$variadic = power__delegate;
  return power
}();
c2.scale._log = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054859;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
c2.scale._log.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__17255 = this;
  var h__2093__auto____17256 = this__17255.__hash;
  if(!(h__2093__auto____17256 == null)) {
    return h__2093__auto____17256
  }else {
    var h__2093__auto____17257 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__17255.__hash = h__2093__auto____17257;
    return h__2093__auto____17257
  }
};
c2.scale._log.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__17258 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
c2.scale._log.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k17251, else__2227__auto__) {
  var this__17259 = this;
  if(k17251 === "\ufdd0'domain") {
    return this__17259.domain
  }else {
    if(k17251 === "\ufdd0'range") {
      return this__17259.range
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__17259.__extmap, k17251, else__2227__auto__)
      }else {
        return null
      }
    }
  }
};
c2.scale._log.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__17250) {
  var this__17260 = this;
  var pred__17261__17264 = cljs.core.identical_QMARK_;
  var expr__17262__17265 = k__2232__auto__;
  if(pred__17261__17264.call(null, "\ufdd0'domain", expr__17262__17265)) {
    return new c2.scale._log(G__17250, this__17260.range, this__17260.__meta, this__17260.__extmap, null)
  }else {
    if(pred__17261__17264.call(null, "\ufdd0'range", expr__17262__17265)) {
      return new c2.scale._log(this__17260.domain, G__17250, this__17260.__meta, this__17260.__extmap, null)
    }else {
      return new c2.scale._log(this__17260.domain, this__17260.range, this__17260.__meta, cljs.core.assoc.call(null, this__17260.__extmap, k__2232__auto__, G__17250), null)
    }
  }
};
c2.scale._log.prototype.call = function(this_sym17266, x) {
  var this__17267 = this;
  var this_sym17266__17268 = this;
  var ___17269 = this_sym17266__17268;
  return cljs.core.comp.call(null, c2.scale.linear.call(null, "\ufdd0'domain", cljs.core.map.call(null, c2.maths.log, this__17267.domain), "\ufdd0'range", this__17267.range), c2.maths.log).call(null, x)
};
c2.scale._log.prototype.apply = function(this_sym17253, args17254) {
  var this__17270 = this;
  return this_sym17253.call.apply(this_sym17253, [this_sym17253].concat(args17254.slice()))
};
c2.scale._log.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__17271 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
c2.scale._log.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__17272 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__17272.domain), cljs.core.vector.call(null, "\ufdd0'range", this__17272.range)], true), this__17272.__extmap))
};
c2.scale._log.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__17273 = this;
  var pr_pair__2240__auto____17274 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____17274, [cljs.core.str("#"), cljs.core.str("_log"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__17273.domain), cljs.core.vector.call(null, "\ufdd0'range", this__17273.range)], true), this__17273.__extmap))
};
c2.scale._log.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__17275 = this;
  return 2 + cljs.core.count.call(null, this__17275.__extmap)
};
c2.scale._log.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__17276 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____17277 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____17277)) {
      var and__3822__auto____17278 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____17278) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____17278
      }
    }else {
      return and__3822__auto____17277
    }
  }())) {
    return true
  }else {
    return false
  }
};
c2.scale._log.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__17250) {
  var this__17279 = this;
  return new c2.scale._log(this__17279.domain, this__17279.range, G__17250, this__17279.__extmap, this__17279.__hash)
};
c2.scale._log.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__17280 = this;
  return this__17280.__meta
};
c2.scale._log.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__17281 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'domain", "\ufdd0'range"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__17281.__meta), k__2234__auto__)
  }else {
    return new c2.scale._log(this__17281.domain, this__17281.range, this__17281.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__17281.__extmap, k__2234__auto__)), null)
  }
};
c2.scale._log.cljs$lang$type = true;
c2.scale._log.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "c2.scale/_log")
};
c2.scale.__GT__log = function __GT__log(domain, range) {
  return new c2.scale._log(domain, range)
};
c2.scale.map__GT__log = function map__GT__log(G__17252) {
  return new c2.scale._log((new cljs.core.Keyword("\ufdd0'domain")).call(null, G__17252), (new cljs.core.Keyword("\ufdd0'range")).call(null, G__17252), null, cljs.core.dissoc.call(null, G__17252, "\ufdd0'domain", "\ufdd0'range"))
};
c2.scale._log;
c2.scale.log = function() {
  var log__delegate = function(kwargs) {
    return c2.scale.map__GT__log.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'domain", "\ufdd0'range"], {"\ufdd0'domain":cljs.core.PersistentVector.fromArray([1, 10], true), "\ufdd0'range":cljs.core.PersistentVector.fromArray([0, 1], true)}), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)))
  };
  var log = function(var_args) {
    var kwargs = null;
    if(goog.isDef(var_args)) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, kwargs)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__17282) {
    var kwargs = cljs.core.seq(arglist__17282);
    return log__delegate(kwargs)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
goog.provide("c2.ticks");
goog.require("cljs.core");
goog.require("c2.maths");
goog.require("c2.maths");
c2.ticks.Q = cljs.core.PersistentVector.fromArray([1, 5, 2, 2.5, 4, 3], true);
c2.ticks.index_of = function index_of(x, coll) {
  return cljs.core.first.call(null, function() {
    var iter__2363__auto____17308 = function iter__17296(s__17297) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__17297__17303 = s__17297;
        while(true) {
          if(cljs.core.seq.call(null, s__17297__17303)) {
            var vec__17304__17305 = cljs.core.first.call(null, s__17297__17303);
            var idx__17306 = cljs.core.nth.call(null, vec__17304__17305, 0, null);
            var y__17307 = cljs.core.nth.call(null, vec__17304__17305, 1, null);
            if(cljs.core._EQ_.call(null, y__17307, x)) {
              return cljs.core.cons.call(null, idx__17306, iter__17296.call(null, cljs.core.rest.call(null, s__17297__17303)))
            }else {
              var G__17309 = cljs.core.rest.call(null, s__17297__17303);
              s__17297__17303 = G__17309;
              continue
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____17308.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, coll))
  }())
};
c2.ticks.label_range_contains_zero_QMARK_ = function label_range_contains_zero_QMARK_(l_min, l_max, l_step) {
  var and__3822__auto____17312 = l_max > 0;
  if(and__3822__auto____17312) {
    var and__3822__auto____17313 = l_min < 0;
    if(and__3822__auto____17313) {
      return l_min % l_step === 0
    }else {
      return and__3822__auto____17313
    }
  }else {
    return and__3822__auto____17312
  }
};
c2.ticks.simplicity = function simplicity(q, j, label_range_contains_zero) {
  var v__17315 = cljs.core.truth_(label_range_contains_zero) ? 1 : 0;
  if(cljs.core.count.call(null, c2.ticks.Q) <= 1) {
    return 1 - j + v__17315
  }else {
    return 1 - c2.ticks.index_of.call(null, q, c2.ticks.Q) / (cljs.core.count.call(null, c2.ticks.Q) - 1) - j + v__17315
  }
};
c2.ticks.max_simplicity = function max_simplicity(q, j) {
  return c2.ticks.simplicity.call(null, q, j, true)
};
c2.ticks.coverage = function coverage(d_min, d_max, l_min, l_max) {
  return 1 - 0.5 * ((c2.maths.sq.call(null, d_max - l_max) + c2.maths.sq.call(null, d_min - l_min)) / c2.maths.sq.call(null, 0.1 * (d_max - d_min)))
};
c2.ticks.max_coverage = function max_coverage(d_min, d_max, span) {
  var d_range__17317 = d_max - d_min;
  if(span > d_range__17317) {
    return 1 - c2.maths.sq.call(null, (span - d_range__17317) / (0.2 * d_range__17317))
  }else {
    return 1
  }
};
c2.ticks.density = function density(r, rt) {
  return 2 - (r / rt > rt / r ? r / rt : rt / r)
};
c2.ticks.max_density = function max_density(r, rt) {
  if(r >= rt) {
    return 2 - r / rt
  }else {
    return 1
  }
};
c2.ticks.w = function w(p__17318) {
  var vec__17326__17327 = p__17318;
  var simplicity__17328 = cljs.core.nth.call(null, vec__17326__17327, 0, null);
  var coverage__17329 = cljs.core.nth.call(null, vec__17326__17327, 1, null);
  var density__17330 = cljs.core.nth.call(null, vec__17326__17327, 2, null);
  var legibility__17331 = cljs.core.nth.call(null, vec__17326__17327, 3, null);
  var w__17332 = cljs.core.PersistentVector.fromArray([0.2, 0.25, 0.5, 0.05], true);
  return simplicity__17328 * w__17332.call(null, 0) + coverage__17329 * w__17332.call(null, 1) + density__17330 * w__17332.call(null, 2) + legibility__17331 * w__17332.call(null, 3)
};
c2.ticks.search = function() {
  var search__delegate = function(p__17333, p__17334) {
    var vec__17369__17371 = p__17333;
    var d_min__17372 = cljs.core.nth.call(null, vec__17369__17371, 0, null);
    var d_max__17373 = cljs.core.nth.call(null, vec__17369__17371, 1, null);
    var map__17370__17374 = p__17334;
    var map__17370__17375 = cljs.core.seq_QMARK_.call(null, map__17370__17374) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17370__17374) : map__17370__17374;
    var clamp_QMARK___17376 = cljs.core._lookup.call(null, map__17370__17375, "\ufdd0'clamp?", false);
    var length__17377 = cljs.core._lookup.call(null, map__17370__17375, "\ufdd0'length", 500);
    var target_density__17378 = cljs.core._lookup.call(null, map__17370__17375, "\ufdd0'target-density", 0.01);
    var best_score__17379 = cljs.core.atom.call(null, -2);
    var label__17380 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
    var G__17381__17382 = c2.ticks.Q;
    while(true) {
      if(cljs.core.empty_QMARK_.call(null, G__17381__17382)) {
      }else {
        if(true) {
          var q__17383 = cljs.core.first.call(null, G__17381__17382);
          var j__17384 = 1;
          while(true) {
            if(null) {
            }else {
              if(true) {
                var ms__17385 = c2.ticks.max_simplicity.call(null, q__17383, j__17384);
                if(c2.ticks.w.call(null, cljs.core.PersistentVector.fromArray([ms__17385, 1, 1, 1], true)) < cljs.core.deref.call(null, best_score__17379)) {
                }else {
                  var k__17386 = 2;
                  while(true) {
                    if(null) {
                    }else {
                      if(true) {
                        var md__17387 = c2.ticks.max_density.call(null, k__17386 / length__17377, target_density__17378);
                        if(c2.ticks.w.call(null, cljs.core.PersistentVector.fromArray([ms__17385, 1, md__17387, 1], true)) < cljs.core.deref.call(null, best_score__17379)) {
                        }else {
                          var delta__17388 = (d_max__17373 - d_min__17372) / ((k__17386 + 1) * j__17384 * k__17386);
                          var z__17389 = c2.maths.ceil.call(null, c2.maths.log10.call(null, delta__17388));
                          while(true) {
                            if(null) {
                            }else {
                              if(true) {
                                var l_step__17390 = q__17383 * j__17384 * c2.maths.expt.call(null, 10, z__17389);
                                var mc__17391 = c2.ticks.max_coverage.call(null, d_min__17372, d_max__17373, (k__17386 - 1) * l_step__17390);
                                if(c2.ticks.w.call(null, cljs.core.PersistentVector.fromArray([ms__17385, mc__17391, md__17387, 1], true)) < cljs.core.deref.call(null, best_score__17379)) {
                                }else {
                                  var G__17392__17393 = d_min__17372 / l_step__17390;
                                  var start__17394 = c2.maths.floor.call(null, d_max__17373 / l_step__17390) - (k__17386 - 1);
                                  while(true) {
                                    if(start__17394 > G__17392__17393) {
                                    }else {
                                      if(true) {
                                        var l_min__17395 = start__17394 * l_step__17390;
                                        var l_max__17396 = l_min__17395 + (k__17386 - 1) * l_step__17390;
                                        var s__17397 = c2.ticks.simplicity.call(null, q__17383, j__17384, c2.ticks.label_range_contains_zero_QMARK_.call(null, l_min__17395, l_max__17396, l_step__17390));
                                        var c__17398 = c2.ticks.coverage.call(null, d_min__17372, d_max__17373, l_min__17395, l_max__17396);
                                        var d__17399 = c2.ticks.density.call(null, k__17386 / length__17377, target_density__17378);
                                        var score__17400 = c2.ticks.w.call(null, cljs.core.PersistentVector.fromArray([s__17397, c__17398, d__17399, 1], true));
                                        if(score__17400 < cljs.core.deref.call(null, best_score__17379)) {
                                        }else {
                                          cljs.core.reset_BANG_.call(null, best_score__17379, score__17400);
                                          cljs.core.reset_BANG_.call(null, label__17380, cljs.core.ObjMap.fromObject(["\ufdd0'min", "\ufdd0'max", "\ufdd0'step"], {"\ufdd0'min":l_min__17395, "\ufdd0'max":l_max__17396, "\ufdd0'step":l_step__17390}));
                                          var G__17403 = start__17394 + 1 / j__17384;
                                          start__17394 = G__17403;
                                          continue
                                        }
                                      }else {
                                      }
                                    }
                                    break
                                  }
                                  var G__17404 = z__17389 + 1;
                                  z__17389 = G__17404;
                                  continue
                                }
                              }else {
                              }
                            }
                            break
                          }
                          var G__17405 = k__17386 + 1;
                          k__17386 = G__17405;
                          continue
                        }
                      }else {
                      }
                    }
                    break
                  }
                  var G__17406 = j__17384 + 1;
                  j__17384 = G__17406;
                  continue
                }
              }else {
              }
            }
            break
          }
          var G__17407 = cljs.core.next.call(null, G__17381__17382);
          G__17381__17382 = G__17407;
          continue
        }else {
        }
      }
      break
    }
    var l__17401 = cljs.core.deref.call(null, label__17380);
    var extent__17402 = cljs.core.PersistentVector.fromArray([cljs.core.truth_(clamp_QMARK___17376) ? d_min__17372 : (new cljs.core.Keyword("\ufdd0'min")).call(null, l__17401) < d_min__17372 ? (new cljs.core.Keyword("\ufdd0'min")).call(null, l__17401) : d_min__17372, cljs.core.truth_(clamp_QMARK___17376) ? d_max__17373 : (new cljs.core.Keyword("\ufdd0'max")).call(null, l__17401) > d_max__17373 ? (new cljs.core.Keyword("\ufdd0'max")).call(null, l__17401) : d_max__17373], true);
    return cljs.core.ObjMap.fromObject(["\ufdd0'extent", "\ufdd0'min", "\ufdd0'max", "\ufdd0'ticks"], {"\ufdd0'extent":extent__17402, "\ufdd0'min":cljs.core.first.call(null, extent__17402), "\ufdd0'max":cljs.core.second.call(null, extent__17402), "\ufdd0'ticks":cljs.core.filter.call(null, function(p1__155990_SHARP_) {
      return c2.maths.within_QMARK_.call(null, p1__155990_SHARP_, extent__17402)
    }, c2.maths.irange.call(null, (new cljs.core.Keyword("\ufdd0'min")).call(null, l__17401), (new cljs.core.Keyword("\ufdd0'max")).call(null, l__17401), (new cljs.core.Keyword("\ufdd0'step")).call(null, l__17401)))})
  };
  var search = function(p__17333, var_args) {
    var p__17334 = null;
    if(goog.isDef(var_args)) {
      p__17334 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return search__delegate.call(this, p__17333, p__17334)
  };
  search.cljs$lang$maxFixedArity = 1;
  search.cljs$lang$applyTo = function(arglist__17408) {
    var p__17333 = cljs.core.first(arglist__17408);
    var p__17334 = cljs.core.rest(arglist__17408);
    return search__delegate(p__17333, p__17334)
  };
  search.cljs$lang$arity$variadic = search__delegate;
  return search
}();
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3822__auto____17414 = reader;
    if(and__3822__auto____17414) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3822__auto____17414
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__2264__auto____17415 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____17416 = cljs.reader.read_char[goog.typeOf(x__2264__auto____17415)];
      if(or__3824__auto____17416) {
        return or__3824__auto____17416
      }else {
        var or__3824__auto____17417 = cljs.reader.read_char["_"];
        if(or__3824__auto____17417) {
          return or__3824__auto____17417
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3822__auto____17422 = reader;
    if(and__3822__auto____17422) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3822__auto____17422
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__2264__auto____17423 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____17424 = cljs.reader.unread[goog.typeOf(x__2264__auto____17423)];
      if(or__3824__auto____17424) {
        return or__3824__auto____17424
      }else {
        var or__3824__auto____17425 = cljs.reader.unread["_"];
        if(or__3824__auto____17425) {
          return or__3824__auto____17425
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
cljs.reader.StringPushbackReader = function(s, index_atom, buffer_atom) {
  this.s = s;
  this.index_atom = index_atom;
  this.buffer_atom = buffer_atom
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var this__17426 = this;
  if(cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, this__17426.buffer_atom))) {
    var idx__17427 = cljs.core.deref.call(null, this__17426.index_atom);
    cljs.core.swap_BANG_.call(null, this__17426.index_atom, cljs.core.inc);
    return this__17426.s[idx__17427]
  }else {
    var buf__17428 = cljs.core.deref.call(null, this__17426.buffer_atom);
    cljs.core.swap_BANG_.call(null, this__17426.buffer_atom, cljs.core.rest);
    return cljs.core.first.call(null, buf__17428)
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var this__17429 = this;
  return cljs.core.swap_BANG_.call(null, this__17429.buffer_atom, function(p1__17409_SHARP_) {
    return cljs.core.cons.call(null, ch, p1__17409_SHARP_)
  })
};
cljs.reader.StringPushbackReader;
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3824__auto____17431 = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3824__auto____17431)) {
    return or__3824__auto____17431
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3824__auto____17436 = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3824__auto____17436) {
    return or__3824__auto____17436
  }else {
    var and__3822__auto____17438 = function() {
      var or__3824__auto____17437 = "+" === initch;
      if(or__3824__auto____17437) {
        return or__3824__auto____17437
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3822__auto____17438)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch__17439 = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch__17439);
        return next_ch__17439
      }())
    }else {
      return and__3822__auto____17438
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(goog.isDef(var_args)) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__17440) {
    var rdr = cljs.core.first(arglist__17440);
    var msg = cljs.core.rest(arglist__17440);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$lang$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3822__auto____17444 = !(ch === "#");
  if(and__3822__auto____17444) {
    var and__3822__auto____17445 = !(ch === "'");
    if(and__3822__auto____17445) {
      var and__3822__auto____17446 = !(ch === ":");
      if(and__3822__auto____17446) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3822__auto____17446
      }
    }else {
      return and__3822__auto____17445
    }
  }else {
    return and__3822__auto____17444
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb__17451 = new goog.string.StringBuffer(initch);
  var ch__17452 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3824__auto____17453 = ch__17452 == null;
      if(or__3824__auto____17453) {
        return or__3824__auto____17453
      }else {
        var or__3824__auto____17454 = cljs.reader.whitespace_QMARK_.call(null, ch__17452);
        if(or__3824__auto____17454) {
          return or__3824__auto____17454
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch__17452)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch__17452);
      return sb__17451.toString()
    }else {
      var G__17455 = function() {
        sb__17451.append(ch__17452);
        return sb__17451
      }();
      var G__17456 = cljs.reader.read_char.call(null, rdr);
      sb__17451 = G__17455;
      ch__17452 = G__17456;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch__17460 = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3824__auto____17461 = ch__17460 === "n";
      if(or__3824__auto____17461) {
        return or__3824__auto____17461
      }else {
        var or__3824__auto____17462 = ch__17460 === "r";
        if(or__3824__auto____17462) {
          return or__3824__auto____17462
        }else {
          return ch__17460 == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches__17464 = re.exec(s);
  if(matches__17464 == null) {
    return null
  }else {
    if(matches__17464.length === 1) {
      return matches__17464[0]
    }else {
      return matches__17464
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups__17472 = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3__17473 = groups__17472[2];
  if(!function() {
    var or__3824__auto____17474 = group3__17473 == null;
    if(or__3824__auto____17474) {
      return or__3824__auto____17474
    }else {
      return group3__17473.length < 1
    }
  }()) {
    return 0
  }else {
    var negate__17475 = "-" === groups__17472[1] ? -1 : 1;
    var a__17476 = cljs.core.truth_(groups__17472[3]) ? [groups__17472[3], 10] : cljs.core.truth_(groups__17472[4]) ? [groups__17472[4], 16] : cljs.core.truth_(groups__17472[5]) ? [groups__17472[5], 8] : cljs.core.truth_(groups__17472[7]) ? [groups__17472[7], parseInt(groups__17472[7])] : "\ufdd0'default" ? [null, null] : null;
    var n__17477 = a__17476[0];
    var radix__17478 = a__17476[1];
    if(n__17477 == null) {
      return null
    }else {
      return negate__17475 * parseInt(n__17477, radix__17478)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups__17482 = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator__17483 = groups__17482[1];
  var denominator__17484 = groups__17482[2];
  return parseInt(numinator__17483) / parseInt(denominator__17484)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches__17487 = re.exec(s);
  if(function() {
    var and__3822__auto____17488 = !(matches__17487 == null);
    if(and__3822__auto____17488) {
      return matches__17487[0] === s
    }else {
      return and__3822__auto____17488
    }
  }()) {
    if(matches__17487.length === 1) {
      return matches__17487[0]
    }else {
      return matches__17487
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\u0008"
            }else {
              if(c === "f") {
                return"\u000c"
              }else {
                if("\ufdd0'else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code__17490 = parseInt(code_str, 16);
  return String.fromCharCode(code__17490)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch__17493 = cljs.reader.read_char.call(null, reader);
  var mapresult__17494 = cljs.reader.escape_char_map.call(null, ch__17493);
  if(cljs.core.truth_(mapresult__17494)) {
    return mapresult__17494
  }else {
    if(ch__17493 === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch__17493, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch__17493 === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch__17493, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch__17493)) {
          return String.fromCharCode(ch__17493)
        }else {
          if("\ufdd0'else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch__17493)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch__17496 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch__17496))) {
      var G__17497 = cljs.reader.read_char.call(null, rdr);
      ch__17496 = G__17497;
      continue
    }else {
      return ch__17496
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a__17504 = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch__17505 = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch__17505)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF")
    }
    if(delim === ch__17505) {
      return cljs.core.persistent_BANG_.call(null, a__17504)
    }else {
      var temp__3971__auto____17506 = cljs.reader.macros.call(null, ch__17505);
      if(cljs.core.truth_(temp__3971__auto____17506)) {
        var macrofn__17507 = temp__3971__auto____17506;
        var mret__17508 = macrofn__17507.call(null, rdr, ch__17505);
        var G__17510 = mret__17508 === rdr ? a__17504 : cljs.core.conj_BANG_.call(null, a__17504, mret__17508);
        a__17504 = G__17510;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch__17505);
        var o__17509 = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__17511 = o__17509 === rdr ? a__17504 : cljs.core.conj_BANG_.call(null, a__17504, o__17509);
        a__17504 = G__17511;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch__17516 = cljs.reader.read_char.call(null, rdr);
  var dm__17517 = cljs.reader.dispatch_macros.call(null, ch__17516);
  if(cljs.core.truth_(dm__17517)) {
    return dm__17517.call(null, rdr, _)
  }else {
    var temp__3971__auto____17518 = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch__17516);
    if(cljs.core.truth_(temp__3971__auto____17518)) {
      var obj__17519 = temp__3971__auto____17518;
      return obj__17519
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch__17516)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l__17521 = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l__17521))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l__17521)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer__17528 = new goog.string.StringBuffer(initch);
  var ch__17529 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____17530 = ch__17529 == null;
      if(or__3824__auto____17530) {
        return or__3824__auto____17530
      }else {
        var or__3824__auto____17531 = cljs.reader.whitespace_QMARK_.call(null, ch__17529);
        if(or__3824__auto____17531) {
          return or__3824__auto____17531
        }else {
          return cljs.reader.macros.call(null, ch__17529)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch__17529);
      var s__17532 = buffer__17528.toString();
      var or__3824__auto____17533 = cljs.reader.match_number.call(null, s__17532);
      if(cljs.core.truth_(or__3824__auto____17533)) {
        return or__3824__auto____17533
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s__17532, "]")
      }
    }else {
      var G__17534 = function() {
        buffer__17528.append(ch__17529);
        return buffer__17528
      }();
      var G__17535 = cljs.reader.read_char.call(null, reader);
      buffer__17528 = G__17534;
      ch__17529 = G__17535;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer__17538 = new goog.string.StringBuffer;
  var ch__17539 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch__17539 == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading string")
    }else {
      if("\\" === ch__17539) {
        var G__17540 = function() {
          buffer__17538.append(cljs.reader.escape_char.call(null, buffer__17538, reader));
          return buffer__17538
        }();
        var G__17541 = cljs.reader.read_char.call(null, reader);
        buffer__17538 = G__17540;
        ch__17539 = G__17541;
        continue
      }else {
        if('"' === ch__17539) {
          return buffer__17538.toString()
        }else {
          if("\ufdd0'default") {
            var G__17542 = function() {
              buffer__17538.append(ch__17539);
              return buffer__17538
            }();
            var G__17543 = cljs.reader.read_char.call(null, reader);
            buffer__17538 = G__17542;
            ch__17539 = G__17543;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token__17545 = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token__17545, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token__17545, 0, token__17545.indexOf("/")), cljs.core.subs.call(null, token__17545, token__17545.indexOf("/") + 1, token__17545.length))
  }else {
    return cljs.reader.special_symbols.call(null, token__17545, cljs.core.symbol.call(null, token__17545))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token__17555 = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a__17556 = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token__17555);
  var token__17557 = a__17556[0];
  var ns__17558 = a__17556[1];
  var name__17559 = a__17556[2];
  if(cljs.core.truth_(function() {
    var or__3824__auto____17561 = function() {
      var and__3822__auto____17560 = !(void 0 === ns__17558);
      if(and__3822__auto____17560) {
        return ns__17558.substring(ns__17558.length - 2, ns__17558.length) === ":/"
      }else {
        return and__3822__auto____17560
      }
    }();
    if(cljs.core.truth_(or__3824__auto____17561)) {
      return or__3824__auto____17561
    }else {
      var or__3824__auto____17562 = name__17559[name__17559.length - 1] === ":";
      if(or__3824__auto____17562) {
        return or__3824__auto____17562
      }else {
        return!(token__17557.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__17557)
  }else {
    if(function() {
      var and__3822__auto____17563 = !(ns__17558 == null);
      if(and__3822__auto____17563) {
        return ns__17558.length > 0
      }else {
        return and__3822__auto____17563
      }
    }()) {
      return cljs.core.keyword.call(null, ns__17558.substring(0, ns__17558.indexOf("/")), name__17559)
    }else {
      return cljs.core.keyword.call(null, token__17557)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(cljs.core.symbol_QMARK_.call(null, f)) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArrays([f], [true])
      }else {
        if("\ufdd0'else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m__17569 = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m__17569)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o__17570 = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__17571__17572 = o__17570;
    if(G__17571__17572) {
      if(function() {
        var or__3824__auto____17573 = G__17571__17572.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3824__auto____17573) {
          return or__3824__auto____17573
        }else {
          return G__17571__17572.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__17571__17572.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__17571__17572)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__17571__17572)
    }
  }()) {
    return cljs.core.with_meta.call(null, o__17570, cljs.core.merge.call(null, cljs.core.meta.call(null, o__17570), m__17569))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, "\ufdd1'quote")
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, "\ufdd1'deref")
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0'else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "<") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0'else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch__17577 = cljs.reader.read_char.call(null, reader);
    if(ch__17577 == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch__17577)) {
        var G__17580 = reader;
        var G__17581 = eof_is_error;
        var G__17582 = sentinel;
        var G__17583 = is_recursive;
        reader = G__17580;
        eof_is_error = G__17581;
        sentinel = G__17582;
        is_recursive = G__17583;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch__17577)) {
          var G__17584 = cljs.reader.read_comment.call(null, reader, ch__17577);
          var G__17585 = eof_is_error;
          var G__17586 = sentinel;
          var G__17587 = is_recursive;
          reader = G__17584;
          eof_is_error = G__17585;
          sentinel = G__17586;
          is_recursive = G__17587;
          continue
        }else {
          if("\ufdd0'else") {
            var f__17578 = cljs.reader.macros.call(null, ch__17577);
            var res__17579 = cljs.core.truth_(f__17578) ? f__17578.call(null, reader, ch__17577) : cljs.reader.number_literal_QMARK_.call(null, reader, ch__17577) ? cljs.reader.read_number.call(null, reader, ch__17577) : "\ufdd0'else" ? cljs.reader.read_symbol.call(null, reader, ch__17577) : null;
            if(res__17579 === reader) {
              var G__17588 = reader;
              var G__17589 = eof_is_error;
              var G__17590 = sentinel;
              var G__17591 = is_recursive;
              reader = G__17588;
              eof_is_error = G__17589;
              sentinel = G__17590;
              is_recursive = G__17591;
              continue
            }else {
              return res__17579
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r__17593 = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r__17593, true, null, false)
};
cljs.reader.zero_fill_right = function zero_fill_right(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return s.substring(0, width)
    }else {
      if("\ufdd0'else") {
        var b__17595 = new goog.string.StringBuffer(s);
        while(true) {
          if(b__17595.getLength() < width) {
            var G__17596 = b__17595.append("0");
            b__17595 = G__17596;
            continue
          }else {
            return b__17595.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return num % div === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3822__auto____17599 = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3822__auto____17599)) {
    var or__3824__auto____17600 = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3824__auto____17600)) {
      return or__3824__auto____17600
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3822__auto____17599
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm__17605 = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap__17606 = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core._lookup.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap__17606 : dim_norm__17605, month, null)
  }
}();
cljs.reader.parse_and_validate_timestamp = function() {
  var timestamp__17607 = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
  var check__17609 = function(low, n, high, msg) {
    if(function() {
      var and__3822__auto____17608 = low <= n;
      if(and__3822__auto____17608) {
        return n <= high
      }else {
        return and__3822__auto____17608
      }
    }()) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'<=", "\ufdd1'low", "\ufdd1'n", "\ufdd1'high"), cljs.core.hash_map("\ufdd0'line", 474))))].join(""));
    }
    return n
  };
  return function(ts) {
    var temp__3974__auto____17610 = cljs.core.map.call(null, cljs.core.vec, cljs.core.split_at.call(null, 8, cljs.core.re_matches.call(null, timestamp__17607, ts)));
    if(cljs.core.truth_(temp__3974__auto____17610)) {
      var vec__17611__17614 = temp__3974__auto____17610;
      var vec__17612__17615 = cljs.core.nth.call(null, vec__17611__17614, 0, null);
      var ___17616 = cljs.core.nth.call(null, vec__17612__17615, 0, null);
      var years__17617 = cljs.core.nth.call(null, vec__17612__17615, 1, null);
      var months__17618 = cljs.core.nth.call(null, vec__17612__17615, 2, null);
      var days__17619 = cljs.core.nth.call(null, vec__17612__17615, 3, null);
      var hours__17620 = cljs.core.nth.call(null, vec__17612__17615, 4, null);
      var minutes__17621 = cljs.core.nth.call(null, vec__17612__17615, 5, null);
      var seconds__17622 = cljs.core.nth.call(null, vec__17612__17615, 6, null);
      var milliseconds__17623 = cljs.core.nth.call(null, vec__17612__17615, 7, null);
      var vec__17613__17624 = cljs.core.nth.call(null, vec__17611__17614, 1, null);
      var ___17625 = cljs.core.nth.call(null, vec__17613__17624, 0, null);
      var ___17626 = cljs.core.nth.call(null, vec__17613__17624, 1, null);
      var ___17627 = cljs.core.nth.call(null, vec__17613__17624, 2, null);
      var V__17628 = vec__17611__17614;
      var vec__17629__17632 = cljs.core.map.call(null, function(v) {
        return cljs.core.map.call(null, function(p1__17604_SHARP_) {
          return parseInt(p1__17604_SHARP_, 10)
        }, v)
      }, cljs.core.map.call(null, function(p1__17602_SHARP_, p2__17601_SHARP_) {
        return cljs.core.update_in.call(null, p2__17601_SHARP_, cljs.core.PersistentVector.fromArray([0], true), p1__17602_SHARP_)
      }, cljs.core.PersistentVector.fromArray([cljs.core.constantly.call(null, null), function(p1__17603_SHARP_) {
        if(cljs.core._EQ_.call(null, p1__17603_SHARP_, "-")) {
          return"-1"
        }else {
          return"1"
        }
      }], true), V__17628));
      var vec__17630__17633 = cljs.core.nth.call(null, vec__17629__17632, 0, null);
      var ___17634 = cljs.core.nth.call(null, vec__17630__17633, 0, null);
      var y__17635 = cljs.core.nth.call(null, vec__17630__17633, 1, null);
      var mo__17636 = cljs.core.nth.call(null, vec__17630__17633, 2, null);
      var d__17637 = cljs.core.nth.call(null, vec__17630__17633, 3, null);
      var h__17638 = cljs.core.nth.call(null, vec__17630__17633, 4, null);
      var m__17639 = cljs.core.nth.call(null, vec__17630__17633, 5, null);
      var s__17640 = cljs.core.nth.call(null, vec__17630__17633, 6, null);
      var ms__17641 = cljs.core.nth.call(null, vec__17630__17633, 7, null);
      var vec__17631__17642 = cljs.core.nth.call(null, vec__17629__17632, 1, null);
      var offset_sign__17643 = cljs.core.nth.call(null, vec__17631__17642, 0, null);
      var offset_hours__17644 = cljs.core.nth.call(null, vec__17631__17642, 1, null);
      var offset_minutes__17645 = cljs.core.nth.call(null, vec__17631__17642, 2, null);
      var offset__17646 = offset_sign__17643 * (offset_hours__17644 * 60 + offset_minutes__17645);
      return cljs.core.PersistentVector.fromArray([cljs.core.not.call(null, years__17617) ? 1970 : y__17635, cljs.core.not.call(null, months__17618) ? 1 : check__17609.call(null, 1, mo__17636, 12, "timestamp month field must be in range 1..12"), cljs.core.not.call(null, days__17619) ? 1 : check__17609.call(null, 1, d__17637, cljs.reader.days_in_month.call(null, mo__17636, cljs.reader.leap_year_QMARK_.call(null, y__17635)), "timestamp day field must be in range 1..last day in month"), cljs.core.not.call(null, 
      hours__17620) ? 0 : check__17609.call(null, 0, h__17638, 23, "timestamp hour field must be in range 0..23"), cljs.core.not.call(null, minutes__17621) ? 0 : check__17609.call(null, 0, m__17639, 59, "timestamp minute field must be in range 0..59"), cljs.core.not.call(null, seconds__17622) ? 0 : check__17609.call(null, 0, s__17640, cljs.core._EQ_.call(null, m__17639, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.core.not.call(null, milliseconds__17623) ? 0 : check__17609.call(null, 
      0, ms__17641, 999, "timestamp millisecond field must be in range 0..999"), offset__17646], true)
    }else {
      return null
    }
  }
}();
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__3971__auto____17658 = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__3971__auto____17658)) {
    var vec__17659__17660 = temp__3971__auto____17658;
    var years__17661 = cljs.core.nth.call(null, vec__17659__17660, 0, null);
    var months__17662 = cljs.core.nth.call(null, vec__17659__17660, 1, null);
    var days__17663 = cljs.core.nth.call(null, vec__17659__17660, 2, null);
    var hours__17664 = cljs.core.nth.call(null, vec__17659__17660, 3, null);
    var minutes__17665 = cljs.core.nth.call(null, vec__17659__17660, 4, null);
    var seconds__17666 = cljs.core.nth.call(null, vec__17659__17660, 5, null);
    var ms__17667 = cljs.core.nth.call(null, vec__17659__17660, 6, null);
    var offset__17668 = cljs.core.nth.call(null, vec__17659__17660, 7, null);
    return new Date(Date.UTC(years__17661, months__17662 - 1, days__17663, hours__17664, minutes__17665, seconds__17666, ms__17667) - offset__17668 * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["inst", "uuid", "queue"], {"inst":cljs.reader.read_date, "uuid":cljs.reader.read_uuid, "queue":cljs.reader.read_queue}));
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag__17672 = cljs.reader.read_symbol.call(null, rdr, initch);
  var temp__3971__auto____17673 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), cljs.core.name.call(null, tag__17672), null);
  if(cljs.core.truth_(temp__3971__auto____17673)) {
    var pfn__17674 = temp__3971__auto____17673;
    return pfn__17674.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", cljs.core.name.call(null, tag__17672), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__17677 = cljs.core.name.call(null, tag);
  var old_parser__17678 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__17677, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__17677, f);
  return old_parser__17678
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__17681 = cljs.core.name.call(null, tag);
  var old_parser__17682 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__17681, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__17681);
  return old_parser__17682
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.setIgnoreCase(opt_ignoreCase == null ? opt_uri.getIgnoreCase() : opt_ignoreCase);
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQuery(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.queryData_ = new goog.Uri.QueryData(null, this, this.ignoreCase_)
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  if(this.cachedToString_) {
    return this.cachedToString_
  }
  var out = [];
  if(this.scheme_) {
    out.push(goog.Uri.encodeSpecialChars_(this.scheme_, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  if(this.domain_) {
    out.push("//");
    if(this.userInfo_) {
      out.push(goog.Uri.encodeSpecialChars_(this.userInfo_, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.Uri.encodeString_(this.domain_));
    if(this.port_ != null) {
      out.push(":", String(this.getPort()))
    }
  }
  if(this.path_) {
    if(this.hasDomain() && this.path_.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(this.path_, this.path_.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_))
  }
  var query = String(this.queryData_);
  if(query) {
    out.push("?", query)
  }
  if(this.fragment_) {
    out.push("#", goog.Uri.encodeSpecialChars_(this.fragment_, goog.Uri.reDisallowedInFragment_))
  }
  return this.cachedToString_ = out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQuery(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return goog.Uri.create(this.scheme_, this.userInfo_, this.domain_, this.port_, this.path_, this.queryData_.clone(), this.fragment_, this.ignoreCase_)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.uri_ = this;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, this, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeString_ = function(unescapedPart) {
  if(goog.isString(unescapedPart)) {
    return encodeURIComponent(unescapedPart)
  }
  return null
};
goog.Uri.encodeSpecialRegExp_ = /^[a-zA-Z0-9\-_.!~*'():\/;?]*$/;
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  var ret = null;
  if(goog.isString(unescapedPart)) {
    ret = unescapedPart;
    if(!goog.Uri.encodeSpecialRegExp_.test(ret)) {
      ret = encodeURI(unescapedPart)
    }
    if(ret.search(extra) >= 0) {
      ret = ret.replace(extra, goog.Uri.encodeChar_)
    }
  }
  return ret
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.uri_ = opt_uri || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("&");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("=");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  return goog.Uri.QueryData.createFromKeysValues(keys, goog.structs.getValues(map), opt_uri, opt_ignoreCase)
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, opt_uri, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.decodedQuery_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(!this.containsKey(key)) {
    this.keyMap_.set(key, value)
  }else {
    var current = this.keyMap_.get(key);
    if(goog.isArray(current)) {
      current.push(value)
    }else {
      this.keyMap_.set(key, [current, value])
    }
  }
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  if(this.keyMap_) {
    this.keyMap_.clear()
  }
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        rv.push(keys[i])
      }
    }else {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv;
  if(opt_key) {
    var key = this.getKeyName_(opt_key);
    if(this.containsKey(key)) {
      var value = this.keyMap_.get(key);
      if(goog.isArray(value)) {
        return value
      }else {
        rv = [];
        rv.push(value)
      }
    }else {
      rv = []
    }
  }else {
    var vals = this.keyMap_.getValues();
    rv = [];
    for(var i = 0;i < vals.length;i++) {
      var val = vals[i];
      if(goog.isArray(val)) {
        goog.array.extend(rv, val)
      }else {
        rv.push(val)
      }
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  this.keyMap_.set(key, value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      return val[0]
    }else {
      return val
    }
  }else {
    return opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  if(values.length > 0) {
    this.keyMap_.set(key, values);
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var count = 0;
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        if(count > 0) {
          sb.push("&")
        }
        sb.push(encodedKey);
        if(val[j] !== "") {
          sb.push("=", goog.string.urlEncode(val[j]))
        }
        count++
      }
    }else {
      if(count > 0) {
        sb.push("&")
      }
      sb.push(encodedKey);
      if(val !== "") {
        sb.push("=", goog.string.urlEncode(val))
      }
      count++
    }
  }
  return this.encodedQuery_ = sb.join("")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  if(!this.decodedQuery_) {
    this.decodedQuery_ = goog.Uri.decodeOrEmpty_(this.toString())
  }
  return this.decodedQuery_
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  delete this.decodedQuery_;
  delete this.encodedQuery_;
  if(this.uri_) {
    delete this.uri_.cachedToString_
  }
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  if(this.decodedQuery_) {
    rv.decodedQuery_ = this.decodedQuery_
  }
  if(this.encodedQuery_) {
    rv.encodedQuery_ = this.encodedQuery_
  }
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone()
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key, map) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.add(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
goog.provide("goog.net.Cookies");
goog.provide("goog.net.cookies");
goog.require("goog.userAgent");
goog.net.Cookies = function(context) {
  this.document_ = context
};
goog.net.Cookies.MAX_COOKIE_LENGTH = 3950;
goog.net.Cookies.SPLIT_RE_ = /\s*;\s*/;
goog.net.Cookies.TEST_COOKIE_NAME_ = "COOKIES_TEST_";
goog.net.Cookies.prototype.isEnabled = function() {
  var isEnabled = this.isNavigatorCookieEnabled_();
  if(isEnabled && goog.userAgent.WEBKIT) {
    var cookieName = goog.net.Cookies.TEST_COOKIE_NAME_ + goog.now();
    goog.net.cookies.set(cookieName, "1");
    if(!this.get(cookieName)) {
      return false
    }
    this.remove(cookieName)
  }
  return isEnabled
};
goog.net.Cookies.prototype.isValidName = function(name) {
  return!/[;=\s]/.test(name)
};
goog.net.Cookies.prototype.isValidValue = function(value) {
  return!/[;\r\n]/.test(value)
};
goog.net.Cookies.prototype.set = function(name, value, opt_maxAge, opt_path, opt_domain, opt_secure) {
  if(!this.isValidName(name)) {
    throw Error('Invalid cookie name "' + name + '"');
  }
  if(!this.isValidValue(value)) {
    throw Error('Invalid cookie value "' + value + '"');
  }
  if(!goog.isDef(opt_maxAge)) {
    opt_maxAge = -1
  }
  var domainStr = opt_domain ? ";domain=" + opt_domain : "";
  var pathStr = opt_path ? ";path=" + opt_path : "";
  var secureStr = opt_secure ? ";secure" : "";
  var expiresStr;
  if(opt_maxAge < 0) {
    expiresStr = ""
  }else {
    if(opt_maxAge == 0) {
      var pastDate = new Date(1970, 1, 1);
      expiresStr = ";expires=" + pastDate.toUTCString()
    }else {
      var futureDate = new Date(goog.now() + opt_maxAge * 1E3);
      expiresStr = ";expires=" + futureDate.toUTCString()
    }
  }
  this.setCookie_(name + "=" + value + domainStr + pathStr + expiresStr + secureStr)
};
goog.net.Cookies.prototype.get = function(name, opt_default) {
  var nameEq = name + "=";
  var parts = this.getParts_();
  for(var i = 0, part;part = parts[i];i++) {
    if(part.indexOf(nameEq) == 0) {
      return part.substr(nameEq.length)
    }
  }
  return opt_default
};
goog.net.Cookies.prototype.remove = function(name, opt_path, opt_domain) {
  var rv = this.containsKey(name);
  this.set(name, "", 0, opt_path, opt_domain);
  return rv
};
goog.net.Cookies.prototype.getKeys = function() {
  return this.getKeyValues_().keys
};
goog.net.Cookies.prototype.getValues = function() {
  return this.getKeyValues_().values
};
goog.net.Cookies.prototype.isEmpty = function() {
  return!this.getCookie_()
};
goog.net.Cookies.prototype.getCount = function() {
  var cookie = this.getCookie_();
  if(!cookie) {
    return 0
  }
  return this.getParts_().length
};
goog.net.Cookies.prototype.containsKey = function(key) {
  return goog.isDef(this.get(key))
};
goog.net.Cookies.prototype.containsValue = function(value) {
  var values = this.getKeyValues_().values;
  for(var i = 0;i < values.length;i++) {
    if(values[i] == value) {
      return true
    }
  }
  return false
};
goog.net.Cookies.prototype.clear = function() {
  var keys = this.getKeyValues_().keys;
  for(var i = keys.length - 1;i >= 0;i--) {
    this.remove(keys[i])
  }
};
goog.net.Cookies.prototype.setCookie_ = function(s) {
  this.document_.cookie = s
};
goog.net.Cookies.prototype.getCookie_ = function() {
  return this.document_.cookie
};
goog.net.Cookies.prototype.getParts_ = function() {
  return(this.getCookie_() || "").split(goog.net.Cookies.SPLIT_RE_)
};
goog.net.Cookies.prototype.isNavigatorCookieEnabled_ = function() {
  return navigator.cookieEnabled
};
goog.net.Cookies.prototype.getKeyValues_ = function() {
  var parts = this.getParts_();
  var keys = [], values = [], index, part;
  for(var i = 0;part = parts[i];i++) {
    index = part.indexOf("=");
    if(index == -1) {
      keys.push("");
      values.push(part)
    }else {
      keys.push(part.substring(0, index));
      values.push(part.substring(index + 1))
    }
  }
  return{keys:keys, values:values}
};
goog.net.cookies = new goog.net.Cookies(document);
goog.net.cookies.MAX_COOKIE_LENGTH = goog.net.Cookies.MAX_COOKIE_LENGTH;
goog.provide("shoreleave.browser.cookies");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.net.Cookies");
goog.net.Cookies.prototype.cljs$core$IHash$ = true;
goog.net.Cookies.prototype.cljs$core$IHash$_hash$arity$1 = function(c) {
  return cljs.core._hash.call(null, cljs.core._persistent_BANG_.call(null, c))
};
goog.net.Cookies.prototype.cljs$core$ILookup$ = true;
goog.net.Cookies.prototype.cljs$core$ILookup$_lookup$arity$2 = function(c, k) {
  return cljs.core._lookup.call(null, c, k, null)
};
goog.net.Cookies.prototype.cljs$core$ILookup$_lookup$arity$3 = function(c, k, not_found) {
  var v__17968 = c.get(cljs.core.name.call(null, k), not_found);
  if(cljs.core.string_QMARK_.call(null, v__17968)) {
    return goog.string.urlDecode(v__17968)
  }else {
    return v__17968
  }
};
goog.net.Cookies.prototype.cljs$core$IAssociative$ = true;
goog.net.Cookies.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(c, k, v) {
  return cljs.core._assoc.call(null, cljs.core._persistent_BANG_.call(null, c), k, v)
};
goog.net.Cookies.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(c, k) {
  return c.containsKey(cljs.core.name.call(null, k))
};
goog.net.Cookies.prototype.cljs$core$IFn$ = true;
goog.net.Cookies.prototype.call = function() {
  var G__17993 = null;
  var G__17993__2 = function(this_sym17969, k) {
    var this_sym17969__17971 = this;
    var c__17972 = this_sym17969__17971;
    return cljs.core._lookup.call(null, c__17972, k)
  };
  var G__17993__3 = function(this_sym17970, k, not_found) {
    var this_sym17970__17973 = this;
    var c__17974 = this_sym17970__17973;
    return cljs.core._lookup.call(null, c__17974, k, not_found)
  };
  G__17993 = function(this_sym17970, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17993__2.call(this, this_sym17970, k);
      case 3:
        return G__17993__3.call(this, this_sym17970, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__17993
}();
goog.net.Cookies.prototype.apply = function(this_sym17966, args17967) {
  return this_sym17966.call.apply(this_sym17966, [this_sym17966].concat(args17967.slice()))
};
goog.net.Cookies.prototype.cljs$core$ITransientMap$ = true;
goog.net.Cookies.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$4 = function() {
  var G__17994__delegate = function(c, k, opts) {
    var temp__3974__auto____17976 = function() {
      var and__3822__auto____17975 = c.isValidName(cljs.core.name.call(null, k));
      if(cljs.core.truth_(and__3822__auto____17975)) {
        return cljs.core.name.call(null, k)
      }else {
        return and__3822__auto____17975
      }
    }();
    if(cljs.core.truth_(temp__3974__auto____17976)) {
      var k__17977 = temp__3974__auto____17976;
      var map__17978__17979 = cljs.core.apply.call(null, cljs.core.hash_map, opts);
      var map__17978__17980 = cljs.core.seq_QMARK_.call(null, map__17978__17979) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17978__17979) : map__17978__17979;
      var domain__17981 = cljs.core._lookup.call(null, map__17978__17980, "\ufdd0'domain", null);
      var path__17982 = cljs.core._lookup.call(null, map__17978__17980, "\ufdd0'path", null);
      return c.remove(k__17977, path__17982, domain__17981)
    }else {
      return null
    }
  };
  var G__17994 = function(c, k, var_args) {
    var opts = null;
    if(goog.isDef(var_args)) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return G__17994__delegate.call(this, c, k, opts)
  };
  G__17994.cljs$lang$maxFixedArity = 2;
  G__17994.cljs$lang$applyTo = function(arglist__17995) {
    var c = cljs.core.first(arglist__17995);
    var k = cljs.core.first(cljs.core.next(arglist__17995));
    var opts = cljs.core.rest(cljs.core.next(arglist__17995));
    return G__17994__delegate(c, k, opts)
  };
  G__17994.cljs$lang$arity$variadic = G__17994__delegate;
  return G__17994
}();
goog.net.Cookies.prototype.cljs$core$ISeqable$ = true;
goog.net.Cookies.prototype.cljs$core$ISeqable$_seq$arity$1 = function(c) {
  return cljs.core.map.call(null, cljs.core.vector, c.getKeys(), c.getValues())
};
goog.net.Cookies.prototype.cljs$core$IPrintable$ = true;
goog.net.Cookies.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(c, opts) {
  return cljs.core._pr_seq.call(null, cljs.core._persistent_BANG_.call(null, c), opts)
};
goog.net.Cookies.prototype.cljs$core$ICounted$ = true;
goog.net.Cookies.prototype.cljs$core$ICounted$_count$arity$1 = function(c) {
  return c.getCount()
};
goog.net.Cookies.prototype.cljs$core$ITransientCollection$ = true;
goog.net.Cookies.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(c) {
  return shoreleave.browser.cookies.as_hash_map.call(null, c)
};
goog.net.Cookies.prototype.cljs$core$ITransientAssociative$ = true;
goog.net.Cookies.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$5 = function() {
  var G__17996__delegate = function(c, k, v, opts) {
    var temp__3974__auto____17984 = function() {
      var and__3822__auto____17983 = c.isValidName(cljs.core.name.call(null, k));
      if(cljs.core.truth_(and__3822__auto____17983)) {
        return cljs.core.name.call(null, k)
      }else {
        return and__3822__auto____17983
      }
    }();
    if(cljs.core.truth_(temp__3974__auto____17984)) {
      var k__17985 = temp__3974__auto____17984;
      var map__17986__17987 = cljs.core.apply.call(null, cljs.core.hash_map, opts);
      var map__17986__17988 = cljs.core.seq_QMARK_.call(null, map__17986__17987) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17986__17987) : map__17986__17987;
      var secure_QMARK___17989 = cljs.core._lookup.call(null, map__17986__17988, "\ufdd0'secure?", null);
      var domain__17990 = cljs.core._lookup.call(null, map__17986__17988, "\ufdd0'domain", null);
      var path__17991 = cljs.core._lookup.call(null, map__17986__17988, "\ufdd0'path", null);
      var max_age__17992 = cljs.core._lookup.call(null, map__17986__17988, "\ufdd0'max-age", null);
      return c.set(k__17985, v, max_age__17992, path__17991, domain__17990, secure_QMARK___17989)
    }else {
      return null
    }
  };
  var G__17996 = function(c, k, v, var_args) {
    var opts = null;
    if(goog.isDef(var_args)) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return G__17996__delegate.call(this, c, k, v, opts)
  };
  G__17996.cljs$lang$maxFixedArity = 3;
  G__17996.cljs$lang$applyTo = function(arglist__17997) {
    var c = cljs.core.first(arglist__17997);
    var k = cljs.core.first(cljs.core.next(arglist__17997));
    var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__17997)));
    var opts = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__17997)));
    return G__17996__delegate(c, k, v, opts)
  };
  G__17996.cljs$lang$arity$variadic = G__17996__delegate;
  return G__17996
}();
shoreleave.browser.cookies.cookies = new goog.net.Cookies(document);
shoreleave.browser.cookies.as_hash_map = function() {
  var as_hash_map = null;
  var as_hash_map__0 = function() {
    return as_hash_map.call(null, shoreleave.browser.cookies.cookies)
  };
  var as_hash_map__1 = function(cks) {
    return cljs.core.zipmap.call(null, cks.getKeys(), cks.getValues())
  };
  as_hash_map = function(cks) {
    switch(arguments.length) {
      case 0:
        return as_hash_map__0.call(this);
      case 1:
        return as_hash_map__1.call(this, cks)
    }
    throw"Invalid arity: " + arguments.length;
  };
  as_hash_map.cljs$lang$arity$0 = as_hash_map__0;
  as_hash_map.cljs$lang$arity$1 = as_hash_map__1;
  return as_hash_map
}();
shoreleave.browser.cookies.cookies_enabled_QMARK_ = function() {
  var cookies_enabled_QMARK_ = null;
  var cookies_enabled_QMARK___0 = function() {
    return cookies_enabled_QMARK_.call(null, shoreleave.browser.cookies.cookies)
  };
  var cookies_enabled_QMARK___1 = function(cks) {
    return cks.isEnabled()
  };
  cookies_enabled_QMARK_ = function(cks) {
    switch(arguments.length) {
      case 0:
        return cookies_enabled_QMARK___0.call(this);
      case 1:
        return cookies_enabled_QMARK___1.call(this, cks)
    }
    throw"Invalid arity: " + arguments.length;
  };
  cookies_enabled_QMARK_.cljs$lang$arity$0 = cookies_enabled_QMARK___0;
  cookies_enabled_QMARK_.cljs$lang$arity$1 = cookies_enabled_QMARK___1;
  return cookies_enabled_QMARK_
}();
shoreleave.browser.cookies.empty_BANG_ = function empty_BANG_(cks) {
  return cks.clear()
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
clojure.browser.event.EventType = {};
clojure.browser.event.event_types = function event_types(this$) {
  if(function() {
    var and__3822__auto____17932 = this$;
    if(and__3822__auto____17932) {
      return this$.clojure$browser$event$EventType$event_types$arity$1
    }else {
      return and__3822__auto____17932
    }
  }()) {
    return this$.clojure$browser$event$EventType$event_types$arity$1(this$)
  }else {
    var x__2264__auto____17933 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____17934 = clojure.browser.event.event_types[goog.typeOf(x__2264__auto____17933)];
      if(or__3824__auto____17934) {
        return or__3824__auto____17934
      }else {
        var or__3824__auto____17935 = clojure.browser.event.event_types["_"];
        if(or__3824__auto____17935) {
          return or__3824__auto____17935
        }else {
          throw cljs.core.missing_protocol.call(null, "EventType.event-types", this$);
        }
      }
    }().call(null, this$)
  }
};
Element.prototype.clojure$browser$event$EventType$ = true;
Element.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__17936) {
    var vec__17937__17938 = p__17936;
    var k__17939 = cljs.core.nth.call(null, vec__17937__17938, 0, null);
    var v__17940 = cljs.core.nth.call(null, vec__17937__17938, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__17939.toLowerCase()), v__17940], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
goog.events.EventTarget.prototype.clojure$browser$event$EventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__17941) {
    var vec__17942__17943 = p__17941;
    var k__17944 = cljs.core.nth.call(null, vec__17942__17943, 0, null);
    var v__17945 = cljs.core.nth.call(null, vec__17942__17943, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__17944.toLowerCase()), v__17945], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false)
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen.cljs$lang$arity$3 = listen__3;
  listen.cljs$lang$arity$4 = listen__4;
  return listen
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false)
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once.cljs$lang$arity$3 = listen_once__3;
  listen_once.cljs$lang$arity$4 = listen_once__4;
  return listen_once
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false)
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten.cljs$lang$arity$3 = unlisten__3;
  unlisten.cljs$lang$arity$4 = unlisten__4;
  return unlisten
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key)
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event)
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e)
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount()
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null
};
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.debug.Logger");
goog.require("goog.json");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.base(this);
  this.services_ = {}
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.debug.Logger.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if(opt_connectCb) {
    opt_connectCb()
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload}
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if(!service) {
    return
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if(goog.isDefAndNotNull(decodedPayload)) {
    service.callback(decodedPayload)
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if(service) {
    return service
  }else {
    if(this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload}
    }
  }
  this.logger.warning('Unknown service name "' + serviceName + '"');
  return null
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if(objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload)
    }catch(err) {
      this.logger.warning("Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null
    }
  }else {
    if(!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload)
    }
  }
  return payload
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  goog.dispose(this.logger);
  delete this.logger;
  delete this.services_;
  delete this.defaultService_
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.debug.Logger");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.channels_ = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while(length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength))
  }
  return s
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.debug.Logger.getLogger("goog.net.xpc");
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper()
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow()
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || ""
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this)
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.iframeElm_ = this.channel_.iframeElement_;
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this)
  }else {
    this.attemptSetup_()
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if(!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement
    }
    if(this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(retry) {
    if(!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this)
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected_()
  }else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if(!this.recursive_ && this.queue_.length == 0) {
    this.channel_.deliver_(serviceName, payload)
  }else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if(this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1)
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while(this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.deliver_(msg.serviceName, msg.payload)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null
};
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = []
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg"
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack"
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  if(this.isDisposed()) {
    return
  }
  goog.net.xpc.logger.fine("transport connect called");
  if(!this.initialized_) {
    goog.net.xpc.logger.fine("initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true
  }
  this.checkForeignFramesReady_()
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name]
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.net.xpc.logger.finest("constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr
};
goog.net.xpc.IframePollingTransport.prototype.innerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("innerPeerReconnect called");
  this.channel_.name = goog.net.xpc.getRandomString(10);
  goog.net.xpc.logger.finest("switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name)
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("outerPeerReconnect called");
  var frames = this.channel_.peerWindowObject_.frames;
  var length = frames.length;
  for(var i = 0;i < length;i++) {
    var frameName;
    try {
      if(frames[i] && frames[i].name) {
        frameName = frames[i].name
      }
    }catch(e) {
    }
    if(!frameName) {
      continue
    }
    var message = frameName.split("_");
    if(message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.net.xpc.logger.finest("deconstructSenderFrames called");
  if(this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null
  }
  if(this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if(!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.net.xpc.logger.finest("foreign frames not (yet) present");
    if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !this.reconnectFrame_) {
      this.innerPeerReconnect_()
    }else {
      if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
        this.outerPeerReconnect_()
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100)
  }else {
    goog.net.xpc.logger.fine("foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getMsgFrameName_()], goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getAckFrameName_()], goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_()
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.net.xpc.logger.finest("checking for receive frame: " + frameName);
  try {
    var winObj = this.channel_.peerWindowObject_.frames[frameName];
    if(!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false
    }
  }catch(e) {
    return false
  }
  return true
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.channel_.peerWindowObject_.frames;
  if(!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if(!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this)
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.net.xpc.logger.fine("local frames not (yet) present")
  }else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.net.xpc.logger.fine("local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.net.xpc.logger.fine("SETUP sent")
    }, this), 100)
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if(this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected_();
    if(this.deliveryQueue_) {
      goog.net.xpc.logger.fine("delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for(var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.deliver_(m.service, m.payload)
      }
      delete this.deliveryQueue_
    }
  }else {
    goog.net.xpc.logger.finest("checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_)
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.net.xpc.logger.finest("msg received: " + raw);
  if(raw == goog.net.xpc.SETUP) {
    if(!this.ackSender_) {
      return
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.net.xpc.logger.finest("SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if(pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame)
      }else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if(part0 == 1) {
          this.parts_ = []
        }
        this.parts_.push(frame);
        if(part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_
        }
      }
    }else {
      goog.net.xpc.logger.warning("received msg, but channel is not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.net.xpc.logger.finest("ack received: " + msgStr);
  if(msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected()) {
      if(!this.waitForAck_) {
        goog.net.xpc.logger.warning("got unexpected ack");
        return
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if(seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_()
      }else {
        goog.net.xpc.logger.warning("got ack with wrong sequence")
      }
    }else {
      goog.net.xpc.logger.warning("received ack, but channel not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if(this.waitForAck_ || !this.sendQueue_.length) {
    return
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.net.xpc.logger.finest("msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if(!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.net.xpc.logger.finest("queued delivery")
  }else {
    this.channel_.deliver_(service, payload)
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if(!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame)
  }else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while(pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_
    }
  }
  this.sendNextFrame_()
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var rcvd = false;
  try {
    for(var i = 0, l = goog.net.xpc.IframePollingTransport.receivers_.length;i < l;i++) {
      rcvd = rcvd || goog.net.xpc.IframePollingTransport.receivers_[i].receive()
    }
  }catch(e) {
    goog.net.xpc.logger.info("receive_() failed: " + e);
    goog.net.xpc.IframePollingTransport.receivers_[i].transport_.channel_.notifyTransportError_();
    if(!goog.net.xpc.IframePollingTransport.receivers_.length) {
      return
    }
  }
  var now = goog.now();
  if(rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t)
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.net.xpc.logger.fine("starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if(goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_)
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_)
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if(goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url
    }else {
      this.sendFrame_.location.replace(url)
    }
  }catch(e) {
    goog.net.xpc.logger.severe("sending failed", e)
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if(loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if(payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload))
    }
    return true
  }else {
    return false
  }
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_()
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if(goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if(!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_()
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while(goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.net.xpc.logger.finest("iframe removed")
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_()
  }
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if(!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP)
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if(!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  }else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if(!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0}
    }
    if(goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if(fragmentInfo.received != fragmentInfo.expected) {
      return
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr]
  }
  goog.net.xpc.channels_[channelName].deliver_(service, decodeURIComponent(payload))
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if(payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected_()
  }else {
    if(payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected_()
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if(goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for(var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr)
    }
  }else {
    this.send_(service, encodedPayload)
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if(goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    div.innerHTML = '<iframe onload="this.xpcOnload()"></iframe>';
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_
  }else {
    var ifr = this.getWindow().document.createElement("iframe");
    if(goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr})
    }else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_)
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if(this.peerIframeId_) {
    url += "," + this.peerIframeId_
  }
  url += "|" + service;
  if(opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.net.xpc.logger.finest("msg sent: " + url)
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.net.xpc.logger.finest("iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0)
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerHostname_ = peerHostname || "*"
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if(!goog.isNumber(value)) {
    value = 0
  }
  if(value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if(!goog.isString(data)) {
    return false
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if(headDelim == -1 || serviceDelim == -1) {
    return false
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.net.xpc.logger.fine("messageReceived: channel=" + channelName + ", service=" + service + ", payload=" + payload);
  var channel = goog.net.xpc.channels_[channelName];
  if(channel) {
    channel.deliver_(service, payload, msgEvt.getBrowserEvent().origin);
    return true
  }
  for(var staleChannelName in goog.net.xpc.channels_) {
    var staleChannel = goog.net.xpc.channels_[staleChannelName];
    if(staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && payload == goog.net.xpc.SETUP) {
      goog.net.xpc.logger.fine("changing channel name to " + channelName);
      staleChannel.name = channelName;
      delete goog.net.xpc.channels_[staleChannelName];
      goog.net.xpc.channels_[channelName] = staleChannel;
      staleChannel.deliver_(service, payload);
      return true
    }
  }
  goog.net.xpc.logger.info('channel name mismatch; message ignored"');
  return false
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  switch(payload) {
    case goog.net.xpc.SETUP:
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      break;
    case goog.net.xpc.SETUP_ACK_:
      this.channel_.notifyConnected_();
      break
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.connectWithRetries_()
};
goog.net.xpc.NativeMessagingTransport.prototype.connectWithRetries_ = function() {
  if(this.channel_.isConnected() || this.isDisposed()) {
    return
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  this.getWindow().setTimeout(goog.bind(this.connectWithRetries_, this), 100)
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.peerWindowObject_;
  if(!win) {
    goog.net.xpc.logger.fine("send(): window not ready");
    return
  }
  var obj = win.postMessage ? win : win.document;
  this.send = function(service, payload) {
    goog.net.xpc.logger.fine("send(): payload=" + payload + " to hostname=" + this.peerHostname_);
    obj.postMessage(this.channel_.name + "|" + service + ":" + payload, this.peerHostname_)
  };
  this.send(service, payload)
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if(value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
    }
  }
  delete this.send
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.reflect");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var isSupported = false;
  try {
    var oldOpener = window.opener;
    window.opener = {};
    isSupported = goog.reflect.canAccessProperty(window, "opener");
    window.opener = oldOpener
  }catch(e) {
  }
  return isSupported
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if(listenWindow["nix_setup_complete"]) {
    return
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport = transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth = auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken = m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap = New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " = wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting global setup: " + e)
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.attemptOuterSetup_()
  }else {
    this.attemptInnerSetup_()
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  var innerFrame = this.channel_.iframeElement_;
  try {
    innerFrame.contentWindow.opener = this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_);
    this.localSetupCompleted_ = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  try {
    var opener = this.getWindow().opener;
    if(opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if(remoteAuthToken != this.remoteAuthToken_) {
        goog.net.xpc.logger.severe("Invalid auth token from other party");
        return
      }
      this.nixChannel_["CreateChannel"](this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
    return
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if(typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.net.xpc.logger.severe("Invalid NIX channel given to createChannel_")
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if(remoteAuthToken != this.remoteAuthToken_) {
    goog.net.xpc.logger.severe("Invalid auth token from other party");
    return
  }
  this.channel_.notifyConnected_()
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  function deliveryHandler() {
    this.channel_.deliver_(serviceName, payload)
  }
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1)
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if(typeof this.nixChannel_ !== "unknown") {
    goog.net.xpc.logger.severe("NIX channel not connected")
  }
  this.nixChannel_["SendMessage"](service, payload)
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.nixChannel_ = null
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Disposable");
goog.require("goog.Uri");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.json");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.base(this);
  for(var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if(uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels_[this.name] = this;
  goog.events.listen(window, "unload", goog.net.xpc.CrossPageChannel.disposeAll_);
  goog.net.xpc.logger.info("CrossPageChannel created: " + this.name)
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if(goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING
  }else {
    if(goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD
    }else {
      if(goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY
      }else {
        if(goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported()) {
          transportType = goog.net.xpc.TransportTypes.NIX
        }else {
          transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING
        }
      }
    }
  }
  return transportType
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if(this.transport_) {
    return
  }
  if(!this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    this.cfg_[goog.net.xpc.CfgFields.TRANSPORT] = this.determineTransportType_()
  }
  switch(this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME], this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break
  }
  if(this.transport_) {
    goog.net.xpc.logger.info("Transport created: " + this.transport_.getName())
  }else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType()
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName()
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]
  }
  return peerCfg
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4)
  }
  var iframeElm = goog.dom.createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if(opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm)
  }else {
    iframeElm.style.width = iframeElm.style.height = "100%"
  }
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if(goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri)
  }
  if(opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()))
  }
  if(goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    this.deferConnect_ = true;
    window.setTimeout(goog.bind(function() {
      this.deferConnect_ = false;
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")");
      if(this.connectDeferred_) {
        this.connect(this.connectCb_)
      }
    }, this), 1)
  }else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")")
  }
  return iframeElm
};
goog.net.xpc.CrossPageChannel.prototype.deferConnect_ = false;
goog.net.xpc.CrossPageChannel.prototype.connectDeferred_ = false;
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if(this.deferConnect_) {
    goog.net.xpc.logger.info("connect() deferred");
    this.connectDeferred_ = true;
    return
  }
  this.connectDeferred_ = false;
  goog.net.xpc.logger.info("connect()");
  if(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID])
  }
  if(this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if(!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]]
    }
    this.setPeerWindowObject(winObj)
  }
  if(!this.peerWindowObject_) {
    if(window == top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    }else {
      this.setPeerWindowObject(window.parent)
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while(this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()()
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  if(!this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  this.transport_.dispose();
  this.transport_ = null;
  this.connectCb_ = null;
  this.connectDeferred_ = false;
  this.deferredDeliveries_.length = 0;
  goog.net.xpc.logger.info('Channel "' + this.name + '" closed')
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = function() {
  if(this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.net.xpc.logger.info('Channel "' + this.name + '" connected');
  this.connectCb_()
};
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError_ = function() {
  goog.net.xpc.logger.info("Transport Error");
  this.close()
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if(!this.isConnected()) {
    goog.net.xpc.logger.severe("Can't send. Channel not connected.");
    return
  }
  if(Boolean(this.peerWindowObject_.closed)) {
    goog.net.xpc.logger.severe("Peer has disappeared.");
    this.close();
    return
  }
  if(goog.isObject(payload)) {
    payload = goog.json.serialize(payload)
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload)
};
goog.net.xpc.CrossPageChannel.prototype.deliver_ = function(serviceName, payload, opt_origin) {
  if(this.connectDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.deliver_, this, serviceName, payload, opt_origin));
    return
  }
  if(!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.net.xpc.logger.warning('Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return
  }
  if(this.isDisposed()) {
    goog.net.xpc.logger.warning("CrossPageChannel::deliver_(): Disposed.")
  }else {
    if(!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload)
    }else {
      if(this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload)
      }else {
        goog.net.xpc.logger.info("CrossPageChannel::deliver_(): Not connected.")
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name
  }
  return name.replace(/[%:|]/g, encodeURIComponent)
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1)
  }else {
    return name
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME]
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels_[this.name];
  this.deferredDeliveries_.length = 0
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for(var name in goog.net.xpc.channels_) {
    var ch = goog.net.xpc.channels_[name];
    if(ch) {
      ch.dispose()
    }
  }
};
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.json");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__17795) {
  var vec__17796__17797 = p__17795;
  var k__17798 = cljs.core.nth.call(null, vec__17796__17797, 0, null);
  var v__17799 = cljs.core.nth.call(null, vec__17796__17797, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__17798.toLowerCase()), v__17799], true)
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = {};
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if(function() {
      var and__3822__auto____17816 = this$;
      if(and__3822__auto____17816) {
        return this$.clojure$browser$net$IConnection$connect$arity$1
      }else {
        return and__3822__auto____17816
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$)
    }else {
      var x__2264__auto____17817 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____17818 = clojure.browser.net.connect[goog.typeOf(x__2264__auto____17817)];
        if(or__3824__auto____17818) {
          return or__3824__auto____17818
        }else {
          var or__3824__auto____17819 = clojure.browser.net.connect["_"];
          if(or__3824__auto____17819) {
            return or__3824__auto____17819
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var connect__2 = function(this$, opt1) {
    if(function() {
      var and__3822__auto____17820 = this$;
      if(and__3822__auto____17820) {
        return this$.clojure$browser$net$IConnection$connect$arity$2
      }else {
        return and__3822__auto____17820
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1)
    }else {
      var x__2264__auto____17821 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____17822 = clojure.browser.net.connect[goog.typeOf(x__2264__auto____17821)];
        if(or__3824__auto____17822) {
          return or__3824__auto____17822
        }else {
          var or__3824__auto____17823 = clojure.browser.net.connect["_"];
          if(or__3824__auto____17823) {
            return or__3824__auto____17823
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1)
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if(function() {
      var and__3822__auto____17824 = this$;
      if(and__3822__auto____17824) {
        return this$.clojure$browser$net$IConnection$connect$arity$3
      }else {
        return and__3822__auto____17824
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2)
    }else {
      var x__2264__auto____17825 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____17826 = clojure.browser.net.connect[goog.typeOf(x__2264__auto____17825)];
        if(or__3824__auto____17826) {
          return or__3824__auto____17826
        }else {
          var or__3824__auto____17827 = clojure.browser.net.connect["_"];
          if(or__3824__auto____17827) {
            return or__3824__auto____17827
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2)
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if(function() {
      var and__3822__auto____17828 = this$;
      if(and__3822__auto____17828) {
        return this$.clojure$browser$net$IConnection$connect$arity$4
      }else {
        return and__3822__auto____17828
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3)
    }else {
      var x__2264__auto____17829 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____17830 = clojure.browser.net.connect[goog.typeOf(x__2264__auto____17829)];
        if(or__3824__auto____17830) {
          return or__3824__auto____17830
        }else {
          var or__3824__auto____17831 = clojure.browser.net.connect["_"];
          if(or__3824__auto____17831) {
            return or__3824__auto____17831
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3)
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3)
    }
    throw"Invalid arity: " + arguments.length;
  };
  connect.cljs$lang$arity$1 = connect__1;
  connect.cljs$lang$arity$2 = connect__2;
  connect.cljs$lang$arity$3 = connect__3;
  connect.cljs$lang$arity$4 = connect__4;
  return connect
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if(function() {
      var and__3822__auto____17852 = this$;
      if(and__3822__auto____17852) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2
      }else {
        return and__3822__auto____17852
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt)
    }else {
      var x__2264__auto____17853 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____17854 = clojure.browser.net.transmit[goog.typeOf(x__2264__auto____17853)];
        if(or__3824__auto____17854) {
          return or__3824__auto____17854
        }else {
          var or__3824__auto____17855 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____17855) {
            return or__3824__auto____17855
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt)
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if(function() {
      var and__3822__auto____17856 = this$;
      if(and__3822__auto____17856) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3
      }else {
        return and__3822__auto____17856
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2)
    }else {
      var x__2264__auto____17857 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____17858 = clojure.browser.net.transmit[goog.typeOf(x__2264__auto____17857)];
        if(or__3824__auto____17858) {
          return or__3824__auto____17858
        }else {
          var or__3824__auto____17859 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____17859) {
            return or__3824__auto____17859
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2)
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if(function() {
      var and__3822__auto____17860 = this$;
      if(and__3822__auto____17860) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4
      }else {
        return and__3822__auto____17860
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3)
    }else {
      var x__2264__auto____17861 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____17862 = clojure.browser.net.transmit[goog.typeOf(x__2264__auto____17861)];
        if(or__3824__auto____17862) {
          return or__3824__auto____17862
        }else {
          var or__3824__auto____17863 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____17863) {
            return or__3824__auto____17863
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3)
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if(function() {
      var and__3822__auto____17864 = this$;
      if(and__3822__auto____17864) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5
      }else {
        return and__3822__auto____17864
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4)
    }else {
      var x__2264__auto____17865 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____17866 = clojure.browser.net.transmit[goog.typeOf(x__2264__auto____17865)];
        if(or__3824__auto____17866) {
          return or__3824__auto____17866
        }else {
          var or__3824__auto____17867 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____17867) {
            return or__3824__auto____17867
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4)
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if(function() {
      var and__3822__auto____17868 = this$;
      if(and__3822__auto____17868) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6
      }else {
        return and__3822__auto____17868
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5)
    }else {
      var x__2264__auto____17869 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____17870 = clojure.browser.net.transmit[goog.typeOf(x__2264__auto____17869)];
        if(or__3824__auto____17870) {
          return or__3824__auto____17870
        }else {
          var or__3824__auto____17871 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____17871) {
            return or__3824__auto____17871
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5)
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5)
    }
    throw"Invalid arity: " + arguments.length;
  };
  transmit.cljs$lang$arity$2 = transmit__2;
  transmit.cljs$lang$arity$3 = transmit__3;
  transmit.cljs$lang$arity$4 = transmit__4;
  transmit.cljs$lang$arity$5 = transmit__5;
  transmit.cljs$lang$arity$6 = transmit__6;
  return transmit
}();
clojure.browser.net.close = function close(this$) {
  if(function() {
    var and__3822__auto____17876 = this$;
    if(and__3822__auto____17876) {
      return this$.clojure$browser$net$IConnection$close$arity$1
    }else {
      return and__3822__auto____17876
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$)
  }else {
    var x__2264__auto____17877 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____17878 = clojure.browser.net.close[goog.typeOf(x__2264__auto____17877)];
      if(or__3824__auto____17878) {
        return or__3824__auto____17878
      }else {
        var or__3824__auto____17879 = clojure.browser.net.close["_"];
        if(or__3824__auto____17879) {
          return or__3824__auto____17879
        }else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$)
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__17880) {
    var vec__17881__17882 = p__17880;
    var k__17883 = cljs.core.nth.call(null, vec__17881__17882, 0, null);
    var v__17884 = cljs.core.nth.call(null, vec__17881__17882, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__17883.toLowerCase()), v__17884], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))))
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  return clojure.browser.net.transmit.call(null, this$, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  this$.setTimeoutInterval(timeout);
  return this$.send(uri, method, content, headers)
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__17885) {
  var vec__17886__17887 = p__17885;
  var k__17888 = cljs.core.nth.call(null, vec__17886__17887, 0, null);
  var v__17889 = cljs.core.nth.call(null, vec__17886__17887, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__17888.toLowerCase()), v__17889], true)
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo
};
clojure.browser.net.ICrossPageChannel = {};
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if(function() {
      var and__3822__auto____17898 = this$;
      if(and__3822__auto____17898) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3
      }else {
        return and__3822__auto____17898
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn)
    }else {
      var x__2264__auto____17899 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____17900 = clojure.browser.net.register_service[goog.typeOf(x__2264__auto____17899)];
        if(or__3824__auto____17900) {
          return or__3824__auto____17900
        }else {
          var or__3824__auto____17901 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____17901) {
            return or__3824__auto____17901
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn)
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if(function() {
      var and__3822__auto____17902 = this$;
      if(and__3822__auto____17902) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4
      }else {
        return and__3822__auto____17902
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_)
    }else {
      var x__2264__auto____17903 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____17904 = clojure.browser.net.register_service[goog.typeOf(x__2264__auto____17903)];
        if(or__3824__auto____17904) {
          return or__3824__auto____17904
        }else {
          var or__3824__auto____17905 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____17905) {
            return or__3824__auto____17905
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_)
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  register_service.cljs$lang$arity$3 = register_service__3;
  register_service.cljs$lang$arity$4 = register_service__4;
  return register_service
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  return clojure.browser.net.connect.call(null, this$, null)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  return clojure.browser.net.connect.call(null, this$, on_connect_fn, config_iframe_fn, document.body)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  this$.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  return this$.send(cljs.core.name.call(null, service_name), payload)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  return this$.close(cljs.core.List.EMPTY)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  return clojure.browser.net.register_service.call(null, this$, service_name, fn, false)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  return this$.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_)
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__3974__auto____17917 = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if(cljs.core.truth_(temp__3974__auto____17917)) {
      var config__17918 = temp__3974__auto____17917;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config__17918))
    }else {
      return null
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__17919) {
      var vec__17920__17921 = p__17919;
      var k__17922 = cljs.core.nth.call(null, vec__17920__17921, 0, null);
      var v__17923 = cljs.core.nth.call(null, vec__17920__17921, 1, null);
      var temp__3971__auto____17924 = cljs.core._lookup.call(null, clojure.browser.net.xpc_config_fields, k__17922, null);
      if(cljs.core.truth_(temp__3971__auto____17924)) {
        var field__17925 = temp__3971__auto____17924;
        var G__17926__17927 = sum;
        G__17926__17927[field__17925] = v__17923;
        return G__17926__17927
      }else {
        return sum
      }
    }, {}, config))
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config)
    }
    throw"Invalid arity: " + arguments.length;
  };
  xpc_connection.cljs$lang$arity$0 = xpc_connection__0;
  xpc_connection.cljs$lang$arity$1 = xpc_connection__1;
  return xpc_connection
}();
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.repl_print = function repl_print(data) {
  var temp__3971__auto____17777 = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  if(cljs.core.truth_(temp__3971__auto____17777)) {
    var conn__17778 = temp__3971__auto____17777;
    return clojure.browser.net.transmit.call(null, conn__17778, "\ufdd0'print", cljs.core.pr_str.call(null, data))
  }else {
    return null
  }
};
clojure.browser.repl.evaluate_javascript = function evaluate_javascript(conn, block) {
  var result__17784 = function() {
    try {
      return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value"], {"\ufdd0'status":"\ufdd0'success", "\ufdd0'value":[cljs.core.str(eval(block))].join("")})
    }catch(e17782) {
      if(cljs.core.instance_QMARK_.call(null, Error, e17782)) {
        var e__17783 = e17782;
        return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value", "\ufdd0'stacktrace"], {"\ufdd0'status":"\ufdd0'exception", "\ufdd0'value":cljs.core.pr_str.call(null, e__17783), "\ufdd0'stacktrace":cljs.core.truth_(e__17783.hasOwnProperty("stack")) ? e__17783.stack : "No stacktrace available."})
      }else {
        if("\ufdd0'else") {
          throw e17782;
        }else {
          return null
        }
      }
    }
  }();
  return cljs.core.pr_str.call(null, result__17784)
};
clojure.browser.repl.send_result = function send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0)
};
clojure.browser.repl.send_print = function() {
  var send_print = null;
  var send_print__2 = function(url, data) {
    return send_print.call(null, url, data, 0)
  };
  var send_print__3 = function(url, data, n) {
    var conn__17786 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, conn__17786, "\ufdd0'error", function(_) {
      if(n < 10) {
        return send_print.call(null, url, data, n + 1)
      }else {
        return console.log([cljs.core.str("Could not send "), cljs.core.str(data), cljs.core.str(" after "), cljs.core.str(n), cljs.core.str(" attempts.")].join(""))
      }
    });
    return clojure.browser.net.transmit.call(null, conn__17786, url, "POST", data, null, 0)
  };
  send_print = function(url, data, n) {
    switch(arguments.length) {
      case 2:
        return send_print__2.call(this, url, data);
      case 3:
        return send_print__3.call(this, url, data, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  send_print.cljs$lang$arity$2 = send_print__2;
  send_print.cljs$lang$arity$3 = send_print__3;
  return send_print
}();
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function wrap_message(t, data) {
  return cljs.core.pr_str.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'content", "\ufdd0'order"], {"\ufdd0'type":t, "\ufdd0'content":data, "\ufdd0'order":cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)}))
};
clojure.browser.repl.start_evaluator = function start_evaluator(url) {
  var temp__3971__auto____17790 = clojure.browser.net.xpc_connection.call(null);
  if(cljs.core.truth_(temp__3971__auto____17790)) {
    var repl_connection__17791 = temp__3971__auto____17790;
    var connection__17792 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, connection__17792, "\ufdd0'success", function(e) {
      return clojure.browser.net.transmit.call(null, repl_connection__17791, "\ufdd0'evaluate-javascript", e.currentTarget.getResponseText(cljs.core.List.EMPTY))
    });
    clojure.browser.net.register_service.call(null, repl_connection__17791, "\ufdd0'send-result", function(data) {
      return clojure.browser.repl.send_result.call(null, connection__17792, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'result", data))
    });
    clojure.browser.net.register_service.call(null, repl_connection__17791, "\ufdd0'print", function(data) {
      return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'print", data))
    });
    clojure.browser.net.connect.call(null, repl_connection__17791, cljs.core.constantly.call(null, null));
    return setTimeout(function() {
      return clojure.browser.repl.send_result.call(null, connection__17792, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'ready", "ready"))
    }, 50)
  }else {
    return alert("No 'xpc' param provided to child iframe.")
  }
};
clojure.browser.repl.connect = function connect(repl_server_url) {
  var repl_connection__17794 = clojure.browser.net.xpc_connection.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'peer_uri"], {"\ufdd0'peer_uri":repl_server_url}));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection__17794));
  clojure.browser.net.register_service.call(null, repl_connection__17794, "\ufdd0'evaluate-javascript", function(js) {
    return clojure.browser.net.transmit.call(null, repl_connection__17794, "\ufdd0'send-result", clojure.browser.repl.evaluate_javascript.call(null, repl_connection__17794, js))
  });
  return clojure.browser.net.connect.call(null, repl_connection__17794, cljs.core.constantly.call(null, null), function(iframe) {
    return iframe.style.display = "none"
  })
};
goog.provide("shoreleave.brepl");
goog.require("cljs.core");
goog.require("clojure.browser.repl");
shoreleave.brepl.connect = function connect() {
  return clojure.browser.repl.connect.call(null, "http://localhost:9000/repl")
};
goog.provide("shoreleave.common");
goog.require("cljs.core");
goog.require("shoreleave.brepl");
shoreleave.common.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        var out__17737 = {};
        var G__17738__17739 = cljs.core.seq.call(null, x);
        if(G__17738__17739) {
          var G__17741__17743 = cljs.core.first.call(null, G__17738__17739);
          var vec__17742__17744 = G__17741__17743;
          var k__17745 = cljs.core.nth.call(null, vec__17742__17744, 0, null);
          var v__17746 = cljs.core.nth.call(null, vec__17742__17744, 1, null);
          var G__17738__17747 = G__17738__17739;
          var G__17741__17748 = G__17741__17743;
          var G__17738__17749 = G__17738__17747;
          while(true) {
            var vec__17750__17751 = G__17741__17748;
            var k__17752 = cljs.core.nth.call(null, vec__17750__17751, 0, null);
            var v__17753 = cljs.core.nth.call(null, vec__17750__17751, 1, null);
            var G__17738__17754 = G__17738__17749;
            out__17737[cljs.core.name.call(null, k__17752)] = clj__GT_js.call(null, v__17753);
            var temp__3974__auto____17755 = cljs.core.next.call(null, G__17738__17754);
            if(temp__3974__auto____17755) {
              var G__17738__17756 = temp__3974__auto____17755;
              var G__17757 = cljs.core.first.call(null, G__17738__17756);
              var G__17758 = G__17738__17756;
              G__17741__17748 = G__17757;
              G__17738__17749 = G__17758;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return out__17737
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
        }else {
          if("\ufdd0'else") {
            return x
          }else {
            return null
          }
        }
      }
    }
  }
};
shoreleave.common.args_map = function args_map(location_str) {
  var query_args_obj__17760 = new goog.Uri.QueryData(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["#", "?"]), cljs.core._lookup.call(null, location_str, 0, null)) ? cljs.core.subs.call(null, location_str, 1) : location_str);
  return cljs.core.zipmap.call(null, cljs.core.map.call(null, cljs.core.keyword, query_args_obj__17760.getKeys()), query_args_obj__17760.getValues())
};
shoreleave.common.query_args_map = function query_args_map() {
  return shoreleave.common.args_map.call(null, window.location.search)
};
shoreleave.common.hash_args_map = function hash_args_map() {
  return shoreleave.common.args_map.call(null, window.location.hash)
};
shoreleave.common.set_window_hash_args = function set_window_hash_args(args_map) {
  var hash_str__17773 = cljs.core.reduce.call(null, function(old_str, p__17768) {
    var vec__17769__17770 = p__17768;
    var k__17771 = cljs.core.nth.call(null, vec__17769__17770, 0, null);
    var v__17772 = cljs.core.nth.call(null, vec__17769__17770, 1, null);
    return[cljs.core.str(old_str), cljs.core.str(cljs.core.name.call(null, k__17771)), cljs.core.str("="), cljs.core.str(v__17772), cljs.core.str("&")].join("")
  }, "#", args_map);
  var clean_hash_str__17774 = cljs.core.subs.call(null, hash_str__17773, 0, cljs.core.count.call(null, hash_str__17773) - 1);
  window.location.hash = clean_hash_str__17774;
  return args_map
};
shoreleave.common.toggle_brepl = function() {
  var toggle_brepl = null;
  var toggle_brepl__0 = function() {
    return toggle_brepl.call(null, shoreleave.common.query_args_map.call(null))
  };
  var toggle_brepl__1 = function(query_map) {
    return toggle_brepl.call(null, query_map, "\ufdd0'brepl")
  };
  var toggle_brepl__2 = function(query_map, query_key) {
    if(cljs.core.truth_(query_map.call(null, query_key))) {
      return shoreleave.brepl.connect.call(null)
    }else {
      return null
    }
  };
  toggle_brepl = function(query_map, query_key) {
    switch(arguments.length) {
      case 0:
        return toggle_brepl__0.call(this);
      case 1:
        return toggle_brepl__1.call(this, query_map);
      case 2:
        return toggle_brepl__2.call(this, query_map, query_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  toggle_brepl.cljs$lang$arity$0 = toggle_brepl__0;
  toggle_brepl.cljs$lang$arity$1 = toggle_brepl__1;
  toggle_brepl.cljs$lang$arity$2 = toggle_brepl__2;
  return toggle_brepl
}();
goog.provide("shoreleave.remotes.common");
goog.require("cljs.core");
goog.require("shoreleave.common");
goog.require("shoreleave.common");
goog.require("shoreleave.browser.cookies");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.Uri.QueryData");
goog.require("clojure.string");
shoreleave.remotes.common.rand_id_str = function rand_id_str() {
  return goog.string.getRandomString()
};
shoreleave.remotes.common.__GT_url_method = function __GT_url_method(m) {
  return clojure.string.upper_case.call(null, cljs.core.name.call(null, m))
};
shoreleave.remotes.common.parse_route = function parse_route(route) {
  if(cljs.core.string_QMARK_.call(null, route)) {
    return cljs.core.PersistentVector.fromArray(["GET", route], true)
  }else {
    if(cljs.core.vector_QMARK_.call(null, route)) {
      var vec__17950__17951 = route;
      var m__17952 = cljs.core.nth.call(null, vec__17950__17951, 0, null);
      var u__17953 = cljs.core.nth.call(null, vec__17950__17951, 1, null);
      return cljs.core.PersistentVector.fromArray([shoreleave.remotes.common.__GT_url_method.call(null, m__17952), u__17953], true)
    }else {
      if("\ufdd0'else") {
        return cljs.core.PersistentVector.fromArray(["GET", route], true)
      }else {
        return null
      }
    }
  }
};
shoreleave.remotes.common.__GT_simple_callback = function __GT_simple_callback(callback) {
  if(cljs.core.truth_(callback)) {
    return function(req) {
      var data__17955 = req.getResponseText();
      return callback.call(null, data__17955)
    }
  }else {
    return null
  }
};
shoreleave.remotes.common.csrf_protected = function csrf_protected(content_map, method) {
  var temp__3971__auto____17960 = function() {
    var and__3822__auto____17959 = cljs.core._EQ_.call(null, method, "POST");
    if(and__3822__auto____17959) {
      return(new cljs.core.Keyword("\ufdd0'__anti-forgery-token")).call(null, shoreleave.browser.cookies.cookies)
    }else {
      return and__3822__auto____17959
    }
  }();
  if(cljs.core.truth_(temp__3971__auto____17960)) {
    var anti_forgery_token__17961 = temp__3971__auto____17960;
    return cljs.core.merge.call(null, content_map, cljs.core.ObjMap.fromObject(["\ufdd0'__anti-forgery-token"], {"\ufdd0'__anti-forgery-token":anti_forgery_token__17961}))
  }else {
    return content_map
  }
};
shoreleave.remotes.common.__GT_data_str = function __GT_data_str(d) {
  var cur__17964 = shoreleave.common.clj__GT_js.call(null, d);
  var query__17965 = goog.Uri.QueryData.createFromMap(new goog.structs.Map(cur__17964));
  return[cljs.core.str(query__17965)].join("")
};
goog.provide("shoreleave.remotes.xhr");
goog.require("cljs.core");
goog.require("shoreleave.common");
goog.require("shoreleave.common");
goog.require("shoreleave.remotes.common");
goog.require("goog.events");
goog.require("goog.net.XhrIo");
shoreleave.remotes.xhr.xhr = function() {
  var xhr__delegate = function(route, opts) {
    var req__17704 = new goog.net.XhrIo;
    var vec__17702__17705 = shoreleave.remotes.common.parse_route.call(null, route);
    var method__17706 = cljs.core.nth.call(null, vec__17702__17705, 0, null);
    var uri__17707 = cljs.core.nth.call(null, vec__17702__17705, 1, null);
    var map__17703__17708 = cljs.core.apply.call(null, cljs.core.hash_map, opts);
    var map__17703__17709 = cljs.core.seq_QMARK_.call(null, map__17703__17708) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17703__17708) : map__17703__17708;
    var headers__17710 = cljs.core._lookup.call(null, map__17703__17709, "\ufdd0'headers", null);
    var content__17711 = cljs.core._lookup.call(null, map__17703__17709, "\ufdd0'content", null);
    var on_success__17712 = cljs.core._lookup.call(null, map__17703__17709, "\ufdd0'on-success", null);
    var content__17713 = shoreleave.remotes.common.csrf_protected.call(null, content__17711, method__17706);
    var data__17714 = shoreleave.remotes.common.__GT_data_str.call(null, content__17713);
    var callback__17715 = shoreleave.remotes.common.__GT_simple_callback.call(null, on_success__17712);
    if(cljs.core.truth_(callback__17715)) {
      goog.events.listen(req__17704, goog.net.EventType.COMPLETE, function() {
        return callback__17715.call(null, req__17704)
      })
    }else {
    }
    return req__17704.send(uri__17707, method__17706, data__17714, cljs.core.truth_(headers__17710) ? shoreleave.common.clj__GT_js.call(null, headers__17710) : null)
  };
  var xhr = function(route, var_args) {
    var opts = null;
    if(goog.isDef(var_args)) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return xhr__delegate.call(this, route, opts)
  };
  xhr.cljs$lang$maxFixedArity = 1;
  xhr.cljs$lang$applyTo = function(arglist__17716) {
    var route = cljs.core.first(arglist__17716);
    var opts = cljs.core.rest(arglist__17716);
    return xhr__delegate(route, opts)
  };
  xhr.cljs$lang$arity$variadic = xhr__delegate;
  return xhr
}();
goog.provide("shoreleave.remotes.http_rpc");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("shoreleave.remotes.xhr");
shoreleave.remotes.http_rpc._STAR_remote_uri_STAR_ = "/_fetch";
shoreleave.remotes.http_rpc.remote_callback = function() {
  var remote_callback__delegate = function(remote, params, callback, extra_content) {
    return shoreleave.remotes.xhr.xhr.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'post", shoreleave.remotes.http_rpc._STAR_remote_uri_STAR_], true), "\ufdd0'content", cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'remote", "\ufdd0'params"], {"\ufdd0'remote":remote, "\ufdd0'params":cljs.core.pr_str.call(null, params)}), cljs.core.apply.call(null, cljs.core.hash_map, extra_content)), "\ufdd0'on-success", cljs.core.truth_(callback) ? function(data) {
      var data__17686 = cljs.core._EQ_.call(null, data, "") ? "nil" : data;
      return callback.call(null, cljs.reader.read_string.call(null, data__17686))
    } : null)
  };
  var remote_callback = function(remote, params, callback, var_args) {
    var extra_content = null;
    if(goog.isDef(var_args)) {
      extra_content = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return remote_callback__delegate.call(this, remote, params, callback, extra_content)
  };
  remote_callback.cljs$lang$maxFixedArity = 3;
  remote_callback.cljs$lang$applyTo = function(arglist__17687) {
    var remote = cljs.core.first(arglist__17687);
    var params = cljs.core.first(cljs.core.next(arglist__17687));
    var callback = cljs.core.first(cljs.core.next(cljs.core.next(arglist__17687)));
    var extra_content = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__17687)));
    return remote_callback__delegate(remote, params, callback, extra_content)
  };
  remote_callback.cljs$lang$arity$variadic = remote_callback__delegate;
  return remote_callback
}();
goog.provide("vcfvis.data");
goog.require("cljs.core");
goog.require("c2.util");
goog.require("cljs.reader");
goog.require("c2.ticks");
goog.require("c2.scale");
goog.require("shoreleave.remotes.http_rpc");
goog.require("vcfvis.ui");
goog.require("vcfvis.core");
goog.require("domina");
goog.require("cljs.reader");
goog.require("c2.util");
vcfvis.data.expand_metric = function expand_metric(metric) {
  if(cljs.core.truth_(metric.call(null, "\ufdd0'range"))) {
    return cljs.core.assoc.call(null, metric, "\ufdd0'bin-width", function() {
      var vec__11115__11116 = metric.call(null, "\ufdd0'range");
      var start__11117 = cljs.core.nth.call(null, vec__11115__11116, 0, null);
      var end__11118 = cljs.core.nth.call(null, vec__11115__11116, 1, null);
      return(end__11118 - start__11117) / vcfvis.ui.hist_bins
    }(), "\ufdd0'!filter-extent", cljs.core.atom.call(null, null), "\ufdd0'scale-x", function() {
      var map__11119__11120 = c2.ticks.search.call(null, metric.call(null, "\ufdd0'range"), "\ufdd0'clamp?", true, "\ufdd0'length", vcfvis.ui.hist_width);
      var map__11119__11121 = cljs.core.seq_QMARK_.call(null, map__11119__11120) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11119__11120) : map__11119__11120;
      var ticks__11122 = cljs.core._lookup.call(null, map__11119__11121, "\ufdd0'ticks", null);
      var x__11123 = c2.scale.linear.call(null, "\ufdd0'domain", metric.call(null, "\ufdd0'range"), "\ufdd0'range", cljs.core.PersistentVector.fromArray([0, vcfvis.ui.hist_width], true));
      return cljs.core.assoc.call(null, x__11123, "\ufdd0'ticks", ticks__11122)
    }())
  }else {
    throw[cljs.core.str("Metric doesn't have range: "), cljs.core.str(cljs.core.pr.call(null, metric))].join("");
  }
};
vcfvis.data.prep_context = function prep_context(context) {
  return cljs.core.update_in.call(null, context, cljs.core.PersistentVector.fromArray(["\ufdd0'metrics"], true), function(p1__11105_SHARP_) {
    return cljs.core.reduce.call(null, function(res, m) {
      return cljs.core.assoc.call(null, res, (new cljs.core.Keyword("\ufdd0'id")).call(null, m), vcfvis.data.expand_metric.call(null, m))
    }, cljs.core.ObjMap.EMPTY, p1__11105_SHARP_)
  })
};
vcfvis.data.prep_vcf_json = function prep_vcf_json(vcf_json) {
  var core_metrics__11161 = cljs.core.deref.call(null, vcfvis.core._BANG_context).call(null, "\ufdd0'metrics");
  var info__11165 = cljs.core.update_in.call(null, cljs.reader.read_string.call(null, vcf_json["clj"]), cljs.core.PersistentVector.fromArray(["\ufdd0'available-metrics"], true), function(p1__11124_SHARP_) {
    return cljs.core.reduce.call(null, function(ms, m) {
      var temp__3971__auto____11162 = core_metrics__11161.call(null, m);
      if(cljs.core.truth_(temp__3971__auto____11162)) {
        var metric__11163 = temp__3971__auto____11162;
        return cljs.core.conj.call(null, ms, metric__11163)
      }else {
        var res__7922__auto____11164 = [cljs.core.str("Don't know how to deal with metric: '"), cljs.core.str(m), cljs.core.str("', dropping.")].join("");
        console.log(res__7922__auto____11164);
        res__7922__auto____11164;
        return ms
      }
    }, cljs.core.PersistentHashSet.EMPTY, p1__11124_SHARP_)
  });
  var cf__11166 = crossfilter(vcf_json["raw"]);
  return cljs.core.assoc.call(null, info__11165, "\ufdd0'cf", cljs.core.into.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'crossfilter", "\ufdd0'all"], {"\ufdd0'crossfilter":cf__11166, "\ufdd0'all":cf__11166.groupAll()}), function() {
    var iter__2363__auto____11195 = function iter__11167(s__11168) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__11168__11182 = s__11168;
        while(true) {
          if(cljs.core.seq.call(null, s__11168__11182)) {
            var map__11183__11184 = cljs.core.first.call(null, s__11168__11182);
            var map__11183__11185 = cljs.core.seq_QMARK_.call(null, map__11183__11184) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11183__11184) : map__11183__11184;
            var bin_width__11186 = cljs.core._lookup.call(null, map__11183__11185, "\ufdd0'bin-width", null);
            var range__11187 = cljs.core._lookup.call(null, map__11183__11185, "\ufdd0'range", null);
            var id__11188 = cljs.core._lookup.call(null, map__11183__11185, "\ufdd0'id", null);
            return cljs.core.cons.call(null, function() {
              var vec__11189__11190 = range__11187;
              var start__11191 = cljs.core.nth.call(null, vec__11189__11190, 0, null);
              var end__11192 = cljs.core.nth.call(null, vec__11189__11190, 1, null);
              var dim__11193 = cf__11166.dimension(function(map__11183__11184, map__11183__11185, bin_width__11186, range__11187, id__11188) {
                return function(p1__11125_SHARP_) {
                  return p1__11125_SHARP_[id__11188]
                }
              }(map__11183__11184, map__11183__11185, bin_width__11186, range__11187, id__11188));
              var binned__11194 = dim__11193.group(function(map__11183__11184, map__11183__11185, bin_width__11186, range__11187, id__11188) {
                return function(x) {
                  return start__11191 + bin_width__11186 * (Math.floor.call(null, (x - start__11191) / bin_width__11186) < vcfvis.ui.hist_bins - 1 ? Math.floor.call(null, (x - start__11191) / bin_width__11186) : vcfvis.ui.hist_bins - 1)
                }
              }(map__11183__11184, map__11183__11185, bin_width__11186, range__11187, id__11188));
              return cljs.core.PersistentVector.fromArray([id__11188, cljs.core.ObjMap.fromObject(["\ufdd0'bin-width", "\ufdd0'dimension", "\ufdd0'binned"], {"\ufdd0'bin-width":bin_width__11186, "\ufdd0'dimension":dim__11193, "\ufdd0'binned":binned__11194})], true)
            }(), iter__11167.call(null, cljs.core.rest.call(null, s__11168__11182)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____11195.call(null, info__11165.call(null, "\ufdd0'available-metrics"))
  }()))
};
vcfvis.data.load_context = function load_context(callback) {
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "variant/context", cljs.core.PersistentVector.EMPTY, function(res) {
    return callback.call(null, vcfvis.data.prep_context.call(null, res))
  })
};
vcfvis.data.load_vcf = function load_vcf(file_url, callback) {
  return jQuery.getJSON("/api/vcf", c2.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'file-url"], {"\ufdd0'file-url":file_url})), function(res) {
    return callback.call(null, vcfvis.data.prep_vcf_json.call(null, res))
  })
};
vcfvis.data._BANG_analysis_status = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
cljs.core.swap_BANG_.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_, cljs.core.conj, function(m__9353__auto__) {
  try {
    if(function() {
      var G__11201__11202 = m__9353__auto__;
      if(G__11201__11202) {
        if(function() {
          var or__3824__auto____11203 = G__11201__11202.cljs$lang$protocol_mask$partition0$ & 256;
          if(or__3824__auto____11203) {
            return or__3824__auto____11203
          }else {
            return G__11201__11202.cljs$core$ILookup$
          }
        }()) {
          return true
        }else {
          if(!G__11201__11202.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__11201__11202)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__11201__11202)
      }
    }()) {
      var G__11196__11205 = function() {
        var val__6603__auto____11204 = cljs.core._lookup.call(null, m__9353__auto__, "\ufdd0'filter-updated", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6603__auto____11204, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6603__auto____11204
        }
      }();
      return cljs.core.reset_BANG_.call(null, vcfvis.data._BANG_analysis_status, cljs.core.ObjMap.EMPTY)
    }else {
      if("\ufdd0'else") {
        throw 0;
      }else {
        return null
      }
    }
  }catch(e__7036__auto__) {
    if(e__7036__auto__ === 0) {
      var G__11197__11200 = m__9353__auto__;
      return null
    }else {
      throw e__7036__auto__;
    }
  }
});
vcfvis.data.update_status_BANG_ = function update_status_BANG_(filename, status) {
  return cljs.core.swap_BANG_.call(null, vcfvis.data._BANG_analysis_status, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([filename], true), status)
};
vcfvis.data.reset_statuses_BANG_ = function reset_statuses_BANG_() {
  return cljs.core.reset_BANG_.call(null, vcfvis.data._BANG_analysis_status, cljs.core.ObjMap.EMPTY)
};
vcfvis.data.filter_analysis = function filter_analysis(file_url, metrics) {
  vcfvis.data.update_status_BANG_.call(null, file_url, "\ufdd0'running");
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "run/filter", cljs.core.PersistentVector.fromArray([file_url, metrics], true), function(res) {
    return vcfvis.data.update_status_BANG_.call(null, file_url, "\ufdd0'completed")
  })
};
goog.provide("chosen.jquery");
goog.require("cljs.core");
jQuery.prototype.cljs$core$IReduce$ = true;
jQuery.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  return cljs.core.ci_reduce.call(null, this$, f)
};
jQuery.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  return cljs.core.ci_reduce.call(null, this$, f, start)
};
jQuery.prototype.cljs$core$ILookup$ = true;
jQuery.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var or__3824__auto____11861 = this$.slice(k, k + 1);
  if(cljs.core.truth_(or__3824__auto____11861)) {
    return or__3824__auto____11861
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  return cljs.core._nth.call(null, this$, k, not_found)
};
jQuery.prototype.cljs$core$ISequential$ = true;
jQuery.prototype.cljs$core$IIndexed$ = true;
jQuery.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    if(void 0 === not_found) {
      return null
    }else {
      return not_found
    }
  }
};
jQuery.prototype.cljs$core$ICounted$ = true;
jQuery.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  return this$.size()
};
jQuery.prototype.cljs$core$ISeq$ = true;
jQuery.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  return this$.get(0)
};
jQuery.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  if(cljs.core.count.call(null, this$) > 1) {
    return this$.slice(1)
  }else {
    return cljs.core.list.call(null)
  }
};
jQuery.prototype.cljs$core$ISeqable$ = true;
jQuery.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  if(cljs.core.truth_(this$.get(0))) {
    return this$
  }else {
    return null
  }
};
goog.provide("chosen.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("chosen.jquery");
goog.require("goog.string");
goog.require("clojure.string");
chosen.core.ISelectable = {};
chosen.core.selected = function() {
  var selected = null;
  var selected__1 = function(this$) {
    if(function() {
      var and__3822__auto____11655 = this$;
      if(and__3822__auto____11655) {
        return this$.chosen$core$ISelectable$selected$arity$1
      }else {
        return and__3822__auto____11655
      }
    }()) {
      return this$.chosen$core$ISelectable$selected$arity$1(this$)
    }else {
      var x__2264__auto____11656 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11657 = chosen.core.selected[goog.typeOf(x__2264__auto____11656)];
        if(or__3824__auto____11657) {
          return or__3824__auto____11657
        }else {
          var or__3824__auto____11658 = chosen.core.selected["_"];
          if(or__3824__auto____11658) {
            return or__3824__auto____11658
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelectable.selected", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var selected__2 = function(this$, values) {
    if(function() {
      var and__3822__auto____11659 = this$;
      if(and__3822__auto____11659) {
        return this$.chosen$core$ISelectable$selected$arity$2
      }else {
        return and__3822__auto____11659
      }
    }()) {
      return this$.chosen$core$ISelectable$selected$arity$2(this$, values)
    }else {
      var x__2264__auto____11660 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11661 = chosen.core.selected[goog.typeOf(x__2264__auto____11660)];
        if(or__3824__auto____11661) {
          return or__3824__auto____11661
        }else {
          var or__3824__auto____11662 = chosen.core.selected["_"];
          if(or__3824__auto____11662) {
            return or__3824__auto____11662
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelectable.selected", this$);
          }
        }
      }().call(null, this$, values)
    }
  };
  selected = function(this$, values) {
    switch(arguments.length) {
      case 1:
        return selected__1.call(this, this$);
      case 2:
        return selected__2.call(this, this$, values)
    }
    throw"Invalid arity: " + arguments.length;
  };
  selected.cljs$lang$arity$1 = selected__1;
  selected.cljs$lang$arity$2 = selected__2;
  return selected
}();
chosen.core.IOptions = {};
chosen.core.options = function() {
  var options = null;
  var options__1 = function(this$) {
    if(function() {
      var and__3822__auto____11671 = this$;
      if(and__3822__auto____11671) {
        return this$.chosen$core$IOptions$options$arity$1
      }else {
        return and__3822__auto____11671
      }
    }()) {
      return this$.chosen$core$IOptions$options$arity$1(this$)
    }else {
      var x__2264__auto____11672 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11673 = chosen.core.options[goog.typeOf(x__2264__auto____11672)];
        if(or__3824__auto____11673) {
          return or__3824__auto____11673
        }else {
          var or__3824__auto____11674 = chosen.core.options["_"];
          if(or__3824__auto____11674) {
            return or__3824__auto____11674
          }else {
            throw cljs.core.missing_protocol.call(null, "IOptions.options", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var options__2 = function(this$, opts) {
    if(function() {
      var and__3822__auto____11675 = this$;
      if(and__3822__auto____11675) {
        return this$.chosen$core$IOptions$options$arity$2
      }else {
        return and__3822__auto____11675
      }
    }()) {
      return this$.chosen$core$IOptions$options$arity$2(this$, opts)
    }else {
      var x__2264__auto____11676 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11677 = chosen.core.options[goog.typeOf(x__2264__auto____11676)];
        if(or__3824__auto____11677) {
          return or__3824__auto____11677
        }else {
          var or__3824__auto____11678 = chosen.core.options["_"];
          if(or__3824__auto____11678) {
            return or__3824__auto____11678
          }else {
            throw cljs.core.missing_protocol.call(null, "IOptions.options", this$);
          }
        }
      }().call(null, this$, opts)
    }
  };
  options = function(this$, opts) {
    switch(arguments.length) {
      case 1:
        return options__1.call(this, this$);
      case 2:
        return options__2.call(this, this$, opts)
    }
    throw"Invalid arity: " + arguments.length;
  };
  options.cljs$lang$arity$1 = options__1;
  options.cljs$lang$arity$2 = options__2;
  return options
}();
chosen.core.__GT_coll = function __GT_coll(c) {
  if(!function() {
    var or__3824__auto____11681 = cljs.core.set_QMARK_.call(null, c);
    if(or__3824__auto____11681) {
      return or__3824__auto____11681
    }else {
      return cljs.core.sequential_QMARK_.call(null, c)
    }
  }()) {
    return cljs.core.PersistentVector.fromArray([c], true)
  }else {
    return c
  }
};
chosen.core.option_values = function option_values(option_els) {
  return cljs.core.map.call(null, function(p1__11679_SHARP_) {
    return p1__11679_SHARP_.value
  }, option_els)
};
chosen.core.selected_values = function selected_values(el) {
  return cljs.core.set.call(null, chosen.core.option_values.call(null, $(el).find("option:selected")))
};
chosen.core.el_options = function el_options(el) {
  return cljs.core.map.call(null, function(e) {
    var $e__11684 = $(e);
    var group__11685 = $e__11684.parent("optgroup").attr("label");
    return cljs.core.ObjMap.fromObject(["\ufdd0'text", "\ufdd0'value", "\ufdd0'selected", "\ufdd0'disabled", "\ufdd0'group"], {"\ufdd0'text":$e__11684.text(), "\ufdd0'value":$e__11684.val(), "\ufdd0'selected":e.selected, "\ufdd0'disabled":e.disabled, "\ufdd0'group":void 0 === group__11685 ? null : group__11685})
  }, $(el).find("option"))
};
chosen.core.opt__GT_html = function opt__GT_html(o) {
  var map__11696__11697 = o;
  var map__11696__11698 = cljs.core.seq_QMARK_.call(null, map__11696__11697) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11696__11697) : map__11696__11697;
  var style__11699 = cljs.core._lookup.call(null, map__11696__11698, "\ufdd0'style", null);
  var group__11700 = cljs.core._lookup.call(null, map__11696__11698, "\ufdd0'group", null);
  var disabled__11701 = cljs.core._lookup.call(null, map__11696__11698, "\ufdd0'disabled", null);
  var selected__11702 = cljs.core._lookup.call(null, map__11696__11698, "\ufdd0'selected", null);
  var text__11703 = cljs.core._lookup.call(null, map__11696__11698, "\ufdd0'text", null);
  var value__11704 = cljs.core._lookup.call(null, map__11696__11698, "\ufdd0'value", null);
  return[cljs.core.str(clojure.string.join.call(null, " ", cljs.core.PersistentVector.fromArray(["<option", [cljs.core.str('value="'), cljs.core.str(goog.string.htmlEscape(function() {
    var or__3824__auto____11705 = value__11704;
    if(cljs.core.truth_(or__3824__auto____11705)) {
      return or__3824__auto____11705
    }else {
      return text__11703
    }
  }())), cljs.core.str('"')].join(""), cljs.core.truth_(style__11699) ? [cljs.core.str("style='"), cljs.core.str(goog.string.htmlEscape(style__11699)), cljs.core.str("'")].join("") : null, cljs.core.truth_(disabled__11701) ? "disabled='disabled'" : null, cljs.core.truth_(selected__11702) ? "selected='selected'" : null, ">"], true))), cljs.core.str(text__11703), cljs.core.str("</option>")].join("")
};
chosen.core.optionify = function optionify(x) {
  if(cljs.core.map_QMARK_.call(null, x)) {
    return x
  }else {
    return cljs.core.ObjMap.fromObject(["\ufdd0'value", "\ufdd0'text"], {"\ufdd0'value":x, "\ufdd0'text":[cljs.core.str(x)].join("")})
  }
};
chosen.core.reset_dom_options_BANG_ = function reset_dom_options_BANG_($el, options) {
  $el.children().remove();
  var G__11726__11727 = cljs.core.seq.call(null, cljs.core.group_by.call(null, "\ufdd0'group", cljs.core.map.call(null, chosen.core.optionify, chosen.core.__GT_coll.call(null, options))));
  if(G__11726__11727) {
    var G__11729__11731 = cljs.core.first.call(null, G__11726__11727);
    var vec__11730__11732 = G__11729__11731;
    var group__11733 = cljs.core.nth.call(null, vec__11730__11732, 0, null);
    var opts__11734 = cljs.core.nth.call(null, vec__11730__11732, 1, null);
    var G__11726__11735 = G__11726__11727;
    var G__11729__11736 = G__11729__11731;
    var G__11726__11737 = G__11726__11735;
    while(true) {
      var vec__11738__11739 = G__11729__11736;
      var group__11740 = cljs.core.nth.call(null, vec__11738__11739, 0, null);
      var opts__11741 = cljs.core.nth.call(null, vec__11738__11739, 1, null);
      var G__11726__11742 = G__11726__11737;
      var opts_html__11743 = clojure.string.join.call(null, "\n", cljs.core.map.call(null, chosen.core.opt__GT_html, opts__11741));
      if(group__11740 == null) {
        $el.append(opts_html__11743)
      }else {
        $el.append([cljs.core.str("<optgroup label='"), cljs.core.str(goog.string.htmlEscape(cljs.core.name.call(null, group__11740))), cljs.core.str("'>"), cljs.core.str(opts_html__11743), cljs.core.str("</optgroup>")].join(""))
      }
      var temp__3974__auto____11744 = cljs.core.next.call(null, G__11726__11742);
      if(temp__3974__auto____11744) {
        var G__11726__11745 = temp__3974__auto____11744;
        var G__11746 = cljs.core.first.call(null, G__11726__11745);
        var G__11747 = G__11726__11745;
        G__11729__11736 = G__11746;
        G__11726__11737 = G__11747;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
chosen.core.Chosen = function($el, _BANG_a, multiple_QMARK_) {
  this.$el = $el;
  this._BANG_a = _BANG_a;
  this.multiple_QMARK_ = multiple_QMARK_;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147516416
};
chosen.core.Chosen.cljs$lang$type = true;
chosen.core.Chosen.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "chosen.core/Chosen")
};
chosen.core.Chosen.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(_11749, _11750, _) {
  var this__11748 = this;
  return null
};
chosen.core.Chosen.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(_, key, f) {
  var this__11751 = this;
  return cljs.core.add_watch.call(null, this__11751._BANG_a, key, function(_11754, _, p__11752, p__11753) {
    var map__11755__11757 = p__11752;
    var map__11755__11758 = cljs.core.seq_QMARK_.call(null, map__11755__11757) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11755__11757) : map__11755__11757;
    var old_sel__11759 = cljs.core._lookup.call(null, map__11755__11758, "\ufdd0'selected", null);
    var map__11756__11760 = p__11753;
    var map__11756__11761 = cljs.core.seq_QMARK_.call(null, map__11756__11760) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11756__11760) : map__11756__11760;
    var sel__11762 = cljs.core._lookup.call(null, map__11756__11761, "\ufdd0'selected", null);
    if(cljs.core.not_EQ_.call(null, old_sel__11759, sel__11762)) {
      return f.call(null, cljs.core.truth_(this__11751.multiple_QMARK_) ? sel__11762 : cljs.core.first.call(null, sel__11762))
    }else {
      return null
    }
  })
};
chosen.core.Chosen.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(_, key) {
  var this__11763 = this;
  return cljs.core.remove_watch.call(null, this__11763._BANG_a, key)
};
chosen.core.Chosen.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var this__11764 = this;
  return this$.chosen$core$ISelectable$selected$arity$1(this$)
};
chosen.core.Chosen.prototype.chosen$core$IOptions$ = true;
chosen.core.Chosen.prototype.chosen$core$IOptions$options$arity$1 = function(_) {
  var this__11765 = this;
  return(new cljs.core.Keyword("\ufdd0'options")).call(null, cljs.core.deref.call(null, this__11765._BANG_a))
};
chosen.core.Chosen.prototype.chosen$core$IOptions$options$arity$2 = function(_, opts) {
  var this__11766 = this;
  chosen.core.reset_dom_options_BANG_.call(null, this__11766.$el, opts);
  return cljs.core.swap_BANG_.call(null, this__11766._BANG_a, cljs.core.assoc, "\ufdd0'options", chosen.core.el_options.call(null, this__11766.$el))
};
chosen.core.Chosen.prototype.chosen$core$ISelectable$ = true;
chosen.core.Chosen.prototype.chosen$core$ISelectable$selected$arity$1 = function(_) {
  var this__11767 = this;
  var sel__11768 = (new cljs.core.Keyword("\ufdd0'selected")).call(null, cljs.core.deref.call(null, this__11767._BANG_a));
  if(cljs.core.truth_(this__11767.multiple_QMARK_)) {
    return sel__11768
  }else {
    return cljs.core.first.call(null, sel__11768)
  }
};
chosen.core.Chosen.prototype.chosen$core$ISelectable$selected$arity$2 = function(_, values) {
  var this__11769 = this;
  return cljs.core.swap_BANG_.call(null, this__11769._BANG_a, cljs.core.assoc, "\ufdd0'selected", chosen.core.__GT_coll.call(null, values))
};
chosen.core.Chosen;
chosen.core.ichooseu_BANG_ = function() {
  var ichooseu_BANG___delegate = function(el, p__11770) {
    var map__11794__11795 = p__11770;
    var map__11794__11796 = cljs.core.seq_QMARK_.call(null, map__11794__11795) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11794__11795) : map__11794__11795;
    var search_contains__11797 = cljs.core._lookup.call(null, map__11794__11796, "\ufdd0'search-contains", false);
    var $el__11798 = $(el);
    var multiple_QMARK___11799 = cljs.core._EQ_.call(null, "multiple", $el__11798.attr("multiple"));
    var _BANG_a__11800 = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'options", "\ufdd0'selected"], {"\ufdd0'options":chosen.core.el_options.call(null, $el__11798), "\ufdd0'selected":chosen.core.selected_values.call(null, $el__11798)}));
    $el__11798.chosen(function() {
      var G__11801__11802 = {};
      G__11801__11802["search_contains"] = search_contains__11797;
      return G__11801__11802
    }()).on("change", function() {
      return cljs.core.swap_BANG_.call(null, _BANG_a__11800, cljs.core.assoc, "\ufdd0'selected", chosen.core.selected_values.call(null, $el__11798))
    });
    cljs.core.add_watch.call(null, _BANG_a__11800, "\ufdd0'_update-dom", function(_11804, _11805, _, p__11803) {
      var map__11806__11807 = p__11803;
      var map__11806__11808 = cljs.core.seq_QMARK_.call(null, map__11806__11807) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11806__11807) : map__11806__11807;
      var selected__11809 = cljs.core._lookup.call(null, map__11806__11808, "\ufdd0'selected", null);
      $el__11798.find("option[selected='selected']").removeAttr("selected");
      var G__11810__11811 = cljs.core.seq.call(null, selected__11809);
      if(G__11810__11811) {
        var val__11812 = cljs.core.first.call(null, G__11810__11811);
        var G__11810__11813 = G__11810__11811;
        while(true) {
          $el__11798.find([cljs.core.str("option[value='"), cljs.core.str(val__11812), cljs.core.str("']")].join("")).first().attr("selected", "selected");
          var temp__3974__auto____11814 = cljs.core.next.call(null, G__11810__11813);
          if(temp__3974__auto____11814) {
            var G__11810__11815 = temp__3974__auto____11814;
            var G__11817 = cljs.core.first.call(null, G__11810__11815);
            var G__11818 = G__11810__11815;
            val__11812 = G__11817;
            G__11810__11813 = G__11818;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var dom_selected__11816 = chosen.core.selected_values.call(null, $el__11798);
      if(cljs.core.not_EQ_.call(null, selected__11809, dom_selected__11816)) {
        cljs.core.swap_BANG_.call(null, _BANG_a__11800, cljs.core.assoc, "\ufdd0'selected", dom_selected__11816)
      }else {
      }
      return $el__11798.trigger("liszt:updated")
    });
    return new chosen.core.Chosen($el__11798, _BANG_a__11800, multiple_QMARK___11799)
  };
  var ichooseu_BANG_ = function(el, var_args) {
    var p__11770 = null;
    if(goog.isDef(var_args)) {
      p__11770 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return ichooseu_BANG___delegate.call(this, el, p__11770)
  };
  ichooseu_BANG_.cljs$lang$maxFixedArity = 1;
  ichooseu_BANG_.cljs$lang$applyTo = function(arglist__11819) {
    var el = cljs.core.first(arglist__11819);
    var p__11770 = cljs.core.rest(arglist__11819);
    return ichooseu_BANG___delegate(el, p__11770)
  };
  ichooseu_BANG_.cljs$lang$arity$variadic = ichooseu_BANG___delegate;
  return ichooseu_BANG_
}();
goog.provide("c2.core");
goog.require("cljs.core");
goog.require("reflex.core");
goog.require("c2.dom");
goog.require("singult.core");
c2.core.node_data = singult.core.node_data;
c2.core.unify = function() {
  var unify__delegate = function(data, mapping, args) {
    if(cljs.core.seq.call(null, data)) {
      mapping.call(null, cljs.core.first.call(null, data))
    }else {
    }
    return cljs.core.apply.call(null, singult.core.unify, data, mapping, args)
  };
  var unify = function(data, mapping, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unify__delegate.call(this, data, mapping, args)
  };
  unify.cljs$lang$maxFixedArity = 2;
  unify.cljs$lang$applyTo = function(arglist__15834) {
    var data = cljs.core.first(arglist__15834);
    var mapping = cljs.core.first(cljs.core.next(arglist__15834));
    var args = cljs.core.rest(cljs.core.next(arglist__15834));
    return unify__delegate(data, mapping, args)
  };
  unify.cljs$lang$arity$variadic = unify__delegate;
  return unify
}();
goog.provide("c2.event");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("c2.core");
goog.require("goog.events");
goog.require("c2.dom");
goog.require("c2.core");
goog.require("cljs.reader");
c2.event.on_load = function on_load(f) {
  return goog.events.listen(window, goog.events.EventType.LOAD, f)
};
c2.event.on_raw = function() {
  var on_raw__delegate = function(node, event_type, f, p__15802) {
    var map__15807__15808 = p__15802;
    var map__15807__15809 = cljs.core.seq_QMARK_.call(null, map__15807__15808) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15807__15808) : map__15807__15808;
    var capture__15810 = cljs.core._lookup.call(null, map__15807__15809, "\ufdd0'capture", false);
    return goog.events.listen(c2.dom.__GT_dom.call(null, node), cljs.core.name.call(null, event_type), f, capture__15810)
  };
  var on_raw = function(node, event_type, f, var_args) {
    var p__15802 = null;
    if(goog.isDef(var_args)) {
      p__15802 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return on_raw__delegate.call(this, node, event_type, f, p__15802)
  };
  on_raw.cljs$lang$maxFixedArity = 3;
  on_raw.cljs$lang$applyTo = function(arglist__15811) {
    var node = cljs.core.first(arglist__15811);
    var event_type = cljs.core.first(cljs.core.next(arglist__15811));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15811)));
    var p__15802 = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__15811)));
    return on_raw__delegate(node, event_type, f, p__15802)
  };
  on_raw.cljs$lang$arity$variadic = on_raw__delegate;
  return on_raw
}();
c2.event.on = function() {
  var on = null;
  var on__3 = function(node, event_type, f) {
    return on.call(null, node, "*", event_type, f)
  };
  var on__5 = function() {
    var G__15831__delegate = function(node, selector, event_type, f, p__15812) {
      var map__15822__15823 = p__15812;
      var map__15822__15824 = cljs.core.seq_QMARK_.call(null, map__15822__15823) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15822__15823) : map__15822__15823;
      var capture__15825 = cljs.core._lookup.call(null, map__15822__15824, "\ufdd0'capture", false);
      return goog.events.listen(c2.dom.__GT_dom.call(null, node), cljs.core.name.call(null, event_type), function(event) {
        if(cljs.core.truth_(c2.dom.matches_selector_QMARK_.call(null, event.target, selector))) {
          var $node__15826 = event.target;
          while(true) {
            var temp__3971__auto____15827 = c2.core.node_data.call(null, $node__15826);
            if(cljs.core.truth_(temp__3971__auto____15827)) {
              var d__15828 = temp__3971__auto____15827;
              return f.call(null, d__15828, $node__15826, event)
            }else {
              var temp__3971__auto____15829 = c2.dom.parent.call(null, $node__15826);
              if(cljs.core.truth_(temp__3971__auto____15829)) {
                var parent__15830 = temp__3971__auto____15829;
                var G__15832 = parent__15830;
                $node__15826 = G__15832;
                continue
              }else {
                return null
              }
            }
            break
          }
        }else {
          return null
        }
      }, capture__15825)
    };
    var G__15831 = function(node, selector, event_type, f, var_args) {
      var p__15812 = null;
      if(goog.isDef(var_args)) {
        p__15812 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__15831__delegate.call(this, node, selector, event_type, f, p__15812)
    };
    G__15831.cljs$lang$maxFixedArity = 4;
    G__15831.cljs$lang$applyTo = function(arglist__15833) {
      var node = cljs.core.first(arglist__15833);
      var selector = cljs.core.first(cljs.core.next(arglist__15833));
      var event_type = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15833)));
      var f = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__15833))));
      var p__15812 = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__15833))));
      return G__15831__delegate(node, selector, event_type, f, p__15812)
    };
    G__15831.cljs$lang$arity$variadic = G__15831__delegate;
    return G__15831
  }();
  on = function(node, selector, event_type, f, var_args) {
    var p__15812 = var_args;
    switch(arguments.length) {
      case 3:
        return on__3.call(this, node, selector, event_type);
      default:
        return on__5.cljs$lang$arity$variadic(node, selector, event_type, f, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  on.cljs$lang$maxFixedArity = 4;
  on.cljs$lang$applyTo = on__5.cljs$lang$applyTo;
  on.cljs$lang$arity$3 = on__3;
  on.cljs$lang$arity$variadic = on__5.cljs$lang$arity$variadic;
  return on
}();
goog.provide("c2.svg");
goog.require("cljs.core");
goog.require("c2.core");
goog.require("c2.maths");
goog.require("c2.dom");
goog.require("c2.maths");
goog.require("c2.core");
c2.svg.__GT_xy = function __GT_xy(coordinates) {
  try {
    if(cljs.core.vector_QMARK_.call(null, coordinates)) {
      try {
        if(function() {
          var and__3822__auto____18024 = cljs.core.vector_QMARK_.call(null, coordinates);
          if(and__3822__auto____18024) {
            return cljs.core._EQ_.call(null, cljs.core.count.call(null, coordinates), 2)
          }else {
            return and__3822__auto____18024
          }
        }()) {
          var x__18025 = cljs.core.nth.call(null, coordinates, 0);
          var y__18026 = cljs.core.nth.call(null, coordinates, 1);
          return cljs.core.PersistentVector.fromArray([x__18025, y__18026], true)
        }else {
          if("\ufdd0'else") {
            throw 0;
          }else {
            return null
          }
        }
      }catch(e__7036__auto__) {
        if(e__7036__auto__ === 0) {
          throw 0;
        }else {
          throw e__7036__auto__;
        }
      }
    }else {
      if(function() {
        var G__18027__18028 = coordinates;
        if(G__18027__18028) {
          if(function() {
            var or__3824__auto____18029 = G__18027__18028.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3824__auto____18029) {
              return or__3824__auto____18029
            }else {
              return G__18027__18028.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__18027__18028.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__18027__18028)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__18027__18028)
        }
      }()) {
        var y__18031 = function() {
          var val__6603__auto____18030 = cljs.core._lookup.call(null, coordinates, "\ufdd0'y", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6603__auto____18030, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6603__auto____18030
          }
        }();
        var x__18033 = function() {
          var val__6603__auto____18032 = cljs.core._lookup.call(null, coordinates, "\ufdd0'x", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6603__auto____18032, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6603__auto____18032
          }
        }();
        return cljs.core.PersistentVector.fromArray([x__18033, y__18031], true)
      }else {
        if("\ufdd0'else") {
          throw 0;
        }else {
          return null
        }
      }
    }
  }catch(e__7036__auto__) {
    if(e__7036__auto__ === 0) {
      var G__18016__18022 = coordinates;
      return null
    }else {
      throw e__7036__auto__;
    }
  }
};
c2.svg.translate = function translate(coordinates) {
  var vec__18038__18039 = c2.svg.__GT_xy.call(null, coordinates);
  var x__18040 = cljs.core.nth.call(null, vec__18038__18039, 0, null);
  var y__18041 = cljs.core.nth.call(null, vec__18038__18039, 1, null);
  return[cljs.core.str("translate("), cljs.core.str(x__18040), cljs.core.str(","), cljs.core.str(y__18041), cljs.core.str(")")].join("")
};
c2.svg.scale = function scale(coordinates) {
  while(true) {
    if(cljs.core.vector_QMARK_.call(null, coordinates)) {
      if(function() {
        var and__3822__auto____18063 = cljs.core.vector_QMARK_.call(null, coordinates);
        if(and__3822__auto____18063) {
          return cljs.core._EQ_.call(null, cljs.core.count.call(null, coordinates), 2)
        }else {
          return and__3822__auto____18063
        }
      }()) {
        var x__18064 = cljs.core.nth.call(null, coordinates, 0);
        var y__18065 = cljs.core.nth.call(null, coordinates, 1);
        return[cljs.core.str("scale("), cljs.core.str(x__18064), cljs.core.str(","), cljs.core.str(y__18065), cljs.core.str(")")].join("")
      }else {
        if("\ufdd0'else") {
          throw new java.lang.Exception([cljs.core.str("No match found. "), cljs.core.str("Followed "), cljs.core.str(1), cljs.core.str(" branches."), cljs.core.str(" Breadcrumbs: "), cljs.core.str(cljs.core.vec([cljs.core.list("\ufdd1'clojure.core/vector?", "\ufdd1'coordinates")]))].join(""));
        }else {
          return null
        }
      }
    }else {
      if(function() {
        var G__18066__18067 = coordinates;
        if(G__18066__18067) {
          if(function() {
            var or__3824__auto____18068 = G__18066__18067.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3824__auto____18068) {
              return or__3824__auto____18068
            }else {
              return G__18066__18067.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__18066__18067.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__18066__18067)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__18066__18067)
        }
      }()) {
        var y__18070 = function() {
          var val__6603__auto____18069 = cljs.core._lookup.call(null, coordinates, "\ufdd0'y", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6603__auto____18069, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6603__auto____18069
          }
        }();
        var x__18072 = function() {
          var val__6603__auto____18071 = cljs.core._lookup.call(null, coordinates, "\ufdd0'x", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6603__auto____18071, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6603__auto____18071
          }
        }();
        var G__18074 = cljs.core.PersistentVector.fromArray([x__18072, y__18070], true);
        coordinates = G__18074;
        continue
      }else {
        if("\ufdd0'else") {
          var s__18073 = coordinates;
          return[cljs.core.str("scale("), cljs.core.str(s__18073), cljs.core.str(")")].join("")
        }else {
          return null
        }
      }
    }
    break
  }
};
c2.svg.rotate = function() {
  var rotate = null;
  var rotate__1 = function(angle) {
    return rotate.call(null, angle, cljs.core.PersistentVector.fromArray([0, 0], true))
  };
  var rotate__2 = function(angle, coordinates) {
    var vec__18079__18080 = c2.svg.__GT_xy.call(null, coordinates);
    var x__18081 = cljs.core.nth.call(null, vec__18079__18080, 0, null);
    var y__18082 = cljs.core.nth.call(null, vec__18079__18080, 1, null);
    return[cljs.core.str("rotate("), cljs.core.str(angle), cljs.core.str(","), cljs.core.str(x__18081), cljs.core.str(","), cljs.core.str(y__18082), cljs.core.str(")")].join("")
  };
  rotate = function(angle, coordinates) {
    switch(arguments.length) {
      case 1:
        return rotate__1.call(this, angle);
      case 2:
        return rotate__2.call(this, angle, coordinates)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rotate.cljs$lang$arity$1 = rotate__1;
  rotate.cljs$lang$arity$2 = rotate__2;
  return rotate
}();
c2.svg.get_bounds = function get_bounds($svg_el) {
  var b__18084 = $svg_el.getBBox();
  return cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'y", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":b__18084.x, "\ufdd0'y":b__18084.y, "\ufdd0'width":b__18084.width, "\ufdd0'height":b__18084.height})
};
c2.svg.transform_to_center = function transform_to_center(element, container) {
  var map__18098__18100 = element;
  var map__18098__18101 = cljs.core.seq_QMARK_.call(null, map__18098__18100) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18098__18100) : map__18098__18100;
  var ew__18102 = cljs.core._lookup.call(null, map__18098__18101, "\ufdd0'width", null);
  var eh__18103 = cljs.core._lookup.call(null, map__18098__18101, "\ufdd0'height", null);
  var x__18104 = cljs.core._lookup.call(null, map__18098__18101, "\ufdd0'x", null);
  var y__18105 = cljs.core._lookup.call(null, map__18098__18101, "\ufdd0'y", null);
  var map__18099__18106 = container;
  var map__18099__18107 = cljs.core.seq_QMARK_.call(null, map__18099__18106) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18099__18106) : map__18099__18106;
  var w__18108 = cljs.core._lookup.call(null, map__18099__18107, "\ufdd0'width", null);
  var h__18109 = cljs.core._lookup.call(null, map__18099__18107, "\ufdd0'height", null);
  var s__18110 = h__18109 / eh__18103 < w__18108 / ew__18102 ? h__18109 / eh__18103 : w__18108 / ew__18102;
  return[cljs.core.str(c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([w__18108 / 2 - s__18110 * (ew__18102 / 2), h__18109 / 2 - s__18110 * (eh__18103 / 2)], true))), cljs.core.str(" "), cljs.core.str(c2.svg.scale.call(null, s__18110)), cljs.core.str(" "), cljs.core.str(c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([-x__18104, -y__18105], true)))].join("")
};
c2.svg.transform_to_center_BANG_ = function transform_to_center_BANG_($svg_el) {
  var $svg__18113 = $svg_el.ownerSVGElement;
  var t__18114 = c2.svg.transform_to_center.call(null, c2.svg.get_bounds.call(null, $svg_el), cljs.core.ObjMap.fromObject(["\ufdd0'width", "\ufdd0'height"], {"\ufdd0'width":parseFloat(c2.dom.attr.call(null, $svg__18113, "\ufdd0'width")), "\ufdd0'height":parseFloat(c2.dom.attr.call(null, $svg__18113, "\ufdd0'height"))}));
  return c2.dom.attr.call(null, $svg_el, "\ufdd0'transform", t__18114)
};
c2.svg.axis = function() {
  var axis__delegate = function(scale, ticks, p__18115) {
    var map__18140__18141 = p__18115;
    var map__18140__18142 = cljs.core.seq_QMARK_.call(null, map__18140__18141) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18140__18141) : map__18140__18141;
    var label_margin__18143 = cljs.core._lookup.call(null, map__18140__18142, "\ufdd0'label-margin", 28);
    var label__18144 = cljs.core._lookup.call(null, map__18140__18142, "\ufdd0'label", null);
    var text_margin__18145 = cljs.core._lookup.call(null, map__18140__18142, "\ufdd0'text-margin", 9);
    var major_tick_width__18146 = cljs.core._lookup.call(null, map__18140__18142, "\ufdd0'major-tick-width", 6);
    var formatter__18147 = cljs.core._lookup.call(null, map__18140__18142, "\ufdd0'formatter", cljs.core.str);
    var orientation__18148 = cljs.core._lookup.call(null, map__18140__18142, "\ufdd0'orientation", "\ufdd0'left");
    var vec__18149__18152 = function() {
      var G__18150__18151 = orientation__18148;
      if(cljs.core._EQ_.call(null, "\ufdd0'bottom", G__18150__18151)) {
        return cljs.core.PersistentVector.fromArray(["\ufdd0'y", "\ufdd0'x", "\ufdd0'y1", "\ufdd0'y2", "\ufdd0'x1", "\ufdd0'x2"], true)
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'top", G__18150__18151)) {
          return cljs.core.PersistentVector.fromArray(["\ufdd0'y", "\ufdd0'x", "\ufdd0'y1", "\ufdd0'y2", "\ufdd0'x1", "\ufdd0'x2"], true)
        }else {
          if(cljs.core._EQ_.call(null, "\ufdd0'right", G__18150__18151)) {
            return cljs.core.PersistentVector.fromArray(["\ufdd0'x", "\ufdd0'y", "\ufdd0'x1", "\ufdd0'x2", "\ufdd0'y1", "\ufdd0'y2"], true)
          }else {
            if(cljs.core._EQ_.call(null, "\ufdd0'left", G__18150__18151)) {
              return cljs.core.PersistentVector.fromArray(["\ufdd0'x", "\ufdd0'y", "\ufdd0'x1", "\ufdd0'x2", "\ufdd0'y1", "\ufdd0'y2"], true)
            }else {
              if("\ufdd0'else") {
                throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(orientation__18148)].join(""));
              }else {
                return null
              }
            }
          }
        }
      }
    }();
    var x__18153 = cljs.core.nth.call(null, vec__18149__18152, 0, null);
    var y__18154 = cljs.core.nth.call(null, vec__18149__18152, 1, null);
    var x1__18155 = cljs.core.nth.call(null, vec__18149__18152, 2, null);
    var x2__18156 = cljs.core.nth.call(null, vec__18149__18152, 3, null);
    var y1__18157 = cljs.core.nth.call(null, vec__18149__18152, 4, null);
    var y2__18158 = cljs.core.nth.call(null, vec__18149__18152, 5, null);
    var parity__18161 = function() {
      var G__18159__18160 = orientation__18148;
      if(cljs.core._EQ_.call(null, "\ufdd0'bottom", G__18159__18160)) {
        return 1
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'right", G__18159__18160)) {
          return 1
        }else {
          if(cljs.core._EQ_.call(null, "\ufdd0'top", G__18159__18160)) {
            return-1
          }else {
            if(cljs.core._EQ_.call(null, "\ufdd0'left", G__18159__18160)) {
              return-1
            }else {
              if("\ufdd0'else") {
                throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(orientation__18148)].join(""));
              }else {
                return null
              }
            }
          }
        }
      }
    }();
    return cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.ObjMap.fromObject(["\ufdd0'class"], {"\ufdd0'class":[cljs.core.str("axis "), cljs.core.str(cljs.core.name.call(null, orientation__18148))].join("")}), cljs.core.PersistentVector.fromArray(["\ufdd0'line.rule", cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.interleave.call(null, cljs.core.PersistentVector.fromArray([y1__18157, y2__18158], true), (new cljs.core.Keyword("\ufdd0'range")).call(null, scale)))], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.ticks", 
    c2.core.unify.call(null, ticks, function(d) {
      return cljs.core.PersistentVector.fromArray(["\ufdd0'g.tick.major-tick", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentArrayMap.fromArrays([x__18153, y__18154], [0, scale.call(null, d)]))}), cljs.core.PersistentVector.fromArray(["\ufdd0'text", cljs.core.PersistentArrayMap.fromArrays([x__18153], [parity__18161 * text_margin__18145]), formatter__18147.call(null, d)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'line", 
      cljs.core.PersistentArrayMap.fromArrays([x1__18155, x2__18156], [0, parity__18161 * major_tick_width__18146])], true)], true)
    })], true), cljs.core.truth_(label__18144) ? cljs.core.PersistentVector.fromArray(["\ufdd0'text.label", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":[cljs.core.str(c2.svg.translate.call(null, cljs.core.PersistentArrayMap.fromArrays([x__18153, y__18154], [parity__18161 * label_margin__18143, c2.maths.mean.call(null, (new cljs.core.Keyword("\ufdd0'range")).call(null, scale))]))), cljs.core.str(" "), cljs.core.str(function() {
      var G__18162__18163 = orientation__18148;
      if(cljs.core._EQ_.call(null, "\ufdd0'right", G__18162__18163)) {
        return c2.svg.rotate.call(null, 90)
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'left", G__18162__18163)) {
          return c2.svg.rotate.call(null, -90)
        }else {
          if("\ufdd0'else") {
            return""
          }else {
            return null
          }
        }
      }
    }())].join("")}), label__18144], true) : null], true)
  };
  var axis = function(scale, ticks, var_args) {
    var p__18115 = null;
    if(goog.isDef(var_args)) {
      p__18115 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return axis__delegate.call(this, scale, ticks, p__18115)
  };
  axis.cljs$lang$maxFixedArity = 2;
  axis.cljs$lang$applyTo = function(arglist__18164) {
    var scale = cljs.core.first(arglist__18164);
    var ticks = cljs.core.first(cljs.core.next(arglist__18164));
    var p__18115 = cljs.core.rest(cljs.core.next(arglist__18164));
    return axis__delegate(scale, ticks, p__18115)
  };
  axis.cljs$lang$arity$variadic = axis__delegate;
  return axis
}();
c2.svg.ArcMax = c2.maths.Tau - 1.0E-7;
c2.svg.circle = function() {
  var circle = null;
  var circle__1 = function(radius) {
    return circle.call(null, cljs.core.PersistentVector.fromArray([0, 0], true), radius)
  };
  var circle__2 = function(coordinates, radius) {
    var vec__18169__18170 = c2.svg.__GT_xy.call(null, coordinates);
    var x__18171 = cljs.core.nth.call(null, vec__18169__18170, 0, null);
    var y__18172 = cljs.core.nth.call(null, vec__18169__18170, 1, null);
    return[cljs.core.str("M"), cljs.core.str(x__18171 + radius), cljs.core.str(","), cljs.core.str(y__18172), cljs.core.str("A"), cljs.core.str(x__18171 + radius), cljs.core.str(","), cljs.core.str(y__18172 + radius), cljs.core.str(" 0 1,1"), cljs.core.str(-(x__18171 + radius)), cljs.core.str(","), cljs.core.str(y__18172), cljs.core.str("A"), cljs.core.str(x__18171 + radius), cljs.core.str(","), cljs.core.str(y__18172 + radius), cljs.core.str(" 0 1,1"), cljs.core.str(x__18171 + radius), cljs.core.str(","), 
    cljs.core.str(y__18172)].join("")
  };
  circle = function(coordinates, radius) {
    switch(arguments.length) {
      case 1:
        return circle__1.call(this, coordinates);
      case 2:
        return circle__2.call(this, coordinates, radius)
    }
    throw"Invalid arity: " + arguments.length;
  };
  circle.cljs$lang$arity$1 = circle__1;
  circle.cljs$lang$arity$2 = circle__2;
  return circle
}();
c2.svg.arc = function() {
  var arc__delegate = function(p__18173) {
    var map__18194__18195 = p__18173;
    var map__18194__18196 = cljs.core.seq_QMARK_.call(null, map__18194__18195) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18194__18195) : map__18194__18195;
    var angle_offset__18197 = cljs.core._lookup.call(null, map__18194__18196, "\ufdd0'angle-offset", 0);
    var end_angle__18198 = cljs.core._lookup.call(null, map__18194__18196, "\ufdd0'end-angle", c2.maths.Pi);
    var start_angle__18199 = cljs.core._lookup.call(null, map__18194__18196, "\ufdd0'start-angle", 0);
    var outer_radius__18200 = cljs.core._lookup.call(null, map__18194__18196, "\ufdd0'outer-radius", 1);
    var inner_radius__18201 = cljs.core._lookup.call(null, map__18194__18196, "\ufdd0'inner-radius", 0);
    var r0__18203 = inner_radius__18201;
    var r1__18204 = outer_radius__18200;
    var vec__18202__18205 = cljs.core.sort.call(null, cljs.core.PersistentVector.fromArray([angle_offset__18197 + start_angle__18199, angle_offset__18197 + end_angle__18198], true));
    var a0__18206 = cljs.core.nth.call(null, vec__18202__18205, 0, null);
    var a1__18207 = cljs.core.nth.call(null, vec__18202__18205, 1, null);
    var da__18208 = a1__18207 - a0__18206;
    var large_arc_flag__18209 = da__18208 < c2.maths.Pi ? "0" : "1";
    var s0__18210 = c2.maths.sin.call(null, a0__18206);
    var c0__18211 = c2.maths.cos.call(null, a0__18206);
    var s1__18212 = c2.maths.sin.call(null, a1__18207);
    var c1__18213 = c2.maths.cos.call(null, a1__18207);
    if(da__18208 >= c2.svg.ArcMax) {
      return[cljs.core.str("M0,"), cljs.core.str(r1__18204), cljs.core.str("A"), cljs.core.str(r1__18204), cljs.core.str(","), cljs.core.str(r1__18204), cljs.core.str(" 0 1,1 0,"), cljs.core.str(-r1__18204), cljs.core.str("A"), cljs.core.str(r1__18204), cljs.core.str(","), cljs.core.str(r1__18204), cljs.core.str(" 0 1,1 0,"), cljs.core.str(r1__18204), cljs.core.str(cljs.core.not_EQ_.call(null, 0, r0__18203) ? [cljs.core.str("M0,"), cljs.core.str(r0__18203), cljs.core.str("A"), cljs.core.str(r0__18203), 
      cljs.core.str(","), cljs.core.str(r0__18203), cljs.core.str(" 0 1,0 0,"), cljs.core.str(-r0__18203), cljs.core.str("A"), cljs.core.str(r0__18203), cljs.core.str(","), cljs.core.str(r0__18203), cljs.core.str(" 0 1,0 0,"), cljs.core.str(r0__18203)].join("") : null), cljs.core.str("Z")].join("")
    }else {
      return[cljs.core.str("M"), cljs.core.str(r1__18204 * c0__18211), cljs.core.str(","), cljs.core.str(r1__18204 * s0__18210), cljs.core.str("A"), cljs.core.str(r1__18204), cljs.core.str(","), cljs.core.str(r1__18204), cljs.core.str(" 0 "), cljs.core.str(large_arc_flag__18209), cljs.core.str(",1 "), cljs.core.str(r1__18204 * c1__18213), cljs.core.str(","), cljs.core.str(r1__18204 * s1__18212), cljs.core.str(cljs.core.not_EQ_.call(null, 0, r0__18203) ? [cljs.core.str("L"), cljs.core.str(r0__18203 * 
      c1__18213), cljs.core.str(","), cljs.core.str(r0__18203 * s1__18212), cljs.core.str("A"), cljs.core.str(r0__18203), cljs.core.str(","), cljs.core.str(r0__18203), cljs.core.str(" 0 "), cljs.core.str(large_arc_flag__18209), cljs.core.str(",0 "), cljs.core.str(r0__18203 * c0__18211), cljs.core.str(","), cljs.core.str(r0__18203 * s0__18210)].join("") : "L0,0"), cljs.core.str("Z")].join("")
    }
  };
  var arc = function(var_args) {
    var p__18173 = null;
    if(goog.isDef(var_args)) {
      p__18173 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return arc__delegate.call(this, p__18173)
  };
  arc.cljs$lang$maxFixedArity = 0;
  arc.cljs$lang$applyTo = function(arglist__18214) {
    var p__18173 = cljs.core.seq(arglist__18214);
    return arc__delegate(p__18173)
  };
  arc.cljs$lang$arity$variadic = arc__delegate;
  return arc
}();
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.array");
goog.require("goog.events");
goog.require("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_handler) {
  goog.Disposable.call(this);
  this.handler_ = opt_handler;
  this.keys_ = []
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(!goog.isArray(type)) {
    goog.events.EventHandler.typeArray_[0] = type;
    type = goog.events.EventHandler.typeArray_
  }
  for(var i = 0;i < type.length;i++) {
    var key = goog.events.listen(src, type[i], opt_fn || this, opt_capture || false, opt_handler || this.handler_ || this);
    this.keys_.push(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.listenOnce(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var key = goog.events.listenOnce(src, type, opt_fn || this, opt_capture, opt_handler || this.handler_ || this);
    this.keys_.push(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler || this.handler_, this);
  return this
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  return this.keys_.length
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var listener = goog.events.getListener(src, type, opt_fn || this, opt_capture, opt_handler || this.handler_ || this);
    if(listener) {
      var key = listener.key;
      goog.events.unlistenByKey(key);
      goog.array.remove(this.keys_, key)
    }
  }
  return this
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler || this.handler_, this);
  return this
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.array.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_.length = 0
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll()
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.fx.DragEvent");
goog.provide("goog.fx.Dragger");
goog.provide("goog.fx.Dragger.EventType");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.Event");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.userAgent");
goog.fx.Dragger = function(target, opt_handle, opt_limits) {
  goog.events.EventTarget.call(this);
  this.target = target;
  this.handle = opt_handle || target;
  this.limits = opt_limits || new goog.math.Rect(NaN, NaN, NaN, NaN);
  this.document_ = goog.dom.getOwnerDocument(target);
  this.eventHandler_ = new goog.events.EventHandler(this);
  goog.events.listen(this.handle, [goog.events.EventType.TOUCHSTART, goog.events.EventType.MOUSEDOWN], this.startDrag, false, this)
};
goog.inherits(goog.fx.Dragger, goog.events.EventTarget);
goog.fx.Dragger.HAS_SET_CAPTURE_ = goog.userAgent.IE || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.3");
goog.fx.Dragger.EventType = {EARLY_CANCEL:"earlycancel", START:"start", BEFOREDRAG:"beforedrag", DRAG:"drag", END:"end"};
goog.fx.Dragger.prototype.target;
goog.fx.Dragger.prototype.handle;
goog.fx.Dragger.prototype.limits;
goog.fx.Dragger.prototype.clientX = 0;
goog.fx.Dragger.prototype.clientY = 0;
goog.fx.Dragger.prototype.screenX = 0;
goog.fx.Dragger.prototype.screenY = 0;
goog.fx.Dragger.prototype.startX = 0;
goog.fx.Dragger.prototype.startY = 0;
goog.fx.Dragger.prototype.deltaX = 0;
goog.fx.Dragger.prototype.deltaY = 0;
goog.fx.Dragger.prototype.pageScroll;
goog.fx.Dragger.prototype.enabled_ = true;
goog.fx.Dragger.prototype.dragging_ = false;
goog.fx.Dragger.prototype.hysteresisDistanceSquared_ = 0;
goog.fx.Dragger.prototype.mouseDownTime_ = 0;
goog.fx.Dragger.prototype.document_;
goog.fx.Dragger.prototype.eventHandler_;
goog.fx.Dragger.prototype.scrollTarget_;
goog.fx.Dragger.prototype.ieDragStartCancellingOn_ = false;
goog.fx.Dragger.prototype.getHandler = function() {
  return this.eventHandler_
};
goog.fx.Dragger.prototype.setLimits = function(limits) {
  this.limits = limits || new goog.math.Rect(NaN, NaN, NaN, NaN)
};
goog.fx.Dragger.prototype.setHysteresis = function(distance) {
  this.hysteresisDistanceSquared_ = Math.pow(distance, 2)
};
goog.fx.Dragger.prototype.getHysteresis = function() {
  return Math.sqrt(this.hysteresisDistanceSquared_)
};
goog.fx.Dragger.prototype.setScrollTarget = function(scrollTarget) {
  this.scrollTarget_ = scrollTarget
};
goog.fx.Dragger.prototype.setCancelIeDragStart = function(cancelIeDragStart) {
  this.ieDragStartCancellingOn_ = cancelIeDragStart
};
goog.fx.Dragger.prototype.getEnabled = function() {
  return this.enabled_
};
goog.fx.Dragger.prototype.setEnabled = function(enabled) {
  this.enabled_ = enabled
};
goog.fx.Dragger.prototype.disposeInternal = function() {
  goog.fx.Dragger.superClass_.disposeInternal.call(this);
  goog.events.unlisten(this.handle, [goog.events.EventType.TOUCHSTART, goog.events.EventType.MOUSEDOWN], this.startDrag, false, this);
  this.eventHandler_.dispose();
  delete this.target;
  delete this.handle;
  delete this.eventHandler_
};
goog.fx.Dragger.prototype.startDrag = function(e) {
  var isMouseDown = e.type == goog.events.EventType.MOUSEDOWN;
  if(this.enabled_ && !this.dragging_ && (!isMouseDown || e.isMouseActionButton())) {
    this.maybeReinitTouchEvent_(e);
    if(this.hysteresisDistanceSquared_ == 0) {
      this.initializeDrag_(e);
      if(this.dragging_) {
        e.preventDefault()
      }else {
        return
      }
    }else {
      e.preventDefault()
    }
    this.setupDragHandlers();
    this.clientX = this.startX = e.clientX;
    this.clientY = this.startY = e.clientY;
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    this.deltaX = this.target.offsetLeft;
    this.deltaY = this.target.offsetTop;
    this.pageScroll = goog.dom.getDomHelper(this.document_).getDocumentScroll();
    this.mouseDownTime_ = goog.now()
  }else {
    this.dispatchEvent(goog.fx.Dragger.EventType.EARLY_CANCEL)
  }
};
goog.fx.Dragger.prototype.setupDragHandlers = function() {
  var doc = this.document_;
  var docEl = doc.documentElement;
  var useCapture = !goog.fx.Dragger.HAS_SET_CAPTURE_;
  this.eventHandler_.listen(doc, [goog.events.EventType.TOUCHMOVE, goog.events.EventType.MOUSEMOVE], this.handleMove_, useCapture);
  this.eventHandler_.listen(doc, [goog.events.EventType.TOUCHEND, goog.events.EventType.MOUSEUP], this.endDrag, useCapture);
  if(goog.fx.Dragger.HAS_SET_CAPTURE_) {
    docEl.setCapture(false);
    this.eventHandler_.listen(docEl, goog.events.EventType.LOSECAPTURE, this.endDrag)
  }else {
    this.eventHandler_.listen(goog.dom.getWindow(doc), goog.events.EventType.BLUR, this.endDrag)
  }
  if(goog.userAgent.IE && this.ieDragStartCancellingOn_) {
    this.eventHandler_.listen(doc, goog.events.EventType.DRAGSTART, goog.events.Event.preventDefault)
  }
  if(this.scrollTarget_) {
    this.eventHandler_.listen(this.scrollTarget_, goog.events.EventType.SCROLL, this.onScroll_, useCapture)
  }
};
goog.fx.Dragger.prototype.initializeDrag_ = function(e) {
  var rv = this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.START, this, e.clientX, e.clientY, e));
  if(rv !== false) {
    this.dragging_ = true
  }
};
goog.fx.Dragger.prototype.endDrag = function(e, opt_dragCanceled) {
  this.eventHandler_.removeAll();
  if(goog.fx.Dragger.HAS_SET_CAPTURE_) {
    this.document_.releaseCapture()
  }
  var x = this.limitX(this.deltaX);
  var y = this.limitY(this.deltaY);
  if(this.dragging_) {
    this.maybeReinitTouchEvent_(e);
    this.dragging_ = false;
    var dragCancelled = opt_dragCanceled || e.type == goog.events.EventType.TOUCHCANCEL;
    this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.END, this, e.clientX, e.clientY, e, x, y, dragCancelled))
  }else {
    this.dispatchEvent(goog.fx.Dragger.EventType.EARLY_CANCEL)
  }
  if(e.type == goog.events.EventType.TOUCHEND || e.type == goog.events.EventType.TOUCHCANCEL) {
    e.preventDefault()
  }
};
goog.fx.Dragger.prototype.endDragCancel = function(e) {
  this.endDrag(e, true)
};
goog.fx.Dragger.prototype.maybeReinitTouchEvent_ = function(e) {
  var type = e.type;
  if(type == goog.events.EventType.TOUCHSTART || type == goog.events.EventType.TOUCHMOVE) {
    e.init(e.getBrowserEvent().targetTouches[0], e.currentTarget)
  }else {
    if(type == goog.events.EventType.TOUCHEND || type == goog.events.EventType.TOUCHCANCEL) {
      e.init(e.getBrowserEvent().changedTouches[0], e.currentTarget)
    }
  }
};
goog.fx.Dragger.prototype.handleMove_ = function(e) {
  if(this.enabled_) {
    this.maybeReinitTouchEvent_(e);
    var dx = e.clientX - this.clientX;
    var dy = e.clientY - this.clientY;
    this.clientX = e.clientX;
    this.clientY = e.clientY;
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    if(!this.dragging_) {
      var diffX = this.startX - this.clientX;
      var diffY = this.startY - this.clientY;
      var distance = diffX * diffX + diffY * diffY;
      if(distance > this.hysteresisDistanceSquared_) {
        this.initializeDrag_(e);
        if(!this.dragging_) {
          this.endDrag(e);
          return
        }
      }
    }
    var pos = this.calculatePosition_(dx, dy);
    var x = pos.x;
    var y = pos.y;
    if(this.dragging_) {
      var rv = this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.BEFOREDRAG, this, e.clientX, e.clientY, e, x, y));
      if(rv !== false) {
        this.doDrag(e, x, y, false);
        e.preventDefault()
      }
    }
  }
};
goog.fx.Dragger.prototype.calculatePosition_ = function(dx, dy) {
  var pageScroll = goog.dom.getDomHelper(this.document_).getDocumentScroll();
  dx += pageScroll.x - this.pageScroll.x;
  dy += pageScroll.y - this.pageScroll.y;
  this.pageScroll = pageScroll;
  this.deltaX += dx;
  this.deltaY += dy;
  var x = this.limitX(this.deltaX);
  var y = this.limitY(this.deltaY);
  return new goog.math.Coordinate(x, y)
};
goog.fx.Dragger.prototype.onScroll_ = function(e) {
  var pos = this.calculatePosition_(0, 0);
  e.clientX = this.clientX;
  e.clientY = this.clientY;
  this.doDrag(e, pos.x, pos.y, true)
};
goog.fx.Dragger.prototype.doDrag = function(e, x, y, dragFromScroll) {
  this.defaultAction(x, y);
  this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.DRAG, this, e.clientX, e.clientY, e, x, y))
};
goog.fx.Dragger.prototype.limitX = function(x) {
  var rect = this.limits;
  var left = !isNaN(rect.left) ? rect.left : null;
  var width = !isNaN(rect.width) ? rect.width : 0;
  var maxX = left != null ? left + width : Infinity;
  var minX = left != null ? left : -Infinity;
  return Math.min(maxX, Math.max(minX, x))
};
goog.fx.Dragger.prototype.limitY = function(y) {
  var rect = this.limits;
  var top = !isNaN(rect.top) ? rect.top : null;
  var height = !isNaN(rect.height) ? rect.height : 0;
  var maxY = top != null ? top + height : Infinity;
  var minY = top != null ? top : -Infinity;
  return Math.min(maxY, Math.max(minY, y))
};
goog.fx.Dragger.prototype.defaultAction = function(x, y) {
  this.target.style.left = x + "px";
  this.target.style.top = y + "px"
};
goog.fx.DragEvent = function(type, dragobj, clientX, clientY, browserEvent, opt_actX, opt_actY, opt_dragCanceled) {
  goog.events.Event.call(this, type);
  this.clientX = clientX;
  this.clientY = clientY;
  this.browserEvent = browserEvent;
  this.left = goog.isDef(opt_actX) ? opt_actX : dragobj.deltaX;
  this.top = goog.isDef(opt_actY) ? opt_actY : dragobj.deltaY;
  this.dragger = dragobj;
  this.dragCanceled = !!opt_dragCanceled
};
goog.inherits(goog.fx.DragEvent, goog.events.Event);
goog.provide("vcfvis.brush");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.fx.Dragger");
goog.require("c2.svg");
goog.require("c2.scale");
goog.require("c2.dom");
vcfvis.brush.SVGDrag = function SVGDrag(el) {
  return goog.fx.Dragger.call(this, el)
};
goog.inherits(vcfvis.brush.SVGDrag, goog.fx.Dragger);
vcfvis.brush.SVGDrag.prototype.defaultAction = function(x, y) {
  return"Do nothing"
};
vcfvis.brush.mouse_point = function mouse_point($container, e) {
  var point__11210 = function() {
    var or__3824__auto____11209 = $container.ownerSVGElement;
    if(cljs.core.truth_(or__3824__auto____11209)) {
      return or__3824__auto____11209
    }else {
      return $container
    }
  }().createSVGPoint();
  point__11210.x = e.clientX;
  point__11210.y = e.clientY;
  var point__11211 = point__11210.matrixTransform($container.getScreenCTM().inverse());
  return cljs.core.PersistentVector.fromArray([point__11211.x, point__11211.y], true)
};
vcfvis.brush.resize_path_d = function resize_path_d(height, direction) {
  var vec__11219__11222 = function() {
    var G__11220__11221 = direction;
    if(cljs.core._EQ_.call(null, "\ufdd0'east", G__11220__11221)) {
      return cljs.core.PersistentVector.fromArray([1, 1], true)
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0'west", G__11220__11221)) {
        return cljs.core.PersistentVector.fromArray([-1, 0], true)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(direction)].join(""));
        }else {
          return null
        }
      }
    }
  }();
  var x__11223 = cljs.core.nth.call(null, vec__11219__11222, 0, null);
  var e__11224 = cljs.core.nth.call(null, vec__11219__11222, 1, null);
  return[cljs.core.str("M"), cljs.core.str(0.5 * x__11223), cljs.core.str(","), cljs.core.str(height), cljs.core.str("A6,6 0 0 "), cljs.core.str(e__11224), cljs.core.str(" "), cljs.core.str(6.5 * x__11223), cljs.core.str(","), cljs.core.str(height + 6), cljs.core.str("V"), cljs.core.str(2 * height - 6), cljs.core.str("A6,6 0 0 "), cljs.core.str(e__11224), cljs.core.str(" "), cljs.core.str(0.5 * x__11223), cljs.core.str(","), cljs.core.str(2 * height), cljs.core.str("Z"), cljs.core.str("M"), cljs.core.str(2.5 * 
  x__11223), cljs.core.str(","), cljs.core.str(height + 8), cljs.core.str("V"), cljs.core.str(2 * height - 8), cljs.core.str("M"), cljs.core.str(4.5 * x__11223), cljs.core.str(","), cljs.core.str(height + 8), cljs.core.str("V"), cljs.core.str(2 * height - 8)].join("")
};
vcfvis.brush.init_BANG_ = function init_BANG_(el, scale_x, scale_y) {
  var width__11303 = function() {
    var vec__11299__11300 = (new cljs.core.Keyword("\ufdd0'range")).call(null, scale_x);
    var xmin__11301 = cljs.core.nth.call(null, vec__11299__11300, 0, null);
    var xmax__11302 = cljs.core.nth.call(null, vec__11299__11300, 1, null);
    return xmax__11302 - xmin__11301
  }();
  var ix__11304 = c2.scale.invert.call(null, scale_x);
  var height__11309 = function() {
    var vec__11305__11306 = (new cljs.core.Keyword("\ufdd0'range")).call(null, scale_y);
    var ymin__11307 = cljs.core.nth.call(null, vec__11305__11306, 0, null);
    var ymax__11308 = cljs.core.nth.call(null, vec__11305__11306, 1, null);
    return ymax__11308 - ymin__11307
  }();
  var _BANG_extent__11310 = cljs.core.atom.call(null, cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([0, 0], true), cljs.core.PersistentVector.fromArray([0, 0], true)], true));
  var $brush__11311 = c2.dom.append_BANG_.call(null, el, cljs.core.PersistentVector.fromArray(["\ufdd0'g.brush"], true));
  var co__7961__auto____11323 = function() {
    var co__6213__auto____11322 = new reflex.core.ComputedObservable(null, true, function() {
      var vec__11312__11315 = cljs.core.deref.call(null, _BANG_extent__11310);
      var vec__11313__11316 = cljs.core.nth.call(null, vec__11312__11315, 0, null);
      var x1__11317 = cljs.core.nth.call(null, vec__11313__11316, 0, null);
      var x2__11318 = cljs.core.nth.call(null, vec__11313__11316, 1, null);
      var vec__11314__11319 = cljs.core.nth.call(null, vec__11312__11315, 1, null);
      var y1__11320 = cljs.core.nth.call(null, vec__11314__11319, 0, null);
      var y2__11321 = cljs.core.nth.call(null, vec__11314__11319, 1, null);
      return cljs.core.PersistentVector.fromArray(["\ufdd0'g.brush", cljs.core.ObjMap.fromObject(["\ufdd0'style"], {"\ufdd0'style":cljs.core.ObjMap.fromObject(["\ufdd0'visibility"], {"\ufdd0'visibility":x1__11317 - x2__11318 === 0 ? "hidden" : null})}), cljs.core.PersistentVector.fromArray(["\ufdd0'rect.background", cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":0, "\ufdd0'width":width__11303, "\ufdd0'height":height__11309})], true), cljs.core.PersistentVector.fromArray(["\ufdd0'rect.extent", 
      cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":scale_x.call(null, x1__11317), "\ufdd0'width":scale_x.call(null, x2__11318) - scale_x.call(null, x1__11317), "\ufdd0'height":height__11309})], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.resize.w", cljs.core.PersistentVector.fromArray(["\ufdd0'path", cljs.core.ObjMap.fromObject(["\ufdd0'transform", "\ufdd0'd"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([scale_x.call(null, 
      x1__11317), 0], true)), "\ufdd0'd":vcfvis.brush.resize_path_d.call(null, height__11309 / 3, "\ufdd0'west")})], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.resize.e", cljs.core.PersistentVector.fromArray(["\ufdd0'path", cljs.core.ObjMap.fromObject(["\ufdd0'transform", "\ufdd0'd"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([scale_x.call(null, x2__11318), 0], true)), "\ufdd0'd":vcfvis.brush.resize_path_d.call(null, height__11309 / 3, 
      "\ufdd0'east")})], true)], true)], true)
    }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
    cljs.core.deref.call(null, co__6213__auto____11322);
    return co__6213__auto____11322
  }();
  var $el__7962__auto____11324 = c2.dom.__GT_dom.call(null, $brush__11311);
  singult.core.merge_BANG_.call(null, $el__7962__auto____11324, cljs.core.deref.call(null, co__7961__auto____11323));
  cljs.core.add_watch.call(null, co__7961__auto____11323, "\ufdd0'update-dom", function() {
    return singult.core.merge_BANG_.call(null, $el__7962__auto____11324, cljs.core.deref.call(null, co__7961__auto____11323))
  });
  co__7961__auto____11323;
  var $background__11325 = c2.dom.select.call(null, ".background", $brush__11311);
  var _BANG_creating_QMARK___11326 = cljs.core.atom.call(null, false);
  goog.events.listen($background__11325, "mousedown", function(e) {
    cljs.core.reset_BANG_.call(null, _BANG_creating_QMARK___11326, true);
    var vec__11327__11328 = vcfvis.brush.mouse_point.call(null, $background__11325, e);
    var x__11329 = cljs.core.nth.call(null, vec__11327__11328, 0, null);
    var y__11330 = cljs.core.nth.call(null, vec__11327__11328, 1, null);
    var x__11331 = ix__11304.call(null, x__11329);
    return cljs.core.swap_BANG_.call(null, _BANG_extent__11310, function(p1__11212_SHARP_) {
      return cljs.core.assoc_in.call(null, p1__11212_SHARP_, cljs.core.PersistentVector.fromArray([0], true), cljs.core.PersistentVector.fromArray([x__11331, x__11331], true))
    })
  });
  goog.events.listen($brush__11311, "mouseup", function(_) {
    return cljs.core.reset_BANG_.call(null, _BANG_creating_QMARK___11326, false)
  });
  goog.events.listen($brush__11311, "mousemove", function(e) {
    if(cljs.core.truth_(cljs.core.deref.call(null, _BANG_creating_QMARK___11326))) {
      var vec__11332__11333 = vcfvis.brush.mouse_point.call(null, $background__11325, e);
      var x__11334 = cljs.core.nth.call(null, vec__11332__11333, 0, null);
      var y__11335 = cljs.core.nth.call(null, vec__11332__11333, 1, null);
      var x__11336 = ix__11304.call(null, x__11334);
      return cljs.core.swap_BANG_.call(null, _BANG_extent__11310, function(p__11337) {
        var vec__11338__11340 = p__11337;
        var vec__11339__11341 = cljs.core.nth.call(null, vec__11338__11340, 0, null);
        var x1__11342 = cljs.core.nth.call(null, vec__11339__11341, 0, null);
        var x2__11343 = cljs.core.nth.call(null, vec__11339__11341, 1, null);
        var ys__11344 = cljs.core.nth.call(null, vec__11338__11340, 1, null);
        return cljs.core.PersistentVector.fromArray([x__11336 > x1__11342 ? cljs.core.PersistentVector.fromArray([x1__11342, x__11336], true) : cljs.core.PersistentVector.fromArray([x__11336, x2__11343], true), ys__11344], true)
      })
    }else {
      return null
    }
  });
  goog.events.listen($brush__11311, "mouseout", function(e) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____11345 = e.relatedTarget;
      if(cljs.core.truth_(and__3822__auto____11345)) {
        return goog.dom.contains($brush__11311, e.relatedTarget)
      }else {
        return and__3822__auto____11345
      }
    }())) {
      return null
    }else {
      return cljs.core.reset_BANG_.call(null, _BANG_creating_QMARK___11326, false)
    }
  });
  var _BANG_extent_at_start__11347 = cljs.core.atom.call(null, null);
  var vec__11346__11348 = (new cljs.core.Keyword("\ufdd0'domain")).call(null, scale_x);
  var xmin__11349 = cljs.core.nth.call(null, vec__11346__11348, 0, null);
  var xmax__11350 = cljs.core.nth.call(null, vec__11346__11348, 1, null);
  var min_extent__11351 = ix__11304.call(null, 10);
  var start_drag_BANG___11352 = function() {
    return cljs.core.reset_BANG_.call(null, _BANG_extent_at_start__11347, cljs.core.deref.call(null, _BANG_extent__11310))
  };
  var drag_fn_BANG___11363 = function(dragger, transform_x) {
    return goog.events.listen(dragger, goog.fx.Dragger.EventType.DRAG, function(e) {
      var vec__11353__11355 = cljs.core.deref.call(null, _BANG_extent_at_start__11347);
      var vec__11354__11356 = cljs.core.nth.call(null, vec__11353__11355, 0, null);
      var x1__11357 = cljs.core.nth.call(null, vec__11354__11356, 0, null);
      var x2__11358 = cljs.core.nth.call(null, vec__11354__11356, 1, null);
      var ys__11359 = cljs.core.nth.call(null, vec__11353__11355, 1, null);
      var w__11360 = x2__11358 - x1__11357;
      var dx__11361 = ix__11304.call(null, e.left) - ix__11304.call(null, 0);
      var xs__11362 = transform_x.call(null, dx__11361, x1__11357, x2__11358, w__11360);
      return cljs.core.reset_BANG_.call(null, _BANG_extent__11310, cljs.core.PersistentVector.fromArray([xs__11362, ys__11359], true))
    })
  };
  var dragger__11364 = new vcfvis.brush.SVGDrag(c2.dom.select.call(null, ".extent", $brush__11311));
  var left__11365 = new vcfvis.brush.SVGDrag(c2.dom.select.call(null, ".resize.w", $brush__11311));
  var right__11366 = new vcfvis.brush.SVGDrag(c2.dom.select.call(null, ".resize.e", $brush__11311));
  var G__11367__11368 = cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([dragger__11364, left__11365, right__11366], true));
  if(G__11367__11368) {
    var d__11369 = cljs.core.first.call(null, G__11367__11368);
    var G__11367__11370 = G__11367__11368;
    while(true) {
      goog.events.listen(d__11369, goog.fx.Dragger.EventType.START, start_drag_BANG___11352);
      var temp__3974__auto____11371 = cljs.core.next.call(null, G__11367__11370);
      if(temp__3974__auto____11371) {
        var G__11367__11372 = temp__3974__auto____11371;
        var G__11373 = cljs.core.first.call(null, G__11367__11372);
        var G__11374 = G__11367__11372;
        d__11369 = G__11373;
        G__11367__11370 = G__11374;
        continue
      }else {
      }
      break
    }
  }else {
  }
  drag_fn_BANG___11363.call(null, dragger__11364, function(dx, x1, x2, w) {
    if(dx + x1 < xmin__11349) {
      return cljs.core.PersistentVector.fromArray([xmin__11349, xmin__11349 + w], true)
    }else {
      if(dx + x2 > xmax__11350) {
        return cljs.core.PersistentVector.fromArray([xmax__11350 - w, xmax__11350], true)
      }else {
        if("\ufdd0'else") {
          return cljs.core.PersistentVector.fromArray([dx + x1, dx + x2], true)
        }else {
          return null
        }
      }
    }
  });
  drag_fn_BANG___11363.call(null, left__11365, function(dx, x1, x2, w) {
    if(dx + x1 < xmin__11349) {
      return cljs.core.PersistentVector.fromArray([xmin__11349, x2], true)
    }else {
      if(dx + x1 > x2) {
        return cljs.core.PersistentVector.fromArray([x2 - min_extent__11351, x2], true)
      }else {
        if("\ufdd0'else") {
          return cljs.core.PersistentVector.fromArray([dx + x1, x2], true)
        }else {
          return null
        }
      }
    }
  });
  drag_fn_BANG___11363.call(null, right__11366, function(dx, x1, x2, w) {
    if(dx + x2 > xmax__11350) {
      return cljs.core.PersistentVector.fromArray([x1, xmax__11350], true)
    }else {
      if(dx + x2 < x1) {
        return cljs.core.PersistentVector.fromArray([x1, x1 + min_extent__11351], true)
      }else {
        if("\ufdd0'else") {
          return cljs.core.PersistentVector.fromArray([x1, dx + x2], true)
        }else {
          return null
        }
      }
    }
  });
  return _BANG_extent__11310
};
goog.provide("vcfvis.histogram");
goog.require("cljs.core");
goog.require("c2.core");
goog.require("c2.maths");
goog.require("c2.scale");
goog.require("singult.core");
goog.require("c2.event");
goog.require("c2.core");
goog.require("vcfvis.data");
goog.require("vcfvis.ui");
goog.require("c2.dom");
goog.require("c2.svg");
goog.require("c2.maths");
goog.require("goog.string");
goog.require("vcfvis.brush");
goog.require("vcfvis.core");
vcfvis.histogram.height = vcfvis.ui.hist_height;
vcfvis.histogram.width = vcfvis.ui.hist_width;
vcfvis.histogram.margin = vcfvis.ui.hist_margin;
vcfvis.histogram.inter_hist_margin = vcfvis.ui.inter_hist_margin;
vcfvis.histogram.axis_height = vcfvis.ui.axis_height;
vcfvis.histogram.hist_g_STAR_ = function() {
  var hist_g_STAR___delegate = function(vcf, metric, p__11375) {
    var map__11414__11415 = p__11375;
    var map__11414__11416 = cljs.core.seq_QMARK_.call(null, map__11414__11415) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11414__11415) : map__11414__11415;
    var bars_QMARK___11417 = cljs.core._lookup.call(null, map__11414__11416, "\ufdd0'bars?", true);
    var width__11418 = cljs.core._lookup.call(null, map__11414__11416, "\ufdd0'width", null);
    var height__11419 = cljs.core._lookup.call(null, map__11414__11416, "\ufdd0'height", null);
    var map__11420__11422 = metric;
    var map__11420__11423 = cljs.core.seq_QMARK_.call(null, map__11420__11422) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11420__11422) : map__11420__11422;
    var metric_id__11424 = cljs.core._lookup.call(null, map__11420__11423, "\ufdd0'id", null);
    var scale_x__11425 = cljs.core._lookup.call(null, map__11420__11423, "\ufdd0'scale-x", null);
    var map__11421__11426 = cljs.core.get_in.call(null, vcf, cljs.core.PersistentVector.fromArray(["\ufdd0'cf", metric_id__11424], true));
    var map__11421__11427 = cljs.core.seq_QMARK_.call(null, map__11421__11426) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11421__11426) : map__11421__11426;
    var bin_width__11428 = cljs.core._lookup.call(null, map__11421__11427, "\ufdd0'bin-width", null);
    var binned__11429 = cljs.core._lookup.call(null, map__11421__11427, "\ufdd0'binned", null);
    var dimension__11430 = cljs.core._lookup.call(null, map__11421__11427, "\ufdd0'dimension", null);
    var max_val__11431 = cljs.core.first.call(null, binned__11429.top(1))["value"];
    var no_data_QMARK___11432 = max_val__11431 === 0;
    var scale_y__11435 = function() {
      var G__11433__11434 = cljs.core.get_in.call(null, metric, cljs.core.PersistentVector.fromArray(["\ufdd0'y-scale", "\ufdd0'type"], true), "\ufdd0'linear");
      if(cljs.core._EQ_.call(null, "\ufdd0'log", G__11433__11434)) {
        return c2.scale.log.call(null, "\ufdd0'domain", cljs.core.PersistentVector.fromArray([1, max_val__11431], true), "\ufdd0'range", cljs.core.PersistentVector.fromArray([0, height__11419], true))
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'linear", G__11433__11434)) {
          return c2.scale.linear.call(null, "\ufdd0'domain", cljs.core.PersistentVector.fromArray([0, max_val__11431], true), "\ufdd0'range", cljs.core.PersistentVector.fromArray([0, height__11419], true))
        }else {
          if("\ufdd0'else") {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.core.get_in.call(null, metric, cljs.core.PersistentVector.fromArray(["\ufdd0'y-scale", "\ufdd0'type"], true), "\ufdd0'linear"))].join(""));
          }else {
            return null
          }
        }
      }
    }();
    var scale_x__11436 = cljs.core.assoc_in.call(null, scale_x__11425, cljs.core.PersistentVector.fromArray(["\ufdd0'range", 1], true), width__11418);
    var dx__11437 = scale_x__11436.call(null, bin_width__11428) - scale_x__11436.call(null, 0);
    return cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.PersistentVector.fromArray(["\ufdd0'text.message", cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'y"], {"\ufdd0'x":width__11418 / 2, "\ufdd0'y":height__11419 / 2}), no_data_QMARK___11432 ? "No available data; try clearing filters on other dimensions." : null], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.data-frame", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":[cljs.core.str(c2.svg.translate.call(null, 
    cljs.core.PersistentVector.fromArray([0, height__11419], true))), cljs.core.str(c2.svg.scale.call(null, cljs.core.PersistentVector.fromArray([1, -1], true)))].join("")}), cljs.core.PersistentVector.fromArray(["\ufdd0'g.distribution", no_data_QMARK___11432 ? null : cljs.core.truth_(bars_QMARK___11417) ? function() {
      var iter__2363__auto____11448 = function iter__11438(s__11439) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__11439__11444 = s__11439;
          while(true) {
            if(cljs.core.seq.call(null, s__11439__11444)) {
              var d__11445 = cljs.core.first.call(null, s__11439__11444);
              return cljs.core.cons.call(null, function() {
                var x__11446 = d__11445["key"];
                var count__11447 = d__11445["value"];
                return cljs.core.PersistentVector.fromArray(["\ufdd0'rect.bar", cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":scale_x__11436.call(null, x__11446), "\ufdd0'width":dx__11437, "\ufdd0'height":scale_y__11435.call(null, count__11447)})], true)
              }(), iter__11438.call(null, cljs.core.rest.call(null, s__11439__11444)))
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__2363__auto____11448.call(null, binned__11429.all())
    }() : cljs.core.PersistentVector.fromArray(["\ufdd0'path", cljs.core.ObjMap.fromObject(["\ufdd0'd"], {"\ufdd0'd":[cljs.core.str("M"), cljs.core.str(binned__11429.all().map(function(d) {
      var x__11449 = d["key"];
      var count__11450 = d["value"];
      var h__11451 = scale_y__11435.call(null, count__11450);
      return[cljs.core.str(scale_x__11436.call(null, x__11449)), cljs.core.str(","), cljs.core.str(h__11451)].join("")
    }).join("L"))].join("")})], true)], true)], true)], true)
  };
  var hist_g_STAR_ = function(vcf, metric, var_args) {
    var p__11375 = null;
    if(goog.isDef(var_args)) {
      p__11375 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return hist_g_STAR___delegate.call(this, vcf, metric, p__11375)
  };
  hist_g_STAR_.cljs$lang$maxFixedArity = 2;
  hist_g_STAR_.cljs$lang$applyTo = function(arglist__11452) {
    var vcf = cljs.core.first(arglist__11452);
    var metric = cljs.core.first(cljs.core.next(arglist__11452));
    var p__11375 = cljs.core.rest(cljs.core.next(arglist__11452));
    return hist_g_STAR___delegate(vcf, metric, p__11375)
  };
  hist_g_STAR_.cljs$lang$arity$variadic = hist_g_STAR___delegate;
  return hist_g_STAR_
}();
vcfvis.histogram.draw_mini_hist_for_metric_BANG_ = function draw_mini_hist_for_metric_BANG_(m) {
  var vcfs__11470 = cljs.core.deref.call(null, vcfvis.core._BANG_vcfs);
  var n__11471 = cljs.core.count.call(null, vcfs__11470);
  var mini_width__11472 = parseFloat(c2.dom.style.call(null, "#metrics", "\ufdd0'width"));
  var mini_height__11473 = 100;
  return singult.core.merge_BANG_.call(null, c2.dom.select.call(null, [cljs.core.str("#metric-"), cljs.core.str((new cljs.core.Keyword("\ufdd0'id")).call(null, m)), cljs.core.str(" .mini-hist")].join("")), cljs.core.PersistentVector.fromArray(["\ufdd0'div.mini-hist", cljs.core.PersistentVector.fromArray(["\ufdd0'svg", cljs.core.ObjMap.fromObject(["\ufdd0'width", "\ufdd0'height"], {"\ufdd0'width":vcfvis.histogram.width, "\ufdd0'height":n__11471 * mini_height__11473 + (n__11471 - 1) * vcfvis.histogram.inter_hist_margin}), 
  function() {
    var iter__2363__auto____11486 = function iter__11474(s__11475) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__11475__11481 = s__11475;
        while(true) {
          if(cljs.core.seq.call(null, s__11475__11481)) {
            var vec__11482__11483 = cljs.core.first.call(null, s__11475__11481);
            var vcf__11484 = cljs.core.nth.call(null, vec__11482__11483, 0, null);
            var idx__11485 = cljs.core.nth.call(null, vec__11482__11483, 1, null);
            return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([0, idx__11485 * (mini_height__11473 + vcfvis.histogram.inter_hist_margin)], true))}), vcfvis.histogram.hist_g_STAR_.call(null, vcf__11484, m, "\ufdd0'height", mini_height__11473, "\ufdd0'width", mini_width__11472, "\ufdd0'bars?", true)], true), iter__11474.call(null, cljs.core.rest.call(null, 
            s__11475__11481)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____11486.call(null, cljs.core.map.call(null, cljs.core.vector, vcfs__11470, cljs.core.range.call(null)))
  }()], true)], true))
};
vcfvis.histogram.draw_histogram_BANG_ = function draw_histogram_BANG_(vcfs, metric) {
  var map__11544__11545 = metric;
  var map__11544__11546 = cljs.core.seq_QMARK_.call(null, map__11544__11545) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11544__11545) : map__11544__11545;
  var x__11547 = cljs.core._lookup.call(null, map__11544__11546, "\ufdd0'scale-x", null);
  var tick_range__11548 = -cljs.core.apply.call(null, cljs.core._, (new cljs.core.Keyword("\ufdd0'domain")).call(null, x__11547)) / cljs.core.count.call(null, (new cljs.core.Keyword("\ufdd0'ticks")).call(null, x__11547));
  var n__11549 = cljs.core.count.call(null, vcfs);
  var hist_height__11550 = (vcfvis.histogram.height - n__11549 * (vcfvis.histogram.inter_hist_margin - 1)) / n__11549;
  singult.core.merge_BANG_.call(null, c2.dom.select.call(null, "#main-hist"), cljs.core.PersistentVector.fromArray(["\ufdd0'div#main-hist", cljs.core.PersistentVector.fromArray(["\ufdd0'div#histograms", cljs.core.PersistentVector.fromArray(["\ufdd0'div.labels", function() {
    var iter__2363__auto____11563 = function iter__11551(s__11552) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__11552__11558 = s__11552;
        while(true) {
          if(cljs.core.seq.call(null, s__11552__11558)) {
            var vec__11559__11560 = cljs.core.first.call(null, s__11552__11558);
            var vcf__11561 = cljs.core.nth.call(null, vec__11559__11560, 0, null);
            var idx__11562 = cljs.core.nth.call(null, vec__11559__11560, 1, null);
            return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'span.label", cljs.core.ObjMap.fromObject(["\ufdd0'style"], {"\ufdd0'style":cljs.core.ObjMap.fromObject(["\ufdd0'top"], {"\ufdd0'top":[cljs.core.str(idx__11562 * (hist_height__11550 + vcfvis.histogram.inter_hist_margin)), cljs.core.str("px")].join("")})}), vcf__11561.call(null, "\ufdd0'file-url")], true), iter__11551.call(null, cljs.core.rest.call(null, s__11552__11558)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____11563.call(null, cljs.core.map.call(null, cljs.core.vector, vcfs, cljs.core.range.call(null)))
  }()], true), cljs.core.PersistentVector.fromArray(["\ufdd0'svg.histogram", cljs.core.ObjMap.fromObject(["\ufdd0'width", "\ufdd0'height"], {"\ufdd0'width":vcfvis.histogram.width + 2 * vcfvis.histogram.margin, "\ufdd0'height":vcfvis.histogram.height + (n__11549 - 1) * vcfvis.histogram.inter_hist_margin}), cljs.core.PersistentVector.fromArray(["\ufdd0'g.hist-container", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([vcfvis.histogram.margin, 
  0], true))}), function() {
    var iter__2363__auto____11576 = function iter__11564(s__11565) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__11565__11571 = s__11565;
        while(true) {
          if(cljs.core.seq.call(null, s__11565__11571)) {
            var vec__11572__11573 = cljs.core.first.call(null, s__11565__11571);
            var vcf__11574 = cljs.core.nth.call(null, vec__11572__11573, 0, null);
            var idx__11575 = cljs.core.nth.call(null, vec__11572__11573, 1, null);
            return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([0, idx__11575 * (hist_height__11550 + vcfvis.histogram.inter_hist_margin)], true))}), vcfvis.histogram.hist_g_STAR_.call(null, vcf__11574, metric, "\ufdd0'height", hist_height__11550, "\ufdd0'width", vcfvis.histogram.width)], true), iter__11564.call(null, cljs.core.rest.call(null, 
            s__11565__11571)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____11576.call(null, cljs.core.map.call(null, cljs.core.vector, vcfs, cljs.core.range.call(null)))
  }()], true)], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'div#hist-axis", cljs.core.PersistentVector.fromArray(["\ufdd0'div.axis.abscissa", cljs.core.PersistentVector.fromArray(["\ufdd0'svg", cljs.core.ObjMap.fromObject(["\ufdd0'width", "\ufdd0'height"], {"\ufdd0'width":vcfvis.histogram.width + 2 * vcfvis.histogram.margin, "\ufdd0'height":vcfvis.histogram.axis_height}), cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, 
  cljs.core.PersistentVector.fromArray([vcfvis.histogram.margin, 2], true))}), c2.svg.axis.call(null, x__11547, (new cljs.core.Keyword("\ufdd0'ticks")).call(null, x__11547), "\ufdd0'orientation", "\ufdd0'bottom", "\ufdd0'formatter", cljs.core.partial.call(null, goog.string.format, tick_range__11548 < 0.075 ? "%.2f" : "%.1f"))], true)], true)], true)], true)], true));
  var _BANG_b__11577 = vcfvis.brush.init_BANG_.call(null, "#histograms svg .hist-container", x__11547, c2.scale.linear.call(null, "\ufdd0'range", cljs.core.PersistentVector.fromArray([0, vcfvis.histogram.height], true)));
  var temp__3974__auto____11578 = cljs.core.deref.call(null, metric.call(null, "\ufdd0'!filter-extent"));
  if(cljs.core.truth_(temp__3974__auto____11578)) {
    var initial_extent__11579 = temp__3974__auto____11578;
    var vec__11580__11582 = metric.call(null, "\ufdd0'range");
    var r_min__11583 = cljs.core.nth.call(null, vec__11580__11582, 0, null);
    var r_max__11584 = cljs.core.nth.call(null, vec__11580__11582, 1, null);
    var vec__11581__11585 = initial_extent__11579;
    var start__11586 = cljs.core.nth.call(null, vec__11581__11585, 0, null);
    var end__11587 = cljs.core.nth.call(null, vec__11581__11585, 1, null);
    cljs.core.reset_BANG_.call(null, _BANG_b__11577, cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([start__11586 > r_min__11583 ? start__11586 : r_min__11583, end__11587 < r_max__11584 ? end__11587 : r_max__11584], true), cljs.core.PersistentVector.fromArray([0, 0], true)], true))
  }else {
  }
  return cljs.core.add_watch.call(null, _BANG_b__11577, "\ufdd0'onbrush", function(_11589, _11590, _, p__11588) {
    var vec__11591__11592 = p__11588;
    var xs__11593 = cljs.core.nth.call(null, vec__11591__11592, 0, null);
    var ___11594 = cljs.core.nth.call(null, vec__11591__11592, 1, null);
    var G__11595__11596 = cljs.core.seq.call(null, cljs.core.deref.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_));
    if(G__11595__11596) {
      var s__9347__auto____11597 = cljs.core.first.call(null, G__11595__11596);
      var G__11595__11598 = G__11595__11596;
      while(true) {
        s__9347__auto____11597.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'metric-brushed", "\ufdd0'extent"], {"\ufdd0'metric-brushed":metric, "\ufdd0'extent":xs__11593}));
        var temp__3974__auto____11599 = cljs.core.next.call(null, G__11595__11598);
        if(temp__3974__auto____11599) {
          var G__11595__11600 = temp__3974__auto____11599;
          var G__11601 = cljs.core.first.call(null, G__11595__11600);
          var G__11602 = G__11595__11600;
          s__9347__auto____11597 = G__11601;
          G__11595__11598 = G__11602;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  })
};
vcfvis.histogram.clear_histogram_BANG_ = function clear_histogram_BANG_() {
  singult.core.merge_BANG_.call(null, c2.dom.select.call(null, "#main-hist"), cljs.core.PersistentVector.fromArray(["\ufdd0'div#main-hist", cljs.core.PersistentVector.fromArray(["\ufdd0'div#histograms"], true), cljs.core.PersistentVector.fromArray(["\ufdd0'div#hist-axis"], true)], true));
  var G__11609__11610 = cljs.core.seq.call(null, cljs.core.deref.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_));
  if(G__11609__11610) {
    var s__9347__auto____11611 = cljs.core.first.call(null, G__11609__11610);
    var G__11609__11612 = G__11609__11610;
    while(true) {
      s__9347__auto____11611.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'count-updated"], {"\ufdd0'count-updated":null}));
      var temp__3974__auto____11613 = cljs.core.next.call(null, G__11609__11612);
      if(temp__3974__auto____11613) {
        var G__11609__11614 = temp__3974__auto____11613;
        var G__11615 = cljs.core.first.call(null, G__11609__11614);
        var G__11616 = G__11609__11614;
        s__9347__auto____11611 = G__11615;
        G__11609__11612 = G__11616;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
vcfvis.histogram.draw_mini_hists_BANG_ = function draw_mini_hists_BANG_() {
  var G__11623__11624 = cljs.core.seq.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_visible_metrics));
  if(G__11623__11624) {
    var m__11625 = cljs.core.first.call(null, G__11623__11624);
    var G__11623__11626 = G__11623__11624;
    while(true) {
      vcfvis.histogram.draw_mini_hist_for_metric_BANG_.call(null, m__11625);
      var temp__3974__auto____11627 = cljs.core.next.call(null, G__11623__11626);
      if(temp__3974__auto____11627) {
        var G__11623__11628 = temp__3974__auto____11627;
        var G__11629 = cljs.core.first.call(null, G__11623__11628);
        var G__11630 = G__11623__11628;
        m__11625 = G__11629;
        G__11623__11626 = G__11630;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
var co__6219__auto____11634 = function() {
  var co__6213__auto____11633 = new reflex.core.ComputedObservable(null, true, function() {
    var vcfs__11631 = cljs.core.deref.call(null, vcfvis.core._BANG_vcfs);
    var metric__11632 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
    vcfvis.histogram.clear_histogram_BANG_.call(null);
    if(cljs.core.seq.call(null, vcfs__11631)) {
      vcfvis.histogram.draw_histogram_BANG_.call(null, vcfs__11631, metric__11632);
      return vcfvis.histogram.draw_mini_hists_BANG_.call(null)
    }else {
      return null
    }
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6213__auto____11633);
  return co__6213__auto____11633
}();
cljs.core.add_watch.call(null, co__6219__auto____11634, "\ufdd0'reflex-constraint", function() {
  var vcfs__11635 = cljs.core.deref.call(null, vcfvis.core._BANG_vcfs);
  var metric__11636 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
  vcfvis.histogram.clear_histogram_BANG_.call(null);
  if(cljs.core.seq.call(null, vcfs__11635)) {
    vcfvis.histogram.draw_histogram_BANG_.call(null, vcfs__11635, metric__11636);
    return vcfvis.histogram.draw_mini_hists_BANG_.call(null)
  }else {
    return null
  }
});
co__6219__auto____11634;
goog.provide("vcfvis.controls");
goog.require("cljs.core");
goog.require("singult.core");
goog.require("c2.util");
goog.require("chosen.core");
goog.require("c2.core");
goog.require("c2.event");
goog.require("c2.dom");
goog.require("vcfvis.data");
goog.require("vcfvis.histogram");
goog.require("vcfvis.core");
goog.require("c2.util");
goog.require("c2.core");
goog.require("singult.core");
goog.require("chosen.core");
vcfvis.controls.file_selector = function() {
  var $selector__10965 = c2.dom.append_BANG_.call(null, "#file-selector", cljs.core.PersistentVector.fromArray(["\ufdd0'select", cljs.core.ObjMap.fromObject(["\ufdd0'multiple", "\ufdd0'data-placeholder"], {"\ufdd0'multiple":"multiple", "\ufdd0'data-placeholder":"Select VCF files"})], true));
  var _BANG_c__10966 = chosen.core.ichooseu_BANG_.call(null, $selector__10965, "\ufdd0'search-contains", true);
  var co__6219__auto____10975 = function() {
    var co__6213__auto____10974 = new reflex.core.ComputedObservable(null, true, function() {
      return chosen.core.options.call(null, _BANG_c__10966, cljs.core.map.call(null, function(p__10967) {
        var map__10968__10969 = p__10967;
        var map__10968__10970 = cljs.core.seq_QMARK_.call(null, map__10968__10969) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10968__10969) : map__10968__10969;
        var id__10971 = cljs.core._lookup.call(null, map__10968__10970, "\ufdd0'id", null);
        var folder__10972 = cljs.core._lookup.call(null, map__10968__10970, "\ufdd0'folder", null);
        var filename__10973 = cljs.core._lookup.call(null, map__10968__10970, "\ufdd0'filename", null);
        return cljs.core.ObjMap.fromObject(["\ufdd0'text", "\ufdd0'value", "\ufdd0'group"], {"\ufdd0'text":filename__10973, "\ufdd0'value":id__10971, "\ufdd0'group":folder__10972})
      }, cljs.core.deref.call(null, vcfvis.core._BANG_available_files)))
    }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
    cljs.core.deref.call(null, co__6213__auto____10974);
    return co__6213__auto____10974
  }();
  cljs.core.add_watch.call(null, co__6219__auto____10975, "\ufdd0'reflex-constraint", function() {
    return chosen.core.options.call(null, _BANG_c__10966, cljs.core.map.call(null, function(p__10976) {
      var map__10977__10978 = p__10976;
      var map__10977__10979 = cljs.core.seq_QMARK_.call(null, map__10977__10978) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10977__10978) : map__10977__10978;
      var id__10980 = cljs.core._lookup.call(null, map__10977__10979, "\ufdd0'id", null);
      var folder__10981 = cljs.core._lookup.call(null, map__10977__10979, "\ufdd0'folder", null);
      var filename__10982 = cljs.core._lookup.call(null, map__10977__10979, "\ufdd0'filename", null);
      return cljs.core.ObjMap.fromObject(["\ufdd0'text", "\ufdd0'value", "\ufdd0'group"], {"\ufdd0'text":filename__10982, "\ufdd0'value":id__10980, "\ufdd0'group":folder__10981})
    }, cljs.core.deref.call(null, vcfvis.core._BANG_available_files)))
  });
  co__6219__auto____10975;
  return _BANG_c__10966
}();
var co__7961__auto____11003 = function() {
  var co__6213__auto____11002 = new reflex.core.ComputedObservable(null, true, function() {
    var shared__10983 = cljs.core.set.call(null, cljs.core.map.call(null, "\ufdd0'id", cljs.core.deref.call(null, vcfvis.core._BANG_shared_metrics)));
    var selected_metric__10984 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
    var metrics__10992 = function() {
      var iter__2363__auto____10991 = function iter__10985(s__10986) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__10986__10989 = s__10986;
          while(true) {
            if(cljs.core.seq.call(null, s__10986__10989)) {
              var m__10990 = cljs.core.first.call(null, s__10986__10989);
              return cljs.core.cons.call(null, cljs.core.assoc.call(null, m__10990, "\ufdd0'selected?", cljs.core._EQ_.call(null, m__10990, selected_metric__10984), "\ufdd0'visible?", vcfvis.core.visible_metric_QMARK_.call(null, m__10990), "\ufdd0'shared?", cljs.core.contains_QMARK_.call(null, shared__10983, m__10990.call(null, "\ufdd0'id"))), iter__10985.call(null, cljs.core.rest.call(null, s__10986__10989)))
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__2363__auto____10991.call(null, cljs.core.vals.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_context).call(null, "\ufdd0'metrics")))
    }();
    return cljs.core.PersistentVector.fromArray(["\ufdd0'div#metrics", c2.core.unify.call(null, metrics__10992, function(p__10993) {
      var map__10994__10995 = p__10993;
      var map__10994__10996 = cljs.core.seq_QMARK_.call(null, map__10994__10995) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10994__10995) : map__10994__10995;
      var shared_QMARK___10997 = cljs.core._lookup.call(null, map__10994__10996, "\ufdd0'shared?", null);
      var visible_QMARK___10998 = cljs.core._lookup.call(null, map__10994__10996, "\ufdd0'visible?", null);
      var selected_QMARK___10999 = cljs.core._lookup.call(null, map__10994__10996, "\ufdd0'selected?", null);
      var desc__11000 = cljs.core._lookup.call(null, map__10994__10996, "\ufdd0'desc", null);
      var id__11001 = cljs.core._lookup.call(null, map__10994__10996, "\ufdd0'id", null);
      return cljs.core.PersistentVector.fromArray(["\ufdd0'div.metric", cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":[cljs.core.str("metric-"), cljs.core.str(id__11001)].join(""), "\ufdd0'class":[cljs.core.str(cljs.core.truth_(selected_QMARK___10999) ? "selected" : null), cljs.core.str(" "), cljs.core.str(cljs.core.truth_(visible_QMARK___10998) ? "expanded" : null), cljs.core.str(" "), cljs.core.str(cljs.core.truth_(shared_QMARK___10997) ? null : "disabled")].join("")}), 
      cljs.core.PersistentVector.fromArray(["\ufdd0'h2", id__11001], true), cljs.core.PersistentVector.fromArray(["\ufdd0'button.expand-btn", "V"], true), cljs.core.PersistentVector.fromArray(["\ufdd0'span.desc", desc__11000], true), cljs.core.PersistentVector.fromArray(["\ufdd0'div.mini-hist", singult.core.ignore.call(null)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'div.sort-handle"], true)], true)
    }, "\ufdd0'key-fn", function(p1__10964_SHARP_) {
      return(new cljs.core.Keyword("\ufdd0'id")).call(null, p1__10964_SHARP_)
    })], true)
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6213__auto____11002);
  return co__6213__auto____11002
}();
var $el__7962__auto____11004 = c2.dom.__GT_dom.call(null, "#metrics");
singult.core.merge_BANG_.call(null, $el__7962__auto____11004, cljs.core.deref.call(null, co__7961__auto____11003));
cljs.core.add_watch.call(null, co__7961__auto____11003, "\ufdd0'update-dom", function() {
  return singult.core.merge_BANG_.call(null, $el__7962__auto____11004, cljs.core.deref.call(null, co__7961__auto____11003))
});
co__7961__auto____11003;
jQuery("#metrics").sortable({"handle":".sort-handle"});
c2.event.on.call(null, "#metrics", "\ufdd0'click", function(d, _, e) {
  if(cljs.core.truth_(c2.dom.matches_selector_QMARK_.call(null, e.target, ".expand-btn"))) {
    return null
  }else {
    return vcfvis.core.select_metric_BANG_.call(null, cljs.core.dissoc.call(null, d, "\ufdd0'selected?", "\ufdd0'shared?", "\ufdd0'visible?"))
  }
});
c2.event.on.call(null, "#metrics", ".expand-btn", "\ufdd0'click", function(d) {
  var m__11005 = cljs.core.dissoc.call(null, d, "\ufdd0'selected?", "\ufdd0'shared?", "\ufdd0'visible?");
  if(cljs.core.truth_(vcfvis.core.visible_metric_QMARK_.call(null, m__11005))) {
  }else {
    vcfvis.histogram.draw_mini_hist_for_metric_BANG_.call(null, m__11005)
  }
  return vcfvis.core.toggle_visible_metric_BANG_.call(null, m__11005)
});
cljs.core.swap_BANG_.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_, cljs.core.conj, function(m__9353__auto__) {
  try {
    if(function() {
      var G__11011__11012 = m__9353__auto__;
      if(G__11011__11012) {
        if(function() {
          var or__3824__auto____11013 = G__11011__11012.cljs$lang$protocol_mask$partition0$ & 256;
          if(or__3824__auto____11013) {
            return or__3824__auto____11013
          }else {
            return G__11011__11012.cljs$core$ILookup$
          }
        }()) {
          return true
        }else {
          if(!G__11011__11012.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__11011__11012)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__11011__11012)
      }
    }()) {
      var G__11006__11015 = function() {
        var val__6603__auto____11014 = cljs.core._lookup.call(null, m__9353__auto__, "\ufdd0'filter-updated", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6603__auto____11014, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6603__auto____11014
        }
      }();
      vcfvis.histogram.draw_mini_hists_BANG_.call(null);
      var G__11016__11017 = cljs.core.seq.call(null, cljs.core.deref.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_));
      if(G__11016__11017) {
        var s__9347__auto____11018 = cljs.core.first.call(null, G__11016__11017);
        var G__11016__11019 = G__11016__11017;
        while(true) {
          s__9347__auto____11018.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'count-updated"], {"\ufdd0'count-updated":cljs.core.get_in.call(null, cljs.core.first.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)), cljs.core.PersistentVector.fromArray(["\ufdd0'cf", "\ufdd0'all"], true)).value()}));
          var temp__3974__auto____11020 = cljs.core.next.call(null, G__11016__11019);
          if(temp__3974__auto____11020) {
            var G__11016__11021 = temp__3974__auto____11020;
            var G__11022 = cljs.core.first.call(null, G__11016__11021);
            var G__11023 = G__11016__11021;
            s__9347__auto____11018 = G__11022;
            G__11016__11019 = G__11023;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    }else {
      if("\ufdd0'else") {
        throw 0;
      }else {
        return null
      }
    }
  }catch(e__7036__auto__) {
    if(e__7036__auto__ === 0) {
      var G__11007__11010 = m__9353__auto__;
      return null
    }else {
      throw e__7036__auto__;
    }
  }
});
cljs.core.swap_BANG_.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_, cljs.core.conj, function(m__9353__auto__) {
  try {
    if(function() {
      var G__11028__11029 = m__9353__auto__;
      if(G__11028__11029) {
        if(function() {
          var or__3824__auto____11030 = G__11028__11029.cljs$lang$protocol_mask$partition0$ & 256;
          if(or__3824__auto____11030) {
            return or__3824__auto____11030
          }else {
            return G__11028__11029.cljs$core$ILookup$
          }
        }()) {
          return true
        }else {
          if(!G__11028__11029.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__11028__11029)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__11028__11029)
      }
    }()) {
      var x__11032 = function() {
        var val__6603__auto____11031 = cljs.core._lookup.call(null, m__9353__auto__, "\ufdd0'count-updated", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6603__auto____11031, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6603__auto____11031
        }
      }();
      c2.dom.text.call(null, "#count", x__11032);
      return c2.dom.style.call(null, "#count", "\ufdd0'visibility", x__11032 == null ? "hidden" : "visible")
    }else {
      if("\ufdd0'else") {
        throw 0;
      }else {
        return null
      }
    }
  }catch(e__7036__auto__) {
    if(e__7036__auto__ === 0) {
      var G__11024__11027 = m__9353__auto__;
      return null
    }else {
      throw e__7036__auto__;
    }
  }
});
var $btn__11033 = c2.dom.select.call(null, "#filter-btn");
var co__7961__auto____11037 = function() {
  var co__6213__auto____11036 = new reflex.core.ComputedObservable(null, true, function() {
    var G__11034__11035 = cljs.core._lookup.call(null, cljs.core.deref.call(null, vcfvis.data._BANG_analysis_status), cljs.core._lookup.call(null, cljs.core.first.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)), "\ufdd0'file-url", null), null);
    if(cljs.core._EQ_.call(null, null, G__11034__11035)) {
      return cljs.core.PersistentVector.fromArray(["\ufdd0'button#filter-btn.btn", cljs.core.ObjMap.fromObject(["\ufdd0'properties"], {"\ufdd0'properties":cljs.core.ObjMap.fromObject(["\ufdd0'disabled"], {"\ufdd0'disabled":false})}), "Export subset"], true)
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0'running", G__11034__11035)) {
        return cljs.core.PersistentVector.fromArray(["\ufdd0'button#filter-btn.btn", cljs.core.ObjMap.fromObject(["\ufdd0'properties"], {"\ufdd0'properties":cljs.core.ObjMap.fromObject(["\ufdd0'disabled"], {"\ufdd0'disabled":true})}), "Running..."], true)
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'completed", G__11034__11035)) {
          return cljs.core.PersistentVector.fromArray(["\ufdd0'button#filter-btn.btn", cljs.core.ObjMap.fromObject(["\ufdd0'properties"], {"\ufdd0'properties":cljs.core.ObjMap.fromObject(["\ufdd0'disabled"], {"\ufdd0'disabled":true})}), "Completed"], true)
        }else {
          if("\ufdd0'else") {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.core._lookup.call(null, cljs.core.deref.call(null, vcfvis.data._BANG_analysis_status), cljs.core._lookup.call(null, cljs.core.first.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)), "\ufdd0'file-url", null), null))].join(""));
          }else {
            return null
          }
        }
      }
    }
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6213__auto____11036);
  return co__6213__auto____11036
}();
var $el__7962__auto____11038 = c2.dom.__GT_dom.call(null, $btn__11033);
singult.core.merge_BANG_.call(null, $el__7962__auto____11038, cljs.core.deref.call(null, co__7961__auto____11037));
cljs.core.add_watch.call(null, co__7961__auto____11037, "\ufdd0'update-dom", function() {
  return singult.core.merge_BANG_.call(null, $el__7962__auto____11038, cljs.core.deref.call(null, co__7961__auto____11037))
});
co__7961__auto____11037;
c2.event.on_raw.call(null, $btn__11033, "\ufdd0'click", function(_) {
  return vcfvis.data.filter_analysis.call(null, cljs.core._lookup.call(null, cljs.core.first.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)), "\ufdd0'file-url", null), cljs.core.deref.call(null, vcfvis.core._BANG_filters))
});
goog.provide("vcfvis.main");
goog.require("cljs.core");
goog.require("c2.util");
goog.require("vcfvis.controls");
goog.require("vcfvis.ui");
goog.require("vcfvis.data");
goog.require("vcfvis.core");
goog.require("domina");
goog.require("c2.util");
cljs.core.add_watch.call(null, vcfvis.controls.file_selector, "\ufdd0'load-metrics", function(files) {
  var new_files__11637 = vcfvis.core.check_new_vcfs_BANG_.call(null, files);
  if(cljs.core.seq.call(null, new_files__11637)) {
    jQuery("#waiting-modal").modal("show");
    var G__11638__11639 = cljs.core.seq.call(null, new_files__11637);
    if(G__11638__11639) {
      var f__11640 = cljs.core.first.call(null, G__11638__11639);
      var G__11638__11641 = G__11638__11639;
      while(true) {
        vcfvis.data.load_vcf.call(null, f__11640, function(f__11640, G__11638__11641) {
          return function(vcf) {
            jQuery("#waiting-modal").modal("hide");
            return cljs.core.swap_BANG_.call(null, vcfvis.core._BANG_vcfs, cljs.core.conj, vcf)
          }
        }(f__11640, G__11638__11641));
        var temp__3974__auto____11642 = cljs.core.next.call(null, G__11638__11641);
        if(temp__3974__auto____11642) {
          var G__11638__11643 = temp__3974__auto____11642;
          var G__11644 = cljs.core.first.call(null, G__11638__11643);
          var G__11645 = G__11638__11643;
          f__11640 = G__11644;
          G__11638__11641 = G__11645;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  }else {
    return null
  }
});
jQuery("#waiting-modal").modal(c2.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'backdrop", "\ufdd0'keyboard", "\ufdd0'show"], {"\ufdd0'backdrop":"static", "\ufdd0'keyboard":false, "\ufdd0'show":true})));
vcfvis.data.load_context.call(null, function(context) {
  vcfvis.ui.update_user_BANG_.call(null, context);
  jQuery("#waiting-modal").modal("hide");
  return cljs.core.reset_BANG_.call(null, vcfvis.core._BANG_context, context)
});
