var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__12097 = x == null ? null : x;
  if(p[goog.typeOf(x__12097)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__12098__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__12098 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12098__delegate.call(this, array, i, idxs)
    };
    G__12098.cljs$lang$maxFixedArity = 2;
    G__12098.cljs$lang$applyTo = function(arglist__12099) {
      var array = cljs.core.first(arglist__12099);
      var i = cljs.core.first(cljs.core.next(arglist__12099));
      var idxs = cljs.core.rest(cljs.core.next(arglist__12099));
      return G__12098__delegate(array, i, idxs)
    };
    G__12098.cljs$lang$arity$variadic = G__12098__delegate;
    return G__12098
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____12184 = this$;
      if(and__3822__auto____12184) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____12184
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2264__auto____12185 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12186 = cljs.core._invoke[goog.typeOf(x__2264__auto____12185)];
        if(or__3824__auto____12186) {
          return or__3824__auto____12186
        }else {
          var or__3824__auto____12187 = cljs.core._invoke["_"];
          if(or__3824__auto____12187) {
            return or__3824__auto____12187
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____12188 = this$;
      if(and__3822__auto____12188) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____12188
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2264__auto____12189 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12190 = cljs.core._invoke[goog.typeOf(x__2264__auto____12189)];
        if(or__3824__auto____12190) {
          return or__3824__auto____12190
        }else {
          var or__3824__auto____12191 = cljs.core._invoke["_"];
          if(or__3824__auto____12191) {
            return or__3824__auto____12191
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____12192 = this$;
      if(and__3822__auto____12192) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____12192
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2264__auto____12193 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12194 = cljs.core._invoke[goog.typeOf(x__2264__auto____12193)];
        if(or__3824__auto____12194) {
          return or__3824__auto____12194
        }else {
          var or__3824__auto____12195 = cljs.core._invoke["_"];
          if(or__3824__auto____12195) {
            return or__3824__auto____12195
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____12196 = this$;
      if(and__3822__auto____12196) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____12196
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2264__auto____12197 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12198 = cljs.core._invoke[goog.typeOf(x__2264__auto____12197)];
        if(or__3824__auto____12198) {
          return or__3824__auto____12198
        }else {
          var or__3824__auto____12199 = cljs.core._invoke["_"];
          if(or__3824__auto____12199) {
            return or__3824__auto____12199
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____12200 = this$;
      if(and__3822__auto____12200) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____12200
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2264__auto____12201 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12202 = cljs.core._invoke[goog.typeOf(x__2264__auto____12201)];
        if(or__3824__auto____12202) {
          return or__3824__auto____12202
        }else {
          var or__3824__auto____12203 = cljs.core._invoke["_"];
          if(or__3824__auto____12203) {
            return or__3824__auto____12203
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____12204 = this$;
      if(and__3822__auto____12204) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____12204
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2264__auto____12205 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12206 = cljs.core._invoke[goog.typeOf(x__2264__auto____12205)];
        if(or__3824__auto____12206) {
          return or__3824__auto____12206
        }else {
          var or__3824__auto____12207 = cljs.core._invoke["_"];
          if(or__3824__auto____12207) {
            return or__3824__auto____12207
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____12208 = this$;
      if(and__3822__auto____12208) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____12208
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2264__auto____12209 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12210 = cljs.core._invoke[goog.typeOf(x__2264__auto____12209)];
        if(or__3824__auto____12210) {
          return or__3824__auto____12210
        }else {
          var or__3824__auto____12211 = cljs.core._invoke["_"];
          if(or__3824__auto____12211) {
            return or__3824__auto____12211
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____12212 = this$;
      if(and__3822__auto____12212) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____12212
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2264__auto____12213 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12214 = cljs.core._invoke[goog.typeOf(x__2264__auto____12213)];
        if(or__3824__auto____12214) {
          return or__3824__auto____12214
        }else {
          var or__3824__auto____12215 = cljs.core._invoke["_"];
          if(or__3824__auto____12215) {
            return or__3824__auto____12215
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____12216 = this$;
      if(and__3822__auto____12216) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____12216
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2264__auto____12217 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12218 = cljs.core._invoke[goog.typeOf(x__2264__auto____12217)];
        if(or__3824__auto____12218) {
          return or__3824__auto____12218
        }else {
          var or__3824__auto____12219 = cljs.core._invoke["_"];
          if(or__3824__auto____12219) {
            return or__3824__auto____12219
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____12220 = this$;
      if(and__3822__auto____12220) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____12220
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2264__auto____12221 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12222 = cljs.core._invoke[goog.typeOf(x__2264__auto____12221)];
        if(or__3824__auto____12222) {
          return or__3824__auto____12222
        }else {
          var or__3824__auto____12223 = cljs.core._invoke["_"];
          if(or__3824__auto____12223) {
            return or__3824__auto____12223
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____12224 = this$;
      if(and__3822__auto____12224) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____12224
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2264__auto____12225 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12226 = cljs.core._invoke[goog.typeOf(x__2264__auto____12225)];
        if(or__3824__auto____12226) {
          return or__3824__auto____12226
        }else {
          var or__3824__auto____12227 = cljs.core._invoke["_"];
          if(or__3824__auto____12227) {
            return or__3824__auto____12227
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____12228 = this$;
      if(and__3822__auto____12228) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____12228
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2264__auto____12229 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12230 = cljs.core._invoke[goog.typeOf(x__2264__auto____12229)];
        if(or__3824__auto____12230) {
          return or__3824__auto____12230
        }else {
          var or__3824__auto____12231 = cljs.core._invoke["_"];
          if(or__3824__auto____12231) {
            return or__3824__auto____12231
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____12232 = this$;
      if(and__3822__auto____12232) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____12232
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2264__auto____12233 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12234 = cljs.core._invoke[goog.typeOf(x__2264__auto____12233)];
        if(or__3824__auto____12234) {
          return or__3824__auto____12234
        }else {
          var or__3824__auto____12235 = cljs.core._invoke["_"];
          if(or__3824__auto____12235) {
            return or__3824__auto____12235
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____12236 = this$;
      if(and__3822__auto____12236) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____12236
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2264__auto____12237 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12238 = cljs.core._invoke[goog.typeOf(x__2264__auto____12237)];
        if(or__3824__auto____12238) {
          return or__3824__auto____12238
        }else {
          var or__3824__auto____12239 = cljs.core._invoke["_"];
          if(or__3824__auto____12239) {
            return or__3824__auto____12239
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____12240 = this$;
      if(and__3822__auto____12240) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____12240
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2264__auto____12241 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12242 = cljs.core._invoke[goog.typeOf(x__2264__auto____12241)];
        if(or__3824__auto____12242) {
          return or__3824__auto____12242
        }else {
          var or__3824__auto____12243 = cljs.core._invoke["_"];
          if(or__3824__auto____12243) {
            return or__3824__auto____12243
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____12244 = this$;
      if(and__3822__auto____12244) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____12244
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2264__auto____12245 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12246 = cljs.core._invoke[goog.typeOf(x__2264__auto____12245)];
        if(or__3824__auto____12246) {
          return or__3824__auto____12246
        }else {
          var or__3824__auto____12247 = cljs.core._invoke["_"];
          if(or__3824__auto____12247) {
            return or__3824__auto____12247
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____12248 = this$;
      if(and__3822__auto____12248) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____12248
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2264__auto____12249 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12250 = cljs.core._invoke[goog.typeOf(x__2264__auto____12249)];
        if(or__3824__auto____12250) {
          return or__3824__auto____12250
        }else {
          var or__3824__auto____12251 = cljs.core._invoke["_"];
          if(or__3824__auto____12251) {
            return or__3824__auto____12251
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____12252 = this$;
      if(and__3822__auto____12252) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____12252
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2264__auto____12253 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12254 = cljs.core._invoke[goog.typeOf(x__2264__auto____12253)];
        if(or__3824__auto____12254) {
          return or__3824__auto____12254
        }else {
          var or__3824__auto____12255 = cljs.core._invoke["_"];
          if(or__3824__auto____12255) {
            return or__3824__auto____12255
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____12256 = this$;
      if(and__3822__auto____12256) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____12256
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2264__auto____12257 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12258 = cljs.core._invoke[goog.typeOf(x__2264__auto____12257)];
        if(or__3824__auto____12258) {
          return or__3824__auto____12258
        }else {
          var or__3824__auto____12259 = cljs.core._invoke["_"];
          if(or__3824__auto____12259) {
            return or__3824__auto____12259
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____12260 = this$;
      if(and__3822__auto____12260) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____12260
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2264__auto____12261 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12262 = cljs.core._invoke[goog.typeOf(x__2264__auto____12261)];
        if(or__3824__auto____12262) {
          return or__3824__auto____12262
        }else {
          var or__3824__auto____12263 = cljs.core._invoke["_"];
          if(or__3824__auto____12263) {
            return or__3824__auto____12263
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____12264 = this$;
      if(and__3822__auto____12264) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____12264
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2264__auto____12265 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12266 = cljs.core._invoke[goog.typeOf(x__2264__auto____12265)];
        if(or__3824__auto____12266) {
          return or__3824__auto____12266
        }else {
          var or__3824__auto____12267 = cljs.core._invoke["_"];
          if(or__3824__auto____12267) {
            return or__3824__auto____12267
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____12272 = coll;
    if(and__3822__auto____12272) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____12272
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2264__auto____12273 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12274 = cljs.core._count[goog.typeOf(x__2264__auto____12273)];
      if(or__3824__auto____12274) {
        return or__3824__auto____12274
      }else {
        var or__3824__auto____12275 = cljs.core._count["_"];
        if(or__3824__auto____12275) {
          return or__3824__auto____12275
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____12280 = coll;
    if(and__3822__auto____12280) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____12280
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2264__auto____12281 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12282 = cljs.core._empty[goog.typeOf(x__2264__auto____12281)];
      if(or__3824__auto____12282) {
        return or__3824__auto____12282
      }else {
        var or__3824__auto____12283 = cljs.core._empty["_"];
        if(or__3824__auto____12283) {
          return or__3824__auto____12283
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____12288 = coll;
    if(and__3822__auto____12288) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____12288
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2264__auto____12289 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12290 = cljs.core._conj[goog.typeOf(x__2264__auto____12289)];
      if(or__3824__auto____12290) {
        return or__3824__auto____12290
      }else {
        var or__3824__auto____12291 = cljs.core._conj["_"];
        if(or__3824__auto____12291) {
          return or__3824__auto____12291
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____12300 = coll;
      if(and__3822__auto____12300) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____12300
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2264__auto____12301 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____12302 = cljs.core._nth[goog.typeOf(x__2264__auto____12301)];
        if(or__3824__auto____12302) {
          return or__3824__auto____12302
        }else {
          var or__3824__auto____12303 = cljs.core._nth["_"];
          if(or__3824__auto____12303) {
            return or__3824__auto____12303
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____12304 = coll;
      if(and__3822__auto____12304) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____12304
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2264__auto____12305 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____12306 = cljs.core._nth[goog.typeOf(x__2264__auto____12305)];
        if(or__3824__auto____12306) {
          return or__3824__auto____12306
        }else {
          var or__3824__auto____12307 = cljs.core._nth["_"];
          if(or__3824__auto____12307) {
            return or__3824__auto____12307
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____12312 = coll;
    if(and__3822__auto____12312) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____12312
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2264__auto____12313 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12314 = cljs.core._first[goog.typeOf(x__2264__auto____12313)];
      if(or__3824__auto____12314) {
        return or__3824__auto____12314
      }else {
        var or__3824__auto____12315 = cljs.core._first["_"];
        if(or__3824__auto____12315) {
          return or__3824__auto____12315
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____12320 = coll;
    if(and__3822__auto____12320) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____12320
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2264__auto____12321 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12322 = cljs.core._rest[goog.typeOf(x__2264__auto____12321)];
      if(or__3824__auto____12322) {
        return or__3824__auto____12322
      }else {
        var or__3824__auto____12323 = cljs.core._rest["_"];
        if(or__3824__auto____12323) {
          return or__3824__auto____12323
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____12328 = coll;
    if(and__3822__auto____12328) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____12328
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2264__auto____12329 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12330 = cljs.core._next[goog.typeOf(x__2264__auto____12329)];
      if(or__3824__auto____12330) {
        return or__3824__auto____12330
      }else {
        var or__3824__auto____12331 = cljs.core._next["_"];
        if(or__3824__auto____12331) {
          return or__3824__auto____12331
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____12340 = o;
      if(and__3822__auto____12340) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____12340
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2264__auto____12341 = o == null ? null : o;
      return function() {
        var or__3824__auto____12342 = cljs.core._lookup[goog.typeOf(x__2264__auto____12341)];
        if(or__3824__auto____12342) {
          return or__3824__auto____12342
        }else {
          var or__3824__auto____12343 = cljs.core._lookup["_"];
          if(or__3824__auto____12343) {
            return or__3824__auto____12343
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____12344 = o;
      if(and__3822__auto____12344) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____12344
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2264__auto____12345 = o == null ? null : o;
      return function() {
        var or__3824__auto____12346 = cljs.core._lookup[goog.typeOf(x__2264__auto____12345)];
        if(or__3824__auto____12346) {
          return or__3824__auto____12346
        }else {
          var or__3824__auto____12347 = cljs.core._lookup["_"];
          if(or__3824__auto____12347) {
            return or__3824__auto____12347
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____12352 = coll;
    if(and__3822__auto____12352) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____12352
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2264__auto____12353 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12354 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2264__auto____12353)];
      if(or__3824__auto____12354) {
        return or__3824__auto____12354
      }else {
        var or__3824__auto____12355 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____12355) {
          return or__3824__auto____12355
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____12360 = coll;
    if(and__3822__auto____12360) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____12360
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2264__auto____12361 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12362 = cljs.core._assoc[goog.typeOf(x__2264__auto____12361)];
      if(or__3824__auto____12362) {
        return or__3824__auto____12362
      }else {
        var or__3824__auto____12363 = cljs.core._assoc["_"];
        if(or__3824__auto____12363) {
          return or__3824__auto____12363
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____12368 = coll;
    if(and__3822__auto____12368) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____12368
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2264__auto____12369 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12370 = cljs.core._dissoc[goog.typeOf(x__2264__auto____12369)];
      if(or__3824__auto____12370) {
        return or__3824__auto____12370
      }else {
        var or__3824__auto____12371 = cljs.core._dissoc["_"];
        if(or__3824__auto____12371) {
          return or__3824__auto____12371
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____12376 = coll;
    if(and__3822__auto____12376) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____12376
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2264__auto____12377 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12378 = cljs.core._key[goog.typeOf(x__2264__auto____12377)];
      if(or__3824__auto____12378) {
        return or__3824__auto____12378
      }else {
        var or__3824__auto____12379 = cljs.core._key["_"];
        if(or__3824__auto____12379) {
          return or__3824__auto____12379
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____12384 = coll;
    if(and__3822__auto____12384) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____12384
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2264__auto____12385 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12386 = cljs.core._val[goog.typeOf(x__2264__auto____12385)];
      if(or__3824__auto____12386) {
        return or__3824__auto____12386
      }else {
        var or__3824__auto____12387 = cljs.core._val["_"];
        if(or__3824__auto____12387) {
          return or__3824__auto____12387
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____12392 = coll;
    if(and__3822__auto____12392) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____12392
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2264__auto____12393 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12394 = cljs.core._disjoin[goog.typeOf(x__2264__auto____12393)];
      if(or__3824__auto____12394) {
        return or__3824__auto____12394
      }else {
        var or__3824__auto____12395 = cljs.core._disjoin["_"];
        if(or__3824__auto____12395) {
          return or__3824__auto____12395
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____12400 = coll;
    if(and__3822__auto____12400) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____12400
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2264__auto____12401 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12402 = cljs.core._peek[goog.typeOf(x__2264__auto____12401)];
      if(or__3824__auto____12402) {
        return or__3824__auto____12402
      }else {
        var or__3824__auto____12403 = cljs.core._peek["_"];
        if(or__3824__auto____12403) {
          return or__3824__auto____12403
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____12408 = coll;
    if(and__3822__auto____12408) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____12408
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2264__auto____12409 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12410 = cljs.core._pop[goog.typeOf(x__2264__auto____12409)];
      if(or__3824__auto____12410) {
        return or__3824__auto____12410
      }else {
        var or__3824__auto____12411 = cljs.core._pop["_"];
        if(or__3824__auto____12411) {
          return or__3824__auto____12411
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____12416 = coll;
    if(and__3822__auto____12416) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____12416
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2264__auto____12417 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12418 = cljs.core._assoc_n[goog.typeOf(x__2264__auto____12417)];
      if(or__3824__auto____12418) {
        return or__3824__auto____12418
      }else {
        var or__3824__auto____12419 = cljs.core._assoc_n["_"];
        if(or__3824__auto____12419) {
          return or__3824__auto____12419
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____12424 = o;
    if(and__3822__auto____12424) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____12424
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2264__auto____12425 = o == null ? null : o;
    return function() {
      var or__3824__auto____12426 = cljs.core._deref[goog.typeOf(x__2264__auto____12425)];
      if(or__3824__auto____12426) {
        return or__3824__auto____12426
      }else {
        var or__3824__auto____12427 = cljs.core._deref["_"];
        if(or__3824__auto____12427) {
          return or__3824__auto____12427
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____12432 = o;
    if(and__3822__auto____12432) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____12432
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2264__auto____12433 = o == null ? null : o;
    return function() {
      var or__3824__auto____12434 = cljs.core._deref_with_timeout[goog.typeOf(x__2264__auto____12433)];
      if(or__3824__auto____12434) {
        return or__3824__auto____12434
      }else {
        var or__3824__auto____12435 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____12435) {
          return or__3824__auto____12435
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____12440 = o;
    if(and__3822__auto____12440) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____12440
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2264__auto____12441 = o == null ? null : o;
    return function() {
      var or__3824__auto____12442 = cljs.core._meta[goog.typeOf(x__2264__auto____12441)];
      if(or__3824__auto____12442) {
        return or__3824__auto____12442
      }else {
        var or__3824__auto____12443 = cljs.core._meta["_"];
        if(or__3824__auto____12443) {
          return or__3824__auto____12443
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____12448 = o;
    if(and__3822__auto____12448) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____12448
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2264__auto____12449 = o == null ? null : o;
    return function() {
      var or__3824__auto____12450 = cljs.core._with_meta[goog.typeOf(x__2264__auto____12449)];
      if(or__3824__auto____12450) {
        return or__3824__auto____12450
      }else {
        var or__3824__auto____12451 = cljs.core._with_meta["_"];
        if(or__3824__auto____12451) {
          return or__3824__auto____12451
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____12460 = coll;
      if(and__3822__auto____12460) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____12460
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2264__auto____12461 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____12462 = cljs.core._reduce[goog.typeOf(x__2264__auto____12461)];
        if(or__3824__auto____12462) {
          return or__3824__auto____12462
        }else {
          var or__3824__auto____12463 = cljs.core._reduce["_"];
          if(or__3824__auto____12463) {
            return or__3824__auto____12463
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____12464 = coll;
      if(and__3822__auto____12464) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____12464
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2264__auto____12465 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____12466 = cljs.core._reduce[goog.typeOf(x__2264__auto____12465)];
        if(or__3824__auto____12466) {
          return or__3824__auto____12466
        }else {
          var or__3824__auto____12467 = cljs.core._reduce["_"];
          if(or__3824__auto____12467) {
            return or__3824__auto____12467
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____12472 = coll;
    if(and__3822__auto____12472) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____12472
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2264__auto____12473 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12474 = cljs.core._kv_reduce[goog.typeOf(x__2264__auto____12473)];
      if(or__3824__auto____12474) {
        return or__3824__auto____12474
      }else {
        var or__3824__auto____12475 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____12475) {
          return or__3824__auto____12475
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____12480 = o;
    if(and__3822__auto____12480) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____12480
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2264__auto____12481 = o == null ? null : o;
    return function() {
      var or__3824__auto____12482 = cljs.core._equiv[goog.typeOf(x__2264__auto____12481)];
      if(or__3824__auto____12482) {
        return or__3824__auto____12482
      }else {
        var or__3824__auto____12483 = cljs.core._equiv["_"];
        if(or__3824__auto____12483) {
          return or__3824__auto____12483
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____12488 = o;
    if(and__3822__auto____12488) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____12488
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2264__auto____12489 = o == null ? null : o;
    return function() {
      var or__3824__auto____12490 = cljs.core._hash[goog.typeOf(x__2264__auto____12489)];
      if(or__3824__auto____12490) {
        return or__3824__auto____12490
      }else {
        var or__3824__auto____12491 = cljs.core._hash["_"];
        if(or__3824__auto____12491) {
          return or__3824__auto____12491
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____12496 = o;
    if(and__3822__auto____12496) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____12496
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2264__auto____12497 = o == null ? null : o;
    return function() {
      var or__3824__auto____12498 = cljs.core._seq[goog.typeOf(x__2264__auto____12497)];
      if(or__3824__auto____12498) {
        return or__3824__auto____12498
      }else {
        var or__3824__auto____12499 = cljs.core._seq["_"];
        if(or__3824__auto____12499) {
          return or__3824__auto____12499
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____12504 = coll;
    if(and__3822__auto____12504) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____12504
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2264__auto____12505 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12506 = cljs.core._rseq[goog.typeOf(x__2264__auto____12505)];
      if(or__3824__auto____12506) {
        return or__3824__auto____12506
      }else {
        var or__3824__auto____12507 = cljs.core._rseq["_"];
        if(or__3824__auto____12507) {
          return or__3824__auto____12507
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____12512 = coll;
    if(and__3822__auto____12512) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____12512
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2264__auto____12513 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12514 = cljs.core._sorted_seq[goog.typeOf(x__2264__auto____12513)];
      if(or__3824__auto____12514) {
        return or__3824__auto____12514
      }else {
        var or__3824__auto____12515 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____12515) {
          return or__3824__auto____12515
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____12520 = coll;
    if(and__3822__auto____12520) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____12520
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2264__auto____12521 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12522 = cljs.core._sorted_seq_from[goog.typeOf(x__2264__auto____12521)];
      if(or__3824__auto____12522) {
        return or__3824__auto____12522
      }else {
        var or__3824__auto____12523 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____12523) {
          return or__3824__auto____12523
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____12528 = coll;
    if(and__3822__auto____12528) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____12528
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2264__auto____12529 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12530 = cljs.core._entry_key[goog.typeOf(x__2264__auto____12529)];
      if(or__3824__auto____12530) {
        return or__3824__auto____12530
      }else {
        var or__3824__auto____12531 = cljs.core._entry_key["_"];
        if(or__3824__auto____12531) {
          return or__3824__auto____12531
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____12536 = coll;
    if(and__3822__auto____12536) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____12536
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2264__auto____12537 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12538 = cljs.core._comparator[goog.typeOf(x__2264__auto____12537)];
      if(or__3824__auto____12538) {
        return or__3824__auto____12538
      }else {
        var or__3824__auto____12539 = cljs.core._comparator["_"];
        if(or__3824__auto____12539) {
          return or__3824__auto____12539
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____12544 = o;
    if(and__3822__auto____12544) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____12544
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2264__auto____12545 = o == null ? null : o;
    return function() {
      var or__3824__auto____12546 = cljs.core._pr_seq[goog.typeOf(x__2264__auto____12545)];
      if(or__3824__auto____12546) {
        return or__3824__auto____12546
      }else {
        var or__3824__auto____12547 = cljs.core._pr_seq["_"];
        if(or__3824__auto____12547) {
          return or__3824__auto____12547
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____12552 = d;
    if(and__3822__auto____12552) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____12552
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2264__auto____12553 = d == null ? null : d;
    return function() {
      var or__3824__auto____12554 = cljs.core._realized_QMARK_[goog.typeOf(x__2264__auto____12553)];
      if(or__3824__auto____12554) {
        return or__3824__auto____12554
      }else {
        var or__3824__auto____12555 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____12555) {
          return or__3824__auto____12555
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____12560 = this$;
    if(and__3822__auto____12560) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____12560
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2264__auto____12561 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____12562 = cljs.core._notify_watches[goog.typeOf(x__2264__auto____12561)];
      if(or__3824__auto____12562) {
        return or__3824__auto____12562
      }else {
        var or__3824__auto____12563 = cljs.core._notify_watches["_"];
        if(or__3824__auto____12563) {
          return or__3824__auto____12563
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____12568 = this$;
    if(and__3822__auto____12568) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____12568
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2264__auto____12569 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____12570 = cljs.core._add_watch[goog.typeOf(x__2264__auto____12569)];
      if(or__3824__auto____12570) {
        return or__3824__auto____12570
      }else {
        var or__3824__auto____12571 = cljs.core._add_watch["_"];
        if(or__3824__auto____12571) {
          return or__3824__auto____12571
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____12576 = this$;
    if(and__3822__auto____12576) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____12576
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2264__auto____12577 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____12578 = cljs.core._remove_watch[goog.typeOf(x__2264__auto____12577)];
      if(or__3824__auto____12578) {
        return or__3824__auto____12578
      }else {
        var or__3824__auto____12579 = cljs.core._remove_watch["_"];
        if(or__3824__auto____12579) {
          return or__3824__auto____12579
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____12584 = coll;
    if(and__3822__auto____12584) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____12584
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2264__auto____12585 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12586 = cljs.core._as_transient[goog.typeOf(x__2264__auto____12585)];
      if(or__3824__auto____12586) {
        return or__3824__auto____12586
      }else {
        var or__3824__auto____12587 = cljs.core._as_transient["_"];
        if(or__3824__auto____12587) {
          return or__3824__auto____12587
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____12592 = tcoll;
    if(and__3822__auto____12592) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____12592
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2264__auto____12593 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____12594 = cljs.core._conj_BANG_[goog.typeOf(x__2264__auto____12593)];
      if(or__3824__auto____12594) {
        return or__3824__auto____12594
      }else {
        var or__3824__auto____12595 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____12595) {
          return or__3824__auto____12595
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____12600 = tcoll;
    if(and__3822__auto____12600) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____12600
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2264__auto____12601 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____12602 = cljs.core._persistent_BANG_[goog.typeOf(x__2264__auto____12601)];
      if(or__3824__auto____12602) {
        return or__3824__auto____12602
      }else {
        var or__3824__auto____12603 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____12603) {
          return or__3824__auto____12603
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____12608 = tcoll;
    if(and__3822__auto____12608) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____12608
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2264__auto____12609 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____12610 = cljs.core._assoc_BANG_[goog.typeOf(x__2264__auto____12609)];
      if(or__3824__auto____12610) {
        return or__3824__auto____12610
      }else {
        var or__3824__auto____12611 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____12611) {
          return or__3824__auto____12611
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____12616 = tcoll;
    if(and__3822__auto____12616) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____12616
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2264__auto____12617 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____12618 = cljs.core._dissoc_BANG_[goog.typeOf(x__2264__auto____12617)];
      if(or__3824__auto____12618) {
        return or__3824__auto____12618
      }else {
        var or__3824__auto____12619 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____12619) {
          return or__3824__auto____12619
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____12624 = tcoll;
    if(and__3822__auto____12624) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____12624
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2264__auto____12625 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____12626 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2264__auto____12625)];
      if(or__3824__auto____12626) {
        return or__3824__auto____12626
      }else {
        var or__3824__auto____12627 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____12627) {
          return or__3824__auto____12627
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____12632 = tcoll;
    if(and__3822__auto____12632) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____12632
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2264__auto____12633 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____12634 = cljs.core._pop_BANG_[goog.typeOf(x__2264__auto____12633)];
      if(or__3824__auto____12634) {
        return or__3824__auto____12634
      }else {
        var or__3824__auto____12635 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____12635) {
          return or__3824__auto____12635
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____12640 = tcoll;
    if(and__3822__auto____12640) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____12640
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2264__auto____12641 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____12642 = cljs.core._disjoin_BANG_[goog.typeOf(x__2264__auto____12641)];
      if(or__3824__auto____12642) {
        return or__3824__auto____12642
      }else {
        var or__3824__auto____12643 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____12643) {
          return or__3824__auto____12643
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____12648 = x;
    if(and__3822__auto____12648) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____12648
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2264__auto____12649 = x == null ? null : x;
    return function() {
      var or__3824__auto____12650 = cljs.core._compare[goog.typeOf(x__2264__auto____12649)];
      if(or__3824__auto____12650) {
        return or__3824__auto____12650
      }else {
        var or__3824__auto____12651 = cljs.core._compare["_"];
        if(or__3824__auto____12651) {
          return or__3824__auto____12651
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____12656 = coll;
    if(and__3822__auto____12656) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____12656
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2264__auto____12657 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12658 = cljs.core._drop_first[goog.typeOf(x__2264__auto____12657)];
      if(or__3824__auto____12658) {
        return or__3824__auto____12658
      }else {
        var or__3824__auto____12659 = cljs.core._drop_first["_"];
        if(or__3824__auto____12659) {
          return or__3824__auto____12659
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____12664 = coll;
    if(and__3822__auto____12664) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____12664
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2264__auto____12665 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12666 = cljs.core._chunked_first[goog.typeOf(x__2264__auto____12665)];
      if(or__3824__auto____12666) {
        return or__3824__auto____12666
      }else {
        var or__3824__auto____12667 = cljs.core._chunked_first["_"];
        if(or__3824__auto____12667) {
          return or__3824__auto____12667
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____12672 = coll;
    if(and__3822__auto____12672) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____12672
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2264__auto____12673 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12674 = cljs.core._chunked_rest[goog.typeOf(x__2264__auto____12673)];
      if(or__3824__auto____12674) {
        return or__3824__auto____12674
      }else {
        var or__3824__auto____12675 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____12675) {
          return or__3824__auto____12675
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____12680 = coll;
    if(and__3822__auto____12680) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____12680
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2264__auto____12681 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____12682 = cljs.core._chunked_next[goog.typeOf(x__2264__auto____12681)];
      if(or__3824__auto____12682) {
        return or__3824__auto____12682
      }else {
        var or__3824__auto____12683 = cljs.core._chunked_next["_"];
        if(or__3824__auto____12683) {
          return or__3824__auto____12683
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____12685 = x === y;
    if(or__3824__auto____12685) {
      return or__3824__auto____12685
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__12686__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__12687 = y;
            var G__12688 = cljs.core.first.call(null, more);
            var G__12689 = cljs.core.next.call(null, more);
            x = G__12687;
            y = G__12688;
            more = G__12689;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12686 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12686__delegate.call(this, x, y, more)
    };
    G__12686.cljs$lang$maxFixedArity = 2;
    G__12686.cljs$lang$applyTo = function(arglist__12690) {
      var x = cljs.core.first(arglist__12690);
      var y = cljs.core.first(cljs.core.next(arglist__12690));
      var more = cljs.core.rest(cljs.core.next(arglist__12690));
      return G__12686__delegate(x, y, more)
    };
    G__12686.cljs$lang$arity$variadic = G__12686__delegate;
    return G__12686
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__12691 = null;
  var G__12691__2 = function(o, k) {
    return null
  };
  var G__12691__3 = function(o, k, not_found) {
    return not_found
  };
  G__12691 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12691__2.call(this, o, k);
      case 3:
        return G__12691__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12691
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__12692 = null;
  var G__12692__2 = function(_, f) {
    return f.call(null)
  };
  var G__12692__3 = function(_, f, start) {
    return start
  };
  G__12692 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__12692__2.call(this, _, f);
      case 3:
        return G__12692__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12692
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__12693 = null;
  var G__12693__2 = function(_, n) {
    return null
  };
  var G__12693__3 = function(_, n, not_found) {
    return not_found
  };
  G__12693 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12693__2.call(this, _, n);
      case 3:
        return G__12693__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12693
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____12694 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____12694) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____12694
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__12707 = cljs.core._count.call(null, cicoll);
    if(cnt__12707 === 0) {
      return f.call(null)
    }else {
      var val__12708 = cljs.core._nth.call(null, cicoll, 0);
      var n__12709 = 1;
      while(true) {
        if(n__12709 < cnt__12707) {
          var nval__12710 = f.call(null, val__12708, cljs.core._nth.call(null, cicoll, n__12709));
          if(cljs.core.reduced_QMARK_.call(null, nval__12710)) {
            return cljs.core.deref.call(null, nval__12710)
          }else {
            var G__12719 = nval__12710;
            var G__12720 = n__12709 + 1;
            val__12708 = G__12719;
            n__12709 = G__12720;
            continue
          }
        }else {
          return val__12708
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__12711 = cljs.core._count.call(null, cicoll);
    var val__12712 = val;
    var n__12713 = 0;
    while(true) {
      if(n__12713 < cnt__12711) {
        var nval__12714 = f.call(null, val__12712, cljs.core._nth.call(null, cicoll, n__12713));
        if(cljs.core.reduced_QMARK_.call(null, nval__12714)) {
          return cljs.core.deref.call(null, nval__12714)
        }else {
          var G__12721 = nval__12714;
          var G__12722 = n__12713 + 1;
          val__12712 = G__12721;
          n__12713 = G__12722;
          continue
        }
      }else {
        return val__12712
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__12715 = cljs.core._count.call(null, cicoll);
    var val__12716 = val;
    var n__12717 = idx;
    while(true) {
      if(n__12717 < cnt__12715) {
        var nval__12718 = f.call(null, val__12716, cljs.core._nth.call(null, cicoll, n__12717));
        if(cljs.core.reduced_QMARK_.call(null, nval__12718)) {
          return cljs.core.deref.call(null, nval__12718)
        }else {
          var G__12723 = nval__12718;
          var G__12724 = n__12717 + 1;
          val__12716 = G__12723;
          n__12717 = G__12724;
          continue
        }
      }else {
        return val__12716
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__12737 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__12738 = arr[0];
      var n__12739 = 1;
      while(true) {
        if(n__12739 < cnt__12737) {
          var nval__12740 = f.call(null, val__12738, arr[n__12739]);
          if(cljs.core.reduced_QMARK_.call(null, nval__12740)) {
            return cljs.core.deref.call(null, nval__12740)
          }else {
            var G__12749 = nval__12740;
            var G__12750 = n__12739 + 1;
            val__12738 = G__12749;
            n__12739 = G__12750;
            continue
          }
        }else {
          return val__12738
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__12741 = arr.length;
    var val__12742 = val;
    var n__12743 = 0;
    while(true) {
      if(n__12743 < cnt__12741) {
        var nval__12744 = f.call(null, val__12742, arr[n__12743]);
        if(cljs.core.reduced_QMARK_.call(null, nval__12744)) {
          return cljs.core.deref.call(null, nval__12744)
        }else {
          var G__12751 = nval__12744;
          var G__12752 = n__12743 + 1;
          val__12742 = G__12751;
          n__12743 = G__12752;
          continue
        }
      }else {
        return val__12742
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__12745 = arr.length;
    var val__12746 = val;
    var n__12747 = idx;
    while(true) {
      if(n__12747 < cnt__12745) {
        var nval__12748 = f.call(null, val__12746, arr[n__12747]);
        if(cljs.core.reduced_QMARK_.call(null, nval__12748)) {
          return cljs.core.deref.call(null, nval__12748)
        }else {
          var G__12753 = nval__12748;
          var G__12754 = n__12747 + 1;
          val__12746 = G__12753;
          n__12747 = G__12754;
          continue
        }
      }else {
        return val__12746
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12755 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__12756 = this;
  if(this__12756.i + 1 < this__12756.a.length) {
    return new cljs.core.IndexedSeq(this__12756.a, this__12756.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12757 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__12758 = this;
  var c__12759 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__12759 > 0) {
    return new cljs.core.RSeq(coll, c__12759 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__12760 = this;
  var this__12761 = this;
  return cljs.core.pr_str.call(null, this__12761)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__12762 = this;
  if(cljs.core.counted_QMARK_.call(null, this__12762.a)) {
    return cljs.core.ci_reduce.call(null, this__12762.a, f, this__12762.a[this__12762.i], this__12762.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__12762.a[this__12762.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__12763 = this;
  if(cljs.core.counted_QMARK_.call(null, this__12763.a)) {
    return cljs.core.ci_reduce.call(null, this__12763.a, f, start, this__12763.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__12764 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__12765 = this;
  return this__12765.a.length - this__12765.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__12766 = this;
  return this__12766.a[this__12766.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__12767 = this;
  if(this__12767.i + 1 < this__12767.a.length) {
    return new cljs.core.IndexedSeq(this__12767.a, this__12767.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12768 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__12769 = this;
  var i__12770 = n + this__12769.i;
  if(i__12770 < this__12769.a.length) {
    return this__12769.a[i__12770]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__12771 = this;
  var i__12772 = n + this__12771.i;
  if(i__12772 < this__12771.a.length) {
    return this__12771.a[i__12772]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__12773 = null;
  var G__12773__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__12773__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__12773 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__12773__2.call(this, array, f);
      case 3:
        return G__12773__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12773
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__12774 = null;
  var G__12774__2 = function(array, k) {
    return array[k]
  };
  var G__12774__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__12774 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12774__2.call(this, array, k);
      case 3:
        return G__12774__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12774
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__12775 = null;
  var G__12775__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__12775__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__12775 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12775__2.call(this, array, n);
      case 3:
        return G__12775__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12775
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12776 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12777 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__12778 = this;
  var this__12779 = this;
  return cljs.core.pr_str.call(null, this__12779)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12780 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12781 = this;
  return this__12781.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12782 = this;
  return cljs.core._nth.call(null, this__12782.ci, this__12782.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12783 = this;
  if(this__12783.i > 0) {
    return new cljs.core.RSeq(this__12783.ci, this__12783.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12784 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__12785 = this;
  return new cljs.core.RSeq(this__12785.ci, this__12785.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12786 = this;
  return this__12786.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__12790__12791 = coll;
      if(G__12790__12791) {
        if(function() {
          var or__3824__auto____12792 = G__12790__12791.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____12792) {
            return or__3824__auto____12792
          }else {
            return G__12790__12791.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__12790__12791.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__12790__12791)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__12790__12791)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__12797__12798 = coll;
      if(G__12797__12798) {
        if(function() {
          var or__3824__auto____12799 = G__12797__12798.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____12799) {
            return or__3824__auto____12799
          }else {
            return G__12797__12798.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__12797__12798.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12797__12798)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12797__12798)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__12800 = cljs.core.seq.call(null, coll);
      if(s__12800 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__12800)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__12805__12806 = coll;
      if(G__12805__12806) {
        if(function() {
          var or__3824__auto____12807 = G__12805__12806.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____12807) {
            return or__3824__auto____12807
          }else {
            return G__12805__12806.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__12805__12806.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12805__12806)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12805__12806)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__12808 = cljs.core.seq.call(null, coll);
      if(!(s__12808 == null)) {
        return cljs.core._rest.call(null, s__12808)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__12812__12813 = coll;
      if(G__12812__12813) {
        if(function() {
          var or__3824__auto____12814 = G__12812__12813.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____12814) {
            return or__3824__auto____12814
          }else {
            return G__12812__12813.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__12812__12813.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12812__12813)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12812__12813)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__12816 = cljs.core.next.call(null, s);
    if(!(sn__12816 == null)) {
      var G__12817 = sn__12816;
      s = G__12817;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__12818__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__12819 = conj.call(null, coll, x);
          var G__12820 = cljs.core.first.call(null, xs);
          var G__12821 = cljs.core.next.call(null, xs);
          coll = G__12819;
          x = G__12820;
          xs = G__12821;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__12818 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12818__delegate.call(this, coll, x, xs)
    };
    G__12818.cljs$lang$maxFixedArity = 2;
    G__12818.cljs$lang$applyTo = function(arglist__12822) {
      var coll = cljs.core.first(arglist__12822);
      var x = cljs.core.first(cljs.core.next(arglist__12822));
      var xs = cljs.core.rest(cljs.core.next(arglist__12822));
      return G__12818__delegate(coll, x, xs)
    };
    G__12818.cljs$lang$arity$variadic = G__12818__delegate;
    return G__12818
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__12825 = cljs.core.seq.call(null, coll);
  var acc__12826 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__12825)) {
      return acc__12826 + cljs.core._count.call(null, s__12825)
    }else {
      var G__12827 = cljs.core.next.call(null, s__12825);
      var G__12828 = acc__12826 + 1;
      s__12825 = G__12827;
      acc__12826 = G__12828;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__12835__12836 = coll;
        if(G__12835__12836) {
          if(function() {
            var or__3824__auto____12837 = G__12835__12836.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____12837) {
              return or__3824__auto____12837
            }else {
              return G__12835__12836.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__12835__12836.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12835__12836)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12835__12836)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__12838__12839 = coll;
        if(G__12838__12839) {
          if(function() {
            var or__3824__auto____12840 = G__12838__12839.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____12840) {
              return or__3824__auto____12840
            }else {
              return G__12838__12839.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__12838__12839.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12838__12839)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12838__12839)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__12843__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__12842 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__12844 = ret__12842;
          var G__12845 = cljs.core.first.call(null, kvs);
          var G__12846 = cljs.core.second.call(null, kvs);
          var G__12847 = cljs.core.nnext.call(null, kvs);
          coll = G__12844;
          k = G__12845;
          v = G__12846;
          kvs = G__12847;
          continue
        }else {
          return ret__12842
        }
        break
      }
    };
    var G__12843 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12843__delegate.call(this, coll, k, v, kvs)
    };
    G__12843.cljs$lang$maxFixedArity = 3;
    G__12843.cljs$lang$applyTo = function(arglist__12848) {
      var coll = cljs.core.first(arglist__12848);
      var k = cljs.core.first(cljs.core.next(arglist__12848));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12848)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12848)));
      return G__12843__delegate(coll, k, v, kvs)
    };
    G__12843.cljs$lang$arity$variadic = G__12843__delegate;
    return G__12843
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__12851__delegate = function(coll, k, ks) {
      while(true) {
        var ret__12850 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__12852 = ret__12850;
          var G__12853 = cljs.core.first.call(null, ks);
          var G__12854 = cljs.core.next.call(null, ks);
          coll = G__12852;
          k = G__12853;
          ks = G__12854;
          continue
        }else {
          return ret__12850
        }
        break
      }
    };
    var G__12851 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12851__delegate.call(this, coll, k, ks)
    };
    G__12851.cljs$lang$maxFixedArity = 2;
    G__12851.cljs$lang$applyTo = function(arglist__12855) {
      var coll = cljs.core.first(arglist__12855);
      var k = cljs.core.first(cljs.core.next(arglist__12855));
      var ks = cljs.core.rest(cljs.core.next(arglist__12855));
      return G__12851__delegate(coll, k, ks)
    };
    G__12851.cljs$lang$arity$variadic = G__12851__delegate;
    return G__12851
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__12859__12860 = o;
    if(G__12859__12860) {
      if(function() {
        var or__3824__auto____12861 = G__12859__12860.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____12861) {
          return or__3824__auto____12861
        }else {
          return G__12859__12860.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__12859__12860.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__12859__12860)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__12859__12860)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__12864__delegate = function(coll, k, ks) {
      while(true) {
        var ret__12863 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__12865 = ret__12863;
          var G__12866 = cljs.core.first.call(null, ks);
          var G__12867 = cljs.core.next.call(null, ks);
          coll = G__12865;
          k = G__12866;
          ks = G__12867;
          continue
        }else {
          return ret__12863
        }
        break
      }
    };
    var G__12864 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12864__delegate.call(this, coll, k, ks)
    };
    G__12864.cljs$lang$maxFixedArity = 2;
    G__12864.cljs$lang$applyTo = function(arglist__12868) {
      var coll = cljs.core.first(arglist__12868);
      var k = cljs.core.first(cljs.core.next(arglist__12868));
      var ks = cljs.core.rest(cljs.core.next(arglist__12868));
      return G__12864__delegate(coll, k, ks)
    };
    G__12864.cljs$lang$arity$variadic = G__12864__delegate;
    return G__12864
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__12870 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__12870;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__12870
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__12872 = cljs.core.string_hash_cache[k];
  if(!(h__12872 == null)) {
    return h__12872
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____12874 = goog.isString(o);
      if(and__3822__auto____12874) {
        return check_cache
      }else {
        return and__3822__auto____12874
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__12878__12879 = x;
    if(G__12878__12879) {
      if(function() {
        var or__3824__auto____12880 = G__12878__12879.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____12880) {
          return or__3824__auto____12880
        }else {
          return G__12878__12879.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__12878__12879.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__12878__12879)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__12878__12879)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__12884__12885 = x;
    if(G__12884__12885) {
      if(function() {
        var or__3824__auto____12886 = G__12884__12885.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____12886) {
          return or__3824__auto____12886
        }else {
          return G__12884__12885.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__12884__12885.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__12884__12885)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__12884__12885)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__12890__12891 = x;
  if(G__12890__12891) {
    if(function() {
      var or__3824__auto____12892 = G__12890__12891.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____12892) {
        return or__3824__auto____12892
      }else {
        return G__12890__12891.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__12890__12891.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__12890__12891)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__12890__12891)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__12896__12897 = x;
  if(G__12896__12897) {
    if(function() {
      var or__3824__auto____12898 = G__12896__12897.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____12898) {
        return or__3824__auto____12898
      }else {
        return G__12896__12897.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__12896__12897.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__12896__12897)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__12896__12897)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__12902__12903 = x;
  if(G__12902__12903) {
    if(function() {
      var or__3824__auto____12904 = G__12902__12903.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____12904) {
        return or__3824__auto____12904
      }else {
        return G__12902__12903.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__12902__12903.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__12902__12903)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__12902__12903)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__12908__12909 = x;
  if(G__12908__12909) {
    if(function() {
      var or__3824__auto____12910 = G__12908__12909.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____12910) {
        return or__3824__auto____12910
      }else {
        return G__12908__12909.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__12908__12909.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12908__12909)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12908__12909)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__12914__12915 = x;
  if(G__12914__12915) {
    if(function() {
      var or__3824__auto____12916 = G__12914__12915.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____12916) {
        return or__3824__auto____12916
      }else {
        return G__12914__12915.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__12914__12915.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12914__12915)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12914__12915)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__12920__12921 = x;
    if(G__12920__12921) {
      if(function() {
        var or__3824__auto____12922 = G__12920__12921.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____12922) {
          return or__3824__auto____12922
        }else {
          return G__12920__12921.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__12920__12921.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__12920__12921)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__12920__12921)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__12926__12927 = x;
  if(G__12926__12927) {
    if(function() {
      var or__3824__auto____12928 = G__12926__12927.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____12928) {
        return or__3824__auto____12928
      }else {
        return G__12926__12927.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__12926__12927.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__12926__12927)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__12926__12927)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__12932__12933 = x;
  if(G__12932__12933) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____12934 = null;
      if(cljs.core.truth_(or__3824__auto____12934)) {
        return or__3824__auto____12934
      }else {
        return G__12932__12933.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__12932__12933.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__12932__12933)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__12932__12933)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__12935__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__12935 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__12935__delegate.call(this, keyvals)
    };
    G__12935.cljs$lang$maxFixedArity = 0;
    G__12935.cljs$lang$applyTo = function(arglist__12936) {
      var keyvals = cljs.core.seq(arglist__12936);
      return G__12935__delegate(keyvals)
    };
    G__12935.cljs$lang$arity$variadic = G__12935__delegate;
    return G__12935
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__12938 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__12938.push(key)
  });
  return keys__12938
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__12942 = i;
  var j__12943 = j;
  var len__12944 = len;
  while(true) {
    if(len__12944 === 0) {
      return to
    }else {
      to[j__12943] = from[i__12942];
      var G__12945 = i__12942 + 1;
      var G__12946 = j__12943 + 1;
      var G__12947 = len__12944 - 1;
      i__12942 = G__12945;
      j__12943 = G__12946;
      len__12944 = G__12947;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__12951 = i + (len - 1);
  var j__12952 = j + (len - 1);
  var len__12953 = len;
  while(true) {
    if(len__12953 === 0) {
      return to
    }else {
      to[j__12952] = from[i__12951];
      var G__12954 = i__12951 - 1;
      var G__12955 = j__12952 - 1;
      var G__12956 = len__12953 - 1;
      i__12951 = G__12954;
      j__12952 = G__12955;
      len__12953 = G__12956;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__12960__12961 = s;
    if(G__12960__12961) {
      if(function() {
        var or__3824__auto____12962 = G__12960__12961.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____12962) {
          return or__3824__auto____12962
        }else {
          return G__12960__12961.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__12960__12961.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12960__12961)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12960__12961)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__12966__12967 = s;
  if(G__12966__12967) {
    if(function() {
      var or__3824__auto____12968 = G__12966__12967.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____12968) {
        return or__3824__auto____12968
      }else {
        return G__12966__12967.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__12966__12967.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12966__12967)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12966__12967)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____12971 = goog.isString(x);
  if(and__3822__auto____12971) {
    return!function() {
      var or__3824__auto____12972 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____12972) {
        return or__3824__auto____12972
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____12971
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____12974 = goog.isString(x);
  if(and__3822__auto____12974) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____12974
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____12976 = goog.isString(x);
  if(and__3822__auto____12976) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____12976
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____12981 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____12981) {
    return or__3824__auto____12981
  }else {
    var G__12982__12983 = f;
    if(G__12982__12983) {
      if(function() {
        var or__3824__auto____12984 = G__12982__12983.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____12984) {
          return or__3824__auto____12984
        }else {
          return G__12982__12983.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__12982__12983.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__12982__12983)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__12982__12983)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____12986 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____12986) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____12986
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____12989 = coll;
    if(cljs.core.truth_(and__3822__auto____12989)) {
      var and__3822__auto____12990 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____12990) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____12990
      }
    }else {
      return and__3822__auto____12989
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__12999__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__12995 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__12996 = more;
        while(true) {
          var x__12997 = cljs.core.first.call(null, xs__12996);
          var etc__12998 = cljs.core.next.call(null, xs__12996);
          if(cljs.core.truth_(xs__12996)) {
            if(cljs.core.contains_QMARK_.call(null, s__12995, x__12997)) {
              return false
            }else {
              var G__13000 = cljs.core.conj.call(null, s__12995, x__12997);
              var G__13001 = etc__12998;
              s__12995 = G__13000;
              xs__12996 = G__13001;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__12999 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12999__delegate.call(this, x, y, more)
    };
    G__12999.cljs$lang$maxFixedArity = 2;
    G__12999.cljs$lang$applyTo = function(arglist__13002) {
      var x = cljs.core.first(arglist__13002);
      var y = cljs.core.first(cljs.core.next(arglist__13002));
      var more = cljs.core.rest(cljs.core.next(arglist__13002));
      return G__12999__delegate(x, y, more)
    };
    G__12999.cljs$lang$arity$variadic = G__12999__delegate;
    return G__12999
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__13006__13007 = x;
            if(G__13006__13007) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____13008 = null;
                if(cljs.core.truth_(or__3824__auto____13008)) {
                  return or__3824__auto____13008
                }else {
                  return G__13006__13007.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__13006__13007.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__13006__13007)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__13006__13007)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__13013 = cljs.core.count.call(null, xs);
    var yl__13014 = cljs.core.count.call(null, ys);
    if(xl__13013 < yl__13014) {
      return-1
    }else {
      if(xl__13013 > yl__13014) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__13013, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__13015 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____13016 = d__13015 === 0;
        if(and__3822__auto____13016) {
          return n + 1 < len
        }else {
          return and__3822__auto____13016
        }
      }()) {
        var G__13017 = xs;
        var G__13018 = ys;
        var G__13019 = len;
        var G__13020 = n + 1;
        xs = G__13017;
        ys = G__13018;
        len = G__13019;
        n = G__13020;
        continue
      }else {
        return d__13015
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__13022 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__13022)) {
        return r__13022
      }else {
        if(cljs.core.truth_(r__13022)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__13024 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__13024, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__13024)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____13030 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____13030) {
      var s__13031 = temp__3971__auto____13030;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__13031), cljs.core.next.call(null, s__13031))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__13032 = val;
    var coll__13033 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__13033) {
        var nval__13034 = f.call(null, val__13032, cljs.core.first.call(null, coll__13033));
        if(cljs.core.reduced_QMARK_.call(null, nval__13034)) {
          return cljs.core.deref.call(null, nval__13034)
        }else {
          var G__13035 = nval__13034;
          var G__13036 = cljs.core.next.call(null, coll__13033);
          val__13032 = G__13035;
          coll__13033 = G__13036;
          continue
        }
      }else {
        return val__13032
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__13038 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__13038);
  return cljs.core.vec.call(null, a__13038)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__13045__13046 = coll;
      if(G__13045__13046) {
        if(function() {
          var or__3824__auto____13047 = G__13045__13046.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____13047) {
            return or__3824__auto____13047
          }else {
            return G__13045__13046.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__13045__13046.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__13045__13046)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__13045__13046)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__13048__13049 = coll;
      if(G__13048__13049) {
        if(function() {
          var or__3824__auto____13050 = G__13048__13049.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____13050) {
            return or__3824__auto____13050
          }else {
            return G__13048__13049.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__13048__13049.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__13048__13049)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__13048__13049)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__13051 = this;
  return this__13051.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__13052__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__13052 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13052__delegate.call(this, x, y, more)
    };
    G__13052.cljs$lang$maxFixedArity = 2;
    G__13052.cljs$lang$applyTo = function(arglist__13053) {
      var x = cljs.core.first(arglist__13053);
      var y = cljs.core.first(cljs.core.next(arglist__13053));
      var more = cljs.core.rest(cljs.core.next(arglist__13053));
      return G__13052__delegate(x, y, more)
    };
    G__13052.cljs$lang$arity$variadic = G__13052__delegate;
    return G__13052
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__13054__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__13054 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13054__delegate.call(this, x, y, more)
    };
    G__13054.cljs$lang$maxFixedArity = 2;
    G__13054.cljs$lang$applyTo = function(arglist__13055) {
      var x = cljs.core.first(arglist__13055);
      var y = cljs.core.first(cljs.core.next(arglist__13055));
      var more = cljs.core.rest(cljs.core.next(arglist__13055));
      return G__13054__delegate(x, y, more)
    };
    G__13054.cljs$lang$arity$variadic = G__13054__delegate;
    return G__13054
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__13056__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__13056 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13056__delegate.call(this, x, y, more)
    };
    G__13056.cljs$lang$maxFixedArity = 2;
    G__13056.cljs$lang$applyTo = function(arglist__13057) {
      var x = cljs.core.first(arglist__13057);
      var y = cljs.core.first(cljs.core.next(arglist__13057));
      var more = cljs.core.rest(cljs.core.next(arglist__13057));
      return G__13056__delegate(x, y, more)
    };
    G__13056.cljs$lang$arity$variadic = G__13056__delegate;
    return G__13056
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__13058__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__13058 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13058__delegate.call(this, x, y, more)
    };
    G__13058.cljs$lang$maxFixedArity = 2;
    G__13058.cljs$lang$applyTo = function(arglist__13059) {
      var x = cljs.core.first(arglist__13059);
      var y = cljs.core.first(cljs.core.next(arglist__13059));
      var more = cljs.core.rest(cljs.core.next(arglist__13059));
      return G__13058__delegate(x, y, more)
    };
    G__13058.cljs$lang$arity$variadic = G__13058__delegate;
    return G__13058
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__13060__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__13061 = y;
            var G__13062 = cljs.core.first.call(null, more);
            var G__13063 = cljs.core.next.call(null, more);
            x = G__13061;
            y = G__13062;
            more = G__13063;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__13060 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13060__delegate.call(this, x, y, more)
    };
    G__13060.cljs$lang$maxFixedArity = 2;
    G__13060.cljs$lang$applyTo = function(arglist__13064) {
      var x = cljs.core.first(arglist__13064);
      var y = cljs.core.first(cljs.core.next(arglist__13064));
      var more = cljs.core.rest(cljs.core.next(arglist__13064));
      return G__13060__delegate(x, y, more)
    };
    G__13060.cljs$lang$arity$variadic = G__13060__delegate;
    return G__13060
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__13065__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__13066 = y;
            var G__13067 = cljs.core.first.call(null, more);
            var G__13068 = cljs.core.next.call(null, more);
            x = G__13066;
            y = G__13067;
            more = G__13068;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__13065 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13065__delegate.call(this, x, y, more)
    };
    G__13065.cljs$lang$maxFixedArity = 2;
    G__13065.cljs$lang$applyTo = function(arglist__13069) {
      var x = cljs.core.first(arglist__13069);
      var y = cljs.core.first(cljs.core.next(arglist__13069));
      var more = cljs.core.rest(cljs.core.next(arglist__13069));
      return G__13065__delegate(x, y, more)
    };
    G__13065.cljs$lang$arity$variadic = G__13065__delegate;
    return G__13065
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__13070__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__13071 = y;
            var G__13072 = cljs.core.first.call(null, more);
            var G__13073 = cljs.core.next.call(null, more);
            x = G__13071;
            y = G__13072;
            more = G__13073;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__13070 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13070__delegate.call(this, x, y, more)
    };
    G__13070.cljs$lang$maxFixedArity = 2;
    G__13070.cljs$lang$applyTo = function(arglist__13074) {
      var x = cljs.core.first(arglist__13074);
      var y = cljs.core.first(cljs.core.next(arglist__13074));
      var more = cljs.core.rest(cljs.core.next(arglist__13074));
      return G__13070__delegate(x, y, more)
    };
    G__13070.cljs$lang$arity$variadic = G__13070__delegate;
    return G__13070
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__13075__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__13076 = y;
            var G__13077 = cljs.core.first.call(null, more);
            var G__13078 = cljs.core.next.call(null, more);
            x = G__13076;
            y = G__13077;
            more = G__13078;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__13075 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13075__delegate.call(this, x, y, more)
    };
    G__13075.cljs$lang$maxFixedArity = 2;
    G__13075.cljs$lang$applyTo = function(arglist__13079) {
      var x = cljs.core.first(arglist__13079);
      var y = cljs.core.first(cljs.core.next(arglist__13079));
      var more = cljs.core.rest(cljs.core.next(arglist__13079));
      return G__13075__delegate(x, y, more)
    };
    G__13075.cljs$lang$arity$variadic = G__13075__delegate;
    return G__13075
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__13080__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__13080 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13080__delegate.call(this, x, y, more)
    };
    G__13080.cljs$lang$maxFixedArity = 2;
    G__13080.cljs$lang$applyTo = function(arglist__13081) {
      var x = cljs.core.first(arglist__13081);
      var y = cljs.core.first(cljs.core.next(arglist__13081));
      var more = cljs.core.rest(cljs.core.next(arglist__13081));
      return G__13080__delegate(x, y, more)
    };
    G__13080.cljs$lang$arity$variadic = G__13080__delegate;
    return G__13080
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__13082__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__13082 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13082__delegate.call(this, x, y, more)
    };
    G__13082.cljs$lang$maxFixedArity = 2;
    G__13082.cljs$lang$applyTo = function(arglist__13083) {
      var x = cljs.core.first(arglist__13083);
      var y = cljs.core.first(cljs.core.next(arglist__13083));
      var more = cljs.core.rest(cljs.core.next(arglist__13083));
      return G__13082__delegate(x, y, more)
    };
    G__13082.cljs$lang$arity$variadic = G__13082__delegate;
    return G__13082
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__13085 = n % d;
  return cljs.core.fix.call(null, (n - rem__13085) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__13087 = cljs.core.quot.call(null, n, d);
  return n - d * q__13087
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__13090 = v - (v >> 1 & 1431655765);
  var v__13091 = (v__13090 & 858993459) + (v__13090 >> 2 & 858993459);
  return(v__13091 + (v__13091 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__13092__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__13093 = y;
            var G__13094 = cljs.core.first.call(null, more);
            var G__13095 = cljs.core.next.call(null, more);
            x = G__13093;
            y = G__13094;
            more = G__13095;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__13092 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13092__delegate.call(this, x, y, more)
    };
    G__13092.cljs$lang$maxFixedArity = 2;
    G__13092.cljs$lang$applyTo = function(arglist__13096) {
      var x = cljs.core.first(arglist__13096);
      var y = cljs.core.first(cljs.core.next(arglist__13096));
      var more = cljs.core.rest(cljs.core.next(arglist__13096));
      return G__13092__delegate(x, y, more)
    };
    G__13092.cljs$lang$arity$variadic = G__13092__delegate;
    return G__13092
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__13100 = n;
  var xs__13101 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____13102 = xs__13101;
      if(and__3822__auto____13102) {
        return n__13100 > 0
      }else {
        return and__3822__auto____13102
      }
    }())) {
      var G__13103 = n__13100 - 1;
      var G__13104 = cljs.core.next.call(null, xs__13101);
      n__13100 = G__13103;
      xs__13101 = G__13104;
      continue
    }else {
      return xs__13101
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__13105__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__13106 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__13107 = cljs.core.next.call(null, more);
            sb = G__13106;
            more = G__13107;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__13105 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__13105__delegate.call(this, x, ys)
    };
    G__13105.cljs$lang$maxFixedArity = 1;
    G__13105.cljs$lang$applyTo = function(arglist__13108) {
      var x = cljs.core.first(arglist__13108);
      var ys = cljs.core.rest(arglist__13108);
      return G__13105__delegate(x, ys)
    };
    G__13105.cljs$lang$arity$variadic = G__13105__delegate;
    return G__13105
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__13109__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__13110 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__13111 = cljs.core.next.call(null, more);
            sb = G__13110;
            more = G__13111;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__13109 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__13109__delegate.call(this, x, ys)
    };
    G__13109.cljs$lang$maxFixedArity = 1;
    G__13109.cljs$lang$applyTo = function(arglist__13112) {
      var x = cljs.core.first(arglist__13112);
      var ys = cljs.core.rest(arglist__13112);
      return G__13109__delegate(x, ys)
    };
    G__13109.cljs$lang$arity$variadic = G__13109__delegate;
    return G__13109
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__13113) {
    var fmt = cljs.core.first(arglist__13113);
    var args = cljs.core.rest(arglist__13113);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__13116 = cljs.core.seq.call(null, x);
    var ys__13117 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__13116 == null) {
        return ys__13117 == null
      }else {
        if(ys__13117 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__13116), cljs.core.first.call(null, ys__13117))) {
            var G__13118 = cljs.core.next.call(null, xs__13116);
            var G__13119 = cljs.core.next.call(null, ys__13117);
            xs__13116 = G__13118;
            ys__13117 = G__13119;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__13120_SHARP_, p2__13121_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__13120_SHARP_, cljs.core.hash.call(null, p2__13121_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__13125 = 0;
  var s__13126 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__13126) {
      var e__13127 = cljs.core.first.call(null, s__13126);
      var G__13128 = (h__13125 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__13127)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__13127)))) % 4503599627370496;
      var G__13129 = cljs.core.next.call(null, s__13126);
      h__13125 = G__13128;
      s__13126 = G__13129;
      continue
    }else {
      return h__13125
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__13133 = 0;
  var s__13134 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__13134) {
      var e__13135 = cljs.core.first.call(null, s__13134);
      var G__13136 = (h__13133 + cljs.core.hash.call(null, e__13135)) % 4503599627370496;
      var G__13137 = cljs.core.next.call(null, s__13134);
      h__13133 = G__13136;
      s__13134 = G__13137;
      continue
    }else {
      return h__13133
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__13158__13159 = cljs.core.seq.call(null, fn_map);
  if(G__13158__13159) {
    var G__13161__13163 = cljs.core.first.call(null, G__13158__13159);
    var vec__13162__13164 = G__13161__13163;
    var key_name__13165 = cljs.core.nth.call(null, vec__13162__13164, 0, null);
    var f__13166 = cljs.core.nth.call(null, vec__13162__13164, 1, null);
    var G__13158__13167 = G__13158__13159;
    var G__13161__13168 = G__13161__13163;
    var G__13158__13169 = G__13158__13167;
    while(true) {
      var vec__13170__13171 = G__13161__13168;
      var key_name__13172 = cljs.core.nth.call(null, vec__13170__13171, 0, null);
      var f__13173 = cljs.core.nth.call(null, vec__13170__13171, 1, null);
      var G__13158__13174 = G__13158__13169;
      var str_name__13175 = cljs.core.name.call(null, key_name__13172);
      obj[str_name__13175] = f__13173;
      var temp__3974__auto____13176 = cljs.core.next.call(null, G__13158__13174);
      if(temp__3974__auto____13176) {
        var G__13158__13177 = temp__3974__auto____13176;
        var G__13178 = cljs.core.first.call(null, G__13158__13177);
        var G__13179 = G__13158__13177;
        G__13161__13168 = G__13178;
        G__13158__13169 = G__13179;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13180 = this;
  var h__2093__auto____13181 = this__13180.__hash;
  if(!(h__2093__auto____13181 == null)) {
    return h__2093__auto____13181
  }else {
    var h__2093__auto____13182 = cljs.core.hash_coll.call(null, coll);
    this__13180.__hash = h__2093__auto____13182;
    return h__2093__auto____13182
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__13183 = this;
  if(this__13183.count === 1) {
    return null
  }else {
    return this__13183.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13184 = this;
  return new cljs.core.List(this__13184.meta, o, coll, this__13184.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__13185 = this;
  var this__13186 = this;
  return cljs.core.pr_str.call(null, this__13186)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13187 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13188 = this;
  return this__13188.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__13189 = this;
  return this__13189.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__13190 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__13191 = this;
  return this__13191.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__13192 = this;
  if(this__13192.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__13192.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13193 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13194 = this;
  return new cljs.core.List(meta, this__13194.first, this__13194.rest, this__13194.count, this__13194.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13195 = this;
  return this__13195.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13196 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13197 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__13198 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13199 = this;
  return new cljs.core.List(this__13199.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__13200 = this;
  var this__13201 = this;
  return cljs.core.pr_str.call(null, this__13201)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13202 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13203 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__13204 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__13205 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__13206 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__13207 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13208 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13209 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13210 = this;
  return this__13210.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13211 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__13215__13216 = coll;
  if(G__13215__13216) {
    if(function() {
      var or__3824__auto____13217 = G__13215__13216.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____13217) {
        return or__3824__auto____13217
      }else {
        return G__13215__13216.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__13215__13216.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__13215__13216)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__13215__13216)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__13218__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__13218 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13218__delegate.call(this, x, y, z, items)
    };
    G__13218.cljs$lang$maxFixedArity = 3;
    G__13218.cljs$lang$applyTo = function(arglist__13219) {
      var x = cljs.core.first(arglist__13219);
      var y = cljs.core.first(cljs.core.next(arglist__13219));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13219)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13219)));
      return G__13218__delegate(x, y, z, items)
    };
    G__13218.cljs$lang$arity$variadic = G__13218__delegate;
    return G__13218
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13220 = this;
  var h__2093__auto____13221 = this__13220.__hash;
  if(!(h__2093__auto____13221 == null)) {
    return h__2093__auto____13221
  }else {
    var h__2093__auto____13222 = cljs.core.hash_coll.call(null, coll);
    this__13220.__hash = h__2093__auto____13222;
    return h__2093__auto____13222
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__13223 = this;
  if(this__13223.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__13223.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13224 = this;
  return new cljs.core.Cons(null, o, coll, this__13224.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__13225 = this;
  var this__13226 = this;
  return cljs.core.pr_str.call(null, this__13226)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13227 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__13228 = this;
  return this__13228.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__13229 = this;
  if(this__13229.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__13229.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13230 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13231 = this;
  return new cljs.core.Cons(meta, this__13231.first, this__13231.rest, this__13231.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13232 = this;
  return this__13232.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13233 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__13233.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____13238 = coll == null;
    if(or__3824__auto____13238) {
      return or__3824__auto____13238
    }else {
      var G__13239__13240 = coll;
      if(G__13239__13240) {
        if(function() {
          var or__3824__auto____13241 = G__13239__13240.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____13241) {
            return or__3824__auto____13241
          }else {
            return G__13239__13240.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__13239__13240.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__13239__13240)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__13239__13240)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__13245__13246 = x;
  if(G__13245__13246) {
    if(function() {
      var or__3824__auto____13247 = G__13245__13246.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____13247) {
        return or__3824__auto____13247
      }else {
        return G__13245__13246.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__13245__13246.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__13245__13246)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__13245__13246)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__13248 = null;
  var G__13248__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__13248__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__13248 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__13248__2.call(this, string, f);
      case 3:
        return G__13248__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13248
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__13249 = null;
  var G__13249__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__13249__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__13249 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13249__2.call(this, string, k);
      case 3:
        return G__13249__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13249
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__13250 = null;
  var G__13250__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__13250__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__13250 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13250__2.call(this, string, n);
      case 3:
        return G__13250__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13250
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__13262 = null;
  var G__13262__2 = function(this_sym13253, coll) {
    var this__13255 = this;
    var this_sym13253__13256 = this;
    var ___13257 = this_sym13253__13256;
    if(coll == null) {
      return null
    }else {
      var strobj__13258 = coll.strobj;
      if(strobj__13258 == null) {
        return cljs.core._lookup.call(null, coll, this__13255.k, null)
      }else {
        return strobj__13258[this__13255.k]
      }
    }
  };
  var G__13262__3 = function(this_sym13254, coll, not_found) {
    var this__13255 = this;
    var this_sym13254__13259 = this;
    var ___13260 = this_sym13254__13259;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__13255.k, not_found)
    }
  };
  G__13262 = function(this_sym13254, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13262__2.call(this, this_sym13254, coll);
      case 3:
        return G__13262__3.call(this, this_sym13254, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13262
}();
cljs.core.Keyword.prototype.apply = function(this_sym13251, args13252) {
  var this__13261 = this;
  return this_sym13251.call.apply(this_sym13251, [this_sym13251].concat(args13252.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__13271 = null;
  var G__13271__2 = function(this_sym13265, coll) {
    var this_sym13265__13267 = this;
    var this__13268 = this_sym13265__13267;
    return cljs.core._lookup.call(null, coll, this__13268.toString(), null)
  };
  var G__13271__3 = function(this_sym13266, coll, not_found) {
    var this_sym13266__13269 = this;
    var this__13270 = this_sym13266__13269;
    return cljs.core._lookup.call(null, coll, this__13270.toString(), not_found)
  };
  G__13271 = function(this_sym13266, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13271__2.call(this, this_sym13266, coll);
      case 3:
        return G__13271__3.call(this, this_sym13266, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13271
}();
String.prototype.apply = function(this_sym13263, args13264) {
  return this_sym13263.call.apply(this_sym13263, [this_sym13263].concat(args13264.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__13273 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__13273
  }else {
    lazy_seq.x = x__13273.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13274 = this;
  var h__2093__auto____13275 = this__13274.__hash;
  if(!(h__2093__auto____13275 == null)) {
    return h__2093__auto____13275
  }else {
    var h__2093__auto____13276 = cljs.core.hash_coll.call(null, coll);
    this__13274.__hash = h__2093__auto____13276;
    return h__2093__auto____13276
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__13277 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13278 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__13279 = this;
  var this__13280 = this;
  return cljs.core.pr_str.call(null, this__13280)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13281 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__13282 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__13283 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13284 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13285 = this;
  return new cljs.core.LazySeq(meta, this__13285.realized, this__13285.x, this__13285.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13286 = this;
  return this__13286.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13287 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__13287.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__13288 = this;
  return this__13288.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__13289 = this;
  var ___13290 = this;
  this__13289.buf[this__13289.end] = o;
  return this__13289.end = this__13289.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__13291 = this;
  var ___13292 = this;
  var ret__13293 = new cljs.core.ArrayChunk(this__13291.buf, 0, this__13291.end);
  this__13291.buf = null;
  return ret__13293
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__13294 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__13294.arr[this__13294.off], this__13294.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__13295 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__13295.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__13296 = this;
  if(this__13296.off === this__13296.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__13296.arr, this__13296.off + 1, this__13296.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__13297 = this;
  return this__13297.arr[this__13297.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__13298 = this;
  if(function() {
    var and__3822__auto____13299 = i >= 0;
    if(and__3822__auto____13299) {
      return i < this__13298.end - this__13298.off
    }else {
      return and__3822__auto____13299
    }
  }()) {
    return this__13298.arr[this__13298.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__13300 = this;
  return this__13300.end - this__13300.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__13301 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13302 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__13303 = this;
  return cljs.core._nth.call(null, this__13303.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__13304 = this;
  if(cljs.core._count.call(null, this__13304.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__13304.chunk), this__13304.more, this__13304.meta)
  }else {
    if(this__13304.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__13304.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__13305 = this;
  if(this__13305.more == null) {
    return null
  }else {
    return this__13305.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13306 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__13307 = this;
  return new cljs.core.ChunkedCons(this__13307.chunk, this__13307.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13308 = this;
  return this__13308.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__13309 = this;
  return this__13309.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__13310 = this;
  if(this__13310.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__13310.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__13314__13315 = s;
    if(G__13314__13315) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____13316 = null;
        if(cljs.core.truth_(or__3824__auto____13316)) {
          return or__3824__auto____13316
        }else {
          return G__13314__13315.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__13314__13315.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__13314__13315)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__13314__13315)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__13319 = [];
  var s__13320 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__13320)) {
      ary__13319.push(cljs.core.first.call(null, s__13320));
      var G__13321 = cljs.core.next.call(null, s__13320);
      s__13320 = G__13321;
      continue
    }else {
      return ary__13319
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__13325 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__13326 = 0;
  var xs__13327 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__13327) {
      ret__13325[i__13326] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__13327));
      var G__13328 = i__13326 + 1;
      var G__13329 = cljs.core.next.call(null, xs__13327);
      i__13326 = G__13328;
      xs__13327 = G__13329;
      continue
    }else {
    }
    break
  }
  return ret__13325
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__13337 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__13338 = cljs.core.seq.call(null, init_val_or_seq);
      var i__13339 = 0;
      var s__13340 = s__13338;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____13341 = s__13340;
          if(and__3822__auto____13341) {
            return i__13339 < size
          }else {
            return and__3822__auto____13341
          }
        }())) {
          a__13337[i__13339] = cljs.core.first.call(null, s__13340);
          var G__13344 = i__13339 + 1;
          var G__13345 = cljs.core.next.call(null, s__13340);
          i__13339 = G__13344;
          s__13340 = G__13345;
          continue
        }else {
          return a__13337
        }
        break
      }
    }else {
      var n__2428__auto____13342 = size;
      var i__13343 = 0;
      while(true) {
        if(i__13343 < n__2428__auto____13342) {
          a__13337[i__13343] = init_val_or_seq;
          var G__13346 = i__13343 + 1;
          i__13343 = G__13346;
          continue
        }else {
        }
        break
      }
      return a__13337
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__13354 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__13355 = cljs.core.seq.call(null, init_val_or_seq);
      var i__13356 = 0;
      var s__13357 = s__13355;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____13358 = s__13357;
          if(and__3822__auto____13358) {
            return i__13356 < size
          }else {
            return and__3822__auto____13358
          }
        }())) {
          a__13354[i__13356] = cljs.core.first.call(null, s__13357);
          var G__13361 = i__13356 + 1;
          var G__13362 = cljs.core.next.call(null, s__13357);
          i__13356 = G__13361;
          s__13357 = G__13362;
          continue
        }else {
          return a__13354
        }
        break
      }
    }else {
      var n__2428__auto____13359 = size;
      var i__13360 = 0;
      while(true) {
        if(i__13360 < n__2428__auto____13359) {
          a__13354[i__13360] = init_val_or_seq;
          var G__13363 = i__13360 + 1;
          i__13360 = G__13363;
          continue
        }else {
        }
        break
      }
      return a__13354
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__13371 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__13372 = cljs.core.seq.call(null, init_val_or_seq);
      var i__13373 = 0;
      var s__13374 = s__13372;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____13375 = s__13374;
          if(and__3822__auto____13375) {
            return i__13373 < size
          }else {
            return and__3822__auto____13375
          }
        }())) {
          a__13371[i__13373] = cljs.core.first.call(null, s__13374);
          var G__13378 = i__13373 + 1;
          var G__13379 = cljs.core.next.call(null, s__13374);
          i__13373 = G__13378;
          s__13374 = G__13379;
          continue
        }else {
          return a__13371
        }
        break
      }
    }else {
      var n__2428__auto____13376 = size;
      var i__13377 = 0;
      while(true) {
        if(i__13377 < n__2428__auto____13376) {
          a__13371[i__13377] = init_val_or_seq;
          var G__13380 = i__13377 + 1;
          i__13377 = G__13380;
          continue
        }else {
        }
        break
      }
      return a__13371
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__13385 = s;
    var i__13386 = n;
    var sum__13387 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____13388 = i__13386 > 0;
        if(and__3822__auto____13388) {
          return cljs.core.seq.call(null, s__13385)
        }else {
          return and__3822__auto____13388
        }
      }())) {
        var G__13389 = cljs.core.next.call(null, s__13385);
        var G__13390 = i__13386 - 1;
        var G__13391 = sum__13387 + 1;
        s__13385 = G__13389;
        i__13386 = G__13390;
        sum__13387 = G__13391;
        continue
      }else {
        return sum__13387
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__13396 = cljs.core.seq.call(null, x);
      if(s__13396) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__13396)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__13396), concat.call(null, cljs.core.chunk_rest.call(null, s__13396), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__13396), concat.call(null, cljs.core.rest.call(null, s__13396), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__13400__delegate = function(x, y, zs) {
      var cat__13399 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__13398 = cljs.core.seq.call(null, xys);
          if(xys__13398) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__13398)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__13398), cat.call(null, cljs.core.chunk_rest.call(null, xys__13398), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__13398), cat.call(null, cljs.core.rest.call(null, xys__13398), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__13399.call(null, concat.call(null, x, y), zs)
    };
    var G__13400 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13400__delegate.call(this, x, y, zs)
    };
    G__13400.cljs$lang$maxFixedArity = 2;
    G__13400.cljs$lang$applyTo = function(arglist__13401) {
      var x = cljs.core.first(arglist__13401);
      var y = cljs.core.first(cljs.core.next(arglist__13401));
      var zs = cljs.core.rest(cljs.core.next(arglist__13401));
      return G__13400__delegate(x, y, zs)
    };
    G__13400.cljs$lang$arity$variadic = G__13400__delegate;
    return G__13400
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__13402__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__13402 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__13402__delegate.call(this, a, b, c, d, more)
    };
    G__13402.cljs$lang$maxFixedArity = 4;
    G__13402.cljs$lang$applyTo = function(arglist__13403) {
      var a = cljs.core.first(arglist__13403);
      var b = cljs.core.first(cljs.core.next(arglist__13403));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13403)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13403))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13403))));
      return G__13402__delegate(a, b, c, d, more)
    };
    G__13402.cljs$lang$arity$variadic = G__13402__delegate;
    return G__13402
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__13445 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__13446 = cljs.core._first.call(null, args__13445);
    var args__13447 = cljs.core._rest.call(null, args__13445);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__13446)
      }else {
        return f.call(null, a__13446)
      }
    }else {
      var b__13448 = cljs.core._first.call(null, args__13447);
      var args__13449 = cljs.core._rest.call(null, args__13447);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__13446, b__13448)
        }else {
          return f.call(null, a__13446, b__13448)
        }
      }else {
        var c__13450 = cljs.core._first.call(null, args__13449);
        var args__13451 = cljs.core._rest.call(null, args__13449);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__13446, b__13448, c__13450)
          }else {
            return f.call(null, a__13446, b__13448, c__13450)
          }
        }else {
          var d__13452 = cljs.core._first.call(null, args__13451);
          var args__13453 = cljs.core._rest.call(null, args__13451);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__13446, b__13448, c__13450, d__13452)
            }else {
              return f.call(null, a__13446, b__13448, c__13450, d__13452)
            }
          }else {
            var e__13454 = cljs.core._first.call(null, args__13453);
            var args__13455 = cljs.core._rest.call(null, args__13453);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__13446, b__13448, c__13450, d__13452, e__13454)
              }else {
                return f.call(null, a__13446, b__13448, c__13450, d__13452, e__13454)
              }
            }else {
              var f__13456 = cljs.core._first.call(null, args__13455);
              var args__13457 = cljs.core._rest.call(null, args__13455);
              if(argc === 6) {
                if(f__13456.cljs$lang$arity$6) {
                  return f__13456.cljs$lang$arity$6(a__13446, b__13448, c__13450, d__13452, e__13454, f__13456)
                }else {
                  return f__13456.call(null, a__13446, b__13448, c__13450, d__13452, e__13454, f__13456)
                }
              }else {
                var g__13458 = cljs.core._first.call(null, args__13457);
                var args__13459 = cljs.core._rest.call(null, args__13457);
                if(argc === 7) {
                  if(f__13456.cljs$lang$arity$7) {
                    return f__13456.cljs$lang$arity$7(a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458)
                  }else {
                    return f__13456.call(null, a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458)
                  }
                }else {
                  var h__13460 = cljs.core._first.call(null, args__13459);
                  var args__13461 = cljs.core._rest.call(null, args__13459);
                  if(argc === 8) {
                    if(f__13456.cljs$lang$arity$8) {
                      return f__13456.cljs$lang$arity$8(a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460)
                    }else {
                      return f__13456.call(null, a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460)
                    }
                  }else {
                    var i__13462 = cljs.core._first.call(null, args__13461);
                    var args__13463 = cljs.core._rest.call(null, args__13461);
                    if(argc === 9) {
                      if(f__13456.cljs$lang$arity$9) {
                        return f__13456.cljs$lang$arity$9(a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462)
                      }else {
                        return f__13456.call(null, a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462)
                      }
                    }else {
                      var j__13464 = cljs.core._first.call(null, args__13463);
                      var args__13465 = cljs.core._rest.call(null, args__13463);
                      if(argc === 10) {
                        if(f__13456.cljs$lang$arity$10) {
                          return f__13456.cljs$lang$arity$10(a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462, j__13464)
                        }else {
                          return f__13456.call(null, a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462, j__13464)
                        }
                      }else {
                        var k__13466 = cljs.core._first.call(null, args__13465);
                        var args__13467 = cljs.core._rest.call(null, args__13465);
                        if(argc === 11) {
                          if(f__13456.cljs$lang$arity$11) {
                            return f__13456.cljs$lang$arity$11(a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462, j__13464, k__13466)
                          }else {
                            return f__13456.call(null, a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462, j__13464, k__13466)
                          }
                        }else {
                          var l__13468 = cljs.core._first.call(null, args__13467);
                          var args__13469 = cljs.core._rest.call(null, args__13467);
                          if(argc === 12) {
                            if(f__13456.cljs$lang$arity$12) {
                              return f__13456.cljs$lang$arity$12(a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462, j__13464, k__13466, l__13468)
                            }else {
                              return f__13456.call(null, a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462, j__13464, k__13466, l__13468)
                            }
                          }else {
                            var m__13470 = cljs.core._first.call(null, args__13469);
                            var args__13471 = cljs.core._rest.call(null, args__13469);
                            if(argc === 13) {
                              if(f__13456.cljs$lang$arity$13) {
                                return f__13456.cljs$lang$arity$13(a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462, j__13464, k__13466, l__13468, m__13470)
                              }else {
                                return f__13456.call(null, a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462, j__13464, k__13466, l__13468, m__13470)
                              }
                            }else {
                              var n__13472 = cljs.core._first.call(null, args__13471);
                              var args__13473 = cljs.core._rest.call(null, args__13471);
                              if(argc === 14) {
                                if(f__13456.cljs$lang$arity$14) {
                                  return f__13456.cljs$lang$arity$14(a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462, j__13464, k__13466, l__13468, m__13470, n__13472)
                                }else {
                                  return f__13456.call(null, a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462, j__13464, k__13466, l__13468, m__13470, n__13472)
                                }
                              }else {
                                var o__13474 = cljs.core._first.call(null, args__13473);
                                var args__13475 = cljs.core._rest.call(null, args__13473);
                                if(argc === 15) {
                                  if(f__13456.cljs$lang$arity$15) {
                                    return f__13456.cljs$lang$arity$15(a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462, j__13464, k__13466, l__13468, m__13470, n__13472, o__13474)
                                  }else {
                                    return f__13456.call(null, a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462, j__13464, k__13466, l__13468, m__13470, n__13472, o__13474)
                                  }
                                }else {
                                  var p__13476 = cljs.core._first.call(null, args__13475);
                                  var args__13477 = cljs.core._rest.call(null, args__13475);
                                  if(argc === 16) {
                                    if(f__13456.cljs$lang$arity$16) {
                                      return f__13456.cljs$lang$arity$16(a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462, j__13464, k__13466, l__13468, m__13470, n__13472, o__13474, p__13476)
                                    }else {
                                      return f__13456.call(null, a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462, j__13464, k__13466, l__13468, m__13470, n__13472, o__13474, p__13476)
                                    }
                                  }else {
                                    var q__13478 = cljs.core._first.call(null, args__13477);
                                    var args__13479 = cljs.core._rest.call(null, args__13477);
                                    if(argc === 17) {
                                      if(f__13456.cljs$lang$arity$17) {
                                        return f__13456.cljs$lang$arity$17(a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462, j__13464, k__13466, l__13468, m__13470, n__13472, o__13474, p__13476, q__13478)
                                      }else {
                                        return f__13456.call(null, a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462, j__13464, k__13466, l__13468, m__13470, n__13472, o__13474, p__13476, q__13478)
                                      }
                                    }else {
                                      var r__13480 = cljs.core._first.call(null, args__13479);
                                      var args__13481 = cljs.core._rest.call(null, args__13479);
                                      if(argc === 18) {
                                        if(f__13456.cljs$lang$arity$18) {
                                          return f__13456.cljs$lang$arity$18(a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462, j__13464, k__13466, l__13468, m__13470, n__13472, o__13474, p__13476, q__13478, r__13480)
                                        }else {
                                          return f__13456.call(null, a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462, j__13464, k__13466, l__13468, m__13470, n__13472, o__13474, p__13476, q__13478, r__13480)
                                        }
                                      }else {
                                        var s__13482 = cljs.core._first.call(null, args__13481);
                                        var args__13483 = cljs.core._rest.call(null, args__13481);
                                        if(argc === 19) {
                                          if(f__13456.cljs$lang$arity$19) {
                                            return f__13456.cljs$lang$arity$19(a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462, j__13464, k__13466, l__13468, m__13470, n__13472, o__13474, p__13476, q__13478, r__13480, s__13482)
                                          }else {
                                            return f__13456.call(null, a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462, j__13464, k__13466, l__13468, m__13470, n__13472, o__13474, p__13476, q__13478, r__13480, s__13482)
                                          }
                                        }else {
                                          var t__13484 = cljs.core._first.call(null, args__13483);
                                          var args__13485 = cljs.core._rest.call(null, args__13483);
                                          if(argc === 20) {
                                            if(f__13456.cljs$lang$arity$20) {
                                              return f__13456.cljs$lang$arity$20(a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462, j__13464, k__13466, l__13468, m__13470, n__13472, o__13474, p__13476, q__13478, r__13480, s__13482, t__13484)
                                            }else {
                                              return f__13456.call(null, a__13446, b__13448, c__13450, d__13452, e__13454, f__13456, g__13458, h__13460, i__13462, j__13464, k__13466, l__13468, m__13470, n__13472, o__13474, p__13476, q__13478, r__13480, s__13482, t__13484)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__13500 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__13501 = cljs.core.bounded_count.call(null, args, fixed_arity__13500 + 1);
      if(bc__13501 <= fixed_arity__13500) {
        return cljs.core.apply_to.call(null, f, bc__13501, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__13502 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__13503 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__13504 = cljs.core.bounded_count.call(null, arglist__13502, fixed_arity__13503 + 1);
      if(bc__13504 <= fixed_arity__13503) {
        return cljs.core.apply_to.call(null, f, bc__13504, arglist__13502)
      }else {
        return f.cljs$lang$applyTo(arglist__13502)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__13502))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__13505 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__13506 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__13507 = cljs.core.bounded_count.call(null, arglist__13505, fixed_arity__13506 + 1);
      if(bc__13507 <= fixed_arity__13506) {
        return cljs.core.apply_to.call(null, f, bc__13507, arglist__13505)
      }else {
        return f.cljs$lang$applyTo(arglist__13505)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__13505))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__13508 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__13509 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__13510 = cljs.core.bounded_count.call(null, arglist__13508, fixed_arity__13509 + 1);
      if(bc__13510 <= fixed_arity__13509) {
        return cljs.core.apply_to.call(null, f, bc__13510, arglist__13508)
      }else {
        return f.cljs$lang$applyTo(arglist__13508)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__13508))
    }
  };
  var apply__6 = function() {
    var G__13514__delegate = function(f, a, b, c, d, args) {
      var arglist__13511 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__13512 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__13513 = cljs.core.bounded_count.call(null, arglist__13511, fixed_arity__13512 + 1);
        if(bc__13513 <= fixed_arity__13512) {
          return cljs.core.apply_to.call(null, f, bc__13513, arglist__13511)
        }else {
          return f.cljs$lang$applyTo(arglist__13511)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__13511))
      }
    };
    var G__13514 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__13514__delegate.call(this, f, a, b, c, d, args)
    };
    G__13514.cljs$lang$maxFixedArity = 5;
    G__13514.cljs$lang$applyTo = function(arglist__13515) {
      var f = cljs.core.first(arglist__13515);
      var a = cljs.core.first(cljs.core.next(arglist__13515));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13515)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13515))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13515)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13515)))));
      return G__13514__delegate(f, a, b, c, d, args)
    };
    G__13514.cljs$lang$arity$variadic = G__13514__delegate;
    return G__13514
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__13516) {
    var obj = cljs.core.first(arglist__13516);
    var f = cljs.core.first(cljs.core.next(arglist__13516));
    var args = cljs.core.rest(cljs.core.next(arglist__13516));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__13517__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__13517 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13517__delegate.call(this, x, y, more)
    };
    G__13517.cljs$lang$maxFixedArity = 2;
    G__13517.cljs$lang$applyTo = function(arglist__13518) {
      var x = cljs.core.first(arglist__13518);
      var y = cljs.core.first(cljs.core.next(arglist__13518));
      var more = cljs.core.rest(cljs.core.next(arglist__13518));
      return G__13517__delegate(x, y, more)
    };
    G__13517.cljs$lang$arity$variadic = G__13517__delegate;
    return G__13517
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__13519 = pred;
        var G__13520 = cljs.core.next.call(null, coll);
        pred = G__13519;
        coll = G__13520;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____13522 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____13522)) {
        return or__3824__auto____13522
      }else {
        var G__13523 = pred;
        var G__13524 = cljs.core.next.call(null, coll);
        pred = G__13523;
        coll = G__13524;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__13525 = null;
    var G__13525__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__13525__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__13525__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__13525__3 = function() {
      var G__13526__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__13526 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__13526__delegate.call(this, x, y, zs)
      };
      G__13526.cljs$lang$maxFixedArity = 2;
      G__13526.cljs$lang$applyTo = function(arglist__13527) {
        var x = cljs.core.first(arglist__13527);
        var y = cljs.core.first(cljs.core.next(arglist__13527));
        var zs = cljs.core.rest(cljs.core.next(arglist__13527));
        return G__13526__delegate(x, y, zs)
      };
      G__13526.cljs$lang$arity$variadic = G__13526__delegate;
      return G__13526
    }();
    G__13525 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__13525__0.call(this);
        case 1:
          return G__13525__1.call(this, x);
        case 2:
          return G__13525__2.call(this, x, y);
        default:
          return G__13525__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__13525.cljs$lang$maxFixedArity = 2;
    G__13525.cljs$lang$applyTo = G__13525__3.cljs$lang$applyTo;
    return G__13525
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__13528__delegate = function(args) {
      return x
    };
    var G__13528 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__13528__delegate.call(this, args)
    };
    G__13528.cljs$lang$maxFixedArity = 0;
    G__13528.cljs$lang$applyTo = function(arglist__13529) {
      var args = cljs.core.seq(arglist__13529);
      return G__13528__delegate(args)
    };
    G__13528.cljs$lang$arity$variadic = G__13528__delegate;
    return G__13528
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__13536 = null;
      var G__13536__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__13536__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__13536__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__13536__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__13536__4 = function() {
        var G__13537__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__13537 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13537__delegate.call(this, x, y, z, args)
        };
        G__13537.cljs$lang$maxFixedArity = 3;
        G__13537.cljs$lang$applyTo = function(arglist__13538) {
          var x = cljs.core.first(arglist__13538);
          var y = cljs.core.first(cljs.core.next(arglist__13538));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13538)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13538)));
          return G__13537__delegate(x, y, z, args)
        };
        G__13537.cljs$lang$arity$variadic = G__13537__delegate;
        return G__13537
      }();
      G__13536 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13536__0.call(this);
          case 1:
            return G__13536__1.call(this, x);
          case 2:
            return G__13536__2.call(this, x, y);
          case 3:
            return G__13536__3.call(this, x, y, z);
          default:
            return G__13536__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__13536.cljs$lang$maxFixedArity = 3;
      G__13536.cljs$lang$applyTo = G__13536__4.cljs$lang$applyTo;
      return G__13536
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__13539 = null;
      var G__13539__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__13539__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__13539__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__13539__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__13539__4 = function() {
        var G__13540__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__13540 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13540__delegate.call(this, x, y, z, args)
        };
        G__13540.cljs$lang$maxFixedArity = 3;
        G__13540.cljs$lang$applyTo = function(arglist__13541) {
          var x = cljs.core.first(arglist__13541);
          var y = cljs.core.first(cljs.core.next(arglist__13541));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13541)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13541)));
          return G__13540__delegate(x, y, z, args)
        };
        G__13540.cljs$lang$arity$variadic = G__13540__delegate;
        return G__13540
      }();
      G__13539 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13539__0.call(this);
          case 1:
            return G__13539__1.call(this, x);
          case 2:
            return G__13539__2.call(this, x, y);
          case 3:
            return G__13539__3.call(this, x, y, z);
          default:
            return G__13539__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__13539.cljs$lang$maxFixedArity = 3;
      G__13539.cljs$lang$applyTo = G__13539__4.cljs$lang$applyTo;
      return G__13539
    }()
  };
  var comp__4 = function() {
    var G__13542__delegate = function(f1, f2, f3, fs) {
      var fs__13533 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__13543__delegate = function(args) {
          var ret__13534 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__13533), args);
          var fs__13535 = cljs.core.next.call(null, fs__13533);
          while(true) {
            if(fs__13535) {
              var G__13544 = cljs.core.first.call(null, fs__13535).call(null, ret__13534);
              var G__13545 = cljs.core.next.call(null, fs__13535);
              ret__13534 = G__13544;
              fs__13535 = G__13545;
              continue
            }else {
              return ret__13534
            }
            break
          }
        };
        var G__13543 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__13543__delegate.call(this, args)
        };
        G__13543.cljs$lang$maxFixedArity = 0;
        G__13543.cljs$lang$applyTo = function(arglist__13546) {
          var args = cljs.core.seq(arglist__13546);
          return G__13543__delegate(args)
        };
        G__13543.cljs$lang$arity$variadic = G__13543__delegate;
        return G__13543
      }()
    };
    var G__13542 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13542__delegate.call(this, f1, f2, f3, fs)
    };
    G__13542.cljs$lang$maxFixedArity = 3;
    G__13542.cljs$lang$applyTo = function(arglist__13547) {
      var f1 = cljs.core.first(arglist__13547);
      var f2 = cljs.core.first(cljs.core.next(arglist__13547));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13547)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13547)));
      return G__13542__delegate(f1, f2, f3, fs)
    };
    G__13542.cljs$lang$arity$variadic = G__13542__delegate;
    return G__13542
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__13548__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__13548 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__13548__delegate.call(this, args)
      };
      G__13548.cljs$lang$maxFixedArity = 0;
      G__13548.cljs$lang$applyTo = function(arglist__13549) {
        var args = cljs.core.seq(arglist__13549);
        return G__13548__delegate(args)
      };
      G__13548.cljs$lang$arity$variadic = G__13548__delegate;
      return G__13548
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__13550__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__13550 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__13550__delegate.call(this, args)
      };
      G__13550.cljs$lang$maxFixedArity = 0;
      G__13550.cljs$lang$applyTo = function(arglist__13551) {
        var args = cljs.core.seq(arglist__13551);
        return G__13550__delegate(args)
      };
      G__13550.cljs$lang$arity$variadic = G__13550__delegate;
      return G__13550
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__13552__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__13552 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__13552__delegate.call(this, args)
      };
      G__13552.cljs$lang$maxFixedArity = 0;
      G__13552.cljs$lang$applyTo = function(arglist__13553) {
        var args = cljs.core.seq(arglist__13553);
        return G__13552__delegate(args)
      };
      G__13552.cljs$lang$arity$variadic = G__13552__delegate;
      return G__13552
    }()
  };
  var partial__5 = function() {
    var G__13554__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__13555__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__13555 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__13555__delegate.call(this, args)
        };
        G__13555.cljs$lang$maxFixedArity = 0;
        G__13555.cljs$lang$applyTo = function(arglist__13556) {
          var args = cljs.core.seq(arglist__13556);
          return G__13555__delegate(args)
        };
        G__13555.cljs$lang$arity$variadic = G__13555__delegate;
        return G__13555
      }()
    };
    var G__13554 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__13554__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__13554.cljs$lang$maxFixedArity = 4;
    G__13554.cljs$lang$applyTo = function(arglist__13557) {
      var f = cljs.core.first(arglist__13557);
      var arg1 = cljs.core.first(cljs.core.next(arglist__13557));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13557)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13557))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13557))));
      return G__13554__delegate(f, arg1, arg2, arg3, more)
    };
    G__13554.cljs$lang$arity$variadic = G__13554__delegate;
    return G__13554
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__13558 = null;
      var G__13558__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__13558__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__13558__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__13558__4 = function() {
        var G__13559__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__13559 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13559__delegate.call(this, a, b, c, ds)
        };
        G__13559.cljs$lang$maxFixedArity = 3;
        G__13559.cljs$lang$applyTo = function(arglist__13560) {
          var a = cljs.core.first(arglist__13560);
          var b = cljs.core.first(cljs.core.next(arglist__13560));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13560)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13560)));
          return G__13559__delegate(a, b, c, ds)
        };
        G__13559.cljs$lang$arity$variadic = G__13559__delegate;
        return G__13559
      }();
      G__13558 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__13558__1.call(this, a);
          case 2:
            return G__13558__2.call(this, a, b);
          case 3:
            return G__13558__3.call(this, a, b, c);
          default:
            return G__13558__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__13558.cljs$lang$maxFixedArity = 3;
      G__13558.cljs$lang$applyTo = G__13558__4.cljs$lang$applyTo;
      return G__13558
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__13561 = null;
      var G__13561__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__13561__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__13561__4 = function() {
        var G__13562__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__13562 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13562__delegate.call(this, a, b, c, ds)
        };
        G__13562.cljs$lang$maxFixedArity = 3;
        G__13562.cljs$lang$applyTo = function(arglist__13563) {
          var a = cljs.core.first(arglist__13563);
          var b = cljs.core.first(cljs.core.next(arglist__13563));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13563)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13563)));
          return G__13562__delegate(a, b, c, ds)
        };
        G__13562.cljs$lang$arity$variadic = G__13562__delegate;
        return G__13562
      }();
      G__13561 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__13561__2.call(this, a, b);
          case 3:
            return G__13561__3.call(this, a, b, c);
          default:
            return G__13561__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__13561.cljs$lang$maxFixedArity = 3;
      G__13561.cljs$lang$applyTo = G__13561__4.cljs$lang$applyTo;
      return G__13561
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__13564 = null;
      var G__13564__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__13564__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__13564__4 = function() {
        var G__13565__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__13565 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13565__delegate.call(this, a, b, c, ds)
        };
        G__13565.cljs$lang$maxFixedArity = 3;
        G__13565.cljs$lang$applyTo = function(arglist__13566) {
          var a = cljs.core.first(arglist__13566);
          var b = cljs.core.first(cljs.core.next(arglist__13566));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13566)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13566)));
          return G__13565__delegate(a, b, c, ds)
        };
        G__13565.cljs$lang$arity$variadic = G__13565__delegate;
        return G__13565
      }();
      G__13564 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__13564__2.call(this, a, b);
          case 3:
            return G__13564__3.call(this, a, b, c);
          default:
            return G__13564__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__13564.cljs$lang$maxFixedArity = 3;
      G__13564.cljs$lang$applyTo = G__13564__4.cljs$lang$applyTo;
      return G__13564
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__13582 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____13590 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____13590) {
        var s__13591 = temp__3974__auto____13590;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__13591)) {
          var c__13592 = cljs.core.chunk_first.call(null, s__13591);
          var size__13593 = cljs.core.count.call(null, c__13592);
          var b__13594 = cljs.core.chunk_buffer.call(null, size__13593);
          var n__2428__auto____13595 = size__13593;
          var i__13596 = 0;
          while(true) {
            if(i__13596 < n__2428__auto____13595) {
              cljs.core.chunk_append.call(null, b__13594, f.call(null, idx + i__13596, cljs.core._nth.call(null, c__13592, i__13596)));
              var G__13597 = i__13596 + 1;
              i__13596 = G__13597;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13594), mapi.call(null, idx + size__13593, cljs.core.chunk_rest.call(null, s__13591)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__13591)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__13591)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__13582.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____13607 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____13607) {
      var s__13608 = temp__3974__auto____13607;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__13608)) {
        var c__13609 = cljs.core.chunk_first.call(null, s__13608);
        var size__13610 = cljs.core.count.call(null, c__13609);
        var b__13611 = cljs.core.chunk_buffer.call(null, size__13610);
        var n__2428__auto____13612 = size__13610;
        var i__13613 = 0;
        while(true) {
          if(i__13613 < n__2428__auto____13612) {
            var x__13614 = f.call(null, cljs.core._nth.call(null, c__13609, i__13613));
            if(x__13614 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__13611, x__13614)
            }
            var G__13616 = i__13613 + 1;
            i__13613 = G__13616;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13611), keep.call(null, f, cljs.core.chunk_rest.call(null, s__13608)))
      }else {
        var x__13615 = f.call(null, cljs.core.first.call(null, s__13608));
        if(x__13615 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__13608))
        }else {
          return cljs.core.cons.call(null, x__13615, keep.call(null, f, cljs.core.rest.call(null, s__13608)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__13642 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____13652 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____13652) {
        var s__13653 = temp__3974__auto____13652;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__13653)) {
          var c__13654 = cljs.core.chunk_first.call(null, s__13653);
          var size__13655 = cljs.core.count.call(null, c__13654);
          var b__13656 = cljs.core.chunk_buffer.call(null, size__13655);
          var n__2428__auto____13657 = size__13655;
          var i__13658 = 0;
          while(true) {
            if(i__13658 < n__2428__auto____13657) {
              var x__13659 = f.call(null, idx + i__13658, cljs.core._nth.call(null, c__13654, i__13658));
              if(x__13659 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__13656, x__13659)
              }
              var G__13661 = i__13658 + 1;
              i__13658 = G__13661;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13656), keepi.call(null, idx + size__13655, cljs.core.chunk_rest.call(null, s__13653)))
        }else {
          var x__13660 = f.call(null, idx, cljs.core.first.call(null, s__13653));
          if(x__13660 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__13653))
          }else {
            return cljs.core.cons.call(null, x__13660, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__13653)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__13642.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13747 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13747)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____13747
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13748 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13748)) {
            var and__3822__auto____13749 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____13749)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____13749
            }
          }else {
            return and__3822__auto____13748
          }
        }())
      };
      var ep1__4 = function() {
        var G__13818__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____13750 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____13750)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____13750
            }
          }())
        };
        var G__13818 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13818__delegate.call(this, x, y, z, args)
        };
        G__13818.cljs$lang$maxFixedArity = 3;
        G__13818.cljs$lang$applyTo = function(arglist__13819) {
          var x = cljs.core.first(arglist__13819);
          var y = cljs.core.first(cljs.core.next(arglist__13819));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13819)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13819)));
          return G__13818__delegate(x, y, z, args)
        };
        G__13818.cljs$lang$arity$variadic = G__13818__delegate;
        return G__13818
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13762 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13762)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____13762
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13763 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13763)) {
            var and__3822__auto____13764 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____13764)) {
              var and__3822__auto____13765 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____13765)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____13765
              }
            }else {
              return and__3822__auto____13764
            }
          }else {
            return and__3822__auto____13763
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13766 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13766)) {
            var and__3822__auto____13767 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____13767)) {
              var and__3822__auto____13768 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____13768)) {
                var and__3822__auto____13769 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____13769)) {
                  var and__3822__auto____13770 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____13770)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____13770
                  }
                }else {
                  return and__3822__auto____13769
                }
              }else {
                return and__3822__auto____13768
              }
            }else {
              return and__3822__auto____13767
            }
          }else {
            return and__3822__auto____13766
          }
        }())
      };
      var ep2__4 = function() {
        var G__13820__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____13771 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____13771)) {
              return cljs.core.every_QMARK_.call(null, function(p1__13617_SHARP_) {
                var and__3822__auto____13772 = p1.call(null, p1__13617_SHARP_);
                if(cljs.core.truth_(and__3822__auto____13772)) {
                  return p2.call(null, p1__13617_SHARP_)
                }else {
                  return and__3822__auto____13772
                }
              }, args)
            }else {
              return and__3822__auto____13771
            }
          }())
        };
        var G__13820 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13820__delegate.call(this, x, y, z, args)
        };
        G__13820.cljs$lang$maxFixedArity = 3;
        G__13820.cljs$lang$applyTo = function(arglist__13821) {
          var x = cljs.core.first(arglist__13821);
          var y = cljs.core.first(cljs.core.next(arglist__13821));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13821)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13821)));
          return G__13820__delegate(x, y, z, args)
        };
        G__13820.cljs$lang$arity$variadic = G__13820__delegate;
        return G__13820
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13791 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13791)) {
            var and__3822__auto____13792 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____13792)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____13792
            }
          }else {
            return and__3822__auto____13791
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13793 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13793)) {
            var and__3822__auto____13794 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____13794)) {
              var and__3822__auto____13795 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____13795)) {
                var and__3822__auto____13796 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____13796)) {
                  var and__3822__auto____13797 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____13797)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____13797
                  }
                }else {
                  return and__3822__auto____13796
                }
              }else {
                return and__3822__auto____13795
              }
            }else {
              return and__3822__auto____13794
            }
          }else {
            return and__3822__auto____13793
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____13798 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____13798)) {
            var and__3822__auto____13799 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____13799)) {
              var and__3822__auto____13800 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____13800)) {
                var and__3822__auto____13801 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____13801)) {
                  var and__3822__auto____13802 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____13802)) {
                    var and__3822__auto____13803 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____13803)) {
                      var and__3822__auto____13804 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____13804)) {
                        var and__3822__auto____13805 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____13805)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____13805
                        }
                      }else {
                        return and__3822__auto____13804
                      }
                    }else {
                      return and__3822__auto____13803
                    }
                  }else {
                    return and__3822__auto____13802
                  }
                }else {
                  return and__3822__auto____13801
                }
              }else {
                return and__3822__auto____13800
              }
            }else {
              return and__3822__auto____13799
            }
          }else {
            return and__3822__auto____13798
          }
        }())
      };
      var ep3__4 = function() {
        var G__13822__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____13806 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____13806)) {
              return cljs.core.every_QMARK_.call(null, function(p1__13618_SHARP_) {
                var and__3822__auto____13807 = p1.call(null, p1__13618_SHARP_);
                if(cljs.core.truth_(and__3822__auto____13807)) {
                  var and__3822__auto____13808 = p2.call(null, p1__13618_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____13808)) {
                    return p3.call(null, p1__13618_SHARP_)
                  }else {
                    return and__3822__auto____13808
                  }
                }else {
                  return and__3822__auto____13807
                }
              }, args)
            }else {
              return and__3822__auto____13806
            }
          }())
        };
        var G__13822 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13822__delegate.call(this, x, y, z, args)
        };
        G__13822.cljs$lang$maxFixedArity = 3;
        G__13822.cljs$lang$applyTo = function(arglist__13823) {
          var x = cljs.core.first(arglist__13823);
          var y = cljs.core.first(cljs.core.next(arglist__13823));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13823)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13823)));
          return G__13822__delegate(x, y, z, args)
        };
        G__13822.cljs$lang$arity$variadic = G__13822__delegate;
        return G__13822
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__13824__delegate = function(p1, p2, p3, ps) {
      var ps__13809 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__13619_SHARP_) {
            return p1__13619_SHARP_.call(null, x)
          }, ps__13809)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__13620_SHARP_) {
            var and__3822__auto____13814 = p1__13620_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____13814)) {
              return p1__13620_SHARP_.call(null, y)
            }else {
              return and__3822__auto____13814
            }
          }, ps__13809)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__13621_SHARP_) {
            var and__3822__auto____13815 = p1__13621_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____13815)) {
              var and__3822__auto____13816 = p1__13621_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____13816)) {
                return p1__13621_SHARP_.call(null, z)
              }else {
                return and__3822__auto____13816
              }
            }else {
              return and__3822__auto____13815
            }
          }, ps__13809)
        };
        var epn__4 = function() {
          var G__13825__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____13817 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____13817)) {
                return cljs.core.every_QMARK_.call(null, function(p1__13622_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__13622_SHARP_, args)
                }, ps__13809)
              }else {
                return and__3822__auto____13817
              }
            }())
          };
          var G__13825 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__13825__delegate.call(this, x, y, z, args)
          };
          G__13825.cljs$lang$maxFixedArity = 3;
          G__13825.cljs$lang$applyTo = function(arglist__13826) {
            var x = cljs.core.first(arglist__13826);
            var y = cljs.core.first(cljs.core.next(arglist__13826));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13826)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13826)));
            return G__13825__delegate(x, y, z, args)
          };
          G__13825.cljs$lang$arity$variadic = G__13825__delegate;
          return G__13825
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__13824 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13824__delegate.call(this, p1, p2, p3, ps)
    };
    G__13824.cljs$lang$maxFixedArity = 3;
    G__13824.cljs$lang$applyTo = function(arglist__13827) {
      var p1 = cljs.core.first(arglist__13827);
      var p2 = cljs.core.first(cljs.core.next(arglist__13827));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13827)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13827)));
      return G__13824__delegate(p1, p2, p3, ps)
    };
    G__13824.cljs$lang$arity$variadic = G__13824__delegate;
    return G__13824
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____13908 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13908)) {
          return or__3824__auto____13908
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____13909 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13909)) {
          return or__3824__auto____13909
        }else {
          var or__3824__auto____13910 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____13910)) {
            return or__3824__auto____13910
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__13979__delegate = function(x, y, z, args) {
          var or__3824__auto____13911 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____13911)) {
            return or__3824__auto____13911
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__13979 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13979__delegate.call(this, x, y, z, args)
        };
        G__13979.cljs$lang$maxFixedArity = 3;
        G__13979.cljs$lang$applyTo = function(arglist__13980) {
          var x = cljs.core.first(arglist__13980);
          var y = cljs.core.first(cljs.core.next(arglist__13980));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13980)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13980)));
          return G__13979__delegate(x, y, z, args)
        };
        G__13979.cljs$lang$arity$variadic = G__13979__delegate;
        return G__13979
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____13923 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13923)) {
          return or__3824__auto____13923
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____13924 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13924)) {
          return or__3824__auto____13924
        }else {
          var or__3824__auto____13925 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____13925)) {
            return or__3824__auto____13925
          }else {
            var or__3824__auto____13926 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____13926)) {
              return or__3824__auto____13926
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____13927 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13927)) {
          return or__3824__auto____13927
        }else {
          var or__3824__auto____13928 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____13928)) {
            return or__3824__auto____13928
          }else {
            var or__3824__auto____13929 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____13929)) {
              return or__3824__auto____13929
            }else {
              var or__3824__auto____13930 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____13930)) {
                return or__3824__auto____13930
              }else {
                var or__3824__auto____13931 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____13931)) {
                  return or__3824__auto____13931
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__13981__delegate = function(x, y, z, args) {
          var or__3824__auto____13932 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____13932)) {
            return or__3824__auto____13932
          }else {
            return cljs.core.some.call(null, function(p1__13662_SHARP_) {
              var or__3824__auto____13933 = p1.call(null, p1__13662_SHARP_);
              if(cljs.core.truth_(or__3824__auto____13933)) {
                return or__3824__auto____13933
              }else {
                return p2.call(null, p1__13662_SHARP_)
              }
            }, args)
          }
        };
        var G__13981 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13981__delegate.call(this, x, y, z, args)
        };
        G__13981.cljs$lang$maxFixedArity = 3;
        G__13981.cljs$lang$applyTo = function(arglist__13982) {
          var x = cljs.core.first(arglist__13982);
          var y = cljs.core.first(cljs.core.next(arglist__13982));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13982)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13982)));
          return G__13981__delegate(x, y, z, args)
        };
        G__13981.cljs$lang$arity$variadic = G__13981__delegate;
        return G__13981
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____13952 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13952)) {
          return or__3824__auto____13952
        }else {
          var or__3824__auto____13953 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____13953)) {
            return or__3824__auto____13953
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____13954 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13954)) {
          return or__3824__auto____13954
        }else {
          var or__3824__auto____13955 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____13955)) {
            return or__3824__auto____13955
          }else {
            var or__3824__auto____13956 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____13956)) {
              return or__3824__auto____13956
            }else {
              var or__3824__auto____13957 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____13957)) {
                return or__3824__auto____13957
              }else {
                var or__3824__auto____13958 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____13958)) {
                  return or__3824__auto____13958
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____13959 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13959)) {
          return or__3824__auto____13959
        }else {
          var or__3824__auto____13960 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____13960)) {
            return or__3824__auto____13960
          }else {
            var or__3824__auto____13961 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____13961)) {
              return or__3824__auto____13961
            }else {
              var or__3824__auto____13962 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____13962)) {
                return or__3824__auto____13962
              }else {
                var or__3824__auto____13963 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____13963)) {
                  return or__3824__auto____13963
                }else {
                  var or__3824__auto____13964 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____13964)) {
                    return or__3824__auto____13964
                  }else {
                    var or__3824__auto____13965 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____13965)) {
                      return or__3824__auto____13965
                    }else {
                      var or__3824__auto____13966 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____13966)) {
                        return or__3824__auto____13966
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__13983__delegate = function(x, y, z, args) {
          var or__3824__auto____13967 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____13967)) {
            return or__3824__auto____13967
          }else {
            return cljs.core.some.call(null, function(p1__13663_SHARP_) {
              var or__3824__auto____13968 = p1.call(null, p1__13663_SHARP_);
              if(cljs.core.truth_(or__3824__auto____13968)) {
                return or__3824__auto____13968
              }else {
                var or__3824__auto____13969 = p2.call(null, p1__13663_SHARP_);
                if(cljs.core.truth_(or__3824__auto____13969)) {
                  return or__3824__auto____13969
                }else {
                  return p3.call(null, p1__13663_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__13983 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13983__delegate.call(this, x, y, z, args)
        };
        G__13983.cljs$lang$maxFixedArity = 3;
        G__13983.cljs$lang$applyTo = function(arglist__13984) {
          var x = cljs.core.first(arglist__13984);
          var y = cljs.core.first(cljs.core.next(arglist__13984));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13984)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13984)));
          return G__13983__delegate(x, y, z, args)
        };
        G__13983.cljs$lang$arity$variadic = G__13983__delegate;
        return G__13983
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__13985__delegate = function(p1, p2, p3, ps) {
      var ps__13970 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__13664_SHARP_) {
            return p1__13664_SHARP_.call(null, x)
          }, ps__13970)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__13665_SHARP_) {
            var or__3824__auto____13975 = p1__13665_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____13975)) {
              return or__3824__auto____13975
            }else {
              return p1__13665_SHARP_.call(null, y)
            }
          }, ps__13970)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__13666_SHARP_) {
            var or__3824__auto____13976 = p1__13666_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____13976)) {
              return or__3824__auto____13976
            }else {
              var or__3824__auto____13977 = p1__13666_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____13977)) {
                return or__3824__auto____13977
              }else {
                return p1__13666_SHARP_.call(null, z)
              }
            }
          }, ps__13970)
        };
        var spn__4 = function() {
          var G__13986__delegate = function(x, y, z, args) {
            var or__3824__auto____13978 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____13978)) {
              return or__3824__auto____13978
            }else {
              return cljs.core.some.call(null, function(p1__13667_SHARP_) {
                return cljs.core.some.call(null, p1__13667_SHARP_, args)
              }, ps__13970)
            }
          };
          var G__13986 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__13986__delegate.call(this, x, y, z, args)
          };
          G__13986.cljs$lang$maxFixedArity = 3;
          G__13986.cljs$lang$applyTo = function(arglist__13987) {
            var x = cljs.core.first(arglist__13987);
            var y = cljs.core.first(cljs.core.next(arglist__13987));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13987)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13987)));
            return G__13986__delegate(x, y, z, args)
          };
          G__13986.cljs$lang$arity$variadic = G__13986__delegate;
          return G__13986
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__13985 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13985__delegate.call(this, p1, p2, p3, ps)
    };
    G__13985.cljs$lang$maxFixedArity = 3;
    G__13985.cljs$lang$applyTo = function(arglist__13988) {
      var p1 = cljs.core.first(arglist__13988);
      var p2 = cljs.core.first(cljs.core.next(arglist__13988));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13988)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13988)));
      return G__13985__delegate(p1, p2, p3, ps)
    };
    G__13985.cljs$lang$arity$variadic = G__13985__delegate;
    return G__13985
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____14007 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____14007) {
        var s__14008 = temp__3974__auto____14007;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__14008)) {
          var c__14009 = cljs.core.chunk_first.call(null, s__14008);
          var size__14010 = cljs.core.count.call(null, c__14009);
          var b__14011 = cljs.core.chunk_buffer.call(null, size__14010);
          var n__2428__auto____14012 = size__14010;
          var i__14013 = 0;
          while(true) {
            if(i__14013 < n__2428__auto____14012) {
              cljs.core.chunk_append.call(null, b__14011, f.call(null, cljs.core._nth.call(null, c__14009, i__14013)));
              var G__14025 = i__14013 + 1;
              i__14013 = G__14025;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14011), map.call(null, f, cljs.core.chunk_rest.call(null, s__14008)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__14008)), map.call(null, f, cljs.core.rest.call(null, s__14008)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__14014 = cljs.core.seq.call(null, c1);
      var s2__14015 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____14016 = s1__14014;
        if(and__3822__auto____14016) {
          return s2__14015
        }else {
          return and__3822__auto____14016
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__14014), cljs.core.first.call(null, s2__14015)), map.call(null, f, cljs.core.rest.call(null, s1__14014), cljs.core.rest.call(null, s2__14015)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__14017 = cljs.core.seq.call(null, c1);
      var s2__14018 = cljs.core.seq.call(null, c2);
      var s3__14019 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____14020 = s1__14017;
        if(and__3822__auto____14020) {
          var and__3822__auto____14021 = s2__14018;
          if(and__3822__auto____14021) {
            return s3__14019
          }else {
            return and__3822__auto____14021
          }
        }else {
          return and__3822__auto____14020
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__14017), cljs.core.first.call(null, s2__14018), cljs.core.first.call(null, s3__14019)), map.call(null, f, cljs.core.rest.call(null, s1__14017), cljs.core.rest.call(null, s2__14018), cljs.core.rest.call(null, s3__14019)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__14026__delegate = function(f, c1, c2, c3, colls) {
      var step__14024 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__14023 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__14023)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__14023), step.call(null, map.call(null, cljs.core.rest, ss__14023)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__13828_SHARP_) {
        return cljs.core.apply.call(null, f, p1__13828_SHARP_)
      }, step__14024.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__14026 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__14026__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__14026.cljs$lang$maxFixedArity = 4;
    G__14026.cljs$lang$applyTo = function(arglist__14027) {
      var f = cljs.core.first(arglist__14027);
      var c1 = cljs.core.first(cljs.core.next(arglist__14027));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14027)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__14027))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__14027))));
      return G__14026__delegate(f, c1, c2, c3, colls)
    };
    G__14026.cljs$lang$arity$variadic = G__14026__delegate;
    return G__14026
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____14030 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____14030) {
        var s__14031 = temp__3974__auto____14030;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__14031), take.call(null, n - 1, cljs.core.rest.call(null, s__14031)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__14037 = function(n, coll) {
    while(true) {
      var s__14035 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____14036 = n > 0;
        if(and__3822__auto____14036) {
          return s__14035
        }else {
          return and__3822__auto____14036
        }
      }())) {
        var G__14038 = n - 1;
        var G__14039 = cljs.core.rest.call(null, s__14035);
        n = G__14038;
        coll = G__14039;
        continue
      }else {
        return s__14035
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__14037.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__14042 = cljs.core.seq.call(null, coll);
  var lead__14043 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__14043) {
      var G__14044 = cljs.core.next.call(null, s__14042);
      var G__14045 = cljs.core.next.call(null, lead__14043);
      s__14042 = G__14044;
      lead__14043 = G__14045;
      continue
    }else {
      return s__14042
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__14051 = function(pred, coll) {
    while(true) {
      var s__14049 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____14050 = s__14049;
        if(and__3822__auto____14050) {
          return pred.call(null, cljs.core.first.call(null, s__14049))
        }else {
          return and__3822__auto____14050
        }
      }())) {
        var G__14052 = pred;
        var G__14053 = cljs.core.rest.call(null, s__14049);
        pred = G__14052;
        coll = G__14053;
        continue
      }else {
        return s__14049
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__14051.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____14056 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____14056) {
      var s__14057 = temp__3974__auto____14056;
      return cljs.core.concat.call(null, s__14057, cycle.call(null, s__14057))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__14062 = cljs.core.seq.call(null, c1);
      var s2__14063 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____14064 = s1__14062;
        if(and__3822__auto____14064) {
          return s2__14063
        }else {
          return and__3822__auto____14064
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__14062), cljs.core.cons.call(null, cljs.core.first.call(null, s2__14063), interleave.call(null, cljs.core.rest.call(null, s1__14062), cljs.core.rest.call(null, s2__14063))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__14066__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__14065 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__14065)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__14065), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__14065)))
        }else {
          return null
        }
      }, null)
    };
    var G__14066 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14066__delegate.call(this, c1, c2, colls)
    };
    G__14066.cljs$lang$maxFixedArity = 2;
    G__14066.cljs$lang$applyTo = function(arglist__14067) {
      var c1 = cljs.core.first(arglist__14067);
      var c2 = cljs.core.first(cljs.core.next(arglist__14067));
      var colls = cljs.core.rest(cljs.core.next(arglist__14067));
      return G__14066__delegate(c1, c2, colls)
    };
    G__14066.cljs$lang$arity$variadic = G__14066__delegate;
    return G__14066
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__14077 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____14075 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____14075) {
        var coll__14076 = temp__3971__auto____14075;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__14076), cat.call(null, cljs.core.rest.call(null, coll__14076), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__14077.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__14078__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__14078 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14078__delegate.call(this, f, coll, colls)
    };
    G__14078.cljs$lang$maxFixedArity = 2;
    G__14078.cljs$lang$applyTo = function(arglist__14079) {
      var f = cljs.core.first(arglist__14079);
      var coll = cljs.core.first(cljs.core.next(arglist__14079));
      var colls = cljs.core.rest(cljs.core.next(arglist__14079));
      return G__14078__delegate(f, coll, colls)
    };
    G__14078.cljs$lang$arity$variadic = G__14078__delegate;
    return G__14078
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____14089 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____14089) {
      var s__14090 = temp__3974__auto____14089;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__14090)) {
        var c__14091 = cljs.core.chunk_first.call(null, s__14090);
        var size__14092 = cljs.core.count.call(null, c__14091);
        var b__14093 = cljs.core.chunk_buffer.call(null, size__14092);
        var n__2428__auto____14094 = size__14092;
        var i__14095 = 0;
        while(true) {
          if(i__14095 < n__2428__auto____14094) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__14091, i__14095)))) {
              cljs.core.chunk_append.call(null, b__14093, cljs.core._nth.call(null, c__14091, i__14095))
            }else {
            }
            var G__14098 = i__14095 + 1;
            i__14095 = G__14098;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14093), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__14090)))
      }else {
        var f__14096 = cljs.core.first.call(null, s__14090);
        var r__14097 = cljs.core.rest.call(null, s__14090);
        if(cljs.core.truth_(pred.call(null, f__14096))) {
          return cljs.core.cons.call(null, f__14096, filter.call(null, pred, r__14097))
        }else {
          return filter.call(null, pred, r__14097)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__14101 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__14101.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__14099_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__14099_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__14105__14106 = to;
    if(G__14105__14106) {
      if(function() {
        var or__3824__auto____14107 = G__14105__14106.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____14107) {
          return or__3824__auto____14107
        }else {
          return G__14105__14106.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__14105__14106.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__14105__14106)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__14105__14106)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__14108__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__14108 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__14108__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__14108.cljs$lang$maxFixedArity = 4;
    G__14108.cljs$lang$applyTo = function(arglist__14109) {
      var f = cljs.core.first(arglist__14109);
      var c1 = cljs.core.first(cljs.core.next(arglist__14109));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14109)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__14109))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__14109))));
      return G__14108__delegate(f, c1, c2, c3, colls)
    };
    G__14108.cljs$lang$arity$variadic = G__14108__delegate;
    return G__14108
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____14116 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____14116) {
        var s__14117 = temp__3974__auto____14116;
        var p__14118 = cljs.core.take.call(null, n, s__14117);
        if(n === cljs.core.count.call(null, p__14118)) {
          return cljs.core.cons.call(null, p__14118, partition.call(null, n, step, cljs.core.drop.call(null, step, s__14117)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____14119 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____14119) {
        var s__14120 = temp__3974__auto____14119;
        var p__14121 = cljs.core.take.call(null, n, s__14120);
        if(n === cljs.core.count.call(null, p__14121)) {
          return cljs.core.cons.call(null, p__14121, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__14120)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__14121, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__14126 = cljs.core.lookup_sentinel;
    var m__14127 = m;
    var ks__14128 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__14128) {
        var m__14129 = cljs.core._lookup.call(null, m__14127, cljs.core.first.call(null, ks__14128), sentinel__14126);
        if(sentinel__14126 === m__14129) {
          return not_found
        }else {
          var G__14130 = sentinel__14126;
          var G__14131 = m__14129;
          var G__14132 = cljs.core.next.call(null, ks__14128);
          sentinel__14126 = G__14130;
          m__14127 = G__14131;
          ks__14128 = G__14132;
          continue
        }
      }else {
        return m__14127
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__14133, v) {
  var vec__14138__14139 = p__14133;
  var k__14140 = cljs.core.nth.call(null, vec__14138__14139, 0, null);
  var ks__14141 = cljs.core.nthnext.call(null, vec__14138__14139, 1);
  if(cljs.core.truth_(ks__14141)) {
    return cljs.core.assoc.call(null, m, k__14140, assoc_in.call(null, cljs.core._lookup.call(null, m, k__14140, null), ks__14141, v))
  }else {
    return cljs.core.assoc.call(null, m, k__14140, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__14142, f, args) {
    var vec__14147__14148 = p__14142;
    var k__14149 = cljs.core.nth.call(null, vec__14147__14148, 0, null);
    var ks__14150 = cljs.core.nthnext.call(null, vec__14147__14148, 1);
    if(cljs.core.truth_(ks__14150)) {
      return cljs.core.assoc.call(null, m, k__14149, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__14149, null), ks__14150, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__14149, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__14149, null), args))
    }
  };
  var update_in = function(m, p__14142, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__14142, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__14151) {
    var m = cljs.core.first(arglist__14151);
    var p__14142 = cljs.core.first(cljs.core.next(arglist__14151));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14151)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__14151)));
    return update_in__delegate(m, p__14142, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14154 = this;
  var h__2093__auto____14155 = this__14154.__hash;
  if(!(h__2093__auto____14155 == null)) {
    return h__2093__auto____14155
  }else {
    var h__2093__auto____14156 = cljs.core.hash_coll.call(null, coll);
    this__14154.__hash = h__2093__auto____14156;
    return h__2093__auto____14156
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__14157 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__14158 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__14159 = this;
  var new_array__14160 = this__14159.array.slice();
  new_array__14160[k] = v;
  return new cljs.core.Vector(this__14159.meta, new_array__14160, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__14191 = null;
  var G__14191__2 = function(this_sym14161, k) {
    var this__14163 = this;
    var this_sym14161__14164 = this;
    var coll__14165 = this_sym14161__14164;
    return coll__14165.cljs$core$ILookup$_lookup$arity$2(coll__14165, k)
  };
  var G__14191__3 = function(this_sym14162, k, not_found) {
    var this__14163 = this;
    var this_sym14162__14166 = this;
    var coll__14167 = this_sym14162__14166;
    return coll__14167.cljs$core$ILookup$_lookup$arity$3(coll__14167, k, not_found)
  };
  G__14191 = function(this_sym14162, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14191__2.call(this, this_sym14162, k);
      case 3:
        return G__14191__3.call(this, this_sym14162, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14191
}();
cljs.core.Vector.prototype.apply = function(this_sym14152, args14153) {
  var this__14168 = this;
  return this_sym14152.call.apply(this_sym14152, [this_sym14152].concat(args14153.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14169 = this;
  var new_array__14170 = this__14169.array.slice();
  new_array__14170.push(o);
  return new cljs.core.Vector(this__14169.meta, new_array__14170, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__14171 = this;
  var this__14172 = this;
  return cljs.core.pr_str.call(null, this__14172)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__14173 = this;
  return cljs.core.ci_reduce.call(null, this__14173.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__14174 = this;
  return cljs.core.ci_reduce.call(null, this__14174.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14175 = this;
  if(this__14175.array.length > 0) {
    var vector_seq__14176 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__14175.array.length) {
          return cljs.core.cons.call(null, this__14175.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__14176.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14177 = this;
  return this__14177.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__14178 = this;
  var count__14179 = this__14178.array.length;
  if(count__14179 > 0) {
    return this__14178.array[count__14179 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__14180 = this;
  if(this__14180.array.length > 0) {
    var new_array__14181 = this__14180.array.slice();
    new_array__14181.pop();
    return new cljs.core.Vector(this__14180.meta, new_array__14181, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__14182 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14183 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14184 = this;
  return new cljs.core.Vector(meta, this__14184.array, this__14184.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14185 = this;
  return this__14185.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__14186 = this;
  if(function() {
    var and__3822__auto____14187 = 0 <= n;
    if(and__3822__auto____14187) {
      return n < this__14186.array.length
    }else {
      return and__3822__auto____14187
    }
  }()) {
    return this__14186.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__14188 = this;
  if(function() {
    var and__3822__auto____14189 = 0 <= n;
    if(and__3822__auto____14189) {
      return n < this__14188.array.length
    }else {
      return and__3822__auto____14189
    }
  }()) {
    return this__14188.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14190 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__14190.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2211__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__14193 = pv.cnt;
  if(cnt__14193 < 32) {
    return 0
  }else {
    return cnt__14193 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__14199 = level;
  var ret__14200 = node;
  while(true) {
    if(ll__14199 === 0) {
      return ret__14200
    }else {
      var embed__14201 = ret__14200;
      var r__14202 = cljs.core.pv_fresh_node.call(null, edit);
      var ___14203 = cljs.core.pv_aset.call(null, r__14202, 0, embed__14201);
      var G__14204 = ll__14199 - 5;
      var G__14205 = r__14202;
      ll__14199 = G__14204;
      ret__14200 = G__14205;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__14211 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__14212 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__14211, subidx__14212, tailnode);
    return ret__14211
  }else {
    var child__14213 = cljs.core.pv_aget.call(null, parent, subidx__14212);
    if(!(child__14213 == null)) {
      var node_to_insert__14214 = push_tail.call(null, pv, level - 5, child__14213, tailnode);
      cljs.core.pv_aset.call(null, ret__14211, subidx__14212, node_to_insert__14214);
      return ret__14211
    }else {
      var node_to_insert__14215 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__14211, subidx__14212, node_to_insert__14215);
      return ret__14211
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____14219 = 0 <= i;
    if(and__3822__auto____14219) {
      return i < pv.cnt
    }else {
      return and__3822__auto____14219
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__14220 = pv.root;
      var level__14221 = pv.shift;
      while(true) {
        if(level__14221 > 0) {
          var G__14222 = cljs.core.pv_aget.call(null, node__14220, i >>> level__14221 & 31);
          var G__14223 = level__14221 - 5;
          node__14220 = G__14222;
          level__14221 = G__14223;
          continue
        }else {
          return node__14220.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__14226 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__14226, i & 31, val);
    return ret__14226
  }else {
    var subidx__14227 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__14226, subidx__14227, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__14227), i, val));
    return ret__14226
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__14233 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__14234 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__14233));
    if(function() {
      var and__3822__auto____14235 = new_child__14234 == null;
      if(and__3822__auto____14235) {
        return subidx__14233 === 0
      }else {
        return and__3822__auto____14235
      }
    }()) {
      return null
    }else {
      var ret__14236 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__14236, subidx__14233, new_child__14234);
      return ret__14236
    }
  }else {
    if(subidx__14233 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__14237 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__14237, subidx__14233, null);
        return ret__14237
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__14240 = this;
  return new cljs.core.TransientVector(this__14240.cnt, this__14240.shift, cljs.core.tv_editable_root.call(null, this__14240.root), cljs.core.tv_editable_tail.call(null, this__14240.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14241 = this;
  var h__2093__auto____14242 = this__14241.__hash;
  if(!(h__2093__auto____14242 == null)) {
    return h__2093__auto____14242
  }else {
    var h__2093__auto____14243 = cljs.core.hash_coll.call(null, coll);
    this__14241.__hash = h__2093__auto____14243;
    return h__2093__auto____14243
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__14244 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__14245 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__14246 = this;
  if(function() {
    var and__3822__auto____14247 = 0 <= k;
    if(and__3822__auto____14247) {
      return k < this__14246.cnt
    }else {
      return and__3822__auto____14247
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__14248 = this__14246.tail.slice();
      new_tail__14248[k & 31] = v;
      return new cljs.core.PersistentVector(this__14246.meta, this__14246.cnt, this__14246.shift, this__14246.root, new_tail__14248, null)
    }else {
      return new cljs.core.PersistentVector(this__14246.meta, this__14246.cnt, this__14246.shift, cljs.core.do_assoc.call(null, coll, this__14246.shift, this__14246.root, k, v), this__14246.tail, null)
    }
  }else {
    if(k === this__14246.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__14246.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__14296 = null;
  var G__14296__2 = function(this_sym14249, k) {
    var this__14251 = this;
    var this_sym14249__14252 = this;
    var coll__14253 = this_sym14249__14252;
    return coll__14253.cljs$core$ILookup$_lookup$arity$2(coll__14253, k)
  };
  var G__14296__3 = function(this_sym14250, k, not_found) {
    var this__14251 = this;
    var this_sym14250__14254 = this;
    var coll__14255 = this_sym14250__14254;
    return coll__14255.cljs$core$ILookup$_lookup$arity$3(coll__14255, k, not_found)
  };
  G__14296 = function(this_sym14250, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14296__2.call(this, this_sym14250, k);
      case 3:
        return G__14296__3.call(this, this_sym14250, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14296
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym14238, args14239) {
  var this__14256 = this;
  return this_sym14238.call.apply(this_sym14238, [this_sym14238].concat(args14239.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__14257 = this;
  var step_init__14258 = [0, init];
  var i__14259 = 0;
  while(true) {
    if(i__14259 < this__14257.cnt) {
      var arr__14260 = cljs.core.array_for.call(null, v, i__14259);
      var len__14261 = arr__14260.length;
      var init__14265 = function() {
        var j__14262 = 0;
        var init__14263 = step_init__14258[1];
        while(true) {
          if(j__14262 < len__14261) {
            var init__14264 = f.call(null, init__14263, j__14262 + i__14259, arr__14260[j__14262]);
            if(cljs.core.reduced_QMARK_.call(null, init__14264)) {
              return init__14264
            }else {
              var G__14297 = j__14262 + 1;
              var G__14298 = init__14264;
              j__14262 = G__14297;
              init__14263 = G__14298;
              continue
            }
          }else {
            step_init__14258[0] = len__14261;
            step_init__14258[1] = init__14263;
            return init__14263
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__14265)) {
        return cljs.core.deref.call(null, init__14265)
      }else {
        var G__14299 = i__14259 + step_init__14258[0];
        i__14259 = G__14299;
        continue
      }
    }else {
      return step_init__14258[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14266 = this;
  if(this__14266.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__14267 = this__14266.tail.slice();
    new_tail__14267.push(o);
    return new cljs.core.PersistentVector(this__14266.meta, this__14266.cnt + 1, this__14266.shift, this__14266.root, new_tail__14267, null)
  }else {
    var root_overflow_QMARK___14268 = this__14266.cnt >>> 5 > 1 << this__14266.shift;
    var new_shift__14269 = root_overflow_QMARK___14268 ? this__14266.shift + 5 : this__14266.shift;
    var new_root__14271 = root_overflow_QMARK___14268 ? function() {
      var n_r__14270 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__14270, 0, this__14266.root);
      cljs.core.pv_aset.call(null, n_r__14270, 1, cljs.core.new_path.call(null, null, this__14266.shift, new cljs.core.VectorNode(null, this__14266.tail)));
      return n_r__14270
    }() : cljs.core.push_tail.call(null, coll, this__14266.shift, this__14266.root, new cljs.core.VectorNode(null, this__14266.tail));
    return new cljs.core.PersistentVector(this__14266.meta, this__14266.cnt + 1, new_shift__14269, new_root__14271, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__14272 = this;
  if(this__14272.cnt > 0) {
    return new cljs.core.RSeq(coll, this__14272.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__14273 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__14274 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__14275 = this;
  var this__14276 = this;
  return cljs.core.pr_str.call(null, this__14276)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__14277 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__14278 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14279 = this;
  if(this__14279.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14280 = this;
  return this__14280.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__14281 = this;
  if(this__14281.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__14281.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__14282 = this;
  if(this__14282.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__14282.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__14282.meta)
    }else {
      if(1 < this__14282.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__14282.meta, this__14282.cnt - 1, this__14282.shift, this__14282.root, this__14282.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__14283 = cljs.core.array_for.call(null, coll, this__14282.cnt - 2);
          var nr__14284 = cljs.core.pop_tail.call(null, coll, this__14282.shift, this__14282.root);
          var new_root__14285 = nr__14284 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__14284;
          var cnt_1__14286 = this__14282.cnt - 1;
          if(function() {
            var and__3822__auto____14287 = 5 < this__14282.shift;
            if(and__3822__auto____14287) {
              return cljs.core.pv_aget.call(null, new_root__14285, 1) == null
            }else {
              return and__3822__auto____14287
            }
          }()) {
            return new cljs.core.PersistentVector(this__14282.meta, cnt_1__14286, this__14282.shift - 5, cljs.core.pv_aget.call(null, new_root__14285, 0), new_tail__14283, null)
          }else {
            return new cljs.core.PersistentVector(this__14282.meta, cnt_1__14286, this__14282.shift, new_root__14285, new_tail__14283, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__14288 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14289 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14290 = this;
  return new cljs.core.PersistentVector(meta, this__14290.cnt, this__14290.shift, this__14290.root, this__14290.tail, this__14290.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14291 = this;
  return this__14291.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__14292 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__14293 = this;
  if(function() {
    var and__3822__auto____14294 = 0 <= n;
    if(and__3822__auto____14294) {
      return n < this__14293.cnt
    }else {
      return and__3822__auto____14294
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14295 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__14295.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__14300 = xs.length;
  var xs__14301 = no_clone === true ? xs : xs.slice();
  if(l__14300 < 32) {
    return new cljs.core.PersistentVector(null, l__14300, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__14301, null)
  }else {
    var node__14302 = xs__14301.slice(0, 32);
    var v__14303 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__14302, null);
    var i__14304 = 32;
    var out__14305 = cljs.core._as_transient.call(null, v__14303);
    while(true) {
      if(i__14304 < l__14300) {
        var G__14306 = i__14304 + 1;
        var G__14307 = cljs.core.conj_BANG_.call(null, out__14305, xs__14301[i__14304]);
        i__14304 = G__14306;
        out__14305 = G__14307;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__14305)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__14308) {
    var args = cljs.core.seq(arglist__14308);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__14309 = this;
  if(this__14309.off + 1 < this__14309.node.length) {
    var s__14310 = cljs.core.chunked_seq.call(null, this__14309.vec, this__14309.node, this__14309.i, this__14309.off + 1);
    if(s__14310 == null) {
      return null
    }else {
      return s__14310
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14311 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14312 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__14313 = this;
  return this__14313.node[this__14313.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__14314 = this;
  if(this__14314.off + 1 < this__14314.node.length) {
    var s__14315 = cljs.core.chunked_seq.call(null, this__14314.vec, this__14314.node, this__14314.i, this__14314.off + 1);
    if(s__14315 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__14315
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__14316 = this;
  var l__14317 = this__14316.node.length;
  var s__14318 = this__14316.i + l__14317 < cljs.core._count.call(null, this__14316.vec) ? cljs.core.chunked_seq.call(null, this__14316.vec, this__14316.i + l__14317, 0) : null;
  if(s__14318 == null) {
    return null
  }else {
    return s__14318
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14319 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__14320 = this;
  return cljs.core.chunked_seq.call(null, this__14320.vec, this__14320.node, this__14320.i, this__14320.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__14321 = this;
  return this__14321.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14322 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__14322.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__14323 = this;
  return cljs.core.array_chunk.call(null, this__14323.node, this__14323.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__14324 = this;
  var l__14325 = this__14324.node.length;
  var s__14326 = this__14324.i + l__14325 < cljs.core._count.call(null, this__14324.vec) ? cljs.core.chunked_seq.call(null, this__14324.vec, this__14324.i + l__14325, 0) : null;
  if(s__14326 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__14326
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14329 = this;
  var h__2093__auto____14330 = this__14329.__hash;
  if(!(h__2093__auto____14330 == null)) {
    return h__2093__auto____14330
  }else {
    var h__2093__auto____14331 = cljs.core.hash_coll.call(null, coll);
    this__14329.__hash = h__2093__auto____14331;
    return h__2093__auto____14331
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__14332 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__14333 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__14334 = this;
  var v_pos__14335 = this__14334.start + key;
  return new cljs.core.Subvec(this__14334.meta, cljs.core._assoc.call(null, this__14334.v, v_pos__14335, val), this__14334.start, this__14334.end > v_pos__14335 + 1 ? this__14334.end : v_pos__14335 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__14361 = null;
  var G__14361__2 = function(this_sym14336, k) {
    var this__14338 = this;
    var this_sym14336__14339 = this;
    var coll__14340 = this_sym14336__14339;
    return coll__14340.cljs$core$ILookup$_lookup$arity$2(coll__14340, k)
  };
  var G__14361__3 = function(this_sym14337, k, not_found) {
    var this__14338 = this;
    var this_sym14337__14341 = this;
    var coll__14342 = this_sym14337__14341;
    return coll__14342.cljs$core$ILookup$_lookup$arity$3(coll__14342, k, not_found)
  };
  G__14361 = function(this_sym14337, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14361__2.call(this, this_sym14337, k);
      case 3:
        return G__14361__3.call(this, this_sym14337, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14361
}();
cljs.core.Subvec.prototype.apply = function(this_sym14327, args14328) {
  var this__14343 = this;
  return this_sym14327.call.apply(this_sym14327, [this_sym14327].concat(args14328.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14344 = this;
  return new cljs.core.Subvec(this__14344.meta, cljs.core._assoc_n.call(null, this__14344.v, this__14344.end, o), this__14344.start, this__14344.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__14345 = this;
  var this__14346 = this;
  return cljs.core.pr_str.call(null, this__14346)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__14347 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__14348 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14349 = this;
  var subvec_seq__14350 = function subvec_seq(i) {
    if(i === this__14349.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__14349.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__14350.call(null, this__14349.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14351 = this;
  return this__14351.end - this__14351.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__14352 = this;
  return cljs.core._nth.call(null, this__14352.v, this__14352.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__14353 = this;
  if(this__14353.start === this__14353.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__14353.meta, this__14353.v, this__14353.start, this__14353.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__14354 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14355 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14356 = this;
  return new cljs.core.Subvec(meta, this__14356.v, this__14356.start, this__14356.end, this__14356.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14357 = this;
  return this__14357.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__14358 = this;
  return cljs.core._nth.call(null, this__14358.v, this__14358.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__14359 = this;
  return cljs.core._nth.call(null, this__14359.v, this__14359.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14360 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__14360.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__14363 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__14363, 0, tl.length);
  return ret__14363
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__14367 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__14368 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__14367, subidx__14368, level === 5 ? tail_node : function() {
    var child__14369 = cljs.core.pv_aget.call(null, ret__14367, subidx__14368);
    if(!(child__14369 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__14369, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__14367
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__14374 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__14375 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__14376 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__14374, subidx__14375));
    if(function() {
      var and__3822__auto____14377 = new_child__14376 == null;
      if(and__3822__auto____14377) {
        return subidx__14375 === 0
      }else {
        return and__3822__auto____14377
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__14374, subidx__14375, new_child__14376);
      return node__14374
    }
  }else {
    if(subidx__14375 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__14374, subidx__14375, null);
        return node__14374
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____14382 = 0 <= i;
    if(and__3822__auto____14382) {
      return i < tv.cnt
    }else {
      return and__3822__auto____14382
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__14383 = tv.root;
      var node__14384 = root__14383;
      var level__14385 = tv.shift;
      while(true) {
        if(level__14385 > 0) {
          var G__14386 = cljs.core.tv_ensure_editable.call(null, root__14383.edit, cljs.core.pv_aget.call(null, node__14384, i >>> level__14385 & 31));
          var G__14387 = level__14385 - 5;
          node__14384 = G__14386;
          level__14385 = G__14387;
          continue
        }else {
          return node__14384.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__14427 = null;
  var G__14427__2 = function(this_sym14390, k) {
    var this__14392 = this;
    var this_sym14390__14393 = this;
    var coll__14394 = this_sym14390__14393;
    return coll__14394.cljs$core$ILookup$_lookup$arity$2(coll__14394, k)
  };
  var G__14427__3 = function(this_sym14391, k, not_found) {
    var this__14392 = this;
    var this_sym14391__14395 = this;
    var coll__14396 = this_sym14391__14395;
    return coll__14396.cljs$core$ILookup$_lookup$arity$3(coll__14396, k, not_found)
  };
  G__14427 = function(this_sym14391, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14427__2.call(this, this_sym14391, k);
      case 3:
        return G__14427__3.call(this, this_sym14391, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14427
}();
cljs.core.TransientVector.prototype.apply = function(this_sym14388, args14389) {
  var this__14397 = this;
  return this_sym14388.call.apply(this_sym14388, [this_sym14388].concat(args14389.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__14398 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__14399 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__14400 = this;
  if(this__14400.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__14401 = this;
  if(function() {
    var and__3822__auto____14402 = 0 <= n;
    if(and__3822__auto____14402) {
      return n < this__14401.cnt
    }else {
      return and__3822__auto____14402
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14403 = this;
  if(this__14403.root.edit) {
    return this__14403.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__14404 = this;
  if(this__14404.root.edit) {
    if(function() {
      var and__3822__auto____14405 = 0 <= n;
      if(and__3822__auto____14405) {
        return n < this__14404.cnt
      }else {
        return and__3822__auto____14405
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__14404.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__14410 = function go(level, node) {
          var node__14408 = cljs.core.tv_ensure_editable.call(null, this__14404.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__14408, n & 31, val);
            return node__14408
          }else {
            var subidx__14409 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__14408, subidx__14409, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__14408, subidx__14409)));
            return node__14408
          }
        }.call(null, this__14404.shift, this__14404.root);
        this__14404.root = new_root__14410;
        return tcoll
      }
    }else {
      if(n === this__14404.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__14404.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__14411 = this;
  if(this__14411.root.edit) {
    if(this__14411.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__14411.cnt) {
        this__14411.cnt = 0;
        return tcoll
      }else {
        if((this__14411.cnt - 1 & 31) > 0) {
          this__14411.cnt = this__14411.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__14412 = cljs.core.editable_array_for.call(null, tcoll, this__14411.cnt - 2);
            var new_root__14414 = function() {
              var nr__14413 = cljs.core.tv_pop_tail.call(null, tcoll, this__14411.shift, this__14411.root);
              if(!(nr__14413 == null)) {
                return nr__14413
              }else {
                return new cljs.core.VectorNode(this__14411.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____14415 = 5 < this__14411.shift;
              if(and__3822__auto____14415) {
                return cljs.core.pv_aget.call(null, new_root__14414, 1) == null
              }else {
                return and__3822__auto____14415
              }
            }()) {
              var new_root__14416 = cljs.core.tv_ensure_editable.call(null, this__14411.root.edit, cljs.core.pv_aget.call(null, new_root__14414, 0));
              this__14411.root = new_root__14416;
              this__14411.shift = this__14411.shift - 5;
              this__14411.cnt = this__14411.cnt - 1;
              this__14411.tail = new_tail__14412;
              return tcoll
            }else {
              this__14411.root = new_root__14414;
              this__14411.cnt = this__14411.cnt - 1;
              this__14411.tail = new_tail__14412;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__14417 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__14418 = this;
  if(this__14418.root.edit) {
    if(this__14418.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__14418.tail[this__14418.cnt & 31] = o;
      this__14418.cnt = this__14418.cnt + 1;
      return tcoll
    }else {
      var tail_node__14419 = new cljs.core.VectorNode(this__14418.root.edit, this__14418.tail);
      var new_tail__14420 = cljs.core.make_array.call(null, 32);
      new_tail__14420[0] = o;
      this__14418.tail = new_tail__14420;
      if(this__14418.cnt >>> 5 > 1 << this__14418.shift) {
        var new_root_array__14421 = cljs.core.make_array.call(null, 32);
        var new_shift__14422 = this__14418.shift + 5;
        new_root_array__14421[0] = this__14418.root;
        new_root_array__14421[1] = cljs.core.new_path.call(null, this__14418.root.edit, this__14418.shift, tail_node__14419);
        this__14418.root = new cljs.core.VectorNode(this__14418.root.edit, new_root_array__14421);
        this__14418.shift = new_shift__14422;
        this__14418.cnt = this__14418.cnt + 1;
        return tcoll
      }else {
        var new_root__14423 = cljs.core.tv_push_tail.call(null, tcoll, this__14418.shift, this__14418.root, tail_node__14419);
        this__14418.root = new_root__14423;
        this__14418.cnt = this__14418.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__14424 = this;
  if(this__14424.root.edit) {
    this__14424.root.edit = null;
    var len__14425 = this__14424.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__14426 = cljs.core.make_array.call(null, len__14425);
    cljs.core.array_copy.call(null, this__14424.tail, 0, trimmed_tail__14426, 0, len__14425);
    return new cljs.core.PersistentVector(null, this__14424.cnt, this__14424.shift, this__14424.root, trimmed_tail__14426, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14428 = this;
  var h__2093__auto____14429 = this__14428.__hash;
  if(!(h__2093__auto____14429 == null)) {
    return h__2093__auto____14429
  }else {
    var h__2093__auto____14430 = cljs.core.hash_coll.call(null, coll);
    this__14428.__hash = h__2093__auto____14430;
    return h__2093__auto____14430
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14431 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__14432 = this;
  var this__14433 = this;
  return cljs.core.pr_str.call(null, this__14433)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14434 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__14435 = this;
  return cljs.core._first.call(null, this__14435.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__14436 = this;
  var temp__3971__auto____14437 = cljs.core.next.call(null, this__14436.front);
  if(temp__3971__auto____14437) {
    var f1__14438 = temp__3971__auto____14437;
    return new cljs.core.PersistentQueueSeq(this__14436.meta, f1__14438, this__14436.rear, null)
  }else {
    if(this__14436.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__14436.meta, this__14436.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14439 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14440 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__14440.front, this__14440.rear, this__14440.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14441 = this;
  return this__14441.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14442 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__14442.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14443 = this;
  var h__2093__auto____14444 = this__14443.__hash;
  if(!(h__2093__auto____14444 == null)) {
    return h__2093__auto____14444
  }else {
    var h__2093__auto____14445 = cljs.core.hash_coll.call(null, coll);
    this__14443.__hash = h__2093__auto____14445;
    return h__2093__auto____14445
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14446 = this;
  if(cljs.core.truth_(this__14446.front)) {
    return new cljs.core.PersistentQueue(this__14446.meta, this__14446.count + 1, this__14446.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____14447 = this__14446.rear;
      if(cljs.core.truth_(or__3824__auto____14447)) {
        return or__3824__auto____14447
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__14446.meta, this__14446.count + 1, cljs.core.conj.call(null, this__14446.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__14448 = this;
  var this__14449 = this;
  return cljs.core.pr_str.call(null, this__14449)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14450 = this;
  var rear__14451 = cljs.core.seq.call(null, this__14450.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____14452 = this__14450.front;
    if(cljs.core.truth_(or__3824__auto____14452)) {
      return or__3824__auto____14452
    }else {
      return rear__14451
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__14450.front, cljs.core.seq.call(null, rear__14451), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14453 = this;
  return this__14453.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__14454 = this;
  return cljs.core._first.call(null, this__14454.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__14455 = this;
  if(cljs.core.truth_(this__14455.front)) {
    var temp__3971__auto____14456 = cljs.core.next.call(null, this__14455.front);
    if(temp__3971__auto____14456) {
      var f1__14457 = temp__3971__auto____14456;
      return new cljs.core.PersistentQueue(this__14455.meta, this__14455.count - 1, f1__14457, this__14455.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__14455.meta, this__14455.count - 1, cljs.core.seq.call(null, this__14455.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__14458 = this;
  return cljs.core.first.call(null, this__14458.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__14459 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14460 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14461 = this;
  return new cljs.core.PersistentQueue(meta, this__14461.count, this__14461.front, this__14461.rear, this__14461.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14462 = this;
  return this__14462.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14463 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__14464 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__14467 = array.length;
  var i__14468 = 0;
  while(true) {
    if(i__14468 < len__14467) {
      if(k === array[i__14468]) {
        return i__14468
      }else {
        var G__14469 = i__14468 + incr;
        i__14468 = G__14469;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__14472 = cljs.core.hash.call(null, a);
  var b__14473 = cljs.core.hash.call(null, b);
  if(a__14472 < b__14473) {
    return-1
  }else {
    if(a__14472 > b__14473) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__14481 = m.keys;
  var len__14482 = ks__14481.length;
  var so__14483 = m.strobj;
  var out__14484 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__14485 = 0;
  var out__14486 = cljs.core.transient$.call(null, out__14484);
  while(true) {
    if(i__14485 < len__14482) {
      var k__14487 = ks__14481[i__14485];
      var G__14488 = i__14485 + 1;
      var G__14489 = cljs.core.assoc_BANG_.call(null, out__14486, k__14487, so__14483[k__14487]);
      i__14485 = G__14488;
      out__14486 = G__14489;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__14486, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__14495 = {};
  var l__14496 = ks.length;
  var i__14497 = 0;
  while(true) {
    if(i__14497 < l__14496) {
      var k__14498 = ks[i__14497];
      new_obj__14495[k__14498] = obj[k__14498];
      var G__14499 = i__14497 + 1;
      i__14497 = G__14499;
      continue
    }else {
    }
    break
  }
  return new_obj__14495
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__14502 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14503 = this;
  var h__2093__auto____14504 = this__14503.__hash;
  if(!(h__2093__auto____14504 == null)) {
    return h__2093__auto____14504
  }else {
    var h__2093__auto____14505 = cljs.core.hash_imap.call(null, coll);
    this__14503.__hash = h__2093__auto____14505;
    return h__2093__auto____14505
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__14506 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__14507 = this;
  if(function() {
    var and__3822__auto____14508 = goog.isString(k);
    if(and__3822__auto____14508) {
      return!(cljs.core.scan_array.call(null, 1, k, this__14507.keys) == null)
    }else {
      return and__3822__auto____14508
    }
  }()) {
    return this__14507.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__14509 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____14510 = this__14509.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____14510) {
        return or__3824__auto____14510
      }else {
        return this__14509.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__14509.keys) == null)) {
        var new_strobj__14511 = cljs.core.obj_clone.call(null, this__14509.strobj, this__14509.keys);
        new_strobj__14511[k] = v;
        return new cljs.core.ObjMap(this__14509.meta, this__14509.keys, new_strobj__14511, this__14509.update_count + 1, null)
      }else {
        var new_strobj__14512 = cljs.core.obj_clone.call(null, this__14509.strobj, this__14509.keys);
        var new_keys__14513 = this__14509.keys.slice();
        new_strobj__14512[k] = v;
        new_keys__14513.push(k);
        return new cljs.core.ObjMap(this__14509.meta, new_keys__14513, new_strobj__14512, this__14509.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__14514 = this;
  if(function() {
    var and__3822__auto____14515 = goog.isString(k);
    if(and__3822__auto____14515) {
      return!(cljs.core.scan_array.call(null, 1, k, this__14514.keys) == null)
    }else {
      return and__3822__auto____14515
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__14537 = null;
  var G__14537__2 = function(this_sym14516, k) {
    var this__14518 = this;
    var this_sym14516__14519 = this;
    var coll__14520 = this_sym14516__14519;
    return coll__14520.cljs$core$ILookup$_lookup$arity$2(coll__14520, k)
  };
  var G__14537__3 = function(this_sym14517, k, not_found) {
    var this__14518 = this;
    var this_sym14517__14521 = this;
    var coll__14522 = this_sym14517__14521;
    return coll__14522.cljs$core$ILookup$_lookup$arity$3(coll__14522, k, not_found)
  };
  G__14537 = function(this_sym14517, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14537__2.call(this, this_sym14517, k);
      case 3:
        return G__14537__3.call(this, this_sym14517, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14537
}();
cljs.core.ObjMap.prototype.apply = function(this_sym14500, args14501) {
  var this__14523 = this;
  return this_sym14500.call.apply(this_sym14500, [this_sym14500].concat(args14501.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__14524 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__14525 = this;
  var this__14526 = this;
  return cljs.core.pr_str.call(null, this__14526)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14527 = this;
  if(this__14527.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__14490_SHARP_) {
      return cljs.core.vector.call(null, p1__14490_SHARP_, this__14527.strobj[p1__14490_SHARP_])
    }, this__14527.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14528 = this;
  return this__14528.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14529 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14530 = this;
  return new cljs.core.ObjMap(meta, this__14530.keys, this__14530.strobj, this__14530.update_count, this__14530.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14531 = this;
  return this__14531.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14532 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__14532.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__14533 = this;
  if(function() {
    var and__3822__auto____14534 = goog.isString(k);
    if(and__3822__auto____14534) {
      return!(cljs.core.scan_array.call(null, 1, k, this__14533.keys) == null)
    }else {
      return and__3822__auto____14534
    }
  }()) {
    var new_keys__14535 = this__14533.keys.slice();
    var new_strobj__14536 = cljs.core.obj_clone.call(null, this__14533.strobj, this__14533.keys);
    new_keys__14535.splice(cljs.core.scan_array.call(null, 1, k, new_keys__14535), 1);
    cljs.core.js_delete.call(null, new_strobj__14536, k);
    return new cljs.core.ObjMap(this__14533.meta, new_keys__14535, new_strobj__14536, this__14533.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14541 = this;
  var h__2093__auto____14542 = this__14541.__hash;
  if(!(h__2093__auto____14542 == null)) {
    return h__2093__auto____14542
  }else {
    var h__2093__auto____14543 = cljs.core.hash_imap.call(null, coll);
    this__14541.__hash = h__2093__auto____14543;
    return h__2093__auto____14543
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__14544 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__14545 = this;
  var bucket__14546 = this__14545.hashobj[cljs.core.hash.call(null, k)];
  var i__14547 = cljs.core.truth_(bucket__14546) ? cljs.core.scan_array.call(null, 2, k, bucket__14546) : null;
  if(cljs.core.truth_(i__14547)) {
    return bucket__14546[i__14547 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__14548 = this;
  var h__14549 = cljs.core.hash.call(null, k);
  var bucket__14550 = this__14548.hashobj[h__14549];
  if(cljs.core.truth_(bucket__14550)) {
    var new_bucket__14551 = bucket__14550.slice();
    var new_hashobj__14552 = goog.object.clone(this__14548.hashobj);
    new_hashobj__14552[h__14549] = new_bucket__14551;
    var temp__3971__auto____14553 = cljs.core.scan_array.call(null, 2, k, new_bucket__14551);
    if(cljs.core.truth_(temp__3971__auto____14553)) {
      var i__14554 = temp__3971__auto____14553;
      new_bucket__14551[i__14554 + 1] = v;
      return new cljs.core.HashMap(this__14548.meta, this__14548.count, new_hashobj__14552, null)
    }else {
      new_bucket__14551.push(k, v);
      return new cljs.core.HashMap(this__14548.meta, this__14548.count + 1, new_hashobj__14552, null)
    }
  }else {
    var new_hashobj__14555 = goog.object.clone(this__14548.hashobj);
    new_hashobj__14555[h__14549] = [k, v];
    return new cljs.core.HashMap(this__14548.meta, this__14548.count + 1, new_hashobj__14555, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__14556 = this;
  var bucket__14557 = this__14556.hashobj[cljs.core.hash.call(null, k)];
  var i__14558 = cljs.core.truth_(bucket__14557) ? cljs.core.scan_array.call(null, 2, k, bucket__14557) : null;
  if(cljs.core.truth_(i__14558)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__14583 = null;
  var G__14583__2 = function(this_sym14559, k) {
    var this__14561 = this;
    var this_sym14559__14562 = this;
    var coll__14563 = this_sym14559__14562;
    return coll__14563.cljs$core$ILookup$_lookup$arity$2(coll__14563, k)
  };
  var G__14583__3 = function(this_sym14560, k, not_found) {
    var this__14561 = this;
    var this_sym14560__14564 = this;
    var coll__14565 = this_sym14560__14564;
    return coll__14565.cljs$core$ILookup$_lookup$arity$3(coll__14565, k, not_found)
  };
  G__14583 = function(this_sym14560, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14583__2.call(this, this_sym14560, k);
      case 3:
        return G__14583__3.call(this, this_sym14560, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14583
}();
cljs.core.HashMap.prototype.apply = function(this_sym14539, args14540) {
  var this__14566 = this;
  return this_sym14539.call.apply(this_sym14539, [this_sym14539].concat(args14540.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__14567 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__14568 = this;
  var this__14569 = this;
  return cljs.core.pr_str.call(null, this__14569)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14570 = this;
  if(this__14570.count > 0) {
    var hashes__14571 = cljs.core.js_keys.call(null, this__14570.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__14538_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__14570.hashobj[p1__14538_SHARP_]))
    }, hashes__14571)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14572 = this;
  return this__14572.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14573 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14574 = this;
  return new cljs.core.HashMap(meta, this__14574.count, this__14574.hashobj, this__14574.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14575 = this;
  return this__14575.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14576 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__14576.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__14577 = this;
  var h__14578 = cljs.core.hash.call(null, k);
  var bucket__14579 = this__14577.hashobj[h__14578];
  var i__14580 = cljs.core.truth_(bucket__14579) ? cljs.core.scan_array.call(null, 2, k, bucket__14579) : null;
  if(cljs.core.not.call(null, i__14580)) {
    return coll
  }else {
    var new_hashobj__14581 = goog.object.clone(this__14577.hashobj);
    if(3 > bucket__14579.length) {
      cljs.core.js_delete.call(null, new_hashobj__14581, h__14578)
    }else {
      var new_bucket__14582 = bucket__14579.slice();
      new_bucket__14582.splice(i__14580, 2);
      new_hashobj__14581[h__14578] = new_bucket__14582
    }
    return new cljs.core.HashMap(this__14577.meta, this__14577.count - 1, new_hashobj__14581, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__14584 = ks.length;
  var i__14585 = 0;
  var out__14586 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__14585 < len__14584) {
      var G__14587 = i__14585 + 1;
      var G__14588 = cljs.core.assoc.call(null, out__14586, ks[i__14585], vs[i__14585]);
      i__14585 = G__14587;
      out__14586 = G__14588;
      continue
    }else {
      return out__14586
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__14592 = m.arr;
  var len__14593 = arr__14592.length;
  var i__14594 = 0;
  while(true) {
    if(len__14593 <= i__14594) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__14592[i__14594], k)) {
        return i__14594
      }else {
        if("\ufdd0'else") {
          var G__14595 = i__14594 + 2;
          i__14594 = G__14595;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__14598 = this;
  return new cljs.core.TransientArrayMap({}, this__14598.arr.length, this__14598.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14599 = this;
  var h__2093__auto____14600 = this__14599.__hash;
  if(!(h__2093__auto____14600 == null)) {
    return h__2093__auto____14600
  }else {
    var h__2093__auto____14601 = cljs.core.hash_imap.call(null, coll);
    this__14599.__hash = h__2093__auto____14601;
    return h__2093__auto____14601
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__14602 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__14603 = this;
  var idx__14604 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__14604 === -1) {
    return not_found
  }else {
    return this__14603.arr[idx__14604 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__14605 = this;
  var idx__14606 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__14606 === -1) {
    if(this__14605.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__14605.meta, this__14605.cnt + 1, function() {
        var G__14607__14608 = this__14605.arr.slice();
        G__14607__14608.push(k);
        G__14607__14608.push(v);
        return G__14607__14608
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__14605.arr[idx__14606 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__14605.meta, this__14605.cnt, function() {
          var G__14609__14610 = this__14605.arr.slice();
          G__14609__14610[idx__14606 + 1] = v;
          return G__14609__14610
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__14611 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__14643 = null;
  var G__14643__2 = function(this_sym14612, k) {
    var this__14614 = this;
    var this_sym14612__14615 = this;
    var coll__14616 = this_sym14612__14615;
    return coll__14616.cljs$core$ILookup$_lookup$arity$2(coll__14616, k)
  };
  var G__14643__3 = function(this_sym14613, k, not_found) {
    var this__14614 = this;
    var this_sym14613__14617 = this;
    var coll__14618 = this_sym14613__14617;
    return coll__14618.cljs$core$ILookup$_lookup$arity$3(coll__14618, k, not_found)
  };
  G__14643 = function(this_sym14613, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14643__2.call(this, this_sym14613, k);
      case 3:
        return G__14643__3.call(this, this_sym14613, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14643
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym14596, args14597) {
  var this__14619 = this;
  return this_sym14596.call.apply(this_sym14596, [this_sym14596].concat(args14597.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__14620 = this;
  var len__14621 = this__14620.arr.length;
  var i__14622 = 0;
  var init__14623 = init;
  while(true) {
    if(i__14622 < len__14621) {
      var init__14624 = f.call(null, init__14623, this__14620.arr[i__14622], this__14620.arr[i__14622 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__14624)) {
        return cljs.core.deref.call(null, init__14624)
      }else {
        var G__14644 = i__14622 + 2;
        var G__14645 = init__14624;
        i__14622 = G__14644;
        init__14623 = G__14645;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__14625 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__14626 = this;
  var this__14627 = this;
  return cljs.core.pr_str.call(null, this__14627)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14628 = this;
  if(this__14628.cnt > 0) {
    var len__14629 = this__14628.arr.length;
    var array_map_seq__14630 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__14629) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__14628.arr[i], this__14628.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__14630.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14631 = this;
  return this__14631.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14632 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14633 = this;
  return new cljs.core.PersistentArrayMap(meta, this__14633.cnt, this__14633.arr, this__14633.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14634 = this;
  return this__14634.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14635 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__14635.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__14636 = this;
  var idx__14637 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__14637 >= 0) {
    var len__14638 = this__14636.arr.length;
    var new_len__14639 = len__14638 - 2;
    if(new_len__14639 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__14640 = cljs.core.make_array.call(null, new_len__14639);
      var s__14641 = 0;
      var d__14642 = 0;
      while(true) {
        if(s__14641 >= len__14638) {
          return new cljs.core.PersistentArrayMap(this__14636.meta, this__14636.cnt - 1, new_arr__14640, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__14636.arr[s__14641])) {
            var G__14646 = s__14641 + 2;
            var G__14647 = d__14642;
            s__14641 = G__14646;
            d__14642 = G__14647;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__14640[d__14642] = this__14636.arr[s__14641];
              new_arr__14640[d__14642 + 1] = this__14636.arr[s__14641 + 1];
              var G__14648 = s__14641 + 2;
              var G__14649 = d__14642 + 2;
              s__14641 = G__14648;
              d__14642 = G__14649;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__14650 = cljs.core.count.call(null, ks);
  var i__14651 = 0;
  var out__14652 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__14651 < len__14650) {
      var G__14653 = i__14651 + 1;
      var G__14654 = cljs.core.assoc_BANG_.call(null, out__14652, ks[i__14651], vs[i__14651]);
      i__14651 = G__14653;
      out__14652 = G__14654;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__14652)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__14655 = this;
  if(cljs.core.truth_(this__14655.editable_QMARK_)) {
    var idx__14656 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__14656 >= 0) {
      this__14655.arr[idx__14656] = this__14655.arr[this__14655.len - 2];
      this__14655.arr[idx__14656 + 1] = this__14655.arr[this__14655.len - 1];
      var G__14657__14658 = this__14655.arr;
      G__14657__14658.pop();
      G__14657__14658.pop();
      G__14657__14658;
      this__14655.len = this__14655.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__14659 = this;
  if(cljs.core.truth_(this__14659.editable_QMARK_)) {
    var idx__14660 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__14660 === -1) {
      if(this__14659.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__14659.len = this__14659.len + 2;
        this__14659.arr.push(key);
        this__14659.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__14659.len, this__14659.arr), key, val)
      }
    }else {
      if(val === this__14659.arr[idx__14660 + 1]) {
        return tcoll
      }else {
        this__14659.arr[idx__14660 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__14661 = this;
  if(cljs.core.truth_(this__14661.editable_QMARK_)) {
    if(function() {
      var G__14662__14663 = o;
      if(G__14662__14663) {
        if(function() {
          var or__3824__auto____14664 = G__14662__14663.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____14664) {
            return or__3824__auto____14664
          }else {
            return G__14662__14663.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__14662__14663.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__14662__14663)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__14662__14663)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__14665 = cljs.core.seq.call(null, o);
      var tcoll__14666 = tcoll;
      while(true) {
        var temp__3971__auto____14667 = cljs.core.first.call(null, es__14665);
        if(cljs.core.truth_(temp__3971__auto____14667)) {
          var e__14668 = temp__3971__auto____14667;
          var G__14674 = cljs.core.next.call(null, es__14665);
          var G__14675 = tcoll__14666.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__14666, cljs.core.key.call(null, e__14668), cljs.core.val.call(null, e__14668));
          es__14665 = G__14674;
          tcoll__14666 = G__14675;
          continue
        }else {
          return tcoll__14666
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__14669 = this;
  if(cljs.core.truth_(this__14669.editable_QMARK_)) {
    this__14669.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__14669.len, 2), this__14669.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__14670 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__14671 = this;
  if(cljs.core.truth_(this__14671.editable_QMARK_)) {
    var idx__14672 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__14672 === -1) {
      return not_found
    }else {
      return this__14671.arr[idx__14672 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__14673 = this;
  if(cljs.core.truth_(this__14673.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__14673.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__14678 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__14679 = 0;
  while(true) {
    if(i__14679 < len) {
      var G__14680 = cljs.core.assoc_BANG_.call(null, out__14678, arr[i__14679], arr[i__14679 + 1]);
      var G__14681 = i__14679 + 2;
      out__14678 = G__14680;
      i__14679 = G__14681;
      continue
    }else {
      return out__14678
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2211__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__14686__14687 = arr.slice();
    G__14686__14687[i] = a;
    return G__14686__14687
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__14688__14689 = arr.slice();
    G__14688__14689[i] = a;
    G__14688__14689[j] = b;
    return G__14688__14689
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__14691 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__14691, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__14691, 2 * i, new_arr__14691.length - 2 * i);
  return new_arr__14691
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__14694 = inode.ensure_editable(edit);
    editable__14694.arr[i] = a;
    return editable__14694
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__14695 = inode.ensure_editable(edit);
    editable__14695.arr[i] = a;
    editable__14695.arr[j] = b;
    return editable__14695
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__14702 = arr.length;
  var i__14703 = 0;
  var init__14704 = init;
  while(true) {
    if(i__14703 < len__14702) {
      var init__14707 = function() {
        var k__14705 = arr[i__14703];
        if(!(k__14705 == null)) {
          return f.call(null, init__14704, k__14705, arr[i__14703 + 1])
        }else {
          var node__14706 = arr[i__14703 + 1];
          if(!(node__14706 == null)) {
            return node__14706.kv_reduce(f, init__14704)
          }else {
            return init__14704
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__14707)) {
        return cljs.core.deref.call(null, init__14707)
      }else {
        var G__14708 = i__14703 + 2;
        var G__14709 = init__14707;
        i__14703 = G__14708;
        init__14704 = G__14709;
        continue
      }
    }else {
      return init__14704
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__14710 = this;
  var inode__14711 = this;
  if(this__14710.bitmap === bit) {
    return null
  }else {
    var editable__14712 = inode__14711.ensure_editable(e);
    var earr__14713 = editable__14712.arr;
    var len__14714 = earr__14713.length;
    editable__14712.bitmap = bit ^ editable__14712.bitmap;
    cljs.core.array_copy.call(null, earr__14713, 2 * (i + 1), earr__14713, 2 * i, len__14714 - 2 * (i + 1));
    earr__14713[len__14714 - 2] = null;
    earr__14713[len__14714 - 1] = null;
    return editable__14712
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__14715 = this;
  var inode__14716 = this;
  var bit__14717 = 1 << (hash >>> shift & 31);
  var idx__14718 = cljs.core.bitmap_indexed_node_index.call(null, this__14715.bitmap, bit__14717);
  if((this__14715.bitmap & bit__14717) === 0) {
    var n__14719 = cljs.core.bit_count.call(null, this__14715.bitmap);
    if(2 * n__14719 < this__14715.arr.length) {
      var editable__14720 = inode__14716.ensure_editable(edit);
      var earr__14721 = editable__14720.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__14721, 2 * idx__14718, earr__14721, 2 * (idx__14718 + 1), 2 * (n__14719 - idx__14718));
      earr__14721[2 * idx__14718] = key;
      earr__14721[2 * idx__14718 + 1] = val;
      editable__14720.bitmap = editable__14720.bitmap | bit__14717;
      return editable__14720
    }else {
      if(n__14719 >= 16) {
        var nodes__14722 = cljs.core.make_array.call(null, 32);
        var jdx__14723 = hash >>> shift & 31;
        nodes__14722[jdx__14723] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__14724 = 0;
        var j__14725 = 0;
        while(true) {
          if(i__14724 < 32) {
            if((this__14715.bitmap >>> i__14724 & 1) === 0) {
              var G__14778 = i__14724 + 1;
              var G__14779 = j__14725;
              i__14724 = G__14778;
              j__14725 = G__14779;
              continue
            }else {
              nodes__14722[i__14724] = !(this__14715.arr[j__14725] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__14715.arr[j__14725]), this__14715.arr[j__14725], this__14715.arr[j__14725 + 1], added_leaf_QMARK_) : this__14715.arr[j__14725 + 1];
              var G__14780 = i__14724 + 1;
              var G__14781 = j__14725 + 2;
              i__14724 = G__14780;
              j__14725 = G__14781;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__14719 + 1, nodes__14722)
      }else {
        if("\ufdd0'else") {
          var new_arr__14726 = cljs.core.make_array.call(null, 2 * (n__14719 + 4));
          cljs.core.array_copy.call(null, this__14715.arr, 0, new_arr__14726, 0, 2 * idx__14718);
          new_arr__14726[2 * idx__14718] = key;
          new_arr__14726[2 * idx__14718 + 1] = val;
          cljs.core.array_copy.call(null, this__14715.arr, 2 * idx__14718, new_arr__14726, 2 * (idx__14718 + 1), 2 * (n__14719 - idx__14718));
          added_leaf_QMARK_.val = true;
          var editable__14727 = inode__14716.ensure_editable(edit);
          editable__14727.arr = new_arr__14726;
          editable__14727.bitmap = editable__14727.bitmap | bit__14717;
          return editable__14727
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__14728 = this__14715.arr[2 * idx__14718];
    var val_or_node__14729 = this__14715.arr[2 * idx__14718 + 1];
    if(key_or_nil__14728 == null) {
      var n__14730 = val_or_node__14729.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__14730 === val_or_node__14729) {
        return inode__14716
      }else {
        return cljs.core.edit_and_set.call(null, inode__14716, edit, 2 * idx__14718 + 1, n__14730)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__14728)) {
        if(val === val_or_node__14729) {
          return inode__14716
        }else {
          return cljs.core.edit_and_set.call(null, inode__14716, edit, 2 * idx__14718 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__14716, edit, 2 * idx__14718, null, 2 * idx__14718 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__14728, val_or_node__14729, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__14731 = this;
  var inode__14732 = this;
  return cljs.core.create_inode_seq.call(null, this__14731.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__14733 = this;
  var inode__14734 = this;
  var bit__14735 = 1 << (hash >>> shift & 31);
  if((this__14733.bitmap & bit__14735) === 0) {
    return inode__14734
  }else {
    var idx__14736 = cljs.core.bitmap_indexed_node_index.call(null, this__14733.bitmap, bit__14735);
    var key_or_nil__14737 = this__14733.arr[2 * idx__14736];
    var val_or_node__14738 = this__14733.arr[2 * idx__14736 + 1];
    if(key_or_nil__14737 == null) {
      var n__14739 = val_or_node__14738.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__14739 === val_or_node__14738) {
        return inode__14734
      }else {
        if(!(n__14739 == null)) {
          return cljs.core.edit_and_set.call(null, inode__14734, edit, 2 * idx__14736 + 1, n__14739)
        }else {
          if(this__14733.bitmap === bit__14735) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__14734.edit_and_remove_pair(edit, bit__14735, idx__14736)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__14737)) {
        removed_leaf_QMARK_[0] = true;
        return inode__14734.edit_and_remove_pair(edit, bit__14735, idx__14736)
      }else {
        if("\ufdd0'else") {
          return inode__14734
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__14740 = this;
  var inode__14741 = this;
  if(e === this__14740.edit) {
    return inode__14741
  }else {
    var n__14742 = cljs.core.bit_count.call(null, this__14740.bitmap);
    var new_arr__14743 = cljs.core.make_array.call(null, n__14742 < 0 ? 4 : 2 * (n__14742 + 1));
    cljs.core.array_copy.call(null, this__14740.arr, 0, new_arr__14743, 0, 2 * n__14742);
    return new cljs.core.BitmapIndexedNode(e, this__14740.bitmap, new_arr__14743)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__14744 = this;
  var inode__14745 = this;
  return cljs.core.inode_kv_reduce.call(null, this__14744.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__14746 = this;
  var inode__14747 = this;
  var bit__14748 = 1 << (hash >>> shift & 31);
  if((this__14746.bitmap & bit__14748) === 0) {
    return not_found
  }else {
    var idx__14749 = cljs.core.bitmap_indexed_node_index.call(null, this__14746.bitmap, bit__14748);
    var key_or_nil__14750 = this__14746.arr[2 * idx__14749];
    var val_or_node__14751 = this__14746.arr[2 * idx__14749 + 1];
    if(key_or_nil__14750 == null) {
      return val_or_node__14751.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__14750)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__14750, val_or_node__14751], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__14752 = this;
  var inode__14753 = this;
  var bit__14754 = 1 << (hash >>> shift & 31);
  if((this__14752.bitmap & bit__14754) === 0) {
    return inode__14753
  }else {
    var idx__14755 = cljs.core.bitmap_indexed_node_index.call(null, this__14752.bitmap, bit__14754);
    var key_or_nil__14756 = this__14752.arr[2 * idx__14755];
    var val_or_node__14757 = this__14752.arr[2 * idx__14755 + 1];
    if(key_or_nil__14756 == null) {
      var n__14758 = val_or_node__14757.inode_without(shift + 5, hash, key);
      if(n__14758 === val_or_node__14757) {
        return inode__14753
      }else {
        if(!(n__14758 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__14752.bitmap, cljs.core.clone_and_set.call(null, this__14752.arr, 2 * idx__14755 + 1, n__14758))
        }else {
          if(this__14752.bitmap === bit__14754) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__14752.bitmap ^ bit__14754, cljs.core.remove_pair.call(null, this__14752.arr, idx__14755))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__14756)) {
        return new cljs.core.BitmapIndexedNode(null, this__14752.bitmap ^ bit__14754, cljs.core.remove_pair.call(null, this__14752.arr, idx__14755))
      }else {
        if("\ufdd0'else") {
          return inode__14753
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__14759 = this;
  var inode__14760 = this;
  var bit__14761 = 1 << (hash >>> shift & 31);
  var idx__14762 = cljs.core.bitmap_indexed_node_index.call(null, this__14759.bitmap, bit__14761);
  if((this__14759.bitmap & bit__14761) === 0) {
    var n__14763 = cljs.core.bit_count.call(null, this__14759.bitmap);
    if(n__14763 >= 16) {
      var nodes__14764 = cljs.core.make_array.call(null, 32);
      var jdx__14765 = hash >>> shift & 31;
      nodes__14764[jdx__14765] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__14766 = 0;
      var j__14767 = 0;
      while(true) {
        if(i__14766 < 32) {
          if((this__14759.bitmap >>> i__14766 & 1) === 0) {
            var G__14782 = i__14766 + 1;
            var G__14783 = j__14767;
            i__14766 = G__14782;
            j__14767 = G__14783;
            continue
          }else {
            nodes__14764[i__14766] = !(this__14759.arr[j__14767] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__14759.arr[j__14767]), this__14759.arr[j__14767], this__14759.arr[j__14767 + 1], added_leaf_QMARK_) : this__14759.arr[j__14767 + 1];
            var G__14784 = i__14766 + 1;
            var G__14785 = j__14767 + 2;
            i__14766 = G__14784;
            j__14767 = G__14785;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__14763 + 1, nodes__14764)
    }else {
      var new_arr__14768 = cljs.core.make_array.call(null, 2 * (n__14763 + 1));
      cljs.core.array_copy.call(null, this__14759.arr, 0, new_arr__14768, 0, 2 * idx__14762);
      new_arr__14768[2 * idx__14762] = key;
      new_arr__14768[2 * idx__14762 + 1] = val;
      cljs.core.array_copy.call(null, this__14759.arr, 2 * idx__14762, new_arr__14768, 2 * (idx__14762 + 1), 2 * (n__14763 - idx__14762));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__14759.bitmap | bit__14761, new_arr__14768)
    }
  }else {
    var key_or_nil__14769 = this__14759.arr[2 * idx__14762];
    var val_or_node__14770 = this__14759.arr[2 * idx__14762 + 1];
    if(key_or_nil__14769 == null) {
      var n__14771 = val_or_node__14770.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__14771 === val_or_node__14770) {
        return inode__14760
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__14759.bitmap, cljs.core.clone_and_set.call(null, this__14759.arr, 2 * idx__14762 + 1, n__14771))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__14769)) {
        if(val === val_or_node__14770) {
          return inode__14760
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__14759.bitmap, cljs.core.clone_and_set.call(null, this__14759.arr, 2 * idx__14762 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__14759.bitmap, cljs.core.clone_and_set.call(null, this__14759.arr, 2 * idx__14762, null, 2 * idx__14762 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__14769, val_or_node__14770, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__14772 = this;
  var inode__14773 = this;
  var bit__14774 = 1 << (hash >>> shift & 31);
  if((this__14772.bitmap & bit__14774) === 0) {
    return not_found
  }else {
    var idx__14775 = cljs.core.bitmap_indexed_node_index.call(null, this__14772.bitmap, bit__14774);
    var key_or_nil__14776 = this__14772.arr[2 * idx__14775];
    var val_or_node__14777 = this__14772.arr[2 * idx__14775 + 1];
    if(key_or_nil__14776 == null) {
      return val_or_node__14777.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__14776)) {
        return val_or_node__14777
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__14793 = array_node.arr;
  var len__14794 = 2 * (array_node.cnt - 1);
  var new_arr__14795 = cljs.core.make_array.call(null, len__14794);
  var i__14796 = 0;
  var j__14797 = 1;
  var bitmap__14798 = 0;
  while(true) {
    if(i__14796 < len__14794) {
      if(function() {
        var and__3822__auto____14799 = !(i__14796 === idx);
        if(and__3822__auto____14799) {
          return!(arr__14793[i__14796] == null)
        }else {
          return and__3822__auto____14799
        }
      }()) {
        new_arr__14795[j__14797] = arr__14793[i__14796];
        var G__14800 = i__14796 + 1;
        var G__14801 = j__14797 + 2;
        var G__14802 = bitmap__14798 | 1 << i__14796;
        i__14796 = G__14800;
        j__14797 = G__14801;
        bitmap__14798 = G__14802;
        continue
      }else {
        var G__14803 = i__14796 + 1;
        var G__14804 = j__14797;
        var G__14805 = bitmap__14798;
        i__14796 = G__14803;
        j__14797 = G__14804;
        bitmap__14798 = G__14805;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__14798, new_arr__14795)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__14806 = this;
  var inode__14807 = this;
  var idx__14808 = hash >>> shift & 31;
  var node__14809 = this__14806.arr[idx__14808];
  if(node__14809 == null) {
    var editable__14810 = cljs.core.edit_and_set.call(null, inode__14807, edit, idx__14808, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__14810.cnt = editable__14810.cnt + 1;
    return editable__14810
  }else {
    var n__14811 = node__14809.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__14811 === node__14809) {
      return inode__14807
    }else {
      return cljs.core.edit_and_set.call(null, inode__14807, edit, idx__14808, n__14811)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__14812 = this;
  var inode__14813 = this;
  return cljs.core.create_array_node_seq.call(null, this__14812.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__14814 = this;
  var inode__14815 = this;
  var idx__14816 = hash >>> shift & 31;
  var node__14817 = this__14814.arr[idx__14816];
  if(node__14817 == null) {
    return inode__14815
  }else {
    var n__14818 = node__14817.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__14818 === node__14817) {
      return inode__14815
    }else {
      if(n__14818 == null) {
        if(this__14814.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__14815, edit, idx__14816)
        }else {
          var editable__14819 = cljs.core.edit_and_set.call(null, inode__14815, edit, idx__14816, n__14818);
          editable__14819.cnt = editable__14819.cnt - 1;
          return editable__14819
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__14815, edit, idx__14816, n__14818)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__14820 = this;
  var inode__14821 = this;
  if(e === this__14820.edit) {
    return inode__14821
  }else {
    return new cljs.core.ArrayNode(e, this__14820.cnt, this__14820.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__14822 = this;
  var inode__14823 = this;
  var len__14824 = this__14822.arr.length;
  var i__14825 = 0;
  var init__14826 = init;
  while(true) {
    if(i__14825 < len__14824) {
      var node__14827 = this__14822.arr[i__14825];
      if(!(node__14827 == null)) {
        var init__14828 = node__14827.kv_reduce(f, init__14826);
        if(cljs.core.reduced_QMARK_.call(null, init__14828)) {
          return cljs.core.deref.call(null, init__14828)
        }else {
          var G__14847 = i__14825 + 1;
          var G__14848 = init__14828;
          i__14825 = G__14847;
          init__14826 = G__14848;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__14826
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__14829 = this;
  var inode__14830 = this;
  var idx__14831 = hash >>> shift & 31;
  var node__14832 = this__14829.arr[idx__14831];
  if(!(node__14832 == null)) {
    return node__14832.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__14833 = this;
  var inode__14834 = this;
  var idx__14835 = hash >>> shift & 31;
  var node__14836 = this__14833.arr[idx__14835];
  if(!(node__14836 == null)) {
    var n__14837 = node__14836.inode_without(shift + 5, hash, key);
    if(n__14837 === node__14836) {
      return inode__14834
    }else {
      if(n__14837 == null) {
        if(this__14833.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__14834, null, idx__14835)
        }else {
          return new cljs.core.ArrayNode(null, this__14833.cnt - 1, cljs.core.clone_and_set.call(null, this__14833.arr, idx__14835, n__14837))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__14833.cnt, cljs.core.clone_and_set.call(null, this__14833.arr, idx__14835, n__14837))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__14834
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__14838 = this;
  var inode__14839 = this;
  var idx__14840 = hash >>> shift & 31;
  var node__14841 = this__14838.arr[idx__14840];
  if(node__14841 == null) {
    return new cljs.core.ArrayNode(null, this__14838.cnt + 1, cljs.core.clone_and_set.call(null, this__14838.arr, idx__14840, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__14842 = node__14841.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__14842 === node__14841) {
      return inode__14839
    }else {
      return new cljs.core.ArrayNode(null, this__14838.cnt, cljs.core.clone_and_set.call(null, this__14838.arr, idx__14840, n__14842))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__14843 = this;
  var inode__14844 = this;
  var idx__14845 = hash >>> shift & 31;
  var node__14846 = this__14843.arr[idx__14845];
  if(!(node__14846 == null)) {
    return node__14846.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__14851 = 2 * cnt;
  var i__14852 = 0;
  while(true) {
    if(i__14852 < lim__14851) {
      if(cljs.core.key_test.call(null, key, arr[i__14852])) {
        return i__14852
      }else {
        var G__14853 = i__14852 + 2;
        i__14852 = G__14853;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__14854 = this;
  var inode__14855 = this;
  if(hash === this__14854.collision_hash) {
    var idx__14856 = cljs.core.hash_collision_node_find_index.call(null, this__14854.arr, this__14854.cnt, key);
    if(idx__14856 === -1) {
      if(this__14854.arr.length > 2 * this__14854.cnt) {
        var editable__14857 = cljs.core.edit_and_set.call(null, inode__14855, edit, 2 * this__14854.cnt, key, 2 * this__14854.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__14857.cnt = editable__14857.cnt + 1;
        return editable__14857
      }else {
        var len__14858 = this__14854.arr.length;
        var new_arr__14859 = cljs.core.make_array.call(null, len__14858 + 2);
        cljs.core.array_copy.call(null, this__14854.arr, 0, new_arr__14859, 0, len__14858);
        new_arr__14859[len__14858] = key;
        new_arr__14859[len__14858 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__14855.ensure_editable_array(edit, this__14854.cnt + 1, new_arr__14859)
      }
    }else {
      if(this__14854.arr[idx__14856 + 1] === val) {
        return inode__14855
      }else {
        return cljs.core.edit_and_set.call(null, inode__14855, edit, idx__14856 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__14854.collision_hash >>> shift & 31), [null, inode__14855, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__14860 = this;
  var inode__14861 = this;
  return cljs.core.create_inode_seq.call(null, this__14860.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__14862 = this;
  var inode__14863 = this;
  var idx__14864 = cljs.core.hash_collision_node_find_index.call(null, this__14862.arr, this__14862.cnt, key);
  if(idx__14864 === -1) {
    return inode__14863
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__14862.cnt === 1) {
      return null
    }else {
      var editable__14865 = inode__14863.ensure_editable(edit);
      var earr__14866 = editable__14865.arr;
      earr__14866[idx__14864] = earr__14866[2 * this__14862.cnt - 2];
      earr__14866[idx__14864 + 1] = earr__14866[2 * this__14862.cnt - 1];
      earr__14866[2 * this__14862.cnt - 1] = null;
      earr__14866[2 * this__14862.cnt - 2] = null;
      editable__14865.cnt = editable__14865.cnt - 1;
      return editable__14865
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__14867 = this;
  var inode__14868 = this;
  if(e === this__14867.edit) {
    return inode__14868
  }else {
    var new_arr__14869 = cljs.core.make_array.call(null, 2 * (this__14867.cnt + 1));
    cljs.core.array_copy.call(null, this__14867.arr, 0, new_arr__14869, 0, 2 * this__14867.cnt);
    return new cljs.core.HashCollisionNode(e, this__14867.collision_hash, this__14867.cnt, new_arr__14869)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__14870 = this;
  var inode__14871 = this;
  return cljs.core.inode_kv_reduce.call(null, this__14870.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__14872 = this;
  var inode__14873 = this;
  var idx__14874 = cljs.core.hash_collision_node_find_index.call(null, this__14872.arr, this__14872.cnt, key);
  if(idx__14874 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__14872.arr[idx__14874])) {
      return cljs.core.PersistentVector.fromArray([this__14872.arr[idx__14874], this__14872.arr[idx__14874 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__14875 = this;
  var inode__14876 = this;
  var idx__14877 = cljs.core.hash_collision_node_find_index.call(null, this__14875.arr, this__14875.cnt, key);
  if(idx__14877 === -1) {
    return inode__14876
  }else {
    if(this__14875.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__14875.collision_hash, this__14875.cnt - 1, cljs.core.remove_pair.call(null, this__14875.arr, cljs.core.quot.call(null, idx__14877, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__14878 = this;
  var inode__14879 = this;
  if(hash === this__14878.collision_hash) {
    var idx__14880 = cljs.core.hash_collision_node_find_index.call(null, this__14878.arr, this__14878.cnt, key);
    if(idx__14880 === -1) {
      var len__14881 = this__14878.arr.length;
      var new_arr__14882 = cljs.core.make_array.call(null, len__14881 + 2);
      cljs.core.array_copy.call(null, this__14878.arr, 0, new_arr__14882, 0, len__14881);
      new_arr__14882[len__14881] = key;
      new_arr__14882[len__14881 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__14878.collision_hash, this__14878.cnt + 1, new_arr__14882)
    }else {
      if(cljs.core._EQ_.call(null, this__14878.arr[idx__14880], val)) {
        return inode__14879
      }else {
        return new cljs.core.HashCollisionNode(null, this__14878.collision_hash, this__14878.cnt, cljs.core.clone_and_set.call(null, this__14878.arr, idx__14880 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__14878.collision_hash >>> shift & 31), [null, inode__14879])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__14883 = this;
  var inode__14884 = this;
  var idx__14885 = cljs.core.hash_collision_node_find_index.call(null, this__14883.arr, this__14883.cnt, key);
  if(idx__14885 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__14883.arr[idx__14885])) {
      return this__14883.arr[idx__14885 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__14886 = this;
  var inode__14887 = this;
  if(e === this__14886.edit) {
    this__14886.arr = array;
    this__14886.cnt = count;
    return inode__14887
  }else {
    return new cljs.core.HashCollisionNode(this__14886.edit, this__14886.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__14892 = cljs.core.hash.call(null, key1);
    if(key1hash__14892 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__14892, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___14893 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__14892, key1, val1, added_leaf_QMARK___14893).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___14893)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__14894 = cljs.core.hash.call(null, key1);
    if(key1hash__14894 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__14894, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___14895 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__14894, key1, val1, added_leaf_QMARK___14895).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___14895)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14896 = this;
  var h__2093__auto____14897 = this__14896.__hash;
  if(!(h__2093__auto____14897 == null)) {
    return h__2093__auto____14897
  }else {
    var h__2093__auto____14898 = cljs.core.hash_coll.call(null, coll);
    this__14896.__hash = h__2093__auto____14898;
    return h__2093__auto____14898
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14899 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__14900 = this;
  var this__14901 = this;
  return cljs.core.pr_str.call(null, this__14901)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__14902 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__14903 = this;
  if(this__14903.s == null) {
    return cljs.core.PersistentVector.fromArray([this__14903.nodes[this__14903.i], this__14903.nodes[this__14903.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__14903.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__14904 = this;
  if(this__14904.s == null) {
    return cljs.core.create_inode_seq.call(null, this__14904.nodes, this__14904.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__14904.nodes, this__14904.i, cljs.core.next.call(null, this__14904.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14905 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14906 = this;
  return new cljs.core.NodeSeq(meta, this__14906.nodes, this__14906.i, this__14906.s, this__14906.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14907 = this;
  return this__14907.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14908 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__14908.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__14915 = nodes.length;
      var j__14916 = i;
      while(true) {
        if(j__14916 < len__14915) {
          if(!(nodes[j__14916] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__14916, null, null)
          }else {
            var temp__3971__auto____14917 = nodes[j__14916 + 1];
            if(cljs.core.truth_(temp__3971__auto____14917)) {
              var node__14918 = temp__3971__auto____14917;
              var temp__3971__auto____14919 = node__14918.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____14919)) {
                var node_seq__14920 = temp__3971__auto____14919;
                return new cljs.core.NodeSeq(null, nodes, j__14916 + 2, node_seq__14920, null)
              }else {
                var G__14921 = j__14916 + 2;
                j__14916 = G__14921;
                continue
              }
            }else {
              var G__14922 = j__14916 + 2;
              j__14916 = G__14922;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14923 = this;
  var h__2093__auto____14924 = this__14923.__hash;
  if(!(h__2093__auto____14924 == null)) {
    return h__2093__auto____14924
  }else {
    var h__2093__auto____14925 = cljs.core.hash_coll.call(null, coll);
    this__14923.__hash = h__2093__auto____14925;
    return h__2093__auto____14925
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14926 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__14927 = this;
  var this__14928 = this;
  return cljs.core.pr_str.call(null, this__14928)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__14929 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__14930 = this;
  return cljs.core.first.call(null, this__14930.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__14931 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__14931.nodes, this__14931.i, cljs.core.next.call(null, this__14931.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14932 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14933 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__14933.nodes, this__14933.i, this__14933.s, this__14933.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14934 = this;
  return this__14934.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14935 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__14935.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__14942 = nodes.length;
      var j__14943 = i;
      while(true) {
        if(j__14943 < len__14942) {
          var temp__3971__auto____14944 = nodes[j__14943];
          if(cljs.core.truth_(temp__3971__auto____14944)) {
            var nj__14945 = temp__3971__auto____14944;
            var temp__3971__auto____14946 = nj__14945.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____14946)) {
              var ns__14947 = temp__3971__auto____14946;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__14943 + 1, ns__14947, null)
            }else {
              var G__14948 = j__14943 + 1;
              j__14943 = G__14948;
              continue
            }
          }else {
            var G__14949 = j__14943 + 1;
            j__14943 = G__14949;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__14952 = this;
  return new cljs.core.TransientHashMap({}, this__14952.root, this__14952.cnt, this__14952.has_nil_QMARK_, this__14952.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14953 = this;
  var h__2093__auto____14954 = this__14953.__hash;
  if(!(h__2093__auto____14954 == null)) {
    return h__2093__auto____14954
  }else {
    var h__2093__auto____14955 = cljs.core.hash_imap.call(null, coll);
    this__14953.__hash = h__2093__auto____14955;
    return h__2093__auto____14955
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__14956 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__14957 = this;
  if(k == null) {
    if(this__14957.has_nil_QMARK_) {
      return this__14957.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__14957.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__14957.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__14958 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____14959 = this__14958.has_nil_QMARK_;
      if(and__3822__auto____14959) {
        return v === this__14958.nil_val
      }else {
        return and__3822__auto____14959
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__14958.meta, this__14958.has_nil_QMARK_ ? this__14958.cnt : this__14958.cnt + 1, this__14958.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___14960 = new cljs.core.Box(false);
    var new_root__14961 = (this__14958.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__14958.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___14960);
    if(new_root__14961 === this__14958.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__14958.meta, added_leaf_QMARK___14960.val ? this__14958.cnt + 1 : this__14958.cnt, new_root__14961, this__14958.has_nil_QMARK_, this__14958.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__14962 = this;
  if(k == null) {
    return this__14962.has_nil_QMARK_
  }else {
    if(this__14962.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__14962.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__14985 = null;
  var G__14985__2 = function(this_sym14963, k) {
    var this__14965 = this;
    var this_sym14963__14966 = this;
    var coll__14967 = this_sym14963__14966;
    return coll__14967.cljs$core$ILookup$_lookup$arity$2(coll__14967, k)
  };
  var G__14985__3 = function(this_sym14964, k, not_found) {
    var this__14965 = this;
    var this_sym14964__14968 = this;
    var coll__14969 = this_sym14964__14968;
    return coll__14969.cljs$core$ILookup$_lookup$arity$3(coll__14969, k, not_found)
  };
  G__14985 = function(this_sym14964, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14985__2.call(this, this_sym14964, k);
      case 3:
        return G__14985__3.call(this, this_sym14964, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14985
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym14950, args14951) {
  var this__14970 = this;
  return this_sym14950.call.apply(this_sym14950, [this_sym14950].concat(args14951.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__14971 = this;
  var init__14972 = this__14971.has_nil_QMARK_ ? f.call(null, init, null, this__14971.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__14972)) {
    return cljs.core.deref.call(null, init__14972)
  }else {
    if(!(this__14971.root == null)) {
      return this__14971.root.kv_reduce(f, init__14972)
    }else {
      if("\ufdd0'else") {
        return init__14972
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__14973 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__14974 = this;
  var this__14975 = this;
  return cljs.core.pr_str.call(null, this__14975)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14976 = this;
  if(this__14976.cnt > 0) {
    var s__14977 = !(this__14976.root == null) ? this__14976.root.inode_seq() : null;
    if(this__14976.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__14976.nil_val], true), s__14977)
    }else {
      return s__14977
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14978 = this;
  return this__14978.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14979 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14980 = this;
  return new cljs.core.PersistentHashMap(meta, this__14980.cnt, this__14980.root, this__14980.has_nil_QMARK_, this__14980.nil_val, this__14980.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14981 = this;
  return this__14981.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14982 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__14982.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__14983 = this;
  if(k == null) {
    if(this__14983.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__14983.meta, this__14983.cnt - 1, this__14983.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__14983.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__14984 = this__14983.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__14984 === this__14983.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__14983.meta, this__14983.cnt - 1, new_root__14984, this__14983.has_nil_QMARK_, this__14983.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__14986 = ks.length;
  var i__14987 = 0;
  var out__14988 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__14987 < len__14986) {
      var G__14989 = i__14987 + 1;
      var G__14990 = cljs.core.assoc_BANG_.call(null, out__14988, ks[i__14987], vs[i__14987]);
      i__14987 = G__14989;
      out__14988 = G__14990;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__14988)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__14991 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__14992 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__14993 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__14994 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__14995 = this;
  if(k == null) {
    if(this__14995.has_nil_QMARK_) {
      return this__14995.nil_val
    }else {
      return null
    }
  }else {
    if(this__14995.root == null) {
      return null
    }else {
      return this__14995.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__14996 = this;
  if(k == null) {
    if(this__14996.has_nil_QMARK_) {
      return this__14996.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__14996.root == null) {
      return not_found
    }else {
      return this__14996.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14997 = this;
  if(this__14997.edit) {
    return this__14997.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__14998 = this;
  var tcoll__14999 = this;
  if(this__14998.edit) {
    if(function() {
      var G__15000__15001 = o;
      if(G__15000__15001) {
        if(function() {
          var or__3824__auto____15002 = G__15000__15001.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____15002) {
            return or__3824__auto____15002
          }else {
            return G__15000__15001.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__15000__15001.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__15000__15001)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__15000__15001)
      }
    }()) {
      return tcoll__14999.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__15003 = cljs.core.seq.call(null, o);
      var tcoll__15004 = tcoll__14999;
      while(true) {
        var temp__3971__auto____15005 = cljs.core.first.call(null, es__15003);
        if(cljs.core.truth_(temp__3971__auto____15005)) {
          var e__15006 = temp__3971__auto____15005;
          var G__15017 = cljs.core.next.call(null, es__15003);
          var G__15018 = tcoll__15004.assoc_BANG_(cljs.core.key.call(null, e__15006), cljs.core.val.call(null, e__15006));
          es__15003 = G__15017;
          tcoll__15004 = G__15018;
          continue
        }else {
          return tcoll__15004
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__15007 = this;
  var tcoll__15008 = this;
  if(this__15007.edit) {
    if(k == null) {
      if(this__15007.nil_val === v) {
      }else {
        this__15007.nil_val = v
      }
      if(this__15007.has_nil_QMARK_) {
      }else {
        this__15007.count = this__15007.count + 1;
        this__15007.has_nil_QMARK_ = true
      }
      return tcoll__15008
    }else {
      var added_leaf_QMARK___15009 = new cljs.core.Box(false);
      var node__15010 = (this__15007.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__15007.root).inode_assoc_BANG_(this__15007.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___15009);
      if(node__15010 === this__15007.root) {
      }else {
        this__15007.root = node__15010
      }
      if(added_leaf_QMARK___15009.val) {
        this__15007.count = this__15007.count + 1
      }else {
      }
      return tcoll__15008
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__15011 = this;
  var tcoll__15012 = this;
  if(this__15011.edit) {
    if(k == null) {
      if(this__15011.has_nil_QMARK_) {
        this__15011.has_nil_QMARK_ = false;
        this__15011.nil_val = null;
        this__15011.count = this__15011.count - 1;
        return tcoll__15012
      }else {
        return tcoll__15012
      }
    }else {
      if(this__15011.root == null) {
        return tcoll__15012
      }else {
        var removed_leaf_QMARK___15013 = new cljs.core.Box(false);
        var node__15014 = this__15011.root.inode_without_BANG_(this__15011.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___15013);
        if(node__15014 === this__15011.root) {
        }else {
          this__15011.root = node__15014
        }
        if(cljs.core.truth_(removed_leaf_QMARK___15013[0])) {
          this__15011.count = this__15011.count - 1
        }else {
        }
        return tcoll__15012
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__15015 = this;
  var tcoll__15016 = this;
  if(this__15015.edit) {
    this__15015.edit = null;
    return new cljs.core.PersistentHashMap(null, this__15015.count, this__15015.root, this__15015.has_nil_QMARK_, this__15015.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__15021 = node;
  var stack__15022 = stack;
  while(true) {
    if(!(t__15021 == null)) {
      var G__15023 = ascending_QMARK_ ? t__15021.left : t__15021.right;
      var G__15024 = cljs.core.conj.call(null, stack__15022, t__15021);
      t__15021 = G__15023;
      stack__15022 = G__15024;
      continue
    }else {
      return stack__15022
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__15025 = this;
  var h__2093__auto____15026 = this__15025.__hash;
  if(!(h__2093__auto____15026 == null)) {
    return h__2093__auto____15026
  }else {
    var h__2093__auto____15027 = cljs.core.hash_coll.call(null, coll);
    this__15025.__hash = h__2093__auto____15027;
    return h__2093__auto____15027
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__15028 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__15029 = this;
  var this__15030 = this;
  return cljs.core.pr_str.call(null, this__15030)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__15031 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__15032 = this;
  if(this__15032.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__15032.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__15033 = this;
  return cljs.core.peek.call(null, this__15033.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__15034 = this;
  var t__15035 = cljs.core.first.call(null, this__15034.stack);
  var next_stack__15036 = cljs.core.tree_map_seq_push.call(null, this__15034.ascending_QMARK_ ? t__15035.right : t__15035.left, cljs.core.next.call(null, this__15034.stack), this__15034.ascending_QMARK_);
  if(!(next_stack__15036 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__15036, this__15034.ascending_QMARK_, this__15034.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__15037 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__15038 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__15038.stack, this__15038.ascending_QMARK_, this__15038.cnt, this__15038.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__15039 = this;
  return this__15039.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____15041 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____15041) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____15041
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____15043 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____15043) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____15043
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__15047 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__15047)) {
    return cljs.core.deref.call(null, init__15047)
  }else {
    var init__15048 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__15047) : init__15047;
    if(cljs.core.reduced_QMARK_.call(null, init__15048)) {
      return cljs.core.deref.call(null, init__15048)
    }else {
      var init__15049 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__15048) : init__15048;
      if(cljs.core.reduced_QMARK_.call(null, init__15049)) {
        return cljs.core.deref.call(null, init__15049)
      }else {
        return init__15049
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__15052 = this;
  var h__2093__auto____15053 = this__15052.__hash;
  if(!(h__2093__auto____15053 == null)) {
    return h__2093__auto____15053
  }else {
    var h__2093__auto____15054 = cljs.core.hash_coll.call(null, coll);
    this__15052.__hash = h__2093__auto____15054;
    return h__2093__auto____15054
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__15055 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__15056 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__15057 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__15057.key, this__15057.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__15105 = null;
  var G__15105__2 = function(this_sym15058, k) {
    var this__15060 = this;
    var this_sym15058__15061 = this;
    var node__15062 = this_sym15058__15061;
    return node__15062.cljs$core$ILookup$_lookup$arity$2(node__15062, k)
  };
  var G__15105__3 = function(this_sym15059, k, not_found) {
    var this__15060 = this;
    var this_sym15059__15063 = this;
    var node__15064 = this_sym15059__15063;
    return node__15064.cljs$core$ILookup$_lookup$arity$3(node__15064, k, not_found)
  };
  G__15105 = function(this_sym15059, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15105__2.call(this, this_sym15059, k);
      case 3:
        return G__15105__3.call(this, this_sym15059, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__15105
}();
cljs.core.BlackNode.prototype.apply = function(this_sym15050, args15051) {
  var this__15065 = this;
  return this_sym15050.call.apply(this_sym15050, [this_sym15050].concat(args15051.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__15066 = this;
  return cljs.core.PersistentVector.fromArray([this__15066.key, this__15066.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__15067 = this;
  return this__15067.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__15068 = this;
  return this__15068.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__15069 = this;
  var node__15070 = this;
  return ins.balance_right(node__15070)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__15071 = this;
  var node__15072 = this;
  return new cljs.core.RedNode(this__15071.key, this__15071.val, this__15071.left, this__15071.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__15073 = this;
  var node__15074 = this;
  return cljs.core.balance_right_del.call(null, this__15073.key, this__15073.val, this__15073.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__15075 = this;
  var node__15076 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__15077 = this;
  var node__15078 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__15078, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__15079 = this;
  var node__15080 = this;
  return cljs.core.balance_left_del.call(null, this__15079.key, this__15079.val, del, this__15079.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__15081 = this;
  var node__15082 = this;
  return ins.balance_left(node__15082)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__15083 = this;
  var node__15084 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__15084, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__15106 = null;
  var G__15106__0 = function() {
    var this__15085 = this;
    var this__15087 = this;
    return cljs.core.pr_str.call(null, this__15087)
  };
  G__15106 = function() {
    switch(arguments.length) {
      case 0:
        return G__15106__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__15106
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__15088 = this;
  var node__15089 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__15089, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__15090 = this;
  var node__15091 = this;
  return node__15091
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__15092 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__15093 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__15094 = this;
  return cljs.core.list.call(null, this__15094.key, this__15094.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__15095 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__15096 = this;
  return this__15096.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__15097 = this;
  return cljs.core.PersistentVector.fromArray([this__15097.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__15098 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__15098.key, this__15098.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__15099 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__15100 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__15100.key, this__15100.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__15101 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__15102 = this;
  if(n === 0) {
    return this__15102.key
  }else {
    if(n === 1) {
      return this__15102.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__15103 = this;
  if(n === 0) {
    return this__15103.key
  }else {
    if(n === 1) {
      return this__15103.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__15104 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__15109 = this;
  var h__2093__auto____15110 = this__15109.__hash;
  if(!(h__2093__auto____15110 == null)) {
    return h__2093__auto____15110
  }else {
    var h__2093__auto____15111 = cljs.core.hash_coll.call(null, coll);
    this__15109.__hash = h__2093__auto____15111;
    return h__2093__auto____15111
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__15112 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__15113 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__15114 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__15114.key, this__15114.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__15162 = null;
  var G__15162__2 = function(this_sym15115, k) {
    var this__15117 = this;
    var this_sym15115__15118 = this;
    var node__15119 = this_sym15115__15118;
    return node__15119.cljs$core$ILookup$_lookup$arity$2(node__15119, k)
  };
  var G__15162__3 = function(this_sym15116, k, not_found) {
    var this__15117 = this;
    var this_sym15116__15120 = this;
    var node__15121 = this_sym15116__15120;
    return node__15121.cljs$core$ILookup$_lookup$arity$3(node__15121, k, not_found)
  };
  G__15162 = function(this_sym15116, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15162__2.call(this, this_sym15116, k);
      case 3:
        return G__15162__3.call(this, this_sym15116, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__15162
}();
cljs.core.RedNode.prototype.apply = function(this_sym15107, args15108) {
  var this__15122 = this;
  return this_sym15107.call.apply(this_sym15107, [this_sym15107].concat(args15108.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__15123 = this;
  return cljs.core.PersistentVector.fromArray([this__15123.key, this__15123.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__15124 = this;
  return this__15124.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__15125 = this;
  return this__15125.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__15126 = this;
  var node__15127 = this;
  return new cljs.core.RedNode(this__15126.key, this__15126.val, this__15126.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__15128 = this;
  var node__15129 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__15130 = this;
  var node__15131 = this;
  return new cljs.core.RedNode(this__15130.key, this__15130.val, this__15130.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__15132 = this;
  var node__15133 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__15134 = this;
  var node__15135 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__15135, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__15136 = this;
  var node__15137 = this;
  return new cljs.core.RedNode(this__15136.key, this__15136.val, del, this__15136.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__15138 = this;
  var node__15139 = this;
  return new cljs.core.RedNode(this__15138.key, this__15138.val, ins, this__15138.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__15140 = this;
  var node__15141 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__15140.left)) {
    return new cljs.core.RedNode(this__15140.key, this__15140.val, this__15140.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__15140.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__15140.right)) {
      return new cljs.core.RedNode(this__15140.right.key, this__15140.right.val, new cljs.core.BlackNode(this__15140.key, this__15140.val, this__15140.left, this__15140.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__15140.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__15141, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__15163 = null;
  var G__15163__0 = function() {
    var this__15142 = this;
    var this__15144 = this;
    return cljs.core.pr_str.call(null, this__15144)
  };
  G__15163 = function() {
    switch(arguments.length) {
      case 0:
        return G__15163__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__15163
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__15145 = this;
  var node__15146 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__15145.right)) {
    return new cljs.core.RedNode(this__15145.key, this__15145.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__15145.left, null), this__15145.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__15145.left)) {
      return new cljs.core.RedNode(this__15145.left.key, this__15145.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__15145.left.left, null), new cljs.core.BlackNode(this__15145.key, this__15145.val, this__15145.left.right, this__15145.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__15146, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__15147 = this;
  var node__15148 = this;
  return new cljs.core.BlackNode(this__15147.key, this__15147.val, this__15147.left, this__15147.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__15149 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__15150 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__15151 = this;
  return cljs.core.list.call(null, this__15151.key, this__15151.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__15152 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__15153 = this;
  return this__15153.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__15154 = this;
  return cljs.core.PersistentVector.fromArray([this__15154.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__15155 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__15155.key, this__15155.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__15156 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__15157 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__15157.key, this__15157.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__15158 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__15159 = this;
  if(n === 0) {
    return this__15159.key
  }else {
    if(n === 1) {
      return this__15159.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__15160 = this;
  if(n === 0) {
    return this__15160.key
  }else {
    if(n === 1) {
      return this__15160.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__15161 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__15167 = comp.call(null, k, tree.key);
    if(c__15167 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__15167 < 0) {
        var ins__15168 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__15168 == null)) {
          return tree.add_left(ins__15168)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__15169 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__15169 == null)) {
            return tree.add_right(ins__15169)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__15172 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__15172)) {
            return new cljs.core.RedNode(app__15172.key, app__15172.val, new cljs.core.RedNode(left.key, left.val, left.left, app__15172.left, null), new cljs.core.RedNode(right.key, right.val, app__15172.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__15172, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__15173 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__15173)) {
              return new cljs.core.RedNode(app__15173.key, app__15173.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__15173.left, null), new cljs.core.BlackNode(right.key, right.val, app__15173.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__15173, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__15179 = comp.call(null, k, tree.key);
    if(c__15179 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__15179 < 0) {
        var del__15180 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____15181 = !(del__15180 == null);
          if(or__3824__auto____15181) {
            return or__3824__auto____15181
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__15180, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__15180, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__15182 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____15183 = !(del__15182 == null);
            if(or__3824__auto____15183) {
              return or__3824__auto____15183
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__15182)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__15182, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__15186 = tree.key;
  var c__15187 = comp.call(null, k, tk__15186);
  if(c__15187 === 0) {
    return tree.replace(tk__15186, v, tree.left, tree.right)
  }else {
    if(c__15187 < 0) {
      return tree.replace(tk__15186, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__15186, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__15190 = this;
  var h__2093__auto____15191 = this__15190.__hash;
  if(!(h__2093__auto____15191 == null)) {
    return h__2093__auto____15191
  }else {
    var h__2093__auto____15192 = cljs.core.hash_imap.call(null, coll);
    this__15190.__hash = h__2093__auto____15192;
    return h__2093__auto____15192
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__15193 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__15194 = this;
  var n__15195 = coll.entry_at(k);
  if(!(n__15195 == null)) {
    return n__15195.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__15196 = this;
  var found__15197 = [null];
  var t__15198 = cljs.core.tree_map_add.call(null, this__15196.comp, this__15196.tree, k, v, found__15197);
  if(t__15198 == null) {
    var found_node__15199 = cljs.core.nth.call(null, found__15197, 0);
    if(cljs.core._EQ_.call(null, v, found_node__15199.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__15196.comp, cljs.core.tree_map_replace.call(null, this__15196.comp, this__15196.tree, k, v), this__15196.cnt, this__15196.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__15196.comp, t__15198.blacken(), this__15196.cnt + 1, this__15196.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__15200 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__15234 = null;
  var G__15234__2 = function(this_sym15201, k) {
    var this__15203 = this;
    var this_sym15201__15204 = this;
    var coll__15205 = this_sym15201__15204;
    return coll__15205.cljs$core$ILookup$_lookup$arity$2(coll__15205, k)
  };
  var G__15234__3 = function(this_sym15202, k, not_found) {
    var this__15203 = this;
    var this_sym15202__15206 = this;
    var coll__15207 = this_sym15202__15206;
    return coll__15207.cljs$core$ILookup$_lookup$arity$3(coll__15207, k, not_found)
  };
  G__15234 = function(this_sym15202, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15234__2.call(this, this_sym15202, k);
      case 3:
        return G__15234__3.call(this, this_sym15202, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__15234
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym15188, args15189) {
  var this__15208 = this;
  return this_sym15188.call.apply(this_sym15188, [this_sym15188].concat(args15189.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__15209 = this;
  if(!(this__15209.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__15209.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__15210 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__15211 = this;
  if(this__15211.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__15211.tree, false, this__15211.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__15212 = this;
  var this__15213 = this;
  return cljs.core.pr_str.call(null, this__15213)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__15214 = this;
  var coll__15215 = this;
  var t__15216 = this__15214.tree;
  while(true) {
    if(!(t__15216 == null)) {
      var c__15217 = this__15214.comp.call(null, k, t__15216.key);
      if(c__15217 === 0) {
        return t__15216
      }else {
        if(c__15217 < 0) {
          var G__15235 = t__15216.left;
          t__15216 = G__15235;
          continue
        }else {
          if("\ufdd0'else") {
            var G__15236 = t__15216.right;
            t__15216 = G__15236;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__15218 = this;
  if(this__15218.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__15218.tree, ascending_QMARK_, this__15218.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__15219 = this;
  if(this__15219.cnt > 0) {
    var stack__15220 = null;
    var t__15221 = this__15219.tree;
    while(true) {
      if(!(t__15221 == null)) {
        var c__15222 = this__15219.comp.call(null, k, t__15221.key);
        if(c__15222 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__15220, t__15221), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__15222 < 0) {
              var G__15237 = cljs.core.conj.call(null, stack__15220, t__15221);
              var G__15238 = t__15221.left;
              stack__15220 = G__15237;
              t__15221 = G__15238;
              continue
            }else {
              var G__15239 = stack__15220;
              var G__15240 = t__15221.right;
              stack__15220 = G__15239;
              t__15221 = G__15240;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__15222 > 0) {
                var G__15241 = cljs.core.conj.call(null, stack__15220, t__15221);
                var G__15242 = t__15221.right;
                stack__15220 = G__15241;
                t__15221 = G__15242;
                continue
              }else {
                var G__15243 = stack__15220;
                var G__15244 = t__15221.left;
                stack__15220 = G__15243;
                t__15221 = G__15244;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__15220 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__15220, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__15223 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__15224 = this;
  return this__15224.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__15225 = this;
  if(this__15225.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__15225.tree, true, this__15225.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__15226 = this;
  return this__15226.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__15227 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__15228 = this;
  return new cljs.core.PersistentTreeMap(this__15228.comp, this__15228.tree, this__15228.cnt, meta, this__15228.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__15229 = this;
  return this__15229.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__15230 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__15230.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__15231 = this;
  var found__15232 = [null];
  var t__15233 = cljs.core.tree_map_remove.call(null, this__15231.comp, this__15231.tree, k, found__15232);
  if(t__15233 == null) {
    if(cljs.core.nth.call(null, found__15232, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__15231.comp, null, 0, this__15231.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__15231.comp, t__15233.blacken(), this__15231.cnt - 1, this__15231.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__15247 = cljs.core.seq.call(null, keyvals);
    var out__15248 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__15247) {
        var G__15249 = cljs.core.nnext.call(null, in__15247);
        var G__15250 = cljs.core.assoc_BANG_.call(null, out__15248, cljs.core.first.call(null, in__15247), cljs.core.second.call(null, in__15247));
        in__15247 = G__15249;
        out__15248 = G__15250;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__15248)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__15251) {
    var keyvals = cljs.core.seq(arglist__15251);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__15252) {
    var keyvals = cljs.core.seq(arglist__15252);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__15256 = [];
    var obj__15257 = {};
    var kvs__15258 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__15258) {
        ks__15256.push(cljs.core.first.call(null, kvs__15258));
        obj__15257[cljs.core.first.call(null, kvs__15258)] = cljs.core.second.call(null, kvs__15258);
        var G__15259 = cljs.core.nnext.call(null, kvs__15258);
        kvs__15258 = G__15259;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__15256, obj__15257)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__15260) {
    var keyvals = cljs.core.seq(arglist__15260);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__15263 = cljs.core.seq.call(null, keyvals);
    var out__15264 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__15263) {
        var G__15265 = cljs.core.nnext.call(null, in__15263);
        var G__15266 = cljs.core.assoc.call(null, out__15264, cljs.core.first.call(null, in__15263), cljs.core.second.call(null, in__15263));
        in__15263 = G__15265;
        out__15264 = G__15266;
        continue
      }else {
        return out__15264
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__15267) {
    var keyvals = cljs.core.seq(arglist__15267);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__15270 = cljs.core.seq.call(null, keyvals);
    var out__15271 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__15270) {
        var G__15272 = cljs.core.nnext.call(null, in__15270);
        var G__15273 = cljs.core.assoc.call(null, out__15271, cljs.core.first.call(null, in__15270), cljs.core.second.call(null, in__15270));
        in__15270 = G__15272;
        out__15271 = G__15273;
        continue
      }else {
        return out__15271
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__15274) {
    var comparator = cljs.core.first(arglist__15274);
    var keyvals = cljs.core.rest(arglist__15274);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__15275_SHARP_, p2__15276_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____15278 = p1__15275_SHARP_;
          if(cljs.core.truth_(or__3824__auto____15278)) {
            return or__3824__auto____15278
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__15276_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__15279) {
    var maps = cljs.core.seq(arglist__15279);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__15287 = function(m, e) {
        var k__15285 = cljs.core.first.call(null, e);
        var v__15286 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__15285)) {
          return cljs.core.assoc.call(null, m, k__15285, f.call(null, cljs.core._lookup.call(null, m, k__15285, null), v__15286))
        }else {
          return cljs.core.assoc.call(null, m, k__15285, v__15286)
        }
      };
      var merge2__15289 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__15287, function() {
          var or__3824__auto____15288 = m1;
          if(cljs.core.truth_(or__3824__auto____15288)) {
            return or__3824__auto____15288
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__15289, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__15290) {
    var f = cljs.core.first(arglist__15290);
    var maps = cljs.core.rest(arglist__15290);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__15295 = cljs.core.ObjMap.EMPTY;
  var keys__15296 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__15296) {
      var key__15297 = cljs.core.first.call(null, keys__15296);
      var entry__15298 = cljs.core._lookup.call(null, map, key__15297, "\ufdd0'cljs.core/not-found");
      var G__15299 = cljs.core.not_EQ_.call(null, entry__15298, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__15295, key__15297, entry__15298) : ret__15295;
      var G__15300 = cljs.core.next.call(null, keys__15296);
      ret__15295 = G__15299;
      keys__15296 = G__15300;
      continue
    }else {
      return ret__15295
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__15304 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__15304.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__15305 = this;
  var h__2093__auto____15306 = this__15305.__hash;
  if(!(h__2093__auto____15306 == null)) {
    return h__2093__auto____15306
  }else {
    var h__2093__auto____15307 = cljs.core.hash_iset.call(null, coll);
    this__15305.__hash = h__2093__auto____15307;
    return h__2093__auto____15307
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__15308 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__15309 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__15309.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__15330 = null;
  var G__15330__2 = function(this_sym15310, k) {
    var this__15312 = this;
    var this_sym15310__15313 = this;
    var coll__15314 = this_sym15310__15313;
    return coll__15314.cljs$core$ILookup$_lookup$arity$2(coll__15314, k)
  };
  var G__15330__3 = function(this_sym15311, k, not_found) {
    var this__15312 = this;
    var this_sym15311__15315 = this;
    var coll__15316 = this_sym15311__15315;
    return coll__15316.cljs$core$ILookup$_lookup$arity$3(coll__15316, k, not_found)
  };
  G__15330 = function(this_sym15311, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15330__2.call(this, this_sym15311, k);
      case 3:
        return G__15330__3.call(this, this_sym15311, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__15330
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym15302, args15303) {
  var this__15317 = this;
  return this_sym15302.call.apply(this_sym15302, [this_sym15302].concat(args15303.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__15318 = this;
  return new cljs.core.PersistentHashSet(this__15318.meta, cljs.core.assoc.call(null, this__15318.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__15319 = this;
  var this__15320 = this;
  return cljs.core.pr_str.call(null, this__15320)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__15321 = this;
  return cljs.core.keys.call(null, this__15321.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__15322 = this;
  return new cljs.core.PersistentHashSet(this__15322.meta, cljs.core.dissoc.call(null, this__15322.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__15323 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__15324 = this;
  var and__3822__auto____15325 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____15325) {
    var and__3822__auto____15326 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____15326) {
      return cljs.core.every_QMARK_.call(null, function(p1__15301_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__15301_SHARP_)
      }, other)
    }else {
      return and__3822__auto____15326
    }
  }else {
    return and__3822__auto____15325
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__15327 = this;
  return new cljs.core.PersistentHashSet(meta, this__15327.hash_map, this__15327.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__15328 = this;
  return this__15328.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__15329 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__15329.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__15331 = cljs.core.count.call(null, items);
  var i__15332 = 0;
  var out__15333 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__15332 < len__15331) {
      var G__15334 = i__15332 + 1;
      var G__15335 = cljs.core.conj_BANG_.call(null, out__15333, items[i__15332]);
      i__15332 = G__15334;
      out__15333 = G__15335;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__15333)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__15353 = null;
  var G__15353__2 = function(this_sym15339, k) {
    var this__15341 = this;
    var this_sym15339__15342 = this;
    var tcoll__15343 = this_sym15339__15342;
    if(cljs.core._lookup.call(null, this__15341.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__15353__3 = function(this_sym15340, k, not_found) {
    var this__15341 = this;
    var this_sym15340__15344 = this;
    var tcoll__15345 = this_sym15340__15344;
    if(cljs.core._lookup.call(null, this__15341.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__15353 = function(this_sym15340, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15353__2.call(this, this_sym15340, k);
      case 3:
        return G__15353__3.call(this, this_sym15340, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__15353
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym15337, args15338) {
  var this__15346 = this;
  return this_sym15337.call.apply(this_sym15337, [this_sym15337].concat(args15338.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__15347 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__15348 = this;
  if(cljs.core._lookup.call(null, this__15348.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__15349 = this;
  return cljs.core.count.call(null, this__15349.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__15350 = this;
  this__15350.transient_map = cljs.core.dissoc_BANG_.call(null, this__15350.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__15351 = this;
  this__15351.transient_map = cljs.core.assoc_BANG_.call(null, this__15351.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__15352 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__15352.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__15356 = this;
  var h__2093__auto____15357 = this__15356.__hash;
  if(!(h__2093__auto____15357 == null)) {
    return h__2093__auto____15357
  }else {
    var h__2093__auto____15358 = cljs.core.hash_iset.call(null, coll);
    this__15356.__hash = h__2093__auto____15358;
    return h__2093__auto____15358
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__15359 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__15360 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__15360.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__15386 = null;
  var G__15386__2 = function(this_sym15361, k) {
    var this__15363 = this;
    var this_sym15361__15364 = this;
    var coll__15365 = this_sym15361__15364;
    return coll__15365.cljs$core$ILookup$_lookup$arity$2(coll__15365, k)
  };
  var G__15386__3 = function(this_sym15362, k, not_found) {
    var this__15363 = this;
    var this_sym15362__15366 = this;
    var coll__15367 = this_sym15362__15366;
    return coll__15367.cljs$core$ILookup$_lookup$arity$3(coll__15367, k, not_found)
  };
  G__15386 = function(this_sym15362, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15386__2.call(this, this_sym15362, k);
      case 3:
        return G__15386__3.call(this, this_sym15362, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__15386
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym15354, args15355) {
  var this__15368 = this;
  return this_sym15354.call.apply(this_sym15354, [this_sym15354].concat(args15355.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__15369 = this;
  return new cljs.core.PersistentTreeSet(this__15369.meta, cljs.core.assoc.call(null, this__15369.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__15370 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__15370.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__15371 = this;
  var this__15372 = this;
  return cljs.core.pr_str.call(null, this__15372)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__15373 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__15373.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__15374 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__15374.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__15375 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__15376 = this;
  return cljs.core._comparator.call(null, this__15376.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__15377 = this;
  return cljs.core.keys.call(null, this__15377.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__15378 = this;
  return new cljs.core.PersistentTreeSet(this__15378.meta, cljs.core.dissoc.call(null, this__15378.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__15379 = this;
  return cljs.core.count.call(null, this__15379.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__15380 = this;
  var and__3822__auto____15381 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____15381) {
    var and__3822__auto____15382 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____15382) {
      return cljs.core.every_QMARK_.call(null, function(p1__15336_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__15336_SHARP_)
      }, other)
    }else {
      return and__3822__auto____15382
    }
  }else {
    return and__3822__auto____15381
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__15383 = this;
  return new cljs.core.PersistentTreeSet(meta, this__15383.tree_map, this__15383.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__15384 = this;
  return this__15384.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__15385 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__15385.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__15391__delegate = function(keys) {
      var in__15389 = cljs.core.seq.call(null, keys);
      var out__15390 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__15389)) {
          var G__15392 = cljs.core.next.call(null, in__15389);
          var G__15393 = cljs.core.conj_BANG_.call(null, out__15390, cljs.core.first.call(null, in__15389));
          in__15389 = G__15392;
          out__15390 = G__15393;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__15390)
        }
        break
      }
    };
    var G__15391 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__15391__delegate.call(this, keys)
    };
    G__15391.cljs$lang$maxFixedArity = 0;
    G__15391.cljs$lang$applyTo = function(arglist__15394) {
      var keys = cljs.core.seq(arglist__15394);
      return G__15391__delegate(keys)
    };
    G__15391.cljs$lang$arity$variadic = G__15391__delegate;
    return G__15391
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__15395) {
    var keys = cljs.core.seq(arglist__15395);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__15397) {
    var comparator = cljs.core.first(arglist__15397);
    var keys = cljs.core.rest(arglist__15397);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__15403 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____15404 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____15404)) {
        var e__15405 = temp__3971__auto____15404;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__15405))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__15403, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__15396_SHARP_) {
      var temp__3971__auto____15406 = cljs.core.find.call(null, smap, p1__15396_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____15406)) {
        var e__15407 = temp__3971__auto____15406;
        return cljs.core.second.call(null, e__15407)
      }else {
        return p1__15396_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__15437 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__15430, seen) {
        while(true) {
          var vec__15431__15432 = p__15430;
          var f__15433 = cljs.core.nth.call(null, vec__15431__15432, 0, null);
          var xs__15434 = vec__15431__15432;
          var temp__3974__auto____15435 = cljs.core.seq.call(null, xs__15434);
          if(temp__3974__auto____15435) {
            var s__15436 = temp__3974__auto____15435;
            if(cljs.core.contains_QMARK_.call(null, seen, f__15433)) {
              var G__15438 = cljs.core.rest.call(null, s__15436);
              var G__15439 = seen;
              p__15430 = G__15438;
              seen = G__15439;
              continue
            }else {
              return cljs.core.cons.call(null, f__15433, step.call(null, cljs.core.rest.call(null, s__15436), cljs.core.conj.call(null, seen, f__15433)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__15437.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__15442 = cljs.core.PersistentVector.EMPTY;
  var s__15443 = s;
  while(true) {
    if(cljs.core.next.call(null, s__15443)) {
      var G__15444 = cljs.core.conj.call(null, ret__15442, cljs.core.first.call(null, s__15443));
      var G__15445 = cljs.core.next.call(null, s__15443);
      ret__15442 = G__15444;
      s__15443 = G__15445;
      continue
    }else {
      return cljs.core.seq.call(null, ret__15442)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____15448 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____15448) {
        return or__3824__auto____15448
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__15449 = x.lastIndexOf("/");
      if(i__15449 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__15449 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____15452 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____15452) {
      return or__3824__auto____15452
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__15453 = x.lastIndexOf("/");
    if(i__15453 > -1) {
      return cljs.core.subs.call(null, x, 2, i__15453)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__15460 = cljs.core.ObjMap.EMPTY;
  var ks__15461 = cljs.core.seq.call(null, keys);
  var vs__15462 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____15463 = ks__15461;
      if(and__3822__auto____15463) {
        return vs__15462
      }else {
        return and__3822__auto____15463
      }
    }()) {
      var G__15464 = cljs.core.assoc.call(null, map__15460, cljs.core.first.call(null, ks__15461), cljs.core.first.call(null, vs__15462));
      var G__15465 = cljs.core.next.call(null, ks__15461);
      var G__15466 = cljs.core.next.call(null, vs__15462);
      map__15460 = G__15464;
      ks__15461 = G__15465;
      vs__15462 = G__15466;
      continue
    }else {
      return map__15460
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__15469__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__15454_SHARP_, p2__15455_SHARP_) {
        return max_key.call(null, k, p1__15454_SHARP_, p2__15455_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__15469 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__15469__delegate.call(this, k, x, y, more)
    };
    G__15469.cljs$lang$maxFixedArity = 3;
    G__15469.cljs$lang$applyTo = function(arglist__15470) {
      var k = cljs.core.first(arglist__15470);
      var x = cljs.core.first(cljs.core.next(arglist__15470));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15470)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__15470)));
      return G__15469__delegate(k, x, y, more)
    };
    G__15469.cljs$lang$arity$variadic = G__15469__delegate;
    return G__15469
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__15471__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__15467_SHARP_, p2__15468_SHARP_) {
        return min_key.call(null, k, p1__15467_SHARP_, p2__15468_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__15471 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__15471__delegate.call(this, k, x, y, more)
    };
    G__15471.cljs$lang$maxFixedArity = 3;
    G__15471.cljs$lang$applyTo = function(arglist__15472) {
      var k = cljs.core.first(arglist__15472);
      var x = cljs.core.first(cljs.core.next(arglist__15472));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15472)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__15472)));
      return G__15471__delegate(k, x, y, more)
    };
    G__15471.cljs$lang$arity$variadic = G__15471__delegate;
    return G__15471
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____15475 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____15475) {
        var s__15476 = temp__3974__auto____15475;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__15476), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__15476)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____15479 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____15479) {
      var s__15480 = temp__3974__auto____15479;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__15480)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__15480), take_while.call(null, pred, cljs.core.rest.call(null, s__15480)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__15482 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__15482.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__15494 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____15495 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____15495)) {
        var vec__15496__15497 = temp__3974__auto____15495;
        var e__15498 = cljs.core.nth.call(null, vec__15496__15497, 0, null);
        var s__15499 = vec__15496__15497;
        if(cljs.core.truth_(include__15494.call(null, e__15498))) {
          return s__15499
        }else {
          return cljs.core.next.call(null, s__15499)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__15494, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____15500 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____15500)) {
      var vec__15501__15502 = temp__3974__auto____15500;
      var e__15503 = cljs.core.nth.call(null, vec__15501__15502, 0, null);
      var s__15504 = vec__15501__15502;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__15503)) ? s__15504 : cljs.core.next.call(null, s__15504))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__15516 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____15517 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____15517)) {
        var vec__15518__15519 = temp__3974__auto____15517;
        var e__15520 = cljs.core.nth.call(null, vec__15518__15519, 0, null);
        var s__15521 = vec__15518__15519;
        if(cljs.core.truth_(include__15516.call(null, e__15520))) {
          return s__15521
        }else {
          return cljs.core.next.call(null, s__15521)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__15516, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____15522 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____15522)) {
      var vec__15523__15524 = temp__3974__auto____15522;
      var e__15525 = cljs.core.nth.call(null, vec__15523__15524, 0, null);
      var s__15526 = vec__15523__15524;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__15525)) ? s__15526 : cljs.core.next.call(null, s__15526))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__15527 = this;
  var h__2093__auto____15528 = this__15527.__hash;
  if(!(h__2093__auto____15528 == null)) {
    return h__2093__auto____15528
  }else {
    var h__2093__auto____15529 = cljs.core.hash_coll.call(null, rng);
    this__15527.__hash = h__2093__auto____15529;
    return h__2093__auto____15529
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__15530 = this;
  if(this__15530.step > 0) {
    if(this__15530.start + this__15530.step < this__15530.end) {
      return new cljs.core.Range(this__15530.meta, this__15530.start + this__15530.step, this__15530.end, this__15530.step, null)
    }else {
      return null
    }
  }else {
    if(this__15530.start + this__15530.step > this__15530.end) {
      return new cljs.core.Range(this__15530.meta, this__15530.start + this__15530.step, this__15530.end, this__15530.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__15531 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__15532 = this;
  var this__15533 = this;
  return cljs.core.pr_str.call(null, this__15533)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__15534 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__15535 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__15536 = this;
  if(this__15536.step > 0) {
    if(this__15536.start < this__15536.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__15536.start > this__15536.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__15537 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__15537.end - this__15537.start) / this__15537.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__15538 = this;
  return this__15538.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__15539 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__15539.meta, this__15539.start + this__15539.step, this__15539.end, this__15539.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__15540 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__15541 = this;
  return new cljs.core.Range(meta, this__15541.start, this__15541.end, this__15541.step, this__15541.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__15542 = this;
  return this__15542.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__15543 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__15543.start + n * this__15543.step
  }else {
    if(function() {
      var and__3822__auto____15544 = this__15543.start > this__15543.end;
      if(and__3822__auto____15544) {
        return this__15543.step === 0
      }else {
        return and__3822__auto____15544
      }
    }()) {
      return this__15543.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__15545 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__15545.start + n * this__15545.step
  }else {
    if(function() {
      var and__3822__auto____15546 = this__15545.start > this__15545.end;
      if(and__3822__auto____15546) {
        return this__15545.step === 0
      }else {
        return and__3822__auto____15546
      }
    }()) {
      return this__15545.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__15547 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__15547.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____15550 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____15550) {
      var s__15551 = temp__3974__auto____15550;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__15551), take_nth.call(null, n, cljs.core.drop.call(null, n, s__15551)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____15558 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____15558) {
      var s__15559 = temp__3974__auto____15558;
      var fst__15560 = cljs.core.first.call(null, s__15559);
      var fv__15561 = f.call(null, fst__15560);
      var run__15562 = cljs.core.cons.call(null, fst__15560, cljs.core.take_while.call(null, function(p1__15552_SHARP_) {
        return cljs.core._EQ_.call(null, fv__15561, f.call(null, p1__15552_SHARP_))
      }, cljs.core.next.call(null, s__15559)));
      return cljs.core.cons.call(null, run__15562, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__15562), s__15559))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____15577 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____15577) {
        var s__15578 = temp__3971__auto____15577;
        return reductions.call(null, f, cljs.core.first.call(null, s__15578), cljs.core.rest.call(null, s__15578))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____15579 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____15579) {
        var s__15580 = temp__3974__auto____15579;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__15580)), cljs.core.rest.call(null, s__15580))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__15583 = null;
      var G__15583__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__15583__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__15583__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__15583__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__15583__4 = function() {
        var G__15584__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__15584 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__15584__delegate.call(this, x, y, z, args)
        };
        G__15584.cljs$lang$maxFixedArity = 3;
        G__15584.cljs$lang$applyTo = function(arglist__15585) {
          var x = cljs.core.first(arglist__15585);
          var y = cljs.core.first(cljs.core.next(arglist__15585));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15585)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__15585)));
          return G__15584__delegate(x, y, z, args)
        };
        G__15584.cljs$lang$arity$variadic = G__15584__delegate;
        return G__15584
      }();
      G__15583 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15583__0.call(this);
          case 1:
            return G__15583__1.call(this, x);
          case 2:
            return G__15583__2.call(this, x, y);
          case 3:
            return G__15583__3.call(this, x, y, z);
          default:
            return G__15583__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__15583.cljs$lang$maxFixedArity = 3;
      G__15583.cljs$lang$applyTo = G__15583__4.cljs$lang$applyTo;
      return G__15583
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__15586 = null;
      var G__15586__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__15586__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__15586__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__15586__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__15586__4 = function() {
        var G__15587__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__15587 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__15587__delegate.call(this, x, y, z, args)
        };
        G__15587.cljs$lang$maxFixedArity = 3;
        G__15587.cljs$lang$applyTo = function(arglist__15588) {
          var x = cljs.core.first(arglist__15588);
          var y = cljs.core.first(cljs.core.next(arglist__15588));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15588)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__15588)));
          return G__15587__delegate(x, y, z, args)
        };
        G__15587.cljs$lang$arity$variadic = G__15587__delegate;
        return G__15587
      }();
      G__15586 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15586__0.call(this);
          case 1:
            return G__15586__1.call(this, x);
          case 2:
            return G__15586__2.call(this, x, y);
          case 3:
            return G__15586__3.call(this, x, y, z);
          default:
            return G__15586__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__15586.cljs$lang$maxFixedArity = 3;
      G__15586.cljs$lang$applyTo = G__15586__4.cljs$lang$applyTo;
      return G__15586
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__15589 = null;
      var G__15589__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__15589__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__15589__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__15589__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__15589__4 = function() {
        var G__15590__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__15590 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__15590__delegate.call(this, x, y, z, args)
        };
        G__15590.cljs$lang$maxFixedArity = 3;
        G__15590.cljs$lang$applyTo = function(arglist__15591) {
          var x = cljs.core.first(arglist__15591);
          var y = cljs.core.first(cljs.core.next(arglist__15591));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15591)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__15591)));
          return G__15590__delegate(x, y, z, args)
        };
        G__15590.cljs$lang$arity$variadic = G__15590__delegate;
        return G__15590
      }();
      G__15589 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15589__0.call(this);
          case 1:
            return G__15589__1.call(this, x);
          case 2:
            return G__15589__2.call(this, x, y);
          case 3:
            return G__15589__3.call(this, x, y, z);
          default:
            return G__15589__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__15589.cljs$lang$maxFixedArity = 3;
      G__15589.cljs$lang$applyTo = G__15589__4.cljs$lang$applyTo;
      return G__15589
    }()
  };
  var juxt__4 = function() {
    var G__15592__delegate = function(f, g, h, fs) {
      var fs__15582 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__15593 = null;
        var G__15593__0 = function() {
          return cljs.core.reduce.call(null, function(p1__15563_SHARP_, p2__15564_SHARP_) {
            return cljs.core.conj.call(null, p1__15563_SHARP_, p2__15564_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__15582)
        };
        var G__15593__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__15565_SHARP_, p2__15566_SHARP_) {
            return cljs.core.conj.call(null, p1__15565_SHARP_, p2__15566_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__15582)
        };
        var G__15593__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__15567_SHARP_, p2__15568_SHARP_) {
            return cljs.core.conj.call(null, p1__15567_SHARP_, p2__15568_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__15582)
        };
        var G__15593__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__15569_SHARP_, p2__15570_SHARP_) {
            return cljs.core.conj.call(null, p1__15569_SHARP_, p2__15570_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__15582)
        };
        var G__15593__4 = function() {
          var G__15594__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__15571_SHARP_, p2__15572_SHARP_) {
              return cljs.core.conj.call(null, p1__15571_SHARP_, cljs.core.apply.call(null, p2__15572_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__15582)
          };
          var G__15594 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__15594__delegate.call(this, x, y, z, args)
          };
          G__15594.cljs$lang$maxFixedArity = 3;
          G__15594.cljs$lang$applyTo = function(arglist__15595) {
            var x = cljs.core.first(arglist__15595);
            var y = cljs.core.first(cljs.core.next(arglist__15595));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15595)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__15595)));
            return G__15594__delegate(x, y, z, args)
          };
          G__15594.cljs$lang$arity$variadic = G__15594__delegate;
          return G__15594
        }();
        G__15593 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__15593__0.call(this);
            case 1:
              return G__15593__1.call(this, x);
            case 2:
              return G__15593__2.call(this, x, y);
            case 3:
              return G__15593__3.call(this, x, y, z);
            default:
              return G__15593__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__15593.cljs$lang$maxFixedArity = 3;
        G__15593.cljs$lang$applyTo = G__15593__4.cljs$lang$applyTo;
        return G__15593
      }()
    };
    var G__15592 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__15592__delegate.call(this, f, g, h, fs)
    };
    G__15592.cljs$lang$maxFixedArity = 3;
    G__15592.cljs$lang$applyTo = function(arglist__15596) {
      var f = cljs.core.first(arglist__15596);
      var g = cljs.core.first(cljs.core.next(arglist__15596));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15596)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__15596)));
      return G__15592__delegate(f, g, h, fs)
    };
    G__15592.cljs$lang$arity$variadic = G__15592__delegate;
    return G__15592
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__15599 = cljs.core.next.call(null, coll);
        coll = G__15599;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____15598 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____15598) {
          return n > 0
        }else {
          return and__3822__auto____15598
        }
      }())) {
        var G__15600 = n - 1;
        var G__15601 = cljs.core.next.call(null, coll);
        n = G__15600;
        coll = G__15601;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__15603 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__15603), s)) {
    if(cljs.core.count.call(null, matches__15603) === 1) {
      return cljs.core.first.call(null, matches__15603)
    }else {
      return cljs.core.vec.call(null, matches__15603)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__15605 = re.exec(s);
  if(matches__15605 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__15605) === 1) {
      return cljs.core.first.call(null, matches__15605)
    }else {
      return cljs.core.vec.call(null, matches__15605)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__15610 = cljs.core.re_find.call(null, re, s);
  var match_idx__15611 = s.search(re);
  var match_str__15612 = cljs.core.coll_QMARK_.call(null, match_data__15610) ? cljs.core.first.call(null, match_data__15610) : match_data__15610;
  var post_match__15613 = cljs.core.subs.call(null, s, match_idx__15611 + cljs.core.count.call(null, match_str__15612));
  if(cljs.core.truth_(match_data__15610)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__15610, re_seq.call(null, re, post_match__15613))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__15620__15621 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___15622 = cljs.core.nth.call(null, vec__15620__15621, 0, null);
  var flags__15623 = cljs.core.nth.call(null, vec__15620__15621, 1, null);
  var pattern__15624 = cljs.core.nth.call(null, vec__15620__15621, 2, null);
  return new RegExp(pattern__15624, flags__15623)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__15614_SHARP_) {
    return print_one.call(null, p1__15614_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____15634 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____15634)) {
            var and__3822__auto____15638 = function() {
              var G__15635__15636 = obj;
              if(G__15635__15636) {
                if(function() {
                  var or__3824__auto____15637 = G__15635__15636.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____15637) {
                    return or__3824__auto____15637
                  }else {
                    return G__15635__15636.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__15635__15636.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__15635__15636)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__15635__15636)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____15638)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____15638
            }
          }else {
            return and__3822__auto____15634
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____15639 = !(obj == null);
          if(and__3822__auto____15639) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____15639
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__15640__15641 = obj;
          if(G__15640__15641) {
            if(function() {
              var or__3824__auto____15642 = G__15640__15641.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____15642) {
                return or__3824__auto____15642
              }else {
                return G__15640__15641.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__15640__15641.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__15640__15641)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__15640__15641)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__15662 = new goog.string.StringBuffer;
  var G__15663__15664 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__15663__15664) {
    var string__15665 = cljs.core.first.call(null, G__15663__15664);
    var G__15663__15666 = G__15663__15664;
    while(true) {
      sb__15662.append(string__15665);
      var temp__3974__auto____15667 = cljs.core.next.call(null, G__15663__15666);
      if(temp__3974__auto____15667) {
        var G__15663__15668 = temp__3974__auto____15667;
        var G__15681 = cljs.core.first.call(null, G__15663__15668);
        var G__15682 = G__15663__15668;
        string__15665 = G__15681;
        G__15663__15666 = G__15682;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__15669__15670 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__15669__15670) {
    var obj__15671 = cljs.core.first.call(null, G__15669__15670);
    var G__15669__15672 = G__15669__15670;
    while(true) {
      sb__15662.append(" ");
      var G__15673__15674 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__15671, opts));
      if(G__15673__15674) {
        var string__15675 = cljs.core.first.call(null, G__15673__15674);
        var G__15673__15676 = G__15673__15674;
        while(true) {
          sb__15662.append(string__15675);
          var temp__3974__auto____15677 = cljs.core.next.call(null, G__15673__15676);
          if(temp__3974__auto____15677) {
            var G__15673__15678 = temp__3974__auto____15677;
            var G__15683 = cljs.core.first.call(null, G__15673__15678);
            var G__15684 = G__15673__15678;
            string__15675 = G__15683;
            G__15673__15676 = G__15684;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____15679 = cljs.core.next.call(null, G__15669__15672);
      if(temp__3974__auto____15679) {
        var G__15669__15680 = temp__3974__auto____15679;
        var G__15685 = cljs.core.first.call(null, G__15669__15680);
        var G__15686 = G__15669__15680;
        obj__15671 = G__15685;
        G__15669__15672 = G__15686;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__15662
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__15688 = cljs.core.pr_sb.call(null, objs, opts);
  sb__15688.append("\n");
  return[cljs.core.str(sb__15688)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__15707__15708 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__15707__15708) {
    var string__15709 = cljs.core.first.call(null, G__15707__15708);
    var G__15707__15710 = G__15707__15708;
    while(true) {
      cljs.core.string_print.call(null, string__15709);
      var temp__3974__auto____15711 = cljs.core.next.call(null, G__15707__15710);
      if(temp__3974__auto____15711) {
        var G__15707__15712 = temp__3974__auto____15711;
        var G__15725 = cljs.core.first.call(null, G__15707__15712);
        var G__15726 = G__15707__15712;
        string__15709 = G__15725;
        G__15707__15710 = G__15726;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__15713__15714 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__15713__15714) {
    var obj__15715 = cljs.core.first.call(null, G__15713__15714);
    var G__15713__15716 = G__15713__15714;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__15717__15718 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__15715, opts));
      if(G__15717__15718) {
        var string__15719 = cljs.core.first.call(null, G__15717__15718);
        var G__15717__15720 = G__15717__15718;
        while(true) {
          cljs.core.string_print.call(null, string__15719);
          var temp__3974__auto____15721 = cljs.core.next.call(null, G__15717__15720);
          if(temp__3974__auto____15721) {
            var G__15717__15722 = temp__3974__auto____15721;
            var G__15727 = cljs.core.first.call(null, G__15717__15722);
            var G__15728 = G__15717__15722;
            string__15719 = G__15727;
            G__15717__15720 = G__15728;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____15723 = cljs.core.next.call(null, G__15713__15716);
      if(temp__3974__auto____15723) {
        var G__15713__15724 = temp__3974__auto____15723;
        var G__15729 = cljs.core.first.call(null, G__15713__15724);
        var G__15730 = G__15713__15724;
        obj__15715 = G__15729;
        G__15713__15716 = G__15730;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__15731) {
    var objs = cljs.core.seq(arglist__15731);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__15732) {
    var objs = cljs.core.seq(arglist__15732);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__15733) {
    var objs = cljs.core.seq(arglist__15733);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__15734) {
    var objs = cljs.core.seq(arglist__15734);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__15735) {
    var objs = cljs.core.seq(arglist__15735);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__15736) {
    var objs = cljs.core.seq(arglist__15736);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__15737) {
    var objs = cljs.core.seq(arglist__15737);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__15738) {
    var objs = cljs.core.seq(arglist__15738);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__15739) {
    var fmt = cljs.core.first(arglist__15739);
    var args = cljs.core.rest(arglist__15739);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__15740 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__15740, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__15741 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__15741, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__15742 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__15742, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____15743 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____15743)) {
        var nspc__15744 = temp__3974__auto____15743;
        return[cljs.core.str(nspc__15744), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____15745 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____15745)) {
          var nspc__15746 = temp__3974__auto____15745;
          return[cljs.core.str(nspc__15746), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__15747 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__15747, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__15749 = function(n, len) {
    var ns__15748 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__15748) < len) {
        var G__15751 = [cljs.core.str("0"), cljs.core.str(ns__15748)].join("");
        ns__15748 = G__15751;
        continue
      }else {
        return ns__15748
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__15749.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__15749.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__15749.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__15749.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__15749.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__15749.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__15750 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__15750, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__15752 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__15753 = this;
  var G__15754__15755 = cljs.core.seq.call(null, this__15753.watches);
  if(G__15754__15755) {
    var G__15757__15759 = cljs.core.first.call(null, G__15754__15755);
    var vec__15758__15760 = G__15757__15759;
    var key__15761 = cljs.core.nth.call(null, vec__15758__15760, 0, null);
    var f__15762 = cljs.core.nth.call(null, vec__15758__15760, 1, null);
    var G__15754__15763 = G__15754__15755;
    var G__15757__15764 = G__15757__15759;
    var G__15754__15765 = G__15754__15763;
    while(true) {
      var vec__15766__15767 = G__15757__15764;
      var key__15768 = cljs.core.nth.call(null, vec__15766__15767, 0, null);
      var f__15769 = cljs.core.nth.call(null, vec__15766__15767, 1, null);
      var G__15754__15770 = G__15754__15765;
      f__15769.call(null, key__15768, this$, oldval, newval);
      var temp__3974__auto____15771 = cljs.core.next.call(null, G__15754__15770);
      if(temp__3974__auto____15771) {
        var G__15754__15772 = temp__3974__auto____15771;
        var G__15779 = cljs.core.first.call(null, G__15754__15772);
        var G__15780 = G__15754__15772;
        G__15757__15764 = G__15779;
        G__15754__15765 = G__15780;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__15773 = this;
  return this$.watches = cljs.core.assoc.call(null, this__15773.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__15774 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__15774.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__15775 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__15775.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__15776 = this;
  return this__15776.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__15777 = this;
  return this__15777.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__15778 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__15792__delegate = function(x, p__15781) {
      var map__15787__15788 = p__15781;
      var map__15787__15789 = cljs.core.seq_QMARK_.call(null, map__15787__15788) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15787__15788) : map__15787__15788;
      var validator__15790 = cljs.core._lookup.call(null, map__15787__15789, "\ufdd0'validator", null);
      var meta__15791 = cljs.core._lookup.call(null, map__15787__15789, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__15791, validator__15790, null)
    };
    var G__15792 = function(x, var_args) {
      var p__15781 = null;
      if(goog.isDef(var_args)) {
        p__15781 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__15792__delegate.call(this, x, p__15781)
    };
    G__15792.cljs$lang$maxFixedArity = 1;
    G__15792.cljs$lang$applyTo = function(arglist__15793) {
      var x = cljs.core.first(arglist__15793);
      var p__15781 = cljs.core.rest(arglist__15793);
      return G__15792__delegate(x, p__15781)
    };
    G__15792.cljs$lang$arity$variadic = G__15792__delegate;
    return G__15792
  }();
  atom = function(x, var_args) {
    var p__15781 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____15797 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____15797)) {
    var validate__15798 = temp__3974__auto____15797;
    if(cljs.core.truth_(validate__15798.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440))))].join(""));
    }
  }else {
  }
  var old_value__15799 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__15799, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__15800__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__15800 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__15800__delegate.call(this, a, f, x, y, z, more)
    };
    G__15800.cljs$lang$maxFixedArity = 5;
    G__15800.cljs$lang$applyTo = function(arglist__15801) {
      var a = cljs.core.first(arglist__15801);
      var f = cljs.core.first(cljs.core.next(arglist__15801));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__15801)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__15801))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__15801)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__15801)))));
      return G__15800__delegate(a, f, x, y, z, more)
    };
    G__15800.cljs$lang$arity$variadic = G__15800__delegate;
    return G__15800
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__15802) {
    var iref = cljs.core.first(arglist__15802);
    var f = cljs.core.first(cljs.core.next(arglist__15802));
    var args = cljs.core.rest(cljs.core.next(arglist__15802));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__15803 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__15803.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__15804 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__15804.state, function(p__15805) {
    var map__15806__15807 = p__15805;
    var map__15806__15808 = cljs.core.seq_QMARK_.call(null, map__15806__15807) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15806__15807) : map__15806__15807;
    var curr_state__15809 = map__15806__15808;
    var done__15810 = cljs.core._lookup.call(null, map__15806__15808, "\ufdd0'done", null);
    if(cljs.core.truth_(done__15810)) {
      return curr_state__15809
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__15804.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__15831__15832 = options;
    var map__15831__15833 = cljs.core.seq_QMARK_.call(null, map__15831__15832) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15831__15832) : map__15831__15832;
    var keywordize_keys__15834 = cljs.core._lookup.call(null, map__15831__15833, "\ufdd0'keywordize-keys", null);
    var keyfn__15835 = cljs.core.truth_(keywordize_keys__15834) ? cljs.core.keyword : cljs.core.str;
    var f__15850 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2363__auto____15849 = function iter__15843(s__15844) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__15844__15847 = s__15844;
                    while(true) {
                      if(cljs.core.seq.call(null, s__15844__15847)) {
                        var k__15848 = cljs.core.first.call(null, s__15844__15847);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__15835.call(null, k__15848), thisfn.call(null, x[k__15848])], true), iter__15843.call(null, cljs.core.rest.call(null, s__15844__15847)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2363__auto____15849.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__15850.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__15851) {
    var x = cljs.core.first(arglist__15851);
    var options = cljs.core.rest(arglist__15851);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__15856 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__15860__delegate = function(args) {
      var temp__3971__auto____15857 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__15856), args, null);
      if(cljs.core.truth_(temp__3971__auto____15857)) {
        var v__15858 = temp__3971__auto____15857;
        return v__15858
      }else {
        var ret__15859 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__15856, cljs.core.assoc, args, ret__15859);
        return ret__15859
      }
    };
    var G__15860 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__15860__delegate.call(this, args)
    };
    G__15860.cljs$lang$maxFixedArity = 0;
    G__15860.cljs$lang$applyTo = function(arglist__15861) {
      var args = cljs.core.seq(arglist__15861);
      return G__15860__delegate(args)
    };
    G__15860.cljs$lang$arity$variadic = G__15860__delegate;
    return G__15860
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__15863 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__15863)) {
        var G__15864 = ret__15863;
        f = G__15864;
        continue
      }else {
        return ret__15863
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__15865__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__15865 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__15865__delegate.call(this, f, args)
    };
    G__15865.cljs$lang$maxFixedArity = 1;
    G__15865.cljs$lang$applyTo = function(arglist__15866) {
      var f = cljs.core.first(arglist__15866);
      var args = cljs.core.rest(arglist__15866);
      return G__15865__delegate(f, args)
    };
    G__15865.cljs$lang$arity$variadic = G__15865__delegate;
    return G__15865
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__15868 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__15868, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__15868, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____15877 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____15877) {
      return or__3824__auto____15877
    }else {
      var or__3824__auto____15878 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____15878) {
        return or__3824__auto____15878
      }else {
        var and__3822__auto____15879 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____15879) {
          var and__3822__auto____15880 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____15880) {
            var and__3822__auto____15881 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____15881) {
              var ret__15882 = true;
              var i__15883 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____15884 = cljs.core.not.call(null, ret__15882);
                  if(or__3824__auto____15884) {
                    return or__3824__auto____15884
                  }else {
                    return i__15883 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__15882
                }else {
                  var G__15885 = isa_QMARK_.call(null, h, child.call(null, i__15883), parent.call(null, i__15883));
                  var G__15886 = i__15883 + 1;
                  ret__15882 = G__15885;
                  i__15883 = G__15886;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____15881
            }
          }else {
            return and__3822__auto____15880
          }
        }else {
          return and__3822__auto____15879
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728))))].join(""));
    }
    var tp__15895 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__15896 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__15897 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__15898 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____15899 = cljs.core.contains_QMARK_.call(null, tp__15895.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__15897.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__15897.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__15895, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__15898.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__15896, parent, ta__15897), "\ufdd0'descendants":tf__15898.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__15897, tag, td__15896)})
    }();
    if(cljs.core.truth_(or__3824__auto____15899)) {
      return or__3824__auto____15899
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__15904 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__15905 = cljs.core.truth_(parentMap__15904.call(null, tag)) ? cljs.core.disj.call(null, parentMap__15904.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__15906 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__15905)) ? cljs.core.assoc.call(null, parentMap__15904, tag, childsParents__15905) : cljs.core.dissoc.call(null, parentMap__15904, tag);
    var deriv_seq__15907 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__15887_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__15887_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__15887_SHARP_), cljs.core.second.call(null, p1__15887_SHARP_)))
    }, cljs.core.seq.call(null, newParents__15906)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__15904.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__15888_SHARP_, p2__15889_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__15888_SHARP_, p2__15889_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__15907))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__15915 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____15917 = cljs.core.truth_(function() {
    var and__3822__auto____15916 = xprefs__15915;
    if(cljs.core.truth_(and__3822__auto____15916)) {
      return xprefs__15915.call(null, y)
    }else {
      return and__3822__auto____15916
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____15917)) {
    return or__3824__auto____15917
  }else {
    var or__3824__auto____15919 = function() {
      var ps__15918 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__15918) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__15918), prefer_table))) {
          }else {
          }
          var G__15922 = cljs.core.rest.call(null, ps__15918);
          ps__15918 = G__15922;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____15919)) {
      return or__3824__auto____15919
    }else {
      var or__3824__auto____15921 = function() {
        var ps__15920 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__15920) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__15920), y, prefer_table))) {
            }else {
            }
            var G__15923 = cljs.core.rest.call(null, ps__15920);
            ps__15920 = G__15923;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____15921)) {
        return or__3824__auto____15921
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____15925 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____15925)) {
    return or__3824__auto____15925
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__15943 = cljs.core.reduce.call(null, function(be, p__15935) {
    var vec__15936__15937 = p__15935;
    var k__15938 = cljs.core.nth.call(null, vec__15936__15937, 0, null);
    var ___15939 = cljs.core.nth.call(null, vec__15936__15937, 1, null);
    var e__15940 = vec__15936__15937;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__15938)) {
      var be2__15942 = cljs.core.truth_(function() {
        var or__3824__auto____15941 = be == null;
        if(or__3824__auto____15941) {
          return or__3824__auto____15941
        }else {
          return cljs.core.dominates.call(null, k__15938, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__15940 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__15942), k__15938, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__15938), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__15942)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__15942
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__15943)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__15943));
      return cljs.core.second.call(null, best_entry__15943)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____15948 = mf;
    if(and__3822__auto____15948) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____15948
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2264__auto____15949 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15950 = cljs.core._reset[goog.typeOf(x__2264__auto____15949)];
      if(or__3824__auto____15950) {
        return or__3824__auto____15950
      }else {
        var or__3824__auto____15951 = cljs.core._reset["_"];
        if(or__3824__auto____15951) {
          return or__3824__auto____15951
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____15956 = mf;
    if(and__3822__auto____15956) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____15956
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2264__auto____15957 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15958 = cljs.core._add_method[goog.typeOf(x__2264__auto____15957)];
      if(or__3824__auto____15958) {
        return or__3824__auto____15958
      }else {
        var or__3824__auto____15959 = cljs.core._add_method["_"];
        if(or__3824__auto____15959) {
          return or__3824__auto____15959
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____15964 = mf;
    if(and__3822__auto____15964) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____15964
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2264__auto____15965 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15966 = cljs.core._remove_method[goog.typeOf(x__2264__auto____15965)];
      if(or__3824__auto____15966) {
        return or__3824__auto____15966
      }else {
        var or__3824__auto____15967 = cljs.core._remove_method["_"];
        if(or__3824__auto____15967) {
          return or__3824__auto____15967
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____15972 = mf;
    if(and__3822__auto____15972) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____15972
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2264__auto____15973 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15974 = cljs.core._prefer_method[goog.typeOf(x__2264__auto____15973)];
      if(or__3824__auto____15974) {
        return or__3824__auto____15974
      }else {
        var or__3824__auto____15975 = cljs.core._prefer_method["_"];
        if(or__3824__auto____15975) {
          return or__3824__auto____15975
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____15980 = mf;
    if(and__3822__auto____15980) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____15980
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2264__auto____15981 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15982 = cljs.core._get_method[goog.typeOf(x__2264__auto____15981)];
      if(or__3824__auto____15982) {
        return or__3824__auto____15982
      }else {
        var or__3824__auto____15983 = cljs.core._get_method["_"];
        if(or__3824__auto____15983) {
          return or__3824__auto____15983
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____15988 = mf;
    if(and__3822__auto____15988) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____15988
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2264__auto____15989 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15990 = cljs.core._methods[goog.typeOf(x__2264__auto____15989)];
      if(or__3824__auto____15990) {
        return or__3824__auto____15990
      }else {
        var or__3824__auto____15991 = cljs.core._methods["_"];
        if(or__3824__auto____15991) {
          return or__3824__auto____15991
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____15996 = mf;
    if(and__3822__auto____15996) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____15996
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2264__auto____15997 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15998 = cljs.core._prefers[goog.typeOf(x__2264__auto____15997)];
      if(or__3824__auto____15998) {
        return or__3824__auto____15998
      }else {
        var or__3824__auto____15999 = cljs.core._prefers["_"];
        if(or__3824__auto____15999) {
          return or__3824__auto____15999
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____16004 = mf;
    if(and__3822__auto____16004) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____16004
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2264__auto____16005 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____16006 = cljs.core._dispatch[goog.typeOf(x__2264__auto____16005)];
      if(or__3824__auto____16006) {
        return or__3824__auto____16006
      }else {
        var or__3824__auto____16007 = cljs.core._dispatch["_"];
        if(or__3824__auto____16007) {
          return or__3824__auto____16007
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__16010 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__16011 = cljs.core._get_method.call(null, mf, dispatch_val__16010);
  if(cljs.core.truth_(target_fn__16011)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__16010)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__16011, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__16012 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__16013 = this;
  cljs.core.swap_BANG_.call(null, this__16013.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__16013.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__16013.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__16013.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__16014 = this;
  cljs.core.swap_BANG_.call(null, this__16014.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__16014.method_cache, this__16014.method_table, this__16014.cached_hierarchy, this__16014.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__16015 = this;
  cljs.core.swap_BANG_.call(null, this__16015.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__16015.method_cache, this__16015.method_table, this__16015.cached_hierarchy, this__16015.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__16016 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__16016.cached_hierarchy), cljs.core.deref.call(null, this__16016.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__16016.method_cache, this__16016.method_table, this__16016.cached_hierarchy, this__16016.hierarchy)
  }
  var temp__3971__auto____16017 = cljs.core.deref.call(null, this__16016.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____16017)) {
    var target_fn__16018 = temp__3971__auto____16017;
    return target_fn__16018
  }else {
    var temp__3971__auto____16019 = cljs.core.find_and_cache_best_method.call(null, this__16016.name, dispatch_val, this__16016.hierarchy, this__16016.method_table, this__16016.prefer_table, this__16016.method_cache, this__16016.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____16019)) {
      var target_fn__16020 = temp__3971__auto____16019;
      return target_fn__16020
    }else {
      return cljs.core.deref.call(null, this__16016.method_table).call(null, this__16016.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__16021 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__16021.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__16021.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__16021.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__16021.method_cache, this__16021.method_table, this__16021.cached_hierarchy, this__16021.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__16022 = this;
  return cljs.core.deref.call(null, this__16022.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__16023 = this;
  return cljs.core.deref.call(null, this__16023.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__16024 = this;
  return cljs.core.do_dispatch.call(null, mf, this__16024.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__16026__delegate = function(_, args) {
    var self__16025 = this;
    return cljs.core._dispatch.call(null, self__16025, args)
  };
  var G__16026 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__16026__delegate.call(this, _, args)
  };
  G__16026.cljs$lang$maxFixedArity = 1;
  G__16026.cljs$lang$applyTo = function(arglist__16027) {
    var _ = cljs.core.first(arglist__16027);
    var args = cljs.core.rest(arglist__16027);
    return G__16026__delegate(_, args)
  };
  G__16026.cljs$lang$arity$variadic = G__16026__delegate;
  return G__16026
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__16028 = this;
  return cljs.core._dispatch.call(null, self__16028, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__16029 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_16031, _) {
  var this__16030 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__16030.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__16032 = this;
  var and__3822__auto____16033 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____16033) {
    return this__16032.uuid === other.uuid
  }else {
    return and__3822__auto____16033
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__16034 = this;
  var this__16035 = this;
  return cljs.core.pr_str.call(null, this__16035)
};
cljs.core.UUID;
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isDocumentModeCache_ = {};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.isDocumentModeCache_[documentMode] || (goog.userAgent.isDocumentModeCache_[documentMode] = goog.userAgent.IE && document.documentMode && document.documentMode >= documentMode)
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__19346 = s;
      var limit__19347 = limit;
      var parts__19348 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__19347, 1)) {
          return cljs.core.conj.call(null, parts__19348, s__19346)
        }else {
          var temp__3971__auto____19349 = cljs.core.re_find.call(null, re, s__19346);
          if(cljs.core.truth_(temp__3971__auto____19349)) {
            var m__19350 = temp__3971__auto____19349;
            var index__19351 = s__19346.indexOf(m__19350);
            var G__19352 = s__19346.substring(index__19351 + cljs.core.count.call(null, m__19350));
            var G__19353 = limit__19347 - 1;
            var G__19354 = cljs.core.conj.call(null, parts__19348, s__19346.substring(0, index__19351));
            s__19346 = G__19352;
            limit__19347 = G__19353;
            parts__19348 = G__19354;
            continue
          }else {
            return cljs.core.conj.call(null, parts__19348, s__19346)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__19358 = s.length;
  while(true) {
    if(index__19358 === 0) {
      return""
    }else {
      var ch__19359 = cljs.core._lookup.call(null, s, index__19358 - 1, null);
      if(function() {
        var or__3824__auto____19360 = cljs.core._EQ_.call(null, ch__19359, "\n");
        if(or__3824__auto____19360) {
          return or__3824__auto____19360
        }else {
          return cljs.core._EQ_.call(null, ch__19359, "\r")
        }
      }()) {
        var G__19361 = index__19358 - 1;
        index__19358 = G__19361;
        continue
      }else {
        return s.substring(0, index__19358)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__19365 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____19366 = cljs.core.not.call(null, s__19365);
    if(or__3824__auto____19366) {
      return or__3824__auto____19366
    }else {
      var or__3824__auto____19367 = cljs.core._EQ_.call(null, "", s__19365);
      if(or__3824__auto____19367) {
        return or__3824__auto____19367
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__19365)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__19374 = new goog.string.StringBuffer;
  var length__19375 = s.length;
  var index__19376 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__19375, index__19376)) {
      return buffer__19374.toString()
    }else {
      var ch__19377 = s.charAt(index__19376);
      var temp__3971__auto____19378 = cljs.core._lookup.call(null, cmap, ch__19377, null);
      if(cljs.core.truth_(temp__3971__auto____19378)) {
        var replacement__19379 = temp__3971__auto____19378;
        buffer__19374.append([cljs.core.str(replacement__19379)].join(""))
      }else {
        buffer__19374.append(ch__19377)
      }
      var G__19380 = index__19376 + 1;
      index__19376 = G__19380;
      continue
    }
    break
  }
};
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if(opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if(document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null)
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if(doc) {
        if(opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""))
        }
        return doc
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if(typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml")
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if(typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml)
  }
  var text = xml.xml;
  if(text) {
    return text
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if(typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectSingleNode(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue
    }
  }
  return null
};
goog.dom.xml.selectNodes = function(node, path) {
  if(typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectNodes(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for(var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i))
      }
      return results
    }else {
      return[]
    }
  }
};
goog.dom.xml.setAttributes = function(element, attributes) {
  for(var key in attributes) {
    if(attributes.hasOwnProperty(key)) {
      element.setAttribute(key, attributes[key])
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if(doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH)
    }catch(e) {
    }
  }
  return doc
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x)
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return goog.style.getSizeWithDisplay_(element)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var size = goog.style.getSizeWithDisplay_(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return size
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top)
  }
  return new goog.math.Size(offsetWidth, offsetHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if(opt_className) {
    outerDiv.className = opt_className
  }
  outerDiv.style.cssText = "visiblity:hidden;overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("&")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    var type = el.type.toLowerCase();
    switch(type) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "=" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, opt_value);
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, opt_value);
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, opt_value);
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for(var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.dependentDisposables_;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  if(!this.dependentDisposables_) {
    this.dependentDisposables_ = []
  }
  this.dependentDisposables_.push(disposable)
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.dependentDisposables_) {
    goog.disposeAll.apply(null, this.dependentDisposables_)
  }
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if(goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable)
    }else {
      goog.dispose(disposable)
    }
  }
};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true
  }catch(e) {
  }
  return false
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      if(!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.ASSUME_GOOD_GC = false;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = {count_:0, remaining_:0}
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = {count_:0, remaining_:0};
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = [];
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.getProxy();
      proxy.src = src;
      listenerObj = new goog.events.Listener;
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = []
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.key, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.key, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(!listenerArray[i].removed && listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = [];
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0
      }
      evt.dispose()
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.dom");
var div__17323 = document.createElement("div");
var test_html__17324 = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
div__17323.innerHTML = test_html__17324;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div__17323.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div__17323.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div__17323.getElementsByTagName("link").length, 0);
goog.provide("domina");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.dom.classes");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper__16915 = cljs.core.PersistentVector.fromArray([1, "<select multiple='multiple'>", "</select>"], true);
var table_section_wrapper__16916 = cljs.core.PersistentVector.fromArray([1, "<table>", "</table>"], true);
var cell_wrapper__16917 = cljs.core.PersistentVector.fromArray([3, "<table><tbody><tr>", "</tr></tbody></table>"], true);
domina.wrap_map = cljs.core.ObjMap.fromObject(["col", "\ufdd0'default", "tfoot", "caption", "optgroup", "legend", "area", "td", "thead", "th", "option", "tbody", "tr", "colgroup"], {"col":cljs.core.PersistentVector.fromArray([2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], true), "\ufdd0'default":cljs.core.PersistentVector.fromArray([0, "", ""], true), "tfoot":table_section_wrapper__16916, "caption":table_section_wrapper__16916, "optgroup":opt_wrapper__16915, "legend":cljs.core.PersistentVector.fromArray([1, 
"<fieldset>", "</fieldset>"], true), "area":cljs.core.PersistentVector.fromArray([1, "<map>", "</map>"], true), "td":cell_wrapper__16917, "thead":table_section_wrapper__16916, "th":cell_wrapper__16917, "option":opt_wrapper__16915, "tbody":table_section_wrapper__16916, "tr":cljs.core.PersistentVector.fromArray([2, "<table><tbody>", "</tbody></table>"], true), "colgroup":table_section_wrapper__16916});
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html, tag_name, start_wrap) {
  var no_tbody_QMARK___16930 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody__16934 = function() {
    var and__3822__auto____16931 = cljs.core._EQ_.call(null, tag_name, "table");
    if(and__3822__auto____16931) {
      return no_tbody_QMARK___16930
    }else {
      return and__3822__auto____16931
    }
  }() ? function() {
    var and__3822__auto____16932 = div.firstChild;
    if(cljs.core.truth_(and__3822__auto____16932)) {
      return div.firstChild.childNodes
    }else {
      return and__3822__auto____16932
    }
  }() : function() {
    var and__3822__auto____16933 = cljs.core._EQ_.call(null, start_wrap, "<table>");
    if(and__3822__auto____16933) {
      return no_tbody_QMARK___16930
    }else {
      return and__3822__auto____16933
    }
  }() ? divchildNodes : cljs.core.PersistentVector.EMPTY;
  var G__16935__16936 = cljs.core.seq.call(null, tbody__16934);
  if(G__16935__16936) {
    var child__16937 = cljs.core.first.call(null, G__16935__16936);
    var G__16935__16938 = G__16935__16936;
    while(true) {
      if(function() {
        var and__3822__auto____16939 = cljs.core._EQ_.call(null, child__16937.nodeName, "tbody");
        if(and__3822__auto____16939) {
          return cljs.core._EQ_.call(null, child__16937.childNodes.length, 0)
        }else {
          return and__3822__auto____16939
        }
      }()) {
        child__16937.parentNode.removeChild(child__16937)
      }else {
      }
      var temp__3974__auto____16940 = cljs.core.next.call(null, G__16935__16938);
      if(temp__3974__auto____16940) {
        var G__16935__16941 = temp__3974__auto____16940;
        var G__16942 = cljs.core.first.call(null, G__16935__16941);
        var G__16943 = G__16935__16941;
        child__16937 = G__16942;
        G__16935__16938 = G__16943;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild)
};
domina.html_to_dom = function html_to_dom(html) {
  var html__16957 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "<$1></$2>");
  var tag_name__16958 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__16957)))].join("").toLowerCase();
  var vec__16956__16959 = cljs.core._lookup.call(null, domina.wrap_map, tag_name__16958, (new cljs.core.Keyword("\ufdd0'default")).call(null, domina.wrap_map));
  var depth__16960 = cljs.core.nth.call(null, vec__16956__16959, 0, null);
  var start_wrap__16961 = cljs.core.nth.call(null, vec__16956__16959, 1, null);
  var end_wrap__16962 = cljs.core.nth.call(null, vec__16956__16959, 2, null);
  var div__16966 = function() {
    var wrapper__16964 = function() {
      var div__16963 = document.createElement("div");
      div__16963.innerHTML = [cljs.core.str(start_wrap__16961), cljs.core.str(html__16957), cljs.core.str(end_wrap__16962)].join("");
      return div__16963
    }();
    var level__16965 = depth__16960;
    while(true) {
      if(level__16965 > 0) {
        var G__16968 = wrapper__16964.lastChild;
        var G__16969 = level__16965 - 1;
        wrapper__16964 = G__16968;
        level__16965 = G__16969;
        continue
      }else {
        return wrapper__16964
      }
      break
    }
  }();
  if(cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div__16966, html__16957, tag_name__16958, start_wrap__16961)
  }else {
  }
  if(cljs.core.truth_(function() {
    var and__3822__auto____16967 = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if(and__3822__auto____16967) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__16957)
    }else {
      return and__3822__auto____16967
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div__16966, html__16957)
  }else {
  }
  return div__16966.childNodes
};
domina.string_to_dom = function string_to_dom(s) {
  if(cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s)
  }else {
    return document.createTextNode(s)
  }
};
domina.DomContent = {};
domina.nodes = function nodes(content) {
  if(function() {
    var and__3822__auto____16974 = content;
    if(and__3822__auto____16974) {
      return content.domina$DomContent$nodes$arity$1
    }else {
      return and__3822__auto____16974
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content)
  }else {
    var x__2264__auto____16975 = content == null ? null : content;
    return function() {
      var or__3824__auto____16976 = domina.nodes[goog.typeOf(x__2264__auto____16975)];
      if(or__3824__auto____16976) {
        return or__3824__auto____16976
      }else {
        var or__3824__auto____16977 = domina.nodes["_"];
        if(or__3824__auto____16977) {
          return or__3824__auto____16977
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content)
  }
};
domina.single_node = function single_node(nodeseq) {
  if(function() {
    var and__3822__auto____16982 = nodeseq;
    if(and__3822__auto____16982) {
      return nodeseq.domina$DomContent$single_node$arity$1
    }else {
      return and__3822__auto____16982
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq)
  }else {
    var x__2264__auto____16983 = nodeseq == null ? null : nodeseq;
    return function() {
      var or__3824__auto____16984 = domina.single_node[goog.typeOf(x__2264__auto____16983)];
      if(or__3824__auto____16984) {
        return or__3824__auto____16984
      }else {
        var or__3824__auto____16985 = domina.single_node["_"];
        if(or__3824__auto____16985) {
          return or__3824__auto____16985
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq)
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____16987 = domina._STAR_debug_STAR_;
      if(cljs.core.truth_(and__3822__auto____16987)) {
        return!cljs.core._EQ_.call(null, window.console, undefined)
      }else {
        return and__3822__auto____16987
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log_debug__delegate.call(this, mesg)
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__16988) {
    var mesg = cljs.core.seq(arglist__16988);
    return log_debug__delegate(mesg)
  };
  log_debug.cljs$lang$arity$variadic = log_debug__delegate;
  return log_debug
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if(cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, mesg)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__16989) {
    var mesg = cljs.core.seq(arglist__16989);
    return log__delegate(mesg)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id))
};
domina.by_class = function by_class(class_name) {
  if(void 0 === domina.t16997) {
    domina.t16997 = function(class_name, by_class, meta16998) {
      this.class_name = class_name;
      this.by_class = by_class;
      this.meta16998 = meta16998;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    domina.t16997.cljs$lang$type = true;
    domina.t16997.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
      return cljs.core.list.call(null, "domina/t16997")
    };
    domina.t16997.prototype.domina$DomContent$ = true;
    domina.t16997.prototype.domina$DomContent$nodes$arity$1 = function(_) {
      var this__17000 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, this__17000.class_name)))
    };
    domina.t16997.prototype.domina$DomContent$single_node$arity$1 = function(_) {
      var this__17001 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementByClass(cljs.core.name.call(null, this__17001.class_name)))
    };
    domina.t16997.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16999) {
      var this__17002 = this;
      return this__17002.meta16998
    };
    domina.t16997.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16999, meta16998) {
      var this__17003 = this;
      return new domina.t16997(this__17003.class_name, this__17003.by_class, meta16998)
    };
    domina.t16997
  }else {
  }
  return new domina.t16997(class_name, by_class, null)
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)))
};
domina.common_ancestor = function() {
  var common_ancestor__delegate = function(contents) {
    return cljs.core.apply.call(null, goog.dom.findCommonAncestor, cljs.core.map.call(null, domina.single_node, contents))
  };
  var common_ancestor = function(var_args) {
    var contents = null;
    if(goog.isDef(var_args)) {
      contents = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return common_ancestor__delegate.call(this, contents)
  };
  common_ancestor.cljs$lang$maxFixedArity = 0;
  common_ancestor.cljs$lang$applyTo = function(arglist__17004) {
    var contents = cljs.core.seq(arglist__17004);
    return common_ancestor__delegate(contents)
  };
  common_ancestor.cljs$lang$arity$variadic = common_ancestor__delegate;
  return common_ancestor
}();
domina.ancestor_QMARK_ = function ancestor_QMARK_(ancestor_content, descendant_content) {
  return cljs.core._EQ_.call(null, domina.common_ancestor.call(null, ancestor_content, descendant_content), domina.single_node.call(null, ancestor_content))
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__17005_SHARP_) {
    return p1__17005_SHARP_.cloneNode(true)
  }, domina.nodes.call(null, content))
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__17006_SHARP_, p2__17007_SHARP_) {
    return goog.dom.insertChildAt(p1__17006_SHARP_, p2__17007_SHARP_, idx)
  }, parent_content, child_content);
  return parent_content
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__17009_SHARP_, p2__17008_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__17008_SHARP_, p1__17009_SHARP_)
  }, content, new_content);
  return content
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__17011_SHARP_, p2__17010_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__17010_SHARP_, p1__17011_SHARP_)
  }, content, new_content);
  return content
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__17013_SHARP_, p2__17012_SHARP_) {
    return goog.dom.replaceNode(p2__17012_SHARP_, p1__17013_SHARP_)
  }, old_content, new_content);
  return old_content
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content
};
domina.style = function style(content, name) {
  var s__17015 = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if(cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s__17015))) {
    return null
  }else {
    return s__17015
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name))
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var G__17022__17023 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__17022__17023) {
      var n__17024 = cljs.core.first.call(null, G__17022__17023);
      var G__17022__17025 = G__17022__17023;
      while(true) {
        goog.style.setStyle(n__17024, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____17026 = cljs.core.next.call(null, G__17022__17025);
        if(temp__3974__auto____17026) {
          var G__17022__17027 = temp__3974__auto____17026;
          var G__17028 = cljs.core.first.call(null, G__17022__17027);
          var G__17029 = G__17022__17027;
          n__17024 = G__17028;
          G__17022__17025 = G__17029;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_style_BANG___delegate.call(this, content, name, value)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__17030) {
    var content = cljs.core.first(arglist__17030);
    var name = cljs.core.first(cljs.core.next(arglist__17030));
    var value = cljs.core.rest(cljs.core.next(arglist__17030));
    return set_style_BANG___delegate(content, name, value)
  };
  set_style_BANG_.cljs$lang$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var G__17037__17038 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__17037__17038) {
      var n__17039 = cljs.core.first.call(null, G__17037__17038);
      var G__17037__17040 = G__17037__17038;
      while(true) {
        n__17039.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____17041 = cljs.core.next.call(null, G__17037__17040);
        if(temp__3974__auto____17041) {
          var G__17037__17042 = temp__3974__auto____17041;
          var G__17043 = cljs.core.first.call(null, G__17037__17042);
          var G__17044 = G__17037__17042;
          n__17039 = G__17043;
          G__17037__17040 = G__17044;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_attr_BANG___delegate.call(this, content, name, value)
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__17045) {
    var content = cljs.core.first(arglist__17045);
    var name = cljs.core.first(cljs.core.next(arglist__17045));
    var value = cljs.core.rest(cljs.core.next(arglist__17045));
    return set_attr_BANG___delegate(content, name, value)
  };
  set_attr_BANG_.cljs$lang$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var G__17052__17053 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__17052__17053) {
    var n__17054 = cljs.core.first.call(null, G__17052__17053);
    var G__17052__17055 = G__17052__17053;
    while(true) {
      n__17054.removeAttribute(cljs.core.name.call(null, name));
      var temp__3974__auto____17056 = cljs.core.next.call(null, G__17052__17055);
      if(temp__3974__auto____17056) {
        var G__17052__17057 = temp__3974__auto____17056;
        var G__17058 = cljs.core.first.call(null, G__17052__17057);
        var G__17059 = G__17052__17057;
        n__17054 = G__17058;
        G__17052__17055 = G__17059;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__17065__17066 = pair.split(/\s*:\s*/);
    var k__17067 = cljs.core.nth.call(null, vec__17065__17066, 0, null);
    var v__17068 = cljs.core.nth.call(null, vec__17065__17066, 1, null);
    if(cljs.core.truth_(function() {
      var and__3822__auto____17069 = k__17067;
      if(cljs.core.truth_(and__3822__auto____17069)) {
        return v__17068
      }else {
        return and__3822__auto____17069
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k__17067.toLowerCase()), v__17068)
    }else {
      return acc
    }
  }, cljs.core.ObjMap.EMPTY, style.split(/\s*;\s*/))
};
domina.styles = function styles(content) {
  var style__17072 = domina.attr.call(null, content, "style");
  if(cljs.core.string_QMARK_.call(null, style__17072)) {
    return domina.parse_style_attributes.call(null, style__17072)
  }else {
    if(cljs.core.truth_(style__17072.cssText)) {
      return domina.parse_style_attributes.call(null, style__17072.cssText)
    }else {
      return null
    }
  }
};
domina.attrs = function attrs(content) {
  var node__17078 = domina.single_node.call(null, content);
  var attrs__17079 = node__17078.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(p1__17070_SHARP_) {
    var attr__17080 = attrs__17079.item(p1__17070_SHARP_);
    var value__17081 = attr__17080.nodeValue;
    if(function() {
      var and__3822__auto____17082 = cljs.core.not_EQ_.call(null, null, value__17081);
      if(and__3822__auto____17082) {
        return cljs.core.not_EQ_.call(null, "", value__17081)
      }else {
        return and__3822__auto____17082
      }
    }()) {
      return cljs.core.PersistentArrayMap.fromArrays([cljs.core.keyword.call(null, attr__17080.nodeName.toLowerCase())], [attr__17080.nodeValue])
    }else {
      return null
    }
  }, cljs.core.range.call(null, attrs__17079.length))))
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var G__17102__17103 = cljs.core.seq.call(null, styles);
  if(G__17102__17103) {
    var G__17105__17107 = cljs.core.first.call(null, G__17102__17103);
    var vec__17106__17108 = G__17105__17107;
    var name__17109 = cljs.core.nth.call(null, vec__17106__17108, 0, null);
    var value__17110 = cljs.core.nth.call(null, vec__17106__17108, 1, null);
    var G__17102__17111 = G__17102__17103;
    var G__17105__17112 = G__17105__17107;
    var G__17102__17113 = G__17102__17111;
    while(true) {
      var vec__17114__17115 = G__17105__17112;
      var name__17116 = cljs.core.nth.call(null, vec__17114__17115, 0, null);
      var value__17117 = cljs.core.nth.call(null, vec__17114__17115, 1, null);
      var G__17102__17118 = G__17102__17113;
      domina.set_style_BANG_.call(null, content, name__17116, value__17117);
      var temp__3974__auto____17119 = cljs.core.next.call(null, G__17102__17118);
      if(temp__3974__auto____17119) {
        var G__17102__17120 = temp__3974__auto____17119;
        var G__17121 = cljs.core.first.call(null, G__17102__17120);
        var G__17122 = G__17102__17120;
        G__17105__17112 = G__17121;
        G__17102__17113 = G__17122;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var G__17142__17143 = cljs.core.seq.call(null, attrs);
  if(G__17142__17143) {
    var G__17145__17147 = cljs.core.first.call(null, G__17142__17143);
    var vec__17146__17148 = G__17145__17147;
    var name__17149 = cljs.core.nth.call(null, vec__17146__17148, 0, null);
    var value__17150 = cljs.core.nth.call(null, vec__17146__17148, 1, null);
    var G__17142__17151 = G__17142__17143;
    var G__17145__17152 = G__17145__17147;
    var G__17142__17153 = G__17142__17151;
    while(true) {
      var vec__17154__17155 = G__17145__17152;
      var name__17156 = cljs.core.nth.call(null, vec__17154__17155, 0, null);
      var value__17157 = cljs.core.nth.call(null, vec__17154__17155, 1, null);
      var G__17142__17158 = G__17142__17153;
      domina.set_attr_BANG_.call(null, content, name__17156, value__17157);
      var temp__3974__auto____17159 = cljs.core.next.call(null, G__17142__17158);
      if(temp__3974__auto____17159) {
        var G__17142__17160 = temp__3974__auto____17159;
        var G__17161 = cljs.core.first.call(null, G__17142__17160);
        var G__17162 = G__17142__17160;
        G__17145__17152 = G__17161;
        G__17142__17153 = G__17162;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$)
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var G__17169__17170 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__17169__17170) {
    var node__17171 = cljs.core.first.call(null, G__17169__17170);
    var G__17169__17172 = G__17169__17170;
    while(true) {
      goog.dom.classes.add(node__17171, class$);
      var temp__3974__auto____17173 = cljs.core.next.call(null, G__17169__17172);
      if(temp__3974__auto____17173) {
        var G__17169__17174 = temp__3974__auto____17173;
        var G__17175 = cljs.core.first.call(null, G__17169__17174);
        var G__17176 = G__17169__17174;
        node__17171 = G__17175;
        G__17169__17172 = G__17176;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var G__17183__17184 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__17183__17184) {
    var node__17185 = cljs.core.first.call(null, G__17183__17184);
    var G__17183__17186 = G__17183__17184;
    while(true) {
      goog.dom.classes.remove(node__17185, class$);
      var temp__3974__auto____17187 = cljs.core.next.call(null, G__17183__17186);
      if(temp__3974__auto____17187) {
        var G__17183__17188 = temp__3974__auto____17187;
        var G__17189 = cljs.core.first.call(null, G__17183__17188);
        var G__17190 = G__17183__17188;
        node__17185 = G__17189;
        G__17183__17186 = G__17190;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)))
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes__17198 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var G__17199__17200 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__17199__17200) {
    var node__17201 = cljs.core.first.call(null, G__17199__17200);
    var G__17199__17202 = G__17199__17200;
    while(true) {
      goog.dom.classes.set(node__17201, classes__17198);
      var temp__3974__auto____17203 = cljs.core.next.call(null, G__17199__17202);
      if(temp__3974__auto____17203) {
        var G__17199__17204 = temp__3974__auto____17203;
        var G__17205 = cljs.core.first.call(null, G__17199__17204);
        var G__17206 = G__17199__17204;
        node__17201 = G__17205;
        G__17199__17202 = G__17206;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)))
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var G__17213__17214 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__17213__17214) {
    var node__17215 = cljs.core.first.call(null, G__17213__17214);
    var G__17213__17216 = G__17213__17214;
    while(true) {
      goog.dom.setTextContent(node__17215, value);
      var temp__3974__auto____17217 = cljs.core.next.call(null, G__17213__17216);
      if(temp__3974__auto____17217) {
        var G__17213__17218 = temp__3974__auto____17217;
        var G__17219 = cljs.core.first.call(null, G__17213__17218);
        var G__17220 = G__17213__17218;
        node__17215 = G__17219;
        G__17213__17216 = G__17220;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content))
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var G__17227__17228 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__17227__17228) {
    var node__17229 = cljs.core.first.call(null, G__17227__17228);
    var G__17227__17230 = G__17227__17228;
    while(true) {
      goog.dom.forms.setValue(node__17229, value);
      var temp__3974__auto____17231 = cljs.core.next.call(null, G__17227__17230);
      if(temp__3974__auto____17231) {
        var G__17227__17232 = temp__3974__auto____17231;
        var G__17233 = cljs.core.first.call(null, G__17227__17232);
        var G__17234 = G__17227__17232;
        node__17229 = G__17233;
        G__17227__17230 = G__17234;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content)
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK___17251 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK___17252 = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name__17253 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK___17254 = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name__17253);
  if(cljs.core.truth_(function() {
    var and__3822__auto____17255 = allows_inner_html_QMARK___17251;
    if(and__3822__auto____17255) {
      var and__3822__auto____17257 = function() {
        var or__3824__auto____17256 = domina.support.leading_whitespace_QMARK_;
        if(cljs.core.truth_(or__3824__auto____17256)) {
          return or__3824__auto____17256
        }else {
          return cljs.core.not.call(null, leading_whitespace_QMARK___17252)
        }
      }();
      if(cljs.core.truth_(and__3822__auto____17257)) {
        return!special_tag_QMARK___17254
      }else {
        return and__3822__auto____17257
      }
    }else {
      return and__3822__auto____17255
    }
  }())) {
    var value__17258 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "<$1></$2>");
    try {
      var G__17261__17262 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      if(G__17261__17262) {
        var node__17263 = cljs.core.first.call(null, G__17261__17262);
        var G__17261__17264 = G__17261__17262;
        while(true) {
          goog.events.removeAll(node__17263);
          node__17263.innerHTML = value__17258;
          var temp__3974__auto____17265 = cljs.core.next.call(null, G__17261__17264);
          if(temp__3974__auto____17265) {
            var G__17261__17266 = temp__3974__auto____17265;
            var G__17267 = cljs.core.first.call(null, G__17261__17266);
            var G__17268 = G__17261__17266;
            node__17263 = G__17267;
            G__17261__17264 = G__17268;
            continue
          }else {
          }
          break
        }
      }else {
      }
    }catch(e17259) {
      if(cljs.core.instance_QMARK_.call(null, Error, e17259)) {
        var e__17260 = e17259;
        domina.replace_children_BANG_.call(null, content, value__17258)
      }else {
        if("\ufdd0'else") {
          throw e17259;
        }else {
        }
      }
    }
  }else {
    domina.replace_children_BANG_.call(null, content, html_string)
  }
  return content
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if(cljs.core.string_QMARK_.call(null, inner_content)) {
    return domina.set_inner_html_BANG_.call(null, content, inner_content)
  }else {
    return domina.replace_children_BANG_.call(null, content, inner_content)
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false)
  };
  var get_data__3 = function(node, key, bubble) {
    var m__17274 = domina.single_node.call(null, node).__domina_data;
    var value__17275 = cljs.core.truth_(m__17274) ? cljs.core._lookup.call(null, m__17274, key, null) : null;
    if(cljs.core.truth_(function() {
      var and__3822__auto____17276 = bubble;
      if(cljs.core.truth_(and__3822__auto____17276)) {
        return value__17275 == null
      }else {
        return and__3822__auto____17276
      }
    }())) {
      var temp__3974__auto____17277 = domina.single_node.call(null, node).parentNode;
      if(cljs.core.truth_(temp__3974__auto____17277)) {
        var parent__17278 = temp__3974__auto____17277;
        return get_data.call(null, parent__17278, key, true)
      }else {
        return null
      }
    }else {
      return value__17275
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_data.cljs$lang$arity$2 = get_data__2;
  get_data.cljs$lang$arity$3 = get_data__3;
  return get_data
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m__17284 = function() {
    var or__3824__auto____17283 = domina.single_node.call(null, node).__domina_data;
    if(cljs.core.truth_(or__3824__auto____17283)) {
      return or__3824__auto____17283
    }else {
      return cljs.core.ObjMap.EMPTY
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m__17284, key, value)
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents__17296 = domina.nodes.call(null, parent_content);
  var children__17297 = domina.nodes.call(null, child_content);
  var first_child__17305 = function() {
    var frag__17298 = document.createDocumentFragment();
    var G__17299__17300 = cljs.core.seq.call(null, children__17297);
    if(G__17299__17300) {
      var child__17301 = cljs.core.first.call(null, G__17299__17300);
      var G__17299__17302 = G__17299__17300;
      while(true) {
        frag__17298.appendChild(child__17301);
        var temp__3974__auto____17303 = cljs.core.next.call(null, G__17299__17302);
        if(temp__3974__auto____17303) {
          var G__17299__17304 = temp__3974__auto____17303;
          var G__17307 = cljs.core.first.call(null, G__17299__17304);
          var G__17308 = G__17299__17304;
          child__17301 = G__17307;
          G__17299__17302 = G__17308;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return frag__17298
  }();
  var other_children__17306 = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents__17296) - 1, function() {
    return first_child__17305.cloneNode(true)
  }));
  if(cljs.core.seq.call(null, parents__17296)) {
    f.call(null, cljs.core.first.call(null, parents__17296), first_child__17305);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__17279_SHARP_, p2__17280_SHARP_) {
      return f.call(null, p1__17279_SHARP_, p2__17280_SHARP_)
    }, cljs.core.rest.call(null, parents__17296), other_children__17306))
  }else {
    return null
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0)
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_item.cljs$lang$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$lang$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0)
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_array_ref.cljs$lang$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$lang$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if(cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl)
  }else {
    return domina.lazy_nl_via_array_ref.call(null, nl)
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3822__auto____17310 = obj;
  if(cljs.core.truth_(and__3822__auto____17310)) {
    return obj.length
  }else {
    return and__3822__auto____17310
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if(list_thing == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__17314__17315 = list_thing;
      if(G__17314__17315) {
        if(function() {
          var or__3824__auto____17316 = G__17314__17315.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____17316) {
            return or__3824__auto____17316
          }else {
            return G__17314__17315.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__17314__17315.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__17314__17315)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__17314__17315)
      }
    }()) {
      return cljs.core.seq.call(null, list_thing)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([list_thing], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if(content == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__17317__17318 = content;
      if(G__17317__17318) {
        if(function() {
          var or__3824__auto____17319 = G__17317__17318.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____17319) {
            return or__3824__auto____17319
          }else {
            return G__17317__17318.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__17317__17318.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__17317__17318)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__17317__17318)
      }
    }()) {
      return cljs.core.seq.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([content], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if(content == null) {
    return null
  }else {
    if(function() {
      var G__17320__17321 = content;
      if(G__17320__17321) {
        if(function() {
          var or__3824__auto____17322 = G__17320__17321.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____17322) {
            return or__3824__auto____17322
          }else {
            return G__17320__17321.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__17320__17321.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__17320__17321)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__17320__17321)
      }
    }()) {
      return cljs.core.first.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0)
      }else {
        if("\ufdd0'default") {
          return content
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)))
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s))
};
if(cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    return domina.lazy_nodelist.call(null, coll)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    return coll.item(n)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    if(coll.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, coll, n)
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    return coll.length
  }
}else {
}
;goog.provide("domina.events");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.object");
goog.require("domina");
domina.events.Event = {};
domina.events.prevent_default = function prevent_default(evt) {
  if(function() {
    var and__3822__auto____19385 = evt;
    if(and__3822__auto____19385) {
      return evt.domina$events$Event$prevent_default$arity$1
    }else {
      return and__3822__auto____19385
    }
  }()) {
    return evt.domina$events$Event$prevent_default$arity$1(evt)
  }else {
    var x__2264__auto____19386 = evt == null ? null : evt;
    return function() {
      var or__3824__auto____19387 = domina.events.prevent_default[goog.typeOf(x__2264__auto____19386)];
      if(or__3824__auto____19387) {
        return or__3824__auto____19387
      }else {
        var or__3824__auto____19388 = domina.events.prevent_default["_"];
        if(or__3824__auto____19388) {
          return or__3824__auto____19388
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.prevent-default", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.stop_propagation = function stop_propagation(evt) {
  if(function() {
    var and__3822__auto____19393 = evt;
    if(and__3822__auto____19393) {
      return evt.domina$events$Event$stop_propagation$arity$1
    }else {
      return and__3822__auto____19393
    }
  }()) {
    return evt.domina$events$Event$stop_propagation$arity$1(evt)
  }else {
    var x__2264__auto____19394 = evt == null ? null : evt;
    return function() {
      var or__3824__auto____19395 = domina.events.stop_propagation[goog.typeOf(x__2264__auto____19394)];
      if(or__3824__auto____19395) {
        return or__3824__auto____19395
      }else {
        var or__3824__auto____19396 = domina.events.stop_propagation["_"];
        if(or__3824__auto____19396) {
          return or__3824__auto____19396
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.stop-propagation", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.target = function target(evt) {
  if(function() {
    var and__3822__auto____19401 = evt;
    if(and__3822__auto____19401) {
      return evt.domina$events$Event$target$arity$1
    }else {
      return and__3822__auto____19401
    }
  }()) {
    return evt.domina$events$Event$target$arity$1(evt)
  }else {
    var x__2264__auto____19402 = evt == null ? null : evt;
    return function() {
      var or__3824__auto____19403 = domina.events.target[goog.typeOf(x__2264__auto____19402)];
      if(or__3824__auto____19403) {
        return or__3824__auto____19403
      }else {
        var or__3824__auto____19404 = domina.events.target["_"];
        if(or__3824__auto____19404) {
          return or__3824__auto____19404
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.target", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.current_target = function current_target(evt) {
  if(function() {
    var and__3822__auto____19409 = evt;
    if(and__3822__auto____19409) {
      return evt.domina$events$Event$current_target$arity$1
    }else {
      return and__3822__auto____19409
    }
  }()) {
    return evt.domina$events$Event$current_target$arity$1(evt)
  }else {
    var x__2264__auto____19410 = evt == null ? null : evt;
    return function() {
      var or__3824__auto____19411 = domina.events.current_target[goog.typeOf(x__2264__auto____19410)];
      if(or__3824__auto____19411) {
        return or__3824__auto____19411
      }else {
        var or__3824__auto____19412 = domina.events.current_target["_"];
        if(or__3824__auto____19412) {
          return or__3824__auto____19412
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.current-target", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.event_type = function event_type(evt) {
  if(function() {
    var and__3822__auto____19417 = evt;
    if(and__3822__auto____19417) {
      return evt.domina$events$Event$event_type$arity$1
    }else {
      return and__3822__auto____19417
    }
  }()) {
    return evt.domina$events$Event$event_type$arity$1(evt)
  }else {
    var x__2264__auto____19418 = evt == null ? null : evt;
    return function() {
      var or__3824__auto____19419 = domina.events.event_type[goog.typeOf(x__2264__auto____19418)];
      if(or__3824__auto____19419) {
        return or__3824__auto____19419
      }else {
        var or__3824__auto____19420 = domina.events.event_type["_"];
        if(or__3824__auto____19420) {
          return or__3824__auto____19420
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.event-type", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.raw_event = function raw_event(evt) {
  if(function() {
    var and__3822__auto____19425 = evt;
    if(and__3822__auto____19425) {
      return evt.domina$events$Event$raw_event$arity$1
    }else {
      return and__3822__auto____19425
    }
  }()) {
    return evt.domina$events$Event$raw_event$arity$1(evt)
  }else {
    var x__2264__auto____19426 = evt == null ? null : evt;
    return function() {
      var or__3824__auto____19427 = domina.events.raw_event[goog.typeOf(x__2264__auto____19426)];
      if(or__3824__auto____19427) {
        return or__3824__auto____19427
      }else {
        var or__3824__auto____19428 = domina.events.raw_event["_"];
        if(or__3824__auto____19428) {
          return or__3824__auto____19428
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.raw-event", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.builtin_events = cljs.core.set.call(null, cljs.core.map.call(null, cljs.core.keyword, goog.object.getValues(goog.events.EventType)));
domina.events.root_element = window.document.documentElement;
domina.events.find_builtin_type = function find_builtin_type(evt_type) {
  if(cljs.core.contains_QMARK_.call(null, domina.events.builtin_events, evt_type)) {
    return cljs.core.name.call(null, evt_type)
  }else {
    return evt_type
  }
};
domina.events.create_listener_function = function create_listener_function(f) {
  return function(evt) {
    f.call(null, function() {
      if(void 0 === domina.events.t19445) {
        domina.events.t19445 = function(evt, f, create_listener_function, meta19446) {
          this.evt = evt;
          this.f = f;
          this.create_listener_function = create_listener_function;
          this.meta19446 = meta19446;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393472
        };
        domina.events.t19445.cljs$lang$type = true;
        domina.events.t19445.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
          return cljs.core.list.call(null, "domina.events/t19445")
        };
        domina.events.t19445.prototype.cljs$core$ILookup$_lookup$arity$2 = function(o, k) {
          var this__19448 = this;
          var temp__3971__auto____19449 = this__19448.evt[k];
          if(cljs.core.truth_(temp__3971__auto____19449)) {
            var val__19450 = temp__3971__auto____19449;
            return val__19450
          }else {
            return this__19448.evt[cljs.core.name.call(null, k)]
          }
        };
        domina.events.t19445.prototype.cljs$core$ILookup$_lookup$arity$3 = function(o, k, not_found) {
          var this__19451 = this;
          var or__3824__auto____19452 = o.cljs$core$ILookup$_lookup$arity$2(o, k);
          if(cljs.core.truth_(or__3824__auto____19452)) {
            return or__3824__auto____19452
          }else {
            return not_found
          }
        };
        domina.events.t19445.prototype.domina$events$Event$ = true;
        domina.events.t19445.prototype.domina$events$Event$prevent_default$arity$1 = function(_) {
          var this__19453 = this;
          return this__19453.evt.preventDefault()
        };
        domina.events.t19445.prototype.domina$events$Event$stop_propagation$arity$1 = function(_) {
          var this__19454 = this;
          return this__19454.evt.stopPropagation()
        };
        domina.events.t19445.prototype.domina$events$Event$target$arity$1 = function(_) {
          var this__19455 = this;
          return this__19455.evt.target
        };
        domina.events.t19445.prototype.domina$events$Event$current_target$arity$1 = function(_) {
          var this__19456 = this;
          return this__19456.evt.currentTarget
        };
        domina.events.t19445.prototype.domina$events$Event$event_type$arity$1 = function(_) {
          var this__19457 = this;
          return this__19457.evt.type
        };
        domina.events.t19445.prototype.domina$events$Event$raw_event$arity$1 = function(_) {
          var this__19458 = this;
          return this__19458.evt
        };
        domina.events.t19445.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19447) {
          var this__19459 = this;
          return this__19459.meta19446
        };
        domina.events.t19445.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19447, meta19446) {
          var this__19460 = this;
          return new domina.events.t19445(this__19460.evt, this__19460.f, this__19460.create_listener_function, meta19446)
        };
        domina.events.t19445
      }else {
      }
      return new domina.events.t19445(evt, f, create_listener_function, null)
    }());
    return true
  }
};
domina.events.listen_internal_BANG_ = function listen_internal_BANG_(content, type, listener, capture, once) {
  var f__19470 = domina.events.create_listener_function.call(null, listener);
  var t__19471 = domina.events.find_builtin_type.call(null, type);
  return cljs.core.doall.call(null, function() {
    var iter__2363__auto____19478 = function iter__19472(s__19473) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__19473__19476 = s__19473;
        while(true) {
          if(cljs.core.seq.call(null, s__19473__19476)) {
            var node__19477 = cljs.core.first.call(null, s__19473__19476);
            return cljs.core.cons.call(null, cljs.core.truth_(once) ? goog.events.listenOnce(node__19477, t__19471, f__19470, capture) : goog.events.listen(node__19477, t__19471, f__19470, capture), iter__19472.call(null, cljs.core.rest.call(null, s__19473__19476)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____19478.call(null, domina.nodes.call(null, content))
  }())
};
domina.events.listen_BANG_ = function() {
  var listen_BANG_ = null;
  var listen_BANG___2 = function(type, listener) {
    return listen_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var listen_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, false)
  };
  listen_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_BANG___2.call(this, content, type);
      case 3:
        return listen_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_BANG_.cljs$lang$arity$2 = listen_BANG___2;
  listen_BANG_.cljs$lang$arity$3 = listen_BANG___3;
  return listen_BANG_
}();
domina.events.capture_BANG_ = function() {
  var capture_BANG_ = null;
  var capture_BANG___2 = function(type, listener) {
    return capture_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var capture_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, false)
  };
  capture_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_BANG___2.call(this, content, type);
      case 3:
        return capture_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  capture_BANG_.cljs$lang$arity$2 = capture_BANG___2;
  capture_BANG_.cljs$lang$arity$3 = capture_BANG___3;
  return capture_BANG_
}();
domina.events.listen_once_BANG_ = function() {
  var listen_once_BANG_ = null;
  var listen_once_BANG___2 = function(type, listener) {
    return listen_once_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var listen_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, true)
  };
  listen_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_once_BANG___2.call(this, content, type);
      case 3:
        return listen_once_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once_BANG_.cljs$lang$arity$2 = listen_once_BANG___2;
  listen_once_BANG_.cljs$lang$arity$3 = listen_once_BANG___3;
  return listen_once_BANG_
}();
domina.events.capture_once_BANG_ = function() {
  var capture_once_BANG_ = null;
  var capture_once_BANG___2 = function(type, listener) {
    return capture_once_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var capture_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, true)
  };
  capture_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_once_BANG___2.call(this, content, type);
      case 3:
        return capture_once_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  capture_once_BANG_.cljs$lang$arity$2 = capture_once_BANG___2;
  capture_once_BANG_.cljs$lang$arity$3 = capture_once_BANG___3;
  return capture_once_BANG_
}();
domina.events.unlisten_BANG_ = function() {
  var unlisten_BANG_ = null;
  var unlisten_BANG___0 = function() {
    return unlisten_BANG_.call(null, domina.events.root_element)
  };
  var unlisten_BANG___1 = function(content) {
    var G__19492__19493 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__19492__19493) {
      var node__19494 = cljs.core.first.call(null, G__19492__19493);
      var G__19492__19495 = G__19492__19493;
      while(true) {
        goog.events.removeAll(node__19494);
        var temp__3974__auto____19496 = cljs.core.next.call(null, G__19492__19495);
        if(temp__3974__auto____19496) {
          var G__19492__19497 = temp__3974__auto____19496;
          var G__19505 = cljs.core.first.call(null, G__19492__19497);
          var G__19506 = G__19492__19497;
          node__19494 = G__19505;
          G__19492__19495 = G__19506;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  };
  var unlisten_BANG___2 = function(content, type) {
    var type__19498 = domina.events.find_builtin_type.call(null, type);
    var G__19499__19500 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__19499__19500) {
      var node__19501 = cljs.core.first.call(null, G__19499__19500);
      var G__19499__19502 = G__19499__19500;
      while(true) {
        goog.events.removeAll(node__19501, type__19498);
        var temp__3974__auto____19503 = cljs.core.next.call(null, G__19499__19502);
        if(temp__3974__auto____19503) {
          var G__19499__19504 = temp__3974__auto____19503;
          var G__19507 = cljs.core.first.call(null, G__19499__19504);
          var G__19508 = G__19499__19504;
          node__19501 = G__19507;
          G__19499__19502 = G__19508;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  };
  unlisten_BANG_ = function(content, type) {
    switch(arguments.length) {
      case 0:
        return unlisten_BANG___0.call(this);
      case 1:
        return unlisten_BANG___1.call(this, content);
      case 2:
        return unlisten_BANG___2.call(this, content, type)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten_BANG_.cljs$lang$arity$0 = unlisten_BANG___0;
  unlisten_BANG_.cljs$lang$arity$1 = unlisten_BANG___1;
  unlisten_BANG_.cljs$lang$arity$2 = unlisten_BANG___2;
  return unlisten_BANG_
}();
domina.events.ancestor_nodes = function() {
  var ancestor_nodes = null;
  var ancestor_nodes__1 = function(n) {
    return ancestor_nodes.call(null, n, cljs.core.PersistentVector.fromArray([n], true))
  };
  var ancestor_nodes__2 = function(n, so_far) {
    while(true) {
      var temp__3971__auto____19511 = n.parentNode;
      if(cljs.core.truth_(temp__3971__auto____19511)) {
        var parent__19512 = temp__3971__auto____19511;
        var G__19513 = parent__19512;
        var G__19514 = cljs.core.cons.call(null, parent__19512, so_far);
        n = G__19513;
        so_far = G__19514;
        continue
      }else {
        return so_far
      }
      break
    }
  };
  ancestor_nodes = function(n, so_far) {
    switch(arguments.length) {
      case 1:
        return ancestor_nodes__1.call(this, n);
      case 2:
        return ancestor_nodes__2.call(this, n, so_far)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestor_nodes.cljs$lang$arity$1 = ancestor_nodes__1;
  ancestor_nodes.cljs$lang$arity$2 = ancestor_nodes__2;
  return ancestor_nodes
}();
domina.events.dispatch_browser_BANG_ = function dispatch_browser_BANG_(source, evt) {
  var ancestors__19528 = domina.events.ancestor_nodes.call(null, domina.single_node.call(null, source));
  var G__19529__19530 = cljs.core.seq.call(null, ancestors__19528);
  if(G__19529__19530) {
    var n__19531 = cljs.core.first.call(null, G__19529__19530);
    var G__19529__19532 = G__19529__19530;
    while(true) {
      if(cljs.core.truth_(n__19531.propagationStopped)) {
      }else {
        evt.currentTarget = n__19531;
        goog.events.fireListeners(n__19531, evt.type, true, evt)
      }
      var temp__3974__auto____19533 = cljs.core.next.call(null, G__19529__19532);
      if(temp__3974__auto____19533) {
        var G__19529__19534 = temp__3974__auto____19533;
        var G__19541 = cljs.core.first.call(null, G__19529__19534);
        var G__19542 = G__19529__19534;
        n__19531 = G__19541;
        G__19529__19532 = G__19542;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__19535__19536 = cljs.core.seq.call(null, cljs.core.reverse.call(null, ancestors__19528));
  if(G__19535__19536) {
    var n__19537 = cljs.core.first.call(null, G__19535__19536);
    var G__19535__19538 = G__19535__19536;
    while(true) {
      if(cljs.core.truth_(n__19537.propagationStopped)) {
      }else {
        evt.currentTarget = n__19537;
        goog.events.fireListeners(n__19537, evt.type, false, evt)
      }
      var temp__3974__auto____19539 = cljs.core.next.call(null, G__19535__19538);
      if(temp__3974__auto____19539) {
        var G__19535__19540 = temp__3974__auto____19539;
        var G__19543 = cljs.core.first.call(null, G__19535__19540);
        var G__19544 = G__19535__19540;
        n__19537 = G__19543;
        G__19535__19538 = G__19544;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return evt.returnValue_
};
domina.events.dispatch_event_target_BANG_ = function dispatch_event_target_BANG_(source, evt) {
  return goog.events.dispatchEvent(source, evt)
};
domina.events.is_event_target_QMARK_ = function is_event_target_QMARK_(o) {
  var and__3822__auto____19546 = o.getParentEventTarget;
  if(cljs.core.truth_(and__3822__auto____19546)) {
    return o.dispatchEvent
  }else {
    return and__3822__auto____19546
  }
};
domina.events.dispatch_BANG_ = function() {
  var dispatch_BANG_ = null;
  var dispatch_BANG___2 = function(type, evt_map) {
    return dispatch_BANG_.call(null, domina.events.root_element, type, evt_map)
  };
  var dispatch_BANG___3 = function(source, type, evt_map) {
    var evt__19567 = new goog.events.Event(domina.events.find_builtin_type.call(null, type));
    var G__19568__19569 = cljs.core.seq.call(null, evt_map);
    if(G__19568__19569) {
      var G__19571__19573 = cljs.core.first.call(null, G__19568__19569);
      var vec__19572__19574 = G__19571__19573;
      var k__19575 = cljs.core.nth.call(null, vec__19572__19574, 0, null);
      var v__19576 = cljs.core.nth.call(null, vec__19572__19574, 1, null);
      var G__19568__19577 = G__19568__19569;
      var G__19571__19578 = G__19571__19573;
      var G__19568__19579 = G__19568__19577;
      while(true) {
        var vec__19580__19581 = G__19571__19578;
        var k__19582 = cljs.core.nth.call(null, vec__19580__19581, 0, null);
        var v__19583 = cljs.core.nth.call(null, vec__19580__19581, 1, null);
        var G__19568__19584 = G__19568__19579;
        evt__19567[k__19582] = v__19583;
        var temp__3974__auto____19585 = cljs.core.next.call(null, G__19568__19584);
        if(temp__3974__auto____19585) {
          var G__19568__19586 = temp__3974__auto____19585;
          var G__19587 = cljs.core.first.call(null, G__19568__19586);
          var G__19588 = G__19568__19586;
          G__19571__19578 = G__19587;
          G__19568__19579 = G__19588;
          continue
        }else {
        }
        break
      }
    }else {
    }
    if(cljs.core.truth_(domina.events.is_event_target_QMARK_.call(null, source))) {
      return domina.events.dispatch_event_target_BANG_.call(null, source, evt__19567)
    }else {
      return domina.events.dispatch_browser_BANG_.call(null, source, evt__19567)
    }
  };
  dispatch_BANG_ = function(source, type, evt_map) {
    switch(arguments.length) {
      case 2:
        return dispatch_BANG___2.call(this, source, type);
      case 3:
        return dispatch_BANG___3.call(this, source, type, evt_map)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dispatch_BANG_.cljs$lang$arity$2 = dispatch_BANG___2;
  dispatch_BANG_.cljs$lang$arity$3 = dispatch_BANG___3;
  return dispatch_BANG_
}();
domina.events.unlisten_by_key_BANG_ = function unlisten_by_key_BANG_(key) {
  return goog.events.unlistenByKey(key)
};
domina.events.get_listeners = function get_listeners(content, type) {
  var type__19591 = domina.events.find_builtin_type.call(null, type);
  return cljs.core.mapcat.call(null, function(p1__19589_SHARP_) {
    return goog.events.getListeners(p1__19589_SHARP_, type__19591, false)
  }, domina.nodes.call(null, content))
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue
  }
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  }
};
goog.functions.lock = function(f) {
  return function() {
    return f.call(this)
  }
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue))
};
goog.functions.compose = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if(length) {
      result = functions[length - 1].apply(this, arguments)
    }
    for(var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result)
    }
    return result
  }
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for(var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments)
    }
    return result
  }
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(!functions[i].apply(this, arguments)) {
        return false
      }
    }
    return true
  }
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(functions[i].apply(this, arguments)) {
        return true
      }
    }
    return false
  }
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments)
  }
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj
};
/*
 Portions of this code are from the Dojo Toolkit, received by
 The Closure Library Authors under the BSD license. All other code is
 Copyright 2005-2009 The Closure Library Authors. All Rights Reserved.

The "New" BSD License:

Copyright (c) 2005-2009, The Dojo Foundation
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

 Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.
 Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.
 Neither the name of the Dojo Foundation nor the names of its contributors
    may be used to endorse or promote products derived from this software
    without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
goog.provide("goog.dom.query");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.functions");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.query = function() {
  var cssCaseBug = goog.userAgent.WEBKIT && goog.dom.getDocument().compatMode == "BackCompat";
  var childNodesName = !!goog.dom.getDocument().firstChild["children"] ? "children" : "childNodes";
  var specials = ">~+";
  var caseSensitive = false;
  var getQueryParts = function(query) {
    if(specials.indexOf(query.slice(-1)) >= 0) {
      query += " * "
    }else {
      query += " "
    }
    var ts = function(s, e) {
      return goog.string.trim(query.slice(s, e))
    };
    var queryParts = [];
    var inBrackets = -1, inParens = -1, inMatchFor = -1, inPseudo = -1, inClass = -1, inId = -1, inTag = -1, lc = "", cc = "", pStart;
    var x = 0, ql = query.length, currentPart = null, cp = null;
    var endTag = function() {
      if(inTag >= 0) {
        var tv = inTag == x ? null : ts(inTag, x);
        if(specials.indexOf(tv) < 0) {
          currentPart.tag = tv
        }else {
          currentPart.oper = tv
        }
        inTag = -1
      }
    };
    var endId = function() {
      if(inId >= 0) {
        currentPart.id = ts(inId, x).replace(/\\/g, "");
        inId = -1
      }
    };
    var endClass = function() {
      if(inClass >= 0) {
        currentPart.classes.push(ts(inClass + 1, x).replace(/\\/g, ""));
        inClass = -1
      }
    };
    var endAll = function() {
      endId();
      endTag();
      endClass()
    };
    var endPart = function() {
      endAll();
      if(inPseudo >= 0) {
        currentPart.pseudos.push({name:ts(inPseudo + 1, x)})
      }
      currentPart.loops = currentPart.pseudos.length || currentPart.attrs.length || currentPart.classes.length;
      currentPart.oquery = currentPart.query = ts(pStart, x);
      currentPart.otag = currentPart.tag = currentPart.oper ? null : currentPart.tag || "*";
      if(currentPart.tag) {
        currentPart.tag = currentPart.tag.toUpperCase()
      }
      if(queryParts.length && queryParts[queryParts.length - 1].oper) {
        currentPart.infixOper = queryParts.pop();
        currentPart.query = currentPart.infixOper.query + " " + currentPart.query
      }
      queryParts.push(currentPart);
      currentPart = null
    };
    for(;lc = cc, cc = query.charAt(x), x < ql;x++) {
      if(lc == "\\") {
        continue
      }
      if(!currentPart) {
        pStart = x;
        currentPart = {query:null, pseudos:[], attrs:[], classes:[], tag:null, oper:null, id:null, getTag:function() {
          return caseSensitive ? this.otag : this.tag
        }};
        inTag = x
      }
      if(inBrackets >= 0) {
        if(cc == "]") {
          if(!cp.attr) {
            cp.attr = ts(inBrackets + 1, x)
          }else {
            cp.matchFor = ts(inMatchFor || inBrackets + 1, x)
          }
          var cmf = cp.matchFor;
          if(cmf) {
            if(cmf.charAt(0) == '"' || cmf.charAt(0) == "'") {
              cp.matchFor = cmf.slice(1, -1)
            }
          }
          currentPart.attrs.push(cp);
          cp = null;
          inBrackets = inMatchFor = -1
        }else {
          if(cc == "=") {
            var addToCc = "|~^$*".indexOf(lc) >= 0 ? lc : "";
            cp.type = addToCc + cc;
            cp.attr = ts(inBrackets + 1, x - addToCc.length);
            inMatchFor = x + 1
          }
        }
      }else {
        if(inParens >= 0) {
          if(cc == ")") {
            if(inPseudo >= 0) {
              cp.value = ts(inParens + 1, x)
            }
            inPseudo = inParens = -1
          }
        }else {
          if(cc == "#") {
            endAll();
            inId = x + 1
          }else {
            if(cc == ".") {
              endAll();
              inClass = x
            }else {
              if(cc == ":") {
                endAll();
                inPseudo = x
              }else {
                if(cc == "[") {
                  endAll();
                  inBrackets = x;
                  cp = {}
                }else {
                  if(cc == "(") {
                    if(inPseudo >= 0) {
                      cp = {name:ts(inPseudo + 1, x), value:null};
                      currentPart.pseudos.push(cp)
                    }
                    inParens = x
                  }else {
                    if(cc == " " && lc != cc) {
                      endPart()
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return queryParts
  };
  var agree = function(first, second) {
    if(!first) {
      return second
    }
    if(!second) {
      return first
    }
    return function() {
      return first.apply(window, arguments) && second.apply(window, arguments)
    }
  };
  function getArr(i, opt_arr) {
    var r = opt_arr || [];
    if(i) {
      r.push(i)
    }
    return r
  }
  var isElement = function(n) {
    return 1 == n.nodeType
  };
  var blank = "";
  var getAttr = function(elem, attr) {
    if(!elem) {
      return blank
    }
    if(attr == "class") {
      return elem.className || blank
    }
    if(attr == "for") {
      return elem.htmlFor || blank
    }
    if(attr == "style") {
      return elem.style.cssText || blank
    }
    return(caseSensitive ? elem.getAttribute(attr) : elem.getAttribute(attr, 2)) || blank
  };
  var attrs = {"*=":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) >= 0
    }
  }, "^=":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) == 0
    }
  }, "$=":function(attr, value) {
    var tval = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea.lastIndexOf(value) == ea.length - value.length
    }
  }, "~=":function(attr, value) {
    var tval = " " + value + " ";
    return function(elem) {
      var ea = " " + getAttr(elem, attr) + " ";
      return ea.indexOf(tval) >= 0
    }
  }, "|=":function(attr, value) {
    value = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea == value || ea.indexOf(value + "-") == 0
    }
  }, "=":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr) == value
    }
  }};
  var noNextElementSibling = typeof goog.dom.getDocument().firstChild.nextElementSibling == "undefined";
  var nSibling = !noNextElementSibling ? "nextElementSibling" : "nextSibling";
  var pSibling = !noNextElementSibling ? "previousElementSibling" : "previousSibling";
  var simpleNodeTest = noNextElementSibling ? isElement : goog.functions.TRUE;
  var _lookLeft = function(node) {
    while(node = node[pSibling]) {
      if(simpleNodeTest(node)) {
        return false
      }
    }
    return true
  };
  var _lookRight = function(node) {
    while(node = node[nSibling]) {
      if(simpleNodeTest(node)) {
        return false
      }
    }
    return true
  };
  var getNodeIndex = function(node) {
    var root = node.parentNode;
    var i = 0, tret = root[childNodesName], ci = node["_i"] || -1, cl = root["_l"] || -1;
    if(!tret) {
      return-1
    }
    var l = tret.length;
    if(cl == l && ci >= 0 && cl >= 0) {
      return ci
    }
    root["_l"] = l;
    ci = -1;
    var te = root["firstElementChild"] || root["firstChild"];
    for(;te;te = te[nSibling]) {
      if(simpleNodeTest(te)) {
        te["_i"] = ++i;
        if(node === te) {
          ci = i
        }
      }
    }
    return ci
  };
  var isEven = function(elem) {
    return!(getNodeIndex(elem) % 2)
  };
  var isOdd = function(elem) {
    return getNodeIndex(elem) % 2
  };
  var pseudos = {"checked":function(name, condition) {
    return function(elem) {
      return elem.checked || elem.attributes["checked"]
    }
  }, "first-child":function() {
    return _lookLeft
  }, "last-child":function() {
    return _lookRight
  }, "only-child":function(name, condition) {
    return function(node) {
      if(!_lookLeft(node)) {
        return false
      }
      if(!_lookRight(node)) {
        return false
      }
      return true
    }
  }, "empty":function(name, condition) {
    return function(elem) {
      var cn = elem.childNodes;
      var cnl = elem.childNodes.length;
      for(var x = cnl - 1;x >= 0;x--) {
        var nt = cn[x].nodeType;
        if(nt === 1 || nt == 3) {
          return false
        }
      }
      return true
    }
  }, "contains":function(name, condition) {
    var cz = condition.charAt(0);
    if(cz == '"' || cz == "'") {
      condition = condition.slice(1, -1)
    }
    return function(elem) {
      return elem.innerHTML.indexOf(condition) >= 0
    }
  }, "not":function(name, condition) {
    var p = getQueryParts(condition)[0];
    var ignores = {el:1};
    if(p.tag != "*") {
      ignores.tag = 1
    }
    if(!p.classes.length) {
      ignores.classes = 1
    }
    var ntf = getSimpleFilterFunc(p, ignores);
    return function(elem) {
      return!ntf(elem)
    }
  }, "nth-child":function(name, condition) {
    function pi(n) {
      return parseInt(n, 10)
    }
    if(condition == "odd") {
      return isOdd
    }else {
      if(condition == "even") {
        return isEven
      }
    }
    if(condition.indexOf("n") != -1) {
      var tparts = condition.split("n", 2);
      var pred = tparts[0] ? tparts[0] == "-" ? -1 : pi(tparts[0]) : 1;
      var idx = tparts[1] ? pi(tparts[1]) : 0;
      var lb = 0, ub = -1;
      if(pred > 0) {
        if(idx < 0) {
          idx = idx % pred && pred + idx % pred
        }else {
          if(idx > 0) {
            if(idx >= pred) {
              lb = idx - idx % pred
            }
            idx = idx % pred
          }
        }
      }else {
        if(pred < 0) {
          pred *= -1;
          if(idx > 0) {
            ub = idx;
            idx = idx % pred
          }
        }
      }
      if(pred > 0) {
        return function(elem) {
          var i = getNodeIndex(elem);
          return i >= lb && (ub < 0 || i <= ub) && i % pred == idx
        }
      }else {
        condition = idx
      }
    }
    var ncount = pi(condition);
    return function(elem) {
      return getNodeIndex(elem) == ncount
    }
  }};
  var defaultGetter = goog.userAgent.IE ? function(cond) {
    var clc = cond.toLowerCase();
    if(clc == "class") {
      cond = "className"
    }
    return function(elem) {
      return caseSensitive ? elem.getAttribute(cond) : elem[cond] || elem[clc]
    }
  } : function(cond) {
    return function(elem) {
      return elem && elem.getAttribute && elem.hasAttribute(cond)
    }
  };
  var getSimpleFilterFunc = function(query, ignores) {
    if(!query) {
      return goog.functions.TRUE
    }
    ignores = ignores || {};
    var ff = null;
    if(!ignores.el) {
      ff = agree(ff, isElement)
    }
    if(!ignores.tag) {
      if(query.tag != "*") {
        ff = agree(ff, function(elem) {
          return elem && elem.tagName == query.getTag()
        })
      }
    }
    if(!ignores.classes) {
      goog.array.forEach(query.classes, function(cname, idx, arr) {
        var re = new RegExp("(?:^|\\s)" + cname + "(?:\\s|$)");
        ff = agree(ff, function(elem) {
          return re.test(elem.className)
        });
        ff.count = idx
      })
    }
    if(!ignores.pseudos) {
      goog.array.forEach(query.pseudos, function(pseudo) {
        var pn = pseudo.name;
        if(pseudos[pn]) {
          ff = agree(ff, pseudos[pn](pn, pseudo.value))
        }
      })
    }
    if(!ignores.attrs) {
      goog.array.forEach(query.attrs, function(attr) {
        var matcher;
        var a = attr.attr;
        if(attr.type && attrs[attr.type]) {
          matcher = attrs[attr.type](a, attr.matchFor)
        }else {
          if(a.length) {
            matcher = defaultGetter(a)
          }
        }
        if(matcher) {
          ff = agree(ff, matcher)
        }
      })
    }
    if(!ignores.id) {
      if(query.id) {
        ff = agree(ff, function(elem) {
          return!!elem && elem.id == query.id
        })
      }
    }
    if(!ff) {
      if(!("default" in ignores)) {
        ff = goog.functions.TRUE
      }
    }
    return ff
  };
  var nextSiblingIterator = function(filterFunc) {
    return function(node, ret, bag) {
      while(node = node[nSibling]) {
        if(noNextElementSibling && !isElement(node)) {
          continue
        }
        if((!bag || _isUnique(node, bag)) && filterFunc(node)) {
          ret.push(node)
        }
        break
      }
      return ret
    }
  };
  var nextSiblingsIterator = function(filterFunc) {
    return function(root, ret, bag) {
      var te = root[nSibling];
      while(te) {
        if(simpleNodeTest(te)) {
          if(bag && !_isUnique(te, bag)) {
            break
          }
          if(filterFunc(te)) {
            ret.push(te)
          }
        }
        te = te[nSibling]
      }
      return ret
    }
  };
  var _childElements = function(filterFunc) {
    filterFunc = filterFunc || goog.functions.TRUE;
    return function(root, ret, bag) {
      var te, x = 0, tret = root[childNodesName];
      while(te = tret[x++]) {
        if(simpleNodeTest(te) && (!bag || _isUnique(te, bag)) && filterFunc(te, x)) {
          ret.push(te)
        }
      }
      return ret
    }
  };
  var _isDescendant = function(node, root) {
    var pn = node.parentNode;
    while(pn) {
      if(pn == root) {
        break
      }
      pn = pn.parentNode
    }
    return!!pn
  };
  var _getElementsFuncCache = {};
  var getElementsFunc = function(query) {
    var retFunc = _getElementsFuncCache[query.query];
    if(retFunc) {
      return retFunc
    }
    var io = query.infixOper;
    var oper = io ? io.oper : "";
    var filterFunc = getSimpleFilterFunc(query, {el:1});
    var qt = query.tag;
    var wildcardTag = "*" == qt;
    var ecs = goog.dom.getDocument()["getElementsByClassName"];
    if(!oper) {
      if(query.id) {
        filterFunc = !query.loops && wildcardTag ? goog.functions.TRUE : getSimpleFilterFunc(query, {el:1, id:1});
        retFunc = function(root, arr) {
          var te = goog.dom.getDomHelper(root).getElement(query.id);
          if(!te || !filterFunc(te)) {
            return
          }
          if(9 == root.nodeType) {
            return getArr(te, arr)
          }else {
            if(_isDescendant(te, root)) {
              return getArr(te, arr)
            }
          }
        }
      }else {
        if(ecs && /\{\s*\[native code\]\s*\}/.test(String(ecs)) && query.classes.length && !cssCaseBug) {
          filterFunc = getSimpleFilterFunc(query, {el:1, classes:1, id:1});
          var classesString = query.classes.join(" ");
          retFunc = function(root, arr) {
            var ret = getArr(0, arr), te, x = 0;
            var tret = root.getElementsByClassName(classesString);
            while(te = tret[x++]) {
              if(filterFunc(te, root)) {
                ret.push(te)
              }
            }
            return ret
          }
        }else {
          if(!wildcardTag && !query.loops) {
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while(te = tret[x++]) {
                ret.push(te)
              }
              return ret
            }
          }else {
            filterFunc = getSimpleFilterFunc(query, {el:1, tag:1, id:1});
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while(te = tret[x++]) {
                if(filterFunc(te, root)) {
                  ret.push(te)
                }
              }
              return ret
            }
          }
        }
      }
    }else {
      var skipFilters = {el:1};
      if(wildcardTag) {
        skipFilters.tag = 1
      }
      filterFunc = getSimpleFilterFunc(query, skipFilters);
      if("+" == oper) {
        retFunc = nextSiblingIterator(filterFunc)
      }else {
        if("~" == oper) {
          retFunc = nextSiblingsIterator(filterFunc)
        }else {
          if(">" == oper) {
            retFunc = _childElements(filterFunc)
          }
        }
      }
    }
    return _getElementsFuncCache[query.query] = retFunc
  };
  var filterDown = function(root, queryParts) {
    var candidates = getArr(root), qp, x, te, qpl = queryParts.length, bag, ret;
    for(var i = 0;i < qpl;i++) {
      ret = [];
      qp = queryParts[i];
      x = candidates.length - 1;
      if(x > 0) {
        bag = {};
        ret.nozip = true
      }
      var gef = getElementsFunc(qp);
      for(var j = 0;te = candidates[j];j++) {
        gef(te, ret, bag)
      }
      if(!ret.length) {
        break
      }
      candidates = ret
    }
    return ret
  };
  var _queryFuncCacheDOM = {}, _queryFuncCacheQSA = {};
  var getStepQueryFunc = function(query) {
    var qparts = getQueryParts(goog.string.trim(query));
    if(qparts.length == 1) {
      var tef = getElementsFunc(qparts[0]);
      return function(root) {
        var r = tef(root, []);
        if(r) {
          r.nozip = true
        }
        return r
      }
    }
    return function(root) {
      return filterDown(root, qparts)
    }
  };
  var qsa = "querySelectorAll";
  var qsaAvail = !!goog.dom.getDocument()[qsa] && (!goog.userAgent.WEBKIT || goog.userAgent.isVersion("526"));
  var getQueryFunc = function(query, opt_forceDOM) {
    if(qsaAvail) {
      var qsaCached = _queryFuncCacheQSA[query];
      if(qsaCached && !opt_forceDOM) {
        return qsaCached
      }
    }
    var domCached = _queryFuncCacheDOM[query];
    if(domCached) {
      return domCached
    }
    var qcz = query.charAt(0);
    var nospace = -1 == query.indexOf(" ");
    if(query.indexOf("#") >= 0 && nospace) {
      opt_forceDOM = true
    }
    var useQSA = qsaAvail && !opt_forceDOM && specials.indexOf(qcz) == -1 && (!goog.userAgent.IE || query.indexOf(":") == -1) && !(cssCaseBug && query.indexOf(".") >= 0) && query.indexOf(":contains") == -1 && query.indexOf("|=") == -1;
    if(useQSA) {
      var tq = specials.indexOf(query.charAt(query.length - 1)) >= 0 ? query + " *" : query;
      return _queryFuncCacheQSA[query] = function(root) {
        try {
          if(!(9 == root.nodeType || nospace)) {
            throw"";
          }
          var r = root[qsa](tq);
          if(goog.userAgent.IE) {
            r.commentStrip = true
          }else {
            r.nozip = true
          }
          return r
        }catch(e) {
          return getQueryFunc(query, true)(root)
        }
      }
    }else {
      var parts = query.split(/\s*,\s*/);
      return _queryFuncCacheDOM[query] = parts.length < 2 ? getStepQueryFunc(query) : function(root) {
        var pindex = 0, ret = [], tp;
        while(tp = parts[pindex++]) {
          ret = ret.concat(getStepQueryFunc(tp)(root))
        }
        return ret
      }
    }
  };
  var _zipIdx = 0;
  var _nodeUID = goog.userAgent.IE ? function(node) {
    if(caseSensitive) {
      return node.getAttribute("_uid") || node.setAttribute("_uid", ++_zipIdx) || _zipIdx
    }else {
      return node.uniqueID
    }
  } : function(node) {
    return node["_uid"] || (node["_uid"] = ++_zipIdx)
  };
  var _isUnique = function(node, bag) {
    if(!bag) {
      return 1
    }
    var id = _nodeUID(node);
    if(!bag[id]) {
      return bag[id] = 1
    }
    return 0
  };
  var _zipIdxName = "_zipIdx";
  var _zip = function(arr) {
    if(arr && arr.nozip) {
      return arr
    }
    var ret = [];
    if(!arr || !arr.length) {
      return ret
    }
    if(arr[0]) {
      ret.push(arr[0])
    }
    if(arr.length < 2) {
      return ret
    }
    _zipIdx++;
    if(goog.userAgent.IE && caseSensitive) {
      var szidx = _zipIdx + "";
      arr[0].setAttribute(_zipIdxName, szidx);
      for(var x = 1, te;te = arr[x];x++) {
        if(arr[x].getAttribute(_zipIdxName) != szidx) {
          ret.push(te)
        }
        te.setAttribute(_zipIdxName, szidx)
      }
    }else {
      if(goog.userAgent.IE && arr.commentStrip) {
        try {
          for(var x = 1, te;te = arr[x];x++) {
            if(isElement(te)) {
              ret.push(te)
            }
          }
        }catch(e) {
        }
      }else {
        if(arr[0]) {
          arr[0][_zipIdxName] = _zipIdx
        }
        for(var x = 1, te;te = arr[x];x++) {
          if(arr[x][_zipIdxName] != _zipIdx) {
            ret.push(te)
          }
          te[_zipIdxName] = _zipIdx
        }
      }
    }
    return ret
  };
  var query = function(query, root) {
    if(!query) {
      return[]
    }
    if(query.constructor == Array) {
      return query
    }
    if(!goog.isString(query)) {
      return[query]
    }
    if(goog.isString(root)) {
      root = goog.dom.getElement(root);
      if(!root) {
        return[]
      }
    }
    root = root || goog.dom.getDocument();
    var od = root.ownerDocument || root.documentElement;
    caseSensitive = root.contentType && root.contentType == "application/xml" || goog.userAgent.OPERA && (root.doctype || od.toString() == "[object XMLDocument]") || !!od && (goog.userAgent.IE ? od.xml : root.xmlVersion || od.xmlVersion);
    var r = getQueryFunc(query)(root);
    if(r && r.nozip) {
      return r
    }
    return _zip(r)
  };
  query.pseudos = pseudos;
  return query
}();
goog.exportSymbol("goog.dom.query", goog.dom.query);
goog.exportSymbol("goog.dom.query.pseudos", goog.dom.query.pseudos);
goog.provide("domina.css");
goog.require("cljs.core");
goog.require("goog.dom.query");
goog.require("goog.dom");
goog.require("domina");
domina.css.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0]
};
domina.css.sel = function() {
  var sel = null;
  var sel__1 = function(expr) {
    return sel.call(null, domina.css.root_element.call(null), expr)
  };
  var sel__2 = function(base, expr) {
    if(void 0 === domina.css.t19601) {
      domina.css.t19601 = function(expr, base, sel, meta19602) {
        this.expr = expr;
        this.base = base;
        this.sel = sel;
        this.meta19602 = meta19602;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      domina.css.t19601.cljs$lang$type = true;
      domina.css.t19601.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
        return cljs.core.list.call(null, "domina.css/t19601")
      };
      domina.css.t19601.prototype.domina$DomContent$ = true;
      domina.css.t19601.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var this__19604 = this;
        return cljs.core.mapcat.call(null, function(p1__19592_SHARP_) {
          return domina.normalize_seq.call(null, goog.dom.query(this__19604.expr, p1__19592_SHARP_))
        }, domina.nodes.call(null, this__19604.base))
      };
      domina.css.t19601.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var this__19605 = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.mapcat.call(null, function(p1__19593_SHARP_) {
          return domina.normalize_seq.call(null, goog.dom.query(this__19605.expr, p1__19593_SHARP_))
        }, domina.nodes.call(null, this__19605.base))))
      };
      domina.css.t19601.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19603) {
        var this__19606 = this;
        return this__19606.meta19602
      };
      domina.css.t19601.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19603, meta19602) {
        var this__19607 = this;
        return new domina.css.t19601(this__19607.expr, this__19607.base, this__19607.sel, meta19602)
      };
      domina.css.t19601
    }else {
    }
    return new domina.css.t19601(expr, base, sel, null)
  };
  sel = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return sel__1.call(this, base);
      case 2:
        return sel__2.call(this, base, expr)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sel.cljs$lang$arity$1 = sel__1;
  sel.cljs$lang$arity$2 = sel__2;
  return sel
}();
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.setIgnoreCase(opt_ignoreCase == null ? opt_uri.getIgnoreCase() : opt_ignoreCase);
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQuery(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.queryData_ = new goog.Uri.QueryData(null, this, this.ignoreCase_)
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  if(this.cachedToString_) {
    return this.cachedToString_
  }
  var out = [];
  if(this.scheme_) {
    out.push(goog.Uri.encodeSpecialChars_(this.scheme_, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  if(this.domain_) {
    out.push("//");
    if(this.userInfo_) {
      out.push(goog.Uri.encodeSpecialChars_(this.userInfo_, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.Uri.encodeString_(this.domain_));
    if(this.port_ != null) {
      out.push(":", String(this.getPort()))
    }
  }
  if(this.path_) {
    if(this.hasDomain() && this.path_.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(this.path_, this.path_.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_))
  }
  var query = String(this.queryData_);
  if(query) {
    out.push("?", query)
  }
  if(this.fragment_) {
    out.push("#", goog.Uri.encodeSpecialChars_(this.fragment_, goog.Uri.reDisallowedInFragment_))
  }
  return this.cachedToString_ = out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQuery(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return goog.Uri.create(this.scheme_, this.userInfo_, this.domain_, this.port_, this.path_, this.queryData_.clone(), this.fragment_, this.ignoreCase_)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.uri_ = this;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, this, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeString_ = function(unescapedPart) {
  if(goog.isString(unescapedPart)) {
    return encodeURIComponent(unescapedPart)
  }
  return null
};
goog.Uri.encodeSpecialRegExp_ = /^[a-zA-Z0-9\-_.!~*'():\/;?]*$/;
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  var ret = null;
  if(goog.isString(unescapedPart)) {
    ret = unescapedPart;
    if(!goog.Uri.encodeSpecialRegExp_.test(ret)) {
      ret = encodeURI(unescapedPart)
    }
    if(ret.search(extra) >= 0) {
      ret = ret.replace(extra, goog.Uri.encodeChar_)
    }
  }
  return ret
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.uri_ = opt_uri || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("&");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("=");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  return goog.Uri.QueryData.createFromKeysValues(keys, goog.structs.getValues(map), opt_uri, opt_ignoreCase)
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, opt_uri, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.decodedQuery_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(!this.containsKey(key)) {
    this.keyMap_.set(key, value)
  }else {
    var current = this.keyMap_.get(key);
    if(goog.isArray(current)) {
      current.push(value)
    }else {
      this.keyMap_.set(key, [current, value])
    }
  }
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  if(this.keyMap_) {
    this.keyMap_.clear()
  }
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        rv.push(keys[i])
      }
    }else {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv;
  if(opt_key) {
    var key = this.getKeyName_(opt_key);
    if(this.containsKey(key)) {
      var value = this.keyMap_.get(key);
      if(goog.isArray(value)) {
        return value
      }else {
        rv = [];
        rv.push(value)
      }
    }else {
      rv = []
    }
  }else {
    var vals = this.keyMap_.getValues();
    rv = [];
    for(var i = 0;i < vals.length;i++) {
      var val = vals[i];
      if(goog.isArray(val)) {
        goog.array.extend(rv, val)
      }else {
        rv.push(val)
      }
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  this.keyMap_.set(key, value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      return val[0]
    }else {
      return val
    }
  }else {
    return opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  if(values.length > 0) {
    this.keyMap_.set(key, values);
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var count = 0;
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        if(count > 0) {
          sb.push("&")
        }
        sb.push(encodedKey);
        if(val[j] !== "") {
          sb.push("=", goog.string.urlEncode(val[j]))
        }
        count++
      }
    }else {
      if(count > 0) {
        sb.push("&")
      }
      sb.push(encodedKey);
      if(val !== "") {
        sb.push("=", goog.string.urlEncode(val))
      }
      count++
    }
  }
  return this.encodedQuery_ = sb.join("")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  if(!this.decodedQuery_) {
    this.decodedQuery_ = goog.Uri.decodeOrEmpty_(this.toString())
  }
  return this.decodedQuery_
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  delete this.decodedQuery_;
  delete this.encodedQuery_;
  if(this.uri_) {
    delete this.uri_.cachedToString_
  }
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  if(this.decodedQuery_) {
    rv.decodedQuery_ = this.decodedQuery_
  }
  if(this.encodedQuery_) {
    rv.encodedQuery_ = this.encodedQuery_
  }
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone()
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key, map) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.add(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
goog.provide("goog.net.Cookies");
goog.provide("goog.net.cookies");
goog.require("goog.userAgent");
goog.net.Cookies = function(context) {
  this.document_ = context
};
goog.net.Cookies.MAX_COOKIE_LENGTH = 3950;
goog.net.Cookies.SPLIT_RE_ = /\s*;\s*/;
goog.net.Cookies.TEST_COOKIE_NAME_ = "COOKIES_TEST_";
goog.net.Cookies.prototype.isEnabled = function() {
  var isEnabled = this.isNavigatorCookieEnabled_();
  if(isEnabled && goog.userAgent.WEBKIT) {
    var cookieName = goog.net.Cookies.TEST_COOKIE_NAME_ + goog.now();
    goog.net.cookies.set(cookieName, "1");
    if(!this.get(cookieName)) {
      return false
    }
    this.remove(cookieName)
  }
  return isEnabled
};
goog.net.Cookies.prototype.isValidName = function(name) {
  return!/[;=\s]/.test(name)
};
goog.net.Cookies.prototype.isValidValue = function(value) {
  return!/[;\r\n]/.test(value)
};
goog.net.Cookies.prototype.set = function(name, value, opt_maxAge, opt_path, opt_domain, opt_secure) {
  if(!this.isValidName(name)) {
    throw Error('Invalid cookie name "' + name + '"');
  }
  if(!this.isValidValue(value)) {
    throw Error('Invalid cookie value "' + value + '"');
  }
  if(!goog.isDef(opt_maxAge)) {
    opt_maxAge = -1
  }
  var domainStr = opt_domain ? ";domain=" + opt_domain : "";
  var pathStr = opt_path ? ";path=" + opt_path : "";
  var secureStr = opt_secure ? ";secure" : "";
  var expiresStr;
  if(opt_maxAge < 0) {
    expiresStr = ""
  }else {
    if(opt_maxAge == 0) {
      var pastDate = new Date(1970, 1, 1);
      expiresStr = ";expires=" + pastDate.toUTCString()
    }else {
      var futureDate = new Date(goog.now() + opt_maxAge * 1E3);
      expiresStr = ";expires=" + futureDate.toUTCString()
    }
  }
  this.setCookie_(name + "=" + value + domainStr + pathStr + expiresStr + secureStr)
};
goog.net.Cookies.prototype.get = function(name, opt_default) {
  var nameEq = name + "=";
  var parts = this.getParts_();
  for(var i = 0, part;part = parts[i];i++) {
    if(part.indexOf(nameEq) == 0) {
      return part.substr(nameEq.length)
    }
  }
  return opt_default
};
goog.net.Cookies.prototype.remove = function(name, opt_path, opt_domain) {
  var rv = this.containsKey(name);
  this.set(name, "", 0, opt_path, opt_domain);
  return rv
};
goog.net.Cookies.prototype.getKeys = function() {
  return this.getKeyValues_().keys
};
goog.net.Cookies.prototype.getValues = function() {
  return this.getKeyValues_().values
};
goog.net.Cookies.prototype.isEmpty = function() {
  return!this.getCookie_()
};
goog.net.Cookies.prototype.getCount = function() {
  var cookie = this.getCookie_();
  if(!cookie) {
    return 0
  }
  return this.getParts_().length
};
goog.net.Cookies.prototype.containsKey = function(key) {
  return goog.isDef(this.get(key))
};
goog.net.Cookies.prototype.containsValue = function(value) {
  var values = this.getKeyValues_().values;
  for(var i = 0;i < values.length;i++) {
    if(values[i] == value) {
      return true
    }
  }
  return false
};
goog.net.Cookies.prototype.clear = function() {
  var keys = this.getKeyValues_().keys;
  for(var i = keys.length - 1;i >= 0;i--) {
    this.remove(keys[i])
  }
};
goog.net.Cookies.prototype.setCookie_ = function(s) {
  this.document_.cookie = s
};
goog.net.Cookies.prototype.getCookie_ = function() {
  return this.document_.cookie
};
goog.net.Cookies.prototype.getParts_ = function() {
  return(this.getCookie_() || "").split(goog.net.Cookies.SPLIT_RE_)
};
goog.net.Cookies.prototype.isNavigatorCookieEnabled_ = function() {
  return navigator.cookieEnabled
};
goog.net.Cookies.prototype.getKeyValues_ = function() {
  var parts = this.getParts_();
  var keys = [], values = [], index, part;
  for(var i = 0;part = parts[i];i++) {
    index = part.indexOf("=");
    if(index == -1) {
      keys.push("");
      values.push(part)
    }else {
      keys.push(part.substring(0, index));
      values.push(part.substring(index + 1))
    }
  }
  return{keys:keys, values:values}
};
goog.net.cookies = new goog.net.Cookies(document);
goog.net.cookies.MAX_COOKIE_LENGTH = goog.net.Cookies.MAX_COOKIE_LENGTH;
goog.provide("shoreleave.browser.cookies");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.net.Cookies");
goog.net.Cookies.prototype.cljs$core$IHash$ = true;
goog.net.Cookies.prototype.cljs$core$IHash$_hash$arity$1 = function(c) {
  return cljs.core._hash.call(null, cljs.core._persistent_BANG_.call(null, c))
};
goog.net.Cookies.prototype.cljs$core$ILookup$ = true;
goog.net.Cookies.prototype.cljs$core$ILookup$_lookup$arity$2 = function(c, k) {
  return cljs.core._lookup.call(null, c, k, null)
};
goog.net.Cookies.prototype.cljs$core$ILookup$_lookup$arity$3 = function(c, k, not_found) {
  var v__18202 = c.get(cljs.core.name.call(null, k), not_found);
  if(cljs.core.string_QMARK_.call(null, v__18202)) {
    return goog.string.urlDecode(v__18202)
  }else {
    return v__18202
  }
};
goog.net.Cookies.prototype.cljs$core$IAssociative$ = true;
goog.net.Cookies.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(c, k, v) {
  return cljs.core._assoc.call(null, cljs.core._persistent_BANG_.call(null, c), k, v)
};
goog.net.Cookies.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(c, k) {
  return c.containsKey(cljs.core.name.call(null, k))
};
goog.net.Cookies.prototype.cljs$core$IFn$ = true;
goog.net.Cookies.prototype.call = function() {
  var G__18227 = null;
  var G__18227__2 = function(this_sym18203, k) {
    var this_sym18203__18205 = this;
    var c__18206 = this_sym18203__18205;
    return cljs.core._lookup.call(null, c__18206, k)
  };
  var G__18227__3 = function(this_sym18204, k, not_found) {
    var this_sym18204__18207 = this;
    var c__18208 = this_sym18204__18207;
    return cljs.core._lookup.call(null, c__18208, k, not_found)
  };
  G__18227 = function(this_sym18204, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18227__2.call(this, this_sym18204, k);
      case 3:
        return G__18227__3.call(this, this_sym18204, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__18227
}();
goog.net.Cookies.prototype.apply = function(this_sym18200, args18201) {
  return this_sym18200.call.apply(this_sym18200, [this_sym18200].concat(args18201.slice()))
};
goog.net.Cookies.prototype.cljs$core$ITransientMap$ = true;
goog.net.Cookies.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$4 = function() {
  var G__18228__delegate = function(c, k, opts) {
    var temp__3974__auto____18210 = function() {
      var and__3822__auto____18209 = c.isValidName(cljs.core.name.call(null, k));
      if(cljs.core.truth_(and__3822__auto____18209)) {
        return cljs.core.name.call(null, k)
      }else {
        return and__3822__auto____18209
      }
    }();
    if(cljs.core.truth_(temp__3974__auto____18210)) {
      var k__18211 = temp__3974__auto____18210;
      var map__18212__18213 = cljs.core.apply.call(null, cljs.core.hash_map, opts);
      var map__18212__18214 = cljs.core.seq_QMARK_.call(null, map__18212__18213) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18212__18213) : map__18212__18213;
      var domain__18215 = cljs.core._lookup.call(null, map__18212__18214, "\ufdd0'domain", null);
      var path__18216 = cljs.core._lookup.call(null, map__18212__18214, "\ufdd0'path", null);
      return c.remove(k__18211, path__18216, domain__18215)
    }else {
      return null
    }
  };
  var G__18228 = function(c, k, var_args) {
    var opts = null;
    if(goog.isDef(var_args)) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return G__18228__delegate.call(this, c, k, opts)
  };
  G__18228.cljs$lang$maxFixedArity = 2;
  G__18228.cljs$lang$applyTo = function(arglist__18229) {
    var c = cljs.core.first(arglist__18229);
    var k = cljs.core.first(cljs.core.next(arglist__18229));
    var opts = cljs.core.rest(cljs.core.next(arglist__18229));
    return G__18228__delegate(c, k, opts)
  };
  G__18228.cljs$lang$arity$variadic = G__18228__delegate;
  return G__18228
}();
goog.net.Cookies.prototype.cljs$core$ISeqable$ = true;
goog.net.Cookies.prototype.cljs$core$ISeqable$_seq$arity$1 = function(c) {
  return cljs.core.map.call(null, cljs.core.vector, c.getKeys(), c.getValues())
};
goog.net.Cookies.prototype.cljs$core$IPrintable$ = true;
goog.net.Cookies.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(c, opts) {
  return cljs.core._pr_seq.call(null, cljs.core._persistent_BANG_.call(null, c), opts)
};
goog.net.Cookies.prototype.cljs$core$ICounted$ = true;
goog.net.Cookies.prototype.cljs$core$ICounted$_count$arity$1 = function(c) {
  return c.getCount()
};
goog.net.Cookies.prototype.cljs$core$ITransientCollection$ = true;
goog.net.Cookies.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(c) {
  return shoreleave.browser.cookies.as_hash_map.call(null, c)
};
goog.net.Cookies.prototype.cljs$core$ITransientAssociative$ = true;
goog.net.Cookies.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$5 = function() {
  var G__18230__delegate = function(c, k, v, opts) {
    var temp__3974__auto____18218 = function() {
      var and__3822__auto____18217 = c.isValidName(cljs.core.name.call(null, k));
      if(cljs.core.truth_(and__3822__auto____18217)) {
        return cljs.core.name.call(null, k)
      }else {
        return and__3822__auto____18217
      }
    }();
    if(cljs.core.truth_(temp__3974__auto____18218)) {
      var k__18219 = temp__3974__auto____18218;
      var map__18220__18221 = cljs.core.apply.call(null, cljs.core.hash_map, opts);
      var map__18220__18222 = cljs.core.seq_QMARK_.call(null, map__18220__18221) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18220__18221) : map__18220__18221;
      var secure_QMARK___18223 = cljs.core._lookup.call(null, map__18220__18222, "\ufdd0'secure?", null);
      var domain__18224 = cljs.core._lookup.call(null, map__18220__18222, "\ufdd0'domain", null);
      var path__18225 = cljs.core._lookup.call(null, map__18220__18222, "\ufdd0'path", null);
      var max_age__18226 = cljs.core._lookup.call(null, map__18220__18222, "\ufdd0'max-age", null);
      return c.set(k__18219, v, max_age__18226, path__18225, domain__18224, secure_QMARK___18223)
    }else {
      return null
    }
  };
  var G__18230 = function(c, k, v, var_args) {
    var opts = null;
    if(goog.isDef(var_args)) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return G__18230__delegate.call(this, c, k, v, opts)
  };
  G__18230.cljs$lang$maxFixedArity = 3;
  G__18230.cljs$lang$applyTo = function(arglist__18231) {
    var c = cljs.core.first(arglist__18231);
    var k = cljs.core.first(cljs.core.next(arglist__18231));
    var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__18231)));
    var opts = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__18231)));
    return G__18230__delegate(c, k, v, opts)
  };
  G__18230.cljs$lang$arity$variadic = G__18230__delegate;
  return G__18230
}();
shoreleave.browser.cookies.cookies = new goog.net.Cookies(document);
shoreleave.browser.cookies.as_hash_map = function() {
  var as_hash_map = null;
  var as_hash_map__0 = function() {
    return as_hash_map.call(null, shoreleave.browser.cookies.cookies)
  };
  var as_hash_map__1 = function(cks) {
    return cljs.core.zipmap.call(null, cks.getKeys(), cks.getValues())
  };
  as_hash_map = function(cks) {
    switch(arguments.length) {
      case 0:
        return as_hash_map__0.call(this);
      case 1:
        return as_hash_map__1.call(this, cks)
    }
    throw"Invalid arity: " + arguments.length;
  };
  as_hash_map.cljs$lang$arity$0 = as_hash_map__0;
  as_hash_map.cljs$lang$arity$1 = as_hash_map__1;
  return as_hash_map
}();
shoreleave.browser.cookies.cookies_enabled_QMARK_ = function() {
  var cookies_enabled_QMARK_ = null;
  var cookies_enabled_QMARK___0 = function() {
    return cookies_enabled_QMARK_.call(null, shoreleave.browser.cookies.cookies)
  };
  var cookies_enabled_QMARK___1 = function(cks) {
    return cks.isEnabled()
  };
  cookies_enabled_QMARK_ = function(cks) {
    switch(arguments.length) {
      case 0:
        return cookies_enabled_QMARK___0.call(this);
      case 1:
        return cookies_enabled_QMARK___1.call(this, cks)
    }
    throw"Invalid arity: " + arguments.length;
  };
  cookies_enabled_QMARK_.cljs$lang$arity$0 = cookies_enabled_QMARK___0;
  cookies_enabled_QMARK_.cljs$lang$arity$1 = cookies_enabled_QMARK___1;
  return cookies_enabled_QMARK_
}();
shoreleave.browser.cookies.empty_BANG_ = function empty_BANG_(cks) {
  return cks.clear()
};
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
clojure.browser.event.EventType = {};
clojure.browser.event.event_types = function event_types(this$) {
  if(function() {
    var and__3822__auto____18166 = this$;
    if(and__3822__auto____18166) {
      return this$.clojure$browser$event$EventType$event_types$arity$1
    }else {
      return and__3822__auto____18166
    }
  }()) {
    return this$.clojure$browser$event$EventType$event_types$arity$1(this$)
  }else {
    var x__2264__auto____18167 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____18168 = clojure.browser.event.event_types[goog.typeOf(x__2264__auto____18167)];
      if(or__3824__auto____18168) {
        return or__3824__auto____18168
      }else {
        var or__3824__auto____18169 = clojure.browser.event.event_types["_"];
        if(or__3824__auto____18169) {
          return or__3824__auto____18169
        }else {
          throw cljs.core.missing_protocol.call(null, "EventType.event-types", this$);
        }
      }
    }().call(null, this$)
  }
};
Element.prototype.clojure$browser$event$EventType$ = true;
Element.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__18170) {
    var vec__18171__18172 = p__18170;
    var k__18173 = cljs.core.nth.call(null, vec__18171__18172, 0, null);
    var v__18174 = cljs.core.nth.call(null, vec__18171__18172, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__18173.toLowerCase()), v__18174], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
goog.events.EventTarget.prototype.clojure$browser$event$EventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__18175) {
    var vec__18176__18177 = p__18175;
    var k__18178 = cljs.core.nth.call(null, vec__18176__18177, 0, null);
    var v__18179 = cljs.core.nth.call(null, vec__18176__18177, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__18178.toLowerCase()), v__18179], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false)
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen.cljs$lang$arity$3 = listen__3;
  listen.cljs$lang$arity$4 = listen__4;
  return listen
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false)
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once.cljs$lang$arity$3 = listen_once__3;
  listen_once.cljs$lang$arity$4 = listen_once__4;
  return listen_once
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false)
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten.cljs$lang$arity$3 = unlisten__3;
  unlisten.cljs$lang$arity$4 = unlisten__4;
  return unlisten
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key)
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event)
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e)
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount()
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.Replacer;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object)
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = goog.userAgent.WEBKIT ? !opt_cancel : !!opt_cancel;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver
};
goog.debug.getFunctionName = function(fn) {
  if(goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn]
  }
  if(goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if(name) {
      goog.debug.fnNameCache_[fn] = name;
      return name
    }
  }
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.logToProfilers = function(msg) {
  if(goog.global["console"]) {
    if(goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg)
    }else {
      if(goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg)
      }
    }
  }
  if(goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg)
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.debug.Logger");
goog.require("goog.json");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.base(this);
  this.services_ = {}
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.debug.Logger.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if(opt_connectCb) {
    opt_connectCb()
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload}
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if(!service) {
    return
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if(goog.isDefAndNotNull(decodedPayload)) {
    service.callback(decodedPayload)
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if(service) {
    return service
  }else {
    if(this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload}
    }
  }
  this.logger.warning('Unknown service name "' + serviceName + '"');
  return null
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if(objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload)
    }catch(err) {
      this.logger.warning("Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null
    }
  }else {
    if(!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload)
    }
  }
  return payload
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  goog.dispose(this.logger);
  delete this.logger;
  delete this.services_;
  delete this.defaultService_
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.debug.Logger");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.channels_ = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while(length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength))
  }
  return s
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.debug.Logger.getLogger("goog.net.xpc");
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper()
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow()
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || ""
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this)
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.iframeElm_ = this.channel_.iframeElement_;
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this)
  }else {
    this.attemptSetup_()
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if(!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement
    }
    if(this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(retry) {
    if(!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this)
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected_()
  }else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if(!this.recursive_ && this.queue_.length == 0) {
    this.channel_.deliver_(serviceName, payload)
  }else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if(this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1)
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while(this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.deliver_(msg.serviceName, msg.payload)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null
};
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = []
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg"
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack"
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  if(this.isDisposed()) {
    return
  }
  goog.net.xpc.logger.fine("transport connect called");
  if(!this.initialized_) {
    goog.net.xpc.logger.fine("initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true
  }
  this.checkForeignFramesReady_()
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name]
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.net.xpc.logger.finest("constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr
};
goog.net.xpc.IframePollingTransport.prototype.innerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("innerPeerReconnect called");
  this.channel_.name = goog.net.xpc.getRandomString(10);
  goog.net.xpc.logger.finest("switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name)
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("outerPeerReconnect called");
  var frames = this.channel_.peerWindowObject_.frames;
  var length = frames.length;
  for(var i = 0;i < length;i++) {
    var frameName;
    try {
      if(frames[i] && frames[i].name) {
        frameName = frames[i].name
      }
    }catch(e) {
    }
    if(!frameName) {
      continue
    }
    var message = frameName.split("_");
    if(message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.net.xpc.logger.finest("deconstructSenderFrames called");
  if(this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null
  }
  if(this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if(!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.net.xpc.logger.finest("foreign frames not (yet) present");
    if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !this.reconnectFrame_) {
      this.innerPeerReconnect_()
    }else {
      if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
        this.outerPeerReconnect_()
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100)
  }else {
    goog.net.xpc.logger.fine("foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getMsgFrameName_()], goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getAckFrameName_()], goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_()
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.net.xpc.logger.finest("checking for receive frame: " + frameName);
  try {
    var winObj = this.channel_.peerWindowObject_.frames[frameName];
    if(!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false
    }
  }catch(e) {
    return false
  }
  return true
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.channel_.peerWindowObject_.frames;
  if(!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if(!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this)
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.net.xpc.logger.fine("local frames not (yet) present")
  }else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.net.xpc.logger.fine("local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.net.xpc.logger.fine("SETUP sent")
    }, this), 100)
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if(this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected_();
    if(this.deliveryQueue_) {
      goog.net.xpc.logger.fine("delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for(var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.deliver_(m.service, m.payload)
      }
      delete this.deliveryQueue_
    }
  }else {
    goog.net.xpc.logger.finest("checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_)
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.net.xpc.logger.finest("msg received: " + raw);
  if(raw == goog.net.xpc.SETUP) {
    if(!this.ackSender_) {
      return
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.net.xpc.logger.finest("SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if(pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame)
      }else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if(part0 == 1) {
          this.parts_ = []
        }
        this.parts_.push(frame);
        if(part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_
        }
      }
    }else {
      goog.net.xpc.logger.warning("received msg, but channel is not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.net.xpc.logger.finest("ack received: " + msgStr);
  if(msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected()) {
      if(!this.waitForAck_) {
        goog.net.xpc.logger.warning("got unexpected ack");
        return
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if(seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_()
      }else {
        goog.net.xpc.logger.warning("got ack with wrong sequence")
      }
    }else {
      goog.net.xpc.logger.warning("received ack, but channel not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if(this.waitForAck_ || !this.sendQueue_.length) {
    return
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.net.xpc.logger.finest("msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if(!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.net.xpc.logger.finest("queued delivery")
  }else {
    this.channel_.deliver_(service, payload)
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if(!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame)
  }else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while(pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_
    }
  }
  this.sendNextFrame_()
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var rcvd = false;
  try {
    for(var i = 0, l = goog.net.xpc.IframePollingTransport.receivers_.length;i < l;i++) {
      rcvd = rcvd || goog.net.xpc.IframePollingTransport.receivers_[i].receive()
    }
  }catch(e) {
    goog.net.xpc.logger.info("receive_() failed: " + e);
    goog.net.xpc.IframePollingTransport.receivers_[i].transport_.channel_.notifyTransportError_();
    if(!goog.net.xpc.IframePollingTransport.receivers_.length) {
      return
    }
  }
  var now = goog.now();
  if(rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t)
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.net.xpc.logger.fine("starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if(goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_)
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_)
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if(goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url
    }else {
      this.sendFrame_.location.replace(url)
    }
  }catch(e) {
    goog.net.xpc.logger.severe("sending failed", e)
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if(loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if(payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload))
    }
    return true
  }else {
    return false
  }
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_()
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if(goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if(!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_()
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while(goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.net.xpc.logger.finest("iframe removed")
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_()
  }
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if(!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP)
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if(!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  }else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if(!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0}
    }
    if(goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if(fragmentInfo.received != fragmentInfo.expected) {
      return
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr]
  }
  goog.net.xpc.channels_[channelName].deliver_(service, decodeURIComponent(payload))
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if(payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected_()
  }else {
    if(payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected_()
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if(goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for(var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr)
    }
  }else {
    this.send_(service, encodedPayload)
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if(goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    div.innerHTML = '<iframe onload="this.xpcOnload()"></iframe>';
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_
  }else {
    var ifr = this.getWindow().document.createElement("iframe");
    if(goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr})
    }else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_)
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if(this.peerIframeId_) {
    url += "," + this.peerIframeId_
  }
  url += "|" + service;
  if(opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.net.xpc.logger.finest("msg sent: " + url)
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.net.xpc.logger.finest("iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0)
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerHostname_ = peerHostname || "*"
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if(!goog.isNumber(value)) {
    value = 0
  }
  if(value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if(!goog.isString(data)) {
    return false
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if(headDelim == -1 || serviceDelim == -1) {
    return false
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.net.xpc.logger.fine("messageReceived: channel=" + channelName + ", service=" + service + ", payload=" + payload);
  var channel = goog.net.xpc.channels_[channelName];
  if(channel) {
    channel.deliver_(service, payload, msgEvt.getBrowserEvent().origin);
    return true
  }
  for(var staleChannelName in goog.net.xpc.channels_) {
    var staleChannel = goog.net.xpc.channels_[staleChannelName];
    if(staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && payload == goog.net.xpc.SETUP) {
      goog.net.xpc.logger.fine("changing channel name to " + channelName);
      staleChannel.name = channelName;
      delete goog.net.xpc.channels_[staleChannelName];
      goog.net.xpc.channels_[channelName] = staleChannel;
      staleChannel.deliver_(service, payload);
      return true
    }
  }
  goog.net.xpc.logger.info('channel name mismatch; message ignored"');
  return false
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  switch(payload) {
    case goog.net.xpc.SETUP:
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      break;
    case goog.net.xpc.SETUP_ACK_:
      this.channel_.notifyConnected_();
      break
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.connectWithRetries_()
};
goog.net.xpc.NativeMessagingTransport.prototype.connectWithRetries_ = function() {
  if(this.channel_.isConnected() || this.isDisposed()) {
    return
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  this.getWindow().setTimeout(goog.bind(this.connectWithRetries_, this), 100)
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.peerWindowObject_;
  if(!win) {
    goog.net.xpc.logger.fine("send(): window not ready");
    return
  }
  var obj = win.postMessage ? win : win.document;
  this.send = function(service, payload) {
    goog.net.xpc.logger.fine("send(): payload=" + payload + " to hostname=" + this.peerHostname_);
    obj.postMessage(this.channel_.name + "|" + service + ":" + payload, this.peerHostname_)
  };
  this.send(service, payload)
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if(value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
    }
  }
  delete this.send
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.reflect");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var isSupported = false;
  try {
    var oldOpener = window.opener;
    window.opener = {};
    isSupported = goog.reflect.canAccessProperty(window, "opener");
    window.opener = oldOpener
  }catch(e) {
  }
  return isSupported
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if(listenWindow["nix_setup_complete"]) {
    return
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport = transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth = auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken = m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap = New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " = wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting global setup: " + e)
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.attemptOuterSetup_()
  }else {
    this.attemptInnerSetup_()
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  var innerFrame = this.channel_.iframeElement_;
  try {
    innerFrame.contentWindow.opener = this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_);
    this.localSetupCompleted_ = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  try {
    var opener = this.getWindow().opener;
    if(opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if(remoteAuthToken != this.remoteAuthToken_) {
        goog.net.xpc.logger.severe("Invalid auth token from other party");
        return
      }
      this.nixChannel_["CreateChannel"](this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
    return
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if(typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.net.xpc.logger.severe("Invalid NIX channel given to createChannel_")
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if(remoteAuthToken != this.remoteAuthToken_) {
    goog.net.xpc.logger.severe("Invalid auth token from other party");
    return
  }
  this.channel_.notifyConnected_()
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  function deliveryHandler() {
    this.channel_.deliver_(serviceName, payload)
  }
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1)
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if(typeof this.nixChannel_ !== "unknown") {
    goog.net.xpc.logger.severe("NIX channel not connected")
  }
  this.nixChannel_["SendMessage"](service, payload)
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.nixChannel_ = null
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Disposable");
goog.require("goog.Uri");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.json");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.base(this);
  for(var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if(uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels_[this.name] = this;
  goog.events.listen(window, "unload", goog.net.xpc.CrossPageChannel.disposeAll_);
  goog.net.xpc.logger.info("CrossPageChannel created: " + this.name)
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if(goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING
  }else {
    if(goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD
    }else {
      if(goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY
      }else {
        if(goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported()) {
          transportType = goog.net.xpc.TransportTypes.NIX
        }else {
          transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING
        }
      }
    }
  }
  return transportType
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if(this.transport_) {
    return
  }
  if(!this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    this.cfg_[goog.net.xpc.CfgFields.TRANSPORT] = this.determineTransportType_()
  }
  switch(this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME], this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break
  }
  if(this.transport_) {
    goog.net.xpc.logger.info("Transport created: " + this.transport_.getName())
  }else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType()
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName()
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]
  }
  return peerCfg
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4)
  }
  var iframeElm = goog.dom.createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if(opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm)
  }else {
    iframeElm.style.width = iframeElm.style.height = "100%"
  }
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if(goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri)
  }
  if(opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()))
  }
  if(goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    this.deferConnect_ = true;
    window.setTimeout(goog.bind(function() {
      this.deferConnect_ = false;
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")");
      if(this.connectDeferred_) {
        this.connect(this.connectCb_)
      }
    }, this), 1)
  }else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")")
  }
  return iframeElm
};
goog.net.xpc.CrossPageChannel.prototype.deferConnect_ = false;
goog.net.xpc.CrossPageChannel.prototype.connectDeferred_ = false;
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if(this.deferConnect_) {
    goog.net.xpc.logger.info("connect() deferred");
    this.connectDeferred_ = true;
    return
  }
  this.connectDeferred_ = false;
  goog.net.xpc.logger.info("connect()");
  if(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID])
  }
  if(this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if(!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]]
    }
    this.setPeerWindowObject(winObj)
  }
  if(!this.peerWindowObject_) {
    if(window == top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    }else {
      this.setPeerWindowObject(window.parent)
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while(this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()()
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  if(!this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  this.transport_.dispose();
  this.transport_ = null;
  this.connectCb_ = null;
  this.connectDeferred_ = false;
  this.deferredDeliveries_.length = 0;
  goog.net.xpc.logger.info('Channel "' + this.name + '" closed')
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = function() {
  if(this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.net.xpc.logger.info('Channel "' + this.name + '" connected');
  this.connectCb_()
};
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError_ = function() {
  goog.net.xpc.logger.info("Transport Error");
  this.close()
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if(!this.isConnected()) {
    goog.net.xpc.logger.severe("Can't send. Channel not connected.");
    return
  }
  if(Boolean(this.peerWindowObject_.closed)) {
    goog.net.xpc.logger.severe("Peer has disappeared.");
    this.close();
    return
  }
  if(goog.isObject(payload)) {
    payload = goog.json.serialize(payload)
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload)
};
goog.net.xpc.CrossPageChannel.prototype.deliver_ = function(serviceName, payload, opt_origin) {
  if(this.connectDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.deliver_, this, serviceName, payload, opt_origin));
    return
  }
  if(!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.net.xpc.logger.warning('Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return
  }
  if(this.isDisposed()) {
    goog.net.xpc.logger.warning("CrossPageChannel::deliver_(): Disposed.")
  }else {
    if(!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload)
    }else {
      if(this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload)
      }else {
        goog.net.xpc.logger.info("CrossPageChannel::deliver_(): Not connected.")
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name
  }
  return name.replace(/[%:|]/g, encodeURIComponent)
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1)
  }else {
    return name
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME]
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels_[this.name];
  this.deferredDeliveries_.length = 0
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for(var name in goog.net.xpc.channels_) {
    var ch = goog.net.xpc.channels_[name];
    if(ch) {
      ch.dispose()
    }
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp()
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if(!this.xhr_) {
      return null
    }
    if("response" in this.xhr_) {
      return this.xhr_.response
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer
        }
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.json");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__18029) {
  var vec__18030__18031 = p__18029;
  var k__18032 = cljs.core.nth.call(null, vec__18030__18031, 0, null);
  var v__18033 = cljs.core.nth.call(null, vec__18030__18031, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__18032.toLowerCase()), v__18033], true)
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = {};
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if(function() {
      var and__3822__auto____18050 = this$;
      if(and__3822__auto____18050) {
        return this$.clojure$browser$net$IConnection$connect$arity$1
      }else {
        return and__3822__auto____18050
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$)
    }else {
      var x__2264__auto____18051 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____18052 = clojure.browser.net.connect[goog.typeOf(x__2264__auto____18051)];
        if(or__3824__auto____18052) {
          return or__3824__auto____18052
        }else {
          var or__3824__auto____18053 = clojure.browser.net.connect["_"];
          if(or__3824__auto____18053) {
            return or__3824__auto____18053
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var connect__2 = function(this$, opt1) {
    if(function() {
      var and__3822__auto____18054 = this$;
      if(and__3822__auto____18054) {
        return this$.clojure$browser$net$IConnection$connect$arity$2
      }else {
        return and__3822__auto____18054
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1)
    }else {
      var x__2264__auto____18055 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____18056 = clojure.browser.net.connect[goog.typeOf(x__2264__auto____18055)];
        if(or__3824__auto____18056) {
          return or__3824__auto____18056
        }else {
          var or__3824__auto____18057 = clojure.browser.net.connect["_"];
          if(or__3824__auto____18057) {
            return or__3824__auto____18057
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1)
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if(function() {
      var and__3822__auto____18058 = this$;
      if(and__3822__auto____18058) {
        return this$.clojure$browser$net$IConnection$connect$arity$3
      }else {
        return and__3822__auto____18058
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2)
    }else {
      var x__2264__auto____18059 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____18060 = clojure.browser.net.connect[goog.typeOf(x__2264__auto____18059)];
        if(or__3824__auto____18060) {
          return or__3824__auto____18060
        }else {
          var or__3824__auto____18061 = clojure.browser.net.connect["_"];
          if(or__3824__auto____18061) {
            return or__3824__auto____18061
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2)
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if(function() {
      var and__3822__auto____18062 = this$;
      if(and__3822__auto____18062) {
        return this$.clojure$browser$net$IConnection$connect$arity$4
      }else {
        return and__3822__auto____18062
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3)
    }else {
      var x__2264__auto____18063 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____18064 = clojure.browser.net.connect[goog.typeOf(x__2264__auto____18063)];
        if(or__3824__auto____18064) {
          return or__3824__auto____18064
        }else {
          var or__3824__auto____18065 = clojure.browser.net.connect["_"];
          if(or__3824__auto____18065) {
            return or__3824__auto____18065
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3)
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3)
    }
    throw"Invalid arity: " + arguments.length;
  };
  connect.cljs$lang$arity$1 = connect__1;
  connect.cljs$lang$arity$2 = connect__2;
  connect.cljs$lang$arity$3 = connect__3;
  connect.cljs$lang$arity$4 = connect__4;
  return connect
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if(function() {
      var and__3822__auto____18086 = this$;
      if(and__3822__auto____18086) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2
      }else {
        return and__3822__auto____18086
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt)
    }else {
      var x__2264__auto____18087 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____18088 = clojure.browser.net.transmit[goog.typeOf(x__2264__auto____18087)];
        if(or__3824__auto____18088) {
          return or__3824__auto____18088
        }else {
          var or__3824__auto____18089 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____18089) {
            return or__3824__auto____18089
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt)
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if(function() {
      var and__3822__auto____18090 = this$;
      if(and__3822__auto____18090) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3
      }else {
        return and__3822__auto____18090
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2)
    }else {
      var x__2264__auto____18091 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____18092 = clojure.browser.net.transmit[goog.typeOf(x__2264__auto____18091)];
        if(or__3824__auto____18092) {
          return or__3824__auto____18092
        }else {
          var or__3824__auto____18093 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____18093) {
            return or__3824__auto____18093
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2)
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if(function() {
      var and__3822__auto____18094 = this$;
      if(and__3822__auto____18094) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4
      }else {
        return and__3822__auto____18094
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3)
    }else {
      var x__2264__auto____18095 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____18096 = clojure.browser.net.transmit[goog.typeOf(x__2264__auto____18095)];
        if(or__3824__auto____18096) {
          return or__3824__auto____18096
        }else {
          var or__3824__auto____18097 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____18097) {
            return or__3824__auto____18097
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3)
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if(function() {
      var and__3822__auto____18098 = this$;
      if(and__3822__auto____18098) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5
      }else {
        return and__3822__auto____18098
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4)
    }else {
      var x__2264__auto____18099 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____18100 = clojure.browser.net.transmit[goog.typeOf(x__2264__auto____18099)];
        if(or__3824__auto____18100) {
          return or__3824__auto____18100
        }else {
          var or__3824__auto____18101 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____18101) {
            return or__3824__auto____18101
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4)
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if(function() {
      var and__3822__auto____18102 = this$;
      if(and__3822__auto____18102) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6
      }else {
        return and__3822__auto____18102
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5)
    }else {
      var x__2264__auto____18103 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____18104 = clojure.browser.net.transmit[goog.typeOf(x__2264__auto____18103)];
        if(or__3824__auto____18104) {
          return or__3824__auto____18104
        }else {
          var or__3824__auto____18105 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____18105) {
            return or__3824__auto____18105
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5)
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5)
    }
    throw"Invalid arity: " + arguments.length;
  };
  transmit.cljs$lang$arity$2 = transmit__2;
  transmit.cljs$lang$arity$3 = transmit__3;
  transmit.cljs$lang$arity$4 = transmit__4;
  transmit.cljs$lang$arity$5 = transmit__5;
  transmit.cljs$lang$arity$6 = transmit__6;
  return transmit
}();
clojure.browser.net.close = function close(this$) {
  if(function() {
    var and__3822__auto____18110 = this$;
    if(and__3822__auto____18110) {
      return this$.clojure$browser$net$IConnection$close$arity$1
    }else {
      return and__3822__auto____18110
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$)
  }else {
    var x__2264__auto____18111 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____18112 = clojure.browser.net.close[goog.typeOf(x__2264__auto____18111)];
      if(or__3824__auto____18112) {
        return or__3824__auto____18112
      }else {
        var or__3824__auto____18113 = clojure.browser.net.close["_"];
        if(or__3824__auto____18113) {
          return or__3824__auto____18113
        }else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$)
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__18114) {
    var vec__18115__18116 = p__18114;
    var k__18117 = cljs.core.nth.call(null, vec__18115__18116, 0, null);
    var v__18118 = cljs.core.nth.call(null, vec__18115__18116, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__18117.toLowerCase()), v__18118], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))))
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  return clojure.browser.net.transmit.call(null, this$, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  this$.setTimeoutInterval(timeout);
  return this$.send(uri, method, content, headers)
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__18119) {
  var vec__18120__18121 = p__18119;
  var k__18122 = cljs.core.nth.call(null, vec__18120__18121, 0, null);
  var v__18123 = cljs.core.nth.call(null, vec__18120__18121, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__18122.toLowerCase()), v__18123], true)
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo
};
clojure.browser.net.ICrossPageChannel = {};
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if(function() {
      var and__3822__auto____18132 = this$;
      if(and__3822__auto____18132) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3
      }else {
        return and__3822__auto____18132
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn)
    }else {
      var x__2264__auto____18133 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____18134 = clojure.browser.net.register_service[goog.typeOf(x__2264__auto____18133)];
        if(or__3824__auto____18134) {
          return or__3824__auto____18134
        }else {
          var or__3824__auto____18135 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____18135) {
            return or__3824__auto____18135
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn)
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if(function() {
      var and__3822__auto____18136 = this$;
      if(and__3822__auto____18136) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4
      }else {
        return and__3822__auto____18136
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_)
    }else {
      var x__2264__auto____18137 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____18138 = clojure.browser.net.register_service[goog.typeOf(x__2264__auto____18137)];
        if(or__3824__auto____18138) {
          return or__3824__auto____18138
        }else {
          var or__3824__auto____18139 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____18139) {
            return or__3824__auto____18139
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_)
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  register_service.cljs$lang$arity$3 = register_service__3;
  register_service.cljs$lang$arity$4 = register_service__4;
  return register_service
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  return clojure.browser.net.connect.call(null, this$, null)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  return clojure.browser.net.connect.call(null, this$, on_connect_fn, config_iframe_fn, document.body)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  this$.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  return this$.send(cljs.core.name.call(null, service_name), payload)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  return this$.close(cljs.core.List.EMPTY)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  return clojure.browser.net.register_service.call(null, this$, service_name, fn, false)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  return this$.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_)
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__3974__auto____18151 = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if(cljs.core.truth_(temp__3974__auto____18151)) {
      var config__18152 = temp__3974__auto____18151;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config__18152))
    }else {
      return null
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__18153) {
      var vec__18154__18155 = p__18153;
      var k__18156 = cljs.core.nth.call(null, vec__18154__18155, 0, null);
      var v__18157 = cljs.core.nth.call(null, vec__18154__18155, 1, null);
      var temp__3971__auto____18158 = cljs.core._lookup.call(null, clojure.browser.net.xpc_config_fields, k__18156, null);
      if(cljs.core.truth_(temp__3971__auto____18158)) {
        var field__18159 = temp__3971__auto____18158;
        var G__18160__18161 = sum;
        G__18160__18161[field__18159] = v__18157;
        return G__18160__18161
      }else {
        return sum
      }
    }, {}, config))
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config)
    }
    throw"Invalid arity: " + arguments.length;
  };
  xpc_connection.cljs$lang$arity$0 = xpc_connection__0;
  xpc_connection.cljs$lang$arity$1 = xpc_connection__1;
  return xpc_connection
}();
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.repl_print = function repl_print(data) {
  var temp__3971__auto____18011 = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  if(cljs.core.truth_(temp__3971__auto____18011)) {
    var conn__18012 = temp__3971__auto____18011;
    return clojure.browser.net.transmit.call(null, conn__18012, "\ufdd0'print", cljs.core.pr_str.call(null, data))
  }else {
    return null
  }
};
clojure.browser.repl.evaluate_javascript = function evaluate_javascript(conn, block) {
  var result__18018 = function() {
    try {
      return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value"], {"\ufdd0'status":"\ufdd0'success", "\ufdd0'value":[cljs.core.str(eval(block))].join("")})
    }catch(e18016) {
      if(cljs.core.instance_QMARK_.call(null, Error, e18016)) {
        var e__18017 = e18016;
        return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value", "\ufdd0'stacktrace"], {"\ufdd0'status":"\ufdd0'exception", "\ufdd0'value":cljs.core.pr_str.call(null, e__18017), "\ufdd0'stacktrace":cljs.core.truth_(e__18017.hasOwnProperty("stack")) ? e__18017.stack : "No stacktrace available."})
      }else {
        if("\ufdd0'else") {
          throw e18016;
        }else {
          return null
        }
      }
    }
  }();
  return cljs.core.pr_str.call(null, result__18018)
};
clojure.browser.repl.send_result = function send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0)
};
clojure.browser.repl.send_print = function() {
  var send_print = null;
  var send_print__2 = function(url, data) {
    return send_print.call(null, url, data, 0)
  };
  var send_print__3 = function(url, data, n) {
    var conn__18020 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, conn__18020, "\ufdd0'error", function(_) {
      if(n < 10) {
        return send_print.call(null, url, data, n + 1)
      }else {
        return console.log([cljs.core.str("Could not send "), cljs.core.str(data), cljs.core.str(" after "), cljs.core.str(n), cljs.core.str(" attempts.")].join(""))
      }
    });
    return clojure.browser.net.transmit.call(null, conn__18020, url, "POST", data, null, 0)
  };
  send_print = function(url, data, n) {
    switch(arguments.length) {
      case 2:
        return send_print__2.call(this, url, data);
      case 3:
        return send_print__3.call(this, url, data, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  send_print.cljs$lang$arity$2 = send_print__2;
  send_print.cljs$lang$arity$3 = send_print__3;
  return send_print
}();
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function wrap_message(t, data) {
  return cljs.core.pr_str.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'content", "\ufdd0'order"], {"\ufdd0'type":t, "\ufdd0'content":data, "\ufdd0'order":cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)}))
};
clojure.browser.repl.start_evaluator = function start_evaluator(url) {
  var temp__3971__auto____18024 = clojure.browser.net.xpc_connection.call(null);
  if(cljs.core.truth_(temp__3971__auto____18024)) {
    var repl_connection__18025 = temp__3971__auto____18024;
    var connection__18026 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, connection__18026, "\ufdd0'success", function(e) {
      return clojure.browser.net.transmit.call(null, repl_connection__18025, "\ufdd0'evaluate-javascript", e.currentTarget.getResponseText(cljs.core.List.EMPTY))
    });
    clojure.browser.net.register_service.call(null, repl_connection__18025, "\ufdd0'send-result", function(data) {
      return clojure.browser.repl.send_result.call(null, connection__18026, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'result", data))
    });
    clojure.browser.net.register_service.call(null, repl_connection__18025, "\ufdd0'print", function(data) {
      return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'print", data))
    });
    clojure.browser.net.connect.call(null, repl_connection__18025, cljs.core.constantly.call(null, null));
    return setTimeout(function() {
      return clojure.browser.repl.send_result.call(null, connection__18026, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'ready", "ready"))
    }, 50)
  }else {
    return alert("No 'xpc' param provided to child iframe.")
  }
};
clojure.browser.repl.connect = function connect(repl_server_url) {
  var repl_connection__18028 = clojure.browser.net.xpc_connection.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'peer_uri"], {"\ufdd0'peer_uri":repl_server_url}));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection__18028));
  clojure.browser.net.register_service.call(null, repl_connection__18028, "\ufdd0'evaluate-javascript", function(js) {
    return clojure.browser.net.transmit.call(null, repl_connection__18028, "\ufdd0'send-result", clojure.browser.repl.evaluate_javascript.call(null, repl_connection__18028, js))
  });
  return clojure.browser.net.connect.call(null, repl_connection__18028, cljs.core.constantly.call(null, null), function(iframe) {
    return iframe.style.display = "none"
  })
};
goog.provide("shoreleave.brepl");
goog.require("cljs.core");
goog.require("clojure.browser.repl");
shoreleave.brepl.connect = function connect() {
  return clojure.browser.repl.connect.call(null, "http://localhost:9000/repl")
};
goog.provide("shoreleave.common");
goog.require("cljs.core");
goog.require("shoreleave.brepl");
shoreleave.common.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        var out__17971 = {};
        var G__17972__17973 = cljs.core.seq.call(null, x);
        if(G__17972__17973) {
          var G__17975__17977 = cljs.core.first.call(null, G__17972__17973);
          var vec__17976__17978 = G__17975__17977;
          var k__17979 = cljs.core.nth.call(null, vec__17976__17978, 0, null);
          var v__17980 = cljs.core.nth.call(null, vec__17976__17978, 1, null);
          var G__17972__17981 = G__17972__17973;
          var G__17975__17982 = G__17975__17977;
          var G__17972__17983 = G__17972__17981;
          while(true) {
            var vec__17984__17985 = G__17975__17982;
            var k__17986 = cljs.core.nth.call(null, vec__17984__17985, 0, null);
            var v__17987 = cljs.core.nth.call(null, vec__17984__17985, 1, null);
            var G__17972__17988 = G__17972__17983;
            out__17971[cljs.core.name.call(null, k__17986)] = clj__GT_js.call(null, v__17987);
            var temp__3974__auto____17989 = cljs.core.next.call(null, G__17972__17988);
            if(temp__3974__auto____17989) {
              var G__17972__17990 = temp__3974__auto____17989;
              var G__17991 = cljs.core.first.call(null, G__17972__17990);
              var G__17992 = G__17972__17990;
              G__17975__17982 = G__17991;
              G__17972__17983 = G__17992;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return out__17971
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
        }else {
          if("\ufdd0'else") {
            return x
          }else {
            return null
          }
        }
      }
    }
  }
};
shoreleave.common.args_map = function args_map(location_str) {
  var query_args_obj__17994 = new goog.Uri.QueryData(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["#", "?"]), cljs.core._lookup.call(null, location_str, 0, null)) ? cljs.core.subs.call(null, location_str, 1) : location_str);
  return cljs.core.zipmap.call(null, cljs.core.map.call(null, cljs.core.keyword, query_args_obj__17994.getKeys()), query_args_obj__17994.getValues())
};
shoreleave.common.query_args_map = function query_args_map() {
  return shoreleave.common.args_map.call(null, window.location.search)
};
shoreleave.common.hash_args_map = function hash_args_map() {
  return shoreleave.common.args_map.call(null, window.location.hash)
};
shoreleave.common.set_window_hash_args = function set_window_hash_args(args_map) {
  var hash_str__18007 = cljs.core.reduce.call(null, function(old_str, p__18002) {
    var vec__18003__18004 = p__18002;
    var k__18005 = cljs.core.nth.call(null, vec__18003__18004, 0, null);
    var v__18006 = cljs.core.nth.call(null, vec__18003__18004, 1, null);
    return[cljs.core.str(old_str), cljs.core.str(cljs.core.name.call(null, k__18005)), cljs.core.str("="), cljs.core.str(v__18006), cljs.core.str("&")].join("")
  }, "#", args_map);
  var clean_hash_str__18008 = cljs.core.subs.call(null, hash_str__18007, 0, cljs.core.count.call(null, hash_str__18007) - 1);
  window.location.hash = clean_hash_str__18008;
  return args_map
};
shoreleave.common.toggle_brepl = function() {
  var toggle_brepl = null;
  var toggle_brepl__0 = function() {
    return toggle_brepl.call(null, shoreleave.common.query_args_map.call(null))
  };
  var toggle_brepl__1 = function(query_map) {
    return toggle_brepl.call(null, query_map, "\ufdd0'brepl")
  };
  var toggle_brepl__2 = function(query_map, query_key) {
    if(cljs.core.truth_(query_map.call(null, query_key))) {
      return shoreleave.brepl.connect.call(null)
    }else {
      return null
    }
  };
  toggle_brepl = function(query_map, query_key) {
    switch(arguments.length) {
      case 0:
        return toggle_brepl__0.call(this);
      case 1:
        return toggle_brepl__1.call(this, query_map);
      case 2:
        return toggle_brepl__2.call(this, query_map, query_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  toggle_brepl.cljs$lang$arity$0 = toggle_brepl__0;
  toggle_brepl.cljs$lang$arity$1 = toggle_brepl__1;
  toggle_brepl.cljs$lang$arity$2 = toggle_brepl__2;
  return toggle_brepl
}();
goog.provide("shoreleave.remotes.common");
goog.require("cljs.core");
goog.require("shoreleave.common");
goog.require("shoreleave.common");
goog.require("shoreleave.browser.cookies");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.Uri.QueryData");
goog.require("clojure.string");
shoreleave.remotes.common.rand_id_str = function rand_id_str() {
  return goog.string.getRandomString()
};
shoreleave.remotes.common.__GT_url_method = function __GT_url_method(m) {
  return clojure.string.upper_case.call(null, cljs.core.name.call(null, m))
};
shoreleave.remotes.common.parse_route = function parse_route(route) {
  if(cljs.core.string_QMARK_.call(null, route)) {
    return cljs.core.PersistentVector.fromArray(["GET", route], true)
  }else {
    if(cljs.core.vector_QMARK_.call(null, route)) {
      var vec__18184__18185 = route;
      var m__18186 = cljs.core.nth.call(null, vec__18184__18185, 0, null);
      var u__18187 = cljs.core.nth.call(null, vec__18184__18185, 1, null);
      return cljs.core.PersistentVector.fromArray([shoreleave.remotes.common.__GT_url_method.call(null, m__18186), u__18187], true)
    }else {
      if("\ufdd0'else") {
        return cljs.core.PersistentVector.fromArray(["GET", route], true)
      }else {
        return null
      }
    }
  }
};
shoreleave.remotes.common.__GT_simple_callback = function __GT_simple_callback(callback) {
  if(cljs.core.truth_(callback)) {
    return function(req) {
      var data__18189 = req.getResponseText();
      return callback.call(null, data__18189)
    }
  }else {
    return null
  }
};
shoreleave.remotes.common.csrf_protected = function csrf_protected(content_map, method) {
  var temp__3971__auto____18194 = function() {
    var and__3822__auto____18193 = cljs.core._EQ_.call(null, method, "POST");
    if(and__3822__auto____18193) {
      return(new cljs.core.Keyword("\ufdd0'__anti-forgery-token")).call(null, shoreleave.browser.cookies.cookies)
    }else {
      return and__3822__auto____18193
    }
  }();
  if(cljs.core.truth_(temp__3971__auto____18194)) {
    var anti_forgery_token__18195 = temp__3971__auto____18194;
    return cljs.core.merge.call(null, content_map, cljs.core.ObjMap.fromObject(["\ufdd0'__anti-forgery-token"], {"\ufdd0'__anti-forgery-token":anti_forgery_token__18195}))
  }else {
    return content_map
  }
};
shoreleave.remotes.common.__GT_data_str = function __GT_data_str(d) {
  var cur__18198 = shoreleave.common.clj__GT_js.call(null, d);
  var query__18199 = goog.Uri.QueryData.createFromMap(new goog.structs.Map(cur__18198));
  return[cljs.core.str(query__18199)].join("")
};
goog.provide("shoreleave.remotes.xhr");
goog.require("cljs.core");
goog.require("shoreleave.common");
goog.require("shoreleave.common");
goog.require("shoreleave.remotes.common");
goog.require("goog.events");
goog.require("goog.net.XhrIo");
shoreleave.remotes.xhr.xhr = function() {
  var xhr__delegate = function(route, opts) {
    var req__17938 = new goog.net.XhrIo;
    var vec__17936__17939 = shoreleave.remotes.common.parse_route.call(null, route);
    var method__17940 = cljs.core.nth.call(null, vec__17936__17939, 0, null);
    var uri__17941 = cljs.core.nth.call(null, vec__17936__17939, 1, null);
    var map__17937__17942 = cljs.core.apply.call(null, cljs.core.hash_map, opts);
    var map__17937__17943 = cljs.core.seq_QMARK_.call(null, map__17937__17942) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17937__17942) : map__17937__17942;
    var headers__17944 = cljs.core._lookup.call(null, map__17937__17943, "\ufdd0'headers", null);
    var content__17945 = cljs.core._lookup.call(null, map__17937__17943, "\ufdd0'content", null);
    var on_success__17946 = cljs.core._lookup.call(null, map__17937__17943, "\ufdd0'on-success", null);
    var content__17947 = shoreleave.remotes.common.csrf_protected.call(null, content__17945, method__17940);
    var data__17948 = shoreleave.remotes.common.__GT_data_str.call(null, content__17947);
    var callback__17949 = shoreleave.remotes.common.__GT_simple_callback.call(null, on_success__17946);
    if(cljs.core.truth_(callback__17949)) {
      goog.events.listen(req__17938, goog.net.EventType.COMPLETE, function() {
        return callback__17949.call(null, req__17938)
      })
    }else {
    }
    return req__17938.send(uri__17941, method__17940, data__17948, cljs.core.truth_(headers__17944) ? shoreleave.common.clj__GT_js.call(null, headers__17944) : null)
  };
  var xhr = function(route, var_args) {
    var opts = null;
    if(goog.isDef(var_args)) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return xhr__delegate.call(this, route, opts)
  };
  xhr.cljs$lang$maxFixedArity = 1;
  xhr.cljs$lang$applyTo = function(arglist__17950) {
    var route = cljs.core.first(arglist__17950);
    var opts = cljs.core.rest(arglist__17950);
    return xhr__delegate(route, opts)
  };
  xhr.cljs$lang$arity$variadic = xhr__delegate;
  return xhr
}();
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3822__auto____17648 = reader;
    if(and__3822__auto____17648) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3822__auto____17648
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__2264__auto____17649 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____17650 = cljs.reader.read_char[goog.typeOf(x__2264__auto____17649)];
      if(or__3824__auto____17650) {
        return or__3824__auto____17650
      }else {
        var or__3824__auto____17651 = cljs.reader.read_char["_"];
        if(or__3824__auto____17651) {
          return or__3824__auto____17651
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3822__auto____17656 = reader;
    if(and__3822__auto____17656) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3822__auto____17656
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__2264__auto____17657 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____17658 = cljs.reader.unread[goog.typeOf(x__2264__auto____17657)];
      if(or__3824__auto____17658) {
        return or__3824__auto____17658
      }else {
        var or__3824__auto____17659 = cljs.reader.unread["_"];
        if(or__3824__auto____17659) {
          return or__3824__auto____17659
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
cljs.reader.StringPushbackReader = function(s, index_atom, buffer_atom) {
  this.s = s;
  this.index_atom = index_atom;
  this.buffer_atom = buffer_atom
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var this__17660 = this;
  if(cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, this__17660.buffer_atom))) {
    var idx__17661 = cljs.core.deref.call(null, this__17660.index_atom);
    cljs.core.swap_BANG_.call(null, this__17660.index_atom, cljs.core.inc);
    return this__17660.s[idx__17661]
  }else {
    var buf__17662 = cljs.core.deref.call(null, this__17660.buffer_atom);
    cljs.core.swap_BANG_.call(null, this__17660.buffer_atom, cljs.core.rest);
    return cljs.core.first.call(null, buf__17662)
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var this__17663 = this;
  return cljs.core.swap_BANG_.call(null, this__17663.buffer_atom, function(p1__17643_SHARP_) {
    return cljs.core.cons.call(null, ch, p1__17643_SHARP_)
  })
};
cljs.reader.StringPushbackReader;
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3824__auto____17665 = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3824__auto____17665)) {
    return or__3824__auto____17665
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3824__auto____17670 = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3824__auto____17670) {
    return or__3824__auto____17670
  }else {
    var and__3822__auto____17672 = function() {
      var or__3824__auto____17671 = "+" === initch;
      if(or__3824__auto____17671) {
        return or__3824__auto____17671
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3822__auto____17672)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch__17673 = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch__17673);
        return next_ch__17673
      }())
    }else {
      return and__3822__auto____17672
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(goog.isDef(var_args)) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__17674) {
    var rdr = cljs.core.first(arglist__17674);
    var msg = cljs.core.rest(arglist__17674);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$lang$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3822__auto____17678 = !(ch === "#");
  if(and__3822__auto____17678) {
    var and__3822__auto____17679 = !(ch === "'");
    if(and__3822__auto____17679) {
      var and__3822__auto____17680 = !(ch === ":");
      if(and__3822__auto____17680) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3822__auto____17680
      }
    }else {
      return and__3822__auto____17679
    }
  }else {
    return and__3822__auto____17678
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb__17685 = new goog.string.StringBuffer(initch);
  var ch__17686 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3824__auto____17687 = ch__17686 == null;
      if(or__3824__auto____17687) {
        return or__3824__auto____17687
      }else {
        var or__3824__auto____17688 = cljs.reader.whitespace_QMARK_.call(null, ch__17686);
        if(or__3824__auto____17688) {
          return or__3824__auto____17688
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch__17686)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch__17686);
      return sb__17685.toString()
    }else {
      var G__17689 = function() {
        sb__17685.append(ch__17686);
        return sb__17685
      }();
      var G__17690 = cljs.reader.read_char.call(null, rdr);
      sb__17685 = G__17689;
      ch__17686 = G__17690;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch__17694 = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3824__auto____17695 = ch__17694 === "n";
      if(or__3824__auto____17695) {
        return or__3824__auto____17695
      }else {
        var or__3824__auto____17696 = ch__17694 === "r";
        if(or__3824__auto____17696) {
          return or__3824__auto____17696
        }else {
          return ch__17694 == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches__17698 = re.exec(s);
  if(matches__17698 == null) {
    return null
  }else {
    if(matches__17698.length === 1) {
      return matches__17698[0]
    }else {
      return matches__17698
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups__17706 = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3__17707 = groups__17706[2];
  if(!function() {
    var or__3824__auto____17708 = group3__17707 == null;
    if(or__3824__auto____17708) {
      return or__3824__auto____17708
    }else {
      return group3__17707.length < 1
    }
  }()) {
    return 0
  }else {
    var negate__17709 = "-" === groups__17706[1] ? -1 : 1;
    var a__17710 = cljs.core.truth_(groups__17706[3]) ? [groups__17706[3], 10] : cljs.core.truth_(groups__17706[4]) ? [groups__17706[4], 16] : cljs.core.truth_(groups__17706[5]) ? [groups__17706[5], 8] : cljs.core.truth_(groups__17706[7]) ? [groups__17706[7], parseInt(groups__17706[7])] : "\ufdd0'default" ? [null, null] : null;
    var n__17711 = a__17710[0];
    var radix__17712 = a__17710[1];
    if(n__17711 == null) {
      return null
    }else {
      return negate__17709 * parseInt(n__17711, radix__17712)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups__17716 = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator__17717 = groups__17716[1];
  var denominator__17718 = groups__17716[2];
  return parseInt(numinator__17717) / parseInt(denominator__17718)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches__17721 = re.exec(s);
  if(function() {
    var and__3822__auto____17722 = !(matches__17721 == null);
    if(and__3822__auto____17722) {
      return matches__17721[0] === s
    }else {
      return and__3822__auto____17722
    }
  }()) {
    if(matches__17721.length === 1) {
      return matches__17721[0]
    }else {
      return matches__17721
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\u0008"
            }else {
              if(c === "f") {
                return"\u000c"
              }else {
                if("\ufdd0'else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code__17724 = parseInt(code_str, 16);
  return String.fromCharCode(code__17724)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch__17727 = cljs.reader.read_char.call(null, reader);
  var mapresult__17728 = cljs.reader.escape_char_map.call(null, ch__17727);
  if(cljs.core.truth_(mapresult__17728)) {
    return mapresult__17728
  }else {
    if(ch__17727 === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch__17727, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch__17727 === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch__17727, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch__17727)) {
          return String.fromCharCode(ch__17727)
        }else {
          if("\ufdd0'else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch__17727)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch__17730 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch__17730))) {
      var G__17731 = cljs.reader.read_char.call(null, rdr);
      ch__17730 = G__17731;
      continue
    }else {
      return ch__17730
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a__17738 = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch__17739 = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch__17739)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF")
    }
    if(delim === ch__17739) {
      return cljs.core.persistent_BANG_.call(null, a__17738)
    }else {
      var temp__3971__auto____17740 = cljs.reader.macros.call(null, ch__17739);
      if(cljs.core.truth_(temp__3971__auto____17740)) {
        var macrofn__17741 = temp__3971__auto____17740;
        var mret__17742 = macrofn__17741.call(null, rdr, ch__17739);
        var G__17744 = mret__17742 === rdr ? a__17738 : cljs.core.conj_BANG_.call(null, a__17738, mret__17742);
        a__17738 = G__17744;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch__17739);
        var o__17743 = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__17745 = o__17743 === rdr ? a__17738 : cljs.core.conj_BANG_.call(null, a__17738, o__17743);
        a__17738 = G__17745;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch__17750 = cljs.reader.read_char.call(null, rdr);
  var dm__17751 = cljs.reader.dispatch_macros.call(null, ch__17750);
  if(cljs.core.truth_(dm__17751)) {
    return dm__17751.call(null, rdr, _)
  }else {
    var temp__3971__auto____17752 = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch__17750);
    if(cljs.core.truth_(temp__3971__auto____17752)) {
      var obj__17753 = temp__3971__auto____17752;
      return obj__17753
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch__17750)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l__17755 = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l__17755))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l__17755)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer__17762 = new goog.string.StringBuffer(initch);
  var ch__17763 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____17764 = ch__17763 == null;
      if(or__3824__auto____17764) {
        return or__3824__auto____17764
      }else {
        var or__3824__auto____17765 = cljs.reader.whitespace_QMARK_.call(null, ch__17763);
        if(or__3824__auto____17765) {
          return or__3824__auto____17765
        }else {
          return cljs.reader.macros.call(null, ch__17763)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch__17763);
      var s__17766 = buffer__17762.toString();
      var or__3824__auto____17767 = cljs.reader.match_number.call(null, s__17766);
      if(cljs.core.truth_(or__3824__auto____17767)) {
        return or__3824__auto____17767
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s__17766, "]")
      }
    }else {
      var G__17768 = function() {
        buffer__17762.append(ch__17763);
        return buffer__17762
      }();
      var G__17769 = cljs.reader.read_char.call(null, reader);
      buffer__17762 = G__17768;
      ch__17763 = G__17769;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer__17772 = new goog.string.StringBuffer;
  var ch__17773 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch__17773 == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading string")
    }else {
      if("\\" === ch__17773) {
        var G__17774 = function() {
          buffer__17772.append(cljs.reader.escape_char.call(null, buffer__17772, reader));
          return buffer__17772
        }();
        var G__17775 = cljs.reader.read_char.call(null, reader);
        buffer__17772 = G__17774;
        ch__17773 = G__17775;
        continue
      }else {
        if('"' === ch__17773) {
          return buffer__17772.toString()
        }else {
          if("\ufdd0'default") {
            var G__17776 = function() {
              buffer__17772.append(ch__17773);
              return buffer__17772
            }();
            var G__17777 = cljs.reader.read_char.call(null, reader);
            buffer__17772 = G__17776;
            ch__17773 = G__17777;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token__17779 = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token__17779, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token__17779, 0, token__17779.indexOf("/")), cljs.core.subs.call(null, token__17779, token__17779.indexOf("/") + 1, token__17779.length))
  }else {
    return cljs.reader.special_symbols.call(null, token__17779, cljs.core.symbol.call(null, token__17779))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token__17789 = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a__17790 = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token__17789);
  var token__17791 = a__17790[0];
  var ns__17792 = a__17790[1];
  var name__17793 = a__17790[2];
  if(cljs.core.truth_(function() {
    var or__3824__auto____17795 = function() {
      var and__3822__auto____17794 = !(void 0 === ns__17792);
      if(and__3822__auto____17794) {
        return ns__17792.substring(ns__17792.length - 2, ns__17792.length) === ":/"
      }else {
        return and__3822__auto____17794
      }
    }();
    if(cljs.core.truth_(or__3824__auto____17795)) {
      return or__3824__auto____17795
    }else {
      var or__3824__auto____17796 = name__17793[name__17793.length - 1] === ":";
      if(or__3824__auto____17796) {
        return or__3824__auto____17796
      }else {
        return!(token__17791.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__17791)
  }else {
    if(function() {
      var and__3822__auto____17797 = !(ns__17792 == null);
      if(and__3822__auto____17797) {
        return ns__17792.length > 0
      }else {
        return and__3822__auto____17797
      }
    }()) {
      return cljs.core.keyword.call(null, ns__17792.substring(0, ns__17792.indexOf("/")), name__17793)
    }else {
      return cljs.core.keyword.call(null, token__17791)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(cljs.core.symbol_QMARK_.call(null, f)) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArrays([f], [true])
      }else {
        if("\ufdd0'else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m__17803 = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m__17803)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o__17804 = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__17805__17806 = o__17804;
    if(G__17805__17806) {
      if(function() {
        var or__3824__auto____17807 = G__17805__17806.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3824__auto____17807) {
          return or__3824__auto____17807
        }else {
          return G__17805__17806.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__17805__17806.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__17805__17806)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__17805__17806)
    }
  }()) {
    return cljs.core.with_meta.call(null, o__17804, cljs.core.merge.call(null, cljs.core.meta.call(null, o__17804), m__17803))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, "\ufdd1'quote")
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, "\ufdd1'deref")
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0'else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "<") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0'else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch__17811 = cljs.reader.read_char.call(null, reader);
    if(ch__17811 == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch__17811)) {
        var G__17814 = reader;
        var G__17815 = eof_is_error;
        var G__17816 = sentinel;
        var G__17817 = is_recursive;
        reader = G__17814;
        eof_is_error = G__17815;
        sentinel = G__17816;
        is_recursive = G__17817;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch__17811)) {
          var G__17818 = cljs.reader.read_comment.call(null, reader, ch__17811);
          var G__17819 = eof_is_error;
          var G__17820 = sentinel;
          var G__17821 = is_recursive;
          reader = G__17818;
          eof_is_error = G__17819;
          sentinel = G__17820;
          is_recursive = G__17821;
          continue
        }else {
          if("\ufdd0'else") {
            var f__17812 = cljs.reader.macros.call(null, ch__17811);
            var res__17813 = cljs.core.truth_(f__17812) ? f__17812.call(null, reader, ch__17811) : cljs.reader.number_literal_QMARK_.call(null, reader, ch__17811) ? cljs.reader.read_number.call(null, reader, ch__17811) : "\ufdd0'else" ? cljs.reader.read_symbol.call(null, reader, ch__17811) : null;
            if(res__17813 === reader) {
              var G__17822 = reader;
              var G__17823 = eof_is_error;
              var G__17824 = sentinel;
              var G__17825 = is_recursive;
              reader = G__17822;
              eof_is_error = G__17823;
              sentinel = G__17824;
              is_recursive = G__17825;
              continue
            }else {
              return res__17813
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r__17827 = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r__17827, true, null, false)
};
cljs.reader.zero_fill_right = function zero_fill_right(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return s.substring(0, width)
    }else {
      if("\ufdd0'else") {
        var b__17829 = new goog.string.StringBuffer(s);
        while(true) {
          if(b__17829.getLength() < width) {
            var G__17830 = b__17829.append("0");
            b__17829 = G__17830;
            continue
          }else {
            return b__17829.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return num % div === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3822__auto____17833 = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3822__auto____17833)) {
    var or__3824__auto____17834 = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3824__auto____17834)) {
      return or__3824__auto____17834
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3822__auto____17833
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm__17839 = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap__17840 = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core._lookup.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap__17840 : dim_norm__17839, month, null)
  }
}();
cljs.reader.parse_and_validate_timestamp = function() {
  var timestamp__17841 = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
  var check__17843 = function(low, n, high, msg) {
    if(function() {
      var and__3822__auto____17842 = low <= n;
      if(and__3822__auto____17842) {
        return n <= high
      }else {
        return and__3822__auto____17842
      }
    }()) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'<=", "\ufdd1'low", "\ufdd1'n", "\ufdd1'high"), cljs.core.hash_map("\ufdd0'line", 474))))].join(""));
    }
    return n
  };
  return function(ts) {
    var temp__3974__auto____17844 = cljs.core.map.call(null, cljs.core.vec, cljs.core.split_at.call(null, 8, cljs.core.re_matches.call(null, timestamp__17841, ts)));
    if(cljs.core.truth_(temp__3974__auto____17844)) {
      var vec__17845__17848 = temp__3974__auto____17844;
      var vec__17846__17849 = cljs.core.nth.call(null, vec__17845__17848, 0, null);
      var ___17850 = cljs.core.nth.call(null, vec__17846__17849, 0, null);
      var years__17851 = cljs.core.nth.call(null, vec__17846__17849, 1, null);
      var months__17852 = cljs.core.nth.call(null, vec__17846__17849, 2, null);
      var days__17853 = cljs.core.nth.call(null, vec__17846__17849, 3, null);
      var hours__17854 = cljs.core.nth.call(null, vec__17846__17849, 4, null);
      var minutes__17855 = cljs.core.nth.call(null, vec__17846__17849, 5, null);
      var seconds__17856 = cljs.core.nth.call(null, vec__17846__17849, 6, null);
      var milliseconds__17857 = cljs.core.nth.call(null, vec__17846__17849, 7, null);
      var vec__17847__17858 = cljs.core.nth.call(null, vec__17845__17848, 1, null);
      var ___17859 = cljs.core.nth.call(null, vec__17847__17858, 0, null);
      var ___17860 = cljs.core.nth.call(null, vec__17847__17858, 1, null);
      var ___17861 = cljs.core.nth.call(null, vec__17847__17858, 2, null);
      var V__17862 = vec__17845__17848;
      var vec__17863__17866 = cljs.core.map.call(null, function(v) {
        return cljs.core.map.call(null, function(p1__17838_SHARP_) {
          return parseInt(p1__17838_SHARP_, 10)
        }, v)
      }, cljs.core.map.call(null, function(p1__17836_SHARP_, p2__17835_SHARP_) {
        return cljs.core.update_in.call(null, p2__17835_SHARP_, cljs.core.PersistentVector.fromArray([0], true), p1__17836_SHARP_)
      }, cljs.core.PersistentVector.fromArray([cljs.core.constantly.call(null, null), function(p1__17837_SHARP_) {
        if(cljs.core._EQ_.call(null, p1__17837_SHARP_, "-")) {
          return"-1"
        }else {
          return"1"
        }
      }], true), V__17862));
      var vec__17864__17867 = cljs.core.nth.call(null, vec__17863__17866, 0, null);
      var ___17868 = cljs.core.nth.call(null, vec__17864__17867, 0, null);
      var y__17869 = cljs.core.nth.call(null, vec__17864__17867, 1, null);
      var mo__17870 = cljs.core.nth.call(null, vec__17864__17867, 2, null);
      var d__17871 = cljs.core.nth.call(null, vec__17864__17867, 3, null);
      var h__17872 = cljs.core.nth.call(null, vec__17864__17867, 4, null);
      var m__17873 = cljs.core.nth.call(null, vec__17864__17867, 5, null);
      var s__17874 = cljs.core.nth.call(null, vec__17864__17867, 6, null);
      var ms__17875 = cljs.core.nth.call(null, vec__17864__17867, 7, null);
      var vec__17865__17876 = cljs.core.nth.call(null, vec__17863__17866, 1, null);
      var offset_sign__17877 = cljs.core.nth.call(null, vec__17865__17876, 0, null);
      var offset_hours__17878 = cljs.core.nth.call(null, vec__17865__17876, 1, null);
      var offset_minutes__17879 = cljs.core.nth.call(null, vec__17865__17876, 2, null);
      var offset__17880 = offset_sign__17877 * (offset_hours__17878 * 60 + offset_minutes__17879);
      return cljs.core.PersistentVector.fromArray([cljs.core.not.call(null, years__17851) ? 1970 : y__17869, cljs.core.not.call(null, months__17852) ? 1 : check__17843.call(null, 1, mo__17870, 12, "timestamp month field must be in range 1..12"), cljs.core.not.call(null, days__17853) ? 1 : check__17843.call(null, 1, d__17871, cljs.reader.days_in_month.call(null, mo__17870, cljs.reader.leap_year_QMARK_.call(null, y__17869)), "timestamp day field must be in range 1..last day in month"), cljs.core.not.call(null, 
      hours__17854) ? 0 : check__17843.call(null, 0, h__17872, 23, "timestamp hour field must be in range 0..23"), cljs.core.not.call(null, minutes__17855) ? 0 : check__17843.call(null, 0, m__17873, 59, "timestamp minute field must be in range 0..59"), cljs.core.not.call(null, seconds__17856) ? 0 : check__17843.call(null, 0, s__17874, cljs.core._EQ_.call(null, m__17873, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.core.not.call(null, milliseconds__17857) ? 0 : check__17843.call(null, 
      0, ms__17875, 999, "timestamp millisecond field must be in range 0..999"), offset__17880], true)
    }else {
      return null
    }
  }
}();
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__3971__auto____17892 = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__3971__auto____17892)) {
    var vec__17893__17894 = temp__3971__auto____17892;
    var years__17895 = cljs.core.nth.call(null, vec__17893__17894, 0, null);
    var months__17896 = cljs.core.nth.call(null, vec__17893__17894, 1, null);
    var days__17897 = cljs.core.nth.call(null, vec__17893__17894, 2, null);
    var hours__17898 = cljs.core.nth.call(null, vec__17893__17894, 3, null);
    var minutes__17899 = cljs.core.nth.call(null, vec__17893__17894, 4, null);
    var seconds__17900 = cljs.core.nth.call(null, vec__17893__17894, 5, null);
    var ms__17901 = cljs.core.nth.call(null, vec__17893__17894, 6, null);
    var offset__17902 = cljs.core.nth.call(null, vec__17893__17894, 7, null);
    return new Date(Date.UTC(years__17895, months__17896 - 1, days__17897, hours__17898, minutes__17899, seconds__17900, ms__17901) - offset__17902 * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["inst", "uuid", "queue"], {"inst":cljs.reader.read_date, "uuid":cljs.reader.read_uuid, "queue":cljs.reader.read_queue}));
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag__17906 = cljs.reader.read_symbol.call(null, rdr, initch);
  var temp__3971__auto____17907 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), cljs.core.name.call(null, tag__17906), null);
  if(cljs.core.truth_(temp__3971__auto____17907)) {
    var pfn__17908 = temp__3971__auto____17907;
    return pfn__17908.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", cljs.core.name.call(null, tag__17906), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__17911 = cljs.core.name.call(null, tag);
  var old_parser__17912 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__17911, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__17911, f);
  return old_parser__17912
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__17915 = cljs.core.name.call(null, tag);
  var old_parser__17916 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__17915, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__17915);
  return old_parser__17916
};
goog.provide("shoreleave.remotes.http_rpc");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("shoreleave.remotes.xhr");
shoreleave.remotes.http_rpc._STAR_remote_uri_STAR_ = "/_fetch";
shoreleave.remotes.http_rpc.remote_callback = function() {
  var remote_callback__delegate = function(remote, params, callback, extra_content) {
    return shoreleave.remotes.xhr.xhr.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'post", shoreleave.remotes.http_rpc._STAR_remote_uri_STAR_], true), "\ufdd0'content", cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'remote", "\ufdd0'params"], {"\ufdd0'remote":remote, "\ufdd0'params":cljs.core.pr_str.call(null, params)}), cljs.core.apply.call(null, cljs.core.hash_map, extra_content)), "\ufdd0'on-success", cljs.core.truth_(callback) ? function(data) {
      var data__17920 = cljs.core._EQ_.call(null, data, "") ? "nil" : data;
      return callback.call(null, cljs.reader.read_string.call(null, data__17920))
    } : null)
  };
  var remote_callback = function(remote, params, callback, var_args) {
    var extra_content = null;
    if(goog.isDef(var_args)) {
      extra_content = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return remote_callback__delegate.call(this, remote, params, callback, extra_content)
  };
  remote_callback.cljs$lang$maxFixedArity = 3;
  remote_callback.cljs$lang$applyTo = function(arglist__17921) {
    var remote = cljs.core.first(arglist__17921);
    var params = cljs.core.first(cljs.core.next(arglist__17921));
    var callback = cljs.core.first(cljs.core.next(cljs.core.next(arglist__17921)));
    var extra_content = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__17921)));
    return remote_callback__delegate(remote, params, callback, extra_content)
  };
  remote_callback.cljs$lang$arity$variadic = remote_callback__delegate;
  return remote_callback
}();
goog.provide("vcfvis.xprize.analyses");
goog.require("cljs.core");
goog.require("shoreleave.remotes.http_rpc");
goog.require("domina.events");
goog.require("domina.css");
goog.require("domina");
vcfvis.xprize.analyses.display_selected_analysis = function display_selected_analysis(analysis_id) {
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "get-summary", cljs.core.PersistentVector.fromArray([analysis_id], true), function(sum_html) {
    return domina.set_html_BANG_.call(null, domina.by_id.call(null, "user-analyses"), sum_html)
  })
};
vcfvis.xprize.analyses.display_analyses = function display_analyses() {
  return domina.events.listen_BANG_.call(null, domina.children.call(null, domina.css.sel.call(null, domina.by_id.call(null, "user-analyses"), "ul")), "\ufdd0'click", function(evt) {
    vcfvis.xprize.analyses.display_selected_analysis.call(null, domina.attr.call(null, domina.events.target.call(null, evt), "\ufdd0'id"));
    return domina.events.prevent_default.call(null, evt)
  })
};
goog.exportSymbol("vcfvis.xprize.analyses.display_analyses", vcfvis.xprize.analyses.display_analyses);
goog.provide("c2.maths");
goog.require("cljs.core");
c2.maths.Pi = Math.PI;
c2.maths.Tau = 2 * c2.maths.Pi;
c2.maths.e = Math.E;
c2.maths.radians_per_degree = c2.maths.Pi / 180;
c2.maths.rad = function rad(x) {
  return c2.maths.radians_per_degree * x
};
c2.maths.sin = function sin(x) {
  return Math.sin.call(null, x)
};
c2.maths.asin = function asin(x) {
  return Math.asin.call(null, x)
};
c2.maths.cos = function cos(x) {
  return Math.cos.call(null, x)
};
c2.maths.acos = function acos(x) {
  return Math.acos.call(null, x)
};
c2.maths.tan = function tan(x) {
  return Math.tan.call(null, x)
};
c2.maths.atan = function atan(x) {
  return Math.atan.call(null, x)
};
c2.maths.expt = function() {
  var expt = null;
  var expt__1 = function(x) {
    return Math.exp.call(null, x)
  };
  var expt__2 = function(x, y) {
    return Math.pow.call(null, x, y)
  };
  expt = function(x, y) {
    switch(arguments.length) {
      case 1:
        return expt__1.call(this, x);
      case 2:
        return expt__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  expt.cljs$lang$arity$1 = expt__1;
  expt.cljs$lang$arity$2 = expt__2;
  return expt
}();
c2.maths.sq = function sq(x) {
  return c2.maths.expt.call(null, x, 2)
};
c2.maths.sqrt = function sqrt(x) {
  return Math.sqrt.call(null, x)
};
c2.maths.floor = function floor(x) {
  return Math.floor.call(null, x)
};
c2.maths.ceil = function ceil(x) {
  return Math.ceil.call(null, x)
};
c2.maths.abs = function abs(x) {
  return Math.abs.call(null, x)
};
c2.maths.log = function() {
  var log = null;
  var log__1 = function(x) {
    return Math.log.call(null, x)
  };
  var log__2 = function(base, x) {
    return Math.log.call(null, x) / Math.log.call(null, base)
  };
  log = function(base, x) {
    switch(arguments.length) {
      case 1:
        return log__1.call(this, base);
      case 2:
        return log__2.call(this, base, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  log.cljs$lang$arity$1 = log__1;
  log.cljs$lang$arity$2 = log__2;
  return log
}();
c2.maths.log10 = function log10(x) {
  return Math.log(x) / Math.LN10
};
c2.maths.extent = function extent(xs) {
  return cljs.core.PersistentVector.fromArray([cljs.core.apply.call(null, cljs.core.min, xs), cljs.core.apply.call(null, cljs.core.max, xs)], true)
};
c2.maths.mean = function mean(xs) {
  return cljs.core.reduce.call(null, cljs.core._PLUS_, xs) / cljs.core.count.call(null, xs)
};
c2.maths.median = function median(xs) {
  var sorted__18621 = cljs.core.sort.call(null, xs);
  var n__18622 = cljs.core.count.call(null, xs);
  if(cljs.core._EQ_.call(null, n__18622, 1)) {
    return cljs.core.first.call(null, sorted__18621)
  }else {
    if(cljs.core.odd_QMARK_.call(null, n__18622)) {
      return cljs.core.nth.call(null, sorted__18621, (n__18622 + 1) / 2)
    }else {
      if("\ufdd0'else") {
        var mid__18623 = n__18622 / 2;
        return c2.maths.mean.call(null, cljs.core.PersistentVector.fromArray([cljs.core.nth.call(null, sorted__18621, c2.maths.floor.call(null, mid__18623)), cljs.core.nth.call(null, sorted__18621, c2.maths.ceil.call(null, mid__18623))], true))
      }else {
        return null
      }
    }
  }
};
c2.maths.irange = function() {
  var irange = null;
  var irange__1 = function(start) {
    return cljs.core.range.call(null, start)
  };
  var irange__2 = function(start, end) {
    return cljs.core.concat.call(null, cljs.core.range.call(null, start, end), cljs.core.PersistentVector.fromArray([end], true))
  };
  var irange__3 = function(start, end, step) {
    var r__18625 = cljs.core.range.call(null, start, end, step);
    if(cljs.core.first.call(null, r__18625) % step === end % step) {
      return cljs.core.concat.call(null, r__18625, cljs.core.PersistentVector.fromArray([end], true))
    }else {
      return r__18625
    }
  };
  irange = function(start, end, step) {
    switch(arguments.length) {
      case 1:
        return irange__1.call(this, start);
      case 2:
        return irange__2.call(this, start, end);
      case 3:
        return irange__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  irange.cljs$lang$arity$1 = irange__1;
  irange.cljs$lang$arity$2 = irange__2;
  irange.cljs$lang$arity$3 = irange__3;
  return irange
}();
c2.maths.within_QMARK_ = function within_QMARK_(x, p__18626) {
  var vec__18632__18633 = p__18626;
  var bottom__18634 = cljs.core.nth.call(null, vec__18632__18633, 0, null);
  var top__18635 = cljs.core.nth.call(null, vec__18632__18633, 1, null);
  var and__3822__auto____18636 = bottom__18634 <= x;
  if(and__3822__auto____18636) {
    return x <= top__18635
  }else {
    return and__3822__auto____18636
  }
};
c2.maths.add = function() {
  var add__delegate = function(args) {
    return cljs.core.reduce.call(null, function(A, B) {
      if(function() {
        var and__3822__auto____18641 = cljs.core.number_QMARK_.call(null, A);
        if(and__3822__auto____18641) {
          return cljs.core.number_QMARK_.call(null, B)
        }else {
          return and__3822__auto____18641
        }
      }()) {
        return A + B
      }else {
        if(function() {
          var and__3822__auto____18642 = cljs.core.coll_QMARK_.call(null, A);
          if(and__3822__auto____18642) {
            return cljs.core.coll_QMARK_.call(null, B)
          }else {
            return and__3822__auto____18642
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._PLUS_, A, B)
        }else {
          if(function() {
            var and__3822__auto____18643 = cljs.core.number_QMARK_.call(null, A);
            if(and__3822__auto____18643) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____18643
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._PLUS_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
          }else {
            if(function() {
              var and__3822__auto____18644 = cljs.core.coll_QMARK_.call(null, A);
              if(and__3822__auto____18644) {
                return cljs.core.number_QMARK_.call(null, B)
              }else {
                return and__3822__auto____18644
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._PLUS_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
            }else {
              return null
            }
          }
        }
      }
    }, args)
  };
  var add = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return add__delegate.call(this, args)
  };
  add.cljs$lang$maxFixedArity = 0;
  add.cljs$lang$applyTo = function(arglist__18645) {
    var args = cljs.core.seq(arglist__18645);
    return add__delegate(args)
  };
  add.cljs$lang$arity$variadic = add__delegate;
  return add
}();
c2.maths.sub = function() {
  var sub__delegate = function(args) {
    if(cljs.core._EQ_.call(null, cljs.core.count.call(null, args), 1)) {
      if(function() {
        var and__3822__auto____18654 = cljs.core.number_QMARK_.call(null, 0);
        if(and__3822__auto____18654) {
          return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
        }else {
          return and__3822__auto____18654
        }
      }()) {
        return 0 - cljs.core.first.call(null, args)
      }else {
        if(function() {
          var and__3822__auto____18655 = cljs.core.coll_QMARK_.call(null, 0);
          if(and__3822__auto____18655) {
            return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
          }else {
            return and__3822__auto____18655
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._, 0, cljs.core.first.call(null, args))
        }else {
          if(function() {
            var and__3822__auto____18656 = cljs.core.number_QMARK_.call(null, 0);
            if(and__3822__auto____18656) {
              return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
            }else {
              return and__3822__auto____18656
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._, cljs.core.replicate.call(null, cljs.core.count.call(null, cljs.core.first.call(null, args)), 0), cljs.core.first.call(null, args))
          }else {
            if(function() {
              var and__3822__auto____18657 = cljs.core.coll_QMARK_.call(null, 0);
              if(and__3822__auto____18657) {
                return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
              }else {
                return and__3822__auto____18657
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._, 0, cljs.core.replicate.call(null, cljs.core.count.call(null, 0), cljs.core.first.call(null, args)))
            }else {
              return null
            }
          }
        }
      }
    }else {
      return cljs.core.reduce.call(null, function(A, B) {
        if(function() {
          var and__3822__auto____18658 = cljs.core.number_QMARK_.call(null, A);
          if(and__3822__auto____18658) {
            return cljs.core.number_QMARK_.call(null, B)
          }else {
            return and__3822__auto____18658
          }
        }()) {
          return A - B
        }else {
          if(function() {
            var and__3822__auto____18659 = cljs.core.coll_QMARK_.call(null, A);
            if(and__3822__auto____18659) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____18659
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._, A, B)
          }else {
            if(function() {
              var and__3822__auto____18660 = cljs.core.number_QMARK_.call(null, A);
              if(and__3822__auto____18660) {
                return cljs.core.coll_QMARK_.call(null, B)
              }else {
                return and__3822__auto____18660
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
            }else {
              if(function() {
                var and__3822__auto____18661 = cljs.core.coll_QMARK_.call(null, A);
                if(and__3822__auto____18661) {
                  return cljs.core.number_QMARK_.call(null, B)
                }else {
                  return and__3822__auto____18661
                }
              }()) {
                return cljs.core.map.call(null, cljs.core._, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
              }else {
                return null
              }
            }
          }
        }
      }, args)
    }
  };
  var sub = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sub__delegate.call(this, args)
  };
  sub.cljs$lang$maxFixedArity = 0;
  sub.cljs$lang$applyTo = function(arglist__18662) {
    var args = cljs.core.seq(arglist__18662);
    return sub__delegate(args)
  };
  sub.cljs$lang$arity$variadic = sub__delegate;
  return sub
}();
c2.maths.mul = function() {
  var mul__delegate = function(args) {
    return cljs.core.reduce.call(null, function(A, B) {
      if(function() {
        var and__3822__auto____18667 = cljs.core.number_QMARK_.call(null, A);
        if(and__3822__auto____18667) {
          return cljs.core.number_QMARK_.call(null, B)
        }else {
          return and__3822__auto____18667
        }
      }()) {
        return A * B
      }else {
        if(function() {
          var and__3822__auto____18668 = cljs.core.coll_QMARK_.call(null, A);
          if(and__3822__auto____18668) {
            return cljs.core.coll_QMARK_.call(null, B)
          }else {
            return and__3822__auto____18668
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._STAR_, A, B)
        }else {
          if(function() {
            var and__3822__auto____18669 = cljs.core.number_QMARK_.call(null, A);
            if(and__3822__auto____18669) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____18669
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._STAR_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
          }else {
            if(function() {
              var and__3822__auto____18670 = cljs.core.coll_QMARK_.call(null, A);
              if(and__3822__auto____18670) {
                return cljs.core.number_QMARK_.call(null, B)
              }else {
                return and__3822__auto____18670
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._STAR_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
            }else {
              return null
            }
          }
        }
      }
    }, args)
  };
  var mul = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return mul__delegate.call(this, args)
  };
  mul.cljs$lang$maxFixedArity = 0;
  mul.cljs$lang$applyTo = function(arglist__18671) {
    var args = cljs.core.seq(arglist__18671);
    return mul__delegate(args)
  };
  mul.cljs$lang$arity$variadic = mul__delegate;
  return mul
}();
c2.maths.div = function() {
  var div__delegate = function(args) {
    if(cljs.core._EQ_.call(null, cljs.core.count.call(null, args), 1)) {
      if(function() {
        var and__3822__auto____18680 = cljs.core.number_QMARK_.call(null, 1);
        if(and__3822__auto____18680) {
          return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
        }else {
          return and__3822__auto____18680
        }
      }()) {
        return 1 / cljs.core.first.call(null, args)
      }else {
        if(function() {
          var and__3822__auto____18681 = cljs.core.coll_QMARK_.call(null, 1);
          if(and__3822__auto____18681) {
            return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
          }else {
            return and__3822__auto____18681
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._SLASH_, 1, cljs.core.first.call(null, args))
        }else {
          if(function() {
            var and__3822__auto____18682 = cljs.core.number_QMARK_.call(null, 1);
            if(and__3822__auto____18682) {
              return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
            }else {
              return and__3822__auto____18682
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._SLASH_, cljs.core.replicate.call(null, cljs.core.count.call(null, cljs.core.first.call(null, args)), 1), cljs.core.first.call(null, args))
          }else {
            if(function() {
              var and__3822__auto____18683 = cljs.core.coll_QMARK_.call(null, 1);
              if(and__3822__auto____18683) {
                return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
              }else {
                return and__3822__auto____18683
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._SLASH_, 1, cljs.core.replicate.call(null, cljs.core.count.call(null, 1), cljs.core.first.call(null, args)))
            }else {
              return null
            }
          }
        }
      }
    }else {
      return cljs.core.reduce.call(null, function(A, B) {
        if(function() {
          var and__3822__auto____18684 = cljs.core.number_QMARK_.call(null, A);
          if(and__3822__auto____18684) {
            return cljs.core.number_QMARK_.call(null, B)
          }else {
            return and__3822__auto____18684
          }
        }()) {
          return A / B
        }else {
          if(function() {
            var and__3822__auto____18685 = cljs.core.coll_QMARK_.call(null, A);
            if(and__3822__auto____18685) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____18685
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._SLASH_, A, B)
          }else {
            if(function() {
              var and__3822__auto____18686 = cljs.core.number_QMARK_.call(null, A);
              if(and__3822__auto____18686) {
                return cljs.core.coll_QMARK_.call(null, B)
              }else {
                return and__3822__auto____18686
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._SLASH_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
            }else {
              if(function() {
                var and__3822__auto____18687 = cljs.core.coll_QMARK_.call(null, A);
                if(and__3822__auto____18687) {
                  return cljs.core.number_QMARK_.call(null, B)
                }else {
                  return and__3822__auto____18687
                }
              }()) {
                return cljs.core.map.call(null, cljs.core._SLASH_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
              }else {
                return null
              }
            }
          }
        }
      }, args)
    }
  };
  var div = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return div__delegate.call(this, args)
  };
  div.cljs$lang$maxFixedArity = 0;
  div.cljs$lang$applyTo = function(arglist__18688) {
    var args = cljs.core.seq(arglist__18688);
    return div__delegate(args)
  };
  div.cljs$lang$arity$variadic = div__delegate;
  return div
}();
c2.maths.quantile = function() {
  var quantile__delegate = function(data, p__18689) {
    var map__18711__18712 = p__18689;
    var map__18711__18713 = cljs.core.seq_QMARK_.call(null, map__18711__18712) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18711__18712) : map__18711__18712;
    var probs__18714 = cljs.core._lookup.call(null, map__18711__18713, "\ufdd0'probs", cljs.core.PersistentVector.fromArray([0, 0.25, 0.5, 0.75, 1], true));
    var xs__18715 = cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.sort.call(null, data));
    var n_1__18716 = cljs.core.count.call(null, xs__18715) - 1;
    var iter__2363__auto____18731 = function iter__18717(s__18718) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__18718__18725 = s__18718;
        while(true) {
          if(cljs.core.seq.call(null, s__18718__18725)) {
            var q__18726 = cljs.core.first.call(null, s__18718__18725);
            return cljs.core.cons.call(null, function() {
              var index__18727 = q__18726 * n_1__18716 + 1;
              var lo__18728 = cljs.core.int$.call(null, c2.maths.floor.call(null, index__18727));
              var h__18729 = index__18727 - lo__18728;
              var a__18730 = xs__18715.call(null, lo__18728 - 1);
              if(cljs.core._EQ_.call(null, h__18729, 0)) {
                return a__18730
              }else {
                return a__18730 + h__18729 * (xs__18715.call(null, lo__18728) - a__18730)
              }
            }(), iter__18717.call(null, cljs.core.rest.call(null, s__18718__18725)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____18731.call(null, probs__18714)
  };
  var quantile = function(data, var_args) {
    var p__18689 = null;
    if(goog.isDef(var_args)) {
      p__18689 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return quantile__delegate.call(this, data, p__18689)
  };
  quantile.cljs$lang$maxFixedArity = 1;
  quantile.cljs$lang$applyTo = function(arglist__18732) {
    var data = cljs.core.first(arglist__18732);
    var p__18689 = cljs.core.rest(arglist__18732);
    return quantile__delegate(data, p__18689)
  };
  quantile.cljs$lang$arity$variadic = quantile__delegate;
  return quantile
}();
goog.provide("c2.scale");
goog.require("cljs.core");
goog.require("c2.maths");
goog.require("c2.maths");
goog.require("c2.maths");
c2.scale.IInvertable = {};
c2.scale.invert = function invert(scale) {
  if(function() {
    var and__3822__auto____17411 = scale;
    if(and__3822__auto____17411) {
      return scale.c2$scale$IInvertable$invert$arity$1
    }else {
      return and__3822__auto____17411
    }
  }()) {
    return scale.c2$scale$IInvertable$invert$arity$1(scale)
  }else {
    var x__2264__auto____17412 = scale == null ? null : scale;
    return function() {
      var or__3824__auto____17413 = c2.scale.invert[goog.typeOf(x__2264__auto____17412)];
      if(or__3824__auto____17413) {
        return or__3824__auto____17413
      }else {
        var or__3824__auto____17414 = c2.scale.invert["_"];
        if(or__3824__auto____17414) {
          return or__3824__auto____17414
        }else {
          throw cljs.core.missing_protocol.call(null, "IInvertable.invert", scale);
        }
      }
    }().call(null, scale)
  }
};
c2.scale._linear = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054859;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
c2.scale._linear.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__17420 = this;
  var h__2093__auto____17421 = this__17420.__hash;
  if(!(h__2093__auto____17421 == null)) {
    return h__2093__auto____17421
  }else {
    var h__2093__auto____17422 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__17420.__hash = h__2093__auto____17422;
    return h__2093__auto____17422
  }
};
c2.scale._linear.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__17423 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
c2.scale._linear.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k17416, else__2227__auto__) {
  var this__17424 = this;
  if(k17416 === "\ufdd0'domain") {
    return this__17424.domain
  }else {
    if(k17416 === "\ufdd0'range") {
      return this__17424.range
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__17424.__extmap, k17416, else__2227__auto__)
      }else {
        return null
      }
    }
  }
};
c2.scale._linear.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__17415) {
  var this__17425 = this;
  var pred__17426__17429 = cljs.core.identical_QMARK_;
  var expr__17427__17430 = k__2232__auto__;
  if(pred__17426__17429.call(null, "\ufdd0'domain", expr__17427__17430)) {
    return new c2.scale._linear(G__17415, this__17425.range, this__17425.__meta, this__17425.__extmap, null)
  }else {
    if(pred__17426__17429.call(null, "\ufdd0'range", expr__17427__17430)) {
      return new c2.scale._linear(this__17425.domain, G__17415, this__17425.__meta, this__17425.__extmap, null)
    }else {
      return new c2.scale._linear(this__17425.domain, this__17425.range, this__17425.__meta, cljs.core.assoc.call(null, this__17425.__extmap, k__2232__auto__, G__17415), null)
    }
  }
};
c2.scale._linear.prototype.call = function(this_sym17431, x) {
  var this__17432 = this;
  var this_sym17431__17433 = this;
  var ___17434 = this_sym17431__17433;
  var domain_length__17435 = cljs.core.last.call(null, this__17432.domain) - cljs.core.first.call(null, this__17432.domain);
  var range_length__17436 = cljs.core.last.call(null, this__17432.range) - cljs.core.first.call(null, this__17432.range);
  return cljs.core.first.call(null, this__17432.range) + range_length__17436 * ((x - cljs.core.first.call(null, this__17432.domain)) / domain_length__17435)
};
c2.scale._linear.prototype.apply = function(this_sym17418, args17419) {
  var this__17437 = this;
  return this_sym17418.call.apply(this_sym17418, [this_sym17418].concat(args17419.slice()))
};
c2.scale._linear.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__17438 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
c2.scale._linear.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__17439 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__17439.domain), cljs.core.vector.call(null, "\ufdd0'range", this__17439.range)], true), this__17439.__extmap))
};
c2.scale._linear.prototype.c2$scale$IInvertable$ = true;
c2.scale._linear.prototype.c2$scale$IInvertable$invert$arity$1 = function(this$) {
  var this__17440 = this;
  return cljs.core.assoc.call(null, this$, "\ufdd0'domain", this__17440.range, "\ufdd0'range", this__17440.domain)
};
c2.scale._linear.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__17441 = this;
  var pr_pair__2240__auto____17442 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____17442, [cljs.core.str("#"), cljs.core.str("_linear"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__17441.domain), cljs.core.vector.call(null, "\ufdd0'range", this__17441.range)], true), this__17441.__extmap))
};
c2.scale._linear.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__17443 = this;
  return 2 + cljs.core.count.call(null, this__17443.__extmap)
};
c2.scale._linear.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__17444 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____17445 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____17445)) {
      var and__3822__auto____17446 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____17446) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____17446
      }
    }else {
      return and__3822__auto____17445
    }
  }())) {
    return true
  }else {
    return false
  }
};
c2.scale._linear.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__17415) {
  var this__17447 = this;
  return new c2.scale._linear(this__17447.domain, this__17447.range, G__17415, this__17447.__extmap, this__17447.__hash)
};
c2.scale._linear.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__17448 = this;
  return this__17448.__meta
};
c2.scale._linear.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__17449 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'domain", "\ufdd0'range"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__17449.__meta), k__2234__auto__)
  }else {
    return new c2.scale._linear(this__17449.domain, this__17449.range, this__17449.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__17449.__extmap, k__2234__auto__)), null)
  }
};
c2.scale._linear.cljs$lang$type = true;
c2.scale._linear.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "c2.scale/_linear")
};
c2.scale.__GT__linear = function __GT__linear(domain, range) {
  return new c2.scale._linear(domain, range)
};
c2.scale.map__GT__linear = function map__GT__linear(G__17417) {
  return new c2.scale._linear((new cljs.core.Keyword("\ufdd0'domain")).call(null, G__17417), (new cljs.core.Keyword("\ufdd0'range")).call(null, G__17417), null, cljs.core.dissoc.call(null, G__17417, "\ufdd0'domain", "\ufdd0'range"))
};
c2.scale._linear;
c2.scale.linear = function() {
  var linear__delegate = function(kwargs) {
    return c2.scale.map__GT__linear.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'domain", "\ufdd0'range"], {"\ufdd0'domain":cljs.core.PersistentVector.fromArray([0, 1], true), "\ufdd0'range":cljs.core.PersistentVector.fromArray([0, 1], true)}), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)))
  };
  var linear = function(var_args) {
    var kwargs = null;
    if(goog.isDef(var_args)) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return linear__delegate.call(this, kwargs)
  };
  linear.cljs$lang$maxFixedArity = 0;
  linear.cljs$lang$applyTo = function(arglist__17450) {
    var kwargs = cljs.core.seq(arglist__17450);
    return linear__delegate(kwargs)
  };
  linear.cljs$lang$arity$variadic = linear__delegate;
  return linear
}();
c2.scale._power = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054859;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
c2.scale._power.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__17456 = this;
  var h__2093__auto____17457 = this__17456.__hash;
  if(!(h__2093__auto____17457 == null)) {
    return h__2093__auto____17457
  }else {
    var h__2093__auto____17458 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__17456.__hash = h__2093__auto____17458;
    return h__2093__auto____17458
  }
};
c2.scale._power.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__17459 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
c2.scale._power.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k17452, else__2227__auto__) {
  var this__17460 = this;
  if(k17452 === "\ufdd0'domain") {
    return this__17460.domain
  }else {
    if(k17452 === "\ufdd0'range") {
      return this__17460.range
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__17460.__extmap, k17452, else__2227__auto__)
      }else {
        return null
      }
    }
  }
};
c2.scale._power.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__17451) {
  var this__17461 = this;
  var pred__17462__17465 = cljs.core.identical_QMARK_;
  var expr__17463__17466 = k__2232__auto__;
  if(pred__17462__17465.call(null, "\ufdd0'domain", expr__17463__17466)) {
    return new c2.scale._power(G__17451, this__17461.range, this__17461.__meta, this__17461.__extmap, null)
  }else {
    if(pred__17462__17465.call(null, "\ufdd0'range", expr__17463__17466)) {
      return new c2.scale._power(this__17461.domain, G__17451, this__17461.__meta, this__17461.__extmap, null)
    }else {
      return new c2.scale._power(this__17461.domain, this__17461.range, this__17461.__meta, cljs.core.assoc.call(null, this__17461.__extmap, k__2232__auto__, G__17451), null)
    }
  }
};
c2.scale._power.prototype.call = function(this_sym17467, x) {
  var this__17468 = this;
  var this_sym17467__17469 = this;
  var ___17470 = this_sym17467__17469;
  return cljs.core.comp.call(null, c2.scale.linear.call(null, "\ufdd0'domain", cljs.core.map.call(null, c2.maths.expt, this__17468.domain), "\ufdd0'range", this__17468.range), c2.maths.expt).call(null, x)
};
c2.scale._power.prototype.apply = function(this_sym17454, args17455) {
  var this__17471 = this;
  return this_sym17454.call.apply(this_sym17454, [this_sym17454].concat(args17455.slice()))
};
c2.scale._power.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__17472 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
c2.scale._power.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__17473 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__17473.domain), cljs.core.vector.call(null, "\ufdd0'range", this__17473.range)], true), this__17473.__extmap))
};
c2.scale._power.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__17474 = this;
  var pr_pair__2240__auto____17475 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____17475, [cljs.core.str("#"), cljs.core.str("_power"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__17474.domain), cljs.core.vector.call(null, "\ufdd0'range", this__17474.range)], true), this__17474.__extmap))
};
c2.scale._power.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__17476 = this;
  return 2 + cljs.core.count.call(null, this__17476.__extmap)
};
c2.scale._power.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__17477 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____17478 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____17478)) {
      var and__3822__auto____17479 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____17479) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____17479
      }
    }else {
      return and__3822__auto____17478
    }
  }())) {
    return true
  }else {
    return false
  }
};
c2.scale._power.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__17451) {
  var this__17480 = this;
  return new c2.scale._power(this__17480.domain, this__17480.range, G__17451, this__17480.__extmap, this__17480.__hash)
};
c2.scale._power.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__17481 = this;
  return this__17481.__meta
};
c2.scale._power.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__17482 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'domain", "\ufdd0'range"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__17482.__meta), k__2234__auto__)
  }else {
    return new c2.scale._power(this__17482.domain, this__17482.range, this__17482.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__17482.__extmap, k__2234__auto__)), null)
  }
};
c2.scale._power.cljs$lang$type = true;
c2.scale._power.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "c2.scale/_power")
};
c2.scale.__GT__power = function __GT__power(domain, range) {
  return new c2.scale._power(domain, range)
};
c2.scale.map__GT__power = function map__GT__power(G__17453) {
  return new c2.scale._power((new cljs.core.Keyword("\ufdd0'domain")).call(null, G__17453), (new cljs.core.Keyword("\ufdd0'range")).call(null, G__17453), null, cljs.core.dissoc.call(null, G__17453, "\ufdd0'domain", "\ufdd0'range"))
};
c2.scale._power;
c2.scale.power = function() {
  var power__delegate = function(kwargs) {
    return c2.scale.map__GT__power.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'domain", "\ufdd0'range"], {"\ufdd0'domain":cljs.core.PersistentVector.fromArray([0, 1], true), "\ufdd0'range":cljs.core.PersistentVector.fromArray([0, 1], true)}), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)))
  };
  var power = function(var_args) {
    var kwargs = null;
    if(goog.isDef(var_args)) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return power__delegate.call(this, kwargs)
  };
  power.cljs$lang$maxFixedArity = 0;
  power.cljs$lang$applyTo = function(arglist__17483) {
    var kwargs = cljs.core.seq(arglist__17483);
    return power__delegate(kwargs)
  };
  power.cljs$lang$arity$variadic = power__delegate;
  return power
}();
c2.scale._log = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054859;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
c2.scale._log.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__17489 = this;
  var h__2093__auto____17490 = this__17489.__hash;
  if(!(h__2093__auto____17490 == null)) {
    return h__2093__auto____17490
  }else {
    var h__2093__auto____17491 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__17489.__hash = h__2093__auto____17491;
    return h__2093__auto____17491
  }
};
c2.scale._log.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__17492 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
c2.scale._log.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k17485, else__2227__auto__) {
  var this__17493 = this;
  if(k17485 === "\ufdd0'domain") {
    return this__17493.domain
  }else {
    if(k17485 === "\ufdd0'range") {
      return this__17493.range
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__17493.__extmap, k17485, else__2227__auto__)
      }else {
        return null
      }
    }
  }
};
c2.scale._log.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__17484) {
  var this__17494 = this;
  var pred__17495__17498 = cljs.core.identical_QMARK_;
  var expr__17496__17499 = k__2232__auto__;
  if(pred__17495__17498.call(null, "\ufdd0'domain", expr__17496__17499)) {
    return new c2.scale._log(G__17484, this__17494.range, this__17494.__meta, this__17494.__extmap, null)
  }else {
    if(pred__17495__17498.call(null, "\ufdd0'range", expr__17496__17499)) {
      return new c2.scale._log(this__17494.domain, G__17484, this__17494.__meta, this__17494.__extmap, null)
    }else {
      return new c2.scale._log(this__17494.domain, this__17494.range, this__17494.__meta, cljs.core.assoc.call(null, this__17494.__extmap, k__2232__auto__, G__17484), null)
    }
  }
};
c2.scale._log.prototype.call = function(this_sym17500, x) {
  var this__17501 = this;
  var this_sym17500__17502 = this;
  var ___17503 = this_sym17500__17502;
  return cljs.core.comp.call(null, c2.scale.linear.call(null, "\ufdd0'domain", cljs.core.map.call(null, c2.maths.log, this__17501.domain), "\ufdd0'range", this__17501.range), c2.maths.log).call(null, x)
};
c2.scale._log.prototype.apply = function(this_sym17487, args17488) {
  var this__17504 = this;
  return this_sym17487.call.apply(this_sym17487, [this_sym17487].concat(args17488.slice()))
};
c2.scale._log.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__17505 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
c2.scale._log.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__17506 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__17506.domain), cljs.core.vector.call(null, "\ufdd0'range", this__17506.range)], true), this__17506.__extmap))
};
c2.scale._log.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__17507 = this;
  var pr_pair__2240__auto____17508 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____17508, [cljs.core.str("#"), cljs.core.str("_log"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__17507.domain), cljs.core.vector.call(null, "\ufdd0'range", this__17507.range)], true), this__17507.__extmap))
};
c2.scale._log.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__17509 = this;
  return 2 + cljs.core.count.call(null, this__17509.__extmap)
};
c2.scale._log.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__17510 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____17511 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____17511)) {
      var and__3822__auto____17512 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____17512) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____17512
      }
    }else {
      return and__3822__auto____17511
    }
  }())) {
    return true
  }else {
    return false
  }
};
c2.scale._log.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__17484) {
  var this__17513 = this;
  return new c2.scale._log(this__17513.domain, this__17513.range, G__17484, this__17513.__extmap, this__17513.__hash)
};
c2.scale._log.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__17514 = this;
  return this__17514.__meta
};
c2.scale._log.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__17515 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'domain", "\ufdd0'range"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__17515.__meta), k__2234__auto__)
  }else {
    return new c2.scale._log(this__17515.domain, this__17515.range, this__17515.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__17515.__extmap, k__2234__auto__)), null)
  }
};
c2.scale._log.cljs$lang$type = true;
c2.scale._log.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "c2.scale/_log")
};
c2.scale.__GT__log = function __GT__log(domain, range) {
  return new c2.scale._log(domain, range)
};
c2.scale.map__GT__log = function map__GT__log(G__17486) {
  return new c2.scale._log((new cljs.core.Keyword("\ufdd0'domain")).call(null, G__17486), (new cljs.core.Keyword("\ufdd0'range")).call(null, G__17486), null, cljs.core.dissoc.call(null, G__17486, "\ufdd0'domain", "\ufdd0'range"))
};
c2.scale._log;
c2.scale.log = function() {
  var log__delegate = function(kwargs) {
    return c2.scale.map__GT__log.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'domain", "\ufdd0'range"], {"\ufdd0'domain":cljs.core.PersistentVector.fromArray([1, 10], true), "\ufdd0'range":cljs.core.PersistentVector.fromArray([0, 1], true)}), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)))
  };
  var log = function(var_args) {
    var kwargs = null;
    if(goog.isDef(var_args)) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, kwargs)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__17516) {
    var kwargs = cljs.core.seq(arglist__17516);
    return log__delegate(kwargs)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
goog.provide("c2.ticks");
goog.require("cljs.core");
goog.require("c2.maths");
goog.require("c2.maths");
c2.ticks.Q = cljs.core.PersistentVector.fromArray([1, 5, 2, 2.5, 4, 3], true);
c2.ticks.index_of = function index_of(x, coll) {
  return cljs.core.first.call(null, function() {
    var iter__2363__auto____17542 = function iter__17530(s__17531) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__17531__17537 = s__17531;
        while(true) {
          if(cljs.core.seq.call(null, s__17531__17537)) {
            var vec__17538__17539 = cljs.core.first.call(null, s__17531__17537);
            var idx__17540 = cljs.core.nth.call(null, vec__17538__17539, 0, null);
            var y__17541 = cljs.core.nth.call(null, vec__17538__17539, 1, null);
            if(cljs.core._EQ_.call(null, y__17541, x)) {
              return cljs.core.cons.call(null, idx__17540, iter__17530.call(null, cljs.core.rest.call(null, s__17531__17537)))
            }else {
              var G__17543 = cljs.core.rest.call(null, s__17531__17537);
              s__17531__17537 = G__17543;
              continue
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____17542.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, coll))
  }())
};
c2.ticks.label_range_contains_zero_QMARK_ = function label_range_contains_zero_QMARK_(l_min, l_max, l_step) {
  var and__3822__auto____17546 = l_max > 0;
  if(and__3822__auto____17546) {
    var and__3822__auto____17547 = l_min < 0;
    if(and__3822__auto____17547) {
      return l_min % l_step === 0
    }else {
      return and__3822__auto____17547
    }
  }else {
    return and__3822__auto____17546
  }
};
c2.ticks.simplicity = function simplicity(q, j, label_range_contains_zero) {
  var v__17549 = cljs.core.truth_(label_range_contains_zero) ? 1 : 0;
  if(cljs.core.count.call(null, c2.ticks.Q) <= 1) {
    return 1 - j + v__17549
  }else {
    return 1 - c2.ticks.index_of.call(null, q, c2.ticks.Q) / (cljs.core.count.call(null, c2.ticks.Q) - 1) - j + v__17549
  }
};
c2.ticks.max_simplicity = function max_simplicity(q, j) {
  return c2.ticks.simplicity.call(null, q, j, true)
};
c2.ticks.coverage = function coverage(d_min, d_max, l_min, l_max) {
  return 1 - 0.5 * ((c2.maths.sq.call(null, d_max - l_max) + c2.maths.sq.call(null, d_min - l_min)) / c2.maths.sq.call(null, 0.1 * (d_max - d_min)))
};
c2.ticks.max_coverage = function max_coverage(d_min, d_max, span) {
  var d_range__17551 = d_max - d_min;
  if(span > d_range__17551) {
    return 1 - c2.maths.sq.call(null, (span - d_range__17551) / (0.2 * d_range__17551))
  }else {
    return 1
  }
};
c2.ticks.density = function density(r, rt) {
  return 2 - (r / rt > rt / r ? r / rt : rt / r)
};
c2.ticks.max_density = function max_density(r, rt) {
  if(r >= rt) {
    return 2 - r / rt
  }else {
    return 1
  }
};
c2.ticks.w = function w(p__17552) {
  var vec__17560__17561 = p__17552;
  var simplicity__17562 = cljs.core.nth.call(null, vec__17560__17561, 0, null);
  var coverage__17563 = cljs.core.nth.call(null, vec__17560__17561, 1, null);
  var density__17564 = cljs.core.nth.call(null, vec__17560__17561, 2, null);
  var legibility__17565 = cljs.core.nth.call(null, vec__17560__17561, 3, null);
  var w__17566 = cljs.core.PersistentVector.fromArray([0.2, 0.25, 0.5, 0.05], true);
  return simplicity__17562 * w__17566.call(null, 0) + coverage__17563 * w__17566.call(null, 1) + density__17564 * w__17566.call(null, 2) + legibility__17565 * w__17566.call(null, 3)
};
c2.ticks.search = function() {
  var search__delegate = function(p__17567, p__17568) {
    var vec__17603__17605 = p__17567;
    var d_min__17606 = cljs.core.nth.call(null, vec__17603__17605, 0, null);
    var d_max__17607 = cljs.core.nth.call(null, vec__17603__17605, 1, null);
    var map__17604__17608 = p__17568;
    var map__17604__17609 = cljs.core.seq_QMARK_.call(null, map__17604__17608) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17604__17608) : map__17604__17608;
    var clamp_QMARK___17610 = cljs.core._lookup.call(null, map__17604__17609, "\ufdd0'clamp?", false);
    var length__17611 = cljs.core._lookup.call(null, map__17604__17609, "\ufdd0'length", 500);
    var target_density__17612 = cljs.core._lookup.call(null, map__17604__17609, "\ufdd0'target-density", 0.01);
    var best_score__17613 = cljs.core.atom.call(null, -2);
    var label__17614 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
    var G__17615__17616 = c2.ticks.Q;
    while(true) {
      if(cljs.core.empty_QMARK_.call(null, G__17615__17616)) {
      }else {
        if(true) {
          var q__17617 = cljs.core.first.call(null, G__17615__17616);
          var j__17618 = 1;
          while(true) {
            if(null) {
            }else {
              if(true) {
                var ms__17619 = c2.ticks.max_simplicity.call(null, q__17617, j__17618);
                if(c2.ticks.w.call(null, cljs.core.PersistentVector.fromArray([ms__17619, 1, 1, 1], true)) < cljs.core.deref.call(null, best_score__17613)) {
                }else {
                  var k__17620 = 2;
                  while(true) {
                    if(null) {
                    }else {
                      if(true) {
                        var md__17621 = c2.ticks.max_density.call(null, k__17620 / length__17611, target_density__17612);
                        if(c2.ticks.w.call(null, cljs.core.PersistentVector.fromArray([ms__17619, 1, md__17621, 1], true)) < cljs.core.deref.call(null, best_score__17613)) {
                        }else {
                          var delta__17622 = (d_max__17607 - d_min__17606) / ((k__17620 + 1) * j__17618 * k__17620);
                          var z__17623 = c2.maths.ceil.call(null, c2.maths.log10.call(null, delta__17622));
                          while(true) {
                            if(null) {
                            }else {
                              if(true) {
                                var l_step__17624 = q__17617 * j__17618 * c2.maths.expt.call(null, 10, z__17623);
                                var mc__17625 = c2.ticks.max_coverage.call(null, d_min__17606, d_max__17607, (k__17620 - 1) * l_step__17624);
                                if(c2.ticks.w.call(null, cljs.core.PersistentVector.fromArray([ms__17619, mc__17625, md__17621, 1], true)) < cljs.core.deref.call(null, best_score__17613)) {
                                }else {
                                  var G__17626__17627 = d_min__17606 / l_step__17624;
                                  var start__17628 = c2.maths.floor.call(null, d_max__17607 / l_step__17624) - (k__17620 - 1);
                                  while(true) {
                                    if(start__17628 > G__17626__17627) {
                                    }else {
                                      if(true) {
                                        var l_min__17629 = start__17628 * l_step__17624;
                                        var l_max__17630 = l_min__17629 + (k__17620 - 1) * l_step__17624;
                                        var s__17631 = c2.ticks.simplicity.call(null, q__17617, j__17618, c2.ticks.label_range_contains_zero_QMARK_.call(null, l_min__17629, l_max__17630, l_step__17624));
                                        var c__17632 = c2.ticks.coverage.call(null, d_min__17606, d_max__17607, l_min__17629, l_max__17630);
                                        var d__17633 = c2.ticks.density.call(null, k__17620 / length__17611, target_density__17612);
                                        var score__17634 = c2.ticks.w.call(null, cljs.core.PersistentVector.fromArray([s__17631, c__17632, d__17633, 1], true));
                                        if(score__17634 < cljs.core.deref.call(null, best_score__17613)) {
                                        }else {
                                          cljs.core.reset_BANG_.call(null, best_score__17613, score__17634);
                                          cljs.core.reset_BANG_.call(null, label__17614, cljs.core.ObjMap.fromObject(["\ufdd0'min", "\ufdd0'max", "\ufdd0'step"], {"\ufdd0'min":l_min__17629, "\ufdd0'max":l_max__17630, "\ufdd0'step":l_step__17624}));
                                          var G__17637 = start__17628 + 1 / j__17618;
                                          start__17628 = G__17637;
                                          continue
                                        }
                                      }else {
                                      }
                                    }
                                    break
                                  }
                                  var G__17638 = z__17623 + 1;
                                  z__17623 = G__17638;
                                  continue
                                }
                              }else {
                              }
                            }
                            break
                          }
                          var G__17639 = k__17620 + 1;
                          k__17620 = G__17639;
                          continue
                        }
                      }else {
                      }
                    }
                    break
                  }
                  var G__17640 = j__17618 + 1;
                  j__17618 = G__17640;
                  continue
                }
              }else {
              }
            }
            break
          }
          var G__17641 = cljs.core.next.call(null, G__17615__17616);
          G__17615__17616 = G__17641;
          continue
        }else {
        }
      }
      break
    }
    var l__17635 = cljs.core.deref.call(null, label__17614);
    var extent__17636 = cljs.core.PersistentVector.fromArray([cljs.core.truth_(clamp_QMARK___17610) ? d_min__17606 : (new cljs.core.Keyword("\ufdd0'min")).call(null, l__17635) < d_min__17606 ? (new cljs.core.Keyword("\ufdd0'min")).call(null, l__17635) : d_min__17606, cljs.core.truth_(clamp_QMARK___17610) ? d_max__17607 : (new cljs.core.Keyword("\ufdd0'max")).call(null, l__17635) > d_max__17607 ? (new cljs.core.Keyword("\ufdd0'max")).call(null, l__17635) : d_max__17607], true);
    return cljs.core.ObjMap.fromObject(["\ufdd0'extent", "\ufdd0'min", "\ufdd0'max", "\ufdd0'ticks"], {"\ufdd0'extent":extent__17636, "\ufdd0'min":cljs.core.first.call(null, extent__17636), "\ufdd0'max":cljs.core.second.call(null, extent__17636), "\ufdd0'ticks":cljs.core.filter.call(null, function(p1__155990_SHARP_) {
      return c2.maths.within_QMARK_.call(null, p1__155990_SHARP_, extent__17636)
    }, c2.maths.irange.call(null, (new cljs.core.Keyword("\ufdd0'min")).call(null, l__17635), (new cljs.core.Keyword("\ufdd0'max")).call(null, l__17635), (new cljs.core.Keyword("\ufdd0'step")).call(null, l__17635)))})
  };
  var search = function(p__17567, var_args) {
    var p__17568 = null;
    if(goog.isDef(var_args)) {
      p__17568 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return search__delegate.call(this, p__17567, p__17568)
  };
  search.cljs$lang$maxFixedArity = 1;
  search.cljs$lang$applyTo = function(arglist__17642) {
    var p__17567 = cljs.core.first(arglist__17642);
    var p__17568 = cljs.core.rest(arglist__17642);
    return search__delegate(p__17567, p__17568)
  };
  search.cljs$lang$arity$variadic = search__delegate;
  return search
}();
var array_p, explode_p, ignore_p, key_prefix, map_p, namespace_tag, number_p, p, re_svg_tags, re_tag, re_whitespace, string_p, unify_p, whitespace_node_p, xmlns, __hasProp = {}.hasOwnProperty;
goog.require("goog.string");
goog.provide("singult.coffee");
goog.provide("singult.coffee.Unify");
goog.provide("singult.coffee.Ignore");
p = function(x) {
  console.log(x);
  return x
};
re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
re_svg_tags = /^(svg|g|rect|circle|clipPath|path|line|polygon|polyline|text|textPath)$/;
re_whitespace = /^\s+$/;
key_prefix = "\x00";
xmlns = {xhtml:"http://www.w3.org/1999/xhtml", svg:"http://www.w3.org/2000/svg"};
namespace_tag = function(tag_str) {
  var nsp, tag, _ref;
  _ref = tag_str.split(":"), nsp = _ref[0], tag = _ref[1];
  if(tag != null) {
    return[xmlns[nsp] || nsp, tag]
  }else {
    if(tag_str.match(re_svg_tags)) {
      return[xmlns.svg, tag_str]
    }else {
      return[xmlns.xhtml, tag_str]
    }
  }
};
explode_p = function(v) {
  return v[0] === ":*:"
};
unify_p = function(x) {
  return x != null && x instanceof singult.coffee.Unify
};
ignore_p = function(x) {
  return x != null && x instanceof singult.coffee.Ignore
};
array_p = function(x) {
  return x != null && x.forEach != null
};
map_p = function(x) {
  return x != null && !array_p(x) && !unify_p(x) && !ignore_p(x) && x instanceof Object
};
string_p = function(x) {
  return x != null && x.substring != null
};
number_p = function(x) {
  return x != null && x.toFixed != null
};
whitespace_node_p = function($n) {
  return $n.nodeType === 8 || $n.nodeType === 3 && $n.textContent.match(re_whitespace)
};
singult.coffee.style = function($e, m) {
  var k, v, _results;
  _results = [];
  for(k in m) {
    if(!__hasProp.call(m, k)) {
      continue
    }
    v = m[k];
    _results.push($e.style[goog.string.toCamelCase(k)] = v)
  }
  return _results
};
singult.coffee.properties = function($e, m) {
  var prop, v, _results;
  _results = [];
  for(prop in m) {
    if(!__hasProp.call(m, prop)) {
      continue
    }
    v = m[prop];
    _results.push($e[prop] = v)
  }
  return _results
};
singult.coffee.attr = function($e, attr_map) {
  var k, v, _results;
  if(attr_map["style"] != null) {
    singult.coffee.style($e, attr_map["style"]);
    delete attr_map["style"]
  }
  if(attr_map["properties"] != null) {
    singult.coffee.properties($e, attr_map["properties"]);
    delete attr_map["properties"]
  }
  if(array_p(attr_map["class"])) {
    $e.setAttribute("class", attr_map["class"].join(" "));
    delete attr_map["class"]
  }
  _results = [];
  for(k in attr_map) {
    if(!__hasProp.call(attr_map, k)) {
      continue
    }
    v = attr_map[k];
    if(v != null) {
      _results.push($e.setAttribute(k, v))
    }else {
      _results.push($e.removeAttribute(k))
    }
  }
  return _results
};
singult.coffee.node_data = function($e, d) {
  if(d != null) {
    return $e["__singult_data__"] = d
  }else {
    return $e["__singult_data__"]
  }
};
singult.coffee.canonicalize = function(x) {
  if(number_p(x)) {
    return x.toString()
  }else {
    if(array_p(x)) {
      return singult.coffee.canonicalize_hiccup(x)
    }else {
      return x
    }
  }
};
singult.coffee.canonicalize_hiccup = function(v) {
  var abbreviated_classes, attr, canonical, canonical_children, children, cls_str, id, nsp, tag, tag_str, _, _ref, _ref1, _ref2;
  tag = v[0];
  _ref = map_p(v[1]) ? [v[1], v.slice(2)] : [{}, v.slice(1)], attr = _ref[0], children = _ref[1];
  _ref1 = tag.match(re_tag), _ = _ref1[0], tag_str = _ref1[1], id = _ref1[2], cls_str = _ref1[3];
  if(id != null) {
    attr["id"] = id
  }
  if(cls_str != null) {
    abbreviated_classes = cls_str.split(".");
    if(array_p(attr["class"])) {
      attr["class"] = attr["class"].concat(abbreviated_classes)
    }else {
      if(string_p(attr["class"])) {
        attr["class"] = abbreviated_classes.concat([attr["class"]])
      }else {
        if(!(attr["class"] != null)) {
          attr["class"] = abbreviated_classes
        }
      }
    }
  }
  _ref2 = namespace_tag(tag_str), nsp = _ref2[0], tag = _ref2[1];
  canonical_children = [];
  children.forEach(function(v) {
    if(v != null) {
      if(explode_p(v)) {
        return v.slice(1).forEach(function(v) {
          return canonical_children.push(singult.coffee.canonicalize(v))
        })
      }else {
        return canonical_children.push(singult.coffee.canonicalize(v))
      }
    }
  });
  canonical = {nsp:nsp, tag:tag, attr:attr, children:canonical_children};
  return canonical
};
singult.coffee.render = function(m) {
  var $e, c;
  if(unify_p(m)) {
    throw new Error("Unify must be the first and only child of its parent.");
  }else {
    if(ignore_p(m)) {
      return null
    }else {
      if(string_p(m)) {
        return document.createTextNode(m)
      }else {
        $e = document.createElementNS(m.nsp, m.tag);
        singult.coffee.attr($e, m.attr);
        if(unify_p(c = m.children[0])) {
          if(c.enter != null) {
            c.data.forEach(function(d) {
              var $el;
              $el = c.enter(d);
              singult.coffee.node_data($el, d);
              return $e.appendChild($el)
            })
          }else {
            c.data.forEach(function(d) {
              var $el;
              $el = singult.coffee.render(singult.coffee.canonicalize(c.mapping(d)));
              singult.coffee.node_data($el, d);
              return $e.appendChild($el)
            })
          }
        }else {
          m.children.forEach(function(c) {
            var $c;
            $c = singult.coffee.render(c);
            if($c != null) {
              return $e.appendChild($c)
            }
          })
        }
        return $e
      }
    }
  }
};
singult.coffee.Unify = function(data, mapping, key_fn, enter, update, exit, force_update_p) {
  this.data = data;
  this.mapping = mapping;
  this.key_fn = key_fn;
  this.enter = enter;
  this.update = update;
  this.exit = exit;
  this.force_update_p = force_update_p;
  return this
};
singult.coffee.Ignore = function() {
  return this
};
singult.coffee.unify_ = function($container, u) {
  var $n, $nodes, enter, exit, i, key, key_fn, nodes_by_key, update, _;
  enter = u.enter || function(d) {
    var $el;
    $el = singult.coffee.render(singult.coffee.canonicalize(u.mapping(d)));
    $container.appendChild($el);
    return $el
  };
  update = u.update || function($n, d) {
    return singult.coffee.merge($n, singult.coffee.canonicalize(u.mapping(d)))
  };
  exit = u.exit || function($n) {
    return $container.removeChild($n)
  };
  key_fn = u.key_fn || function(d, idx) {
    return idx
  };
  $nodes = $container.childNodes;
  nodes_by_key = {};
  i = 0;
  while(i < $nodes.length) {
    key = key_prefix + key_fn(singult.coffee.node_data($nodes[i]), i);
    nodes_by_key[key] = $nodes[i];
    i += 1
  }
  u.data.forEach(function(d, i) {
    var $el, $n, identical_data_p, old_data;
    key = key_prefix + key_fn(d, i);
    if($n = nodes_by_key[key]) {
      if(u.force_update_p) {
        $el = update($n, d);
        singult.coffee.node_data($el, d)
      }else {
        old_data = singult.coffee.node_data($n);
        identical_data_p = old_data.cljs$core$IEquiv$_equiv$arity$2 != null ? old_data.cljs$core$IEquiv$_equiv$arity$2(old_data, d) : old_data === d;
        if(!identical_data_p) {
          $el = update($n, d);
          singult.coffee.node_data($el, d)
        }
      }
      return delete nodes_by_key[key]
    }else {
      $el = enter(d);
      return singult.coffee.node_data($el, d)
    }
  });
  for(_ in nodes_by_key) {
    $n = nodes_by_key[_];
    exit($n)
  }
  return null
};
singult.coffee.merge = function($e, m) {
  var $c, c, i, _i, _j, _ref, _ref1;
  if(unify_p(m)) {
    singult.coffee.unify_($e, m)
  }else {
    if(ignore_p(m)) {
    }else {
      if($e.nodeName.toLowerCase() !== m.tag.toLowerCase()) {
        p($e);
        p(m);
        throw new Error("Cannot merge $e into node of different type");
      }
      singult.coffee.attr($e, m.attr);
      if($e.hasChildNodes()) {
        for(i = _i = _ref = $e.childNodes.length - 1;_ref <= 0 ? _i <= 0 : _i >= 0;i = _ref <= 0 ? ++_i : --_i) {
          $c = $e.childNodes[i];
          if(whitespace_node_p($c)) {
            $e.removeChild($c)
          }
        }
      }
      if(unify_p(m.children[0])) {
        singult.coffee.merge($e, m.children[0])
      }else {
        if($e.childNodes.length > m.children.length) {
          for(i = _j = _ref1 = $e.childNodes.length - 1;_ref1 <= 0 ? _j <= 0 : _j >= 0;i = _ref1 <= 0 ? ++_j : --_j) {
            $e.removeChild($e.childNodes[i])
          }
        }
        i = 0;
        while(i < m.children.length) {
          c = m.children[i] || "";
          $c = $e.childNodes[i];
          if(string_p(c)) {
            if($c != null) {
              $c.textContent = c
            }else {
              $e.appendChild(document.createTextNode(c))
            }
          }else {
            if(ignore_p(c)) {
            }else {
              if(map_p(c)) {
                if($c != null) {
                  singult.coffee.merge($c, c)
                }else {
                  $e.appendChild(singult.coffee.render(c))
                }
              }else {
                p($c);
                p(c);
                throw new Error("Cannot merge children");
              }
            }
          }
          i += 1
        }
      }
    }
  }
  return $e
};
goog.provide("singult.core");
goog.require("cljs.core");
goog.require("singult.coffee");
singult.core.Unify = function(data, mapping, key_fn, enter, update, exit, force_update_QMARK_, __meta, __extmap) {
  this.data = data;
  this.mapping = mapping;
  this.key_fn = key_fn;
  this.enter = enter;
  this.update = update;
  this.exit = exit;
  this.force_update_QMARK_ = force_update_QMARK_;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054858;
  if(arguments.length > 7) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
singult.core.Unify.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__16436 = this;
  var h__2093__auto____16437 = this__16436.__hash;
  if(!(h__2093__auto____16437 == null)) {
    return h__2093__auto____16437
  }else {
    var h__2093__auto____16438 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__16436.__hash = h__2093__auto____16438;
    return h__2093__auto____16438
  }
};
singult.core.Unify.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__16439 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
singult.core.Unify.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k16434, else__2227__auto__) {
  var this__16440 = this;
  if(k16434 === "\ufdd0'data") {
    return this__16440.data
  }else {
    if(k16434 === "\ufdd0'mapping") {
      return this__16440.mapping
    }else {
      if(k16434 === "\ufdd0'key-fn") {
        return this__16440.key_fn
      }else {
        if(k16434 === "\ufdd0'enter") {
          return this__16440.enter
        }else {
          if(k16434 === "\ufdd0'update") {
            return this__16440.update
          }else {
            if(k16434 === "\ufdd0'exit") {
              return this__16440.exit
            }else {
              if(k16434 === "\ufdd0'force-update?") {
                return this__16440.force_update_QMARK_
              }else {
                if("\ufdd0'else") {
                  return cljs.core._lookup.call(null, this__16440.__extmap, k16434, else__2227__auto__)
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
singult.core.Unify.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__16433) {
  var this__16441 = this;
  var pred__16442__16445 = cljs.core.identical_QMARK_;
  var expr__16443__16446 = k__2232__auto__;
  if(pred__16442__16445.call(null, "\ufdd0'data", expr__16443__16446)) {
    return new singult.core.Unify(G__16433, this__16441.mapping, this__16441.key_fn, this__16441.enter, this__16441.update, this__16441.exit, this__16441.force_update_QMARK_, this__16441.__meta, this__16441.__extmap, null)
  }else {
    if(pred__16442__16445.call(null, "\ufdd0'mapping", expr__16443__16446)) {
      return new singult.core.Unify(this__16441.data, G__16433, this__16441.key_fn, this__16441.enter, this__16441.update, this__16441.exit, this__16441.force_update_QMARK_, this__16441.__meta, this__16441.__extmap, null)
    }else {
      if(pred__16442__16445.call(null, "\ufdd0'key-fn", expr__16443__16446)) {
        return new singult.core.Unify(this__16441.data, this__16441.mapping, G__16433, this__16441.enter, this__16441.update, this__16441.exit, this__16441.force_update_QMARK_, this__16441.__meta, this__16441.__extmap, null)
      }else {
        if(pred__16442__16445.call(null, "\ufdd0'enter", expr__16443__16446)) {
          return new singult.core.Unify(this__16441.data, this__16441.mapping, this__16441.key_fn, G__16433, this__16441.update, this__16441.exit, this__16441.force_update_QMARK_, this__16441.__meta, this__16441.__extmap, null)
        }else {
          if(pred__16442__16445.call(null, "\ufdd0'update", expr__16443__16446)) {
            return new singult.core.Unify(this__16441.data, this__16441.mapping, this__16441.key_fn, this__16441.enter, G__16433, this__16441.exit, this__16441.force_update_QMARK_, this__16441.__meta, this__16441.__extmap, null)
          }else {
            if(pred__16442__16445.call(null, "\ufdd0'exit", expr__16443__16446)) {
              return new singult.core.Unify(this__16441.data, this__16441.mapping, this__16441.key_fn, this__16441.enter, this__16441.update, G__16433, this__16441.force_update_QMARK_, this__16441.__meta, this__16441.__extmap, null)
            }else {
              if(pred__16442__16445.call(null, "\ufdd0'force-update?", expr__16443__16446)) {
                return new singult.core.Unify(this__16441.data, this__16441.mapping, this__16441.key_fn, this__16441.enter, this__16441.update, this__16441.exit, G__16433, this__16441.__meta, this__16441.__extmap, null)
              }else {
                return new singult.core.Unify(this__16441.data, this__16441.mapping, this__16441.key_fn, this__16441.enter, this__16441.update, this__16441.exit, this__16441.force_update_QMARK_, this__16441.__meta, cljs.core.assoc.call(null, this__16441.__extmap, k__2232__auto__, G__16433), null)
              }
            }
          }
        }
      }
    }
  }
};
singult.core.Unify.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__16447 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
singult.core.Unify.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__16448 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'data", this__16448.data), cljs.core.vector.call(null, "\ufdd0'mapping", this__16448.mapping), cljs.core.vector.call(null, "\ufdd0'key-fn", this__16448.key_fn), cljs.core.vector.call(null, "\ufdd0'enter", this__16448.enter), cljs.core.vector.call(null, "\ufdd0'update", this__16448.update), cljs.core.vector.call(null, "\ufdd0'exit", this__16448.exit), cljs.core.vector.call(null, 
  "\ufdd0'force-update?", this__16448.force_update_QMARK_)], true), this__16448.__extmap))
};
singult.core.Unify.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__16449 = this;
  var pr_pair__2240__auto____16450 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____16450, [cljs.core.str("#"), cljs.core.str("Unify"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'data", this__16449.data), cljs.core.vector.call(null, "\ufdd0'mapping", this__16449.mapping), cljs.core.vector.call(null, "\ufdd0'key-fn", this__16449.key_fn), cljs.core.vector.call(null, "\ufdd0'enter", this__16449.enter), 
  cljs.core.vector.call(null, "\ufdd0'update", this__16449.update), cljs.core.vector.call(null, "\ufdd0'exit", this__16449.exit), cljs.core.vector.call(null, "\ufdd0'force-update?", this__16449.force_update_QMARK_)], true), this__16449.__extmap))
};
singult.core.Unify.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__16451 = this;
  return 7 + cljs.core.count.call(null, this__16451.__extmap)
};
singult.core.Unify.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__16452 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____16453 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____16453)) {
      var and__3822__auto____16454 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____16454) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____16454
      }
    }else {
      return and__3822__auto____16453
    }
  }())) {
    return true
  }else {
    return false
  }
};
singult.core.Unify.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__16433) {
  var this__16455 = this;
  return new singult.core.Unify(this__16455.data, this__16455.mapping, this__16455.key_fn, this__16455.enter, this__16455.update, this__16455.exit, this__16455.force_update_QMARK_, G__16433, this__16455.__extmap, this__16455.__hash)
};
singult.core.Unify.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__16456 = this;
  return this__16456.__meta
};
singult.core.Unify.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__16457 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'data", "\ufdd0'force-update?", "\ufdd0'enter", "\ufdd0'exit", "\ufdd0'key-fn", "\ufdd0'update", "\ufdd0'mapping"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__16457.__meta), k__2234__auto__)
  }else {
    return new singult.core.Unify(this__16457.data, this__16457.mapping, this__16457.key_fn, this__16457.enter, this__16457.update, this__16457.exit, this__16457.force_update_QMARK_, this__16457.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__16457.__extmap, k__2234__auto__)), null)
  }
};
singult.core.Unify.cljs$lang$type = true;
singult.core.Unify.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "singult.core/Unify")
};
singult.core.__GT_Unify = function __GT_Unify(data, mapping, key_fn, enter, update, exit, force_update_QMARK_) {
  return new singult.core.Unify(data, mapping, key_fn, enter, update, exit, force_update_QMARK_)
};
singult.core.map__GT_Unify = function map__GT_Unify(G__16435) {
  return new singult.core.Unify((new cljs.core.Keyword("\ufdd0'data")).call(null, G__16435), (new cljs.core.Keyword("\ufdd0'mapping")).call(null, G__16435), (new cljs.core.Keyword("\ufdd0'key-fn")).call(null, G__16435), (new cljs.core.Keyword("\ufdd0'enter")).call(null, G__16435), (new cljs.core.Keyword("\ufdd0'update")).call(null, G__16435), (new cljs.core.Keyword("\ufdd0'exit")).call(null, G__16435), (new cljs.core.Keyword("\ufdd0'force-update?")).call(null, G__16435), null, cljs.core.dissoc.call(null, 
  G__16435, "\ufdd0'data", "\ufdd0'mapping", "\ufdd0'key-fn", "\ufdd0'enter", "\ufdd0'update", "\ufdd0'exit", "\ufdd0'force-update?"))
};
singult.core.Unify;
singult.core.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.instance_QMARK_.call(null, singult.core.Unify, x)) {
    var map__16511__16512 = x;
    var map__16511__16513 = cljs.core.seq_QMARK_.call(null, map__16511__16512) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16511__16512) : map__16511__16512;
    var force_update_QMARK___16514 = cljs.core._lookup.call(null, map__16511__16513, "\ufdd0'force-update?", null);
    var exit__16515 = cljs.core._lookup.call(null, map__16511__16513, "\ufdd0'exit", null);
    var update__16516 = cljs.core._lookup.call(null, map__16511__16513, "\ufdd0'update", null);
    var enter__16517 = cljs.core._lookup.call(null, map__16511__16513, "\ufdd0'enter", null);
    var key_fn__16518 = cljs.core._lookup.call(null, map__16511__16513, "\ufdd0'key-fn", null);
    var mapping__16519 = cljs.core._lookup.call(null, map__16511__16513, "\ufdd0'mapping", null);
    var data__16520 = cljs.core._lookup.call(null, map__16511__16513, "\ufdd0'data", null);
    var data_arr__16528 = function() {
      var a__16521 = [];
      var G__16522__16523 = cljs.core.seq.call(null, data__16520);
      if(G__16522__16523) {
        var d__16524 = cljs.core.first.call(null, G__16522__16523);
        var G__16522__16525 = G__16522__16523;
        while(true) {
          a__16521.push(d__16524);
          var temp__3974__auto____16526 = cljs.core.next.call(null, G__16522__16525);
          if(temp__3974__auto____16526) {
            var G__16522__16527 = temp__3974__auto____16526;
            var G__16564 = cljs.core.first.call(null, G__16522__16527);
            var G__16565 = G__16522__16527;
            d__16524 = G__16564;
            G__16522__16525 = G__16565;
            continue
          }else {
          }
          break
        }
      }else {
      }
      return a__16521
    }();
    return new singult.coffee.Unify(data_arr__16528, function(p1__16432_SHARP_) {
      return clj__GT_js.call(null, mapping__16519.call(null, p1__16432_SHARP_))
    }, key_fn__16518, enter__16517, update__16516, exit__16515, force_update_QMARK___16514)
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        var o__16529 = {};
        var G__16530__16531 = cljs.core.seq.call(null, x);
        if(G__16530__16531) {
          var G__16533__16535 = cljs.core.first.call(null, G__16530__16531);
          var vec__16534__16536 = G__16533__16535;
          var k__16537 = cljs.core.nth.call(null, vec__16534__16536, 0, null);
          var v__16538 = cljs.core.nth.call(null, vec__16534__16536, 1, null);
          var G__16530__16539 = G__16530__16531;
          var G__16533__16540 = G__16533__16535;
          var G__16530__16541 = G__16530__16539;
          while(true) {
            var vec__16542__16543 = G__16533__16540;
            var k__16544 = cljs.core.nth.call(null, vec__16542__16543, 0, null);
            var v__16545 = cljs.core.nth.call(null, vec__16542__16543, 1, null);
            var G__16530__16546 = G__16530__16541;
            var key__16547 = clj__GT_js.call(null, k__16544);
            if(cljs.core.string_QMARK_.call(null, key__16547)) {
            }else {
              throw"Cannot convert; JavaScript map keys must be strings";
            }
            o__16529[key__16547] = clj__GT_js.call(null, v__16545);
            var temp__3974__auto____16548 = cljs.core.next.call(null, G__16530__16546);
            if(temp__3974__auto____16548) {
              var G__16530__16549 = temp__3974__auto____16548;
              var G__16566 = cljs.core.first.call(null, G__16530__16549);
              var G__16567 = G__16530__16549;
              G__16533__16540 = G__16566;
              G__16530__16541 = G__16567;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return o__16529
      }else {
        if(cljs.core.seq_QMARK_.call(null, x)) {
          var a__16550 = [];
          a__16550.push(":*:");
          var G__16551__16552 = cljs.core.seq.call(null, x);
          if(G__16551__16552) {
            var item__16553 = cljs.core.first.call(null, G__16551__16552);
            var G__16551__16554 = G__16551__16552;
            while(true) {
              a__16550.push(clj__GT_js.call(null, item__16553));
              var temp__3974__auto____16555 = cljs.core.next.call(null, G__16551__16554);
              if(temp__3974__auto____16555) {
                var G__16551__16556 = temp__3974__auto____16555;
                var G__16568 = cljs.core.first.call(null, G__16551__16556);
                var G__16569 = G__16551__16556;
                item__16553 = G__16568;
                G__16551__16554 = G__16569;
                continue
              }else {
              }
              break
            }
          }else {
          }
          return a__16550
        }else {
          if(cljs.core.coll_QMARK_.call(null, x)) {
            var a__16557 = [];
            var G__16558__16559 = cljs.core.seq.call(null, x);
            if(G__16558__16559) {
              var item__16560 = cljs.core.first.call(null, G__16558__16559);
              var G__16558__16561 = G__16558__16559;
              while(true) {
                a__16557.push(clj__GT_js.call(null, item__16560));
                var temp__3974__auto____16562 = cljs.core.next.call(null, G__16558__16561);
                if(temp__3974__auto____16562) {
                  var G__16558__16563 = temp__3974__auto____16562;
                  var G__16570 = cljs.core.first.call(null, G__16558__16563);
                  var G__16571 = G__16558__16563;
                  item__16560 = G__16570;
                  G__16558__16561 = G__16571;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return a__16557
          }else {
            if("\ufdd0'else") {
              return x
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
singult.core.node_data = singult.coffee.node_data;
singult.core.attr = function attr($n, m) {
  return singult.coffee.attr.call(null, $n, singult.core.clj__GT_js.call(null, m))
};
singult.core.render = function render(v) {
  return singult.coffee.render.call(null, singult.coffee.canonicalize.call(null, singult.core.clj__GT_js.call(null, v)))
};
singult.core.merge_BANG_ = function merge_BANG_($n, v) {
  if(v == null) {
    return null
  }else {
    return singult.coffee.merge.call(null, $n, singult.coffee.canonicalize.call(null, singult.core.clj__GT_js.call(null, v)))
  }
};
singult.core.unify = function() {
  var unify__delegate = function(data, mapping, p__16572) {
    var map__16581__16582 = p__16572;
    var map__16581__16583 = cljs.core.seq_QMARK_.call(null, map__16581__16582) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16581__16582) : map__16581__16582;
    var force_update_QMARK___16584 = cljs.core._lookup.call(null, map__16581__16583, "\ufdd0'force-update?", null);
    var exit__16585 = cljs.core._lookup.call(null, map__16581__16583, "\ufdd0'exit", null);
    var update__16586 = cljs.core._lookup.call(null, map__16581__16583, "\ufdd0'update", null);
    var enter__16587 = cljs.core._lookup.call(null, map__16581__16583, "\ufdd0'enter", null);
    var key_fn__16588 = cljs.core._lookup.call(null, map__16581__16583, "\ufdd0'key-fn", null);
    return new singult.core.Unify(data, mapping, key_fn__16588, enter__16587, update__16586, exit__16585, force_update_QMARK___16584)
  };
  var unify = function(data, mapping, var_args) {
    var p__16572 = null;
    if(goog.isDef(var_args)) {
      p__16572 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unify__delegate.call(this, data, mapping, p__16572)
  };
  unify.cljs$lang$maxFixedArity = 2;
  unify.cljs$lang$applyTo = function(arglist__16589) {
    var data = cljs.core.first(arglist__16589);
    var mapping = cljs.core.first(cljs.core.next(arglist__16589));
    var p__16572 = cljs.core.rest(cljs.core.next(arglist__16589));
    return unify__delegate(data, mapping, p__16572)
  };
  unify.cljs$lang$arity$variadic = unify__delegate;
  return unify
}();
singult.core.ignore = function ignore() {
  return new singult.coffee.Ignore
};
goog.provide("c2.util");
goog.require("cljs.core");
goog.require("singult.core");
c2.util.clj__GT_js = singult.core.clj__GT_js;
c2.util.__GT_coll = function __GT_coll(x) {
  if(cljs.core.coll_QMARK_.call(null, x)) {
    return x
  }else {
    return cljs.core.PersistentVector.fromArray([x], true)
  }
};
goog.provide("reflex.core");
goog.require("cljs.core");
reflex.core.capture_derefed = function capture_derefed(f) {
  var _BANG_recently_derefed16820__16821 = reflex.core._BANG_recently_derefed;
  try {
    reflex.core._BANG_recently_derefed = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY, "\ufdd0'meta", cljs.core.ObjMap.fromObject(["\ufdd0'no-deref-monitor"], {"\ufdd0'no-deref-monitor":true}));
    var res__16823 = f.call(null);
    return cljs.core.ObjMap.fromObject(["\ufdd0'res", "\ufdd0'derefed"], {"\ufdd0'res":res__16823, "\ufdd0'derefed":cljs.core.deref.call(null, reflex.core._BANG_recently_derefed)})
  }finally {
    reflex.core._BANG_recently_derefed = _BANG_recently_derefed16820__16821
  }
};
reflex.core.notify_deref_watcher_BANG_ = function notify_deref_watcher_BANG_(derefable) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____16825 = reflex.core._BANG_recently_derefed;
    if(cljs.core.truth_(and__3822__auto____16825)) {
      return cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'no-deref-monitor")).call(null, cljs.core.meta.call(null, derefable)))
    }else {
      return and__3822__auto____16825
    }
  }())) {
    return cljs.core.swap_BANG_.call(null, reflex.core._BANG_recently_derefed, function(p1__16815_SHARP_) {
      return cljs.core.conj.call(null, p1__16815_SHARP_, derefable)
    })
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IDeref$ = true;
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  reflex.core.notify_deref_watcher_BANG_.call(null, this$);
  return this$.state
};
reflex.core.IDisposable = {};
reflex.core.dispose_BANG_ = function dispose_BANG_(this$) {
  if(function() {
    var and__3822__auto____16830 = this$;
    if(and__3822__auto____16830) {
      return this$.reflex$core$IDisposable$dispose_BANG_$arity$1
    }else {
      return and__3822__auto____16830
    }
  }()) {
    return this$.reflex$core$IDisposable$dispose_BANG_$arity$1(this$)
  }else {
    var x__2264__auto____16831 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____16832 = reflex.core.dispose_BANG_[goog.typeOf(x__2264__auto____16831)];
      if(or__3824__auto____16832) {
        return or__3824__auto____16832
      }else {
        var or__3824__auto____16833 = reflex.core.dispose_BANG_["_"];
        if(or__3824__auto____16833) {
          return or__3824__auto____16833
        }else {
          throw cljs.core.missing_protocol.call(null, "IDisposable.dispose!", this$);
        }
      }
    }().call(null, this$)
  }
};
reflex.core.ComputedObservable = function(state, dirty_QMARK_, f, key, parent_watchables, watches, __meta, __extmap) {
  this.state = state;
  this.dirty_QMARK_ = dirty_QMARK_;
  this.f = f;
  this.key = key;
  this.parent_watchables = parent_watchables;
  this.watches = watches;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2766571274;
  if(arguments.length > 6) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__16837 = this;
  var h__2093__auto____16838 = this__16837.__hash;
  if(!(h__2093__auto____16838 == null)) {
    return h__2093__auto____16838
  }else {
    var h__2093__auto____16839 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__16837.__hash = h__2093__auto____16839;
    return h__2093__auto____16839
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__16840 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
reflex.core.ComputedObservable.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k16835, else__2227__auto__) {
  var this__16841 = this;
  if(k16835 === "\ufdd0'state") {
    return this__16841.state
  }else {
    if(k16835 === "\ufdd0'dirty?") {
      return this__16841.dirty_QMARK_
    }else {
      if(k16835 === "\ufdd0'f") {
        return this__16841.f
      }else {
        if(k16835 === "\ufdd0'key") {
          return this__16841.key
        }else {
          if(k16835 === "\ufdd0'parent-watchables") {
            return this__16841.parent_watchables
          }else {
            if(k16835 === "\ufdd0'watches") {
              return this__16841.watches
            }else {
              if("\ufdd0'else") {
                return cljs.core._lookup.call(null, this__16841.__extmap, k16835, else__2227__auto__)
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__16834) {
  var this__16842 = this;
  var pred__16843__16846 = cljs.core.identical_QMARK_;
  var expr__16844__16847 = k__2232__auto__;
  if(pred__16843__16846.call(null, "\ufdd0'state", expr__16844__16847)) {
    return new reflex.core.ComputedObservable(G__16834, this__16842.dirty_QMARK_, this__16842.f, this__16842.key, this__16842.parent_watchables, this__16842.watches, this__16842.__meta, this__16842.__extmap, null)
  }else {
    if(pred__16843__16846.call(null, "\ufdd0'dirty?", expr__16844__16847)) {
      return new reflex.core.ComputedObservable(this__16842.state, G__16834, this__16842.f, this__16842.key, this__16842.parent_watchables, this__16842.watches, this__16842.__meta, this__16842.__extmap, null)
    }else {
      if(pred__16843__16846.call(null, "\ufdd0'f", expr__16844__16847)) {
        return new reflex.core.ComputedObservable(this__16842.state, this__16842.dirty_QMARK_, G__16834, this__16842.key, this__16842.parent_watchables, this__16842.watches, this__16842.__meta, this__16842.__extmap, null)
      }else {
        if(pred__16843__16846.call(null, "\ufdd0'key", expr__16844__16847)) {
          return new reflex.core.ComputedObservable(this__16842.state, this__16842.dirty_QMARK_, this__16842.f, G__16834, this__16842.parent_watchables, this__16842.watches, this__16842.__meta, this__16842.__extmap, null)
        }else {
          if(pred__16843__16846.call(null, "\ufdd0'parent-watchables", expr__16844__16847)) {
            return new reflex.core.ComputedObservable(this__16842.state, this__16842.dirty_QMARK_, this__16842.f, this__16842.key, G__16834, this__16842.watches, this__16842.__meta, this__16842.__extmap, null)
          }else {
            if(pred__16843__16846.call(null, "\ufdd0'watches", expr__16844__16847)) {
              return new reflex.core.ComputedObservable(this__16842.state, this__16842.dirty_QMARK_, this__16842.f, this__16842.key, this__16842.parent_watchables, G__16834, this__16842.__meta, this__16842.__extmap, null)
            }else {
              return new reflex.core.ComputedObservable(this__16842.state, this__16842.dirty_QMARK_, this__16842.f, this__16842.key, this__16842.parent_watchables, this__16842.watches, this__16842.__meta, cljs.core.assoc.call(null, this__16842.__extmap, k__2232__auto__, G__16834), null)
            }
          }
        }
      }
    }
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var this__16848 = this;
  reflex.core.notify_deref_watcher_BANG_.call(null, this$);
  if(cljs.core.not.call(null, this__16848.dirty_QMARK_)) {
    return this$.state
  }else {
    var map__16849__16850 = reflex.core.capture_derefed.call(null, this__16848.f);
    var map__16849__16851 = cljs.core.seq_QMARK_.call(null, map__16849__16850) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16849__16850) : map__16849__16850;
    var derefed__16852 = cljs.core._lookup.call(null, map__16849__16851, "\ufdd0'derefed", null);
    var res__16853 = cljs.core._lookup.call(null, map__16849__16851, "\ufdd0'res", null);
    var G__16854__16855 = cljs.core.seq.call(null, this__16848.parent_watchables);
    if(G__16854__16855) {
      var w__16856 = cljs.core.first.call(null, G__16854__16855);
      var G__16854__16857 = G__16854__16855;
      while(true) {
        cljs.core.remove_watch.call(null, w__16856, this__16848.key);
        var temp__3974__auto____16858 = cljs.core.next.call(null, G__16854__16857);
        if(temp__3974__auto____16858) {
          var G__16854__16859 = temp__3974__auto____16858;
          var G__16907 = cljs.core.first.call(null, G__16854__16859);
          var G__16908 = G__16854__16859;
          w__16856 = G__16907;
          G__16854__16857 = G__16908;
          continue
        }else {
        }
        break
      }
    }else {
    }
    this$.parent_watchables = derefed__16852;
    var G__16860__16861 = cljs.core.seq.call(null, derefed__16852);
    if(G__16860__16861) {
      var w__16862 = cljs.core.first.call(null, G__16860__16861);
      var G__16860__16863 = G__16860__16861;
      while(true) {
        cljs.core.add_watch.call(null, w__16862, this__16848.key, function(w__16862, G__16860__16863) {
          return function() {
            this$.dirty_QMARK_ = true;
            return cljs.core._notify_watches.call(null, this$, null, null)
          }
        }(w__16862, G__16860__16863));
        var temp__3974__auto____16864 = cljs.core.next.call(null, G__16860__16863);
        if(temp__3974__auto____16864) {
          var G__16860__16865 = temp__3974__auto____16864;
          var G__16909 = cljs.core.first.call(null, G__16860__16865);
          var G__16910 = G__16860__16865;
          w__16862 = G__16909;
          G__16860__16863 = G__16910;
          continue
        }else {
        }
        break
      }
    }else {
    }
    this$.state = res__16853;
    this$.dirty_QMARK_ = false;
    return res__16853
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__16866 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, _16868, _) {
  var this__16867 = this;
  var G__16869__16870 = cljs.core.seq.call(null, this__16867.watches);
  if(G__16869__16870) {
    var G__16872__16874 = cljs.core.first.call(null, G__16869__16870);
    var vec__16873__16875 = G__16872__16874;
    var key__16876 = cljs.core.nth.call(null, vec__16873__16875, 0, null);
    var wf__16877 = cljs.core.nth.call(null, vec__16873__16875, 1, null);
    var G__16869__16878 = G__16869__16870;
    var G__16872__16879 = G__16872__16874;
    var G__16869__16880 = G__16869__16878;
    while(true) {
      var vec__16881__16882 = G__16872__16879;
      var key__16883 = cljs.core.nth.call(null, vec__16881__16882, 0, null);
      var wf__16884 = cljs.core.nth.call(null, vec__16881__16882, 1, null);
      var G__16869__16885 = G__16869__16880;
      wf__16884.call(null);
      var temp__3974__auto____16886 = cljs.core.next.call(null, G__16869__16885);
      if(temp__3974__auto____16886) {
        var G__16869__16887 = temp__3974__auto____16886;
        var G__16911 = cljs.core.first.call(null, G__16869__16887);
        var G__16912 = G__16869__16887;
        G__16872__16879 = G__16911;
        G__16869__16880 = G__16912;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, wf) {
  var this__16888 = this;
  return this$.watches = cljs.core.assoc.call(null, this__16888.watches, key, wf)
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__16889 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__16889.watches, key)
};
reflex.core.ComputedObservable.prototype.reflex$core$IDisposable$ = true;
reflex.core.ComputedObservable.prototype.reflex$core$IDisposable$dispose_BANG_$arity$1 = function(this$) {
  var this__16890 = this;
  var G__16891__16892 = cljs.core.seq.call(null, this__16890.parent_watchables);
  if(G__16891__16892) {
    var w__16893 = cljs.core.first.call(null, G__16891__16892);
    var G__16891__16894 = G__16891__16892;
    while(true) {
      cljs.core.remove_watch.call(null, w__16893, this__16890.key);
      var temp__3974__auto____16895 = cljs.core.next.call(null, G__16891__16894);
      if(temp__3974__auto____16895) {
        var G__16891__16896 = temp__3974__auto____16895;
        var G__16913 = cljs.core.first.call(null, G__16891__16896);
        var G__16914 = G__16891__16896;
        w__16893 = G__16913;
        G__16891__16894 = G__16914;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return this$.watches = null
};
reflex.core.ComputedObservable.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__16897 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'state", this__16897.state), cljs.core.vector.call(null, "\ufdd0'dirty?", this__16897.dirty_QMARK_), cljs.core.vector.call(null, "\ufdd0'f", this__16897.f), cljs.core.vector.call(null, "\ufdd0'key", this__16897.key), cljs.core.vector.call(null, "\ufdd0'parent-watchables", this__16897.parent_watchables), cljs.core.vector.call(null, "\ufdd0'watches", this__16897.watches)], 
  true), this__16897.__extmap))
};
reflex.core.ComputedObservable.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__16898 = this;
  var pr_pair__2240__auto____16899 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____16899, [cljs.core.str("#"), cljs.core.str("ComputedObservable"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'state", this__16898.state), cljs.core.vector.call(null, "\ufdd0'dirty?", this__16898.dirty_QMARK_), cljs.core.vector.call(null, "\ufdd0'f", this__16898.f), cljs.core.vector.call(null, "\ufdd0'key", this__16898.key), 
  cljs.core.vector.call(null, "\ufdd0'parent-watchables", this__16898.parent_watchables), cljs.core.vector.call(null, "\ufdd0'watches", this__16898.watches)], true), this__16898.__extmap))
};
reflex.core.ComputedObservable.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__16900 = this;
  return 6 + cljs.core.count.call(null, this__16900.__extmap)
};
reflex.core.ComputedObservable.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__16901 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____16902 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____16902)) {
      var and__3822__auto____16903 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____16903) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____16903
      }
    }else {
      return and__3822__auto____16902
    }
  }())) {
    return true
  }else {
    return false
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__16834) {
  var this__16904 = this;
  return new reflex.core.ComputedObservable(this__16904.state, this__16904.dirty_QMARK_, this__16904.f, this__16904.key, this__16904.parent_watchables, this__16904.watches, G__16834, this__16904.__extmap, this__16904.__hash)
};
reflex.core.ComputedObservable.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__16905 = this;
  return this__16905.__meta
};
reflex.core.ComputedObservable.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__16906 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'dirty?", "\ufdd0'state", "\ufdd0'key", "\ufdd0'f", "\ufdd0'watches", "\ufdd0'parent-watchables"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__16906.__meta), k__2234__auto__)
  }else {
    return new reflex.core.ComputedObservable(this__16906.state, this__16906.dirty_QMARK_, this__16906.f, this__16906.key, this__16906.parent_watchables, this__16906.watches, this__16906.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__16906.__extmap, k__2234__auto__)), null)
  }
};
reflex.core.ComputedObservable.cljs$lang$type = true;
reflex.core.ComputedObservable.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "reflex.core/ComputedObservable")
};
reflex.core.__GT_ComputedObservable = function __GT_ComputedObservable(state, dirty_QMARK_, f, key, parent_watchables, watches) {
  return new reflex.core.ComputedObservable(state, dirty_QMARK_, f, key, parent_watchables, watches)
};
reflex.core.map__GT_ComputedObservable = function map__GT_ComputedObservable(G__16836) {
  return new reflex.core.ComputedObservable((new cljs.core.Keyword("\ufdd0'state")).call(null, G__16836), (new cljs.core.Keyword("\ufdd0'dirty?")).call(null, G__16836), (new cljs.core.Keyword("\ufdd0'f")).call(null, G__16836), (new cljs.core.Keyword("\ufdd0'key")).call(null, G__16836), (new cljs.core.Keyword("\ufdd0'parent-watchables")).call(null, G__16836), (new cljs.core.Keyword("\ufdd0'watches")).call(null, G__16836), null, cljs.core.dissoc.call(null, G__16836, "\ufdd0'state", "\ufdd0'dirty?", 
  "\ufdd0'f", "\ufdd0'key", "\ufdd0'parent-watchables", "\ufdd0'watches"))
};
reflex.core.ComputedObservable;
reflex.core.ComputedObservable.prototype.cljs$core$IHash$ = true;
reflex.core.ComputedObservable.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  return this$.key
};
goog.provide("dubstep.pubsub");
goog.require("cljs.core");
dubstep.pubsub._STAR__BANG_channel_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max__17327 = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max__17327, cljs.core.remove.call(null, function(p1__17325_SHARP_) {
    return max__17327 === p1__17325_SHARP_
  }, coll))
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var union__1 = function(s1) {
    return s1
  };
  var union__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2)
    }
  };
  var union__3 = function() {
    var G__17331__delegate = function(s1, s2, sets) {
      var bubbled_sets__17330 = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets__17330), cljs.core.rest.call(null, bubbled_sets__17330))
    };
    var G__17331 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__17331__delegate.call(this, s1, s2, sets)
    };
    G__17331.cljs$lang$maxFixedArity = 2;
    G__17331.cljs$lang$applyTo = function(arglist__17332) {
      var s1 = cljs.core.first(arglist__17332);
      var s2 = cljs.core.first(cljs.core.next(arglist__17332));
      var sets = cljs.core.rest(cljs.core.next(arglist__17332));
      return G__17331__delegate(s1, s2, sets)
    };
    G__17331.cljs$lang$arity$variadic = G__17331__delegate;
    return G__17331
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$lang$arity$0 = union__0;
  union.cljs$lang$arity$1 = union__1;
  union.cljs$lang$arity$2 = union__2;
  union.cljs$lang$arity$variadic = union__3.cljs$lang$arity$variadic;
  return union
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1
  };
  var intersection__2 = function(s1, s2) {
    while(true) {
      if(cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__17335 = s2;
        var G__17336 = s1;
        s1 = G__17335;
        s2 = G__17336;
        continue
      }else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if(cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result
            }else {
              return cljs.core.disj.call(null, result, item)
            }
          }
        }(s1, s2), s1, s1)
      }
      break
    }
  };
  var intersection__3 = function() {
    var G__17337__delegate = function(s1, s2, sets) {
      var bubbled_sets__17334 = clojure.set.bubble_max_key.call(null, function(p1__17328_SHARP_) {
        return-cljs.core.count.call(null, p1__17328_SHARP_)
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets__17334), cljs.core.rest.call(null, bubbled_sets__17334))
    };
    var G__17337 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__17337__delegate.call(this, s1, s2, sets)
    };
    G__17337.cljs$lang$maxFixedArity = 2;
    G__17337.cljs$lang$applyTo = function(arglist__17338) {
      var s1 = cljs.core.first(arglist__17338);
      var s2 = cljs.core.first(cljs.core.next(arglist__17338));
      var sets = cljs.core.rest(cljs.core.next(arglist__17338));
      return G__17337__delegate(s1, s2, sets)
    };
    G__17337.cljs$lang$arity$variadic = G__17337__delegate;
    return G__17337
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$lang$arity$1 = intersection__1;
  intersection.cljs$lang$arity$2 = intersection__2;
  intersection.cljs$lang$arity$variadic = intersection__3.cljs$lang$arity$variadic;
  return intersection
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1
  };
  var difference__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if(cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item)
        }else {
          return result
        }
      }, s1, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2)
    }
  };
  var difference__3 = function() {
    var G__17339__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2))
    };
    var G__17339 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__17339__delegate.call(this, s1, s2, sets)
    };
    G__17339.cljs$lang$maxFixedArity = 2;
    G__17339.cljs$lang$applyTo = function(arglist__17340) {
      var s1 = cljs.core.first(arglist__17340);
      var s2 = cljs.core.first(cljs.core.next(arglist__17340));
      var sets = cljs.core.rest(cljs.core.next(arglist__17340));
      return G__17339__delegate(s1, s2, sets)
    };
    G__17339.cljs$lang$arity$variadic = G__17339__delegate;
    return G__17339
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$lang$arity$1 = difference__1;
  difference.cljs$lang$arity$2 = difference__2;
  difference.cljs$lang$arity$variadic = difference__3.cljs$lang$arity$variadic;
  return difference
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if(cljs.core.truth_(pred.call(null, k))) {
      return s
    }else {
      return cljs.core.disj.call(null, s, k)
    }
  }, xset, xset)
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__17341_SHARP_) {
    return cljs.core.select_keys.call(null, p1__17341_SHARP_, ks)
  }, xrel))
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__17349) {
    var vec__17350__17351 = p__17349;
    var old__17352 = cljs.core.nth.call(null, vec__17350__17351, 0, null);
    var new__17353 = cljs.core.nth.call(null, vec__17350__17351, 1, null);
    if(function() {
      var and__3822__auto____17354 = cljs.core.not_EQ_.call(null, old__17352, new__17353);
      if(and__3822__auto____17354) {
        return cljs.core.contains_QMARK_.call(null, m, old__17352)
      }else {
        return and__3822__auto____17354
      }
    }()) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, m, new__17353, cljs.core._lookup.call(null, m, old__17352, null)), old__17352)
    }else {
      return m
    }
  }, map, kmap)
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__17342_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__17342_SHARP_, kmap)
  }, xrel))
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik__17356 = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik__17356, cljs.core.conj.call(null, cljs.core._lookup.call(null, m, ik__17356, cljs.core.PersistentHashSet.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, xrel)
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m, p__17366) {
    var vec__17367__17368 = p__17366;
    var k__17369 = cljs.core.nth.call(null, vec__17367__17368, 0, null);
    var v__17370 = cljs.core.nth.call(null, vec__17367__17368, 1, null);
    return cljs.core.assoc.call(null, m, v__17370, k__17369)
  }, cljs.core.ObjMap.EMPTY, m)
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if(function() {
      var and__3822__auto____17387 = cljs.core.seq.call(null, xrel);
      if(and__3822__auto____17387) {
        return cljs.core.seq.call(null, yrel)
      }else {
        return and__3822__auto____17387
      }
    }()) {
      var ks__17389 = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__17388__17390 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel], true) : cljs.core.PersistentVector.fromArray([yrel, xrel], true);
      var r__17391 = cljs.core.nth.call(null, vec__17388__17390, 0, null);
      var s__17392 = cljs.core.nth.call(null, vec__17388__17390, 1, null);
      var idx__17393 = clojure.set.index.call(null, r__17391, ks__17389);
      return cljs.core.reduce.call(null, function(ret, x) {
        var found__17394 = idx__17393.call(null, cljs.core.select_keys.call(null, x, ks__17389));
        if(cljs.core.truth_(found__17394)) {
          return cljs.core.reduce.call(null, function(p1__17357_SHARP_, p2__17358_SHARP_) {
            return cljs.core.conj.call(null, p1__17357_SHARP_, cljs.core.merge.call(null, p2__17358_SHARP_, x))
          }, ret, found__17394)
        }else {
          return ret
        }
      }, cljs.core.PersistentHashSet.EMPTY, s__17392)
    }else {
      return cljs.core.PersistentHashSet.EMPTY
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__17395__17396 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel, clojure.set.map_invert.call(null, km)], true) : cljs.core.PersistentVector.fromArray([yrel, xrel, km], true);
    var r__17397 = cljs.core.nth.call(null, vec__17395__17396, 0, null);
    var s__17398 = cljs.core.nth.call(null, vec__17395__17396, 1, null);
    var k__17399 = cljs.core.nth.call(null, vec__17395__17396, 2, null);
    var idx__17400 = clojure.set.index.call(null, r__17397, cljs.core.vals.call(null, k__17399));
    return cljs.core.reduce.call(null, function(ret, x) {
      var found__17401 = idx__17400.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k__17399)), k__17399));
      if(cljs.core.truth_(found__17401)) {
        return cljs.core.reduce.call(null, function(p1__17359_SHARP_, p2__17360_SHARP_) {
          return cljs.core.conj.call(null, p1__17359_SHARP_, cljs.core.merge.call(null, p2__17360_SHARP_, x))
        }, ret, found__17401)
      }else {
        return ret
      }
    }, cljs.core.PersistentHashSet.EMPTY, s__17398)
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$2 = join__2;
  join.cljs$lang$arity$3 = join__3;
  return join
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  var and__3822__auto____17404 = cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2);
  if(and__3822__auto____17404) {
    return cljs.core.every_QMARK_.call(null, function(p1__17371_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set2, p1__17371_SHARP_)
    }, set1)
  }else {
    return and__3822__auto____17404
  }
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  var and__3822__auto____17406 = cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2);
  if(and__3822__auto____17406) {
    return cljs.core.every_QMARK_.call(null, function(p1__17402_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set1, p1__17402_SHARP_)
    }, set2)
  }else {
    return and__3822__auto____17406
  }
};
goog.provide("vcfvis.core");
goog.require("cljs.core");
goog.require("c2.util");
goog.require("dubstep.pubsub");
goog.require("reflex.core");
goog.require("clojure.set");
goog.require("domina");
goog.require("c2.util");
vcfvis.core._BANG_context = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
vcfvis.core._BANG_vcfs = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
vcfvis.core.check_new_vcfs_BANG_ = function check_new_vcfs_BANG_(new_vcfs) {
  if(cljs.core.seq.call(null, new_vcfs)) {
    cljs.core.reset_BANG_.call(null, vcfvis.core._BANG_vcfs, cljs.core.vec.call(null, cljs.core.filter.call(null, function(p1__11039_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, new_vcfs, (new cljs.core.Keyword("\ufdd0'file-url")).call(null, p1__11039_SHARP_))
    }, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs))));
    return clojure.set.difference.call(null, new_vcfs, cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.map.call(null, "\ufdd0'file-url", cljs.core.deref.call(null, vcfvis.core._BANG_vcfs))))
  }else {
    return cljs.core.reset_BANG_.call(null, vcfvis.core._BANG_vcfs, cljs.core.PersistentVector.EMPTY)
  }
};
vcfvis.core._BANG_available_files = function() {
  var co__6213__auto____11040 = new reflex.core.ComputedObservable(null, true, function() {
    return cljs.core._lookup.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_context), "\ufdd0'files", cljs.core.PersistentVector.EMPTY)
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6213__auto____11040);
  return co__6213__auto____11040
}();
vcfvis.core.intersection = function() {
  var intersection = null;
  var intersection__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var intersection__1 = function() {
    var G__11041__delegate = function(args) {
      return cljs.core.apply.call(null, clojure.set.intersection, args)
    };
    var G__11041 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__11041__delegate.call(this, args)
    };
    G__11041.cljs$lang$maxFixedArity = 0;
    G__11041.cljs$lang$applyTo = function(arglist__11042) {
      var args = cljs.core.seq(arglist__11042);
      return G__11041__delegate(args)
    };
    G__11041.cljs$lang$arity$variadic = G__11041__delegate;
    return G__11041
  }();
  intersection = function(var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 0:
        return intersection__0.call(this);
      default:
        return intersection__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  intersection.cljs$lang$maxFixedArity = 0;
  intersection.cljs$lang$applyTo = intersection__1.cljs$lang$applyTo;
  intersection.cljs$lang$arity$0 = intersection__0;
  intersection.cljs$lang$arity$variadic = intersection__1.cljs$lang$arity$variadic;
  return intersection
}();
vcfvis.core._BANG_shared_metrics = function() {
  var co__6213__auto____11043 = new reflex.core.ComputedObservable(null, true, function() {
    return cljs.core.reduce.call(null, vcfvis.core.intersection, cljs.core.map.call(null, "\ufdd0'available-metrics", cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)))
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6213__auto____11043);
  return co__6213__auto____11043
}();
vcfvis.core._BANG_metric = cljs.core.atom.call(null, null);
vcfvis.core.select_metric_BANG_ = function select_metric_BANG_(metric) {
  return cljs.core.reset_BANG_.call(null, vcfvis.core._BANG_metric, metric)
};
var co__6219__auto____11046 = function() {
  var co__6213__auto____11045 = new reflex.core.ComputedObservable(null, true, function() {
    var shared__11044 = cljs.core.deref.call(null, vcfvis.core._BANG_shared_metrics);
    if(cljs.core.seq.call(null, shared__11044)) {
      if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([cljs.core.deref.call(null, vcfvis.core._BANG_metric)]), shared__11044))) {
        return null
      }else {
        return vcfvis.core.select_metric_BANG_.call(null, cljs.core.first.call(null, shared__11044))
      }
    }else {
      return null
    }
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6213__auto____11045);
  return co__6213__auto____11045
}();
cljs.core.add_watch.call(null, co__6219__auto____11046, "\ufdd0'reflex-constraint", function() {
  var shared__11047 = cljs.core.deref.call(null, vcfvis.core._BANG_shared_metrics);
  if(cljs.core.seq.call(null, shared__11047)) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([cljs.core.deref.call(null, vcfvis.core._BANG_metric)]), shared__11047))) {
      return null
    }else {
      return vcfvis.core.select_metric_BANG_.call(null, cljs.core.first.call(null, shared__11047))
    }
  }else {
    return null
  }
});
co__6219__auto____11046;
vcfvis.core._BANG_filters = function() {
  var co__6213__auto____11050 = new reflex.core.ComputedObservable(null, true, function() {
    return cljs.core.reduce.call(null, function(filters, m) {
      var temp__3971__auto____11048 = cljs.core.deref.call(null, m.call(null, "\ufdd0'!filter-extent"));
      if(cljs.core.truth_(temp__3971__auto____11048)) {
        var extent__11049 = temp__3971__auto____11048;
        return cljs.core.assoc.call(null, filters, m.call(null, "\ufdd0'id"), extent__11049)
      }else {
        return filters
      }
    }, cljs.core.ObjMap.EMPTY, cljs.core.deref.call(null, vcfvis.core._BANG_shared_metrics))
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6213__auto____11050);
  return co__6213__auto____11050
}();
vcfvis.core._BANG_visible_metrics = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY, "\ufdd0'validator", function(ms) {
  if(cljs.core.contains_QMARK_.call(null, ms, cljs.core.deref.call(null, vcfvis.core._BANG_metric))) {
    throw new Error("Selected metric doesn't need a mini-histogram.");
  }else {
    return true
  }
});
var co__6219__auto____11053 = function() {
  var co__6213__auto____11052 = new reflex.core.ComputedObservable(null, true, function() {
    var m__11051 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
    if(cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_visible_metrics), m__11051)) {
      return cljs.core.swap_BANG_.call(null, vcfvis.core._BANG_visible_metrics, cljs.core.disj, m__11051)
    }else {
      return null
    }
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6213__auto____11052);
  return co__6213__auto____11052
}();
cljs.core.add_watch.call(null, co__6219__auto____11053, "\ufdd0'reflex-constraint", function() {
  var m__11054 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
  if(cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_visible_metrics), m__11054)) {
    return cljs.core.swap_BANG_.call(null, vcfvis.core._BANG_visible_metrics, cljs.core.disj, m__11054)
  }else {
    return null
  }
});
co__6219__auto____11053;
vcfvis.core.visible_metric_QMARK_ = function visible_metric_QMARK_(m) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_visible_metrics), m)
};
vcfvis.core.toggle_visible_metric_BANG_ = function toggle_visible_metric_BANG_(m) {
  return cljs.core.swap_BANG_.call(null, vcfvis.core._BANG_visible_metrics, cljs.core.truth_(vcfvis.core.visible_metric_QMARK_.call(null, m)) ? cljs.core.disj : cljs.core.conj, m)
};
vcfvis.core.update_metric_BANG_ = function update_metric_BANG_(m, extent) {
  var vec__11072__11073 = m.call(null, "\ufdd0'range");
  var min__11074 = cljs.core.nth.call(null, vec__11072__11073, 0, null);
  var max__11075 = cljs.core.nth.call(null, vec__11072__11073, 1, null);
  var extent__11076 = cljs.core.apply.call(null, cljs.core._, extent) === 0 ? null : cljs.core._EQ_.call(null, extent, cljs.core.PersistentVector.fromArray([min__11074, max__11075], true)) ? cljs.core.PersistentVector.fromArray([-Infinity, Infinity], true) : cljs.core._EQ_.call(null, cljs.core.first.call(null, extent), min__11074) ? cljs.core.PersistentVector.fromArray([-Infinity, cljs.core.second.call(null, extent)], true) : cljs.core._EQ_.call(null, cljs.core.second.call(null, extent), max__11075) ? 
  cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, extent), Infinity], true) : "\ufdd0'else" ? extent : null;
  var G__11077__11078 = cljs.core.seq.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs));
  if(G__11077__11078) {
    var vcf__11079 = cljs.core.first.call(null, G__11077__11078);
    var G__11077__11080 = G__11077__11078;
    while(true) {
      cljs.core.get_in.call(null, vcf__11079, cljs.core.PersistentVector.fromArray(["\ufdd0'cf", m.call(null, "\ufdd0'id"), "\ufdd0'dimension"], true)).filter(c2.util.clj__GT_js.call(null, extent__11076));
      var temp__3974__auto____11081 = cljs.core.next.call(null, G__11077__11080);
      if(temp__3974__auto____11081) {
        var G__11077__11082 = temp__3974__auto____11081;
        var G__11089 = cljs.core.first.call(null, G__11077__11082);
        var G__11090 = G__11077__11082;
        vcf__11079 = G__11089;
        G__11077__11080 = G__11090;
        continue
      }else {
      }
      break
    }
  }else {
  }
  cljs.core.reset_BANG_.call(null, m.call(null, "\ufdd0'!filter-extent"), extent__11076);
  var G__11083__11084 = cljs.core.seq.call(null, cljs.core.deref.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_));
  if(G__11083__11084) {
    var s__9347__auto____11085 = cljs.core.first.call(null, G__11083__11084);
    var G__11083__11086 = G__11083__11084;
    while(true) {
      s__9347__auto____11085.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'filter-updated"], {"\ufdd0'filter-updated":m}));
      var temp__3974__auto____11087 = cljs.core.next.call(null, G__11083__11086);
      if(temp__3974__auto____11087) {
        var G__11083__11088 = temp__3974__auto____11087;
        var G__11091 = cljs.core.first.call(null, G__11083__11088);
        var G__11092 = G__11083__11088;
        s__9347__auto____11085 = G__11091;
        G__11083__11086 = G__11092;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.swap_BANG_.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_, cljs.core.conj, function(m__9353__auto__) {
  try {
    if(function() {
      var G__11098__11099 = m__9353__auto__;
      if(G__11098__11099) {
        if(function() {
          var or__3824__auto____11100 = G__11098__11099.cljs$lang$protocol_mask$partition0$ & 256;
          if(or__3824__auto____11100) {
            return or__3824__auto____11100
          }else {
            return G__11098__11099.cljs$core$ILookup$
          }
        }()) {
          return true
        }else {
          if(!G__11098__11099.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__11098__11099)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__11098__11099)
      }
    }()) {
      var extent__11102 = function() {
        var val__6603__auto____11101 = cljs.core._lookup.call(null, m__9353__auto__, "\ufdd0'extent", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6603__auto____11101, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6603__auto____11101
        }
      }();
      var metric__11104 = function() {
        var val__6603__auto____11103 = cljs.core._lookup.call(null, m__9353__auto__, "\ufdd0'metric-brushed", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6603__auto____11103, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6603__auto____11103
        }
      }();
      return vcfvis.core.update_metric_BANG_.call(null, metric__11104, extent__11102)
    }else {
      if("\ufdd0'else") {
        throw 0;
      }else {
        return null
      }
    }
  }catch(e__7036__auto__) {
    if(e__7036__auto__ === 0) {
      var G__11093__11097 = m__9353__auto__;
      return null
    }else {
      throw e__7036__auto__;
    }
  }
});
goog.provide("crate.util");
goog.require("cljs.core");
goog.require("clojure.string");
crate.util._STAR_base_url_STAR_ = null;
crate.util.as_str = function() {
  var as_str = null;
  var as_str__0 = function() {
    return""
  };
  var as_str__1 = function(x) {
    if(function() {
      var or__3824__auto____19304 = cljs.core.symbol_QMARK_.call(null, x);
      if(or__3824__auto____19304) {
        return or__3824__auto____19304
      }else {
        return cljs.core.keyword_QMARK_.call(null, x)
      }
    }()) {
      return cljs.core.name.call(null, x)
    }else {
      return[cljs.core.str(x)].join("")
    }
  };
  var as_str__2 = function() {
    var G__19305__delegate = function(x, xs) {
      return function(s, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__19306 = [cljs.core.str(s), cljs.core.str(as_str.call(null, cljs.core.first.call(null, more)))].join("");
            var G__19307 = cljs.core.next.call(null, more);
            s = G__19306;
            more = G__19307;
            continue
          }else {
            return s
          }
          break
        }
      }.call(null, as_str.call(null, x), xs)
    };
    var G__19305 = function(x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__19305__delegate.call(this, x, xs)
    };
    G__19305.cljs$lang$maxFixedArity = 1;
    G__19305.cljs$lang$applyTo = function(arglist__19308) {
      var x = cljs.core.first(arglist__19308);
      var xs = cljs.core.rest(arglist__19308);
      return G__19305__delegate(x, xs)
    };
    G__19305.cljs$lang$arity$variadic = G__19305__delegate;
    return G__19305
  }();
  as_str = function(x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return as_str__0.call(this);
      case 1:
        return as_str__1.call(this, x);
      default:
        return as_str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  as_str.cljs$lang$maxFixedArity = 1;
  as_str.cljs$lang$applyTo = as_str__2.cljs$lang$applyTo;
  as_str.cljs$lang$arity$0 = as_str__0;
  as_str.cljs$lang$arity$1 = as_str__1;
  as_str.cljs$lang$arity$variadic = as_str__2.cljs$lang$arity$variadic;
  return as_str
}();
crate.util.escape_html = function escape_html(text) {
  return clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, crate.util.as_str.call(null, text), "&", "&amp;"), "<", "&lt;"), ">", "&gt;"), '"', "&quot;")
};
crate.util.to_uri = function to_uri(uri) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, /^\w+:.*/, uri))) {
    return uri
  }else {
    return[cljs.core.str(crate.util._STAR_base_url_STAR_), cljs.core.str(uri)].join("")
  }
};
crate.util.url_encode_component = function url_encode_component(s) {
  return encodeURIComponent(crate.util.as_str.call(null, s))
};
crate.util.url_encode = function url_encode(params) {
  return clojure.string.join.call(null, "&", function() {
    var iter__2363__auto____19334 = function iter__19322(s__19323) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__19323__19329 = s__19323;
        while(true) {
          if(cljs.core.seq.call(null, s__19323__19329)) {
            var vec__19330__19331 = cljs.core.first.call(null, s__19323__19329);
            var k__19332 = cljs.core.nth.call(null, vec__19330__19331, 0, null);
            var v__19333 = cljs.core.nth.call(null, vec__19330__19331, 1, null);
            return cljs.core.cons.call(null, [cljs.core.str(crate.util.url_encode_component.call(null, k__19332)), cljs.core.str("="), cljs.core.str(crate.util.url_encode_component.call(null, v__19333))].join(""), iter__19322.call(null, cljs.core.rest.call(null, s__19323__19329)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____19334.call(null, params)
  }())
};
crate.util.url = function() {
  var url__delegate = function(args) {
    var params__19337 = cljs.core.last.call(null, args);
    var args__19338 = cljs.core.butlast.call(null, args);
    return[cljs.core.str(crate.util.to_uri.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, args__19338)), cljs.core.str(cljs.core.map_QMARK_.call(null, params__19337) ? [cljs.core.str("?"), cljs.core.str(crate.util.url_encode.call(null, params__19337))].join("") : params__19337)].join("")))].join("")
  };
  var url = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return url__delegate.call(this, args)
  };
  url.cljs$lang$maxFixedArity = 0;
  url.cljs$lang$applyTo = function(arglist__19339) {
    var args = cljs.core.seq(arglist__19339);
    return url__delegate(args)
  };
  url.cljs$lang$arity$variadic = url__delegate;
  return url
}();
goog.provide("crate.binding");
goog.require("cljs.core");
goog.require("clojure.set");
crate.binding.SubAtom = function(atm, path, prevhash, watches) {
  this.atm = atm;
  this.path = path;
  this.prevhash = prevhash;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690678784
};
crate.binding.SubAtom.cljs$lang$type = true;
crate.binding.SubAtom.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "crate.binding/SubAtom")
};
crate.binding.SubAtom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__19074 = this;
  return goog.getUid(this$)
};
crate.binding.SubAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__19075 = this;
  var G__19076__19077 = cljs.core.seq.call(null, this__19075.watches);
  if(G__19076__19077) {
    var G__19079__19081 = cljs.core.first.call(null, G__19076__19077);
    var vec__19080__19082 = G__19079__19081;
    var key__19083 = cljs.core.nth.call(null, vec__19080__19082, 0, null);
    var f__19084 = cljs.core.nth.call(null, vec__19080__19082, 1, null);
    var G__19076__19085 = G__19076__19077;
    var G__19079__19086 = G__19079__19081;
    var G__19076__19087 = G__19076__19085;
    while(true) {
      var vec__19088__19089 = G__19079__19086;
      var key__19090 = cljs.core.nth.call(null, vec__19088__19089, 0, null);
      var f__19091 = cljs.core.nth.call(null, vec__19088__19089, 1, null);
      var G__19076__19092 = G__19076__19087;
      f__19091.call(null, key__19090, this$, oldval, newval);
      var temp__3974__auto____19093 = cljs.core.next.call(null, G__19076__19092);
      if(temp__3974__auto____19093) {
        var G__19076__19094 = temp__3974__auto____19093;
        var G__19100 = cljs.core.first.call(null, G__19076__19094);
        var G__19101 = G__19076__19094;
        G__19079__19086 = G__19100;
        G__19076__19087 = G__19101;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.binding.SubAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__19095 = this;
  if(cljs.core.truth_(f)) {
    return this$.watches = cljs.core.assoc.call(null, this__19095.watches, key, f)
  }else {
    return null
  }
};
crate.binding.SubAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__19096 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__19096.watches, key)
};
crate.binding.SubAtom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__19097 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<SubAtom: "], true), cljs.core._pr_seq.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, this__19097.atm), this__19097.path), opts), ">")
};
crate.binding.SubAtom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__19098 = this;
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, this__19098.atm), this__19098.path)
};
crate.binding.SubAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__19099 = this;
  return o === other
};
crate.binding.SubAtom;
crate.binding.subatom = function subatom(atm, path) {
  var path__19115 = cljs.core.coll_QMARK_.call(null, path) ? path : cljs.core.PersistentVector.fromArray([path], true);
  var vec__19114__19116 = cljs.core.instance_QMARK_.call(null, crate.binding.SubAtom, atm) ? cljs.core.PersistentVector.fromArray([atm.atm, cljs.core.concat.call(null, atm.path, path__19115)], true) : cljs.core.PersistentVector.fromArray([atm, path__19115], true);
  var atm__19117 = cljs.core.nth.call(null, vec__19114__19116, 0, null);
  var path__19118 = cljs.core.nth.call(null, vec__19114__19116, 1, null);
  var k__19119 = cljs.core.gensym.call(null, "subatom");
  var sa__19120 = new crate.binding.SubAtom(atm__19117, path__19118, cljs.core.hash.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, atm__19117), path__19118)), null);
  cljs.core.add_watch.call(null, atm__19117, k__19119, function(_19121, _, ov, nv) {
    var latest__19122 = cljs.core.get_in.call(null, nv, path__19118);
    var prev__19123 = cljs.core.get_in.call(null, ov, path__19118);
    var latest_hash__19124 = cljs.core.hash.call(null, latest__19122);
    if(function() {
      var and__3822__auto____19125 = cljs.core.not_EQ_.call(null, sa__19120.prevhash, latest_hash__19124);
      if(and__3822__auto____19125) {
        return cljs.core.not_EQ_.call(null, prev__19123, latest__19122)
      }else {
        return and__3822__auto____19125
      }
    }()) {
      sa__19120.prevhash = latest_hash__19124;
      return cljs.core._notify_watches.call(null, sa__19120, cljs.core.get_in.call(null, ov, path__19118), latest__19122)
    }else {
      return null
    }
  });
  return sa__19120
};
crate.binding.sub_reset_BANG_ = function sub_reset_BANG_(sa, new_value) {
  cljs.core.swap_BANG_.call(null, sa.atm, cljs.core.assoc_in, sa.path, new_value);
  return new_value
};
crate.binding.sub_swap_BANG_ = function() {
  var sub_swap_BANG_ = null;
  var sub_swap_BANG___2 = function(sa, f) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa)))
  };
  var sub_swap_BANG___3 = function(sa, f, x) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa), x))
  };
  var sub_swap_BANG___4 = function(sa, f, x, y) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa), x, y))
  };
  var sub_swap_BANG___5 = function(sa, f, x, y, z) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa), x, y, z))
  };
  var sub_swap_BANG___6 = function() {
    var G__19126__delegate = function(sa, f, x, y, z, more) {
      return crate.binding.sub_reset_BANG_.call(null, sa, cljs.core.apply.call(null, f, cljs.core.deref.call(null, sa), x, y, z, more))
    };
    var G__19126 = function(sa, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__19126__delegate.call(this, sa, f, x, y, z, more)
    };
    G__19126.cljs$lang$maxFixedArity = 5;
    G__19126.cljs$lang$applyTo = function(arglist__19127) {
      var sa = cljs.core.first(arglist__19127);
      var f = cljs.core.first(cljs.core.next(arglist__19127));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__19127)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__19127))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__19127)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__19127)))));
      return G__19126__delegate(sa, f, x, y, z, more)
    };
    G__19126.cljs$lang$arity$variadic = G__19126__delegate;
    return G__19126
  }();
  sub_swap_BANG_ = function(sa, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return sub_swap_BANG___2.call(this, sa, f);
      case 3:
        return sub_swap_BANG___3.call(this, sa, f, x);
      case 4:
        return sub_swap_BANG___4.call(this, sa, f, x, y);
      case 5:
        return sub_swap_BANG___5.call(this, sa, f, x, y, z);
      default:
        return sub_swap_BANG___6.cljs$lang$arity$variadic(sa, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  sub_swap_BANG_.cljs$lang$maxFixedArity = 5;
  sub_swap_BANG_.cljs$lang$applyTo = sub_swap_BANG___6.cljs$lang$applyTo;
  sub_swap_BANG_.cljs$lang$arity$2 = sub_swap_BANG___2;
  sub_swap_BANG_.cljs$lang$arity$3 = sub_swap_BANG___3;
  sub_swap_BANG_.cljs$lang$arity$4 = sub_swap_BANG___4;
  sub_swap_BANG_.cljs$lang$arity$5 = sub_swap_BANG___5;
  sub_swap_BANG_.cljs$lang$arity$variadic = sub_swap_BANG___6.cljs$lang$arity$variadic;
  return sub_swap_BANG_
}();
crate.binding.notify = function notify(w, o, v) {
  return cljs.core._notify_watches.call(null, w, o, v)
};
crate.binding.bindable_coll = {};
crate.binding.bindable = {};
crate.binding._value = function _value(this$) {
  if(function() {
    var and__3822__auto____19132 = this$;
    if(and__3822__auto____19132) {
      return this$.crate$binding$bindable$_value$arity$1
    }else {
      return and__3822__auto____19132
    }
  }()) {
    return this$.crate$binding$bindable$_value$arity$1(this$)
  }else {
    var x__2264__auto____19133 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____19134 = crate.binding._value[goog.typeOf(x__2264__auto____19133)];
      if(or__3824__auto____19134) {
        return or__3824__auto____19134
      }else {
        var or__3824__auto____19135 = crate.binding._value["_"];
        if(or__3824__auto____19135) {
          return or__3824__auto____19135
        }else {
          throw cljs.core.missing_protocol.call(null, "bindable.-value", this$);
        }
      }
    }().call(null, this$)
  }
};
crate.binding._on_change = function _on_change(this$, func) {
  if(function() {
    var and__3822__auto____19140 = this$;
    if(and__3822__auto____19140) {
      return this$.crate$binding$bindable$_on_change$arity$2
    }else {
      return and__3822__auto____19140
    }
  }()) {
    return this$.crate$binding$bindable$_on_change$arity$2(this$, func)
  }else {
    var x__2264__auto____19141 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____19142 = crate.binding._on_change[goog.typeOf(x__2264__auto____19141)];
      if(or__3824__auto____19142) {
        return or__3824__auto____19142
      }else {
        var or__3824__auto____19143 = crate.binding._on_change["_"];
        if(or__3824__auto____19143) {
          return or__3824__auto____19143
        }else {
          throw cljs.core.missing_protocol.call(null, "bindable.-on-change", this$);
        }
      }
    }().call(null, this$, func)
  }
};
crate.binding.atom_binding = function(atm, value_func) {
  this.atm = atm;
  this.value_func = value_func
};
crate.binding.atom_binding.cljs$lang$type = true;
crate.binding.atom_binding.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "crate.binding/atom-binding")
};
crate.binding.atom_binding.prototype.crate$binding$bindable$ = true;
crate.binding.atom_binding.prototype.crate$binding$bindable$_value$arity$1 = function(this$) {
  var this__19144 = this;
  return this__19144.value_func.call(null, cljs.core.deref.call(null, this__19144.atm))
};
crate.binding.atom_binding.prototype.crate$binding$bindable$_on_change$arity$2 = function(this$, func) {
  var this__19145 = this;
  return cljs.core.add_watch.call(null, this__19145.atm, cljs.core.gensym.call(null, "atom-binding"), function() {
    return func.call(null, crate.binding._value.call(null, this$))
  })
};
crate.binding.atom_binding;
crate.binding.notifier = function(watches) {
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147483648
};
crate.binding.notifier.cljs$lang$type = true;
crate.binding.notifier.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "crate.binding/notifier")
};
crate.binding.notifier.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__19146 = this;
  var G__19147__19148 = cljs.core.seq.call(null, this__19146.watches);
  if(G__19147__19148) {
    var G__19150__19152 = cljs.core.first.call(null, G__19147__19148);
    var vec__19151__19153 = G__19150__19152;
    var key__19154 = cljs.core.nth.call(null, vec__19151__19153, 0, null);
    var f__19155 = cljs.core.nth.call(null, vec__19151__19153, 1, null);
    var G__19147__19156 = G__19147__19148;
    var G__19150__19157 = G__19150__19152;
    var G__19147__19158 = G__19147__19156;
    while(true) {
      var vec__19159__19160 = G__19150__19157;
      var key__19161 = cljs.core.nth.call(null, vec__19159__19160, 0, null);
      var f__19162 = cljs.core.nth.call(null, vec__19159__19160, 1, null);
      var G__19147__19163 = G__19147__19158;
      f__19162.call(null, key__19161, this$, oldval, newval);
      var temp__3974__auto____19164 = cljs.core.next.call(null, G__19147__19163);
      if(temp__3974__auto____19164) {
        var G__19147__19165 = temp__3974__auto____19164;
        var G__19168 = cljs.core.first.call(null, G__19147__19165);
        var G__19169 = G__19147__19165;
        G__19150__19157 = G__19168;
        G__19147__19158 = G__19169;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.binding.notifier.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__19166 = this;
  return this$.watches = cljs.core.assoc.call(null, this__19166.watches, key, f)
};
crate.binding.notifier.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__19167 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__19167.watches, key)
};
crate.binding.notifier;
crate.binding.bound_collection = function(atm, notif, opts, stuff) {
  this.atm = atm;
  this.notif = notif;
  this.opts = opts;
  this.stuff = stuff
};
crate.binding.bound_collection.cljs$lang$type = true;
crate.binding.bound_collection.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "crate.binding/bound-collection")
};
crate.binding.bound_collection.prototype.crate$binding$bindable$ = true;
crate.binding.bound_collection.prototype.crate$binding$bindable$_value$arity$1 = function(this$) {
  var this__19170 = this;
  return cljs.core.map.call(null, "\ufdd0'elem", cljs.core.vals.call(null, this$.stuff))
};
crate.binding.bound_collection.prototype.crate$binding$bindable$_on_change$arity$2 = function(this$, func) {
  var this__19171 = this;
  return cljs.core.add_watch.call(null, this__19171.notif, cljs.core.gensym.call(null, "bound-coll"), function(_19173, _19174, _, p__19172) {
    var vec__19175__19176 = p__19172;
    var event__19177 = cljs.core.nth.call(null, vec__19175__19176, 0, null);
    var el__19178 = cljs.core.nth.call(null, vec__19175__19176, 1, null);
    var v__19179 = cljs.core.nth.call(null, vec__19175__19176, 2, null);
    return func.call(null, event__19177, el__19178, v__19179)
  })
};
crate.binding.bound_collection.prototype.crate$binding$bindable_coll$ = true;
crate.binding.bound_collection;
crate.binding.opt = function opt(bc, k) {
  return bc.opts.call(null, k)
};
crate.binding.bc_add = function bc_add(bc, path, key) {
  var sa__19182 = crate.binding.subatom.call(null, bc.atm, path);
  var elem__19183 = crate.binding.opt.call(null, bc, "\ufdd0'as").call(null, sa__19182);
  bc.stuff = cljs.core.assoc.call(null, bc.stuff, key, cljs.core.ObjMap.fromObject(["\ufdd0'elem", "\ufdd0'subatom"], {"\ufdd0'elem":elem__19183, "\ufdd0'subatom":sa__19182}));
  return crate.binding.notify.call(null, bc.notif, null, cljs.core.PersistentVector.fromArray(["\ufdd0'add", elem__19183, cljs.core.deref.call(null, sa__19182)], true))
};
crate.binding.bc_remove = function bc_remove(bc, key) {
  var notif__19186 = bc.notif;
  var prev__19187 = bc.stuff.call(null, key);
  bc.stuff = cljs.core.dissoc.call(null, bc.stuff, key);
  return crate.binding.notify.call(null, bc.notif, null, cljs.core.PersistentVector.fromArray(["\ufdd0'remove", (new cljs.core.Keyword("\ufdd0'elem")).call(null, prev__19187), null], true))
};
crate.binding.__GT_indexed = function __GT_indexed(coll) {
  if(cljs.core.map_QMARK_.call(null, coll)) {
    return cljs.core.seq.call(null, coll)
  }else {
    if(cljs.core.set_QMARK_.call(null, coll)) {
      return cljs.core.map.call(null, cljs.core.juxt.call(null, cljs.core.identity, cljs.core.identity), coll)
    }else {
      if("\ufdd0'else") {
        return cljs.core.map_indexed.call(null, cljs.core.vector, coll)
      }else {
        return null
      }
    }
  }
};
crate.binding.__GT_keyed = function __GT_keyed(coll, keyfn) {
  return cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.map.call(null, keyfn, crate.binding.__GT_indexed.call(null, coll)))
};
crate.binding.__GT_path = function() {
  var __GT_path__delegate = function(bc, segs) {
    return cljs.core.concat.call(null, function() {
      var or__3824__auto____19189 = crate.binding.opt.call(null, bc, "\ufdd0'path");
      if(cljs.core.truth_(or__3824__auto____19189)) {
        return or__3824__auto____19189
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), segs)
  };
  var __GT_path = function(bc, var_args) {
    var segs = null;
    if(goog.isDef(var_args)) {
      segs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return __GT_path__delegate.call(this, bc, segs)
  };
  __GT_path.cljs$lang$maxFixedArity = 1;
  __GT_path.cljs$lang$applyTo = function(arglist__19190) {
    var bc = cljs.core.first(arglist__19190);
    var segs = cljs.core.rest(arglist__19190);
    return __GT_path__delegate(bc, segs)
  };
  __GT_path.cljs$lang$arity$variadic = __GT_path__delegate;
  return __GT_path
}();
crate.binding.bc_compare = function bc_compare(bc, neue) {
  var prev__19208 = bc.stuff;
  var pset__19209 = cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.keys.call(null, prev__19208));
  var nset__19210 = crate.binding.__GT_keyed.call(null, neue, crate.binding.opt.call(null, bc, "\ufdd0'keyfn"));
  var added__19211 = cljs.core.into.call(null, cljs.core.sorted_set.call(null), clojure.set.difference.call(null, nset__19210, pset__19209));
  var removed__19212 = cljs.core.into.call(null, cljs.core.sorted_set.call(null), clojure.set.difference.call(null, pset__19209, nset__19210));
  var G__19213__19214 = cljs.core.seq.call(null, added__19211);
  if(G__19213__19214) {
    var a__19215 = cljs.core.first.call(null, G__19213__19214);
    var G__19213__19216 = G__19213__19214;
    while(true) {
      crate.binding.bc_add.call(null, bc, a__19215, a__19215);
      var temp__3974__auto____19217 = cljs.core.next.call(null, G__19213__19216);
      if(temp__3974__auto____19217) {
        var G__19213__19218 = temp__3974__auto____19217;
        var G__19225 = cljs.core.first.call(null, G__19213__19218);
        var G__19226 = G__19213__19218;
        a__19215 = G__19225;
        G__19213__19216 = G__19226;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__19219__19220 = cljs.core.seq.call(null, removed__19212);
  if(G__19219__19220) {
    var r__19221 = cljs.core.first.call(null, G__19219__19220);
    var G__19219__19222 = G__19219__19220;
    while(true) {
      crate.binding.bc_remove.call(null, bc, r__19221);
      var temp__3974__auto____19223 = cljs.core.next.call(null, G__19219__19222);
      if(temp__3974__auto____19223) {
        var G__19219__19224 = temp__3974__auto____19223;
        var G__19227 = cljs.core.first.call(null, G__19219__19224);
        var G__19228 = G__19219__19224;
        r__19221 = G__19227;
        G__19219__19222 = G__19228;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.binding.bound_coll = function() {
  var bound_coll__delegate = function(atm, p__19229) {
    var vec__19244__19245 = p__19229;
    var path__19246 = cljs.core.nth.call(null, vec__19244__19245, 0, null);
    var opts__19247 = cljs.core.nth.call(null, vec__19244__19245, 1, null);
    var vec__19248__19249 = cljs.core.truth_(opts__19247) ? cljs.core.PersistentVector.fromArray([path__19246, opts__19247], true) : cljs.core.PersistentVector.fromArray([null, path__19246], true);
    var path__19250 = cljs.core.nth.call(null, vec__19248__19249, 0, null);
    var opts__19251 = cljs.core.nth.call(null, vec__19248__19249, 1, null);
    var atm__19252 = cljs.core.not.call(null, path__19250) ? atm : crate.binding.subatom.call(null, atm, path__19250);
    var opts__19253 = cljs.core.assoc.call(null, opts__19251, "\ufdd0'path", path__19250);
    var opts__19254 = cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'keyfn")).call(null, opts__19253)) ? cljs.core.assoc.call(null, opts__19253, "\ufdd0'keyfn", cljs.core.first) : cljs.core.assoc.call(null, opts__19253, "\ufdd0'keyfn", cljs.core.comp.call(null, (new cljs.core.Keyword("\ufdd0'keyfn")).call(null, opts__19253), cljs.core.second));
    var bc__19255 = new crate.binding.bound_collection(atm__19252, new crate.binding.notifier(null), opts__19254, cljs.core.sorted_map.call(null));
    cljs.core.add_watch.call(null, atm__19252, cljs.core.gensym.call(null, "bound-coll"), function(_19256, _19257, _, neue) {
      return crate.binding.bc_compare.call(null, bc__19255, neue)
    });
    crate.binding.bc_compare.call(null, bc__19255, cljs.core.deref.call(null, atm__19252));
    return bc__19255
  };
  var bound_coll = function(atm, var_args) {
    var p__19229 = null;
    if(goog.isDef(var_args)) {
      p__19229 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return bound_coll__delegate.call(this, atm, p__19229)
  };
  bound_coll.cljs$lang$maxFixedArity = 1;
  bound_coll.cljs$lang$applyTo = function(arglist__19258) {
    var atm = cljs.core.first(arglist__19258);
    var p__19229 = cljs.core.rest(arglist__19258);
    return bound_coll__delegate(atm, p__19229)
  };
  bound_coll.cljs$lang$arity$variadic = bound_coll__delegate;
  return bound_coll
}();
crate.binding.map_bound = function() {
  var map_bound__delegate = function(as, atm, p__19259) {
    var vec__19269__19270 = p__19259;
    var opts__19271 = cljs.core.nth.call(null, vec__19269__19270, 0, null);
    var opts__19272 = cljs.core.assoc.call(null, opts__19271, "\ufdd0'as", as);
    var atm__19273 = cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'path")).call(null, opts__19272)) ? atm : crate.binding.subatom.call(null, atm, (new cljs.core.Keyword("\ufdd0'path")).call(null, opts__19272));
    var opts__19274 = cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'keyfn")).call(null, opts__19272)) ? cljs.core.assoc.call(null, opts__19272, "\ufdd0'keyfn", cljs.core.first) : cljs.core.assoc.call(null, opts__19272, "\ufdd0'keyfn", cljs.core.comp.call(null, (new cljs.core.Keyword("\ufdd0'keyfn")).call(null, opts__19272), cljs.core.second));
    var bc__19275 = new crate.binding.bound_collection(atm__19273, new crate.binding.notifier(null), opts__19274, cljs.core.sorted_map.call(null));
    cljs.core.add_watch.call(null, atm__19273, cljs.core.gensym.call(null, "bound-coll"), function(_19276, _19277, _, neue) {
      return crate.binding.bc_compare.call(null, bc__19275, neue)
    });
    crate.binding.bc_compare.call(null, bc__19275, cljs.core.deref.call(null, atm__19273));
    return bc__19275
  };
  var map_bound = function(as, atm, var_args) {
    var p__19259 = null;
    if(goog.isDef(var_args)) {
      p__19259 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return map_bound__delegate.call(this, as, atm, p__19259)
  };
  map_bound.cljs$lang$maxFixedArity = 2;
  map_bound.cljs$lang$applyTo = function(arglist__19278) {
    var as = cljs.core.first(arglist__19278);
    var atm = cljs.core.first(cljs.core.next(arglist__19278));
    var p__19259 = cljs.core.rest(cljs.core.next(arglist__19278));
    return map_bound__delegate(as, atm, p__19259)
  };
  map_bound.cljs$lang$arity$variadic = map_bound__delegate;
  return map_bound
}();
crate.binding.binding_QMARK_ = function binding_QMARK_(b) {
  var G__19282__19283 = b;
  if(G__19282__19283) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____19284 = null;
      if(cljs.core.truth_(or__3824__auto____19284)) {
        return or__3824__auto____19284
      }else {
        return G__19282__19283.crate$binding$bindable$
      }
    }())) {
      return true
    }else {
      if(!G__19282__19283.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, crate.binding.bindable, G__19282__19283)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, crate.binding.bindable, G__19282__19283)
  }
};
crate.binding.binding_coll_QMARK_ = function binding_coll_QMARK_(b) {
  var G__19288__19289 = b;
  if(G__19288__19289) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____19290 = null;
      if(cljs.core.truth_(or__3824__auto____19290)) {
        return or__3824__auto____19290
      }else {
        return G__19288__19289.crate$binding$bindable_coll$
      }
    }())) {
      return true
    }else {
      if(!G__19288__19289.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, crate.binding.bindable_coll, G__19288__19289)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, crate.binding.bindable_coll, G__19288__19289)
  }
};
crate.binding.value = function value(b) {
  return crate.binding._value.call(null, b)
};
crate.binding.index = function index(sub_atom) {
  return cljs.core.last.call(null, sub_atom.path)
};
crate.binding.on_change = function on_change(b, func) {
  return crate.binding._on_change.call(null, b, func)
};
crate.binding.bound = function() {
  var bound__delegate = function(atm, p__19291) {
    var vec__19297__19298 = p__19291;
    var func__19299 = cljs.core.nth.call(null, vec__19297__19298, 0, null);
    var func__19301 = function() {
      var or__3824__auto____19300 = func__19299;
      if(cljs.core.truth_(or__3824__auto____19300)) {
        return or__3824__auto____19300
      }else {
        return cljs.core.identity
      }
    }();
    return new crate.binding.atom_binding(atm, func__19301)
  };
  var bound = function(atm, var_args) {
    var p__19291 = null;
    if(goog.isDef(var_args)) {
      p__19291 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return bound__delegate.call(this, atm, p__19291)
  };
  bound.cljs$lang$maxFixedArity = 1;
  bound.cljs$lang$applyTo = function(arglist__19302) {
    var atm = cljs.core.first(arglist__19302);
    var p__19291 = cljs.core.rest(arglist__19302);
    return bound__delegate(atm, p__19291)
  };
  bound.cljs$lang$arity$variadic = bound__delegate;
  return bound
}();
goog.provide("crate.compiler");
goog.require("cljs.core");
goog.require("crate.binding");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("goog.dom");
crate.compiler.xmlns = cljs.core.ObjMap.fromObject(["\ufdd0'xhtml", "\ufdd0'svg"], {"\ufdd0'xhtml":"http://www.w3.org/1999/xhtml", "\ufdd0'svg":"http://www.w3.org/2000/svg"});
crate.compiler.group_id = cljs.core.atom.call(null, 0);
crate.compiler.bindings = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
crate.compiler.capture_binding = function capture_binding(tag, b) {
  return cljs.core.swap_BANG_.call(null, crate.compiler.bindings, cljs.core.conj, cljs.core.PersistentVector.fromArray([tag, b], true))
};
crate.compiler.as_content = function as_content(parent, content) {
  var G__18818__18819 = cljs.core.seq.call(null, content);
  if(G__18818__18819) {
    var c__18820 = cljs.core.first.call(null, G__18818__18819);
    var G__18818__18821 = G__18818__18819;
    while(true) {
      var child__18822 = c__18820 == null ? null : cljs.core.map_QMARK_.call(null, c__18820) ? function() {
        throw"Maps cannot be used as content";
      }() : cljs.core.string_QMARK_.call(null, c__18820) ? goog.dom.createTextNode(c__18820) : cljs.core.vector_QMARK_.call(null, c__18820) ? crate.compiler.elem_factory.call(null, c__18820) : cljs.core.seq_QMARK_.call(null, c__18820) ? as_content.call(null, parent, c__18820) : cljs.core.truth_(crate.binding.binding_coll_QMARK_.call(null, c__18820)) ? function() {
        crate.compiler.capture_binding.call(null, "\ufdd0'coll", c__18820);
        return as_content.call(null, parent, cljs.core.PersistentVector.fromArray([crate.binding.value.call(null, c__18820)], true))
      }() : cljs.core.truth_(crate.binding.binding_QMARK_.call(null, c__18820)) ? function() {
        crate.compiler.capture_binding.call(null, "\ufdd0'text", c__18820);
        return as_content.call(null, parent, cljs.core.PersistentVector.fromArray([crate.binding.value.call(null, c__18820)], true))
      }() : cljs.core.truth_(c__18820.nodeName) ? c__18820 : cljs.core.truth_(c__18820.get) ? c__18820.get(0) : "\ufdd0'else" ? goog.dom.createTextNode([cljs.core.str(c__18820)].join("")) : null;
      if(cljs.core.truth_(child__18822)) {
        goog.dom.appendChild(parent, child__18822)
      }else {
      }
      var temp__3974__auto____18823 = cljs.core.next.call(null, G__18818__18821);
      if(temp__3974__auto____18823) {
        var G__18818__18824 = temp__3974__auto____18823;
        var G__18825 = cljs.core.first.call(null, G__18818__18824);
        var G__18826 = G__18818__18824;
        c__18820 = G__18825;
        G__18818__18821 = G__18826;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.compiler.dom_binding = function() {
  var method_table__2438__auto____18827 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  var prefer_table__2439__auto____18828 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  var method_cache__2440__auto____18829 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  var cached_hierarchy__2441__auto____18830 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  var hierarchy__2442__auto____18831 = cljs.core._lookup.call(null, cljs.core.ObjMap.EMPTY, "\ufdd0'hierarchy", cljs.core.global_hierarchy);
  return new cljs.core.MultiFn("dom-binding", function(type, _18832, _) {
    return type
  }, "\ufdd0'default", hierarchy__2442__auto____18831, method_table__2438__auto____18827, prefer_table__2439__auto____18828, method_cache__2440__auto____18829, cached_hierarchy__2441__auto____18830)
}();
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0'text", function(_, b, elem) {
  return crate.binding.on_change.call(null, b, function(v) {
    goog.dom.removeChildren(elem);
    return crate.compiler.as_content.call(null, elem, cljs.core.PersistentVector.fromArray([v], true))
  })
});
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0'attr", function(_, p__18833, elem) {
  var vec__18834__18835 = p__18833;
  var k__18836 = cljs.core.nth.call(null, vec__18834__18835, 0, null);
  var b__18837 = cljs.core.nth.call(null, vec__18834__18835, 1, null);
  return crate.binding.on_change.call(null, b__18837, function(v) {
    return crate.compiler.dom_attr.call(null, elem, k__18836, v)
  })
});
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0'style", function(_, p__18838, elem) {
  var vec__18839__18840 = p__18838;
  var k__18841 = cljs.core.nth.call(null, vec__18839__18840, 0, null);
  var b__18842 = cljs.core.nth.call(null, vec__18839__18840, 1, null);
  return crate.binding.on_change.call(null, b__18842, function(v) {
    if(cljs.core.truth_(k__18841)) {
      return crate.compiler.dom_style.call(null, elem, k__18841, v)
    }else {
      return crate.compiler.dom_style.call(null, elem, v)
    }
  })
});
crate.compiler.dom_add = function dom_add(bc, parent, elem, v) {
  var temp__3971__auto____18845 = crate.binding.opt.call(null, bc, "\ufdd0'add");
  if(cljs.core.truth_(temp__3971__auto____18845)) {
    var adder__18846 = temp__3971__auto____18845;
    return adder__18846.call(null, parent, elem, v)
  }else {
    return goog.dom.appendChild(parent, elem)
  }
};
crate.compiler.dom_remove = function dom_remove(bc, elem) {
  var temp__3971__auto____18849 = crate.binding.opt.call(null, bc, "\ufdd0'remove");
  if(cljs.core.truth_(temp__3971__auto____18849)) {
    var remover__18850 = temp__3971__auto____18849;
    return remover__18850.call(null, elem)
  }else {
    return goog.dom.removeNode(elem)
  }
};
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0'coll", function(_, bc, parent) {
  return crate.binding.on_change.call(null, bc, function(type, elem, v) {
    var pred__18851__18854 = cljs.core._EQ_;
    var expr__18852__18855 = type;
    if(pred__18851__18854.call(null, "\ufdd0'add", expr__18852__18855)) {
      return crate.compiler.dom_add.call(null, bc, parent, elem, v)
    }else {
      if(pred__18851__18854.call(null, "\ufdd0'remove", expr__18852__18855)) {
        return crate.compiler.dom_remove.call(null, bc, elem)
      }else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__18852__18855)].join(""));
      }
    }
  })
});
crate.compiler.handle_bindings = function handle_bindings(bs, elem) {
  var G__18875__18876 = cljs.core.seq.call(null, bs);
  if(G__18875__18876) {
    var G__18878__18880 = cljs.core.first.call(null, G__18875__18876);
    var vec__18879__18881 = G__18878__18880;
    var type__18882 = cljs.core.nth.call(null, vec__18879__18881, 0, null);
    var b__18883 = cljs.core.nth.call(null, vec__18879__18881, 1, null);
    var G__18875__18884 = G__18875__18876;
    var G__18878__18885 = G__18878__18880;
    var G__18875__18886 = G__18875__18884;
    while(true) {
      var vec__18887__18888 = G__18878__18885;
      var type__18889 = cljs.core.nth.call(null, vec__18887__18888, 0, null);
      var b__18890 = cljs.core.nth.call(null, vec__18887__18888, 1, null);
      var G__18875__18891 = G__18875__18886;
      crate.compiler.dom_binding.call(null, type__18889, b__18890, elem);
      var temp__3974__auto____18892 = cljs.core.next.call(null, G__18875__18891);
      if(temp__3974__auto____18892) {
        var G__18875__18893 = temp__3974__auto____18892;
        var G__18894 = cljs.core.first.call(null, G__18875__18893);
        var G__18895 = G__18875__18893;
        G__18878__18885 = G__18894;
        G__18875__18886 = G__18895;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.compiler.dom_style = function() {
  var dom_style = null;
  var dom_style__2 = function(elem, v) {
    if(cljs.core.string_QMARK_.call(null, v)) {
      elem.setAttribute("style", v)
    }else {
      if(cljs.core.map_QMARK_.call(null, v)) {
        var G__18916__18917 = cljs.core.seq.call(null, v);
        if(G__18916__18917) {
          var G__18919__18921 = cljs.core.first.call(null, G__18916__18917);
          var vec__18920__18922 = G__18919__18921;
          var k__18923 = cljs.core.nth.call(null, vec__18920__18922, 0, null);
          var v__18924 = cljs.core.nth.call(null, vec__18920__18922, 1, null);
          var G__18916__18925 = G__18916__18917;
          var G__18919__18926 = G__18919__18921;
          var G__18916__18927 = G__18916__18925;
          while(true) {
            var vec__18928__18929 = G__18919__18926;
            var k__18930 = cljs.core.nth.call(null, vec__18928__18929, 0, null);
            var v__18931 = cljs.core.nth.call(null, vec__18928__18929, 1, null);
            var G__18916__18932 = G__18916__18927;
            dom_style.call(null, elem, k__18930, v__18931);
            var temp__3974__auto____18933 = cljs.core.next.call(null, G__18916__18932);
            if(temp__3974__auto____18933) {
              var G__18916__18934 = temp__3974__auto____18933;
              var G__18936 = cljs.core.first.call(null, G__18916__18934);
              var G__18937 = G__18916__18934;
              G__18919__18926 = G__18936;
              G__18916__18927 = G__18937;
              continue
            }else {
            }
            break
          }
        }else {
        }
      }else {
        if(cljs.core.truth_(crate.binding.binding_QMARK_.call(null, v))) {
          crate.compiler.capture_binding.call(null, "\ufdd0'style", cljs.core.PersistentVector.fromArray([null, v], true));
          dom_style.call(null, elem, crate.binding.value.call(null, v))
        }else {
        }
      }
    }
    return elem
  };
  var dom_style__3 = function(elem, k, v) {
    var v__18935 = cljs.core.truth_(crate.binding.binding_QMARK_.call(null, v)) ? function() {
      crate.compiler.capture_binding.call(null, "\ufdd0'style", cljs.core.PersistentVector.fromArray([k, v], true));
      return crate.binding.value.call(null, v)
    }() : v;
    return goog.style.setStyle(elem, cljs.core.name.call(null, k), v__18935)
  };
  dom_style = function(elem, k, v) {
    switch(arguments.length) {
      case 2:
        return dom_style__2.call(this, elem, k);
      case 3:
        return dom_style__3.call(this, elem, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dom_style.cljs$lang$arity$2 = dom_style__2;
  dom_style.cljs$lang$arity$3 = dom_style__3;
  return dom_style
}();
crate.compiler.dom_attr = function() {
  var dom_attr = null;
  var dom_attr__2 = function(elem, attrs) {
    if(cljs.core.truth_(elem)) {
      if(!cljs.core.map_QMARK_.call(null, attrs)) {
        return elem.getAttribute(cljs.core.name.call(null, attrs))
      }else {
        var G__18958__18959 = cljs.core.seq.call(null, attrs);
        if(G__18958__18959) {
          var G__18961__18963 = cljs.core.first.call(null, G__18958__18959);
          var vec__18962__18964 = G__18961__18963;
          var k__18965 = cljs.core.nth.call(null, vec__18962__18964, 0, null);
          var v__18966 = cljs.core.nth.call(null, vec__18962__18964, 1, null);
          var G__18958__18967 = G__18958__18959;
          var G__18961__18968 = G__18961__18963;
          var G__18958__18969 = G__18958__18967;
          while(true) {
            var vec__18970__18971 = G__18961__18968;
            var k__18972 = cljs.core.nth.call(null, vec__18970__18971, 0, null);
            var v__18973 = cljs.core.nth.call(null, vec__18970__18971, 1, null);
            var G__18958__18974 = G__18958__18969;
            dom_attr.call(null, elem, k__18972, v__18973);
            var temp__3974__auto____18975 = cljs.core.next.call(null, G__18958__18974);
            if(temp__3974__auto____18975) {
              var G__18958__18976 = temp__3974__auto____18975;
              var G__18978 = cljs.core.first.call(null, G__18958__18976);
              var G__18979 = G__18958__18976;
              G__18961__18968 = G__18978;
              G__18958__18969 = G__18979;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return elem
      }
    }else {
      return null
    }
  };
  var dom_attr__3 = function(elem, k, v) {
    if(cljs.core._EQ_.call(null, k, "\ufdd0'style")) {
      crate.compiler.dom_style.call(null, elem, v)
    }else {
      var v__18977 = cljs.core.truth_(crate.binding.binding_QMARK_.call(null, v)) ? function() {
        crate.compiler.capture_binding.call(null, "\ufdd0'attr", cljs.core.PersistentVector.fromArray([k, v], true));
        return crate.binding.value.call(null, v)
      }() : v;
      elem.setAttribute(cljs.core.name.call(null, k), v__18977)
    }
    return elem
  };
  dom_attr = function(elem, k, v) {
    switch(arguments.length) {
      case 2:
        return dom_attr__2.call(this, elem, k);
      case 3:
        return dom_attr__3.call(this, elem, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dom_attr.cljs$lang$arity$2 = dom_attr__2;
  dom_attr.cljs$lang$arity$3 = dom_attr__3;
  return dom_attr
}();
crate.compiler.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
crate.compiler.normalize_map_attrs = function normalize_map_attrs(map_attrs) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__18986) {
    var vec__18987__18988 = p__18986;
    var n__18989 = cljs.core.nth.call(null, vec__18987__18988, 0, null);
    var v__18990 = cljs.core.nth.call(null, vec__18987__18988, 1, null);
    if(v__18990 === true) {
      return cljs.core.PersistentVector.fromArray([n__18989, cljs.core.name.call(null, n__18989)], true)
    }else {
      return cljs.core.PersistentVector.fromArray([n__18989, v__18990], true)
    }
  }, cljs.core.filter.call(null, cljs.core.comp.call(null, cljs.core.boolean$, cljs.core.second), map_attrs)))
};
crate.compiler.normalize_element = function normalize_element(p__18991) {
  var vec__19017__19018 = p__18991;
  var tag__19019 = cljs.core.nth.call(null, vec__19017__19018, 0, null);
  var content__19020 = cljs.core.nthnext.call(null, vec__19017__19018, 1);
  if(!function() {
    var or__3824__auto____19021 = cljs.core.keyword_QMARK_.call(null, tag__19019);
    if(or__3824__auto____19021) {
      return or__3824__auto____19021
    }else {
      var or__3824__auto____19022 = cljs.core.symbol_QMARK_.call(null, tag__19019);
      if(or__3824__auto____19022) {
        return or__3824__auto____19022
      }else {
        return cljs.core.string_QMARK_.call(null, tag__19019)
      }
    }
  }()) {
    throw[cljs.core.str(tag__19019), cljs.core.str(" is not a valid tag name.")].join("");
  }else {
  }
  var vec__19023__19025 = cljs.core.re_matches.call(null, crate.compiler.re_tag, cljs.core.name.call(null, tag__19019));
  var ___19026 = cljs.core.nth.call(null, vec__19023__19025, 0, null);
  var tag__19027 = cljs.core.nth.call(null, vec__19023__19025, 1, null);
  var id__19028 = cljs.core.nth.call(null, vec__19023__19025, 2, null);
  var class__19029 = cljs.core.nth.call(null, vec__19023__19025, 3, null);
  var vec__19024__19036 = function() {
    var vec__19030__19031 = clojure.string.split.call(null, tag__19027, /:/);
    var nsp__19032 = cljs.core.nth.call(null, vec__19030__19031, 0, null);
    var t__19033 = cljs.core.nth.call(null, vec__19030__19031, 1, null);
    var ns_xmlns__19034 = crate.compiler.xmlns.call(null, cljs.core.keyword.call(null, nsp__19032));
    if(cljs.core.truth_(t__19033)) {
      return cljs.core.PersistentVector.fromArray([function() {
        var or__3824__auto____19035 = ns_xmlns__19034;
        if(cljs.core.truth_(or__3824__auto____19035)) {
          return or__3824__auto____19035
        }else {
          return nsp__19032
        }
      }(), t__19033], true)
    }else {
      return cljs.core.PersistentVector.fromArray([(new cljs.core.Keyword("\ufdd0'xhtml")).call(null, crate.compiler.xmlns), nsp__19032], true)
    }
  }();
  var nsp__19037 = cljs.core.nth.call(null, vec__19024__19036, 0, null);
  var tag__19038 = cljs.core.nth.call(null, vec__19024__19036, 1, null);
  var tag_attrs__19040 = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.filter.call(null, function(p1__18980_SHARP_) {
    return!(cljs.core.second.call(null, p1__18980_SHARP_) == null)
  }, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":function() {
    var or__3824__auto____19039 = id__19028;
    if(cljs.core.truth_(or__3824__auto____19039)) {
      return or__3824__auto____19039
    }else {
      return null
    }
  }(), "\ufdd0'class":cljs.core.truth_(class__19029) ? clojure.string.replace.call(null, class__19029, /\./, " ") : null})));
  var map_attrs__19041 = cljs.core.first.call(null, content__19020);
  if(cljs.core.map_QMARK_.call(null, map_attrs__19041)) {
    return cljs.core.PersistentVector.fromArray([nsp__19037, tag__19038, cljs.core.merge.call(null, tag_attrs__19040, crate.compiler.normalize_map_attrs.call(null, map_attrs__19041)), cljs.core.next.call(null, content__19020)], true)
  }else {
    return cljs.core.PersistentVector.fromArray([nsp__19037, tag__19038, tag_attrs__19040, content__19020], true)
  }
};
crate.compiler.parse_content = function parse_content(elem, content) {
  var attrs__19043 = cljs.core.first.call(null, content);
  if(cljs.core.map_QMARK_.call(null, attrs__19043)) {
    crate.compiler.dom_attr.call(null, elem, attrs__19043);
    return cljs.core.rest.call(null, content)
  }else {
    return content
  }
};
crate.compiler.create_elem = cljs.core.truth_(document.createElementNS) ? function(nsp, tag) {
  return document.createElementNS(nsp, tag)
} : function(_, tag) {
  return document.createElement(tag)
};
crate.compiler.elem_factory = function elem_factory(tag_def) {
  var bindings19054__19055 = crate.compiler.bindings;
  try {
    crate.compiler.bindings = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
    var vec__19057__19058 = crate.compiler.normalize_element.call(null, tag_def);
    var nsp__19059 = cljs.core.nth.call(null, vec__19057__19058, 0, null);
    var tag__19060 = cljs.core.nth.call(null, vec__19057__19058, 1, null);
    var attrs__19061 = cljs.core.nth.call(null, vec__19057__19058, 2, null);
    var content__19062 = cljs.core.nth.call(null, vec__19057__19058, 3, null);
    var elem__19063 = crate.compiler.create_elem.call(null, nsp__19059, tag__19060);
    crate.compiler.dom_attr.call(null, elem__19063, attrs__19061);
    crate.compiler.as_content.call(null, elem__19063, content__19062);
    crate.compiler.handle_bindings.call(null, cljs.core.deref.call(null, crate.compiler.bindings), elem__19063);
    return elem__19063
  }finally {
    crate.compiler.bindings = bindings19054__19055
  }
};
crate.compiler.add_optional_attrs = function add_optional_attrs(func) {
  return function() {
    var G__19072__delegate = function(args) {
      if(cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, args))) {
        var vec__19068__19069 = cljs.core.apply.call(null, func, cljs.core.rest.call(null, args));
        var tag__19070 = cljs.core.nth.call(null, vec__19068__19069, 0, null);
        var body__19071 = cljs.core.nthnext.call(null, vec__19068__19069, 1);
        if(cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, body__19071))) {
          return cljs.core.apply.call(null, cljs.core.vector, tag__19070, cljs.core.merge.call(null, cljs.core.first.call(null, body__19071), cljs.core.first.call(null, args)), cljs.core.rest.call(null, body__19071))
        }else {
          return cljs.core.apply.call(null, cljs.core.vector, tag__19070, cljs.core.first.call(null, args), body__19071)
        }
      }else {
        return cljs.core.apply.call(null, func, args)
      }
    };
    var G__19072 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__19072__delegate.call(this, args)
    };
    G__19072.cljs$lang$maxFixedArity = 0;
    G__19072.cljs$lang$applyTo = function(arglist__19073) {
      var args = cljs.core.seq(arglist__19073);
      return G__19072__delegate(args)
    };
    G__19072.cljs$lang$arity$variadic = G__19072__delegate;
    return G__19072
  }()
};
goog.provide("crate.core");
goog.require("cljs.core");
goog.require("crate.util");
goog.require("crate.compiler");
crate.core.group_id = cljs.core.atom.call(null, 0);
crate.core.html = function() {
  var html__delegate = function(tags) {
    var res__18809 = cljs.core.map.call(null, crate.compiler.elem_factory, tags);
    if(cljs.core.truth_(cljs.core.second.call(null, res__18809))) {
      return res__18809
    }else {
      return cljs.core.first.call(null, res__18809)
    }
  };
  var html = function(var_args) {
    var tags = null;
    if(goog.isDef(var_args)) {
      tags = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return html__delegate.call(this, tags)
  };
  html.cljs$lang$maxFixedArity = 0;
  html.cljs$lang$applyTo = function(arglist__18810) {
    var tags = cljs.core.seq(arglist__18810);
    return html__delegate(tags)
  };
  html.cljs$lang$arity$variadic = html__delegate;
  return html
}();
crate.core.h = crate.util.escape_html;
goog.provide("c2.dom");
goog.require("cljs.core");
goog.require("goog.style");
goog.require("goog.dom.classes");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("singult.core");
goog.require("clojure.string");
NodeList.prototype.cljs$core$ISeqable$ = true;
NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
HTMLCollection.prototype.cljs$core$ISeqable$ = true;
HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
Node.prototype.cljs$core$IHash$ = true;
Node.prototype.cljs$core$IHash$_hash$arity$1 = function(x) {
  return x
};
c2.dom.IDom = {};
c2.dom.__GT_dom = function __GT_dom(x) {
  if(function() {
    var and__3822__auto____16594 = x;
    if(and__3822__auto____16594) {
      return x.c2$dom$IDom$__GT_dom$arity$1
    }else {
      return and__3822__auto____16594
    }
  }()) {
    return x.c2$dom$IDom$__GT_dom$arity$1(x)
  }else {
    var x__2264__auto____16595 = x == null ? null : x;
    return function() {
      var or__3824__auto____16596 = c2.dom.__GT_dom[goog.typeOf(x__2264__auto____16595)];
      if(or__3824__auto____16596) {
        return or__3824__auto____16596
      }else {
        var or__3824__auto____16597 = c2.dom.__GT_dom["_"];
        if(or__3824__auto____16597) {
          return or__3824__auto____16597
        }else {
          throw cljs.core.missing_protocol.call(null, "IDom.->dom", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.PersistentVector.prototype.c2$dom$IDom$ = true;
cljs.core.PersistentVector.prototype.c2$dom$IDom$__GT_dom$arity$1 = function(v) {
  return singult.core.render.call(null, v)
};
Node.prototype.c2$dom$IDom$ = true;
Node.prototype.c2$dom$IDom$__GT_dom$arity$1 = function(node) {
  return node
};
c2.dom.IDom["string"] = true;
c2.dom.__GT_dom["string"] = function(selector) {
  return c2.dom.select.call(null, selector)
};
c2.dom.select = function() {
  var select = null;
  var select__1 = function(selector) {
    return document.querySelector(selector)
  };
  var select__2 = function(selector, container) {
    return c2.dom.__GT_dom.call(null, container).querySelector(selector)
  };
  select = function(selector, container) {
    switch(arguments.length) {
      case 1:
        return select__1.call(this, selector);
      case 2:
        return select__2.call(this, selector, container)
    }
    throw"Invalid arity: " + arguments.length;
  };
  select.cljs$lang$arity$1 = select__1;
  select.cljs$lang$arity$2 = select__2;
  return select
}();
c2.dom.select_all = function() {
  var select_all = null;
  var select_all__1 = function(selector) {
    return document.querySelectorAll(selector)
  };
  var select_all__2 = function(selector, container) {
    return c2.dom.__GT_dom.call(null, container).querySelectorAll(selector)
  };
  select_all = function(selector, container) {
    switch(arguments.length) {
      case 1:
        return select_all__1.call(this, selector);
      case 2:
        return select_all__2.call(this, selector, container)
    }
    throw"Invalid arity: " + arguments.length;
  };
  select_all.cljs$lang$arity$1 = select_all__1;
  select_all.cljs$lang$arity$2 = select_all__2;
  return select_all
}();
c2.dom.matches_selector_QMARK_ = function matches_selector_QMARK_(node, selector) {
  return node.webkitMatchesSelector(selector)
};
c2.dom.children = function children(node) {
  return c2.dom.__GT_dom.call(null, node).children
};
c2.dom.parent = function parent(node) {
  return c2.dom.__GT_dom.call(null, node).parentNode
};
c2.dom.append_BANG_ = function append_BANG_(container, el) {
  var el__16599 = c2.dom.__GT_dom.call(null, el);
  goog.dom.appendChild(c2.dom.__GT_dom.call(null, container), el__16599);
  return el__16599
};
c2.dom.prepend_BANG_ = function prepend_BANG_(container, el) {
  var el__16601 = c2.dom.__GT_dom.call(null, el);
  goog.dom.insertChildAt(c2.dom.__GT_dom.call(null, container), el__16601, 0);
  return el__16601
};
c2.dom.remove_BANG_ = function remove_BANG_(el) {
  return goog.dom.removeNode(c2.dom.__GT_dom.call(null, el))
};
c2.dom.replace_BANG_ = function replace_BANG_(old, new$) {
  var new__16603 = c2.dom.__GT_dom.call(null, new$);
  goog.dom.replaceNode(new__16603, c2.dom.__GT_dom.call(null, old));
  return new__16603
};
c2.dom.style = function() {
  var style = null;
  var style__1 = function(el) {
    throw new Error("TODO: return map of element styles");
  };
  var style__2 = function(el, x) {
    var el__16636 = c2.dom.__GT_dom.call(null, el);
    try {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        var k__16661 = x;
        return goog.style.getComputedStyle(el__16636, cljs.core.name.call(null, k__16661))
      }else {
        if("\ufdd0'else") {
          throw 0;
        }else {
          return null
        }
      }
    }catch(e__7036__auto__) {
      if(e__7036__auto__ === 0) {
        try {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m__16641 = x;
            var G__16642__16643 = cljs.core.seq.call(null, m__16641);
            if(G__16642__16643) {
              var G__16645__16647 = cljs.core.first.call(null, G__16642__16643);
              var vec__16646__16648 = G__16645__16647;
              var k__16649 = cljs.core.nth.call(null, vec__16646__16648, 0, null);
              var v__16650 = cljs.core.nth.call(null, vec__16646__16648, 1, null);
              var G__16642__16651 = G__16642__16643;
              var G__16645__16652 = G__16645__16647;
              var G__16642__16653 = G__16642__16651;
              while(true) {
                var vec__16654__16655 = G__16645__16652;
                var k__16656 = cljs.core.nth.call(null, vec__16654__16655, 0, null);
                var v__16657 = cljs.core.nth.call(null, vec__16654__16655, 1, null);
                var G__16642__16658 = G__16642__16653;
                style.call(null, el__16636, k__16656, v__16657);
                var temp__3974__auto____16659 = cljs.core.next.call(null, G__16642__16658);
                if(temp__3974__auto____16659) {
                  var G__16642__16660 = temp__3974__auto____16659;
                  var G__16668 = cljs.core.first.call(null, G__16642__16660);
                  var G__16669 = G__16642__16660;
                  G__16645__16652 = G__16668;
                  G__16642__16653 = G__16669;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return el__16636
          }else {
            if("\ufdd0'else") {
              throw 0;
            }else {
              return null
            }
          }
        }catch(e__7036__auto__) {
          if(e__7036__auto__ === 0) {
            var G__16637__16640 = x;
            return null
          }else {
            throw e__7036__auto__;
          }
        }
      }else {
        throw e__7036__auto__;
      }
    }
  };
  var style__3 = function(el, k, v) {
    goog.style.setStyle(c2.dom.__GT_dom.call(null, el), cljs.core.name.call(null, k), function() {
      try {
        if(cljs.core.string_QMARK_.call(null, v)) {
          var s__16667 = v;
          return s__16667
        }else {
          if("\ufdd0'else") {
            throw 0;
          }else {
            return null
          }
        }
      }catch(e__7036__auto__) {
        if(e__7036__auto__ === 0) {
          try {
            if(cljs.core.number_QMARK_.call(null, v)) {
              var n__16666 = v;
              if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray(["\ufdd0'bottom", "\ufdd0'width", "\ufdd0'top", "\ufdd0'right", "\ufdd0'left", "\ufdd0'height"]).call(null, cljs.core.keyword.call(null, k)))) {
                return[cljs.core.str(n__16666), cljs.core.str("px")].join("")
              }else {
                return n__16666
              }
            }else {
              if("\ufdd0'else") {
                throw 0;
              }else {
                return null
              }
            }
          }catch(e__7036__auto__) {
            if(e__7036__auto__ === 0) {
              var G__16662__16665 = v;
              return null
            }else {
              throw e__7036__auto__;
            }
          }
        }else {
          throw e__7036__auto__;
        }
      }
    }());
    return el
  };
  style = function(el, k, v) {
    switch(arguments.length) {
      case 1:
        return style__1.call(this, el);
      case 2:
        return style__2.call(this, el, k);
      case 3:
        return style__3.call(this, el, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  style.cljs$lang$arity$1 = style__1;
  style.cljs$lang$arity$2 = style__2;
  style.cljs$lang$arity$3 = style__3;
  return style
}();
c2.dom.attr = function() {
  var attr = null;
  var attr__1 = function(el) {
    var attrs__16705 = c2.dom.__GT_dom.call(null, el).attributes;
    return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
      var iter__2363__auto____16712 = function iter__16706(s__16707) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__16707__16710 = s__16707;
          while(true) {
            if(cljs.core.seq.call(null, s__16707__16710)) {
              var i__16711 = cljs.core.first.call(null, s__16707__16710);
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, attrs__16705[i__16711].name), attrs__16705[i__16711].value], true), iter__16706.call(null, cljs.core.rest.call(null, s__16707__16710)))
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__2363__auto____16712.call(null, cljs.core.range.call(null, attrs__16705.length))
    }())
  };
  var attr__2 = function(el, x) {
    var el__16713 = c2.dom.__GT_dom.call(null, el);
    try {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        var k__16738 = x;
        return el__16713.getAttribute(cljs.core.name.call(null, k__16738))
      }else {
        if("\ufdd0'else") {
          throw 0;
        }else {
          return null
        }
      }
    }catch(e__7036__auto__) {
      if(e__7036__auto__ === 0) {
        try {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m__16718 = x;
            var G__16719__16720 = cljs.core.seq.call(null, m__16718);
            if(G__16719__16720) {
              var G__16722__16724 = cljs.core.first.call(null, G__16719__16720);
              var vec__16723__16725 = G__16722__16724;
              var k__16726 = cljs.core.nth.call(null, vec__16723__16725, 0, null);
              var v__16727 = cljs.core.nth.call(null, vec__16723__16725, 1, null);
              var G__16719__16728 = G__16719__16720;
              var G__16722__16729 = G__16722__16724;
              var G__16719__16730 = G__16719__16728;
              while(true) {
                var vec__16731__16732 = G__16722__16729;
                var k__16733 = cljs.core.nth.call(null, vec__16731__16732, 0, null);
                var v__16734 = cljs.core.nth.call(null, vec__16731__16732, 1, null);
                var G__16719__16735 = G__16719__16730;
                attr.call(null, el__16713, k__16733, v__16734);
                var temp__3974__auto____16736 = cljs.core.next.call(null, G__16719__16735);
                if(temp__3974__auto____16736) {
                  var G__16719__16737 = temp__3974__auto____16736;
                  var G__16740 = cljs.core.first.call(null, G__16719__16737);
                  var G__16741 = G__16719__16737;
                  G__16722__16729 = G__16740;
                  G__16719__16730 = G__16741;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return el__16713
          }else {
            if("\ufdd0'else") {
              throw 0;
            }else {
              return null
            }
          }
        }catch(e__7036__auto__) {
          if(e__7036__auto__ === 0) {
            var G__16714__16717 = x;
            return null
          }else {
            throw e__7036__auto__;
          }
        }
      }else {
        throw e__7036__auto__;
      }
    }
  };
  var attr__3 = function(el, k, v) {
    var el__16739 = c2.dom.__GT_dom.call(null, el);
    if(v == null) {
      el__16739.removeAttribute(cljs.core.name.call(null, k))
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0'style", k)) {
        c2.dom.style.call(null, el__16739, v)
      }else {
        el__16739.setAttribute(cljs.core.name.call(null, k), v)
      }
    }
    return el__16739
  };
  attr = function(el, k, v) {
    switch(arguments.length) {
      case 1:
        return attr__1.call(this, el);
      case 2:
        return attr__2.call(this, el, k);
      case 3:
        return attr__3.call(this, el, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  attr.cljs$lang$arity$1 = attr__1;
  attr.cljs$lang$arity$2 = attr__2;
  attr.cljs$lang$arity$3 = attr__3;
  return attr
}();
c2.dom.text = function() {
  var text = null;
  var text__1 = function(el) {
    return goog.dom.getTextContent(c2.dom.__GT_dom.call(null, el))
  };
  var text__2 = function(el, v) {
    var el__16743 = c2.dom.__GT_dom.call(null, el);
    goog.dom.setTextContent(el__16743, v);
    return el__16743
  };
  text = function(el, v) {
    switch(arguments.length) {
      case 1:
        return text__1.call(this, el);
      case 2:
        return text__2.call(this, el, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  text.cljs$lang$arity$1 = text__1;
  text.cljs$lang$arity$2 = text__2;
  return text
}();
c2.dom.val = function() {
  var val = null;
  var val__1 = function(el) {
    return goog.dom.forms.getValue(c2.dom.__GT_dom.call(null, el))
  };
  var val__2 = function(el, v) {
    var el__16745 = c2.dom.__GT_dom.call(null, el);
    goog.dom.forms.setValue(el__16745, v);
    return el__16745
  };
  val = function(el, v) {
    switch(arguments.length) {
      case 1:
        return val__1.call(this, el);
      case 2:
        return val__2.call(this, el, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  val.cljs$lang$arity$1 = val__1;
  val.cljs$lang$arity$2 = val__2;
  return val
}();
c2.dom.classed_BANG_ = function classed_BANG_(el, class$, classed_QMARK_) {
  return goog.dom.classes.enable(c2.dom.__GT_dom.call(null, el), cljs.core.name.call(null, class$), classed_QMARK_)
};
c2.dom.add_class_BANG_ = function add_class_BANG_(el, class$) {
  return c2.dom.classed_BANG_.call(null, el, class$, true)
};
c2.dom.remove_class_BANG_ = function remove_class_BANG_(el, class$) {
  return c2.dom.classed_BANG_.call(null, el, class$, false)
};
c2.dom.request_animation_frame = function() {
  var or__3824__auto____16747 = window.requestAnimationFrame;
  if(cljs.core.truth_(or__3824__auto____16747)) {
    return or__3824__auto____16747
  }else {
    var or__3824__auto____16748 = window.webkitRequestAnimationFrame;
    if(cljs.core.truth_(or__3824__auto____16748)) {
      return or__3824__auto____16748
    }else {
      return function(p1__16746_SHARP_) {
        return setTimeout(function() {
          return p1__16746_SHARP_.call(null)
        }, 10)
      }
    }
  }
}();
goog.provide("vcfvis.ui");
goog.require("cljs.core");
goog.require("crate.core");
goog.require("c2.dom");
goog.require("vcfvis.core");
vcfvis.ui.logged_in_html = function logged_in_html(user) {
  return crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'div", cljs.core.ObjMap.fromObject(["\ufdd0'class", "\ufdd0'id"], {"\ufdd0'class":"btn-group", "\ufdd0'id":"user-dropdown"}), cljs.core.PersistentVector.fromArray(["\ufdd0'button", cljs.core.ObjMap.fromObject(["\ufdd0'class", "\ufdd0'data-toggle"], {"\ufdd0'class":"btn btn-info dropdown-toggle", "\ufdd0'data-toggle":"dropdown"}), cljs.core.PersistentVector.fromArray(["\ufdd0'i", cljs.core.ObjMap.fromObject(["\ufdd0'class", 
  "\ufdd0'style"], {"\ufdd0'class":"icon-user icon-white", "\ufdd0'style":"margin-right: 6px"})], true), user, cljs.core.PersistentVector.fromArray(["\ufdd0'span", cljs.core.ObjMap.fromObject(["\ufdd0'class", "\ufdd0'style"], {"\ufdd0'class":"caret", "\ufdd0'style":"margin-left: 6px"})], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'ul", cljs.core.ObjMap.fromObject(["\ufdd0'class"], {"\ufdd0'class":"dropdown-menu"}), cljs.core.PersistentVector.fromArray(["\ufdd0'li", cljs.core.PersistentVector.fromArray(["\ufdd0'a", 
  cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'href"], {"\ufdd0'id":"logout-btn", "\ufdd0'href":"/logout"}), "Logout"], true)], true)], true)], true))
};
vcfvis.ui.update_user_BANG_ = function update_user_BANG_(context) {
  return c2.dom.replace_BANG_.call(null, c2.dom.select.call(null, "#user-dropdown"), vcfvis.ui.logged_in_html.call(null, cljs.core._lookup.call(null, context, "\ufdd0'username", "user")))
};
vcfvis.ui.hist_margin = 20;
vcfvis.ui.inter_hist_margin = 20;
vcfvis.ui.axis_height = parseFloat(c2.dom.style.call(null, "#hist-axis", "\ufdd0'height"));
vcfvis.ui.hist_height = parseFloat(c2.dom.style.call(null, "#histograms", "\ufdd0'height"));
vcfvis.ui.hist_width = parseFloat(c2.dom.style.call(null, "#histograms", "\ufdd0'width")) - 2 * vcfvis.ui.hist_margin;
vcfvis.ui.hist_bins = 100;
goog.provide("vcfvis.data");
goog.require("cljs.core");
goog.require("c2.util");
goog.require("cljs.reader");
goog.require("c2.ticks");
goog.require("c2.scale");
goog.require("shoreleave.remotes.http_rpc");
goog.require("vcfvis.ui");
goog.require("vcfvis.core");
goog.require("domina");
goog.require("cljs.reader");
goog.require("c2.util");
vcfvis.data.expand_metric = function expand_metric(metric) {
  if(cljs.core.truth_(metric.call(null, "\ufdd0'range"))) {
    return cljs.core.assoc.call(null, metric, "\ufdd0'bin-width", function() {
      var vec__11115__11116 = metric.call(null, "\ufdd0'range");
      var start__11117 = cljs.core.nth.call(null, vec__11115__11116, 0, null);
      var end__11118 = cljs.core.nth.call(null, vec__11115__11116, 1, null);
      return(end__11118 - start__11117) / vcfvis.ui.hist_bins
    }(), "\ufdd0'!filter-extent", cljs.core.atom.call(null, null), "\ufdd0'scale-x", function() {
      var map__11119__11120 = c2.ticks.search.call(null, metric.call(null, "\ufdd0'range"), "\ufdd0'clamp?", true, "\ufdd0'length", vcfvis.ui.hist_width);
      var map__11119__11121 = cljs.core.seq_QMARK_.call(null, map__11119__11120) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11119__11120) : map__11119__11120;
      var ticks__11122 = cljs.core._lookup.call(null, map__11119__11121, "\ufdd0'ticks", null);
      var x__11123 = c2.scale.linear.call(null, "\ufdd0'domain", metric.call(null, "\ufdd0'range"), "\ufdd0'range", cljs.core.PersistentVector.fromArray([0, vcfvis.ui.hist_width], true));
      return cljs.core.assoc.call(null, x__11123, "\ufdd0'ticks", ticks__11122)
    }())
  }else {
    throw[cljs.core.str("Metric doesn't have range: "), cljs.core.str(cljs.core.pr.call(null, metric))].join("");
  }
};
vcfvis.data.prep_context = function prep_context(context) {
  return cljs.core.update_in.call(null, context, cljs.core.PersistentVector.fromArray(["\ufdd0'metrics"], true), function(p1__11105_SHARP_) {
    return cljs.core.reduce.call(null, function(res, m) {
      return cljs.core.assoc.call(null, res, (new cljs.core.Keyword("\ufdd0'id")).call(null, m), vcfvis.data.expand_metric.call(null, m))
    }, cljs.core.ObjMap.EMPTY, p1__11105_SHARP_)
  })
};
vcfvis.data.prep_vcf_json = function prep_vcf_json(vcf_json) {
  var core_metrics__11161 = cljs.core.deref.call(null, vcfvis.core._BANG_context).call(null, "\ufdd0'metrics");
  var info__11165 = cljs.core.update_in.call(null, cljs.reader.read_string.call(null, vcf_json["clj"]), cljs.core.PersistentVector.fromArray(["\ufdd0'available-metrics"], true), function(p1__11124_SHARP_) {
    return cljs.core.reduce.call(null, function(ms, m) {
      var temp__3971__auto____11162 = core_metrics__11161.call(null, m);
      if(cljs.core.truth_(temp__3971__auto____11162)) {
        var metric__11163 = temp__3971__auto____11162;
        return cljs.core.conj.call(null, ms, metric__11163)
      }else {
        var res__7922__auto____11164 = [cljs.core.str("Don't know how to deal with metric: '"), cljs.core.str(m), cljs.core.str("', dropping.")].join("");
        console.log(res__7922__auto____11164);
        res__7922__auto____11164;
        return ms
      }
    }, cljs.core.PersistentHashSet.EMPTY, p1__11124_SHARP_)
  });
  var cf__11166 = crossfilter(vcf_json["raw"]);
  return cljs.core.assoc.call(null, info__11165, "\ufdd0'cf", cljs.core.into.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'crossfilter", "\ufdd0'all"], {"\ufdd0'crossfilter":cf__11166, "\ufdd0'all":cf__11166.groupAll()}), function() {
    var iter__2363__auto____11195 = function iter__11167(s__11168) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__11168__11182 = s__11168;
        while(true) {
          if(cljs.core.seq.call(null, s__11168__11182)) {
            var map__11183__11184 = cljs.core.first.call(null, s__11168__11182);
            var map__11183__11185 = cljs.core.seq_QMARK_.call(null, map__11183__11184) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11183__11184) : map__11183__11184;
            var bin_width__11186 = cljs.core._lookup.call(null, map__11183__11185, "\ufdd0'bin-width", null);
            var range__11187 = cljs.core._lookup.call(null, map__11183__11185, "\ufdd0'range", null);
            var id__11188 = cljs.core._lookup.call(null, map__11183__11185, "\ufdd0'id", null);
            return cljs.core.cons.call(null, function() {
              var vec__11189__11190 = range__11187;
              var start__11191 = cljs.core.nth.call(null, vec__11189__11190, 0, null);
              var end__11192 = cljs.core.nth.call(null, vec__11189__11190, 1, null);
              var dim__11193 = cf__11166.dimension(function(map__11183__11184, map__11183__11185, bin_width__11186, range__11187, id__11188) {
                return function(p1__11125_SHARP_) {
                  return p1__11125_SHARP_[id__11188]
                }
              }(map__11183__11184, map__11183__11185, bin_width__11186, range__11187, id__11188));
              var binned__11194 = dim__11193.group(function(map__11183__11184, map__11183__11185, bin_width__11186, range__11187, id__11188) {
                return function(x) {
                  return start__11191 + bin_width__11186 * (Math.floor.call(null, (x - start__11191) / bin_width__11186) < vcfvis.ui.hist_bins - 1 ? Math.floor.call(null, (x - start__11191) / bin_width__11186) : vcfvis.ui.hist_bins - 1)
                }
              }(map__11183__11184, map__11183__11185, bin_width__11186, range__11187, id__11188));
              return cljs.core.PersistentVector.fromArray([id__11188, cljs.core.ObjMap.fromObject(["\ufdd0'bin-width", "\ufdd0'dimension", "\ufdd0'binned"], {"\ufdd0'bin-width":bin_width__11186, "\ufdd0'dimension":dim__11193, "\ufdd0'binned":binned__11194})], true)
            }(), iter__11167.call(null, cljs.core.rest.call(null, s__11168__11182)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____11195.call(null, info__11165.call(null, "\ufdd0'available-metrics"))
  }()))
};
vcfvis.data.load_context = function load_context(callback) {
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "variant/context", cljs.core.PersistentVector.EMPTY, function(res) {
    return callback.call(null, vcfvis.data.prep_context.call(null, res))
  })
};
vcfvis.data.load_vcf = function load_vcf(file_url, callback) {
  return jQuery.getJSON("/api/vcf", c2.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'file-url"], {"\ufdd0'file-url":file_url})), function(res) {
    return callback.call(null, vcfvis.data.prep_vcf_json.call(null, res))
  })
};
vcfvis.data._BANG_analysis_status = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
cljs.core.swap_BANG_.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_, cljs.core.conj, function(m__9353__auto__) {
  try {
    if(function() {
      var G__11201__11202 = m__9353__auto__;
      if(G__11201__11202) {
        if(function() {
          var or__3824__auto____11203 = G__11201__11202.cljs$lang$protocol_mask$partition0$ & 256;
          if(or__3824__auto____11203) {
            return or__3824__auto____11203
          }else {
            return G__11201__11202.cljs$core$ILookup$
          }
        }()) {
          return true
        }else {
          if(!G__11201__11202.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__11201__11202)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__11201__11202)
      }
    }()) {
      var G__11196__11205 = function() {
        var val__6603__auto____11204 = cljs.core._lookup.call(null, m__9353__auto__, "\ufdd0'filter-updated", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6603__auto____11204, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6603__auto____11204
        }
      }();
      return cljs.core.reset_BANG_.call(null, vcfvis.data._BANG_analysis_status, cljs.core.ObjMap.EMPTY)
    }else {
      if("\ufdd0'else") {
        throw 0;
      }else {
        return null
      }
    }
  }catch(e__7036__auto__) {
    if(e__7036__auto__ === 0) {
      var G__11197__11200 = m__9353__auto__;
      return null
    }else {
      throw e__7036__auto__;
    }
  }
});
vcfvis.data.update_status_BANG_ = function update_status_BANG_(filename, status) {
  return cljs.core.swap_BANG_.call(null, vcfvis.data._BANG_analysis_status, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([filename], true), status)
};
vcfvis.data.reset_statuses_BANG_ = function reset_statuses_BANG_() {
  return cljs.core.reset_BANG_.call(null, vcfvis.data._BANG_analysis_status, cljs.core.ObjMap.EMPTY)
};
vcfvis.data.filter_analysis = function filter_analysis(file_url, metrics) {
  vcfvis.data.update_status_BANG_.call(null, file_url, "\ufdd0'running");
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "run/filter", cljs.core.PersistentVector.fromArray([file_url, metrics], true), function(res) {
    return vcfvis.data.update_status_BANG_.call(null, file_url, "\ufdd0'completed")
  })
};
goog.provide("chosen.jquery");
goog.require("cljs.core");
jQuery.prototype.cljs$core$IReduce$ = true;
jQuery.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  return cljs.core.ci_reduce.call(null, this$, f)
};
jQuery.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  return cljs.core.ci_reduce.call(null, this$, f, start)
};
jQuery.prototype.cljs$core$ILookup$ = true;
jQuery.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var or__3824__auto____12095 = this$.slice(k, k + 1);
  if(cljs.core.truth_(or__3824__auto____12095)) {
    return or__3824__auto____12095
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  return cljs.core._nth.call(null, this$, k, not_found)
};
jQuery.prototype.cljs$core$ISequential$ = true;
jQuery.prototype.cljs$core$IIndexed$ = true;
jQuery.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    if(void 0 === not_found) {
      return null
    }else {
      return not_found
    }
  }
};
jQuery.prototype.cljs$core$ICounted$ = true;
jQuery.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  return this$.size()
};
jQuery.prototype.cljs$core$ISeq$ = true;
jQuery.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  return this$.get(0)
};
jQuery.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  if(cljs.core.count.call(null, this$) > 1) {
    return this$.slice(1)
  }else {
    return cljs.core.list.call(null)
  }
};
jQuery.prototype.cljs$core$ISeqable$ = true;
jQuery.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  if(cljs.core.truth_(this$.get(0))) {
    return this$
  }else {
    return null
  }
};
goog.provide("chosen.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("chosen.jquery");
goog.require("goog.string");
goog.require("clojure.string");
chosen.core.ISelectable = {};
chosen.core.selected = function() {
  var selected = null;
  var selected__1 = function(this$) {
    if(function() {
      var and__3822__auto____11930 = this$;
      if(and__3822__auto____11930) {
        return this$.chosen$core$ISelectable$selected$arity$1
      }else {
        return and__3822__auto____11930
      }
    }()) {
      return this$.chosen$core$ISelectable$selected$arity$1(this$)
    }else {
      var x__2264__auto____11931 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11932 = chosen.core.selected[goog.typeOf(x__2264__auto____11931)];
        if(or__3824__auto____11932) {
          return or__3824__auto____11932
        }else {
          var or__3824__auto____11933 = chosen.core.selected["_"];
          if(or__3824__auto____11933) {
            return or__3824__auto____11933
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelectable.selected", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var selected__2 = function(this$, values) {
    if(function() {
      var and__3822__auto____11934 = this$;
      if(and__3822__auto____11934) {
        return this$.chosen$core$ISelectable$selected$arity$2
      }else {
        return and__3822__auto____11934
      }
    }()) {
      return this$.chosen$core$ISelectable$selected$arity$2(this$, values)
    }else {
      var x__2264__auto____11935 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11936 = chosen.core.selected[goog.typeOf(x__2264__auto____11935)];
        if(or__3824__auto____11936) {
          return or__3824__auto____11936
        }else {
          var or__3824__auto____11937 = chosen.core.selected["_"];
          if(or__3824__auto____11937) {
            return or__3824__auto____11937
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelectable.selected", this$);
          }
        }
      }().call(null, this$, values)
    }
  };
  selected = function(this$, values) {
    switch(arguments.length) {
      case 1:
        return selected__1.call(this, this$);
      case 2:
        return selected__2.call(this, this$, values)
    }
    throw"Invalid arity: " + arguments.length;
  };
  selected.cljs$lang$arity$1 = selected__1;
  selected.cljs$lang$arity$2 = selected__2;
  return selected
}();
chosen.core.IOptions = {};
chosen.core.options = function() {
  var options = null;
  var options__1 = function(this$) {
    if(function() {
      var and__3822__auto____11946 = this$;
      if(and__3822__auto____11946) {
        return this$.chosen$core$IOptions$options$arity$1
      }else {
        return and__3822__auto____11946
      }
    }()) {
      return this$.chosen$core$IOptions$options$arity$1(this$)
    }else {
      var x__2264__auto____11947 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11948 = chosen.core.options[goog.typeOf(x__2264__auto____11947)];
        if(or__3824__auto____11948) {
          return or__3824__auto____11948
        }else {
          var or__3824__auto____11949 = chosen.core.options["_"];
          if(or__3824__auto____11949) {
            return or__3824__auto____11949
          }else {
            throw cljs.core.missing_protocol.call(null, "IOptions.options", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var options__2 = function(this$, opts) {
    if(function() {
      var and__3822__auto____11950 = this$;
      if(and__3822__auto____11950) {
        return this$.chosen$core$IOptions$options$arity$2
      }else {
        return and__3822__auto____11950
      }
    }()) {
      return this$.chosen$core$IOptions$options$arity$2(this$, opts)
    }else {
      var x__2264__auto____11951 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11952 = chosen.core.options[goog.typeOf(x__2264__auto____11951)];
        if(or__3824__auto____11952) {
          return or__3824__auto____11952
        }else {
          var or__3824__auto____11953 = chosen.core.options["_"];
          if(or__3824__auto____11953) {
            return or__3824__auto____11953
          }else {
            throw cljs.core.missing_protocol.call(null, "IOptions.options", this$);
          }
        }
      }().call(null, this$, opts)
    }
  };
  options = function(this$, opts) {
    switch(arguments.length) {
      case 1:
        return options__1.call(this, this$);
      case 2:
        return options__2.call(this, this$, opts)
    }
    throw"Invalid arity: " + arguments.length;
  };
  options.cljs$lang$arity$1 = options__1;
  options.cljs$lang$arity$2 = options__2;
  return options
}();
chosen.core.__GT_coll = function __GT_coll(c) {
  if(!function() {
    var or__3824__auto____11956 = cljs.core.set_QMARK_.call(null, c);
    if(or__3824__auto____11956) {
      return or__3824__auto____11956
    }else {
      return cljs.core.sequential_QMARK_.call(null, c)
    }
  }()) {
    return cljs.core.PersistentVector.fromArray([c], true)
  }else {
    return c
  }
};
chosen.core.option_values = function option_values(option_els) {
  return cljs.core.map.call(null, function(p1__11954_SHARP_) {
    return p1__11954_SHARP_.value
  }, option_els)
};
chosen.core.selected_values = function selected_values(el) {
  return cljs.core.set.call(null, chosen.core.option_values.call(null, $(el).find("option:selected")))
};
chosen.core.el_options = function el_options(el) {
  return cljs.core.map.call(null, function(e) {
    var $e__11959 = $(e);
    var group__11960 = $e__11959.parent("optgroup").attr("label");
    return cljs.core.ObjMap.fromObject(["\ufdd0'text", "\ufdd0'value", "\ufdd0'selected", "\ufdd0'disabled", "\ufdd0'group"], {"\ufdd0'text":$e__11959.text(), "\ufdd0'value":$e__11959.val(), "\ufdd0'selected":e.selected, "\ufdd0'disabled":e.disabled, "\ufdd0'group":void 0 === group__11960 ? null : group__11960})
  }, $(el).find("option"))
};
chosen.core.opt__GT_html = function opt__GT_html(o) {
  var map__11971__11972 = o;
  var map__11971__11973 = cljs.core.seq_QMARK_.call(null, map__11971__11972) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11971__11972) : map__11971__11972;
  var style__11974 = cljs.core._lookup.call(null, map__11971__11973, "\ufdd0'style", null);
  var group__11975 = cljs.core._lookup.call(null, map__11971__11973, "\ufdd0'group", null);
  var disabled__11976 = cljs.core._lookup.call(null, map__11971__11973, "\ufdd0'disabled", null);
  var selected__11977 = cljs.core._lookup.call(null, map__11971__11973, "\ufdd0'selected", null);
  var text__11978 = cljs.core._lookup.call(null, map__11971__11973, "\ufdd0'text", null);
  var value__11979 = cljs.core._lookup.call(null, map__11971__11973, "\ufdd0'value", null);
  return[cljs.core.str(clojure.string.join.call(null, " ", cljs.core.PersistentVector.fromArray(["<option", [cljs.core.str('value="'), cljs.core.str(goog.string.htmlEscape(function() {
    var or__3824__auto____11980 = value__11979;
    if(cljs.core.truth_(or__3824__auto____11980)) {
      return or__3824__auto____11980
    }else {
      return text__11978
    }
  }())), cljs.core.str('"')].join(""), cljs.core.truth_(style__11974) ? [cljs.core.str("style='"), cljs.core.str(goog.string.htmlEscape(style__11974)), cljs.core.str("'")].join("") : null, cljs.core.truth_(disabled__11976) ? "disabled='disabled'" : null, cljs.core.truth_(selected__11977) ? "selected='selected'" : null, ">"], true))), cljs.core.str(text__11978), cljs.core.str("</option>")].join("")
};
chosen.core.optionify = function optionify(x) {
  if(cljs.core.map_QMARK_.call(null, x)) {
    return x
  }else {
    return cljs.core.ObjMap.fromObject(["\ufdd0'value", "\ufdd0'text"], {"\ufdd0'value":x, "\ufdd0'text":[cljs.core.str(x)].join("")})
  }
};
chosen.core.reset_dom_options_BANG_ = function reset_dom_options_BANG_($el, options) {
  $el.children().remove();
  var G__12001__12002 = cljs.core.seq.call(null, cljs.core.group_by.call(null, "\ufdd0'group", cljs.core.map.call(null, chosen.core.optionify, chosen.core.__GT_coll.call(null, options))));
  if(G__12001__12002) {
    var G__12004__12006 = cljs.core.first.call(null, G__12001__12002);
    var vec__12005__12007 = G__12004__12006;
    var group__12008 = cljs.core.nth.call(null, vec__12005__12007, 0, null);
    var opts__12009 = cljs.core.nth.call(null, vec__12005__12007, 1, null);
    var G__12001__12010 = G__12001__12002;
    var G__12004__12011 = G__12004__12006;
    var G__12001__12012 = G__12001__12010;
    while(true) {
      var vec__12013__12014 = G__12004__12011;
      var group__12015 = cljs.core.nth.call(null, vec__12013__12014, 0, null);
      var opts__12016 = cljs.core.nth.call(null, vec__12013__12014, 1, null);
      var G__12001__12017 = G__12001__12012;
      var opts_html__12018 = clojure.string.join.call(null, "\n", cljs.core.map.call(null, chosen.core.opt__GT_html, opts__12016));
      if(group__12015 == null) {
        $el.append(opts_html__12018)
      }else {
        $el.append([cljs.core.str("<optgroup label='"), cljs.core.str(goog.string.htmlEscape(cljs.core.name.call(null, group__12015))), cljs.core.str("'>"), cljs.core.str(opts_html__12018), cljs.core.str("</optgroup>")].join(""))
      }
      var temp__3974__auto____12019 = cljs.core.next.call(null, G__12001__12017);
      if(temp__3974__auto____12019) {
        var G__12001__12020 = temp__3974__auto____12019;
        var G__12021 = cljs.core.first.call(null, G__12001__12020);
        var G__12022 = G__12001__12020;
        G__12004__12011 = G__12021;
        G__12001__12012 = G__12022;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
chosen.core.Chosen = function($el, _BANG_a, multiple_QMARK_) {
  this.$el = $el;
  this._BANG_a = _BANG_a;
  this.multiple_QMARK_ = multiple_QMARK_;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147516416
};
chosen.core.Chosen.cljs$lang$type = true;
chosen.core.Chosen.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "chosen.core/Chosen")
};
chosen.core.Chosen.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(_12024, _12025, _) {
  var this__12023 = this;
  return null
};
chosen.core.Chosen.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(_, key, f) {
  var this__12026 = this;
  return cljs.core.add_watch.call(null, this__12026._BANG_a, key, function(_12029, _, p__12027, p__12028) {
    var map__12030__12032 = p__12027;
    var map__12030__12033 = cljs.core.seq_QMARK_.call(null, map__12030__12032) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12030__12032) : map__12030__12032;
    var old_sel__12034 = cljs.core._lookup.call(null, map__12030__12033, "\ufdd0'selected", null);
    var map__12031__12035 = p__12028;
    var map__12031__12036 = cljs.core.seq_QMARK_.call(null, map__12031__12035) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12031__12035) : map__12031__12035;
    var sel__12037 = cljs.core._lookup.call(null, map__12031__12036, "\ufdd0'selected", null);
    if(cljs.core.not_EQ_.call(null, old_sel__12034, sel__12037)) {
      return f.call(null, cljs.core.truth_(this__12026.multiple_QMARK_) ? sel__12037 : cljs.core.first.call(null, sel__12037))
    }else {
      return null
    }
  })
};
chosen.core.Chosen.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(_, key) {
  var this__12038 = this;
  return cljs.core.remove_watch.call(null, this__12038._BANG_a, key)
};
chosen.core.Chosen.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var this__12039 = this;
  return this$.chosen$core$ISelectable$selected$arity$1(this$)
};
chosen.core.Chosen.prototype.chosen$core$IOptions$ = true;
chosen.core.Chosen.prototype.chosen$core$IOptions$options$arity$1 = function(_) {
  var this__12040 = this;
  return(new cljs.core.Keyword("\ufdd0'options")).call(null, cljs.core.deref.call(null, this__12040._BANG_a))
};
chosen.core.Chosen.prototype.chosen$core$IOptions$options$arity$2 = function(_, opts) {
  var this__12041 = this;
  chosen.core.reset_dom_options_BANG_.call(null, this__12041.$el, opts);
  return cljs.core.swap_BANG_.call(null, this__12041._BANG_a, cljs.core.assoc, "\ufdd0'options", chosen.core.el_options.call(null, this__12041.$el))
};
chosen.core.Chosen.prototype.chosen$core$ISelectable$ = true;
chosen.core.Chosen.prototype.chosen$core$ISelectable$selected$arity$1 = function(_) {
  var this__12042 = this;
  var sel__12043 = (new cljs.core.Keyword("\ufdd0'selected")).call(null, cljs.core.deref.call(null, this__12042._BANG_a));
  if(cljs.core.truth_(this__12042.multiple_QMARK_)) {
    return sel__12043
  }else {
    return cljs.core.first.call(null, sel__12043)
  }
};
chosen.core.Chosen.prototype.chosen$core$ISelectable$selected$arity$2 = function(_, values) {
  var this__12044 = this;
  return cljs.core.swap_BANG_.call(null, this__12044._BANG_a, cljs.core.assoc, "\ufdd0'selected", chosen.core.__GT_coll.call(null, values))
};
chosen.core.Chosen;
chosen.core.ichooseu_BANG_ = function() {
  var ichooseu_BANG___delegate = function(el, p__12045) {
    var map__12069__12070 = p__12045;
    var map__12069__12071 = cljs.core.seq_QMARK_.call(null, map__12069__12070) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12069__12070) : map__12069__12070;
    var search_contains__12072 = cljs.core._lookup.call(null, map__12069__12071, "\ufdd0'search-contains", false);
    var $el__12073 = $(el);
    var multiple_QMARK___12074 = cljs.core._EQ_.call(null, "multiple", $el__12073.attr("multiple"));
    var _BANG_a__12075 = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'options", "\ufdd0'selected"], {"\ufdd0'options":chosen.core.el_options.call(null, $el__12073), "\ufdd0'selected":chosen.core.selected_values.call(null, $el__12073)}));
    $el__12073.chosen(function() {
      var G__12076__12077 = {};
      G__12076__12077["search_contains"] = search_contains__12072;
      return G__12076__12077
    }()).on("change", function() {
      return cljs.core.swap_BANG_.call(null, _BANG_a__12075, cljs.core.assoc, "\ufdd0'selected", chosen.core.selected_values.call(null, $el__12073))
    });
    cljs.core.add_watch.call(null, _BANG_a__12075, "\ufdd0'_update-dom", function(_12079, _12080, _, p__12078) {
      var map__12081__12082 = p__12078;
      var map__12081__12083 = cljs.core.seq_QMARK_.call(null, map__12081__12082) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12081__12082) : map__12081__12082;
      var selected__12084 = cljs.core._lookup.call(null, map__12081__12083, "\ufdd0'selected", null);
      $el__12073.find("option[selected='selected']").removeAttr("selected");
      var G__12085__12086 = cljs.core.seq.call(null, selected__12084);
      if(G__12085__12086) {
        var val__12087 = cljs.core.first.call(null, G__12085__12086);
        var G__12085__12088 = G__12085__12086;
        while(true) {
          $el__12073.find([cljs.core.str("option[value='"), cljs.core.str(val__12087), cljs.core.str("']")].join("")).first().attr("selected", "selected");
          var temp__3974__auto____12089 = cljs.core.next.call(null, G__12085__12088);
          if(temp__3974__auto____12089) {
            var G__12085__12090 = temp__3974__auto____12089;
            var G__12092 = cljs.core.first.call(null, G__12085__12090);
            var G__12093 = G__12085__12090;
            val__12087 = G__12092;
            G__12085__12088 = G__12093;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var dom_selected__12091 = chosen.core.selected_values.call(null, $el__12073);
      if(cljs.core.not_EQ_.call(null, selected__12084, dom_selected__12091)) {
        cljs.core.swap_BANG_.call(null, _BANG_a__12075, cljs.core.assoc, "\ufdd0'selected", dom_selected__12091)
      }else {
      }
      return $el__12073.trigger("liszt:updated")
    });
    return new chosen.core.Chosen($el__12073, _BANG_a__12075, multiple_QMARK___12074)
  };
  var ichooseu_BANG_ = function(el, var_args) {
    var p__12045 = null;
    if(goog.isDef(var_args)) {
      p__12045 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return ichooseu_BANG___delegate.call(this, el, p__12045)
  };
  ichooseu_BANG_.cljs$lang$maxFixedArity = 1;
  ichooseu_BANG_.cljs$lang$applyTo = function(arglist__12094) {
    var el = cljs.core.first(arglist__12094);
    var p__12045 = cljs.core.rest(arglist__12094);
    return ichooseu_BANG___delegate(el, p__12045)
  };
  ichooseu_BANG_.cljs$lang$arity$variadic = ichooseu_BANG___delegate;
  return ichooseu_BANG_
}();
goog.provide("c2.core");
goog.require("cljs.core");
goog.require("reflex.core");
goog.require("c2.dom");
goog.require("singult.core");
c2.core.node_data = singult.core.node_data;
c2.core.unify = function() {
  var unify__delegate = function(data, mapping, args) {
    if(cljs.core.seq.call(null, data)) {
      mapping.call(null, cljs.core.first.call(null, data))
    }else {
    }
    return cljs.core.apply.call(null, singult.core.unify, data, mapping, args)
  };
  var unify = function(data, mapping, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unify__delegate.call(this, data, mapping, args)
  };
  unify.cljs$lang$maxFixedArity = 2;
  unify.cljs$lang$applyTo = function(arglist__16068) {
    var data = cljs.core.first(arglist__16068);
    var mapping = cljs.core.first(cljs.core.next(arglist__16068));
    var args = cljs.core.rest(cljs.core.next(arglist__16068));
    return unify__delegate(data, mapping, args)
  };
  unify.cljs$lang$arity$variadic = unify__delegate;
  return unify
}();
goog.provide("c2.event");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("c2.core");
goog.require("goog.events");
goog.require("c2.dom");
goog.require("c2.core");
goog.require("cljs.reader");
c2.event.on_load = function on_load(f) {
  return goog.events.listen(window, goog.events.EventType.LOAD, f)
};
c2.event.on_raw = function() {
  var on_raw__delegate = function(node, event_type, f, p__16036) {
    var map__16041__16042 = p__16036;
    var map__16041__16043 = cljs.core.seq_QMARK_.call(null, map__16041__16042) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16041__16042) : map__16041__16042;
    var capture__16044 = cljs.core._lookup.call(null, map__16041__16043, "\ufdd0'capture", false);
    return goog.events.listen(c2.dom.__GT_dom.call(null, node), cljs.core.name.call(null, event_type), f, capture__16044)
  };
  var on_raw = function(node, event_type, f, var_args) {
    var p__16036 = null;
    if(goog.isDef(var_args)) {
      p__16036 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return on_raw__delegate.call(this, node, event_type, f, p__16036)
  };
  on_raw.cljs$lang$maxFixedArity = 3;
  on_raw.cljs$lang$applyTo = function(arglist__16045) {
    var node = cljs.core.first(arglist__16045);
    var event_type = cljs.core.first(cljs.core.next(arglist__16045));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__16045)));
    var p__16036 = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__16045)));
    return on_raw__delegate(node, event_type, f, p__16036)
  };
  on_raw.cljs$lang$arity$variadic = on_raw__delegate;
  return on_raw
}();
c2.event.on = function() {
  var on = null;
  var on__3 = function(node, event_type, f) {
    return on.call(null, node, "*", event_type, f)
  };
  var on__5 = function() {
    var G__16065__delegate = function(node, selector, event_type, f, p__16046) {
      var map__16056__16057 = p__16046;
      var map__16056__16058 = cljs.core.seq_QMARK_.call(null, map__16056__16057) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16056__16057) : map__16056__16057;
      var capture__16059 = cljs.core._lookup.call(null, map__16056__16058, "\ufdd0'capture", false);
      return goog.events.listen(c2.dom.__GT_dom.call(null, node), cljs.core.name.call(null, event_type), function(event) {
        if(cljs.core.truth_(c2.dom.matches_selector_QMARK_.call(null, event.target, selector))) {
          var $node__16060 = event.target;
          while(true) {
            var temp__3971__auto____16061 = c2.core.node_data.call(null, $node__16060);
            if(cljs.core.truth_(temp__3971__auto____16061)) {
              var d__16062 = temp__3971__auto____16061;
              return f.call(null, d__16062, $node__16060, event)
            }else {
              var temp__3971__auto____16063 = c2.dom.parent.call(null, $node__16060);
              if(cljs.core.truth_(temp__3971__auto____16063)) {
                var parent__16064 = temp__3971__auto____16063;
                var G__16066 = parent__16064;
                $node__16060 = G__16066;
                continue
              }else {
                return null
              }
            }
            break
          }
        }else {
          return null
        }
      }, capture__16059)
    };
    var G__16065 = function(node, selector, event_type, f, var_args) {
      var p__16046 = null;
      if(goog.isDef(var_args)) {
        p__16046 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__16065__delegate.call(this, node, selector, event_type, f, p__16046)
    };
    G__16065.cljs$lang$maxFixedArity = 4;
    G__16065.cljs$lang$applyTo = function(arglist__16067) {
      var node = cljs.core.first(arglist__16067);
      var selector = cljs.core.first(cljs.core.next(arglist__16067));
      var event_type = cljs.core.first(cljs.core.next(cljs.core.next(arglist__16067)));
      var f = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__16067))));
      var p__16046 = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__16067))));
      return G__16065__delegate(node, selector, event_type, f, p__16046)
    };
    G__16065.cljs$lang$arity$variadic = G__16065__delegate;
    return G__16065
  }();
  on = function(node, selector, event_type, f, var_args) {
    var p__16046 = var_args;
    switch(arguments.length) {
      case 3:
        return on__3.call(this, node, selector, event_type);
      default:
        return on__5.cljs$lang$arity$variadic(node, selector, event_type, f, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  on.cljs$lang$maxFixedArity = 4;
  on.cljs$lang$applyTo = on__5.cljs$lang$applyTo;
  on.cljs$lang$arity$3 = on__3;
  on.cljs$lang$arity$variadic = on__5.cljs$lang$arity$variadic;
  return on
}();
goog.provide("c2.svg");
goog.require("cljs.core");
goog.require("c2.core");
goog.require("c2.maths");
goog.require("c2.dom");
goog.require("c2.maths");
goog.require("c2.core");
c2.svg.__GT_xy = function __GT_xy(coordinates) {
  try {
    if(cljs.core.vector_QMARK_.call(null, coordinates)) {
      try {
        if(function() {
          var and__3822__auto____18258 = cljs.core.vector_QMARK_.call(null, coordinates);
          if(and__3822__auto____18258) {
            return cljs.core._EQ_.call(null, cljs.core.count.call(null, coordinates), 2)
          }else {
            return and__3822__auto____18258
          }
        }()) {
          var x__18259 = cljs.core.nth.call(null, coordinates, 0);
          var y__18260 = cljs.core.nth.call(null, coordinates, 1);
          return cljs.core.PersistentVector.fromArray([x__18259, y__18260], true)
        }else {
          if("\ufdd0'else") {
            throw 0;
          }else {
            return null
          }
        }
      }catch(e__7036__auto__) {
        if(e__7036__auto__ === 0) {
          throw 0;
        }else {
          throw e__7036__auto__;
        }
      }
    }else {
      if(function() {
        var G__18261__18262 = coordinates;
        if(G__18261__18262) {
          if(function() {
            var or__3824__auto____18263 = G__18261__18262.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3824__auto____18263) {
              return or__3824__auto____18263
            }else {
              return G__18261__18262.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__18261__18262.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__18261__18262)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__18261__18262)
        }
      }()) {
        var y__18265 = function() {
          var val__6603__auto____18264 = cljs.core._lookup.call(null, coordinates, "\ufdd0'y", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6603__auto____18264, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6603__auto____18264
          }
        }();
        var x__18267 = function() {
          var val__6603__auto____18266 = cljs.core._lookup.call(null, coordinates, "\ufdd0'x", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6603__auto____18266, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6603__auto____18266
          }
        }();
        return cljs.core.PersistentVector.fromArray([x__18267, y__18265], true)
      }else {
        if("\ufdd0'else") {
          throw 0;
        }else {
          return null
        }
      }
    }
  }catch(e__7036__auto__) {
    if(e__7036__auto__ === 0) {
      var G__18250__18256 = coordinates;
      return null
    }else {
      throw e__7036__auto__;
    }
  }
};
c2.svg.translate = function translate(coordinates) {
  var vec__18272__18273 = c2.svg.__GT_xy.call(null, coordinates);
  var x__18274 = cljs.core.nth.call(null, vec__18272__18273, 0, null);
  var y__18275 = cljs.core.nth.call(null, vec__18272__18273, 1, null);
  return[cljs.core.str("translate("), cljs.core.str(x__18274), cljs.core.str(","), cljs.core.str(y__18275), cljs.core.str(")")].join("")
};
c2.svg.scale = function scale(coordinates) {
  while(true) {
    if(cljs.core.vector_QMARK_.call(null, coordinates)) {
      if(function() {
        var and__3822__auto____18297 = cljs.core.vector_QMARK_.call(null, coordinates);
        if(and__3822__auto____18297) {
          return cljs.core._EQ_.call(null, cljs.core.count.call(null, coordinates), 2)
        }else {
          return and__3822__auto____18297
        }
      }()) {
        var x__18298 = cljs.core.nth.call(null, coordinates, 0);
        var y__18299 = cljs.core.nth.call(null, coordinates, 1);
        return[cljs.core.str("scale("), cljs.core.str(x__18298), cljs.core.str(","), cljs.core.str(y__18299), cljs.core.str(")")].join("")
      }else {
        if("\ufdd0'else") {
          throw new java.lang.Exception([cljs.core.str("No match found. "), cljs.core.str("Followed "), cljs.core.str(1), cljs.core.str(" branches."), cljs.core.str(" Breadcrumbs: "), cljs.core.str(cljs.core.vec([cljs.core.list("\ufdd1'clojure.core/vector?", "\ufdd1'coordinates")]))].join(""));
        }else {
          return null
        }
      }
    }else {
      if(function() {
        var G__18300__18301 = coordinates;
        if(G__18300__18301) {
          if(function() {
            var or__3824__auto____18302 = G__18300__18301.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3824__auto____18302) {
              return or__3824__auto____18302
            }else {
              return G__18300__18301.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__18300__18301.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__18300__18301)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__18300__18301)
        }
      }()) {
        var y__18304 = function() {
          var val__6603__auto____18303 = cljs.core._lookup.call(null, coordinates, "\ufdd0'y", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6603__auto____18303, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6603__auto____18303
          }
        }();
        var x__18306 = function() {
          var val__6603__auto____18305 = cljs.core._lookup.call(null, coordinates, "\ufdd0'x", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6603__auto____18305, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6603__auto____18305
          }
        }();
        var G__18308 = cljs.core.PersistentVector.fromArray([x__18306, y__18304], true);
        coordinates = G__18308;
        continue
      }else {
        if("\ufdd0'else") {
          var s__18307 = coordinates;
          return[cljs.core.str("scale("), cljs.core.str(s__18307), cljs.core.str(")")].join("")
        }else {
          return null
        }
      }
    }
    break
  }
};
c2.svg.rotate = function() {
  var rotate = null;
  var rotate__1 = function(angle) {
    return rotate.call(null, angle, cljs.core.PersistentVector.fromArray([0, 0], true))
  };
  var rotate__2 = function(angle, coordinates) {
    var vec__18313__18314 = c2.svg.__GT_xy.call(null, coordinates);
    var x__18315 = cljs.core.nth.call(null, vec__18313__18314, 0, null);
    var y__18316 = cljs.core.nth.call(null, vec__18313__18314, 1, null);
    return[cljs.core.str("rotate("), cljs.core.str(angle), cljs.core.str(","), cljs.core.str(x__18315), cljs.core.str(","), cljs.core.str(y__18316), cljs.core.str(")")].join("")
  };
  rotate = function(angle, coordinates) {
    switch(arguments.length) {
      case 1:
        return rotate__1.call(this, angle);
      case 2:
        return rotate__2.call(this, angle, coordinates)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rotate.cljs$lang$arity$1 = rotate__1;
  rotate.cljs$lang$arity$2 = rotate__2;
  return rotate
}();
c2.svg.get_bounds = function get_bounds($svg_el) {
  var b__18318 = $svg_el.getBBox();
  return cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'y", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":b__18318.x, "\ufdd0'y":b__18318.y, "\ufdd0'width":b__18318.width, "\ufdd0'height":b__18318.height})
};
c2.svg.transform_to_center = function transform_to_center(element, container) {
  var map__18332__18334 = element;
  var map__18332__18335 = cljs.core.seq_QMARK_.call(null, map__18332__18334) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18332__18334) : map__18332__18334;
  var ew__18336 = cljs.core._lookup.call(null, map__18332__18335, "\ufdd0'width", null);
  var eh__18337 = cljs.core._lookup.call(null, map__18332__18335, "\ufdd0'height", null);
  var x__18338 = cljs.core._lookup.call(null, map__18332__18335, "\ufdd0'x", null);
  var y__18339 = cljs.core._lookup.call(null, map__18332__18335, "\ufdd0'y", null);
  var map__18333__18340 = container;
  var map__18333__18341 = cljs.core.seq_QMARK_.call(null, map__18333__18340) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18333__18340) : map__18333__18340;
  var w__18342 = cljs.core._lookup.call(null, map__18333__18341, "\ufdd0'width", null);
  var h__18343 = cljs.core._lookup.call(null, map__18333__18341, "\ufdd0'height", null);
  var s__18344 = h__18343 / eh__18337 < w__18342 / ew__18336 ? h__18343 / eh__18337 : w__18342 / ew__18336;
  return[cljs.core.str(c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([w__18342 / 2 - s__18344 * (ew__18336 / 2), h__18343 / 2 - s__18344 * (eh__18337 / 2)], true))), cljs.core.str(" "), cljs.core.str(c2.svg.scale.call(null, s__18344)), cljs.core.str(" "), cljs.core.str(c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([-x__18338, -y__18339], true)))].join("")
};
c2.svg.transform_to_center_BANG_ = function transform_to_center_BANG_($svg_el) {
  var $svg__18347 = $svg_el.ownerSVGElement;
  var t__18348 = c2.svg.transform_to_center.call(null, c2.svg.get_bounds.call(null, $svg_el), cljs.core.ObjMap.fromObject(["\ufdd0'width", "\ufdd0'height"], {"\ufdd0'width":parseFloat(c2.dom.attr.call(null, $svg__18347, "\ufdd0'width")), "\ufdd0'height":parseFloat(c2.dom.attr.call(null, $svg__18347, "\ufdd0'height"))}));
  return c2.dom.attr.call(null, $svg_el, "\ufdd0'transform", t__18348)
};
c2.svg.axis = function() {
  var axis__delegate = function(scale, ticks, p__18349) {
    var map__18374__18375 = p__18349;
    var map__18374__18376 = cljs.core.seq_QMARK_.call(null, map__18374__18375) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18374__18375) : map__18374__18375;
    var label_margin__18377 = cljs.core._lookup.call(null, map__18374__18376, "\ufdd0'label-margin", 28);
    var label__18378 = cljs.core._lookup.call(null, map__18374__18376, "\ufdd0'label", null);
    var text_margin__18379 = cljs.core._lookup.call(null, map__18374__18376, "\ufdd0'text-margin", 9);
    var major_tick_width__18380 = cljs.core._lookup.call(null, map__18374__18376, "\ufdd0'major-tick-width", 6);
    var formatter__18381 = cljs.core._lookup.call(null, map__18374__18376, "\ufdd0'formatter", cljs.core.str);
    var orientation__18382 = cljs.core._lookup.call(null, map__18374__18376, "\ufdd0'orientation", "\ufdd0'left");
    var vec__18383__18386 = function() {
      var G__18384__18385 = orientation__18382;
      if(cljs.core._EQ_.call(null, "\ufdd0'bottom", G__18384__18385)) {
        return cljs.core.PersistentVector.fromArray(["\ufdd0'y", "\ufdd0'x", "\ufdd0'y1", "\ufdd0'y2", "\ufdd0'x1", "\ufdd0'x2"], true)
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'top", G__18384__18385)) {
          return cljs.core.PersistentVector.fromArray(["\ufdd0'y", "\ufdd0'x", "\ufdd0'y1", "\ufdd0'y2", "\ufdd0'x1", "\ufdd0'x2"], true)
        }else {
          if(cljs.core._EQ_.call(null, "\ufdd0'right", G__18384__18385)) {
            return cljs.core.PersistentVector.fromArray(["\ufdd0'x", "\ufdd0'y", "\ufdd0'x1", "\ufdd0'x2", "\ufdd0'y1", "\ufdd0'y2"], true)
          }else {
            if(cljs.core._EQ_.call(null, "\ufdd0'left", G__18384__18385)) {
              return cljs.core.PersistentVector.fromArray(["\ufdd0'x", "\ufdd0'y", "\ufdd0'x1", "\ufdd0'x2", "\ufdd0'y1", "\ufdd0'y2"], true)
            }else {
              if("\ufdd0'else") {
                throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(orientation__18382)].join(""));
              }else {
                return null
              }
            }
          }
        }
      }
    }();
    var x__18387 = cljs.core.nth.call(null, vec__18383__18386, 0, null);
    var y__18388 = cljs.core.nth.call(null, vec__18383__18386, 1, null);
    var x1__18389 = cljs.core.nth.call(null, vec__18383__18386, 2, null);
    var x2__18390 = cljs.core.nth.call(null, vec__18383__18386, 3, null);
    var y1__18391 = cljs.core.nth.call(null, vec__18383__18386, 4, null);
    var y2__18392 = cljs.core.nth.call(null, vec__18383__18386, 5, null);
    var parity__18395 = function() {
      var G__18393__18394 = orientation__18382;
      if(cljs.core._EQ_.call(null, "\ufdd0'bottom", G__18393__18394)) {
        return 1
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'right", G__18393__18394)) {
          return 1
        }else {
          if(cljs.core._EQ_.call(null, "\ufdd0'top", G__18393__18394)) {
            return-1
          }else {
            if(cljs.core._EQ_.call(null, "\ufdd0'left", G__18393__18394)) {
              return-1
            }else {
              if("\ufdd0'else") {
                throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(orientation__18382)].join(""));
              }else {
                return null
              }
            }
          }
        }
      }
    }();
    return cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.ObjMap.fromObject(["\ufdd0'class"], {"\ufdd0'class":[cljs.core.str("axis "), cljs.core.str(cljs.core.name.call(null, orientation__18382))].join("")}), cljs.core.PersistentVector.fromArray(["\ufdd0'line.rule", cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.interleave.call(null, cljs.core.PersistentVector.fromArray([y1__18391, y2__18392], true), (new cljs.core.Keyword("\ufdd0'range")).call(null, scale)))], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.ticks", 
    c2.core.unify.call(null, ticks, function(d) {
      return cljs.core.PersistentVector.fromArray(["\ufdd0'g.tick.major-tick", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentArrayMap.fromArrays([x__18387, y__18388], [0, scale.call(null, d)]))}), cljs.core.PersistentVector.fromArray(["\ufdd0'text", cljs.core.PersistentArrayMap.fromArrays([x__18387], [parity__18395 * text_margin__18379]), formatter__18381.call(null, d)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'line", 
      cljs.core.PersistentArrayMap.fromArrays([x1__18389, x2__18390], [0, parity__18395 * major_tick_width__18380])], true)], true)
    })], true), cljs.core.truth_(label__18378) ? cljs.core.PersistentVector.fromArray(["\ufdd0'text.label", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":[cljs.core.str(c2.svg.translate.call(null, cljs.core.PersistentArrayMap.fromArrays([x__18387, y__18388], [parity__18395 * label_margin__18377, c2.maths.mean.call(null, (new cljs.core.Keyword("\ufdd0'range")).call(null, scale))]))), cljs.core.str(" "), cljs.core.str(function() {
      var G__18396__18397 = orientation__18382;
      if(cljs.core._EQ_.call(null, "\ufdd0'right", G__18396__18397)) {
        return c2.svg.rotate.call(null, 90)
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'left", G__18396__18397)) {
          return c2.svg.rotate.call(null, -90)
        }else {
          if("\ufdd0'else") {
            return""
          }else {
            return null
          }
        }
      }
    }())].join("")}), label__18378], true) : null], true)
  };
  var axis = function(scale, ticks, var_args) {
    var p__18349 = null;
    if(goog.isDef(var_args)) {
      p__18349 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return axis__delegate.call(this, scale, ticks, p__18349)
  };
  axis.cljs$lang$maxFixedArity = 2;
  axis.cljs$lang$applyTo = function(arglist__18398) {
    var scale = cljs.core.first(arglist__18398);
    var ticks = cljs.core.first(cljs.core.next(arglist__18398));
    var p__18349 = cljs.core.rest(cljs.core.next(arglist__18398));
    return axis__delegate(scale, ticks, p__18349)
  };
  axis.cljs$lang$arity$variadic = axis__delegate;
  return axis
}();
c2.svg.ArcMax = c2.maths.Tau - 1.0E-7;
c2.svg.circle = function() {
  var circle = null;
  var circle__1 = function(radius) {
    return circle.call(null, cljs.core.PersistentVector.fromArray([0, 0], true), radius)
  };
  var circle__2 = function(coordinates, radius) {
    var vec__18403__18404 = c2.svg.__GT_xy.call(null, coordinates);
    var x__18405 = cljs.core.nth.call(null, vec__18403__18404, 0, null);
    var y__18406 = cljs.core.nth.call(null, vec__18403__18404, 1, null);
    return[cljs.core.str("M"), cljs.core.str(x__18405 + radius), cljs.core.str(","), cljs.core.str(y__18406), cljs.core.str("A"), cljs.core.str(x__18405 + radius), cljs.core.str(","), cljs.core.str(y__18406 + radius), cljs.core.str(" 0 1,1"), cljs.core.str(-(x__18405 + radius)), cljs.core.str(","), cljs.core.str(y__18406), cljs.core.str("A"), cljs.core.str(x__18405 + radius), cljs.core.str(","), cljs.core.str(y__18406 + radius), cljs.core.str(" 0 1,1"), cljs.core.str(x__18405 + radius), cljs.core.str(","), 
    cljs.core.str(y__18406)].join("")
  };
  circle = function(coordinates, radius) {
    switch(arguments.length) {
      case 1:
        return circle__1.call(this, coordinates);
      case 2:
        return circle__2.call(this, coordinates, radius)
    }
    throw"Invalid arity: " + arguments.length;
  };
  circle.cljs$lang$arity$1 = circle__1;
  circle.cljs$lang$arity$2 = circle__2;
  return circle
}();
c2.svg.arc = function() {
  var arc__delegate = function(p__18407) {
    var map__18428__18429 = p__18407;
    var map__18428__18430 = cljs.core.seq_QMARK_.call(null, map__18428__18429) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18428__18429) : map__18428__18429;
    var angle_offset__18431 = cljs.core._lookup.call(null, map__18428__18430, "\ufdd0'angle-offset", 0);
    var end_angle__18432 = cljs.core._lookup.call(null, map__18428__18430, "\ufdd0'end-angle", c2.maths.Pi);
    var start_angle__18433 = cljs.core._lookup.call(null, map__18428__18430, "\ufdd0'start-angle", 0);
    var outer_radius__18434 = cljs.core._lookup.call(null, map__18428__18430, "\ufdd0'outer-radius", 1);
    var inner_radius__18435 = cljs.core._lookup.call(null, map__18428__18430, "\ufdd0'inner-radius", 0);
    var r0__18437 = inner_radius__18435;
    var r1__18438 = outer_radius__18434;
    var vec__18436__18439 = cljs.core.sort.call(null, cljs.core.PersistentVector.fromArray([angle_offset__18431 + start_angle__18433, angle_offset__18431 + end_angle__18432], true));
    var a0__18440 = cljs.core.nth.call(null, vec__18436__18439, 0, null);
    var a1__18441 = cljs.core.nth.call(null, vec__18436__18439, 1, null);
    var da__18442 = a1__18441 - a0__18440;
    var large_arc_flag__18443 = da__18442 < c2.maths.Pi ? "0" : "1";
    var s0__18444 = c2.maths.sin.call(null, a0__18440);
    var c0__18445 = c2.maths.cos.call(null, a0__18440);
    var s1__18446 = c2.maths.sin.call(null, a1__18441);
    var c1__18447 = c2.maths.cos.call(null, a1__18441);
    if(da__18442 >= c2.svg.ArcMax) {
      return[cljs.core.str("M0,"), cljs.core.str(r1__18438), cljs.core.str("A"), cljs.core.str(r1__18438), cljs.core.str(","), cljs.core.str(r1__18438), cljs.core.str(" 0 1,1 0,"), cljs.core.str(-r1__18438), cljs.core.str("A"), cljs.core.str(r1__18438), cljs.core.str(","), cljs.core.str(r1__18438), cljs.core.str(" 0 1,1 0,"), cljs.core.str(r1__18438), cljs.core.str(cljs.core.not_EQ_.call(null, 0, r0__18437) ? [cljs.core.str("M0,"), cljs.core.str(r0__18437), cljs.core.str("A"), cljs.core.str(r0__18437), 
      cljs.core.str(","), cljs.core.str(r0__18437), cljs.core.str(" 0 1,0 0,"), cljs.core.str(-r0__18437), cljs.core.str("A"), cljs.core.str(r0__18437), cljs.core.str(","), cljs.core.str(r0__18437), cljs.core.str(" 0 1,0 0,"), cljs.core.str(r0__18437)].join("") : null), cljs.core.str("Z")].join("")
    }else {
      return[cljs.core.str("M"), cljs.core.str(r1__18438 * c0__18445), cljs.core.str(","), cljs.core.str(r1__18438 * s0__18444), cljs.core.str("A"), cljs.core.str(r1__18438), cljs.core.str(","), cljs.core.str(r1__18438), cljs.core.str(" 0 "), cljs.core.str(large_arc_flag__18443), cljs.core.str(",1 "), cljs.core.str(r1__18438 * c1__18447), cljs.core.str(","), cljs.core.str(r1__18438 * s1__18446), cljs.core.str(cljs.core.not_EQ_.call(null, 0, r0__18437) ? [cljs.core.str("L"), cljs.core.str(r0__18437 * 
      c1__18447), cljs.core.str(","), cljs.core.str(r0__18437 * s1__18446), cljs.core.str("A"), cljs.core.str(r0__18437), cljs.core.str(","), cljs.core.str(r0__18437), cljs.core.str(" 0 "), cljs.core.str(large_arc_flag__18443), cljs.core.str(",0 "), cljs.core.str(r0__18437 * c0__18445), cljs.core.str(","), cljs.core.str(r0__18437 * s0__18444)].join("") : "L0,0"), cljs.core.str("Z")].join("")
    }
  };
  var arc = function(var_args) {
    var p__18407 = null;
    if(goog.isDef(var_args)) {
      p__18407 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return arc__delegate.call(this, p__18407)
  };
  arc.cljs$lang$maxFixedArity = 0;
  arc.cljs$lang$applyTo = function(arglist__18448) {
    var p__18407 = cljs.core.seq(arglist__18448);
    return arc__delegate(p__18407)
  };
  arc.cljs$lang$arity$variadic = arc__delegate;
  return arc
}();
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.array");
goog.require("goog.events");
goog.require("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_handler) {
  goog.Disposable.call(this);
  this.handler_ = opt_handler;
  this.keys_ = []
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(!goog.isArray(type)) {
    goog.events.EventHandler.typeArray_[0] = type;
    type = goog.events.EventHandler.typeArray_
  }
  for(var i = 0;i < type.length;i++) {
    var key = goog.events.listen(src, type[i], opt_fn || this, opt_capture || false, opt_handler || this.handler_ || this);
    this.keys_.push(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.listenOnce(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var key = goog.events.listenOnce(src, type, opt_fn || this, opt_capture, opt_handler || this.handler_ || this);
    this.keys_.push(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler || this.handler_, this);
  return this
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  return this.keys_.length
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var listener = goog.events.getListener(src, type, opt_fn || this, opt_capture, opt_handler || this.handler_ || this);
    if(listener) {
      var key = listener.key;
      goog.events.unlistenByKey(key);
      goog.array.remove(this.keys_, key)
    }
  }
  return this
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler || this.handler_, this);
  return this
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.array.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_.length = 0
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll()
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.fx.DragEvent");
goog.provide("goog.fx.Dragger");
goog.provide("goog.fx.Dragger.EventType");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.Event");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.userAgent");
goog.fx.Dragger = function(target, opt_handle, opt_limits) {
  goog.events.EventTarget.call(this);
  this.target = target;
  this.handle = opt_handle || target;
  this.limits = opt_limits || new goog.math.Rect(NaN, NaN, NaN, NaN);
  this.document_ = goog.dom.getOwnerDocument(target);
  this.eventHandler_ = new goog.events.EventHandler(this);
  goog.events.listen(this.handle, [goog.events.EventType.TOUCHSTART, goog.events.EventType.MOUSEDOWN], this.startDrag, false, this)
};
goog.inherits(goog.fx.Dragger, goog.events.EventTarget);
goog.fx.Dragger.HAS_SET_CAPTURE_ = goog.userAgent.IE || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.3");
goog.fx.Dragger.EventType = {EARLY_CANCEL:"earlycancel", START:"start", BEFOREDRAG:"beforedrag", DRAG:"drag", END:"end"};
goog.fx.Dragger.prototype.target;
goog.fx.Dragger.prototype.handle;
goog.fx.Dragger.prototype.limits;
goog.fx.Dragger.prototype.clientX = 0;
goog.fx.Dragger.prototype.clientY = 0;
goog.fx.Dragger.prototype.screenX = 0;
goog.fx.Dragger.prototype.screenY = 0;
goog.fx.Dragger.prototype.startX = 0;
goog.fx.Dragger.prototype.startY = 0;
goog.fx.Dragger.prototype.deltaX = 0;
goog.fx.Dragger.prototype.deltaY = 0;
goog.fx.Dragger.prototype.pageScroll;
goog.fx.Dragger.prototype.enabled_ = true;
goog.fx.Dragger.prototype.dragging_ = false;
goog.fx.Dragger.prototype.hysteresisDistanceSquared_ = 0;
goog.fx.Dragger.prototype.mouseDownTime_ = 0;
goog.fx.Dragger.prototype.document_;
goog.fx.Dragger.prototype.eventHandler_;
goog.fx.Dragger.prototype.scrollTarget_;
goog.fx.Dragger.prototype.ieDragStartCancellingOn_ = false;
goog.fx.Dragger.prototype.getHandler = function() {
  return this.eventHandler_
};
goog.fx.Dragger.prototype.setLimits = function(limits) {
  this.limits = limits || new goog.math.Rect(NaN, NaN, NaN, NaN)
};
goog.fx.Dragger.prototype.setHysteresis = function(distance) {
  this.hysteresisDistanceSquared_ = Math.pow(distance, 2)
};
goog.fx.Dragger.prototype.getHysteresis = function() {
  return Math.sqrt(this.hysteresisDistanceSquared_)
};
goog.fx.Dragger.prototype.setScrollTarget = function(scrollTarget) {
  this.scrollTarget_ = scrollTarget
};
goog.fx.Dragger.prototype.setCancelIeDragStart = function(cancelIeDragStart) {
  this.ieDragStartCancellingOn_ = cancelIeDragStart
};
goog.fx.Dragger.prototype.getEnabled = function() {
  return this.enabled_
};
goog.fx.Dragger.prototype.setEnabled = function(enabled) {
  this.enabled_ = enabled
};
goog.fx.Dragger.prototype.disposeInternal = function() {
  goog.fx.Dragger.superClass_.disposeInternal.call(this);
  goog.events.unlisten(this.handle, [goog.events.EventType.TOUCHSTART, goog.events.EventType.MOUSEDOWN], this.startDrag, false, this);
  this.eventHandler_.dispose();
  delete this.target;
  delete this.handle;
  delete this.eventHandler_
};
goog.fx.Dragger.prototype.startDrag = function(e) {
  var isMouseDown = e.type == goog.events.EventType.MOUSEDOWN;
  if(this.enabled_ && !this.dragging_ && (!isMouseDown || e.isMouseActionButton())) {
    this.maybeReinitTouchEvent_(e);
    if(this.hysteresisDistanceSquared_ == 0) {
      this.initializeDrag_(e);
      if(this.dragging_) {
        e.preventDefault()
      }else {
        return
      }
    }else {
      e.preventDefault()
    }
    this.setupDragHandlers();
    this.clientX = this.startX = e.clientX;
    this.clientY = this.startY = e.clientY;
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    this.deltaX = this.target.offsetLeft;
    this.deltaY = this.target.offsetTop;
    this.pageScroll = goog.dom.getDomHelper(this.document_).getDocumentScroll();
    this.mouseDownTime_ = goog.now()
  }else {
    this.dispatchEvent(goog.fx.Dragger.EventType.EARLY_CANCEL)
  }
};
goog.fx.Dragger.prototype.setupDragHandlers = function() {
  var doc = this.document_;
  var docEl = doc.documentElement;
  var useCapture = !goog.fx.Dragger.HAS_SET_CAPTURE_;
  this.eventHandler_.listen(doc, [goog.events.EventType.TOUCHMOVE, goog.events.EventType.MOUSEMOVE], this.handleMove_, useCapture);
  this.eventHandler_.listen(doc, [goog.events.EventType.TOUCHEND, goog.events.EventType.MOUSEUP], this.endDrag, useCapture);
  if(goog.fx.Dragger.HAS_SET_CAPTURE_) {
    docEl.setCapture(false);
    this.eventHandler_.listen(docEl, goog.events.EventType.LOSECAPTURE, this.endDrag)
  }else {
    this.eventHandler_.listen(goog.dom.getWindow(doc), goog.events.EventType.BLUR, this.endDrag)
  }
  if(goog.userAgent.IE && this.ieDragStartCancellingOn_) {
    this.eventHandler_.listen(doc, goog.events.EventType.DRAGSTART, goog.events.Event.preventDefault)
  }
  if(this.scrollTarget_) {
    this.eventHandler_.listen(this.scrollTarget_, goog.events.EventType.SCROLL, this.onScroll_, useCapture)
  }
};
goog.fx.Dragger.prototype.initializeDrag_ = function(e) {
  var rv = this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.START, this, e.clientX, e.clientY, e));
  if(rv !== false) {
    this.dragging_ = true
  }
};
goog.fx.Dragger.prototype.endDrag = function(e, opt_dragCanceled) {
  this.eventHandler_.removeAll();
  if(goog.fx.Dragger.HAS_SET_CAPTURE_) {
    this.document_.releaseCapture()
  }
  var x = this.limitX(this.deltaX);
  var y = this.limitY(this.deltaY);
  if(this.dragging_) {
    this.maybeReinitTouchEvent_(e);
    this.dragging_ = false;
    var dragCancelled = opt_dragCanceled || e.type == goog.events.EventType.TOUCHCANCEL;
    this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.END, this, e.clientX, e.clientY, e, x, y, dragCancelled))
  }else {
    this.dispatchEvent(goog.fx.Dragger.EventType.EARLY_CANCEL)
  }
  if(e.type == goog.events.EventType.TOUCHEND || e.type == goog.events.EventType.TOUCHCANCEL) {
    e.preventDefault()
  }
};
goog.fx.Dragger.prototype.endDragCancel = function(e) {
  this.endDrag(e, true)
};
goog.fx.Dragger.prototype.maybeReinitTouchEvent_ = function(e) {
  var type = e.type;
  if(type == goog.events.EventType.TOUCHSTART || type == goog.events.EventType.TOUCHMOVE) {
    e.init(e.getBrowserEvent().targetTouches[0], e.currentTarget)
  }else {
    if(type == goog.events.EventType.TOUCHEND || type == goog.events.EventType.TOUCHCANCEL) {
      e.init(e.getBrowserEvent().changedTouches[0], e.currentTarget)
    }
  }
};
goog.fx.Dragger.prototype.handleMove_ = function(e) {
  if(this.enabled_) {
    this.maybeReinitTouchEvent_(e);
    var dx = e.clientX - this.clientX;
    var dy = e.clientY - this.clientY;
    this.clientX = e.clientX;
    this.clientY = e.clientY;
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    if(!this.dragging_) {
      var diffX = this.startX - this.clientX;
      var diffY = this.startY - this.clientY;
      var distance = diffX * diffX + diffY * diffY;
      if(distance > this.hysteresisDistanceSquared_) {
        this.initializeDrag_(e);
        if(!this.dragging_) {
          this.endDrag(e);
          return
        }
      }
    }
    var pos = this.calculatePosition_(dx, dy);
    var x = pos.x;
    var y = pos.y;
    if(this.dragging_) {
      var rv = this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.BEFOREDRAG, this, e.clientX, e.clientY, e, x, y));
      if(rv !== false) {
        this.doDrag(e, x, y, false);
        e.preventDefault()
      }
    }
  }
};
goog.fx.Dragger.prototype.calculatePosition_ = function(dx, dy) {
  var pageScroll = goog.dom.getDomHelper(this.document_).getDocumentScroll();
  dx += pageScroll.x - this.pageScroll.x;
  dy += pageScroll.y - this.pageScroll.y;
  this.pageScroll = pageScroll;
  this.deltaX += dx;
  this.deltaY += dy;
  var x = this.limitX(this.deltaX);
  var y = this.limitY(this.deltaY);
  return new goog.math.Coordinate(x, y)
};
goog.fx.Dragger.prototype.onScroll_ = function(e) {
  var pos = this.calculatePosition_(0, 0);
  e.clientX = this.clientX;
  e.clientY = this.clientY;
  this.doDrag(e, pos.x, pos.y, true)
};
goog.fx.Dragger.prototype.doDrag = function(e, x, y, dragFromScroll) {
  this.defaultAction(x, y);
  this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.DRAG, this, e.clientX, e.clientY, e, x, y))
};
goog.fx.Dragger.prototype.limitX = function(x) {
  var rect = this.limits;
  var left = !isNaN(rect.left) ? rect.left : null;
  var width = !isNaN(rect.width) ? rect.width : 0;
  var maxX = left != null ? left + width : Infinity;
  var minX = left != null ? left : -Infinity;
  return Math.min(maxX, Math.max(minX, x))
};
goog.fx.Dragger.prototype.limitY = function(y) {
  var rect = this.limits;
  var top = !isNaN(rect.top) ? rect.top : null;
  var height = !isNaN(rect.height) ? rect.height : 0;
  var maxY = top != null ? top + height : Infinity;
  var minY = top != null ? top : -Infinity;
  return Math.min(maxY, Math.max(minY, y))
};
goog.fx.Dragger.prototype.defaultAction = function(x, y) {
  this.target.style.left = x + "px";
  this.target.style.top = y + "px"
};
goog.fx.DragEvent = function(type, dragobj, clientX, clientY, browserEvent, opt_actX, opt_actY, opt_dragCanceled) {
  goog.events.Event.call(this, type);
  this.clientX = clientX;
  this.clientY = clientY;
  this.browserEvent = browserEvent;
  this.left = goog.isDef(opt_actX) ? opt_actX : dragobj.deltaX;
  this.top = goog.isDef(opt_actY) ? opt_actY : dragobj.deltaY;
  this.dragger = dragobj;
  this.dragCanceled = !!opt_dragCanceled
};
goog.inherits(goog.fx.DragEvent, goog.events.Event);
goog.provide("vcfvis.brush");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.fx.Dragger");
goog.require("c2.svg");
goog.require("c2.scale");
goog.require("c2.dom");
vcfvis.brush.SVGDrag = function SVGDrag(el) {
  return goog.fx.Dragger.call(this, el)
};
goog.inherits(vcfvis.brush.SVGDrag, goog.fx.Dragger);
vcfvis.brush.SVGDrag.prototype.defaultAction = function(x, y) {
  return"Do nothing"
};
vcfvis.brush.mouse_point = function mouse_point($container, e) {
  var point__11210 = function() {
    var or__3824__auto____11209 = $container.ownerSVGElement;
    if(cljs.core.truth_(or__3824__auto____11209)) {
      return or__3824__auto____11209
    }else {
      return $container
    }
  }().createSVGPoint();
  point__11210.x = e.clientX;
  point__11210.y = e.clientY;
  var point__11211 = point__11210.matrixTransform($container.getScreenCTM().inverse());
  return cljs.core.PersistentVector.fromArray([point__11211.x, point__11211.y], true)
};
vcfvis.brush.resize_path_d = function resize_path_d(height, direction) {
  var vec__11219__11222 = function() {
    var G__11220__11221 = direction;
    if(cljs.core._EQ_.call(null, "\ufdd0'east", G__11220__11221)) {
      return cljs.core.PersistentVector.fromArray([1, 1], true)
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0'west", G__11220__11221)) {
        return cljs.core.PersistentVector.fromArray([-1, 0], true)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(direction)].join(""));
        }else {
          return null
        }
      }
    }
  }();
  var x__11223 = cljs.core.nth.call(null, vec__11219__11222, 0, null);
  var e__11224 = cljs.core.nth.call(null, vec__11219__11222, 1, null);
  return[cljs.core.str("M"), cljs.core.str(0.5 * x__11223), cljs.core.str(","), cljs.core.str(height), cljs.core.str("A6,6 0 0 "), cljs.core.str(e__11224), cljs.core.str(" "), cljs.core.str(6.5 * x__11223), cljs.core.str(","), cljs.core.str(height + 6), cljs.core.str("V"), cljs.core.str(2 * height - 6), cljs.core.str("A6,6 0 0 "), cljs.core.str(e__11224), cljs.core.str(" "), cljs.core.str(0.5 * x__11223), cljs.core.str(","), cljs.core.str(2 * height), cljs.core.str("Z"), cljs.core.str("M"), cljs.core.str(2.5 * 
  x__11223), cljs.core.str(","), cljs.core.str(height + 8), cljs.core.str("V"), cljs.core.str(2 * height - 8), cljs.core.str("M"), cljs.core.str(4.5 * x__11223), cljs.core.str(","), cljs.core.str(height + 8), cljs.core.str("V"), cljs.core.str(2 * height - 8)].join("")
};
vcfvis.brush.init_BANG_ = function init_BANG_(el, scale_x, scale_y) {
  var width__11303 = function() {
    var vec__11299__11300 = (new cljs.core.Keyword("\ufdd0'range")).call(null, scale_x);
    var xmin__11301 = cljs.core.nth.call(null, vec__11299__11300, 0, null);
    var xmax__11302 = cljs.core.nth.call(null, vec__11299__11300, 1, null);
    return xmax__11302 - xmin__11301
  }();
  var ix__11304 = c2.scale.invert.call(null, scale_x);
  var height__11309 = function() {
    var vec__11305__11306 = (new cljs.core.Keyword("\ufdd0'range")).call(null, scale_y);
    var ymin__11307 = cljs.core.nth.call(null, vec__11305__11306, 0, null);
    var ymax__11308 = cljs.core.nth.call(null, vec__11305__11306, 1, null);
    return ymax__11308 - ymin__11307
  }();
  var _BANG_extent__11310 = cljs.core.atom.call(null, cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([0, 0], true), cljs.core.PersistentVector.fromArray([0, 0], true)], true));
  var $brush__11311 = c2.dom.append_BANG_.call(null, el, cljs.core.PersistentVector.fromArray(["\ufdd0'g.brush"], true));
  var co__7961__auto____11323 = function() {
    var co__6213__auto____11322 = new reflex.core.ComputedObservable(null, true, function() {
      var vec__11312__11315 = cljs.core.deref.call(null, _BANG_extent__11310);
      var vec__11313__11316 = cljs.core.nth.call(null, vec__11312__11315, 0, null);
      var x1__11317 = cljs.core.nth.call(null, vec__11313__11316, 0, null);
      var x2__11318 = cljs.core.nth.call(null, vec__11313__11316, 1, null);
      var vec__11314__11319 = cljs.core.nth.call(null, vec__11312__11315, 1, null);
      var y1__11320 = cljs.core.nth.call(null, vec__11314__11319, 0, null);
      var y2__11321 = cljs.core.nth.call(null, vec__11314__11319, 1, null);
      return cljs.core.PersistentVector.fromArray(["\ufdd0'g.brush", cljs.core.ObjMap.fromObject(["\ufdd0'style"], {"\ufdd0'style":cljs.core.ObjMap.fromObject(["\ufdd0'visibility"], {"\ufdd0'visibility":x1__11317 - x2__11318 === 0 ? "hidden" : null})}), cljs.core.PersistentVector.fromArray(["\ufdd0'rect.background", cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":0, "\ufdd0'width":width__11303, "\ufdd0'height":height__11309})], true), cljs.core.PersistentVector.fromArray(["\ufdd0'rect.extent", 
      cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":scale_x.call(null, x1__11317), "\ufdd0'width":scale_x.call(null, x2__11318) - scale_x.call(null, x1__11317), "\ufdd0'height":height__11309})], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.resize.w", cljs.core.PersistentVector.fromArray(["\ufdd0'path", cljs.core.ObjMap.fromObject(["\ufdd0'transform", "\ufdd0'd"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([scale_x.call(null, 
      x1__11317), 0], true)), "\ufdd0'd":vcfvis.brush.resize_path_d.call(null, height__11309 / 3, "\ufdd0'west")})], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.resize.e", cljs.core.PersistentVector.fromArray(["\ufdd0'path", cljs.core.ObjMap.fromObject(["\ufdd0'transform", "\ufdd0'd"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([scale_x.call(null, x2__11318), 0], true)), "\ufdd0'd":vcfvis.brush.resize_path_d.call(null, height__11309 / 3, 
      "\ufdd0'east")})], true)], true)], true)
    }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
    cljs.core.deref.call(null, co__6213__auto____11322);
    return co__6213__auto____11322
  }();
  var $el__7962__auto____11324 = c2.dom.__GT_dom.call(null, $brush__11311);
  singult.core.merge_BANG_.call(null, $el__7962__auto____11324, cljs.core.deref.call(null, co__7961__auto____11323));
  cljs.core.add_watch.call(null, co__7961__auto____11323, "\ufdd0'update-dom", function() {
    return singult.core.merge_BANG_.call(null, $el__7962__auto____11324, cljs.core.deref.call(null, co__7961__auto____11323))
  });
  co__7961__auto____11323;
  var $background__11325 = c2.dom.select.call(null, ".background", $brush__11311);
  var _BANG_creating_QMARK___11326 = cljs.core.atom.call(null, false);
  goog.events.listen($background__11325, "mousedown", function(e) {
    cljs.core.reset_BANG_.call(null, _BANG_creating_QMARK___11326, true);
    var vec__11327__11328 = vcfvis.brush.mouse_point.call(null, $background__11325, e);
    var x__11329 = cljs.core.nth.call(null, vec__11327__11328, 0, null);
    var y__11330 = cljs.core.nth.call(null, vec__11327__11328, 1, null);
    var x__11331 = ix__11304.call(null, x__11329);
    return cljs.core.swap_BANG_.call(null, _BANG_extent__11310, function(p1__11212_SHARP_) {
      return cljs.core.assoc_in.call(null, p1__11212_SHARP_, cljs.core.PersistentVector.fromArray([0], true), cljs.core.PersistentVector.fromArray([x__11331, x__11331], true))
    })
  });
  goog.events.listen($brush__11311, "mouseup", function(_) {
    return cljs.core.reset_BANG_.call(null, _BANG_creating_QMARK___11326, false)
  });
  goog.events.listen($brush__11311, "mousemove", function(e) {
    if(cljs.core.truth_(cljs.core.deref.call(null, _BANG_creating_QMARK___11326))) {
      var vec__11332__11333 = vcfvis.brush.mouse_point.call(null, $background__11325, e);
      var x__11334 = cljs.core.nth.call(null, vec__11332__11333, 0, null);
      var y__11335 = cljs.core.nth.call(null, vec__11332__11333, 1, null);
      var x__11336 = ix__11304.call(null, x__11334);
      return cljs.core.swap_BANG_.call(null, _BANG_extent__11310, function(p__11337) {
        var vec__11338__11340 = p__11337;
        var vec__11339__11341 = cljs.core.nth.call(null, vec__11338__11340, 0, null);
        var x1__11342 = cljs.core.nth.call(null, vec__11339__11341, 0, null);
        var x2__11343 = cljs.core.nth.call(null, vec__11339__11341, 1, null);
        var ys__11344 = cljs.core.nth.call(null, vec__11338__11340, 1, null);
        return cljs.core.PersistentVector.fromArray([x__11336 > x1__11342 ? cljs.core.PersistentVector.fromArray([x1__11342, x__11336], true) : cljs.core.PersistentVector.fromArray([x__11336, x2__11343], true), ys__11344], true)
      })
    }else {
      return null
    }
  });
  goog.events.listen($brush__11311, "mouseout", function(e) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____11345 = e.relatedTarget;
      if(cljs.core.truth_(and__3822__auto____11345)) {
        return goog.dom.contains($brush__11311, e.relatedTarget)
      }else {
        return and__3822__auto____11345
      }
    }())) {
      return null
    }else {
      return cljs.core.reset_BANG_.call(null, _BANG_creating_QMARK___11326, false)
    }
  });
  var _BANG_extent_at_start__11347 = cljs.core.atom.call(null, null);
  var vec__11346__11348 = (new cljs.core.Keyword("\ufdd0'domain")).call(null, scale_x);
  var xmin__11349 = cljs.core.nth.call(null, vec__11346__11348, 0, null);
  var xmax__11350 = cljs.core.nth.call(null, vec__11346__11348, 1, null);
  var min_extent__11351 = ix__11304.call(null, 10);
  var start_drag_BANG___11352 = function() {
    return cljs.core.reset_BANG_.call(null, _BANG_extent_at_start__11347, cljs.core.deref.call(null, _BANG_extent__11310))
  };
  var drag_fn_BANG___11363 = function(dragger, transform_x) {
    return goog.events.listen(dragger, goog.fx.Dragger.EventType.DRAG, function(e) {
      var vec__11353__11355 = cljs.core.deref.call(null, _BANG_extent_at_start__11347);
      var vec__11354__11356 = cljs.core.nth.call(null, vec__11353__11355, 0, null);
      var x1__11357 = cljs.core.nth.call(null, vec__11354__11356, 0, null);
      var x2__11358 = cljs.core.nth.call(null, vec__11354__11356, 1, null);
      var ys__11359 = cljs.core.nth.call(null, vec__11353__11355, 1, null);
      var w__11360 = x2__11358 - x1__11357;
      var dx__11361 = ix__11304.call(null, e.left) - ix__11304.call(null, 0);
      var xs__11362 = transform_x.call(null, dx__11361, x1__11357, x2__11358, w__11360);
      return cljs.core.reset_BANG_.call(null, _BANG_extent__11310, cljs.core.PersistentVector.fromArray([xs__11362, ys__11359], true))
    })
  };
  var dragger__11364 = new vcfvis.brush.SVGDrag(c2.dom.select.call(null, ".extent", $brush__11311));
  var left__11365 = new vcfvis.brush.SVGDrag(c2.dom.select.call(null, ".resize.w", $brush__11311));
  var right__11366 = new vcfvis.brush.SVGDrag(c2.dom.select.call(null, ".resize.e", $brush__11311));
  var G__11367__11368 = cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([dragger__11364, left__11365, right__11366], true));
  if(G__11367__11368) {
    var d__11369 = cljs.core.first.call(null, G__11367__11368);
    var G__11367__11370 = G__11367__11368;
    while(true) {
      goog.events.listen(d__11369, goog.fx.Dragger.EventType.START, start_drag_BANG___11352);
      var temp__3974__auto____11371 = cljs.core.next.call(null, G__11367__11370);
      if(temp__3974__auto____11371) {
        var G__11367__11372 = temp__3974__auto____11371;
        var G__11373 = cljs.core.first.call(null, G__11367__11372);
        var G__11374 = G__11367__11372;
        d__11369 = G__11373;
        G__11367__11370 = G__11374;
        continue
      }else {
      }
      break
    }
  }else {
  }
  drag_fn_BANG___11363.call(null, dragger__11364, function(dx, x1, x2, w) {
    if(dx + x1 < xmin__11349) {
      return cljs.core.PersistentVector.fromArray([xmin__11349, xmin__11349 + w], true)
    }else {
      if(dx + x2 > xmax__11350) {
        return cljs.core.PersistentVector.fromArray([xmax__11350 - w, xmax__11350], true)
      }else {
        if("\ufdd0'else") {
          return cljs.core.PersistentVector.fromArray([dx + x1, dx + x2], true)
        }else {
          return null
        }
      }
    }
  });
  drag_fn_BANG___11363.call(null, left__11365, function(dx, x1, x2, w) {
    if(dx + x1 < xmin__11349) {
      return cljs.core.PersistentVector.fromArray([xmin__11349, x2], true)
    }else {
      if(dx + x1 > x2) {
        return cljs.core.PersistentVector.fromArray([x2 - min_extent__11351, x2], true)
      }else {
        if("\ufdd0'else") {
          return cljs.core.PersistentVector.fromArray([dx + x1, x2], true)
        }else {
          return null
        }
      }
    }
  });
  drag_fn_BANG___11363.call(null, right__11366, function(dx, x1, x2, w) {
    if(dx + x2 > xmax__11350) {
      return cljs.core.PersistentVector.fromArray([x1, xmax__11350], true)
    }else {
      if(dx + x2 < x1) {
        return cljs.core.PersistentVector.fromArray([x1, x1 + min_extent__11351], true)
      }else {
        if("\ufdd0'else") {
          return cljs.core.PersistentVector.fromArray([x1, dx + x2], true)
        }else {
          return null
        }
      }
    }
  });
  return _BANG_extent__11310
};
goog.provide("vcfvis.histogram");
goog.require("cljs.core");
goog.require("c2.core");
goog.require("c2.maths");
goog.require("c2.scale");
goog.require("singult.core");
goog.require("c2.event");
goog.require("c2.core");
goog.require("vcfvis.data");
goog.require("vcfvis.ui");
goog.require("c2.dom");
goog.require("c2.svg");
goog.require("c2.maths");
goog.require("goog.string");
goog.require("vcfvis.brush");
goog.require("vcfvis.core");
vcfvis.histogram.height = vcfvis.ui.hist_height;
vcfvis.histogram.width = vcfvis.ui.hist_width;
vcfvis.histogram.margin = vcfvis.ui.hist_margin;
vcfvis.histogram.inter_hist_margin = vcfvis.ui.inter_hist_margin;
vcfvis.histogram.axis_height = vcfvis.ui.axis_height;
vcfvis.histogram.hist_g_STAR_ = function() {
  var hist_g_STAR___delegate = function(vcf, metric, p__11375) {
    var map__11414__11415 = p__11375;
    var map__11414__11416 = cljs.core.seq_QMARK_.call(null, map__11414__11415) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11414__11415) : map__11414__11415;
    var bars_QMARK___11417 = cljs.core._lookup.call(null, map__11414__11416, "\ufdd0'bars?", true);
    var width__11418 = cljs.core._lookup.call(null, map__11414__11416, "\ufdd0'width", null);
    var height__11419 = cljs.core._lookup.call(null, map__11414__11416, "\ufdd0'height", null);
    var map__11420__11422 = metric;
    var map__11420__11423 = cljs.core.seq_QMARK_.call(null, map__11420__11422) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11420__11422) : map__11420__11422;
    var metric_id__11424 = cljs.core._lookup.call(null, map__11420__11423, "\ufdd0'id", null);
    var scale_x__11425 = cljs.core._lookup.call(null, map__11420__11423, "\ufdd0'scale-x", null);
    var map__11421__11426 = cljs.core.get_in.call(null, vcf, cljs.core.PersistentVector.fromArray(["\ufdd0'cf", metric_id__11424], true));
    var map__11421__11427 = cljs.core.seq_QMARK_.call(null, map__11421__11426) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11421__11426) : map__11421__11426;
    var bin_width__11428 = cljs.core._lookup.call(null, map__11421__11427, "\ufdd0'bin-width", null);
    var binned__11429 = cljs.core._lookup.call(null, map__11421__11427, "\ufdd0'binned", null);
    var dimension__11430 = cljs.core._lookup.call(null, map__11421__11427, "\ufdd0'dimension", null);
    var max_val__11431 = cljs.core.first.call(null, binned__11429.top(1))["value"];
    var no_data_QMARK___11432 = max_val__11431 === 0;
    var scale_y__11435 = function() {
      var G__11433__11434 = cljs.core.get_in.call(null, metric, cljs.core.PersistentVector.fromArray(["\ufdd0'y-scale", "\ufdd0'type"], true), "\ufdd0'linear");
      if(cljs.core._EQ_.call(null, "\ufdd0'log", G__11433__11434)) {
        return c2.scale.log.call(null, "\ufdd0'domain", cljs.core.PersistentVector.fromArray([1, max_val__11431], true), "\ufdd0'range", cljs.core.PersistentVector.fromArray([0, height__11419], true))
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'linear", G__11433__11434)) {
          return c2.scale.linear.call(null, "\ufdd0'domain", cljs.core.PersistentVector.fromArray([0, max_val__11431], true), "\ufdd0'range", cljs.core.PersistentVector.fromArray([0, height__11419], true))
        }else {
          if("\ufdd0'else") {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.core.get_in.call(null, metric, cljs.core.PersistentVector.fromArray(["\ufdd0'y-scale", "\ufdd0'type"], true), "\ufdd0'linear"))].join(""));
          }else {
            return null
          }
        }
      }
    }();
    var scale_x__11436 = cljs.core.assoc_in.call(null, scale_x__11425, cljs.core.PersistentVector.fromArray(["\ufdd0'range", 1], true), width__11418);
    var dx__11437 = scale_x__11436.call(null, bin_width__11428) - scale_x__11436.call(null, 0);
    return cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.PersistentVector.fromArray(["\ufdd0'text.message", cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'y"], {"\ufdd0'x":width__11418 / 2, "\ufdd0'y":height__11419 / 2}), no_data_QMARK___11432 ? "No available data; try clearing filters on other dimensions." : null], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.data-frame", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":[cljs.core.str(c2.svg.translate.call(null, 
    cljs.core.PersistentVector.fromArray([0, height__11419], true))), cljs.core.str(c2.svg.scale.call(null, cljs.core.PersistentVector.fromArray([1, -1], true)))].join("")}), cljs.core.PersistentVector.fromArray(["\ufdd0'g.distribution", no_data_QMARK___11432 ? null : cljs.core.truth_(bars_QMARK___11417) ? function() {
      var iter__2363__auto____11448 = function iter__11438(s__11439) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__11439__11444 = s__11439;
          while(true) {
            if(cljs.core.seq.call(null, s__11439__11444)) {
              var d__11445 = cljs.core.first.call(null, s__11439__11444);
              return cljs.core.cons.call(null, function() {
                var x__11446 = d__11445["key"];
                var count__11447 = d__11445["value"];
                return cljs.core.PersistentVector.fromArray(["\ufdd0'rect.bar", cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":scale_x__11436.call(null, x__11446), "\ufdd0'width":dx__11437, "\ufdd0'height":scale_y__11435.call(null, count__11447)})], true)
              }(), iter__11438.call(null, cljs.core.rest.call(null, s__11439__11444)))
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__2363__auto____11448.call(null, binned__11429.all())
    }() : cljs.core.PersistentVector.fromArray(["\ufdd0'path", cljs.core.ObjMap.fromObject(["\ufdd0'd"], {"\ufdd0'd":[cljs.core.str("M"), cljs.core.str(binned__11429.all().map(function(d) {
      var x__11449 = d["key"];
      var count__11450 = d["value"];
      var h__11451 = scale_y__11435.call(null, count__11450);
      return[cljs.core.str(scale_x__11436.call(null, x__11449)), cljs.core.str(","), cljs.core.str(h__11451)].join("")
    }).join("L"))].join("")})], true)], true)], true)], true)
  };
  var hist_g_STAR_ = function(vcf, metric, var_args) {
    var p__11375 = null;
    if(goog.isDef(var_args)) {
      p__11375 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return hist_g_STAR___delegate.call(this, vcf, metric, p__11375)
  };
  hist_g_STAR_.cljs$lang$maxFixedArity = 2;
  hist_g_STAR_.cljs$lang$applyTo = function(arglist__11452) {
    var vcf = cljs.core.first(arglist__11452);
    var metric = cljs.core.first(cljs.core.next(arglist__11452));
    var p__11375 = cljs.core.rest(cljs.core.next(arglist__11452));
    return hist_g_STAR___delegate(vcf, metric, p__11375)
  };
  hist_g_STAR_.cljs$lang$arity$variadic = hist_g_STAR___delegate;
  return hist_g_STAR_
}();
vcfvis.histogram.draw_mini_hist_for_metric_BANG_ = function draw_mini_hist_for_metric_BANG_(m) {
  var vcfs__11470 = cljs.core.deref.call(null, vcfvis.core._BANG_vcfs);
  var n__11471 = cljs.core.count.call(null, vcfs__11470);
  var mini_width__11472 = parseFloat(c2.dom.style.call(null, "#metrics", "\ufdd0'width"));
  var mini_height__11473 = 100;
  return singult.core.merge_BANG_.call(null, c2.dom.select.call(null, [cljs.core.str("#metric-"), cljs.core.str((new cljs.core.Keyword("\ufdd0'id")).call(null, m)), cljs.core.str(" .mini-hist")].join("")), cljs.core.PersistentVector.fromArray(["\ufdd0'div.mini-hist", cljs.core.PersistentVector.fromArray(["\ufdd0'svg", cljs.core.ObjMap.fromObject(["\ufdd0'width", "\ufdd0'height"], {"\ufdd0'width":vcfvis.histogram.width, "\ufdd0'height":n__11471 * mini_height__11473 + (n__11471 - 1) * vcfvis.histogram.inter_hist_margin}), 
  function() {
    var iter__2363__auto____11486 = function iter__11474(s__11475) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__11475__11481 = s__11475;
        while(true) {
          if(cljs.core.seq.call(null, s__11475__11481)) {
            var vec__11482__11483 = cljs.core.first.call(null, s__11475__11481);
            var vcf__11484 = cljs.core.nth.call(null, vec__11482__11483, 0, null);
            var idx__11485 = cljs.core.nth.call(null, vec__11482__11483, 1, null);
            return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([0, idx__11485 * (mini_height__11473 + vcfvis.histogram.inter_hist_margin)], true))}), vcfvis.histogram.hist_g_STAR_.call(null, vcf__11484, m, "\ufdd0'height", mini_height__11473, "\ufdd0'width", mini_width__11472, "\ufdd0'bars?", true)], true), iter__11474.call(null, cljs.core.rest.call(null, 
            s__11475__11481)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____11486.call(null, cljs.core.map.call(null, cljs.core.vector, vcfs__11470, cljs.core.range.call(null)))
  }()], true)], true))
};
vcfvis.histogram.draw_histogram_BANG_ = function draw_histogram_BANG_(vcfs, metric) {
  var map__11544__11545 = metric;
  var map__11544__11546 = cljs.core.seq_QMARK_.call(null, map__11544__11545) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11544__11545) : map__11544__11545;
  var x__11547 = cljs.core._lookup.call(null, map__11544__11546, "\ufdd0'scale-x", null);
  var tick_range__11548 = -cljs.core.apply.call(null, cljs.core._, (new cljs.core.Keyword("\ufdd0'domain")).call(null, x__11547)) / cljs.core.count.call(null, (new cljs.core.Keyword("\ufdd0'ticks")).call(null, x__11547));
  var n__11549 = cljs.core.count.call(null, vcfs);
  var hist_height__11550 = (vcfvis.histogram.height - n__11549 * (vcfvis.histogram.inter_hist_margin - 1)) / n__11549;
  singult.core.merge_BANG_.call(null, c2.dom.select.call(null, "#main-hist"), cljs.core.PersistentVector.fromArray(["\ufdd0'div#main-hist", cljs.core.PersistentVector.fromArray(["\ufdd0'div#histograms", cljs.core.PersistentVector.fromArray(["\ufdd0'div.labels", function() {
    var iter__2363__auto____11563 = function iter__11551(s__11552) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__11552__11558 = s__11552;
        while(true) {
          if(cljs.core.seq.call(null, s__11552__11558)) {
            var vec__11559__11560 = cljs.core.first.call(null, s__11552__11558);
            var vcf__11561 = cljs.core.nth.call(null, vec__11559__11560, 0, null);
            var idx__11562 = cljs.core.nth.call(null, vec__11559__11560, 1, null);
            return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'span.label", cljs.core.ObjMap.fromObject(["\ufdd0'style"], {"\ufdd0'style":cljs.core.ObjMap.fromObject(["\ufdd0'top"], {"\ufdd0'top":[cljs.core.str(idx__11562 * (hist_height__11550 + vcfvis.histogram.inter_hist_margin)), cljs.core.str("px")].join("")})}), vcf__11561.call(null, "\ufdd0'file-url")], true), iter__11551.call(null, cljs.core.rest.call(null, s__11552__11558)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____11563.call(null, cljs.core.map.call(null, cljs.core.vector, vcfs, cljs.core.range.call(null)))
  }()], true), cljs.core.PersistentVector.fromArray(["\ufdd0'svg.histogram", cljs.core.ObjMap.fromObject(["\ufdd0'width", "\ufdd0'height"], {"\ufdd0'width":vcfvis.histogram.width + 2 * vcfvis.histogram.margin, "\ufdd0'height":vcfvis.histogram.height + (n__11549 - 1) * vcfvis.histogram.inter_hist_margin}), cljs.core.PersistentVector.fromArray(["\ufdd0'g.hist-container", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([vcfvis.histogram.margin, 
  0], true))}), function() {
    var iter__2363__auto____11576 = function iter__11564(s__11565) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__11565__11571 = s__11565;
        while(true) {
          if(cljs.core.seq.call(null, s__11565__11571)) {
            var vec__11572__11573 = cljs.core.first.call(null, s__11565__11571);
            var vcf__11574 = cljs.core.nth.call(null, vec__11572__11573, 0, null);
            var idx__11575 = cljs.core.nth.call(null, vec__11572__11573, 1, null);
            return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([0, idx__11575 * (hist_height__11550 + vcfvis.histogram.inter_hist_margin)], true))}), vcfvis.histogram.hist_g_STAR_.call(null, vcf__11574, metric, "\ufdd0'height", hist_height__11550, "\ufdd0'width", vcfvis.histogram.width)], true), iter__11564.call(null, cljs.core.rest.call(null, 
            s__11565__11571)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____11576.call(null, cljs.core.map.call(null, cljs.core.vector, vcfs, cljs.core.range.call(null)))
  }()], true)], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'div#hist-axis", cljs.core.PersistentVector.fromArray(["\ufdd0'div.axis.abscissa", cljs.core.PersistentVector.fromArray(["\ufdd0'svg", cljs.core.ObjMap.fromObject(["\ufdd0'width", "\ufdd0'height"], {"\ufdd0'width":vcfvis.histogram.width + 2 * vcfvis.histogram.margin, "\ufdd0'height":vcfvis.histogram.axis_height}), cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, 
  cljs.core.PersistentVector.fromArray([vcfvis.histogram.margin, 2], true))}), c2.svg.axis.call(null, x__11547, (new cljs.core.Keyword("\ufdd0'ticks")).call(null, x__11547), "\ufdd0'orientation", "\ufdd0'bottom", "\ufdd0'formatter", cljs.core.partial.call(null, goog.string.format, tick_range__11548 < 0.075 ? "%.2f" : "%.1f"))], true)], true)], true)], true)], true));
  var _BANG_b__11577 = vcfvis.brush.init_BANG_.call(null, "#histograms svg .hist-container", x__11547, c2.scale.linear.call(null, "\ufdd0'range", cljs.core.PersistentVector.fromArray([0, vcfvis.histogram.height], true)));
  var temp__3974__auto____11578 = cljs.core.deref.call(null, metric.call(null, "\ufdd0'!filter-extent"));
  if(cljs.core.truth_(temp__3974__auto____11578)) {
    var initial_extent__11579 = temp__3974__auto____11578;
    var vec__11580__11582 = metric.call(null, "\ufdd0'range");
    var r_min__11583 = cljs.core.nth.call(null, vec__11580__11582, 0, null);
    var r_max__11584 = cljs.core.nth.call(null, vec__11580__11582, 1, null);
    var vec__11581__11585 = initial_extent__11579;
    var start__11586 = cljs.core.nth.call(null, vec__11581__11585, 0, null);
    var end__11587 = cljs.core.nth.call(null, vec__11581__11585, 1, null);
    cljs.core.reset_BANG_.call(null, _BANG_b__11577, cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([start__11586 > r_min__11583 ? start__11586 : r_min__11583, end__11587 < r_max__11584 ? end__11587 : r_max__11584], true), cljs.core.PersistentVector.fromArray([0, 0], true)], true))
  }else {
  }
  return cljs.core.add_watch.call(null, _BANG_b__11577, "\ufdd0'onbrush", function(_11589, _11590, _, p__11588) {
    var vec__11591__11592 = p__11588;
    var xs__11593 = cljs.core.nth.call(null, vec__11591__11592, 0, null);
    var ___11594 = cljs.core.nth.call(null, vec__11591__11592, 1, null);
    var G__11595__11596 = cljs.core.seq.call(null, cljs.core.deref.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_));
    if(G__11595__11596) {
      var s__9347__auto____11597 = cljs.core.first.call(null, G__11595__11596);
      var G__11595__11598 = G__11595__11596;
      while(true) {
        s__9347__auto____11597.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'metric-brushed", "\ufdd0'extent"], {"\ufdd0'metric-brushed":metric, "\ufdd0'extent":xs__11593}));
        var temp__3974__auto____11599 = cljs.core.next.call(null, G__11595__11598);
        if(temp__3974__auto____11599) {
          var G__11595__11600 = temp__3974__auto____11599;
          var G__11601 = cljs.core.first.call(null, G__11595__11600);
          var G__11602 = G__11595__11600;
          s__9347__auto____11597 = G__11601;
          G__11595__11598 = G__11602;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  })
};
vcfvis.histogram.clear_histogram_BANG_ = function clear_histogram_BANG_() {
  singult.core.merge_BANG_.call(null, c2.dom.select.call(null, "#main-hist"), cljs.core.PersistentVector.fromArray(["\ufdd0'div#main-hist", cljs.core.PersistentVector.fromArray(["\ufdd0'div#histograms"], true), cljs.core.PersistentVector.fromArray(["\ufdd0'div#hist-axis"], true)], true));
  var G__11609__11610 = cljs.core.seq.call(null, cljs.core.deref.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_));
  if(G__11609__11610) {
    var s__9347__auto____11611 = cljs.core.first.call(null, G__11609__11610);
    var G__11609__11612 = G__11609__11610;
    while(true) {
      s__9347__auto____11611.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'count-updated"], {"\ufdd0'count-updated":null}));
      var temp__3974__auto____11613 = cljs.core.next.call(null, G__11609__11612);
      if(temp__3974__auto____11613) {
        var G__11609__11614 = temp__3974__auto____11613;
        var G__11615 = cljs.core.first.call(null, G__11609__11614);
        var G__11616 = G__11609__11614;
        s__9347__auto____11611 = G__11615;
        G__11609__11612 = G__11616;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
vcfvis.histogram.draw_mini_hists_BANG_ = function draw_mini_hists_BANG_() {
  var G__11623__11624 = cljs.core.seq.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_visible_metrics));
  if(G__11623__11624) {
    var m__11625 = cljs.core.first.call(null, G__11623__11624);
    var G__11623__11626 = G__11623__11624;
    while(true) {
      vcfvis.histogram.draw_mini_hist_for_metric_BANG_.call(null, m__11625);
      var temp__3974__auto____11627 = cljs.core.next.call(null, G__11623__11626);
      if(temp__3974__auto____11627) {
        var G__11623__11628 = temp__3974__auto____11627;
        var G__11629 = cljs.core.first.call(null, G__11623__11628);
        var G__11630 = G__11623__11628;
        m__11625 = G__11629;
        G__11623__11626 = G__11630;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
var co__6219__auto____11634 = function() {
  var co__6213__auto____11633 = new reflex.core.ComputedObservable(null, true, function() {
    var vcfs__11631 = cljs.core.deref.call(null, vcfvis.core._BANG_vcfs);
    var metric__11632 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
    vcfvis.histogram.clear_histogram_BANG_.call(null);
    if(cljs.core.seq.call(null, vcfs__11631)) {
      vcfvis.histogram.draw_histogram_BANG_.call(null, vcfs__11631, metric__11632);
      return vcfvis.histogram.draw_mini_hists_BANG_.call(null)
    }else {
      return null
    }
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6213__auto____11633);
  return co__6213__auto____11633
}();
cljs.core.add_watch.call(null, co__6219__auto____11634, "\ufdd0'reflex-constraint", function() {
  var vcfs__11635 = cljs.core.deref.call(null, vcfvis.core._BANG_vcfs);
  var metric__11636 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
  vcfvis.histogram.clear_histogram_BANG_.call(null);
  if(cljs.core.seq.call(null, vcfs__11635)) {
    vcfvis.histogram.draw_histogram_BANG_.call(null, vcfs__11635, metric__11636);
    return vcfvis.histogram.draw_mini_hists_BANG_.call(null)
  }else {
    return null
  }
});
co__6219__auto____11634;
goog.provide("vcfvis.controls");
goog.require("cljs.core");
goog.require("singult.core");
goog.require("c2.util");
goog.require("chosen.core");
goog.require("c2.core");
goog.require("c2.event");
goog.require("c2.dom");
goog.require("vcfvis.data");
goog.require("vcfvis.histogram");
goog.require("vcfvis.core");
goog.require("c2.util");
goog.require("c2.core");
goog.require("singult.core");
goog.require("chosen.core");
vcfvis.controls.file_selector = function() {
  var $selector__10965 = c2.dom.append_BANG_.call(null, "#file-selector", cljs.core.PersistentVector.fromArray(["\ufdd0'select", cljs.core.ObjMap.fromObject(["\ufdd0'multiple", "\ufdd0'data-placeholder"], {"\ufdd0'multiple":"multiple", "\ufdd0'data-placeholder":"Select VCF files"})], true));
  var _BANG_c__10966 = chosen.core.ichooseu_BANG_.call(null, $selector__10965, "\ufdd0'search-contains", true);
  var co__6219__auto____10975 = function() {
    var co__6213__auto____10974 = new reflex.core.ComputedObservable(null, true, function() {
      return chosen.core.options.call(null, _BANG_c__10966, cljs.core.map.call(null, function(p__10967) {
        var map__10968__10969 = p__10967;
        var map__10968__10970 = cljs.core.seq_QMARK_.call(null, map__10968__10969) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10968__10969) : map__10968__10969;
        var id__10971 = cljs.core._lookup.call(null, map__10968__10970, "\ufdd0'id", null);
        var folder__10972 = cljs.core._lookup.call(null, map__10968__10970, "\ufdd0'folder", null);
        var filename__10973 = cljs.core._lookup.call(null, map__10968__10970, "\ufdd0'filename", null);
        return cljs.core.ObjMap.fromObject(["\ufdd0'text", "\ufdd0'value", "\ufdd0'group"], {"\ufdd0'text":filename__10973, "\ufdd0'value":id__10971, "\ufdd0'group":folder__10972})
      }, cljs.core.deref.call(null, vcfvis.core._BANG_available_files)))
    }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
    cljs.core.deref.call(null, co__6213__auto____10974);
    return co__6213__auto____10974
  }();
  cljs.core.add_watch.call(null, co__6219__auto____10975, "\ufdd0'reflex-constraint", function() {
    return chosen.core.options.call(null, _BANG_c__10966, cljs.core.map.call(null, function(p__10976) {
      var map__10977__10978 = p__10976;
      var map__10977__10979 = cljs.core.seq_QMARK_.call(null, map__10977__10978) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10977__10978) : map__10977__10978;
      var id__10980 = cljs.core._lookup.call(null, map__10977__10979, "\ufdd0'id", null);
      var folder__10981 = cljs.core._lookup.call(null, map__10977__10979, "\ufdd0'folder", null);
      var filename__10982 = cljs.core._lookup.call(null, map__10977__10979, "\ufdd0'filename", null);
      return cljs.core.ObjMap.fromObject(["\ufdd0'text", "\ufdd0'value", "\ufdd0'group"], {"\ufdd0'text":filename__10982, "\ufdd0'value":id__10980, "\ufdd0'group":folder__10981})
    }, cljs.core.deref.call(null, vcfvis.core._BANG_available_files)))
  });
  co__6219__auto____10975;
  return _BANG_c__10966
}();
var co__7961__auto____11003 = function() {
  var co__6213__auto____11002 = new reflex.core.ComputedObservable(null, true, function() {
    var shared__10983 = cljs.core.set.call(null, cljs.core.map.call(null, "\ufdd0'id", cljs.core.deref.call(null, vcfvis.core._BANG_shared_metrics)));
    var selected_metric__10984 = cljs.core.deref.call(null, vcfvis.core._BANG_metric);
    var metrics__10992 = function() {
      var iter__2363__auto____10991 = function iter__10985(s__10986) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__10986__10989 = s__10986;
          while(true) {
            if(cljs.core.seq.call(null, s__10986__10989)) {
              var m__10990 = cljs.core.first.call(null, s__10986__10989);
              return cljs.core.cons.call(null, cljs.core.assoc.call(null, m__10990, "\ufdd0'selected?", cljs.core._EQ_.call(null, m__10990, selected_metric__10984), "\ufdd0'visible?", vcfvis.core.visible_metric_QMARK_.call(null, m__10990), "\ufdd0'shared?", cljs.core.contains_QMARK_.call(null, shared__10983, m__10990.call(null, "\ufdd0'id"))), iter__10985.call(null, cljs.core.rest.call(null, s__10986__10989)))
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__2363__auto____10991.call(null, cljs.core.vals.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_context).call(null, "\ufdd0'metrics")))
    }();
    return cljs.core.PersistentVector.fromArray(["\ufdd0'div#metrics", c2.core.unify.call(null, metrics__10992, function(p__10993) {
      var map__10994__10995 = p__10993;
      var map__10994__10996 = cljs.core.seq_QMARK_.call(null, map__10994__10995) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10994__10995) : map__10994__10995;
      var shared_QMARK___10997 = cljs.core._lookup.call(null, map__10994__10996, "\ufdd0'shared?", null);
      var visible_QMARK___10998 = cljs.core._lookup.call(null, map__10994__10996, "\ufdd0'visible?", null);
      var selected_QMARK___10999 = cljs.core._lookup.call(null, map__10994__10996, "\ufdd0'selected?", null);
      var desc__11000 = cljs.core._lookup.call(null, map__10994__10996, "\ufdd0'desc", null);
      var id__11001 = cljs.core._lookup.call(null, map__10994__10996, "\ufdd0'id", null);
      return cljs.core.PersistentVector.fromArray(["\ufdd0'div.metric", cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":[cljs.core.str("metric-"), cljs.core.str(id__11001)].join(""), "\ufdd0'class":[cljs.core.str(cljs.core.truth_(selected_QMARK___10999) ? "selected" : null), cljs.core.str(" "), cljs.core.str(cljs.core.truth_(visible_QMARK___10998) ? "expanded" : null), cljs.core.str(" "), cljs.core.str(cljs.core.truth_(shared_QMARK___10997) ? null : "disabled")].join("")}), 
      cljs.core.PersistentVector.fromArray(["\ufdd0'h2", id__11001], true), cljs.core.PersistentVector.fromArray(["\ufdd0'button.expand-btn", "V"], true), cljs.core.PersistentVector.fromArray(["\ufdd0'span.desc", desc__11000], true), cljs.core.PersistentVector.fromArray(["\ufdd0'div.mini-hist", singult.core.ignore.call(null)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'div.sort-handle"], true)], true)
    }, "\ufdd0'key-fn", function(p1__10964_SHARP_) {
      return(new cljs.core.Keyword("\ufdd0'id")).call(null, p1__10964_SHARP_)
    })], true)
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6213__auto____11002);
  return co__6213__auto____11002
}();
var $el__7962__auto____11004 = c2.dom.__GT_dom.call(null, "#metrics");
singult.core.merge_BANG_.call(null, $el__7962__auto____11004, cljs.core.deref.call(null, co__7961__auto____11003));
cljs.core.add_watch.call(null, co__7961__auto____11003, "\ufdd0'update-dom", function() {
  return singult.core.merge_BANG_.call(null, $el__7962__auto____11004, cljs.core.deref.call(null, co__7961__auto____11003))
});
co__7961__auto____11003;
jQuery("#metrics").sortable({"handle":".sort-handle"});
c2.event.on.call(null, "#metrics", "\ufdd0'click", function(d, _, e) {
  if(cljs.core.truth_(c2.dom.matches_selector_QMARK_.call(null, e.target, ".expand-btn"))) {
    return null
  }else {
    return vcfvis.core.select_metric_BANG_.call(null, cljs.core.dissoc.call(null, d, "\ufdd0'selected?", "\ufdd0'shared?", "\ufdd0'visible?"))
  }
});
c2.event.on.call(null, "#metrics", ".expand-btn", "\ufdd0'click", function(d) {
  var m__11005 = cljs.core.dissoc.call(null, d, "\ufdd0'selected?", "\ufdd0'shared?", "\ufdd0'visible?");
  if(cljs.core.truth_(vcfvis.core.visible_metric_QMARK_.call(null, m__11005))) {
  }else {
    vcfvis.histogram.draw_mini_hist_for_metric_BANG_.call(null, m__11005)
  }
  return vcfvis.core.toggle_visible_metric_BANG_.call(null, m__11005)
});
cljs.core.swap_BANG_.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_, cljs.core.conj, function(m__9353__auto__) {
  try {
    if(function() {
      var G__11011__11012 = m__9353__auto__;
      if(G__11011__11012) {
        if(function() {
          var or__3824__auto____11013 = G__11011__11012.cljs$lang$protocol_mask$partition0$ & 256;
          if(or__3824__auto____11013) {
            return or__3824__auto____11013
          }else {
            return G__11011__11012.cljs$core$ILookup$
          }
        }()) {
          return true
        }else {
          if(!G__11011__11012.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__11011__11012)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__11011__11012)
      }
    }()) {
      var G__11006__11015 = function() {
        var val__6603__auto____11014 = cljs.core._lookup.call(null, m__9353__auto__, "\ufdd0'filter-updated", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6603__auto____11014, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6603__auto____11014
        }
      }();
      vcfvis.histogram.draw_mini_hists_BANG_.call(null);
      var G__11016__11017 = cljs.core.seq.call(null, cljs.core.deref.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_));
      if(G__11016__11017) {
        var s__9347__auto____11018 = cljs.core.first.call(null, G__11016__11017);
        var G__11016__11019 = G__11016__11017;
        while(true) {
          s__9347__auto____11018.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'count-updated"], {"\ufdd0'count-updated":cljs.core.get_in.call(null, cljs.core.first.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)), cljs.core.PersistentVector.fromArray(["\ufdd0'cf", "\ufdd0'all"], true)).value()}));
          var temp__3974__auto____11020 = cljs.core.next.call(null, G__11016__11019);
          if(temp__3974__auto____11020) {
            var G__11016__11021 = temp__3974__auto____11020;
            var G__11022 = cljs.core.first.call(null, G__11016__11021);
            var G__11023 = G__11016__11021;
            s__9347__auto____11018 = G__11022;
            G__11016__11019 = G__11023;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    }else {
      if("\ufdd0'else") {
        throw 0;
      }else {
        return null
      }
    }
  }catch(e__7036__auto__) {
    if(e__7036__auto__ === 0) {
      var G__11007__11010 = m__9353__auto__;
      return null
    }else {
      throw e__7036__auto__;
    }
  }
});
cljs.core.swap_BANG_.call(null, dubstep.pubsub._STAR__BANG_channel_STAR_, cljs.core.conj, function(m__9353__auto__) {
  try {
    if(function() {
      var G__11028__11029 = m__9353__auto__;
      if(G__11028__11029) {
        if(function() {
          var or__3824__auto____11030 = G__11028__11029.cljs$lang$protocol_mask$partition0$ & 256;
          if(or__3824__auto____11030) {
            return or__3824__auto____11030
          }else {
            return G__11028__11029.cljs$core$ILookup$
          }
        }()) {
          return true
        }else {
          if(!G__11028__11029.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__11028__11029)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__11028__11029)
      }
    }()) {
      var x__11032 = function() {
        var val__6603__auto____11031 = cljs.core._lookup.call(null, m__9353__auto__, "\ufdd0'count-updated", "\ufdd0'clojure.core.match/not-found");
        if(cljs.core._EQ_.call(null, val__6603__auto____11031, "\ufdd0'clojure.core.match/not-found")) {
          throw 0;
        }else {
          return val__6603__auto____11031
        }
      }();
      c2.dom.text.call(null, "#count", x__11032);
      return c2.dom.style.call(null, "#count", "\ufdd0'visibility", x__11032 == null ? "hidden" : "visible")
    }else {
      if("\ufdd0'else") {
        throw 0;
      }else {
        return null
      }
    }
  }catch(e__7036__auto__) {
    if(e__7036__auto__ === 0) {
      var G__11024__11027 = m__9353__auto__;
      return null
    }else {
      throw e__7036__auto__;
    }
  }
});
var $btn__11033 = c2.dom.select.call(null, "#filter-btn");
var co__7961__auto____11037 = function() {
  var co__6213__auto____11036 = new reflex.core.ComputedObservable(null, true, function() {
    var G__11034__11035 = cljs.core._lookup.call(null, cljs.core.deref.call(null, vcfvis.data._BANG_analysis_status), cljs.core._lookup.call(null, cljs.core.first.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)), "\ufdd0'file-url", null), null);
    if(cljs.core._EQ_.call(null, null, G__11034__11035)) {
      return cljs.core.PersistentVector.fromArray(["\ufdd0'button#filter-btn.btn", cljs.core.ObjMap.fromObject(["\ufdd0'properties"], {"\ufdd0'properties":cljs.core.ObjMap.fromObject(["\ufdd0'disabled"], {"\ufdd0'disabled":false})}), "Export subset"], true)
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0'running", G__11034__11035)) {
        return cljs.core.PersistentVector.fromArray(["\ufdd0'button#filter-btn.btn", cljs.core.ObjMap.fromObject(["\ufdd0'properties"], {"\ufdd0'properties":cljs.core.ObjMap.fromObject(["\ufdd0'disabled"], {"\ufdd0'disabled":true})}), "Running..."], true)
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'completed", G__11034__11035)) {
          return cljs.core.PersistentVector.fromArray(["\ufdd0'button#filter-btn.btn", cljs.core.ObjMap.fromObject(["\ufdd0'properties"], {"\ufdd0'properties":cljs.core.ObjMap.fromObject(["\ufdd0'disabled"], {"\ufdd0'disabled":true})}), "Completed"], true)
        }else {
          if("\ufdd0'else") {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.core._lookup.call(null, cljs.core.deref.call(null, vcfvis.data._BANG_analysis_status), cljs.core._lookup.call(null, cljs.core.first.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)), "\ufdd0'file-url", null), null))].join(""));
          }else {
            return null
          }
        }
      }
    }
  }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
  cljs.core.deref.call(null, co__6213__auto____11036);
  return co__6213__auto____11036
}();
var $el__7962__auto____11038 = c2.dom.__GT_dom.call(null, $btn__11033);
singult.core.merge_BANG_.call(null, $el__7962__auto____11038, cljs.core.deref.call(null, co__7961__auto____11037));
cljs.core.add_watch.call(null, co__7961__auto____11037, "\ufdd0'update-dom", function() {
  return singult.core.merge_BANG_.call(null, $el__7962__auto____11038, cljs.core.deref.call(null, co__7961__auto____11037))
});
co__7961__auto____11037;
c2.event.on_raw.call(null, $btn__11033, "\ufdd0'click", function(_) {
  return vcfvis.data.filter_analysis.call(null, cljs.core._lookup.call(null, cljs.core.first.call(null, cljs.core.deref.call(null, vcfvis.core._BANG_vcfs)), "\ufdd0'file-url", null), cljs.core.deref.call(null, vcfvis.core._BANG_filters))
});
goog.provide("vcfvis.main");
goog.require("cljs.core");
goog.require("c2.util");
goog.require("vcfvis.controls");
goog.require("vcfvis.ui");
goog.require("vcfvis.data");
goog.require("vcfvis.core");
goog.require("domina");
goog.require("c2.util");
cljs.core.add_watch.call(null, vcfvis.controls.file_selector, "\ufdd0'load-metrics", function(files) {
  var new_files__11637 = vcfvis.core.check_new_vcfs_BANG_.call(null, files);
  if(cljs.core.seq.call(null, new_files__11637)) {
    jQuery("#waiting-modal").modal("show");
    var G__11638__11639 = cljs.core.seq.call(null, new_files__11637);
    if(G__11638__11639) {
      var f__11640 = cljs.core.first.call(null, G__11638__11639);
      var G__11638__11641 = G__11638__11639;
      while(true) {
        vcfvis.data.load_vcf.call(null, f__11640, function(f__11640, G__11638__11641) {
          return function(vcf) {
            jQuery("#waiting-modal").modal("hide");
            return cljs.core.swap_BANG_.call(null, vcfvis.core._BANG_vcfs, cljs.core.conj, vcf)
          }
        }(f__11640, G__11638__11641));
        var temp__3974__auto____11642 = cljs.core.next.call(null, G__11638__11641);
        if(temp__3974__auto____11642) {
          var G__11638__11643 = temp__3974__auto____11642;
          var G__11644 = cljs.core.first.call(null, G__11638__11643);
          var G__11645 = G__11638__11643;
          f__11640 = G__11644;
          G__11638__11641 = G__11645;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  }else {
    return null
  }
});
jQuery("#waiting-modal").modal(c2.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'backdrop", "\ufdd0'keyboard", "\ufdd0'show"], {"\ufdd0'backdrop":"static", "\ufdd0'keyboard":false, "\ufdd0'show":true})));
vcfvis.data.load_context.call(null, function(context) {
  vcfvis.ui.update_user_BANG_.call(null, context);
  jQuery("#waiting-modal").modal("hide");
  return cljs.core.reset_BANG_.call(null, vcfvis.core._BANG_context, context)
});
goog.provide("vcfvis.xprize.score");
goog.require("cljs.core");
goog.require("goog.Timer");
goog.require("goog.string");
goog.require("shoreleave.remotes.http_rpc");
goog.require("domina");
goog.require("crate.core");
goog.require("chosen.core");
goog.require("clojure.string");
vcfvis.xprize.score.progress_percent = function progress_percent(desc) {
  if(cljs.core.truth_(goog.string.startsWith(desc, "Starting variation"))) {
    return 10
  }else {
    if(cljs.core.truth_(goog.string.startsWith(desc, "Prepare VCF, resorting to genome build: contestant"))) {
      return 15
    }else {
      if(cljs.core.truth_(goog.string.startsWith(desc, "Normalize MNP and indel variants: contestant"))) {
        return 60
      }else {
        if(cljs.core.truth_(goog.string.startsWith(desc, "Comparing VCFs: reference vs contestant"))) {
          return 75
        }else {
          if(cljs.core.truth_(goog.string.startsWith(desc, "Summarize comparisons"))) {
            return 90
          }else {
            if(cljs.core.truth_(goog.string.startsWith(desc, "Finished"))) {
              return 100
            }else {
              if("\ufdd0'else") {
                return null
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
vcfvis.xprize.score.update_run_status = function update_run_status(run_id) {
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "get-status", cljs.core.PersistentVector.fromArray([run_id], true), function(info) {
    if(cljs.core._EQ_.call(null, "\ufdd0'finished", (new cljs.core.Keyword("\ufdd0'state")).call(null, info))) {
      return shoreleave.remotes.http_rpc.remote_callback.call(null, "get-summary", cljs.core.PersistentVector.fromArray([run_id], true), function(sum_html) {
        if(sum_html == null) {
          return goog.Timer.callOnce(function() {
            return update_run_status.call(null, run_id)
          }, 2E3)
        }else {
          return domina.set_html_BANG_.call(null, domina.by_id.call(null, "scoring-in-process"), sum_html)
        }
      })
    }else {
      if(info == null) {
      }else {
        domina.set_html_BANG_.call(null, domina.by_id.call(null, "scoring-status"), crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'p", (new cljs.core.Keyword("\ufdd0'desc")).call(null, info)], true)));
        var temp__3974__auto____11672 = vcfvis.xprize.score.progress_percent.call(null, (new cljs.core.Keyword("\ufdd0'desc")).call(null, info));
        if(cljs.core.truth_(temp__3974__auto____11672)) {
          var pct__11673 = temp__3974__auto____11672;
          domina.set_attr_BANG_.call(null, domina.by_id.call(null, "scoring-progress"), "\ufdd0'style", [cljs.core.str("width: "), cljs.core.str(pct__11673), cljs.core.str("%")].join(""))
        }else {
        }
      }
      return goog.Timer.callOnce(function() {
        return update_run_status.call(null, run_id)
      }, 2E3)
    }
  })
};
goog.exportSymbol("vcfvis.xprize.score.update_run_status", vcfvis.xprize.score.update_run_status);
vcfvis.xprize.score.gs_paths_to_chosen = function gs_paths_to_chosen(xs) {
  return cljs.core.map.call(null, function(x) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'value", "\ufdd0'text"], {"\ufdd0'value":(new cljs.core.Keyword("\ufdd0'full")).call(null, x), "\ufdd0'text":(new cljs.core.Keyword("\ufdd0'name")).call(null, x)})
  }, xs)
};
vcfvis.xprize.score.update_gs_files_BANG_ = function update_gs_files_BANG_(file_chosen, file_id, dir, ftype) {
  var final_form_id__11675 = clojure.string.join.call(null, "-", cljs.core.cons.call(null, "gs", cljs.core.rest.call(null, clojure.string.split.call(null, file_id, /-/))));
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "variant/external-files", cljs.core.PersistentVector.fromArray([dir, ftype], true), function(files) {
    chosen.core.options.call(null, file_chosen, vcfvis.xprize.score.gs_paths_to_chosen.call(null, files));
    domina.set_value_BANG_.call(null, domina.by_id.call(null, final_form_id__11675), chosen.core.selected.call(null, file_chosen));
    return cljs.core.add_watch.call(null, file_chosen, "\ufdd0'change", function(fname) {
      return domina.set_value_BANG_.call(null, domina.by_id.call(null, final_form_id__11675), fname)
    })
  })
};
vcfvis.xprize.score.prep_remote_selectors = function prep_remote_selectors(select_id, ftype) {
  var folder_id__11682 = [cljs.core.str(select_id), cljs.core.str("-folder")].join("");
  var file_id__11683 = [cljs.core.str(select_id), cljs.core.str("-file")].join("");
  var folder_chosen__11684 = chosen.core.ichooseu_BANG_.call(null, [cljs.core.str("#"), cljs.core.str(folder_id__11682)].join(""));
  var file_chosen__11685 = chosen.core.ichooseu_BANG_.call(null, [cljs.core.str("#"), cljs.core.str(file_id__11683)].join(""));
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "variant/external-dirs", cljs.core.PersistentVector.EMPTY, function(dirs) {
    chosen.core.options.call(null, folder_chosen__11684, vcfvis.xprize.score.gs_paths_to_chosen.call(null, dirs));
    var temp__3974__auto____11686 = chosen.core.selected.call(null, folder_chosen__11684);
    if(cljs.core.truth_(temp__3974__auto____11686)) {
      var cur_dir__11687 = temp__3974__auto____11686;
      vcfvis.xprize.score.update_gs_files_BANG_.call(null, file_chosen__11685, file_id__11683, cur_dir__11687, ftype)
    }else {
    }
    return cljs.core.add_watch.call(null, folder_chosen__11684, "\ufdd0'change", function(dir) {
      return vcfvis.xprize.score.update_gs_files_BANG_.call(null, file_chosen__11685, file_id__11683, dir, ftype)
    })
  })
};
vcfvis.xprize.score.prep_genome_selector = function prep_genome_selector() {
  var genome_chosen__11689 = chosen.core.ichooseu_BANG_.call(null, "#comparison-genome");
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "meta/genomes", cljs.core.PersistentVector.EMPTY, function(genomes) {
    return chosen.core.options.call(null, genome_chosen__11689, genomes)
  })
};
vcfvis.xprize.score.set_navigation = function set_navigation() {
  var loc__11697 = cljs.core.last.call(null, clojure.string.split.call(null, window.location.toString(cljs.core.List.EMPTY), /\//));
  var G__11698__11699 = cljs.core.seq.call(null, domina.children.call(null, domina.by_id.call(null, "top-navbar")));
  if(G__11698__11699) {
    var list_item__11700 = cljs.core.first.call(null, G__11698__11699);
    var G__11698__11701 = G__11698__11699;
    while(true) {
      if(cljs.core._EQ_.call(null, [cljs.core.str("/"), cljs.core.str(loc__11697)].join(""), domina.attr.call(null, cljs.core.first.call(null, domina.children.call(null, list_item__11700)), "\ufdd0'href"))) {
        domina.set_attr_BANG_.call(null, list_item__11700, "\ufdd0'class", "active")
      }else {
        domina.remove_attr_BANG_.call(null, list_item__11700, "\ufdd0'class")
      }
      var temp__3974__auto____11702 = cljs.core.next.call(null, G__11698__11701);
      if(temp__3974__auto____11702) {
        var G__11698__11703 = temp__3974__auto____11702;
        var G__11704 = cljs.core.first.call(null, G__11698__11703);
        var G__11705 = G__11698__11703;
        list_item__11700 = G__11704;
        G__11698__11701 = G__11705;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
goog.exportSymbol("vcfvis.xprize.score.set_navigation", vcfvis.xprize.score.set_navigation);
vcfvis.xprize.score.setup_remotes = function setup_remotes() {
  vcfvis.xprize.score.prep_genome_selector.call(null);
  vcfvis.xprize.score.prep_remote_selectors.call(null, "variant", "vcf");
  return vcfvis.xprize.score.prep_remote_selectors.call(null, "region", "bed")
};
goog.exportSymbol("vcfvis.xprize.score.setup_remotes", vcfvis.xprize.score.setup_remotes);
