var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.evalWorksForGlobals_ = null;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.getObjectByName(name) && !goog.implicitNamespaces_[name]) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.require = function(rule) {
  if(!COMPILED) {
    if(goog.getObjectByName(rule)) {
      return
    }
    var path = goog.getPathFromDeps_(rule);
    if(path) {
      goog.included_[path] = true;
      goog.writeScripts_()
    }else {
      var errorMessage = "goog.require could not find: " + rule;
      if(goog.global.console) {
        goog.global.console["error"](errorMessage)
      }
      throw Error(errorMessage);
    }
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(requireName in deps.nameToPath) {
            visitNode(deps.nameToPath[requireName])
          }else {
            if(!goog.getObjectByName(requireName)) {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  var context = selfObj || goog.global;
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(context, newArgs)
    }
  }else {
    return function() {
      return fn.apply(context, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = style
};
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global && !goog.string.contains(str, "<")) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var el = goog.global["document"]["createElement"]("div");
  el["innerHTML"] = "<pre>x" + str + "</pre>";
  if(el["firstChild"][goog.string.NORMALIZE_FN_]) {
    el["firstChild"][goog.string.NORMALIZE_FN_]()
  }
  str = el["firstChild"]["firstChild"]["nodeValue"].slice(1);
  el["innerHTML"] = "";
  return goog.string.canonicalizeNewlines(str)
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.NORMALIZE_FN_ = "normalize";
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  value = parseInt(value, 10);
  precision = 0;
  return goog.string.format.demuxes_["f"](value, flags, width, dotp, precision, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__22156 = x == null ? null : x;
  if(p[goog.typeOf(x__22156)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__22157__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__22157 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__22157__delegate.call(this, array, i, idxs)
    };
    G__22157.cljs$lang$maxFixedArity = 2;
    G__22157.cljs$lang$applyTo = function(arglist__22158) {
      var array = cljs.core.first(arglist__22158);
      var i = cljs.core.first(cljs.core.next(arglist__22158));
      var idxs = cljs.core.rest(cljs.core.next(arglist__22158));
      return G__22157__delegate(array, i, idxs)
    };
    G__22157.cljs$lang$arity$variadic = G__22157__delegate;
    return G__22157
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____22243 = this$;
      if(and__3822__auto____22243) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____22243
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2256__auto____22244 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22245 = cljs.core._invoke[goog.typeOf(x__2256__auto____22244)];
        if(or__3824__auto____22245) {
          return or__3824__auto____22245
        }else {
          var or__3824__auto____22246 = cljs.core._invoke["_"];
          if(or__3824__auto____22246) {
            return or__3824__auto____22246
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____22247 = this$;
      if(and__3822__auto____22247) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____22247
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2256__auto____22248 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22249 = cljs.core._invoke[goog.typeOf(x__2256__auto____22248)];
        if(or__3824__auto____22249) {
          return or__3824__auto____22249
        }else {
          var or__3824__auto____22250 = cljs.core._invoke["_"];
          if(or__3824__auto____22250) {
            return or__3824__auto____22250
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____22251 = this$;
      if(and__3822__auto____22251) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____22251
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2256__auto____22252 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22253 = cljs.core._invoke[goog.typeOf(x__2256__auto____22252)];
        if(or__3824__auto____22253) {
          return or__3824__auto____22253
        }else {
          var or__3824__auto____22254 = cljs.core._invoke["_"];
          if(or__3824__auto____22254) {
            return or__3824__auto____22254
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____22255 = this$;
      if(and__3822__auto____22255) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____22255
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2256__auto____22256 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22257 = cljs.core._invoke[goog.typeOf(x__2256__auto____22256)];
        if(or__3824__auto____22257) {
          return or__3824__auto____22257
        }else {
          var or__3824__auto____22258 = cljs.core._invoke["_"];
          if(or__3824__auto____22258) {
            return or__3824__auto____22258
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____22259 = this$;
      if(and__3822__auto____22259) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____22259
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2256__auto____22260 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22261 = cljs.core._invoke[goog.typeOf(x__2256__auto____22260)];
        if(or__3824__auto____22261) {
          return or__3824__auto____22261
        }else {
          var or__3824__auto____22262 = cljs.core._invoke["_"];
          if(or__3824__auto____22262) {
            return or__3824__auto____22262
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____22263 = this$;
      if(and__3822__auto____22263) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____22263
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2256__auto____22264 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22265 = cljs.core._invoke[goog.typeOf(x__2256__auto____22264)];
        if(or__3824__auto____22265) {
          return or__3824__auto____22265
        }else {
          var or__3824__auto____22266 = cljs.core._invoke["_"];
          if(or__3824__auto____22266) {
            return or__3824__auto____22266
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____22267 = this$;
      if(and__3822__auto____22267) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____22267
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2256__auto____22268 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22269 = cljs.core._invoke[goog.typeOf(x__2256__auto____22268)];
        if(or__3824__auto____22269) {
          return or__3824__auto____22269
        }else {
          var or__3824__auto____22270 = cljs.core._invoke["_"];
          if(or__3824__auto____22270) {
            return or__3824__auto____22270
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____22271 = this$;
      if(and__3822__auto____22271) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____22271
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2256__auto____22272 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22273 = cljs.core._invoke[goog.typeOf(x__2256__auto____22272)];
        if(or__3824__auto____22273) {
          return or__3824__auto____22273
        }else {
          var or__3824__auto____22274 = cljs.core._invoke["_"];
          if(or__3824__auto____22274) {
            return or__3824__auto____22274
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____22275 = this$;
      if(and__3822__auto____22275) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____22275
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2256__auto____22276 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22277 = cljs.core._invoke[goog.typeOf(x__2256__auto____22276)];
        if(or__3824__auto____22277) {
          return or__3824__auto____22277
        }else {
          var or__3824__auto____22278 = cljs.core._invoke["_"];
          if(or__3824__auto____22278) {
            return or__3824__auto____22278
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____22279 = this$;
      if(and__3822__auto____22279) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____22279
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2256__auto____22280 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22281 = cljs.core._invoke[goog.typeOf(x__2256__auto____22280)];
        if(or__3824__auto____22281) {
          return or__3824__auto____22281
        }else {
          var or__3824__auto____22282 = cljs.core._invoke["_"];
          if(or__3824__auto____22282) {
            return or__3824__auto____22282
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____22283 = this$;
      if(and__3822__auto____22283) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____22283
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2256__auto____22284 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22285 = cljs.core._invoke[goog.typeOf(x__2256__auto____22284)];
        if(or__3824__auto____22285) {
          return or__3824__auto____22285
        }else {
          var or__3824__auto____22286 = cljs.core._invoke["_"];
          if(or__3824__auto____22286) {
            return or__3824__auto____22286
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____22287 = this$;
      if(and__3822__auto____22287) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____22287
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2256__auto____22288 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22289 = cljs.core._invoke[goog.typeOf(x__2256__auto____22288)];
        if(or__3824__auto____22289) {
          return or__3824__auto____22289
        }else {
          var or__3824__auto____22290 = cljs.core._invoke["_"];
          if(or__3824__auto____22290) {
            return or__3824__auto____22290
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____22291 = this$;
      if(and__3822__auto____22291) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____22291
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2256__auto____22292 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22293 = cljs.core._invoke[goog.typeOf(x__2256__auto____22292)];
        if(or__3824__auto____22293) {
          return or__3824__auto____22293
        }else {
          var or__3824__auto____22294 = cljs.core._invoke["_"];
          if(or__3824__auto____22294) {
            return or__3824__auto____22294
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____22295 = this$;
      if(and__3822__auto____22295) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____22295
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2256__auto____22296 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22297 = cljs.core._invoke[goog.typeOf(x__2256__auto____22296)];
        if(or__3824__auto____22297) {
          return or__3824__auto____22297
        }else {
          var or__3824__auto____22298 = cljs.core._invoke["_"];
          if(or__3824__auto____22298) {
            return or__3824__auto____22298
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____22299 = this$;
      if(and__3822__auto____22299) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____22299
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2256__auto____22300 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22301 = cljs.core._invoke[goog.typeOf(x__2256__auto____22300)];
        if(or__3824__auto____22301) {
          return or__3824__auto____22301
        }else {
          var or__3824__auto____22302 = cljs.core._invoke["_"];
          if(or__3824__auto____22302) {
            return or__3824__auto____22302
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____22303 = this$;
      if(and__3822__auto____22303) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____22303
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2256__auto____22304 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22305 = cljs.core._invoke[goog.typeOf(x__2256__auto____22304)];
        if(or__3824__auto____22305) {
          return or__3824__auto____22305
        }else {
          var or__3824__auto____22306 = cljs.core._invoke["_"];
          if(or__3824__auto____22306) {
            return or__3824__auto____22306
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____22307 = this$;
      if(and__3822__auto____22307) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____22307
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2256__auto____22308 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22309 = cljs.core._invoke[goog.typeOf(x__2256__auto____22308)];
        if(or__3824__auto____22309) {
          return or__3824__auto____22309
        }else {
          var or__3824__auto____22310 = cljs.core._invoke["_"];
          if(or__3824__auto____22310) {
            return or__3824__auto____22310
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____22311 = this$;
      if(and__3822__auto____22311) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____22311
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2256__auto____22312 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22313 = cljs.core._invoke[goog.typeOf(x__2256__auto____22312)];
        if(or__3824__auto____22313) {
          return or__3824__auto____22313
        }else {
          var or__3824__auto____22314 = cljs.core._invoke["_"];
          if(or__3824__auto____22314) {
            return or__3824__auto____22314
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____22315 = this$;
      if(and__3822__auto____22315) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____22315
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2256__auto____22316 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22317 = cljs.core._invoke[goog.typeOf(x__2256__auto____22316)];
        if(or__3824__auto____22317) {
          return or__3824__auto____22317
        }else {
          var or__3824__auto____22318 = cljs.core._invoke["_"];
          if(or__3824__auto____22318) {
            return or__3824__auto____22318
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____22319 = this$;
      if(and__3822__auto____22319) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____22319
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2256__auto____22320 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22321 = cljs.core._invoke[goog.typeOf(x__2256__auto____22320)];
        if(or__3824__auto____22321) {
          return or__3824__auto____22321
        }else {
          var or__3824__auto____22322 = cljs.core._invoke["_"];
          if(or__3824__auto____22322) {
            return or__3824__auto____22322
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____22323 = this$;
      if(and__3822__auto____22323) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____22323
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2256__auto____22324 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22325 = cljs.core._invoke[goog.typeOf(x__2256__auto____22324)];
        if(or__3824__auto____22325) {
          return or__3824__auto____22325
        }else {
          var or__3824__auto____22326 = cljs.core._invoke["_"];
          if(or__3824__auto____22326) {
            return or__3824__auto____22326
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____22331 = coll;
    if(and__3822__auto____22331) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____22331
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2256__auto____22332 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22333 = cljs.core._count[goog.typeOf(x__2256__auto____22332)];
      if(or__3824__auto____22333) {
        return or__3824__auto____22333
      }else {
        var or__3824__auto____22334 = cljs.core._count["_"];
        if(or__3824__auto____22334) {
          return or__3824__auto____22334
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____22339 = coll;
    if(and__3822__auto____22339) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____22339
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2256__auto____22340 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22341 = cljs.core._empty[goog.typeOf(x__2256__auto____22340)];
      if(or__3824__auto____22341) {
        return or__3824__auto____22341
      }else {
        var or__3824__auto____22342 = cljs.core._empty["_"];
        if(or__3824__auto____22342) {
          return or__3824__auto____22342
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____22347 = coll;
    if(and__3822__auto____22347) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____22347
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2256__auto____22348 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22349 = cljs.core._conj[goog.typeOf(x__2256__auto____22348)];
      if(or__3824__auto____22349) {
        return or__3824__auto____22349
      }else {
        var or__3824__auto____22350 = cljs.core._conj["_"];
        if(or__3824__auto____22350) {
          return or__3824__auto____22350
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____22359 = coll;
      if(and__3822__auto____22359) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____22359
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2256__auto____22360 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____22361 = cljs.core._nth[goog.typeOf(x__2256__auto____22360)];
        if(or__3824__auto____22361) {
          return or__3824__auto____22361
        }else {
          var or__3824__auto____22362 = cljs.core._nth["_"];
          if(or__3824__auto____22362) {
            return or__3824__auto____22362
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____22363 = coll;
      if(and__3822__auto____22363) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____22363
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2256__auto____22364 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____22365 = cljs.core._nth[goog.typeOf(x__2256__auto____22364)];
        if(or__3824__auto____22365) {
          return or__3824__auto____22365
        }else {
          var or__3824__auto____22366 = cljs.core._nth["_"];
          if(or__3824__auto____22366) {
            return or__3824__auto____22366
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____22371 = coll;
    if(and__3822__auto____22371) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____22371
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2256__auto____22372 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22373 = cljs.core._first[goog.typeOf(x__2256__auto____22372)];
      if(or__3824__auto____22373) {
        return or__3824__auto____22373
      }else {
        var or__3824__auto____22374 = cljs.core._first["_"];
        if(or__3824__auto____22374) {
          return or__3824__auto____22374
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____22379 = coll;
    if(and__3822__auto____22379) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____22379
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2256__auto____22380 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22381 = cljs.core._rest[goog.typeOf(x__2256__auto____22380)];
      if(or__3824__auto____22381) {
        return or__3824__auto____22381
      }else {
        var or__3824__auto____22382 = cljs.core._rest["_"];
        if(or__3824__auto____22382) {
          return or__3824__auto____22382
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____22387 = coll;
    if(and__3822__auto____22387) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____22387
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2256__auto____22388 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22389 = cljs.core._next[goog.typeOf(x__2256__auto____22388)];
      if(or__3824__auto____22389) {
        return or__3824__auto____22389
      }else {
        var or__3824__auto____22390 = cljs.core._next["_"];
        if(or__3824__auto____22390) {
          return or__3824__auto____22390
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____22399 = o;
      if(and__3822__auto____22399) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____22399
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2256__auto____22400 = o == null ? null : o;
      return function() {
        var or__3824__auto____22401 = cljs.core._lookup[goog.typeOf(x__2256__auto____22400)];
        if(or__3824__auto____22401) {
          return or__3824__auto____22401
        }else {
          var or__3824__auto____22402 = cljs.core._lookup["_"];
          if(or__3824__auto____22402) {
            return or__3824__auto____22402
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____22403 = o;
      if(and__3822__auto____22403) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____22403
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2256__auto____22404 = o == null ? null : o;
      return function() {
        var or__3824__auto____22405 = cljs.core._lookup[goog.typeOf(x__2256__auto____22404)];
        if(or__3824__auto____22405) {
          return or__3824__auto____22405
        }else {
          var or__3824__auto____22406 = cljs.core._lookup["_"];
          if(or__3824__auto____22406) {
            return or__3824__auto____22406
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____22411 = coll;
    if(and__3822__auto____22411) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____22411
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2256__auto____22412 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22413 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2256__auto____22412)];
      if(or__3824__auto____22413) {
        return or__3824__auto____22413
      }else {
        var or__3824__auto____22414 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____22414) {
          return or__3824__auto____22414
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____22419 = coll;
    if(and__3822__auto____22419) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____22419
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2256__auto____22420 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22421 = cljs.core._assoc[goog.typeOf(x__2256__auto____22420)];
      if(or__3824__auto____22421) {
        return or__3824__auto____22421
      }else {
        var or__3824__auto____22422 = cljs.core._assoc["_"];
        if(or__3824__auto____22422) {
          return or__3824__auto____22422
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____22427 = coll;
    if(and__3822__auto____22427) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____22427
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2256__auto____22428 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22429 = cljs.core._dissoc[goog.typeOf(x__2256__auto____22428)];
      if(or__3824__auto____22429) {
        return or__3824__auto____22429
      }else {
        var or__3824__auto____22430 = cljs.core._dissoc["_"];
        if(or__3824__auto____22430) {
          return or__3824__auto____22430
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____22435 = coll;
    if(and__3822__auto____22435) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____22435
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2256__auto____22436 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22437 = cljs.core._key[goog.typeOf(x__2256__auto____22436)];
      if(or__3824__auto____22437) {
        return or__3824__auto____22437
      }else {
        var or__3824__auto____22438 = cljs.core._key["_"];
        if(or__3824__auto____22438) {
          return or__3824__auto____22438
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____22443 = coll;
    if(and__3822__auto____22443) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____22443
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2256__auto____22444 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22445 = cljs.core._val[goog.typeOf(x__2256__auto____22444)];
      if(or__3824__auto____22445) {
        return or__3824__auto____22445
      }else {
        var or__3824__auto____22446 = cljs.core._val["_"];
        if(or__3824__auto____22446) {
          return or__3824__auto____22446
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____22451 = coll;
    if(and__3822__auto____22451) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____22451
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2256__auto____22452 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22453 = cljs.core._disjoin[goog.typeOf(x__2256__auto____22452)];
      if(or__3824__auto____22453) {
        return or__3824__auto____22453
      }else {
        var or__3824__auto____22454 = cljs.core._disjoin["_"];
        if(or__3824__auto____22454) {
          return or__3824__auto____22454
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____22459 = coll;
    if(and__3822__auto____22459) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____22459
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2256__auto____22460 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22461 = cljs.core._peek[goog.typeOf(x__2256__auto____22460)];
      if(or__3824__auto____22461) {
        return or__3824__auto____22461
      }else {
        var or__3824__auto____22462 = cljs.core._peek["_"];
        if(or__3824__auto____22462) {
          return or__3824__auto____22462
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____22467 = coll;
    if(and__3822__auto____22467) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____22467
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2256__auto____22468 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22469 = cljs.core._pop[goog.typeOf(x__2256__auto____22468)];
      if(or__3824__auto____22469) {
        return or__3824__auto____22469
      }else {
        var or__3824__auto____22470 = cljs.core._pop["_"];
        if(or__3824__auto____22470) {
          return or__3824__auto____22470
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____22475 = coll;
    if(and__3822__auto____22475) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____22475
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2256__auto____22476 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22477 = cljs.core._assoc_n[goog.typeOf(x__2256__auto____22476)];
      if(or__3824__auto____22477) {
        return or__3824__auto____22477
      }else {
        var or__3824__auto____22478 = cljs.core._assoc_n["_"];
        if(or__3824__auto____22478) {
          return or__3824__auto____22478
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____22483 = o;
    if(and__3822__auto____22483) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____22483
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2256__auto____22484 = o == null ? null : o;
    return function() {
      var or__3824__auto____22485 = cljs.core._deref[goog.typeOf(x__2256__auto____22484)];
      if(or__3824__auto____22485) {
        return or__3824__auto____22485
      }else {
        var or__3824__auto____22486 = cljs.core._deref["_"];
        if(or__3824__auto____22486) {
          return or__3824__auto____22486
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____22491 = o;
    if(and__3822__auto____22491) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____22491
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2256__auto____22492 = o == null ? null : o;
    return function() {
      var or__3824__auto____22493 = cljs.core._deref_with_timeout[goog.typeOf(x__2256__auto____22492)];
      if(or__3824__auto____22493) {
        return or__3824__auto____22493
      }else {
        var or__3824__auto____22494 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____22494) {
          return or__3824__auto____22494
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____22499 = o;
    if(and__3822__auto____22499) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____22499
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2256__auto____22500 = o == null ? null : o;
    return function() {
      var or__3824__auto____22501 = cljs.core._meta[goog.typeOf(x__2256__auto____22500)];
      if(or__3824__auto____22501) {
        return or__3824__auto____22501
      }else {
        var or__3824__auto____22502 = cljs.core._meta["_"];
        if(or__3824__auto____22502) {
          return or__3824__auto____22502
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____22507 = o;
    if(and__3822__auto____22507) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____22507
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2256__auto____22508 = o == null ? null : o;
    return function() {
      var or__3824__auto____22509 = cljs.core._with_meta[goog.typeOf(x__2256__auto____22508)];
      if(or__3824__auto____22509) {
        return or__3824__auto____22509
      }else {
        var or__3824__auto____22510 = cljs.core._with_meta["_"];
        if(or__3824__auto____22510) {
          return or__3824__auto____22510
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____22519 = coll;
      if(and__3822__auto____22519) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____22519
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2256__auto____22520 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____22521 = cljs.core._reduce[goog.typeOf(x__2256__auto____22520)];
        if(or__3824__auto____22521) {
          return or__3824__auto____22521
        }else {
          var or__3824__auto____22522 = cljs.core._reduce["_"];
          if(or__3824__auto____22522) {
            return or__3824__auto____22522
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____22523 = coll;
      if(and__3822__auto____22523) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____22523
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2256__auto____22524 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____22525 = cljs.core._reduce[goog.typeOf(x__2256__auto____22524)];
        if(or__3824__auto____22525) {
          return or__3824__auto____22525
        }else {
          var or__3824__auto____22526 = cljs.core._reduce["_"];
          if(or__3824__auto____22526) {
            return or__3824__auto____22526
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____22531 = coll;
    if(and__3822__auto____22531) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____22531
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2256__auto____22532 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22533 = cljs.core._kv_reduce[goog.typeOf(x__2256__auto____22532)];
      if(or__3824__auto____22533) {
        return or__3824__auto____22533
      }else {
        var or__3824__auto____22534 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____22534) {
          return or__3824__auto____22534
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____22539 = o;
    if(and__3822__auto____22539) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____22539
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2256__auto____22540 = o == null ? null : o;
    return function() {
      var or__3824__auto____22541 = cljs.core._equiv[goog.typeOf(x__2256__auto____22540)];
      if(or__3824__auto____22541) {
        return or__3824__auto____22541
      }else {
        var or__3824__auto____22542 = cljs.core._equiv["_"];
        if(or__3824__auto____22542) {
          return or__3824__auto____22542
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____22547 = o;
    if(and__3822__auto____22547) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____22547
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2256__auto____22548 = o == null ? null : o;
    return function() {
      var or__3824__auto____22549 = cljs.core._hash[goog.typeOf(x__2256__auto____22548)];
      if(or__3824__auto____22549) {
        return or__3824__auto____22549
      }else {
        var or__3824__auto____22550 = cljs.core._hash["_"];
        if(or__3824__auto____22550) {
          return or__3824__auto____22550
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____22555 = o;
    if(and__3822__auto____22555) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____22555
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2256__auto____22556 = o == null ? null : o;
    return function() {
      var or__3824__auto____22557 = cljs.core._seq[goog.typeOf(x__2256__auto____22556)];
      if(or__3824__auto____22557) {
        return or__3824__auto____22557
      }else {
        var or__3824__auto____22558 = cljs.core._seq["_"];
        if(or__3824__auto____22558) {
          return or__3824__auto____22558
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____22563 = coll;
    if(and__3822__auto____22563) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____22563
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2256__auto____22564 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22565 = cljs.core._rseq[goog.typeOf(x__2256__auto____22564)];
      if(or__3824__auto____22565) {
        return or__3824__auto____22565
      }else {
        var or__3824__auto____22566 = cljs.core._rseq["_"];
        if(or__3824__auto____22566) {
          return or__3824__auto____22566
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____22571 = coll;
    if(and__3822__auto____22571) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____22571
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2256__auto____22572 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22573 = cljs.core._sorted_seq[goog.typeOf(x__2256__auto____22572)];
      if(or__3824__auto____22573) {
        return or__3824__auto____22573
      }else {
        var or__3824__auto____22574 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____22574) {
          return or__3824__auto____22574
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____22579 = coll;
    if(and__3822__auto____22579) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____22579
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2256__auto____22580 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22581 = cljs.core._sorted_seq_from[goog.typeOf(x__2256__auto____22580)];
      if(or__3824__auto____22581) {
        return or__3824__auto____22581
      }else {
        var or__3824__auto____22582 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____22582) {
          return or__3824__auto____22582
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____22587 = coll;
    if(and__3822__auto____22587) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____22587
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2256__auto____22588 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22589 = cljs.core._entry_key[goog.typeOf(x__2256__auto____22588)];
      if(or__3824__auto____22589) {
        return or__3824__auto____22589
      }else {
        var or__3824__auto____22590 = cljs.core._entry_key["_"];
        if(or__3824__auto____22590) {
          return or__3824__auto____22590
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____22595 = coll;
    if(and__3822__auto____22595) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____22595
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2256__auto____22596 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22597 = cljs.core._comparator[goog.typeOf(x__2256__auto____22596)];
      if(or__3824__auto____22597) {
        return or__3824__auto____22597
      }else {
        var or__3824__auto____22598 = cljs.core._comparator["_"];
        if(or__3824__auto____22598) {
          return or__3824__auto____22598
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____22603 = o;
    if(and__3822__auto____22603) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____22603
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2256__auto____22604 = o == null ? null : o;
    return function() {
      var or__3824__auto____22605 = cljs.core._pr_seq[goog.typeOf(x__2256__auto____22604)];
      if(or__3824__auto____22605) {
        return or__3824__auto____22605
      }else {
        var or__3824__auto____22606 = cljs.core._pr_seq["_"];
        if(or__3824__auto____22606) {
          return or__3824__auto____22606
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____22611 = d;
    if(and__3822__auto____22611) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____22611
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2256__auto____22612 = d == null ? null : d;
    return function() {
      var or__3824__auto____22613 = cljs.core._realized_QMARK_[goog.typeOf(x__2256__auto____22612)];
      if(or__3824__auto____22613) {
        return or__3824__auto____22613
      }else {
        var or__3824__auto____22614 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____22614) {
          return or__3824__auto____22614
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____22619 = this$;
    if(and__3822__auto____22619) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____22619
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2256__auto____22620 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____22621 = cljs.core._notify_watches[goog.typeOf(x__2256__auto____22620)];
      if(or__3824__auto____22621) {
        return or__3824__auto____22621
      }else {
        var or__3824__auto____22622 = cljs.core._notify_watches["_"];
        if(or__3824__auto____22622) {
          return or__3824__auto____22622
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____22627 = this$;
    if(and__3822__auto____22627) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____22627
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2256__auto____22628 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____22629 = cljs.core._add_watch[goog.typeOf(x__2256__auto____22628)];
      if(or__3824__auto____22629) {
        return or__3824__auto____22629
      }else {
        var or__3824__auto____22630 = cljs.core._add_watch["_"];
        if(or__3824__auto____22630) {
          return or__3824__auto____22630
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____22635 = this$;
    if(and__3822__auto____22635) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____22635
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2256__auto____22636 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____22637 = cljs.core._remove_watch[goog.typeOf(x__2256__auto____22636)];
      if(or__3824__auto____22637) {
        return or__3824__auto____22637
      }else {
        var or__3824__auto____22638 = cljs.core._remove_watch["_"];
        if(or__3824__auto____22638) {
          return or__3824__auto____22638
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____22643 = coll;
    if(and__3822__auto____22643) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____22643
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2256__auto____22644 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22645 = cljs.core._as_transient[goog.typeOf(x__2256__auto____22644)];
      if(or__3824__auto____22645) {
        return or__3824__auto____22645
      }else {
        var or__3824__auto____22646 = cljs.core._as_transient["_"];
        if(or__3824__auto____22646) {
          return or__3824__auto____22646
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____22651 = tcoll;
    if(and__3822__auto____22651) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____22651
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2256__auto____22652 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____22653 = cljs.core._conj_BANG_[goog.typeOf(x__2256__auto____22652)];
      if(or__3824__auto____22653) {
        return or__3824__auto____22653
      }else {
        var or__3824__auto____22654 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____22654) {
          return or__3824__auto____22654
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____22659 = tcoll;
    if(and__3822__auto____22659) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____22659
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2256__auto____22660 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____22661 = cljs.core._persistent_BANG_[goog.typeOf(x__2256__auto____22660)];
      if(or__3824__auto____22661) {
        return or__3824__auto____22661
      }else {
        var or__3824__auto____22662 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____22662) {
          return or__3824__auto____22662
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____22667 = tcoll;
    if(and__3822__auto____22667) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____22667
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2256__auto____22668 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____22669 = cljs.core._assoc_BANG_[goog.typeOf(x__2256__auto____22668)];
      if(or__3824__auto____22669) {
        return or__3824__auto____22669
      }else {
        var or__3824__auto____22670 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____22670) {
          return or__3824__auto____22670
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____22675 = tcoll;
    if(and__3822__auto____22675) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____22675
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2256__auto____22676 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____22677 = cljs.core._dissoc_BANG_[goog.typeOf(x__2256__auto____22676)];
      if(or__3824__auto____22677) {
        return or__3824__auto____22677
      }else {
        var or__3824__auto____22678 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____22678) {
          return or__3824__auto____22678
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____22683 = tcoll;
    if(and__3822__auto____22683) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____22683
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2256__auto____22684 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____22685 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2256__auto____22684)];
      if(or__3824__auto____22685) {
        return or__3824__auto____22685
      }else {
        var or__3824__auto____22686 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____22686) {
          return or__3824__auto____22686
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____22691 = tcoll;
    if(and__3822__auto____22691) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____22691
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2256__auto____22692 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____22693 = cljs.core._pop_BANG_[goog.typeOf(x__2256__auto____22692)];
      if(or__3824__auto____22693) {
        return or__3824__auto____22693
      }else {
        var or__3824__auto____22694 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____22694) {
          return or__3824__auto____22694
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____22699 = tcoll;
    if(and__3822__auto____22699) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____22699
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2256__auto____22700 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____22701 = cljs.core._disjoin_BANG_[goog.typeOf(x__2256__auto____22700)];
      if(or__3824__auto____22701) {
        return or__3824__auto____22701
      }else {
        var or__3824__auto____22702 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____22702) {
          return or__3824__auto____22702
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____22707 = x;
    if(and__3822__auto____22707) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____22707
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2256__auto____22708 = x == null ? null : x;
    return function() {
      var or__3824__auto____22709 = cljs.core._compare[goog.typeOf(x__2256__auto____22708)];
      if(or__3824__auto____22709) {
        return or__3824__auto____22709
      }else {
        var or__3824__auto____22710 = cljs.core._compare["_"];
        if(or__3824__auto____22710) {
          return or__3824__auto____22710
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____22715 = coll;
    if(and__3822__auto____22715) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____22715
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2256__auto____22716 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22717 = cljs.core._drop_first[goog.typeOf(x__2256__auto____22716)];
      if(or__3824__auto____22717) {
        return or__3824__auto____22717
      }else {
        var or__3824__auto____22718 = cljs.core._drop_first["_"];
        if(or__3824__auto____22718) {
          return or__3824__auto____22718
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____22723 = coll;
    if(and__3822__auto____22723) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____22723
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2256__auto____22724 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22725 = cljs.core._chunked_first[goog.typeOf(x__2256__auto____22724)];
      if(or__3824__auto____22725) {
        return or__3824__auto____22725
      }else {
        var or__3824__auto____22726 = cljs.core._chunked_first["_"];
        if(or__3824__auto____22726) {
          return or__3824__auto____22726
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____22731 = coll;
    if(and__3822__auto____22731) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____22731
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2256__auto____22732 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22733 = cljs.core._chunked_rest[goog.typeOf(x__2256__auto____22732)];
      if(or__3824__auto____22733) {
        return or__3824__auto____22733
      }else {
        var or__3824__auto____22734 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____22734) {
          return or__3824__auto____22734
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____22739 = coll;
    if(and__3822__auto____22739) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____22739
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2256__auto____22740 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____22741 = cljs.core._chunked_next[goog.typeOf(x__2256__auto____22740)];
      if(or__3824__auto____22741) {
        return or__3824__auto____22741
      }else {
        var or__3824__auto____22742 = cljs.core._chunked_next["_"];
        if(or__3824__auto____22742) {
          return or__3824__auto____22742
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____22744 = x === y;
    if(or__3824__auto____22744) {
      return or__3824__auto____22744
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__22745__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__22746 = y;
            var G__22747 = cljs.core.first.call(null, more);
            var G__22748 = cljs.core.next.call(null, more);
            x = G__22746;
            y = G__22747;
            more = G__22748;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__22745 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__22745__delegate.call(this, x, y, more)
    };
    G__22745.cljs$lang$maxFixedArity = 2;
    G__22745.cljs$lang$applyTo = function(arglist__22749) {
      var x = cljs.core.first(arglist__22749);
      var y = cljs.core.first(cljs.core.next(arglist__22749));
      var more = cljs.core.rest(cljs.core.next(arglist__22749));
      return G__22745__delegate(x, y, more)
    };
    G__22745.cljs$lang$arity$variadic = G__22745__delegate;
    return G__22745
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__22750 = null;
  var G__22750__2 = function(o, k) {
    return null
  };
  var G__22750__3 = function(o, k, not_found) {
    return not_found
  };
  G__22750 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22750__2.call(this, o, k);
      case 3:
        return G__22750__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__22750
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__22751 = null;
  var G__22751__2 = function(_, f) {
    return f.call(null)
  };
  var G__22751__3 = function(_, f, start) {
    return start
  };
  G__22751 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__22751__2.call(this, _, f);
      case 3:
        return G__22751__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__22751
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__22752 = null;
  var G__22752__2 = function(_, n) {
    return null
  };
  var G__22752__3 = function(_, n, not_found) {
    return not_found
  };
  G__22752 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22752__2.call(this, _, n);
      case 3:
        return G__22752__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__22752
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____22753 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____22753) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____22753
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__22766 = cljs.core._count.call(null, cicoll);
    if(cnt__22766 === 0) {
      return f.call(null)
    }else {
      var val__22767 = cljs.core._nth.call(null, cicoll, 0);
      var n__22768 = 1;
      while(true) {
        if(n__22768 < cnt__22766) {
          var nval__22769 = f.call(null, val__22767, cljs.core._nth.call(null, cicoll, n__22768));
          if(cljs.core.reduced_QMARK_.call(null, nval__22769)) {
            return cljs.core.deref.call(null, nval__22769)
          }else {
            var G__22778 = nval__22769;
            var G__22779 = n__22768 + 1;
            val__22767 = G__22778;
            n__22768 = G__22779;
            continue
          }
        }else {
          return val__22767
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__22770 = cljs.core._count.call(null, cicoll);
    var val__22771 = val;
    var n__22772 = 0;
    while(true) {
      if(n__22772 < cnt__22770) {
        var nval__22773 = f.call(null, val__22771, cljs.core._nth.call(null, cicoll, n__22772));
        if(cljs.core.reduced_QMARK_.call(null, nval__22773)) {
          return cljs.core.deref.call(null, nval__22773)
        }else {
          var G__22780 = nval__22773;
          var G__22781 = n__22772 + 1;
          val__22771 = G__22780;
          n__22772 = G__22781;
          continue
        }
      }else {
        return val__22771
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__22774 = cljs.core._count.call(null, cicoll);
    var val__22775 = val;
    var n__22776 = idx;
    while(true) {
      if(n__22776 < cnt__22774) {
        var nval__22777 = f.call(null, val__22775, cljs.core._nth.call(null, cicoll, n__22776));
        if(cljs.core.reduced_QMARK_.call(null, nval__22777)) {
          return cljs.core.deref.call(null, nval__22777)
        }else {
          var G__22782 = nval__22777;
          var G__22783 = n__22776 + 1;
          val__22775 = G__22782;
          n__22776 = G__22783;
          continue
        }
      }else {
        return val__22775
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__22796 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__22797 = arr[0];
      var n__22798 = 1;
      while(true) {
        if(n__22798 < cnt__22796) {
          var nval__22799 = f.call(null, val__22797, arr[n__22798]);
          if(cljs.core.reduced_QMARK_.call(null, nval__22799)) {
            return cljs.core.deref.call(null, nval__22799)
          }else {
            var G__22808 = nval__22799;
            var G__22809 = n__22798 + 1;
            val__22797 = G__22808;
            n__22798 = G__22809;
            continue
          }
        }else {
          return val__22797
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__22800 = arr.length;
    var val__22801 = val;
    var n__22802 = 0;
    while(true) {
      if(n__22802 < cnt__22800) {
        var nval__22803 = f.call(null, val__22801, arr[n__22802]);
        if(cljs.core.reduced_QMARK_.call(null, nval__22803)) {
          return cljs.core.deref.call(null, nval__22803)
        }else {
          var G__22810 = nval__22803;
          var G__22811 = n__22802 + 1;
          val__22801 = G__22810;
          n__22802 = G__22811;
          continue
        }
      }else {
        return val__22801
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__22804 = arr.length;
    var val__22805 = val;
    var n__22806 = idx;
    while(true) {
      if(n__22806 < cnt__22804) {
        var nval__22807 = f.call(null, val__22805, arr[n__22806]);
        if(cljs.core.reduced_QMARK_.call(null, nval__22807)) {
          return cljs.core.deref.call(null, nval__22807)
        }else {
          var G__22812 = nval__22807;
          var G__22813 = n__22806 + 1;
          val__22805 = G__22812;
          n__22806 = G__22813;
          continue
        }
      }else {
        return val__22805
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__22814 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__22815 = this;
  if(this__22815.i + 1 < this__22815.a.length) {
    return new cljs.core.IndexedSeq(this__22815.a, this__22815.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__22816 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__22817 = this;
  var c__22818 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__22818 > 0) {
    return new cljs.core.RSeq(coll, c__22818 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__22819 = this;
  var this__22820 = this;
  return cljs.core.pr_str.call(null, this__22820)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__22821 = this;
  if(cljs.core.counted_QMARK_.call(null, this__22821.a)) {
    return cljs.core.ci_reduce.call(null, this__22821.a, f, this__22821.a[this__22821.i], this__22821.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__22821.a[this__22821.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__22822 = this;
  if(cljs.core.counted_QMARK_.call(null, this__22822.a)) {
    return cljs.core.ci_reduce.call(null, this__22822.a, f, start, this__22822.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__22823 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__22824 = this;
  return this__22824.a.length - this__22824.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__22825 = this;
  return this__22825.a[this__22825.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__22826 = this;
  if(this__22826.i + 1 < this__22826.a.length) {
    return new cljs.core.IndexedSeq(this__22826.a, this__22826.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__22827 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__22828 = this;
  var i__22829 = n + this__22828.i;
  if(i__22829 < this__22828.a.length) {
    return this__22828.a[i__22829]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__22830 = this;
  var i__22831 = n + this__22830.i;
  if(i__22831 < this__22830.a.length) {
    return this__22830.a[i__22831]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__22832 = null;
  var G__22832__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__22832__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__22832 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__22832__2.call(this, array, f);
      case 3:
        return G__22832__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__22832
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__22833 = null;
  var G__22833__2 = function(array, k) {
    return array[k]
  };
  var G__22833__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__22833 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22833__2.call(this, array, k);
      case 3:
        return G__22833__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__22833
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__22834 = null;
  var G__22834__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__22834__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__22834 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22834__2.call(this, array, n);
      case 3:
        return G__22834__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__22834
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__22835 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__22836 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__22837 = this;
  var this__22838 = this;
  return cljs.core.pr_str.call(null, this__22838)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__22839 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__22840 = this;
  return this__22840.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__22841 = this;
  return cljs.core._nth.call(null, this__22841.ci, this__22841.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__22842 = this;
  if(this__22842.i > 0) {
    return new cljs.core.RSeq(this__22842.ci, this__22842.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__22843 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__22844 = this;
  return new cljs.core.RSeq(this__22844.ci, this__22844.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__22845 = this;
  return this__22845.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__22849__22850 = coll;
      if(G__22849__22850) {
        if(function() {
          var or__3824__auto____22851 = G__22849__22850.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____22851) {
            return or__3824__auto____22851
          }else {
            return G__22849__22850.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__22849__22850.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__22849__22850)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__22849__22850)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__22856__22857 = coll;
      if(G__22856__22857) {
        if(function() {
          var or__3824__auto____22858 = G__22856__22857.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____22858) {
            return or__3824__auto____22858
          }else {
            return G__22856__22857.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__22856__22857.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__22856__22857)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__22856__22857)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__22859 = cljs.core.seq.call(null, coll);
      if(s__22859 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__22859)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__22864__22865 = coll;
      if(G__22864__22865) {
        if(function() {
          var or__3824__auto____22866 = G__22864__22865.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____22866) {
            return or__3824__auto____22866
          }else {
            return G__22864__22865.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__22864__22865.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__22864__22865)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__22864__22865)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__22867 = cljs.core.seq.call(null, coll);
      if(!(s__22867 == null)) {
        return cljs.core._rest.call(null, s__22867)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__22871__22872 = coll;
      if(G__22871__22872) {
        if(function() {
          var or__3824__auto____22873 = G__22871__22872.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____22873) {
            return or__3824__auto____22873
          }else {
            return G__22871__22872.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__22871__22872.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__22871__22872)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__22871__22872)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__22875 = cljs.core.next.call(null, s);
    if(!(sn__22875 == null)) {
      var G__22876 = sn__22875;
      s = G__22876;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__22877__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__22878 = conj.call(null, coll, x);
          var G__22879 = cljs.core.first.call(null, xs);
          var G__22880 = cljs.core.next.call(null, xs);
          coll = G__22878;
          x = G__22879;
          xs = G__22880;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__22877 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__22877__delegate.call(this, coll, x, xs)
    };
    G__22877.cljs$lang$maxFixedArity = 2;
    G__22877.cljs$lang$applyTo = function(arglist__22881) {
      var coll = cljs.core.first(arglist__22881);
      var x = cljs.core.first(cljs.core.next(arglist__22881));
      var xs = cljs.core.rest(cljs.core.next(arglist__22881));
      return G__22877__delegate(coll, x, xs)
    };
    G__22877.cljs$lang$arity$variadic = G__22877__delegate;
    return G__22877
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__22884 = cljs.core.seq.call(null, coll);
  var acc__22885 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__22884)) {
      return acc__22885 + cljs.core._count.call(null, s__22884)
    }else {
      var G__22886 = cljs.core.next.call(null, s__22884);
      var G__22887 = acc__22885 + 1;
      s__22884 = G__22886;
      acc__22885 = G__22887;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__22894__22895 = coll;
        if(G__22894__22895) {
          if(function() {
            var or__3824__auto____22896 = G__22894__22895.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____22896) {
              return or__3824__auto____22896
            }else {
              return G__22894__22895.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__22894__22895.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__22894__22895)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__22894__22895)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__22897__22898 = coll;
        if(G__22897__22898) {
          if(function() {
            var or__3824__auto____22899 = G__22897__22898.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____22899) {
              return or__3824__auto____22899
            }else {
              return G__22897__22898.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__22897__22898.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__22897__22898)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__22897__22898)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__22902__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__22901 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__22903 = ret__22901;
          var G__22904 = cljs.core.first.call(null, kvs);
          var G__22905 = cljs.core.second.call(null, kvs);
          var G__22906 = cljs.core.nnext.call(null, kvs);
          coll = G__22903;
          k = G__22904;
          v = G__22905;
          kvs = G__22906;
          continue
        }else {
          return ret__22901
        }
        break
      }
    };
    var G__22902 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__22902__delegate.call(this, coll, k, v, kvs)
    };
    G__22902.cljs$lang$maxFixedArity = 3;
    G__22902.cljs$lang$applyTo = function(arglist__22907) {
      var coll = cljs.core.first(arglist__22907);
      var k = cljs.core.first(cljs.core.next(arglist__22907));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__22907)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__22907)));
      return G__22902__delegate(coll, k, v, kvs)
    };
    G__22902.cljs$lang$arity$variadic = G__22902__delegate;
    return G__22902
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__22910__delegate = function(coll, k, ks) {
      while(true) {
        var ret__22909 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__22911 = ret__22909;
          var G__22912 = cljs.core.first.call(null, ks);
          var G__22913 = cljs.core.next.call(null, ks);
          coll = G__22911;
          k = G__22912;
          ks = G__22913;
          continue
        }else {
          return ret__22909
        }
        break
      }
    };
    var G__22910 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__22910__delegate.call(this, coll, k, ks)
    };
    G__22910.cljs$lang$maxFixedArity = 2;
    G__22910.cljs$lang$applyTo = function(arglist__22914) {
      var coll = cljs.core.first(arglist__22914);
      var k = cljs.core.first(cljs.core.next(arglist__22914));
      var ks = cljs.core.rest(cljs.core.next(arglist__22914));
      return G__22910__delegate(coll, k, ks)
    };
    G__22910.cljs$lang$arity$variadic = G__22910__delegate;
    return G__22910
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__22918__22919 = o;
    if(G__22918__22919) {
      if(function() {
        var or__3824__auto____22920 = G__22918__22919.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____22920) {
          return or__3824__auto____22920
        }else {
          return G__22918__22919.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__22918__22919.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__22918__22919)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__22918__22919)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__22923__delegate = function(coll, k, ks) {
      while(true) {
        var ret__22922 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__22924 = ret__22922;
          var G__22925 = cljs.core.first.call(null, ks);
          var G__22926 = cljs.core.next.call(null, ks);
          coll = G__22924;
          k = G__22925;
          ks = G__22926;
          continue
        }else {
          return ret__22922
        }
        break
      }
    };
    var G__22923 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__22923__delegate.call(this, coll, k, ks)
    };
    G__22923.cljs$lang$maxFixedArity = 2;
    G__22923.cljs$lang$applyTo = function(arglist__22927) {
      var coll = cljs.core.first(arglist__22927);
      var k = cljs.core.first(cljs.core.next(arglist__22927));
      var ks = cljs.core.rest(cljs.core.next(arglist__22927));
      return G__22923__delegate(coll, k, ks)
    };
    G__22923.cljs$lang$arity$variadic = G__22923__delegate;
    return G__22923
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__22929 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__22929;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__22929
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__22931 = cljs.core.string_hash_cache[k];
  if(!(h__22931 == null)) {
    return h__22931
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____22933 = goog.isString(o);
      if(and__3822__auto____22933) {
        return check_cache
      }else {
        return and__3822__auto____22933
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__22937__22938 = x;
    if(G__22937__22938) {
      if(function() {
        var or__3824__auto____22939 = G__22937__22938.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____22939) {
          return or__3824__auto____22939
        }else {
          return G__22937__22938.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__22937__22938.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__22937__22938)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__22937__22938)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__22943__22944 = x;
    if(G__22943__22944) {
      if(function() {
        var or__3824__auto____22945 = G__22943__22944.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____22945) {
          return or__3824__auto____22945
        }else {
          return G__22943__22944.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__22943__22944.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__22943__22944)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__22943__22944)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__22949__22950 = x;
  if(G__22949__22950) {
    if(function() {
      var or__3824__auto____22951 = G__22949__22950.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____22951) {
        return or__3824__auto____22951
      }else {
        return G__22949__22950.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__22949__22950.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__22949__22950)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__22949__22950)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__22955__22956 = x;
  if(G__22955__22956) {
    if(function() {
      var or__3824__auto____22957 = G__22955__22956.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____22957) {
        return or__3824__auto____22957
      }else {
        return G__22955__22956.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__22955__22956.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__22955__22956)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__22955__22956)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__22961__22962 = x;
  if(G__22961__22962) {
    if(function() {
      var or__3824__auto____22963 = G__22961__22962.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____22963) {
        return or__3824__auto____22963
      }else {
        return G__22961__22962.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__22961__22962.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__22961__22962)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__22961__22962)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__22967__22968 = x;
  if(G__22967__22968) {
    if(function() {
      var or__3824__auto____22969 = G__22967__22968.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____22969) {
        return or__3824__auto____22969
      }else {
        return G__22967__22968.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__22967__22968.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__22967__22968)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__22967__22968)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__22973__22974 = x;
  if(G__22973__22974) {
    if(function() {
      var or__3824__auto____22975 = G__22973__22974.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____22975) {
        return or__3824__auto____22975
      }else {
        return G__22973__22974.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__22973__22974.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__22973__22974)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__22973__22974)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__22979__22980 = x;
    if(G__22979__22980) {
      if(function() {
        var or__3824__auto____22981 = G__22979__22980.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____22981) {
          return or__3824__auto____22981
        }else {
          return G__22979__22980.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__22979__22980.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__22979__22980)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__22979__22980)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__22985__22986 = x;
  if(G__22985__22986) {
    if(function() {
      var or__3824__auto____22987 = G__22985__22986.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____22987) {
        return or__3824__auto____22987
      }else {
        return G__22985__22986.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__22985__22986.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__22985__22986)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__22985__22986)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__22991__22992 = x;
  if(G__22991__22992) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____22993 = null;
      if(cljs.core.truth_(or__3824__auto____22993)) {
        return or__3824__auto____22993
      }else {
        return G__22991__22992.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__22991__22992.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__22991__22992)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__22991__22992)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__22994__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__22994 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__22994__delegate.call(this, keyvals)
    };
    G__22994.cljs$lang$maxFixedArity = 0;
    G__22994.cljs$lang$applyTo = function(arglist__22995) {
      var keyvals = cljs.core.seq(arglist__22995);
      return G__22994__delegate(keyvals)
    };
    G__22994.cljs$lang$arity$variadic = G__22994__delegate;
    return G__22994
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__22997 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__22997.push(key)
  });
  return keys__22997
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__23001 = i;
  var j__23002 = j;
  var len__23003 = len;
  while(true) {
    if(len__23003 === 0) {
      return to
    }else {
      to[j__23002] = from[i__23001];
      var G__23004 = i__23001 + 1;
      var G__23005 = j__23002 + 1;
      var G__23006 = len__23003 - 1;
      i__23001 = G__23004;
      j__23002 = G__23005;
      len__23003 = G__23006;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__23010 = i + (len - 1);
  var j__23011 = j + (len - 1);
  var len__23012 = len;
  while(true) {
    if(len__23012 === 0) {
      return to
    }else {
      to[j__23011] = from[i__23010];
      var G__23013 = i__23010 - 1;
      var G__23014 = j__23011 - 1;
      var G__23015 = len__23012 - 1;
      i__23010 = G__23013;
      j__23011 = G__23014;
      len__23012 = G__23015;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__23019__23020 = s;
    if(G__23019__23020) {
      if(function() {
        var or__3824__auto____23021 = G__23019__23020.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____23021) {
          return or__3824__auto____23021
        }else {
          return G__23019__23020.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__23019__23020.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__23019__23020)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__23019__23020)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__23025__23026 = s;
  if(G__23025__23026) {
    if(function() {
      var or__3824__auto____23027 = G__23025__23026.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____23027) {
        return or__3824__auto____23027
      }else {
        return G__23025__23026.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__23025__23026.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__23025__23026)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__23025__23026)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____23030 = goog.isString(x);
  if(and__3822__auto____23030) {
    return!function() {
      var or__3824__auto____23031 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____23031) {
        return or__3824__auto____23031
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____23030
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____23033 = goog.isString(x);
  if(and__3822__auto____23033) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____23033
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____23035 = goog.isString(x);
  if(and__3822__auto____23035) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____23035
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____23040 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____23040) {
    return or__3824__auto____23040
  }else {
    var G__23041__23042 = f;
    if(G__23041__23042) {
      if(function() {
        var or__3824__auto____23043 = G__23041__23042.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____23043) {
          return or__3824__auto____23043
        }else {
          return G__23041__23042.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__23041__23042.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__23041__23042)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__23041__23042)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____23045 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____23045) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____23045
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____23048 = coll;
    if(cljs.core.truth_(and__3822__auto____23048)) {
      var and__3822__auto____23049 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____23049) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____23049
      }
    }else {
      return and__3822__auto____23048
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__23058__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__23054 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__23055 = more;
        while(true) {
          var x__23056 = cljs.core.first.call(null, xs__23055);
          var etc__23057 = cljs.core.next.call(null, xs__23055);
          if(cljs.core.truth_(xs__23055)) {
            if(cljs.core.contains_QMARK_.call(null, s__23054, x__23056)) {
              return false
            }else {
              var G__23059 = cljs.core.conj.call(null, s__23054, x__23056);
              var G__23060 = etc__23057;
              s__23054 = G__23059;
              xs__23055 = G__23060;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__23058 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__23058__delegate.call(this, x, y, more)
    };
    G__23058.cljs$lang$maxFixedArity = 2;
    G__23058.cljs$lang$applyTo = function(arglist__23061) {
      var x = cljs.core.first(arglist__23061);
      var y = cljs.core.first(cljs.core.next(arglist__23061));
      var more = cljs.core.rest(cljs.core.next(arglist__23061));
      return G__23058__delegate(x, y, more)
    };
    G__23058.cljs$lang$arity$variadic = G__23058__delegate;
    return G__23058
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__23065__23066 = x;
            if(G__23065__23066) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____23067 = null;
                if(cljs.core.truth_(or__3824__auto____23067)) {
                  return or__3824__auto____23067
                }else {
                  return G__23065__23066.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__23065__23066.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__23065__23066)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__23065__23066)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__23072 = cljs.core.count.call(null, xs);
    var yl__23073 = cljs.core.count.call(null, ys);
    if(xl__23072 < yl__23073) {
      return-1
    }else {
      if(xl__23072 > yl__23073) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__23072, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__23074 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____23075 = d__23074 === 0;
        if(and__3822__auto____23075) {
          return n + 1 < len
        }else {
          return and__3822__auto____23075
        }
      }()) {
        var G__23076 = xs;
        var G__23077 = ys;
        var G__23078 = len;
        var G__23079 = n + 1;
        xs = G__23076;
        ys = G__23077;
        len = G__23078;
        n = G__23079;
        continue
      }else {
        return d__23074
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__23081 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__23081)) {
        return r__23081
      }else {
        if(cljs.core.truth_(r__23081)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__23083 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__23083, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__23083)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____23089 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____23089) {
      var s__23090 = temp__3971__auto____23089;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__23090), cljs.core.next.call(null, s__23090))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__23091 = val;
    var coll__23092 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__23092) {
        var nval__23093 = f.call(null, val__23091, cljs.core.first.call(null, coll__23092));
        if(cljs.core.reduced_QMARK_.call(null, nval__23093)) {
          return cljs.core.deref.call(null, nval__23093)
        }else {
          var G__23094 = nval__23093;
          var G__23095 = cljs.core.next.call(null, coll__23092);
          val__23091 = G__23094;
          coll__23092 = G__23095;
          continue
        }
      }else {
        return val__23091
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__23097 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__23097);
  return cljs.core.vec.call(null, a__23097)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__23104__23105 = coll;
      if(G__23104__23105) {
        if(function() {
          var or__3824__auto____23106 = G__23104__23105.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____23106) {
            return or__3824__auto____23106
          }else {
            return G__23104__23105.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__23104__23105.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__23104__23105)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__23104__23105)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__23107__23108 = coll;
      if(G__23107__23108) {
        if(function() {
          var or__3824__auto____23109 = G__23107__23108.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____23109) {
            return or__3824__auto____23109
          }else {
            return G__23107__23108.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__23107__23108.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__23107__23108)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__23107__23108)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__23110 = this;
  return this__23110.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__23111__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__23111 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__23111__delegate.call(this, x, y, more)
    };
    G__23111.cljs$lang$maxFixedArity = 2;
    G__23111.cljs$lang$applyTo = function(arglist__23112) {
      var x = cljs.core.first(arglist__23112);
      var y = cljs.core.first(cljs.core.next(arglist__23112));
      var more = cljs.core.rest(cljs.core.next(arglist__23112));
      return G__23111__delegate(x, y, more)
    };
    G__23111.cljs$lang$arity$variadic = G__23111__delegate;
    return G__23111
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__23113__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__23113 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__23113__delegate.call(this, x, y, more)
    };
    G__23113.cljs$lang$maxFixedArity = 2;
    G__23113.cljs$lang$applyTo = function(arglist__23114) {
      var x = cljs.core.first(arglist__23114);
      var y = cljs.core.first(cljs.core.next(arglist__23114));
      var more = cljs.core.rest(cljs.core.next(arglist__23114));
      return G__23113__delegate(x, y, more)
    };
    G__23113.cljs$lang$arity$variadic = G__23113__delegate;
    return G__23113
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__23115__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__23115 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__23115__delegate.call(this, x, y, more)
    };
    G__23115.cljs$lang$maxFixedArity = 2;
    G__23115.cljs$lang$applyTo = function(arglist__23116) {
      var x = cljs.core.first(arglist__23116);
      var y = cljs.core.first(cljs.core.next(arglist__23116));
      var more = cljs.core.rest(cljs.core.next(arglist__23116));
      return G__23115__delegate(x, y, more)
    };
    G__23115.cljs$lang$arity$variadic = G__23115__delegate;
    return G__23115
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__23117__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__23117 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__23117__delegate.call(this, x, y, more)
    };
    G__23117.cljs$lang$maxFixedArity = 2;
    G__23117.cljs$lang$applyTo = function(arglist__23118) {
      var x = cljs.core.first(arglist__23118);
      var y = cljs.core.first(cljs.core.next(arglist__23118));
      var more = cljs.core.rest(cljs.core.next(arglist__23118));
      return G__23117__delegate(x, y, more)
    };
    G__23117.cljs$lang$arity$variadic = G__23117__delegate;
    return G__23117
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__23119__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__23120 = y;
            var G__23121 = cljs.core.first.call(null, more);
            var G__23122 = cljs.core.next.call(null, more);
            x = G__23120;
            y = G__23121;
            more = G__23122;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__23119 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__23119__delegate.call(this, x, y, more)
    };
    G__23119.cljs$lang$maxFixedArity = 2;
    G__23119.cljs$lang$applyTo = function(arglist__23123) {
      var x = cljs.core.first(arglist__23123);
      var y = cljs.core.first(cljs.core.next(arglist__23123));
      var more = cljs.core.rest(cljs.core.next(arglist__23123));
      return G__23119__delegate(x, y, more)
    };
    G__23119.cljs$lang$arity$variadic = G__23119__delegate;
    return G__23119
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__23124__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__23125 = y;
            var G__23126 = cljs.core.first.call(null, more);
            var G__23127 = cljs.core.next.call(null, more);
            x = G__23125;
            y = G__23126;
            more = G__23127;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__23124 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__23124__delegate.call(this, x, y, more)
    };
    G__23124.cljs$lang$maxFixedArity = 2;
    G__23124.cljs$lang$applyTo = function(arglist__23128) {
      var x = cljs.core.first(arglist__23128);
      var y = cljs.core.first(cljs.core.next(arglist__23128));
      var more = cljs.core.rest(cljs.core.next(arglist__23128));
      return G__23124__delegate(x, y, more)
    };
    G__23124.cljs$lang$arity$variadic = G__23124__delegate;
    return G__23124
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__23129__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__23130 = y;
            var G__23131 = cljs.core.first.call(null, more);
            var G__23132 = cljs.core.next.call(null, more);
            x = G__23130;
            y = G__23131;
            more = G__23132;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__23129 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__23129__delegate.call(this, x, y, more)
    };
    G__23129.cljs$lang$maxFixedArity = 2;
    G__23129.cljs$lang$applyTo = function(arglist__23133) {
      var x = cljs.core.first(arglist__23133);
      var y = cljs.core.first(cljs.core.next(arglist__23133));
      var more = cljs.core.rest(cljs.core.next(arglist__23133));
      return G__23129__delegate(x, y, more)
    };
    G__23129.cljs$lang$arity$variadic = G__23129__delegate;
    return G__23129
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__23134__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__23135 = y;
            var G__23136 = cljs.core.first.call(null, more);
            var G__23137 = cljs.core.next.call(null, more);
            x = G__23135;
            y = G__23136;
            more = G__23137;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__23134 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__23134__delegate.call(this, x, y, more)
    };
    G__23134.cljs$lang$maxFixedArity = 2;
    G__23134.cljs$lang$applyTo = function(arglist__23138) {
      var x = cljs.core.first(arglist__23138);
      var y = cljs.core.first(cljs.core.next(arglist__23138));
      var more = cljs.core.rest(cljs.core.next(arglist__23138));
      return G__23134__delegate(x, y, more)
    };
    G__23134.cljs$lang$arity$variadic = G__23134__delegate;
    return G__23134
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__23139__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__23139 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__23139__delegate.call(this, x, y, more)
    };
    G__23139.cljs$lang$maxFixedArity = 2;
    G__23139.cljs$lang$applyTo = function(arglist__23140) {
      var x = cljs.core.first(arglist__23140);
      var y = cljs.core.first(cljs.core.next(arglist__23140));
      var more = cljs.core.rest(cljs.core.next(arglist__23140));
      return G__23139__delegate(x, y, more)
    };
    G__23139.cljs$lang$arity$variadic = G__23139__delegate;
    return G__23139
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__23141__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__23141 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__23141__delegate.call(this, x, y, more)
    };
    G__23141.cljs$lang$maxFixedArity = 2;
    G__23141.cljs$lang$applyTo = function(arglist__23142) {
      var x = cljs.core.first(arglist__23142);
      var y = cljs.core.first(cljs.core.next(arglist__23142));
      var more = cljs.core.rest(cljs.core.next(arglist__23142));
      return G__23141__delegate(x, y, more)
    };
    G__23141.cljs$lang$arity$variadic = G__23141__delegate;
    return G__23141
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__23144 = n % d;
  return cljs.core.fix.call(null, (n - rem__23144) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__23146 = cljs.core.quot.call(null, n, d);
  return n - d * q__23146
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__23149 = v - (v >> 1 & 1431655765);
  var v__23150 = (v__23149 & 858993459) + (v__23149 >> 2 & 858993459);
  return(v__23150 + (v__23150 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__23151__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__23152 = y;
            var G__23153 = cljs.core.first.call(null, more);
            var G__23154 = cljs.core.next.call(null, more);
            x = G__23152;
            y = G__23153;
            more = G__23154;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__23151 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__23151__delegate.call(this, x, y, more)
    };
    G__23151.cljs$lang$maxFixedArity = 2;
    G__23151.cljs$lang$applyTo = function(arglist__23155) {
      var x = cljs.core.first(arglist__23155);
      var y = cljs.core.first(cljs.core.next(arglist__23155));
      var more = cljs.core.rest(cljs.core.next(arglist__23155));
      return G__23151__delegate(x, y, more)
    };
    G__23151.cljs$lang$arity$variadic = G__23151__delegate;
    return G__23151
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__23159 = n;
  var xs__23160 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____23161 = xs__23160;
      if(and__3822__auto____23161) {
        return n__23159 > 0
      }else {
        return and__3822__auto____23161
      }
    }())) {
      var G__23162 = n__23159 - 1;
      var G__23163 = cljs.core.next.call(null, xs__23160);
      n__23159 = G__23162;
      xs__23160 = G__23163;
      continue
    }else {
      return xs__23160
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__23164__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__23165 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__23166 = cljs.core.next.call(null, more);
            sb = G__23165;
            more = G__23166;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__23164 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__23164__delegate.call(this, x, ys)
    };
    G__23164.cljs$lang$maxFixedArity = 1;
    G__23164.cljs$lang$applyTo = function(arglist__23167) {
      var x = cljs.core.first(arglist__23167);
      var ys = cljs.core.rest(arglist__23167);
      return G__23164__delegate(x, ys)
    };
    G__23164.cljs$lang$arity$variadic = G__23164__delegate;
    return G__23164
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__23168__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__23169 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__23170 = cljs.core.next.call(null, more);
            sb = G__23169;
            more = G__23170;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__23168 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__23168__delegate.call(this, x, ys)
    };
    G__23168.cljs$lang$maxFixedArity = 1;
    G__23168.cljs$lang$applyTo = function(arglist__23171) {
      var x = cljs.core.first(arglist__23171);
      var ys = cljs.core.rest(arglist__23171);
      return G__23168__delegate(x, ys)
    };
    G__23168.cljs$lang$arity$variadic = G__23168__delegate;
    return G__23168
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__23172) {
    var fmt = cljs.core.first(arglist__23172);
    var args = cljs.core.rest(arglist__23172);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__23175 = cljs.core.seq.call(null, x);
    var ys__23176 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__23175 == null) {
        return ys__23176 == null
      }else {
        if(ys__23176 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__23175), cljs.core.first.call(null, ys__23176))) {
            var G__23177 = cljs.core.next.call(null, xs__23175);
            var G__23178 = cljs.core.next.call(null, ys__23176);
            xs__23175 = G__23177;
            ys__23176 = G__23178;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__23179_SHARP_, p2__23180_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__23179_SHARP_, cljs.core.hash.call(null, p2__23180_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__23184 = 0;
  var s__23185 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__23185) {
      var e__23186 = cljs.core.first.call(null, s__23185);
      var G__23187 = (h__23184 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__23186)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__23186)))) % 4503599627370496;
      var G__23188 = cljs.core.next.call(null, s__23185);
      h__23184 = G__23187;
      s__23185 = G__23188;
      continue
    }else {
      return h__23184
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__23192 = 0;
  var s__23193 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__23193) {
      var e__23194 = cljs.core.first.call(null, s__23193);
      var G__23195 = (h__23192 + cljs.core.hash.call(null, e__23194)) % 4503599627370496;
      var G__23196 = cljs.core.next.call(null, s__23193);
      h__23192 = G__23195;
      s__23193 = G__23196;
      continue
    }else {
      return h__23192
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__23217__23218 = cljs.core.seq.call(null, fn_map);
  if(G__23217__23218) {
    var G__23220__23222 = cljs.core.first.call(null, G__23217__23218);
    var vec__23221__23223 = G__23220__23222;
    var key_name__23224 = cljs.core.nth.call(null, vec__23221__23223, 0, null);
    var f__23225 = cljs.core.nth.call(null, vec__23221__23223, 1, null);
    var G__23217__23226 = G__23217__23218;
    var G__23220__23227 = G__23220__23222;
    var G__23217__23228 = G__23217__23226;
    while(true) {
      var vec__23229__23230 = G__23220__23227;
      var key_name__23231 = cljs.core.nth.call(null, vec__23229__23230, 0, null);
      var f__23232 = cljs.core.nth.call(null, vec__23229__23230, 1, null);
      var G__23217__23233 = G__23217__23228;
      var str_name__23234 = cljs.core.name.call(null, key_name__23231);
      obj[str_name__23234] = f__23232;
      var temp__3974__auto____23235 = cljs.core.next.call(null, G__23217__23233);
      if(temp__3974__auto____23235) {
        var G__23217__23236 = temp__3974__auto____23235;
        var G__23237 = cljs.core.first.call(null, G__23217__23236);
        var G__23238 = G__23217__23236;
        G__23220__23227 = G__23237;
        G__23217__23228 = G__23238;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__23239 = this;
  var h__2085__auto____23240 = this__23239.__hash;
  if(!(h__2085__auto____23240 == null)) {
    return h__2085__auto____23240
  }else {
    var h__2085__auto____23241 = cljs.core.hash_coll.call(null, coll);
    this__23239.__hash = h__2085__auto____23241;
    return h__2085__auto____23241
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__23242 = this;
  if(this__23242.count === 1) {
    return null
  }else {
    return this__23242.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__23243 = this;
  return new cljs.core.List(this__23243.meta, o, coll, this__23243.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__23244 = this;
  var this__23245 = this;
  return cljs.core.pr_str.call(null, this__23245)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__23246 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__23247 = this;
  return this__23247.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__23248 = this;
  return this__23248.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__23249 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__23250 = this;
  return this__23250.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__23251 = this;
  if(this__23251.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__23251.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__23252 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__23253 = this;
  return new cljs.core.List(meta, this__23253.first, this__23253.rest, this__23253.count, this__23253.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__23254 = this;
  return this__23254.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__23255 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__23256 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__23257 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__23258 = this;
  return new cljs.core.List(this__23258.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__23259 = this;
  var this__23260 = this;
  return cljs.core.pr_str.call(null, this__23260)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__23261 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__23262 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__23263 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__23264 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__23265 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__23266 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__23267 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__23268 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__23269 = this;
  return this__23269.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__23270 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__23274__23275 = coll;
  if(G__23274__23275) {
    if(function() {
      var or__3824__auto____23276 = G__23274__23275.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____23276) {
        return or__3824__auto____23276
      }else {
        return G__23274__23275.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__23274__23275.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__23274__23275)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__23274__23275)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__23277__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__23277 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__23277__delegate.call(this, x, y, z, items)
    };
    G__23277.cljs$lang$maxFixedArity = 3;
    G__23277.cljs$lang$applyTo = function(arglist__23278) {
      var x = cljs.core.first(arglist__23278);
      var y = cljs.core.first(cljs.core.next(arglist__23278));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__23278)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__23278)));
      return G__23277__delegate(x, y, z, items)
    };
    G__23277.cljs$lang$arity$variadic = G__23277__delegate;
    return G__23277
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__23279 = this;
  var h__2085__auto____23280 = this__23279.__hash;
  if(!(h__2085__auto____23280 == null)) {
    return h__2085__auto____23280
  }else {
    var h__2085__auto____23281 = cljs.core.hash_coll.call(null, coll);
    this__23279.__hash = h__2085__auto____23281;
    return h__2085__auto____23281
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__23282 = this;
  if(this__23282.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__23282.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__23283 = this;
  return new cljs.core.Cons(null, o, coll, this__23283.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__23284 = this;
  var this__23285 = this;
  return cljs.core.pr_str.call(null, this__23285)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__23286 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__23287 = this;
  return this__23287.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__23288 = this;
  if(this__23288.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__23288.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__23289 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__23290 = this;
  return new cljs.core.Cons(meta, this__23290.first, this__23290.rest, this__23290.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__23291 = this;
  return this__23291.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__23292 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__23292.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____23297 = coll == null;
    if(or__3824__auto____23297) {
      return or__3824__auto____23297
    }else {
      var G__23298__23299 = coll;
      if(G__23298__23299) {
        if(function() {
          var or__3824__auto____23300 = G__23298__23299.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____23300) {
            return or__3824__auto____23300
          }else {
            return G__23298__23299.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__23298__23299.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__23298__23299)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__23298__23299)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__23304__23305 = x;
  if(G__23304__23305) {
    if(function() {
      var or__3824__auto____23306 = G__23304__23305.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____23306) {
        return or__3824__auto____23306
      }else {
        return G__23304__23305.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__23304__23305.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__23304__23305)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__23304__23305)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__23307 = null;
  var G__23307__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__23307__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__23307 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__23307__2.call(this, string, f);
      case 3:
        return G__23307__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__23307
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__23308 = null;
  var G__23308__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__23308__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__23308 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23308__2.call(this, string, k);
      case 3:
        return G__23308__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__23308
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__23309 = null;
  var G__23309__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__23309__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__23309 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23309__2.call(this, string, n);
      case 3:
        return G__23309__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__23309
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__23321 = null;
  var G__23321__2 = function(this_sym23312, coll) {
    var this__23314 = this;
    var this_sym23312__23315 = this;
    var ___23316 = this_sym23312__23315;
    if(coll == null) {
      return null
    }else {
      var strobj__23317 = coll.strobj;
      if(strobj__23317 == null) {
        return cljs.core._lookup.call(null, coll, this__23314.k, null)
      }else {
        return strobj__23317[this__23314.k]
      }
    }
  };
  var G__23321__3 = function(this_sym23313, coll, not_found) {
    var this__23314 = this;
    var this_sym23313__23318 = this;
    var ___23319 = this_sym23313__23318;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__23314.k, not_found)
    }
  };
  G__23321 = function(this_sym23313, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23321__2.call(this, this_sym23313, coll);
      case 3:
        return G__23321__3.call(this, this_sym23313, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__23321
}();
cljs.core.Keyword.prototype.apply = function(this_sym23310, args23311) {
  var this__23320 = this;
  return this_sym23310.call.apply(this_sym23310, [this_sym23310].concat(args23311.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__23330 = null;
  var G__23330__2 = function(this_sym23324, coll) {
    var this_sym23324__23326 = this;
    var this__23327 = this_sym23324__23326;
    return cljs.core._lookup.call(null, coll, this__23327.toString(), null)
  };
  var G__23330__3 = function(this_sym23325, coll, not_found) {
    var this_sym23325__23328 = this;
    var this__23329 = this_sym23325__23328;
    return cljs.core._lookup.call(null, coll, this__23329.toString(), not_found)
  };
  G__23330 = function(this_sym23325, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23330__2.call(this, this_sym23325, coll);
      case 3:
        return G__23330__3.call(this, this_sym23325, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__23330
}();
String.prototype.apply = function(this_sym23322, args23323) {
  return this_sym23322.call.apply(this_sym23322, [this_sym23322].concat(args23323.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__23332 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__23332
  }else {
    lazy_seq.x = x__23332.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__23333 = this;
  var h__2085__auto____23334 = this__23333.__hash;
  if(!(h__2085__auto____23334 == null)) {
    return h__2085__auto____23334
  }else {
    var h__2085__auto____23335 = cljs.core.hash_coll.call(null, coll);
    this__23333.__hash = h__2085__auto____23335;
    return h__2085__auto____23335
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__23336 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__23337 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__23338 = this;
  var this__23339 = this;
  return cljs.core.pr_str.call(null, this__23339)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__23340 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__23341 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__23342 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__23343 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__23344 = this;
  return new cljs.core.LazySeq(meta, this__23344.realized, this__23344.x, this__23344.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__23345 = this;
  return this__23345.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__23346 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__23346.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__23347 = this;
  return this__23347.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__23348 = this;
  var ___23349 = this;
  this__23348.buf[this__23348.end] = o;
  return this__23348.end = this__23348.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__23350 = this;
  var ___23351 = this;
  var ret__23352 = new cljs.core.ArrayChunk(this__23350.buf, 0, this__23350.end);
  this__23350.buf = null;
  return ret__23352
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__23353 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__23353.arr[this__23353.off], this__23353.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__23354 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__23354.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__23355 = this;
  if(this__23355.off === this__23355.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__23355.arr, this__23355.off + 1, this__23355.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__23356 = this;
  return this__23356.arr[this__23356.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__23357 = this;
  if(function() {
    var and__3822__auto____23358 = i >= 0;
    if(and__3822__auto____23358) {
      return i < this__23357.end - this__23357.off
    }else {
      return and__3822__auto____23358
    }
  }()) {
    return this__23357.arr[this__23357.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__23359 = this;
  return this__23359.end - this__23359.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__23360 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__23361 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__23362 = this;
  return cljs.core._nth.call(null, this__23362.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__23363 = this;
  if(cljs.core._count.call(null, this__23363.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__23363.chunk), this__23363.more, this__23363.meta)
  }else {
    if(this__23363.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__23363.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__23364 = this;
  if(this__23364.more == null) {
    return null
  }else {
    return this__23364.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__23365 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__23366 = this;
  return new cljs.core.ChunkedCons(this__23366.chunk, this__23366.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__23367 = this;
  return this__23367.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__23368 = this;
  return this__23368.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__23369 = this;
  if(this__23369.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__23369.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__23373__23374 = s;
    if(G__23373__23374) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____23375 = null;
        if(cljs.core.truth_(or__3824__auto____23375)) {
          return or__3824__auto____23375
        }else {
          return G__23373__23374.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__23373__23374.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__23373__23374)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__23373__23374)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__23378 = [];
  var s__23379 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__23379)) {
      ary__23378.push(cljs.core.first.call(null, s__23379));
      var G__23380 = cljs.core.next.call(null, s__23379);
      s__23379 = G__23380;
      continue
    }else {
      return ary__23378
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__23384 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__23385 = 0;
  var xs__23386 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__23386) {
      ret__23384[i__23385] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__23386));
      var G__23387 = i__23385 + 1;
      var G__23388 = cljs.core.next.call(null, xs__23386);
      i__23385 = G__23387;
      xs__23386 = G__23388;
      continue
    }else {
    }
    break
  }
  return ret__23384
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__23396 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__23397 = cljs.core.seq.call(null, init_val_or_seq);
      var i__23398 = 0;
      var s__23399 = s__23397;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____23400 = s__23399;
          if(and__3822__auto____23400) {
            return i__23398 < size
          }else {
            return and__3822__auto____23400
          }
        }())) {
          a__23396[i__23398] = cljs.core.first.call(null, s__23399);
          var G__23403 = i__23398 + 1;
          var G__23404 = cljs.core.next.call(null, s__23399);
          i__23398 = G__23403;
          s__23399 = G__23404;
          continue
        }else {
          return a__23396
        }
        break
      }
    }else {
      var n__2420__auto____23401 = size;
      var i__23402 = 0;
      while(true) {
        if(i__23402 < n__2420__auto____23401) {
          a__23396[i__23402] = init_val_or_seq;
          var G__23405 = i__23402 + 1;
          i__23402 = G__23405;
          continue
        }else {
        }
        break
      }
      return a__23396
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__23413 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__23414 = cljs.core.seq.call(null, init_val_or_seq);
      var i__23415 = 0;
      var s__23416 = s__23414;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____23417 = s__23416;
          if(and__3822__auto____23417) {
            return i__23415 < size
          }else {
            return and__3822__auto____23417
          }
        }())) {
          a__23413[i__23415] = cljs.core.first.call(null, s__23416);
          var G__23420 = i__23415 + 1;
          var G__23421 = cljs.core.next.call(null, s__23416);
          i__23415 = G__23420;
          s__23416 = G__23421;
          continue
        }else {
          return a__23413
        }
        break
      }
    }else {
      var n__2420__auto____23418 = size;
      var i__23419 = 0;
      while(true) {
        if(i__23419 < n__2420__auto____23418) {
          a__23413[i__23419] = init_val_or_seq;
          var G__23422 = i__23419 + 1;
          i__23419 = G__23422;
          continue
        }else {
        }
        break
      }
      return a__23413
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__23430 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__23431 = cljs.core.seq.call(null, init_val_or_seq);
      var i__23432 = 0;
      var s__23433 = s__23431;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____23434 = s__23433;
          if(and__3822__auto____23434) {
            return i__23432 < size
          }else {
            return and__3822__auto____23434
          }
        }())) {
          a__23430[i__23432] = cljs.core.first.call(null, s__23433);
          var G__23437 = i__23432 + 1;
          var G__23438 = cljs.core.next.call(null, s__23433);
          i__23432 = G__23437;
          s__23433 = G__23438;
          continue
        }else {
          return a__23430
        }
        break
      }
    }else {
      var n__2420__auto____23435 = size;
      var i__23436 = 0;
      while(true) {
        if(i__23436 < n__2420__auto____23435) {
          a__23430[i__23436] = init_val_or_seq;
          var G__23439 = i__23436 + 1;
          i__23436 = G__23439;
          continue
        }else {
        }
        break
      }
      return a__23430
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__23444 = s;
    var i__23445 = n;
    var sum__23446 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____23447 = i__23445 > 0;
        if(and__3822__auto____23447) {
          return cljs.core.seq.call(null, s__23444)
        }else {
          return and__3822__auto____23447
        }
      }())) {
        var G__23448 = cljs.core.next.call(null, s__23444);
        var G__23449 = i__23445 - 1;
        var G__23450 = sum__23446 + 1;
        s__23444 = G__23448;
        i__23445 = G__23449;
        sum__23446 = G__23450;
        continue
      }else {
        return sum__23446
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__23455 = cljs.core.seq.call(null, x);
      if(s__23455) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__23455)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__23455), concat.call(null, cljs.core.chunk_rest.call(null, s__23455), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__23455), concat.call(null, cljs.core.rest.call(null, s__23455), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__23459__delegate = function(x, y, zs) {
      var cat__23458 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__23457 = cljs.core.seq.call(null, xys);
          if(xys__23457) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__23457)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__23457), cat.call(null, cljs.core.chunk_rest.call(null, xys__23457), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__23457), cat.call(null, cljs.core.rest.call(null, xys__23457), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__23458.call(null, concat.call(null, x, y), zs)
    };
    var G__23459 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__23459__delegate.call(this, x, y, zs)
    };
    G__23459.cljs$lang$maxFixedArity = 2;
    G__23459.cljs$lang$applyTo = function(arglist__23460) {
      var x = cljs.core.first(arglist__23460);
      var y = cljs.core.first(cljs.core.next(arglist__23460));
      var zs = cljs.core.rest(cljs.core.next(arglist__23460));
      return G__23459__delegate(x, y, zs)
    };
    G__23459.cljs$lang$arity$variadic = G__23459__delegate;
    return G__23459
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__23461__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__23461 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__23461__delegate.call(this, a, b, c, d, more)
    };
    G__23461.cljs$lang$maxFixedArity = 4;
    G__23461.cljs$lang$applyTo = function(arglist__23462) {
      var a = cljs.core.first(arglist__23462);
      var b = cljs.core.first(cljs.core.next(arglist__23462));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__23462)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__23462))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__23462))));
      return G__23461__delegate(a, b, c, d, more)
    };
    G__23461.cljs$lang$arity$variadic = G__23461__delegate;
    return G__23461
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__23504 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__23505 = cljs.core._first.call(null, args__23504);
    var args__23506 = cljs.core._rest.call(null, args__23504);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__23505)
      }else {
        return f.call(null, a__23505)
      }
    }else {
      var b__23507 = cljs.core._first.call(null, args__23506);
      var args__23508 = cljs.core._rest.call(null, args__23506);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__23505, b__23507)
        }else {
          return f.call(null, a__23505, b__23507)
        }
      }else {
        var c__23509 = cljs.core._first.call(null, args__23508);
        var args__23510 = cljs.core._rest.call(null, args__23508);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__23505, b__23507, c__23509)
          }else {
            return f.call(null, a__23505, b__23507, c__23509)
          }
        }else {
          var d__23511 = cljs.core._first.call(null, args__23510);
          var args__23512 = cljs.core._rest.call(null, args__23510);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__23505, b__23507, c__23509, d__23511)
            }else {
              return f.call(null, a__23505, b__23507, c__23509, d__23511)
            }
          }else {
            var e__23513 = cljs.core._first.call(null, args__23512);
            var args__23514 = cljs.core._rest.call(null, args__23512);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__23505, b__23507, c__23509, d__23511, e__23513)
              }else {
                return f.call(null, a__23505, b__23507, c__23509, d__23511, e__23513)
              }
            }else {
              var f__23515 = cljs.core._first.call(null, args__23514);
              var args__23516 = cljs.core._rest.call(null, args__23514);
              if(argc === 6) {
                if(f__23515.cljs$lang$arity$6) {
                  return f__23515.cljs$lang$arity$6(a__23505, b__23507, c__23509, d__23511, e__23513, f__23515)
                }else {
                  return f__23515.call(null, a__23505, b__23507, c__23509, d__23511, e__23513, f__23515)
                }
              }else {
                var g__23517 = cljs.core._first.call(null, args__23516);
                var args__23518 = cljs.core._rest.call(null, args__23516);
                if(argc === 7) {
                  if(f__23515.cljs$lang$arity$7) {
                    return f__23515.cljs$lang$arity$7(a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517)
                  }else {
                    return f__23515.call(null, a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517)
                  }
                }else {
                  var h__23519 = cljs.core._first.call(null, args__23518);
                  var args__23520 = cljs.core._rest.call(null, args__23518);
                  if(argc === 8) {
                    if(f__23515.cljs$lang$arity$8) {
                      return f__23515.cljs$lang$arity$8(a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519)
                    }else {
                      return f__23515.call(null, a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519)
                    }
                  }else {
                    var i__23521 = cljs.core._first.call(null, args__23520);
                    var args__23522 = cljs.core._rest.call(null, args__23520);
                    if(argc === 9) {
                      if(f__23515.cljs$lang$arity$9) {
                        return f__23515.cljs$lang$arity$9(a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521)
                      }else {
                        return f__23515.call(null, a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521)
                      }
                    }else {
                      var j__23523 = cljs.core._first.call(null, args__23522);
                      var args__23524 = cljs.core._rest.call(null, args__23522);
                      if(argc === 10) {
                        if(f__23515.cljs$lang$arity$10) {
                          return f__23515.cljs$lang$arity$10(a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521, j__23523)
                        }else {
                          return f__23515.call(null, a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521, j__23523)
                        }
                      }else {
                        var k__23525 = cljs.core._first.call(null, args__23524);
                        var args__23526 = cljs.core._rest.call(null, args__23524);
                        if(argc === 11) {
                          if(f__23515.cljs$lang$arity$11) {
                            return f__23515.cljs$lang$arity$11(a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521, j__23523, k__23525)
                          }else {
                            return f__23515.call(null, a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521, j__23523, k__23525)
                          }
                        }else {
                          var l__23527 = cljs.core._first.call(null, args__23526);
                          var args__23528 = cljs.core._rest.call(null, args__23526);
                          if(argc === 12) {
                            if(f__23515.cljs$lang$arity$12) {
                              return f__23515.cljs$lang$arity$12(a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521, j__23523, k__23525, l__23527)
                            }else {
                              return f__23515.call(null, a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521, j__23523, k__23525, l__23527)
                            }
                          }else {
                            var m__23529 = cljs.core._first.call(null, args__23528);
                            var args__23530 = cljs.core._rest.call(null, args__23528);
                            if(argc === 13) {
                              if(f__23515.cljs$lang$arity$13) {
                                return f__23515.cljs$lang$arity$13(a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521, j__23523, k__23525, l__23527, m__23529)
                              }else {
                                return f__23515.call(null, a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521, j__23523, k__23525, l__23527, m__23529)
                              }
                            }else {
                              var n__23531 = cljs.core._first.call(null, args__23530);
                              var args__23532 = cljs.core._rest.call(null, args__23530);
                              if(argc === 14) {
                                if(f__23515.cljs$lang$arity$14) {
                                  return f__23515.cljs$lang$arity$14(a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521, j__23523, k__23525, l__23527, m__23529, n__23531)
                                }else {
                                  return f__23515.call(null, a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521, j__23523, k__23525, l__23527, m__23529, n__23531)
                                }
                              }else {
                                var o__23533 = cljs.core._first.call(null, args__23532);
                                var args__23534 = cljs.core._rest.call(null, args__23532);
                                if(argc === 15) {
                                  if(f__23515.cljs$lang$arity$15) {
                                    return f__23515.cljs$lang$arity$15(a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521, j__23523, k__23525, l__23527, m__23529, n__23531, o__23533)
                                  }else {
                                    return f__23515.call(null, a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521, j__23523, k__23525, l__23527, m__23529, n__23531, o__23533)
                                  }
                                }else {
                                  var p__23535 = cljs.core._first.call(null, args__23534);
                                  var args__23536 = cljs.core._rest.call(null, args__23534);
                                  if(argc === 16) {
                                    if(f__23515.cljs$lang$arity$16) {
                                      return f__23515.cljs$lang$arity$16(a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521, j__23523, k__23525, l__23527, m__23529, n__23531, o__23533, p__23535)
                                    }else {
                                      return f__23515.call(null, a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521, j__23523, k__23525, l__23527, m__23529, n__23531, o__23533, p__23535)
                                    }
                                  }else {
                                    var q__23537 = cljs.core._first.call(null, args__23536);
                                    var args__23538 = cljs.core._rest.call(null, args__23536);
                                    if(argc === 17) {
                                      if(f__23515.cljs$lang$arity$17) {
                                        return f__23515.cljs$lang$arity$17(a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521, j__23523, k__23525, l__23527, m__23529, n__23531, o__23533, p__23535, q__23537)
                                      }else {
                                        return f__23515.call(null, a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521, j__23523, k__23525, l__23527, m__23529, n__23531, o__23533, p__23535, q__23537)
                                      }
                                    }else {
                                      var r__23539 = cljs.core._first.call(null, args__23538);
                                      var args__23540 = cljs.core._rest.call(null, args__23538);
                                      if(argc === 18) {
                                        if(f__23515.cljs$lang$arity$18) {
                                          return f__23515.cljs$lang$arity$18(a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521, j__23523, k__23525, l__23527, m__23529, n__23531, o__23533, p__23535, q__23537, r__23539)
                                        }else {
                                          return f__23515.call(null, a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521, j__23523, k__23525, l__23527, m__23529, n__23531, o__23533, p__23535, q__23537, r__23539)
                                        }
                                      }else {
                                        var s__23541 = cljs.core._first.call(null, args__23540);
                                        var args__23542 = cljs.core._rest.call(null, args__23540);
                                        if(argc === 19) {
                                          if(f__23515.cljs$lang$arity$19) {
                                            return f__23515.cljs$lang$arity$19(a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521, j__23523, k__23525, l__23527, m__23529, n__23531, o__23533, p__23535, q__23537, r__23539, s__23541)
                                          }else {
                                            return f__23515.call(null, a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521, j__23523, k__23525, l__23527, m__23529, n__23531, o__23533, p__23535, q__23537, r__23539, s__23541)
                                          }
                                        }else {
                                          var t__23543 = cljs.core._first.call(null, args__23542);
                                          var args__23544 = cljs.core._rest.call(null, args__23542);
                                          if(argc === 20) {
                                            if(f__23515.cljs$lang$arity$20) {
                                              return f__23515.cljs$lang$arity$20(a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521, j__23523, k__23525, l__23527, m__23529, n__23531, o__23533, p__23535, q__23537, r__23539, s__23541, t__23543)
                                            }else {
                                              return f__23515.call(null, a__23505, b__23507, c__23509, d__23511, e__23513, f__23515, g__23517, h__23519, i__23521, j__23523, k__23525, l__23527, m__23529, n__23531, o__23533, p__23535, q__23537, r__23539, s__23541, t__23543)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__23559 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__23560 = cljs.core.bounded_count.call(null, args, fixed_arity__23559 + 1);
      if(bc__23560 <= fixed_arity__23559) {
        return cljs.core.apply_to.call(null, f, bc__23560, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__23561 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__23562 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__23563 = cljs.core.bounded_count.call(null, arglist__23561, fixed_arity__23562 + 1);
      if(bc__23563 <= fixed_arity__23562) {
        return cljs.core.apply_to.call(null, f, bc__23563, arglist__23561)
      }else {
        return f.cljs$lang$applyTo(arglist__23561)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__23561))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__23564 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__23565 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__23566 = cljs.core.bounded_count.call(null, arglist__23564, fixed_arity__23565 + 1);
      if(bc__23566 <= fixed_arity__23565) {
        return cljs.core.apply_to.call(null, f, bc__23566, arglist__23564)
      }else {
        return f.cljs$lang$applyTo(arglist__23564)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__23564))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__23567 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__23568 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__23569 = cljs.core.bounded_count.call(null, arglist__23567, fixed_arity__23568 + 1);
      if(bc__23569 <= fixed_arity__23568) {
        return cljs.core.apply_to.call(null, f, bc__23569, arglist__23567)
      }else {
        return f.cljs$lang$applyTo(arglist__23567)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__23567))
    }
  };
  var apply__6 = function() {
    var G__23573__delegate = function(f, a, b, c, d, args) {
      var arglist__23570 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__23571 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__23572 = cljs.core.bounded_count.call(null, arglist__23570, fixed_arity__23571 + 1);
        if(bc__23572 <= fixed_arity__23571) {
          return cljs.core.apply_to.call(null, f, bc__23572, arglist__23570)
        }else {
          return f.cljs$lang$applyTo(arglist__23570)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__23570))
      }
    };
    var G__23573 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__23573__delegate.call(this, f, a, b, c, d, args)
    };
    G__23573.cljs$lang$maxFixedArity = 5;
    G__23573.cljs$lang$applyTo = function(arglist__23574) {
      var f = cljs.core.first(arglist__23574);
      var a = cljs.core.first(cljs.core.next(arglist__23574));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__23574)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__23574))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__23574)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__23574)))));
      return G__23573__delegate(f, a, b, c, d, args)
    };
    G__23573.cljs$lang$arity$variadic = G__23573__delegate;
    return G__23573
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__23575) {
    var obj = cljs.core.first(arglist__23575);
    var f = cljs.core.first(cljs.core.next(arglist__23575));
    var args = cljs.core.rest(cljs.core.next(arglist__23575));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__23576__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__23576 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__23576__delegate.call(this, x, y, more)
    };
    G__23576.cljs$lang$maxFixedArity = 2;
    G__23576.cljs$lang$applyTo = function(arglist__23577) {
      var x = cljs.core.first(arglist__23577);
      var y = cljs.core.first(cljs.core.next(arglist__23577));
      var more = cljs.core.rest(cljs.core.next(arglist__23577));
      return G__23576__delegate(x, y, more)
    };
    G__23576.cljs$lang$arity$variadic = G__23576__delegate;
    return G__23576
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__23578 = pred;
        var G__23579 = cljs.core.next.call(null, coll);
        pred = G__23578;
        coll = G__23579;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____23581 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____23581)) {
        return or__3824__auto____23581
      }else {
        var G__23582 = pred;
        var G__23583 = cljs.core.next.call(null, coll);
        pred = G__23582;
        coll = G__23583;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__23584 = null;
    var G__23584__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__23584__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__23584__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__23584__3 = function() {
      var G__23585__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__23585 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__23585__delegate.call(this, x, y, zs)
      };
      G__23585.cljs$lang$maxFixedArity = 2;
      G__23585.cljs$lang$applyTo = function(arglist__23586) {
        var x = cljs.core.first(arglist__23586);
        var y = cljs.core.first(cljs.core.next(arglist__23586));
        var zs = cljs.core.rest(cljs.core.next(arglist__23586));
        return G__23585__delegate(x, y, zs)
      };
      G__23585.cljs$lang$arity$variadic = G__23585__delegate;
      return G__23585
    }();
    G__23584 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__23584__0.call(this);
        case 1:
          return G__23584__1.call(this, x);
        case 2:
          return G__23584__2.call(this, x, y);
        default:
          return G__23584__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__23584.cljs$lang$maxFixedArity = 2;
    G__23584.cljs$lang$applyTo = G__23584__3.cljs$lang$applyTo;
    return G__23584
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__23587__delegate = function(args) {
      return x
    };
    var G__23587 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__23587__delegate.call(this, args)
    };
    G__23587.cljs$lang$maxFixedArity = 0;
    G__23587.cljs$lang$applyTo = function(arglist__23588) {
      var args = cljs.core.seq(arglist__23588);
      return G__23587__delegate(args)
    };
    G__23587.cljs$lang$arity$variadic = G__23587__delegate;
    return G__23587
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__23595 = null;
      var G__23595__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__23595__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__23595__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__23595__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__23595__4 = function() {
        var G__23596__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__23596 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__23596__delegate.call(this, x, y, z, args)
        };
        G__23596.cljs$lang$maxFixedArity = 3;
        G__23596.cljs$lang$applyTo = function(arglist__23597) {
          var x = cljs.core.first(arglist__23597);
          var y = cljs.core.first(cljs.core.next(arglist__23597));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__23597)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__23597)));
          return G__23596__delegate(x, y, z, args)
        };
        G__23596.cljs$lang$arity$variadic = G__23596__delegate;
        return G__23596
      }();
      G__23595 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__23595__0.call(this);
          case 1:
            return G__23595__1.call(this, x);
          case 2:
            return G__23595__2.call(this, x, y);
          case 3:
            return G__23595__3.call(this, x, y, z);
          default:
            return G__23595__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__23595.cljs$lang$maxFixedArity = 3;
      G__23595.cljs$lang$applyTo = G__23595__4.cljs$lang$applyTo;
      return G__23595
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__23598 = null;
      var G__23598__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__23598__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__23598__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__23598__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__23598__4 = function() {
        var G__23599__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__23599 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__23599__delegate.call(this, x, y, z, args)
        };
        G__23599.cljs$lang$maxFixedArity = 3;
        G__23599.cljs$lang$applyTo = function(arglist__23600) {
          var x = cljs.core.first(arglist__23600);
          var y = cljs.core.first(cljs.core.next(arglist__23600));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__23600)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__23600)));
          return G__23599__delegate(x, y, z, args)
        };
        G__23599.cljs$lang$arity$variadic = G__23599__delegate;
        return G__23599
      }();
      G__23598 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__23598__0.call(this);
          case 1:
            return G__23598__1.call(this, x);
          case 2:
            return G__23598__2.call(this, x, y);
          case 3:
            return G__23598__3.call(this, x, y, z);
          default:
            return G__23598__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__23598.cljs$lang$maxFixedArity = 3;
      G__23598.cljs$lang$applyTo = G__23598__4.cljs$lang$applyTo;
      return G__23598
    }()
  };
  var comp__4 = function() {
    var G__23601__delegate = function(f1, f2, f3, fs) {
      var fs__23592 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__23602__delegate = function(args) {
          var ret__23593 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__23592), args);
          var fs__23594 = cljs.core.next.call(null, fs__23592);
          while(true) {
            if(fs__23594) {
              var G__23603 = cljs.core.first.call(null, fs__23594).call(null, ret__23593);
              var G__23604 = cljs.core.next.call(null, fs__23594);
              ret__23593 = G__23603;
              fs__23594 = G__23604;
              continue
            }else {
              return ret__23593
            }
            break
          }
        };
        var G__23602 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__23602__delegate.call(this, args)
        };
        G__23602.cljs$lang$maxFixedArity = 0;
        G__23602.cljs$lang$applyTo = function(arglist__23605) {
          var args = cljs.core.seq(arglist__23605);
          return G__23602__delegate(args)
        };
        G__23602.cljs$lang$arity$variadic = G__23602__delegate;
        return G__23602
      }()
    };
    var G__23601 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__23601__delegate.call(this, f1, f2, f3, fs)
    };
    G__23601.cljs$lang$maxFixedArity = 3;
    G__23601.cljs$lang$applyTo = function(arglist__23606) {
      var f1 = cljs.core.first(arglist__23606);
      var f2 = cljs.core.first(cljs.core.next(arglist__23606));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__23606)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__23606)));
      return G__23601__delegate(f1, f2, f3, fs)
    };
    G__23601.cljs$lang$arity$variadic = G__23601__delegate;
    return G__23601
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__23607__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__23607 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__23607__delegate.call(this, args)
      };
      G__23607.cljs$lang$maxFixedArity = 0;
      G__23607.cljs$lang$applyTo = function(arglist__23608) {
        var args = cljs.core.seq(arglist__23608);
        return G__23607__delegate(args)
      };
      G__23607.cljs$lang$arity$variadic = G__23607__delegate;
      return G__23607
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__23609__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__23609 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__23609__delegate.call(this, args)
      };
      G__23609.cljs$lang$maxFixedArity = 0;
      G__23609.cljs$lang$applyTo = function(arglist__23610) {
        var args = cljs.core.seq(arglist__23610);
        return G__23609__delegate(args)
      };
      G__23609.cljs$lang$arity$variadic = G__23609__delegate;
      return G__23609
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__23611__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__23611 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__23611__delegate.call(this, args)
      };
      G__23611.cljs$lang$maxFixedArity = 0;
      G__23611.cljs$lang$applyTo = function(arglist__23612) {
        var args = cljs.core.seq(arglist__23612);
        return G__23611__delegate(args)
      };
      G__23611.cljs$lang$arity$variadic = G__23611__delegate;
      return G__23611
    }()
  };
  var partial__5 = function() {
    var G__23613__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__23614__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__23614 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__23614__delegate.call(this, args)
        };
        G__23614.cljs$lang$maxFixedArity = 0;
        G__23614.cljs$lang$applyTo = function(arglist__23615) {
          var args = cljs.core.seq(arglist__23615);
          return G__23614__delegate(args)
        };
        G__23614.cljs$lang$arity$variadic = G__23614__delegate;
        return G__23614
      }()
    };
    var G__23613 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__23613__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__23613.cljs$lang$maxFixedArity = 4;
    G__23613.cljs$lang$applyTo = function(arglist__23616) {
      var f = cljs.core.first(arglist__23616);
      var arg1 = cljs.core.first(cljs.core.next(arglist__23616));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__23616)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__23616))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__23616))));
      return G__23613__delegate(f, arg1, arg2, arg3, more)
    };
    G__23613.cljs$lang$arity$variadic = G__23613__delegate;
    return G__23613
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__23617 = null;
      var G__23617__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__23617__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__23617__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__23617__4 = function() {
        var G__23618__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__23618 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__23618__delegate.call(this, a, b, c, ds)
        };
        G__23618.cljs$lang$maxFixedArity = 3;
        G__23618.cljs$lang$applyTo = function(arglist__23619) {
          var a = cljs.core.first(arglist__23619);
          var b = cljs.core.first(cljs.core.next(arglist__23619));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__23619)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__23619)));
          return G__23618__delegate(a, b, c, ds)
        };
        G__23618.cljs$lang$arity$variadic = G__23618__delegate;
        return G__23618
      }();
      G__23617 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__23617__1.call(this, a);
          case 2:
            return G__23617__2.call(this, a, b);
          case 3:
            return G__23617__3.call(this, a, b, c);
          default:
            return G__23617__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__23617.cljs$lang$maxFixedArity = 3;
      G__23617.cljs$lang$applyTo = G__23617__4.cljs$lang$applyTo;
      return G__23617
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__23620 = null;
      var G__23620__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__23620__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__23620__4 = function() {
        var G__23621__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__23621 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__23621__delegate.call(this, a, b, c, ds)
        };
        G__23621.cljs$lang$maxFixedArity = 3;
        G__23621.cljs$lang$applyTo = function(arglist__23622) {
          var a = cljs.core.first(arglist__23622);
          var b = cljs.core.first(cljs.core.next(arglist__23622));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__23622)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__23622)));
          return G__23621__delegate(a, b, c, ds)
        };
        G__23621.cljs$lang$arity$variadic = G__23621__delegate;
        return G__23621
      }();
      G__23620 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__23620__2.call(this, a, b);
          case 3:
            return G__23620__3.call(this, a, b, c);
          default:
            return G__23620__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__23620.cljs$lang$maxFixedArity = 3;
      G__23620.cljs$lang$applyTo = G__23620__4.cljs$lang$applyTo;
      return G__23620
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__23623 = null;
      var G__23623__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__23623__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__23623__4 = function() {
        var G__23624__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__23624 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__23624__delegate.call(this, a, b, c, ds)
        };
        G__23624.cljs$lang$maxFixedArity = 3;
        G__23624.cljs$lang$applyTo = function(arglist__23625) {
          var a = cljs.core.first(arglist__23625);
          var b = cljs.core.first(cljs.core.next(arglist__23625));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__23625)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__23625)));
          return G__23624__delegate(a, b, c, ds)
        };
        G__23624.cljs$lang$arity$variadic = G__23624__delegate;
        return G__23624
      }();
      G__23623 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__23623__2.call(this, a, b);
          case 3:
            return G__23623__3.call(this, a, b, c);
          default:
            return G__23623__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__23623.cljs$lang$maxFixedArity = 3;
      G__23623.cljs$lang$applyTo = G__23623__4.cljs$lang$applyTo;
      return G__23623
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__23641 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____23649 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____23649) {
        var s__23650 = temp__3974__auto____23649;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__23650)) {
          var c__23651 = cljs.core.chunk_first.call(null, s__23650);
          var size__23652 = cljs.core.count.call(null, c__23651);
          var b__23653 = cljs.core.chunk_buffer.call(null, size__23652);
          var n__2420__auto____23654 = size__23652;
          var i__23655 = 0;
          while(true) {
            if(i__23655 < n__2420__auto____23654) {
              cljs.core.chunk_append.call(null, b__23653, f.call(null, idx + i__23655, cljs.core._nth.call(null, c__23651, i__23655)));
              var G__23656 = i__23655 + 1;
              i__23655 = G__23656;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23653), mapi.call(null, idx + size__23652, cljs.core.chunk_rest.call(null, s__23650)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__23650)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__23650)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__23641.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____23666 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____23666) {
      var s__23667 = temp__3974__auto____23666;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__23667)) {
        var c__23668 = cljs.core.chunk_first.call(null, s__23667);
        var size__23669 = cljs.core.count.call(null, c__23668);
        var b__23670 = cljs.core.chunk_buffer.call(null, size__23669);
        var n__2420__auto____23671 = size__23669;
        var i__23672 = 0;
        while(true) {
          if(i__23672 < n__2420__auto____23671) {
            var x__23673 = f.call(null, cljs.core._nth.call(null, c__23668, i__23672));
            if(x__23673 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__23670, x__23673)
            }
            var G__23675 = i__23672 + 1;
            i__23672 = G__23675;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23670), keep.call(null, f, cljs.core.chunk_rest.call(null, s__23667)))
      }else {
        var x__23674 = f.call(null, cljs.core.first.call(null, s__23667));
        if(x__23674 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__23667))
        }else {
          return cljs.core.cons.call(null, x__23674, keep.call(null, f, cljs.core.rest.call(null, s__23667)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__23701 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____23711 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____23711) {
        var s__23712 = temp__3974__auto____23711;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__23712)) {
          var c__23713 = cljs.core.chunk_first.call(null, s__23712);
          var size__23714 = cljs.core.count.call(null, c__23713);
          var b__23715 = cljs.core.chunk_buffer.call(null, size__23714);
          var n__2420__auto____23716 = size__23714;
          var i__23717 = 0;
          while(true) {
            if(i__23717 < n__2420__auto____23716) {
              var x__23718 = f.call(null, idx + i__23717, cljs.core._nth.call(null, c__23713, i__23717));
              if(x__23718 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__23715, x__23718)
              }
              var G__23720 = i__23717 + 1;
              i__23717 = G__23720;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23715), keepi.call(null, idx + size__23714, cljs.core.chunk_rest.call(null, s__23712)))
        }else {
          var x__23719 = f.call(null, idx, cljs.core.first.call(null, s__23712));
          if(x__23719 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__23712))
          }else {
            return cljs.core.cons.call(null, x__23719, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__23712)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__23701.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____23806 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____23806)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____23806
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____23807 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____23807)) {
            var and__3822__auto____23808 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____23808)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____23808
            }
          }else {
            return and__3822__auto____23807
          }
        }())
      };
      var ep1__4 = function() {
        var G__23877__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____23809 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____23809)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____23809
            }
          }())
        };
        var G__23877 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__23877__delegate.call(this, x, y, z, args)
        };
        G__23877.cljs$lang$maxFixedArity = 3;
        G__23877.cljs$lang$applyTo = function(arglist__23878) {
          var x = cljs.core.first(arglist__23878);
          var y = cljs.core.first(cljs.core.next(arglist__23878));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__23878)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__23878)));
          return G__23877__delegate(x, y, z, args)
        };
        G__23877.cljs$lang$arity$variadic = G__23877__delegate;
        return G__23877
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____23821 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____23821)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____23821
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____23822 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____23822)) {
            var and__3822__auto____23823 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____23823)) {
              var and__3822__auto____23824 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____23824)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____23824
              }
            }else {
              return and__3822__auto____23823
            }
          }else {
            return and__3822__auto____23822
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____23825 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____23825)) {
            var and__3822__auto____23826 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____23826)) {
              var and__3822__auto____23827 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____23827)) {
                var and__3822__auto____23828 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____23828)) {
                  var and__3822__auto____23829 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____23829)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____23829
                  }
                }else {
                  return and__3822__auto____23828
                }
              }else {
                return and__3822__auto____23827
              }
            }else {
              return and__3822__auto____23826
            }
          }else {
            return and__3822__auto____23825
          }
        }())
      };
      var ep2__4 = function() {
        var G__23879__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____23830 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____23830)) {
              return cljs.core.every_QMARK_.call(null, function(p1__23676_SHARP_) {
                var and__3822__auto____23831 = p1.call(null, p1__23676_SHARP_);
                if(cljs.core.truth_(and__3822__auto____23831)) {
                  return p2.call(null, p1__23676_SHARP_)
                }else {
                  return and__3822__auto____23831
                }
              }, args)
            }else {
              return and__3822__auto____23830
            }
          }())
        };
        var G__23879 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__23879__delegate.call(this, x, y, z, args)
        };
        G__23879.cljs$lang$maxFixedArity = 3;
        G__23879.cljs$lang$applyTo = function(arglist__23880) {
          var x = cljs.core.first(arglist__23880);
          var y = cljs.core.first(cljs.core.next(arglist__23880));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__23880)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__23880)));
          return G__23879__delegate(x, y, z, args)
        };
        G__23879.cljs$lang$arity$variadic = G__23879__delegate;
        return G__23879
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____23850 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____23850)) {
            var and__3822__auto____23851 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____23851)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____23851
            }
          }else {
            return and__3822__auto____23850
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____23852 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____23852)) {
            var and__3822__auto____23853 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____23853)) {
              var and__3822__auto____23854 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____23854)) {
                var and__3822__auto____23855 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____23855)) {
                  var and__3822__auto____23856 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____23856)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____23856
                  }
                }else {
                  return and__3822__auto____23855
                }
              }else {
                return and__3822__auto____23854
              }
            }else {
              return and__3822__auto____23853
            }
          }else {
            return and__3822__auto____23852
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____23857 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____23857)) {
            var and__3822__auto____23858 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____23858)) {
              var and__3822__auto____23859 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____23859)) {
                var and__3822__auto____23860 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____23860)) {
                  var and__3822__auto____23861 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____23861)) {
                    var and__3822__auto____23862 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____23862)) {
                      var and__3822__auto____23863 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____23863)) {
                        var and__3822__auto____23864 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____23864)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____23864
                        }
                      }else {
                        return and__3822__auto____23863
                      }
                    }else {
                      return and__3822__auto____23862
                    }
                  }else {
                    return and__3822__auto____23861
                  }
                }else {
                  return and__3822__auto____23860
                }
              }else {
                return and__3822__auto____23859
              }
            }else {
              return and__3822__auto____23858
            }
          }else {
            return and__3822__auto____23857
          }
        }())
      };
      var ep3__4 = function() {
        var G__23881__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____23865 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____23865)) {
              return cljs.core.every_QMARK_.call(null, function(p1__23677_SHARP_) {
                var and__3822__auto____23866 = p1.call(null, p1__23677_SHARP_);
                if(cljs.core.truth_(and__3822__auto____23866)) {
                  var and__3822__auto____23867 = p2.call(null, p1__23677_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____23867)) {
                    return p3.call(null, p1__23677_SHARP_)
                  }else {
                    return and__3822__auto____23867
                  }
                }else {
                  return and__3822__auto____23866
                }
              }, args)
            }else {
              return and__3822__auto____23865
            }
          }())
        };
        var G__23881 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__23881__delegate.call(this, x, y, z, args)
        };
        G__23881.cljs$lang$maxFixedArity = 3;
        G__23881.cljs$lang$applyTo = function(arglist__23882) {
          var x = cljs.core.first(arglist__23882);
          var y = cljs.core.first(cljs.core.next(arglist__23882));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__23882)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__23882)));
          return G__23881__delegate(x, y, z, args)
        };
        G__23881.cljs$lang$arity$variadic = G__23881__delegate;
        return G__23881
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__23883__delegate = function(p1, p2, p3, ps) {
      var ps__23868 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__23678_SHARP_) {
            return p1__23678_SHARP_.call(null, x)
          }, ps__23868)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__23679_SHARP_) {
            var and__3822__auto____23873 = p1__23679_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____23873)) {
              return p1__23679_SHARP_.call(null, y)
            }else {
              return and__3822__auto____23873
            }
          }, ps__23868)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__23680_SHARP_) {
            var and__3822__auto____23874 = p1__23680_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____23874)) {
              var and__3822__auto____23875 = p1__23680_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____23875)) {
                return p1__23680_SHARP_.call(null, z)
              }else {
                return and__3822__auto____23875
              }
            }else {
              return and__3822__auto____23874
            }
          }, ps__23868)
        };
        var epn__4 = function() {
          var G__23884__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____23876 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____23876)) {
                return cljs.core.every_QMARK_.call(null, function(p1__23681_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__23681_SHARP_, args)
                }, ps__23868)
              }else {
                return and__3822__auto____23876
              }
            }())
          };
          var G__23884 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__23884__delegate.call(this, x, y, z, args)
          };
          G__23884.cljs$lang$maxFixedArity = 3;
          G__23884.cljs$lang$applyTo = function(arglist__23885) {
            var x = cljs.core.first(arglist__23885);
            var y = cljs.core.first(cljs.core.next(arglist__23885));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__23885)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__23885)));
            return G__23884__delegate(x, y, z, args)
          };
          G__23884.cljs$lang$arity$variadic = G__23884__delegate;
          return G__23884
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__23883 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__23883__delegate.call(this, p1, p2, p3, ps)
    };
    G__23883.cljs$lang$maxFixedArity = 3;
    G__23883.cljs$lang$applyTo = function(arglist__23886) {
      var p1 = cljs.core.first(arglist__23886);
      var p2 = cljs.core.first(cljs.core.next(arglist__23886));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__23886)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__23886)));
      return G__23883__delegate(p1, p2, p3, ps)
    };
    G__23883.cljs$lang$arity$variadic = G__23883__delegate;
    return G__23883
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____23967 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____23967)) {
          return or__3824__auto____23967
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____23968 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____23968)) {
          return or__3824__auto____23968
        }else {
          var or__3824__auto____23969 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____23969)) {
            return or__3824__auto____23969
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__24038__delegate = function(x, y, z, args) {
          var or__3824__auto____23970 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____23970)) {
            return or__3824__auto____23970
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__24038 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__24038__delegate.call(this, x, y, z, args)
        };
        G__24038.cljs$lang$maxFixedArity = 3;
        G__24038.cljs$lang$applyTo = function(arglist__24039) {
          var x = cljs.core.first(arglist__24039);
          var y = cljs.core.first(cljs.core.next(arglist__24039));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__24039)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__24039)));
          return G__24038__delegate(x, y, z, args)
        };
        G__24038.cljs$lang$arity$variadic = G__24038__delegate;
        return G__24038
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____23982 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____23982)) {
          return or__3824__auto____23982
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____23983 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____23983)) {
          return or__3824__auto____23983
        }else {
          var or__3824__auto____23984 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____23984)) {
            return or__3824__auto____23984
          }else {
            var or__3824__auto____23985 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____23985)) {
              return or__3824__auto____23985
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____23986 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____23986)) {
          return or__3824__auto____23986
        }else {
          var or__3824__auto____23987 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____23987)) {
            return or__3824__auto____23987
          }else {
            var or__3824__auto____23988 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____23988)) {
              return or__3824__auto____23988
            }else {
              var or__3824__auto____23989 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____23989)) {
                return or__3824__auto____23989
              }else {
                var or__3824__auto____23990 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____23990)) {
                  return or__3824__auto____23990
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__24040__delegate = function(x, y, z, args) {
          var or__3824__auto____23991 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____23991)) {
            return or__3824__auto____23991
          }else {
            return cljs.core.some.call(null, function(p1__23721_SHARP_) {
              var or__3824__auto____23992 = p1.call(null, p1__23721_SHARP_);
              if(cljs.core.truth_(or__3824__auto____23992)) {
                return or__3824__auto____23992
              }else {
                return p2.call(null, p1__23721_SHARP_)
              }
            }, args)
          }
        };
        var G__24040 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__24040__delegate.call(this, x, y, z, args)
        };
        G__24040.cljs$lang$maxFixedArity = 3;
        G__24040.cljs$lang$applyTo = function(arglist__24041) {
          var x = cljs.core.first(arglist__24041);
          var y = cljs.core.first(cljs.core.next(arglist__24041));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__24041)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__24041)));
          return G__24040__delegate(x, y, z, args)
        };
        G__24040.cljs$lang$arity$variadic = G__24040__delegate;
        return G__24040
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____24011 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____24011)) {
          return or__3824__auto____24011
        }else {
          var or__3824__auto____24012 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____24012)) {
            return or__3824__auto____24012
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____24013 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____24013)) {
          return or__3824__auto____24013
        }else {
          var or__3824__auto____24014 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____24014)) {
            return or__3824__auto____24014
          }else {
            var or__3824__auto____24015 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____24015)) {
              return or__3824__auto____24015
            }else {
              var or__3824__auto____24016 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____24016)) {
                return or__3824__auto____24016
              }else {
                var or__3824__auto____24017 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____24017)) {
                  return or__3824__auto____24017
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____24018 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____24018)) {
          return or__3824__auto____24018
        }else {
          var or__3824__auto____24019 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____24019)) {
            return or__3824__auto____24019
          }else {
            var or__3824__auto____24020 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____24020)) {
              return or__3824__auto____24020
            }else {
              var or__3824__auto____24021 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____24021)) {
                return or__3824__auto____24021
              }else {
                var or__3824__auto____24022 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____24022)) {
                  return or__3824__auto____24022
                }else {
                  var or__3824__auto____24023 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____24023)) {
                    return or__3824__auto____24023
                  }else {
                    var or__3824__auto____24024 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____24024)) {
                      return or__3824__auto____24024
                    }else {
                      var or__3824__auto____24025 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____24025)) {
                        return or__3824__auto____24025
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__24042__delegate = function(x, y, z, args) {
          var or__3824__auto____24026 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____24026)) {
            return or__3824__auto____24026
          }else {
            return cljs.core.some.call(null, function(p1__23722_SHARP_) {
              var or__3824__auto____24027 = p1.call(null, p1__23722_SHARP_);
              if(cljs.core.truth_(or__3824__auto____24027)) {
                return or__3824__auto____24027
              }else {
                var or__3824__auto____24028 = p2.call(null, p1__23722_SHARP_);
                if(cljs.core.truth_(or__3824__auto____24028)) {
                  return or__3824__auto____24028
                }else {
                  return p3.call(null, p1__23722_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__24042 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__24042__delegate.call(this, x, y, z, args)
        };
        G__24042.cljs$lang$maxFixedArity = 3;
        G__24042.cljs$lang$applyTo = function(arglist__24043) {
          var x = cljs.core.first(arglist__24043);
          var y = cljs.core.first(cljs.core.next(arglist__24043));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__24043)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__24043)));
          return G__24042__delegate(x, y, z, args)
        };
        G__24042.cljs$lang$arity$variadic = G__24042__delegate;
        return G__24042
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__24044__delegate = function(p1, p2, p3, ps) {
      var ps__24029 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__23723_SHARP_) {
            return p1__23723_SHARP_.call(null, x)
          }, ps__24029)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__23724_SHARP_) {
            var or__3824__auto____24034 = p1__23724_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____24034)) {
              return or__3824__auto____24034
            }else {
              return p1__23724_SHARP_.call(null, y)
            }
          }, ps__24029)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__23725_SHARP_) {
            var or__3824__auto____24035 = p1__23725_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____24035)) {
              return or__3824__auto____24035
            }else {
              var or__3824__auto____24036 = p1__23725_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____24036)) {
                return or__3824__auto____24036
              }else {
                return p1__23725_SHARP_.call(null, z)
              }
            }
          }, ps__24029)
        };
        var spn__4 = function() {
          var G__24045__delegate = function(x, y, z, args) {
            var or__3824__auto____24037 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____24037)) {
              return or__3824__auto____24037
            }else {
              return cljs.core.some.call(null, function(p1__23726_SHARP_) {
                return cljs.core.some.call(null, p1__23726_SHARP_, args)
              }, ps__24029)
            }
          };
          var G__24045 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__24045__delegate.call(this, x, y, z, args)
          };
          G__24045.cljs$lang$maxFixedArity = 3;
          G__24045.cljs$lang$applyTo = function(arglist__24046) {
            var x = cljs.core.first(arglist__24046);
            var y = cljs.core.first(cljs.core.next(arglist__24046));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__24046)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__24046)));
            return G__24045__delegate(x, y, z, args)
          };
          G__24045.cljs$lang$arity$variadic = G__24045__delegate;
          return G__24045
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__24044 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__24044__delegate.call(this, p1, p2, p3, ps)
    };
    G__24044.cljs$lang$maxFixedArity = 3;
    G__24044.cljs$lang$applyTo = function(arglist__24047) {
      var p1 = cljs.core.first(arglist__24047);
      var p2 = cljs.core.first(cljs.core.next(arglist__24047));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__24047)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__24047)));
      return G__24044__delegate(p1, p2, p3, ps)
    };
    G__24044.cljs$lang$arity$variadic = G__24044__delegate;
    return G__24044
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____24066 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____24066) {
        var s__24067 = temp__3974__auto____24066;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__24067)) {
          var c__24068 = cljs.core.chunk_first.call(null, s__24067);
          var size__24069 = cljs.core.count.call(null, c__24068);
          var b__24070 = cljs.core.chunk_buffer.call(null, size__24069);
          var n__2420__auto____24071 = size__24069;
          var i__24072 = 0;
          while(true) {
            if(i__24072 < n__2420__auto____24071) {
              cljs.core.chunk_append.call(null, b__24070, f.call(null, cljs.core._nth.call(null, c__24068, i__24072)));
              var G__24084 = i__24072 + 1;
              i__24072 = G__24084;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24070), map.call(null, f, cljs.core.chunk_rest.call(null, s__24067)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__24067)), map.call(null, f, cljs.core.rest.call(null, s__24067)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__24073 = cljs.core.seq.call(null, c1);
      var s2__24074 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____24075 = s1__24073;
        if(and__3822__auto____24075) {
          return s2__24074
        }else {
          return and__3822__auto____24075
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__24073), cljs.core.first.call(null, s2__24074)), map.call(null, f, cljs.core.rest.call(null, s1__24073), cljs.core.rest.call(null, s2__24074)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__24076 = cljs.core.seq.call(null, c1);
      var s2__24077 = cljs.core.seq.call(null, c2);
      var s3__24078 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____24079 = s1__24076;
        if(and__3822__auto____24079) {
          var and__3822__auto____24080 = s2__24077;
          if(and__3822__auto____24080) {
            return s3__24078
          }else {
            return and__3822__auto____24080
          }
        }else {
          return and__3822__auto____24079
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__24076), cljs.core.first.call(null, s2__24077), cljs.core.first.call(null, s3__24078)), map.call(null, f, cljs.core.rest.call(null, s1__24076), cljs.core.rest.call(null, s2__24077), cljs.core.rest.call(null, s3__24078)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__24085__delegate = function(f, c1, c2, c3, colls) {
      var step__24083 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__24082 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__24082)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__24082), step.call(null, map.call(null, cljs.core.rest, ss__24082)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__23887_SHARP_) {
        return cljs.core.apply.call(null, f, p1__23887_SHARP_)
      }, step__24083.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__24085 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__24085__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__24085.cljs$lang$maxFixedArity = 4;
    G__24085.cljs$lang$applyTo = function(arglist__24086) {
      var f = cljs.core.first(arglist__24086);
      var c1 = cljs.core.first(cljs.core.next(arglist__24086));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__24086)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__24086))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__24086))));
      return G__24085__delegate(f, c1, c2, c3, colls)
    };
    G__24085.cljs$lang$arity$variadic = G__24085__delegate;
    return G__24085
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____24089 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____24089) {
        var s__24090 = temp__3974__auto____24089;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__24090), take.call(null, n - 1, cljs.core.rest.call(null, s__24090)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__24096 = function(n, coll) {
    while(true) {
      var s__24094 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____24095 = n > 0;
        if(and__3822__auto____24095) {
          return s__24094
        }else {
          return and__3822__auto____24095
        }
      }())) {
        var G__24097 = n - 1;
        var G__24098 = cljs.core.rest.call(null, s__24094);
        n = G__24097;
        coll = G__24098;
        continue
      }else {
        return s__24094
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__24096.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__24101 = cljs.core.seq.call(null, coll);
  var lead__24102 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__24102) {
      var G__24103 = cljs.core.next.call(null, s__24101);
      var G__24104 = cljs.core.next.call(null, lead__24102);
      s__24101 = G__24103;
      lead__24102 = G__24104;
      continue
    }else {
      return s__24101
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__24110 = function(pred, coll) {
    while(true) {
      var s__24108 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____24109 = s__24108;
        if(and__3822__auto____24109) {
          return pred.call(null, cljs.core.first.call(null, s__24108))
        }else {
          return and__3822__auto____24109
        }
      }())) {
        var G__24111 = pred;
        var G__24112 = cljs.core.rest.call(null, s__24108);
        pred = G__24111;
        coll = G__24112;
        continue
      }else {
        return s__24108
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__24110.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____24115 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____24115) {
      var s__24116 = temp__3974__auto____24115;
      return cljs.core.concat.call(null, s__24116, cycle.call(null, s__24116))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__24121 = cljs.core.seq.call(null, c1);
      var s2__24122 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____24123 = s1__24121;
        if(and__3822__auto____24123) {
          return s2__24122
        }else {
          return and__3822__auto____24123
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__24121), cljs.core.cons.call(null, cljs.core.first.call(null, s2__24122), interleave.call(null, cljs.core.rest.call(null, s1__24121), cljs.core.rest.call(null, s2__24122))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__24125__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__24124 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__24124)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__24124), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__24124)))
        }else {
          return null
        }
      }, null)
    };
    var G__24125 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__24125__delegate.call(this, c1, c2, colls)
    };
    G__24125.cljs$lang$maxFixedArity = 2;
    G__24125.cljs$lang$applyTo = function(arglist__24126) {
      var c1 = cljs.core.first(arglist__24126);
      var c2 = cljs.core.first(cljs.core.next(arglist__24126));
      var colls = cljs.core.rest(cljs.core.next(arglist__24126));
      return G__24125__delegate(c1, c2, colls)
    };
    G__24125.cljs$lang$arity$variadic = G__24125__delegate;
    return G__24125
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__24136 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____24134 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____24134) {
        var coll__24135 = temp__3971__auto____24134;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__24135), cat.call(null, cljs.core.rest.call(null, coll__24135), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__24136.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__24137__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__24137 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__24137__delegate.call(this, f, coll, colls)
    };
    G__24137.cljs$lang$maxFixedArity = 2;
    G__24137.cljs$lang$applyTo = function(arglist__24138) {
      var f = cljs.core.first(arglist__24138);
      var coll = cljs.core.first(cljs.core.next(arglist__24138));
      var colls = cljs.core.rest(cljs.core.next(arglist__24138));
      return G__24137__delegate(f, coll, colls)
    };
    G__24137.cljs$lang$arity$variadic = G__24137__delegate;
    return G__24137
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____24148 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____24148) {
      var s__24149 = temp__3974__auto____24148;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__24149)) {
        var c__24150 = cljs.core.chunk_first.call(null, s__24149);
        var size__24151 = cljs.core.count.call(null, c__24150);
        var b__24152 = cljs.core.chunk_buffer.call(null, size__24151);
        var n__2420__auto____24153 = size__24151;
        var i__24154 = 0;
        while(true) {
          if(i__24154 < n__2420__auto____24153) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__24150, i__24154)))) {
              cljs.core.chunk_append.call(null, b__24152, cljs.core._nth.call(null, c__24150, i__24154))
            }else {
            }
            var G__24157 = i__24154 + 1;
            i__24154 = G__24157;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24152), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__24149)))
      }else {
        var f__24155 = cljs.core.first.call(null, s__24149);
        var r__24156 = cljs.core.rest.call(null, s__24149);
        if(cljs.core.truth_(pred.call(null, f__24155))) {
          return cljs.core.cons.call(null, f__24155, filter.call(null, pred, r__24156))
        }else {
          return filter.call(null, pred, r__24156)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__24160 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__24160.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__24158_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__24158_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__24164__24165 = to;
    if(G__24164__24165) {
      if(function() {
        var or__3824__auto____24166 = G__24164__24165.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____24166) {
          return or__3824__auto____24166
        }else {
          return G__24164__24165.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__24164__24165.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__24164__24165)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__24164__24165)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__24167__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__24167 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__24167__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__24167.cljs$lang$maxFixedArity = 4;
    G__24167.cljs$lang$applyTo = function(arglist__24168) {
      var f = cljs.core.first(arglist__24168);
      var c1 = cljs.core.first(cljs.core.next(arglist__24168));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__24168)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__24168))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__24168))));
      return G__24167__delegate(f, c1, c2, c3, colls)
    };
    G__24167.cljs$lang$arity$variadic = G__24167__delegate;
    return G__24167
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____24175 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____24175) {
        var s__24176 = temp__3974__auto____24175;
        var p__24177 = cljs.core.take.call(null, n, s__24176);
        if(n === cljs.core.count.call(null, p__24177)) {
          return cljs.core.cons.call(null, p__24177, partition.call(null, n, step, cljs.core.drop.call(null, step, s__24176)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____24178 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____24178) {
        var s__24179 = temp__3974__auto____24178;
        var p__24180 = cljs.core.take.call(null, n, s__24179);
        if(n === cljs.core.count.call(null, p__24180)) {
          return cljs.core.cons.call(null, p__24180, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__24179)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__24180, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__24185 = cljs.core.lookup_sentinel;
    var m__24186 = m;
    var ks__24187 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__24187) {
        var m__24188 = cljs.core._lookup.call(null, m__24186, cljs.core.first.call(null, ks__24187), sentinel__24185);
        if(sentinel__24185 === m__24188) {
          return not_found
        }else {
          var G__24189 = sentinel__24185;
          var G__24190 = m__24188;
          var G__24191 = cljs.core.next.call(null, ks__24187);
          sentinel__24185 = G__24189;
          m__24186 = G__24190;
          ks__24187 = G__24191;
          continue
        }
      }else {
        return m__24186
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__24192, v) {
  var vec__24197__24198 = p__24192;
  var k__24199 = cljs.core.nth.call(null, vec__24197__24198, 0, null);
  var ks__24200 = cljs.core.nthnext.call(null, vec__24197__24198, 1);
  if(cljs.core.truth_(ks__24200)) {
    return cljs.core.assoc.call(null, m, k__24199, assoc_in.call(null, cljs.core._lookup.call(null, m, k__24199, null), ks__24200, v))
  }else {
    return cljs.core.assoc.call(null, m, k__24199, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__24201, f, args) {
    var vec__24206__24207 = p__24201;
    var k__24208 = cljs.core.nth.call(null, vec__24206__24207, 0, null);
    var ks__24209 = cljs.core.nthnext.call(null, vec__24206__24207, 1);
    if(cljs.core.truth_(ks__24209)) {
      return cljs.core.assoc.call(null, m, k__24208, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__24208, null), ks__24209, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__24208, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__24208, null), args))
    }
  };
  var update_in = function(m, p__24201, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__24201, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__24210) {
    var m = cljs.core.first(arglist__24210);
    var p__24201 = cljs.core.first(cljs.core.next(arglist__24210));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__24210)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__24210)));
    return update_in__delegate(m, p__24201, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__24213 = this;
  var h__2085__auto____24214 = this__24213.__hash;
  if(!(h__2085__auto____24214 == null)) {
    return h__2085__auto____24214
  }else {
    var h__2085__auto____24215 = cljs.core.hash_coll.call(null, coll);
    this__24213.__hash = h__2085__auto____24215;
    return h__2085__auto____24215
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__24216 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__24217 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__24218 = this;
  var new_array__24219 = this__24218.array.slice();
  new_array__24219[k] = v;
  return new cljs.core.Vector(this__24218.meta, new_array__24219, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__24250 = null;
  var G__24250__2 = function(this_sym24220, k) {
    var this__24222 = this;
    var this_sym24220__24223 = this;
    var coll__24224 = this_sym24220__24223;
    return coll__24224.cljs$core$ILookup$_lookup$arity$2(coll__24224, k)
  };
  var G__24250__3 = function(this_sym24221, k, not_found) {
    var this__24222 = this;
    var this_sym24221__24225 = this;
    var coll__24226 = this_sym24221__24225;
    return coll__24226.cljs$core$ILookup$_lookup$arity$3(coll__24226, k, not_found)
  };
  G__24250 = function(this_sym24221, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24250__2.call(this, this_sym24221, k);
      case 3:
        return G__24250__3.call(this, this_sym24221, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__24250
}();
cljs.core.Vector.prototype.apply = function(this_sym24211, args24212) {
  var this__24227 = this;
  return this_sym24211.call.apply(this_sym24211, [this_sym24211].concat(args24212.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__24228 = this;
  var new_array__24229 = this__24228.array.slice();
  new_array__24229.push(o);
  return new cljs.core.Vector(this__24228.meta, new_array__24229, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__24230 = this;
  var this__24231 = this;
  return cljs.core.pr_str.call(null, this__24231)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__24232 = this;
  return cljs.core.ci_reduce.call(null, this__24232.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__24233 = this;
  return cljs.core.ci_reduce.call(null, this__24233.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__24234 = this;
  if(this__24234.array.length > 0) {
    var vector_seq__24235 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__24234.array.length) {
          return cljs.core.cons.call(null, this__24234.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__24235.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__24236 = this;
  return this__24236.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__24237 = this;
  var count__24238 = this__24237.array.length;
  if(count__24238 > 0) {
    return this__24237.array[count__24238 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__24239 = this;
  if(this__24239.array.length > 0) {
    var new_array__24240 = this__24239.array.slice();
    new_array__24240.pop();
    return new cljs.core.Vector(this__24239.meta, new_array__24240, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__24241 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__24242 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__24243 = this;
  return new cljs.core.Vector(meta, this__24243.array, this__24243.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__24244 = this;
  return this__24244.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__24245 = this;
  if(function() {
    var and__3822__auto____24246 = 0 <= n;
    if(and__3822__auto____24246) {
      return n < this__24245.array.length
    }else {
      return and__3822__auto____24246
    }
  }()) {
    return this__24245.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__24247 = this;
  if(function() {
    var and__3822__auto____24248 = 0 <= n;
    if(and__3822__auto____24248) {
      return n < this__24247.array.length
    }else {
      return and__3822__auto____24248
    }
  }()) {
    return this__24247.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__24249 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__24249.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2203__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__24252 = pv.cnt;
  if(cnt__24252 < 32) {
    return 0
  }else {
    return cnt__24252 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__24258 = level;
  var ret__24259 = node;
  while(true) {
    if(ll__24258 === 0) {
      return ret__24259
    }else {
      var embed__24260 = ret__24259;
      var r__24261 = cljs.core.pv_fresh_node.call(null, edit);
      var ___24262 = cljs.core.pv_aset.call(null, r__24261, 0, embed__24260);
      var G__24263 = ll__24258 - 5;
      var G__24264 = r__24261;
      ll__24258 = G__24263;
      ret__24259 = G__24264;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__24270 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__24271 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__24270, subidx__24271, tailnode);
    return ret__24270
  }else {
    var child__24272 = cljs.core.pv_aget.call(null, parent, subidx__24271);
    if(!(child__24272 == null)) {
      var node_to_insert__24273 = push_tail.call(null, pv, level - 5, child__24272, tailnode);
      cljs.core.pv_aset.call(null, ret__24270, subidx__24271, node_to_insert__24273);
      return ret__24270
    }else {
      var node_to_insert__24274 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__24270, subidx__24271, node_to_insert__24274);
      return ret__24270
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____24278 = 0 <= i;
    if(and__3822__auto____24278) {
      return i < pv.cnt
    }else {
      return and__3822__auto____24278
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__24279 = pv.root;
      var level__24280 = pv.shift;
      while(true) {
        if(level__24280 > 0) {
          var G__24281 = cljs.core.pv_aget.call(null, node__24279, i >>> level__24280 & 31);
          var G__24282 = level__24280 - 5;
          node__24279 = G__24281;
          level__24280 = G__24282;
          continue
        }else {
          return node__24279.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__24285 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__24285, i & 31, val);
    return ret__24285
  }else {
    var subidx__24286 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__24285, subidx__24286, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__24286), i, val));
    return ret__24285
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__24292 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__24293 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__24292));
    if(function() {
      var and__3822__auto____24294 = new_child__24293 == null;
      if(and__3822__auto____24294) {
        return subidx__24292 === 0
      }else {
        return and__3822__auto____24294
      }
    }()) {
      return null
    }else {
      var ret__24295 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__24295, subidx__24292, new_child__24293);
      return ret__24295
    }
  }else {
    if(subidx__24292 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__24296 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__24296, subidx__24292, null);
        return ret__24296
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__24299 = this;
  return new cljs.core.TransientVector(this__24299.cnt, this__24299.shift, cljs.core.tv_editable_root.call(null, this__24299.root), cljs.core.tv_editable_tail.call(null, this__24299.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__24300 = this;
  var h__2085__auto____24301 = this__24300.__hash;
  if(!(h__2085__auto____24301 == null)) {
    return h__2085__auto____24301
  }else {
    var h__2085__auto____24302 = cljs.core.hash_coll.call(null, coll);
    this__24300.__hash = h__2085__auto____24302;
    return h__2085__auto____24302
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__24303 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__24304 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__24305 = this;
  if(function() {
    var and__3822__auto____24306 = 0 <= k;
    if(and__3822__auto____24306) {
      return k < this__24305.cnt
    }else {
      return and__3822__auto____24306
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__24307 = this__24305.tail.slice();
      new_tail__24307[k & 31] = v;
      return new cljs.core.PersistentVector(this__24305.meta, this__24305.cnt, this__24305.shift, this__24305.root, new_tail__24307, null)
    }else {
      return new cljs.core.PersistentVector(this__24305.meta, this__24305.cnt, this__24305.shift, cljs.core.do_assoc.call(null, coll, this__24305.shift, this__24305.root, k, v), this__24305.tail, null)
    }
  }else {
    if(k === this__24305.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__24305.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__24355 = null;
  var G__24355__2 = function(this_sym24308, k) {
    var this__24310 = this;
    var this_sym24308__24311 = this;
    var coll__24312 = this_sym24308__24311;
    return coll__24312.cljs$core$ILookup$_lookup$arity$2(coll__24312, k)
  };
  var G__24355__3 = function(this_sym24309, k, not_found) {
    var this__24310 = this;
    var this_sym24309__24313 = this;
    var coll__24314 = this_sym24309__24313;
    return coll__24314.cljs$core$ILookup$_lookup$arity$3(coll__24314, k, not_found)
  };
  G__24355 = function(this_sym24309, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24355__2.call(this, this_sym24309, k);
      case 3:
        return G__24355__3.call(this, this_sym24309, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__24355
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym24297, args24298) {
  var this__24315 = this;
  return this_sym24297.call.apply(this_sym24297, [this_sym24297].concat(args24298.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__24316 = this;
  var step_init__24317 = [0, init];
  var i__24318 = 0;
  while(true) {
    if(i__24318 < this__24316.cnt) {
      var arr__24319 = cljs.core.array_for.call(null, v, i__24318);
      var len__24320 = arr__24319.length;
      var init__24324 = function() {
        var j__24321 = 0;
        var init__24322 = step_init__24317[1];
        while(true) {
          if(j__24321 < len__24320) {
            var init__24323 = f.call(null, init__24322, j__24321 + i__24318, arr__24319[j__24321]);
            if(cljs.core.reduced_QMARK_.call(null, init__24323)) {
              return init__24323
            }else {
              var G__24356 = j__24321 + 1;
              var G__24357 = init__24323;
              j__24321 = G__24356;
              init__24322 = G__24357;
              continue
            }
          }else {
            step_init__24317[0] = len__24320;
            step_init__24317[1] = init__24322;
            return init__24322
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__24324)) {
        return cljs.core.deref.call(null, init__24324)
      }else {
        var G__24358 = i__24318 + step_init__24317[0];
        i__24318 = G__24358;
        continue
      }
    }else {
      return step_init__24317[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__24325 = this;
  if(this__24325.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__24326 = this__24325.tail.slice();
    new_tail__24326.push(o);
    return new cljs.core.PersistentVector(this__24325.meta, this__24325.cnt + 1, this__24325.shift, this__24325.root, new_tail__24326, null)
  }else {
    var root_overflow_QMARK___24327 = this__24325.cnt >>> 5 > 1 << this__24325.shift;
    var new_shift__24328 = root_overflow_QMARK___24327 ? this__24325.shift + 5 : this__24325.shift;
    var new_root__24330 = root_overflow_QMARK___24327 ? function() {
      var n_r__24329 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__24329, 0, this__24325.root);
      cljs.core.pv_aset.call(null, n_r__24329, 1, cljs.core.new_path.call(null, null, this__24325.shift, new cljs.core.VectorNode(null, this__24325.tail)));
      return n_r__24329
    }() : cljs.core.push_tail.call(null, coll, this__24325.shift, this__24325.root, new cljs.core.VectorNode(null, this__24325.tail));
    return new cljs.core.PersistentVector(this__24325.meta, this__24325.cnt + 1, new_shift__24328, new_root__24330, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__24331 = this;
  if(this__24331.cnt > 0) {
    return new cljs.core.RSeq(coll, this__24331.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__24332 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__24333 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__24334 = this;
  var this__24335 = this;
  return cljs.core.pr_str.call(null, this__24335)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__24336 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__24337 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__24338 = this;
  if(this__24338.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__24339 = this;
  return this__24339.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__24340 = this;
  if(this__24340.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__24340.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__24341 = this;
  if(this__24341.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__24341.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__24341.meta)
    }else {
      if(1 < this__24341.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__24341.meta, this__24341.cnt - 1, this__24341.shift, this__24341.root, this__24341.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__24342 = cljs.core.array_for.call(null, coll, this__24341.cnt - 2);
          var nr__24343 = cljs.core.pop_tail.call(null, coll, this__24341.shift, this__24341.root);
          var new_root__24344 = nr__24343 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__24343;
          var cnt_1__24345 = this__24341.cnt - 1;
          if(function() {
            var and__3822__auto____24346 = 5 < this__24341.shift;
            if(and__3822__auto____24346) {
              return cljs.core.pv_aget.call(null, new_root__24344, 1) == null
            }else {
              return and__3822__auto____24346
            }
          }()) {
            return new cljs.core.PersistentVector(this__24341.meta, cnt_1__24345, this__24341.shift - 5, cljs.core.pv_aget.call(null, new_root__24344, 0), new_tail__24342, null)
          }else {
            return new cljs.core.PersistentVector(this__24341.meta, cnt_1__24345, this__24341.shift, new_root__24344, new_tail__24342, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__24347 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__24348 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__24349 = this;
  return new cljs.core.PersistentVector(meta, this__24349.cnt, this__24349.shift, this__24349.root, this__24349.tail, this__24349.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__24350 = this;
  return this__24350.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__24351 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__24352 = this;
  if(function() {
    var and__3822__auto____24353 = 0 <= n;
    if(and__3822__auto____24353) {
      return n < this__24352.cnt
    }else {
      return and__3822__auto____24353
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__24354 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__24354.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__24359 = xs.length;
  var xs__24360 = no_clone === true ? xs : xs.slice();
  if(l__24359 < 32) {
    return new cljs.core.PersistentVector(null, l__24359, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__24360, null)
  }else {
    var node__24361 = xs__24360.slice(0, 32);
    var v__24362 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__24361, null);
    var i__24363 = 32;
    var out__24364 = cljs.core._as_transient.call(null, v__24362);
    while(true) {
      if(i__24363 < l__24359) {
        var G__24365 = i__24363 + 1;
        var G__24366 = cljs.core.conj_BANG_.call(null, out__24364, xs__24360[i__24363]);
        i__24363 = G__24365;
        out__24364 = G__24366;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__24364)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__24367) {
    var args = cljs.core.seq(arglist__24367);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__24368 = this;
  if(this__24368.off + 1 < this__24368.node.length) {
    var s__24369 = cljs.core.chunked_seq.call(null, this__24368.vec, this__24368.node, this__24368.i, this__24368.off + 1);
    if(s__24369 == null) {
      return null
    }else {
      return s__24369
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__24370 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__24371 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__24372 = this;
  return this__24372.node[this__24372.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__24373 = this;
  if(this__24373.off + 1 < this__24373.node.length) {
    var s__24374 = cljs.core.chunked_seq.call(null, this__24373.vec, this__24373.node, this__24373.i, this__24373.off + 1);
    if(s__24374 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__24374
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__24375 = this;
  var l__24376 = this__24375.node.length;
  var s__24377 = this__24375.i + l__24376 < cljs.core._count.call(null, this__24375.vec) ? cljs.core.chunked_seq.call(null, this__24375.vec, this__24375.i + l__24376, 0) : null;
  if(s__24377 == null) {
    return null
  }else {
    return s__24377
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__24378 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__24379 = this;
  return cljs.core.chunked_seq.call(null, this__24379.vec, this__24379.node, this__24379.i, this__24379.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__24380 = this;
  return this__24380.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__24381 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__24381.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__24382 = this;
  return cljs.core.array_chunk.call(null, this__24382.node, this__24382.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__24383 = this;
  var l__24384 = this__24383.node.length;
  var s__24385 = this__24383.i + l__24384 < cljs.core._count.call(null, this__24383.vec) ? cljs.core.chunked_seq.call(null, this__24383.vec, this__24383.i + l__24384, 0) : null;
  if(s__24385 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__24385
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__24388 = this;
  var h__2085__auto____24389 = this__24388.__hash;
  if(!(h__2085__auto____24389 == null)) {
    return h__2085__auto____24389
  }else {
    var h__2085__auto____24390 = cljs.core.hash_coll.call(null, coll);
    this__24388.__hash = h__2085__auto____24390;
    return h__2085__auto____24390
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__24391 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__24392 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__24393 = this;
  var v_pos__24394 = this__24393.start + key;
  return new cljs.core.Subvec(this__24393.meta, cljs.core._assoc.call(null, this__24393.v, v_pos__24394, val), this__24393.start, this__24393.end > v_pos__24394 + 1 ? this__24393.end : v_pos__24394 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__24420 = null;
  var G__24420__2 = function(this_sym24395, k) {
    var this__24397 = this;
    var this_sym24395__24398 = this;
    var coll__24399 = this_sym24395__24398;
    return coll__24399.cljs$core$ILookup$_lookup$arity$2(coll__24399, k)
  };
  var G__24420__3 = function(this_sym24396, k, not_found) {
    var this__24397 = this;
    var this_sym24396__24400 = this;
    var coll__24401 = this_sym24396__24400;
    return coll__24401.cljs$core$ILookup$_lookup$arity$3(coll__24401, k, not_found)
  };
  G__24420 = function(this_sym24396, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24420__2.call(this, this_sym24396, k);
      case 3:
        return G__24420__3.call(this, this_sym24396, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__24420
}();
cljs.core.Subvec.prototype.apply = function(this_sym24386, args24387) {
  var this__24402 = this;
  return this_sym24386.call.apply(this_sym24386, [this_sym24386].concat(args24387.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__24403 = this;
  return new cljs.core.Subvec(this__24403.meta, cljs.core._assoc_n.call(null, this__24403.v, this__24403.end, o), this__24403.start, this__24403.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__24404 = this;
  var this__24405 = this;
  return cljs.core.pr_str.call(null, this__24405)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__24406 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__24407 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__24408 = this;
  var subvec_seq__24409 = function subvec_seq(i) {
    if(i === this__24408.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__24408.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__24409.call(null, this__24408.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__24410 = this;
  return this__24410.end - this__24410.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__24411 = this;
  return cljs.core._nth.call(null, this__24411.v, this__24411.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__24412 = this;
  if(this__24412.start === this__24412.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__24412.meta, this__24412.v, this__24412.start, this__24412.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__24413 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__24414 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__24415 = this;
  return new cljs.core.Subvec(meta, this__24415.v, this__24415.start, this__24415.end, this__24415.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__24416 = this;
  return this__24416.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__24417 = this;
  return cljs.core._nth.call(null, this__24417.v, this__24417.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__24418 = this;
  return cljs.core._nth.call(null, this__24418.v, this__24418.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__24419 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__24419.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__24422 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__24422, 0, tl.length);
  return ret__24422
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__24426 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__24427 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__24426, subidx__24427, level === 5 ? tail_node : function() {
    var child__24428 = cljs.core.pv_aget.call(null, ret__24426, subidx__24427);
    if(!(child__24428 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__24428, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__24426
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__24433 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__24434 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__24435 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__24433, subidx__24434));
    if(function() {
      var and__3822__auto____24436 = new_child__24435 == null;
      if(and__3822__auto____24436) {
        return subidx__24434 === 0
      }else {
        return and__3822__auto____24436
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__24433, subidx__24434, new_child__24435);
      return node__24433
    }
  }else {
    if(subidx__24434 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__24433, subidx__24434, null);
        return node__24433
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____24441 = 0 <= i;
    if(and__3822__auto____24441) {
      return i < tv.cnt
    }else {
      return and__3822__auto____24441
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__24442 = tv.root;
      var node__24443 = root__24442;
      var level__24444 = tv.shift;
      while(true) {
        if(level__24444 > 0) {
          var G__24445 = cljs.core.tv_ensure_editable.call(null, root__24442.edit, cljs.core.pv_aget.call(null, node__24443, i >>> level__24444 & 31));
          var G__24446 = level__24444 - 5;
          node__24443 = G__24445;
          level__24444 = G__24446;
          continue
        }else {
          return node__24443.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__24486 = null;
  var G__24486__2 = function(this_sym24449, k) {
    var this__24451 = this;
    var this_sym24449__24452 = this;
    var coll__24453 = this_sym24449__24452;
    return coll__24453.cljs$core$ILookup$_lookup$arity$2(coll__24453, k)
  };
  var G__24486__3 = function(this_sym24450, k, not_found) {
    var this__24451 = this;
    var this_sym24450__24454 = this;
    var coll__24455 = this_sym24450__24454;
    return coll__24455.cljs$core$ILookup$_lookup$arity$3(coll__24455, k, not_found)
  };
  G__24486 = function(this_sym24450, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24486__2.call(this, this_sym24450, k);
      case 3:
        return G__24486__3.call(this, this_sym24450, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__24486
}();
cljs.core.TransientVector.prototype.apply = function(this_sym24447, args24448) {
  var this__24456 = this;
  return this_sym24447.call.apply(this_sym24447, [this_sym24447].concat(args24448.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__24457 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__24458 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__24459 = this;
  if(this__24459.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__24460 = this;
  if(function() {
    var and__3822__auto____24461 = 0 <= n;
    if(and__3822__auto____24461) {
      return n < this__24460.cnt
    }else {
      return and__3822__auto____24461
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__24462 = this;
  if(this__24462.root.edit) {
    return this__24462.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__24463 = this;
  if(this__24463.root.edit) {
    if(function() {
      var and__3822__auto____24464 = 0 <= n;
      if(and__3822__auto____24464) {
        return n < this__24463.cnt
      }else {
        return and__3822__auto____24464
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__24463.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__24469 = function go(level, node) {
          var node__24467 = cljs.core.tv_ensure_editable.call(null, this__24463.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__24467, n & 31, val);
            return node__24467
          }else {
            var subidx__24468 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__24467, subidx__24468, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__24467, subidx__24468)));
            return node__24467
          }
        }.call(null, this__24463.shift, this__24463.root);
        this__24463.root = new_root__24469;
        return tcoll
      }
    }else {
      if(n === this__24463.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__24463.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__24470 = this;
  if(this__24470.root.edit) {
    if(this__24470.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__24470.cnt) {
        this__24470.cnt = 0;
        return tcoll
      }else {
        if((this__24470.cnt - 1 & 31) > 0) {
          this__24470.cnt = this__24470.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__24471 = cljs.core.editable_array_for.call(null, tcoll, this__24470.cnt - 2);
            var new_root__24473 = function() {
              var nr__24472 = cljs.core.tv_pop_tail.call(null, tcoll, this__24470.shift, this__24470.root);
              if(!(nr__24472 == null)) {
                return nr__24472
              }else {
                return new cljs.core.VectorNode(this__24470.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____24474 = 5 < this__24470.shift;
              if(and__3822__auto____24474) {
                return cljs.core.pv_aget.call(null, new_root__24473, 1) == null
              }else {
                return and__3822__auto____24474
              }
            }()) {
              var new_root__24475 = cljs.core.tv_ensure_editable.call(null, this__24470.root.edit, cljs.core.pv_aget.call(null, new_root__24473, 0));
              this__24470.root = new_root__24475;
              this__24470.shift = this__24470.shift - 5;
              this__24470.cnt = this__24470.cnt - 1;
              this__24470.tail = new_tail__24471;
              return tcoll
            }else {
              this__24470.root = new_root__24473;
              this__24470.cnt = this__24470.cnt - 1;
              this__24470.tail = new_tail__24471;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__24476 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__24477 = this;
  if(this__24477.root.edit) {
    if(this__24477.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__24477.tail[this__24477.cnt & 31] = o;
      this__24477.cnt = this__24477.cnt + 1;
      return tcoll
    }else {
      var tail_node__24478 = new cljs.core.VectorNode(this__24477.root.edit, this__24477.tail);
      var new_tail__24479 = cljs.core.make_array.call(null, 32);
      new_tail__24479[0] = o;
      this__24477.tail = new_tail__24479;
      if(this__24477.cnt >>> 5 > 1 << this__24477.shift) {
        var new_root_array__24480 = cljs.core.make_array.call(null, 32);
        var new_shift__24481 = this__24477.shift + 5;
        new_root_array__24480[0] = this__24477.root;
        new_root_array__24480[1] = cljs.core.new_path.call(null, this__24477.root.edit, this__24477.shift, tail_node__24478);
        this__24477.root = new cljs.core.VectorNode(this__24477.root.edit, new_root_array__24480);
        this__24477.shift = new_shift__24481;
        this__24477.cnt = this__24477.cnt + 1;
        return tcoll
      }else {
        var new_root__24482 = cljs.core.tv_push_tail.call(null, tcoll, this__24477.shift, this__24477.root, tail_node__24478);
        this__24477.root = new_root__24482;
        this__24477.cnt = this__24477.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__24483 = this;
  if(this__24483.root.edit) {
    this__24483.root.edit = null;
    var len__24484 = this__24483.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__24485 = cljs.core.make_array.call(null, len__24484);
    cljs.core.array_copy.call(null, this__24483.tail, 0, trimmed_tail__24485, 0, len__24484);
    return new cljs.core.PersistentVector(null, this__24483.cnt, this__24483.shift, this__24483.root, trimmed_tail__24485, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__24487 = this;
  var h__2085__auto____24488 = this__24487.__hash;
  if(!(h__2085__auto____24488 == null)) {
    return h__2085__auto____24488
  }else {
    var h__2085__auto____24489 = cljs.core.hash_coll.call(null, coll);
    this__24487.__hash = h__2085__auto____24489;
    return h__2085__auto____24489
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__24490 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__24491 = this;
  var this__24492 = this;
  return cljs.core.pr_str.call(null, this__24492)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__24493 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__24494 = this;
  return cljs.core._first.call(null, this__24494.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__24495 = this;
  var temp__3971__auto____24496 = cljs.core.next.call(null, this__24495.front);
  if(temp__3971__auto____24496) {
    var f1__24497 = temp__3971__auto____24496;
    return new cljs.core.PersistentQueueSeq(this__24495.meta, f1__24497, this__24495.rear, null)
  }else {
    if(this__24495.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__24495.meta, this__24495.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__24498 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__24499 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__24499.front, this__24499.rear, this__24499.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__24500 = this;
  return this__24500.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__24501 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__24501.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__24502 = this;
  var h__2085__auto____24503 = this__24502.__hash;
  if(!(h__2085__auto____24503 == null)) {
    return h__2085__auto____24503
  }else {
    var h__2085__auto____24504 = cljs.core.hash_coll.call(null, coll);
    this__24502.__hash = h__2085__auto____24504;
    return h__2085__auto____24504
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__24505 = this;
  if(cljs.core.truth_(this__24505.front)) {
    return new cljs.core.PersistentQueue(this__24505.meta, this__24505.count + 1, this__24505.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____24506 = this__24505.rear;
      if(cljs.core.truth_(or__3824__auto____24506)) {
        return or__3824__auto____24506
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__24505.meta, this__24505.count + 1, cljs.core.conj.call(null, this__24505.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__24507 = this;
  var this__24508 = this;
  return cljs.core.pr_str.call(null, this__24508)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__24509 = this;
  var rear__24510 = cljs.core.seq.call(null, this__24509.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____24511 = this__24509.front;
    if(cljs.core.truth_(or__3824__auto____24511)) {
      return or__3824__auto____24511
    }else {
      return rear__24510
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__24509.front, cljs.core.seq.call(null, rear__24510), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__24512 = this;
  return this__24512.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__24513 = this;
  return cljs.core._first.call(null, this__24513.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__24514 = this;
  if(cljs.core.truth_(this__24514.front)) {
    var temp__3971__auto____24515 = cljs.core.next.call(null, this__24514.front);
    if(temp__3971__auto____24515) {
      var f1__24516 = temp__3971__auto____24515;
      return new cljs.core.PersistentQueue(this__24514.meta, this__24514.count - 1, f1__24516, this__24514.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__24514.meta, this__24514.count - 1, cljs.core.seq.call(null, this__24514.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__24517 = this;
  return cljs.core.first.call(null, this__24517.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__24518 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__24519 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__24520 = this;
  return new cljs.core.PersistentQueue(meta, this__24520.count, this__24520.front, this__24520.rear, this__24520.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__24521 = this;
  return this__24521.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__24522 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__24523 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__24526 = array.length;
  var i__24527 = 0;
  while(true) {
    if(i__24527 < len__24526) {
      if(k === array[i__24527]) {
        return i__24527
      }else {
        var G__24528 = i__24527 + incr;
        i__24527 = G__24528;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__24531 = cljs.core.hash.call(null, a);
  var b__24532 = cljs.core.hash.call(null, b);
  if(a__24531 < b__24532) {
    return-1
  }else {
    if(a__24531 > b__24532) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__24540 = m.keys;
  var len__24541 = ks__24540.length;
  var so__24542 = m.strobj;
  var out__24543 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__24544 = 0;
  var out__24545 = cljs.core.transient$.call(null, out__24543);
  while(true) {
    if(i__24544 < len__24541) {
      var k__24546 = ks__24540[i__24544];
      var G__24547 = i__24544 + 1;
      var G__24548 = cljs.core.assoc_BANG_.call(null, out__24545, k__24546, so__24542[k__24546]);
      i__24544 = G__24547;
      out__24545 = G__24548;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__24545, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__24554 = {};
  var l__24555 = ks.length;
  var i__24556 = 0;
  while(true) {
    if(i__24556 < l__24555) {
      var k__24557 = ks[i__24556];
      new_obj__24554[k__24557] = obj[k__24557];
      var G__24558 = i__24556 + 1;
      i__24556 = G__24558;
      continue
    }else {
    }
    break
  }
  return new_obj__24554
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__24561 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__24562 = this;
  var h__2085__auto____24563 = this__24562.__hash;
  if(!(h__2085__auto____24563 == null)) {
    return h__2085__auto____24563
  }else {
    var h__2085__auto____24564 = cljs.core.hash_imap.call(null, coll);
    this__24562.__hash = h__2085__auto____24564;
    return h__2085__auto____24564
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__24565 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__24566 = this;
  if(function() {
    var and__3822__auto____24567 = goog.isString(k);
    if(and__3822__auto____24567) {
      return!(cljs.core.scan_array.call(null, 1, k, this__24566.keys) == null)
    }else {
      return and__3822__auto____24567
    }
  }()) {
    return this__24566.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__24568 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____24569 = this__24568.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____24569) {
        return or__3824__auto____24569
      }else {
        return this__24568.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__24568.keys) == null)) {
        var new_strobj__24570 = cljs.core.obj_clone.call(null, this__24568.strobj, this__24568.keys);
        new_strobj__24570[k] = v;
        return new cljs.core.ObjMap(this__24568.meta, this__24568.keys, new_strobj__24570, this__24568.update_count + 1, null)
      }else {
        var new_strobj__24571 = cljs.core.obj_clone.call(null, this__24568.strobj, this__24568.keys);
        var new_keys__24572 = this__24568.keys.slice();
        new_strobj__24571[k] = v;
        new_keys__24572.push(k);
        return new cljs.core.ObjMap(this__24568.meta, new_keys__24572, new_strobj__24571, this__24568.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__24573 = this;
  if(function() {
    var and__3822__auto____24574 = goog.isString(k);
    if(and__3822__auto____24574) {
      return!(cljs.core.scan_array.call(null, 1, k, this__24573.keys) == null)
    }else {
      return and__3822__auto____24574
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__24596 = null;
  var G__24596__2 = function(this_sym24575, k) {
    var this__24577 = this;
    var this_sym24575__24578 = this;
    var coll__24579 = this_sym24575__24578;
    return coll__24579.cljs$core$ILookup$_lookup$arity$2(coll__24579, k)
  };
  var G__24596__3 = function(this_sym24576, k, not_found) {
    var this__24577 = this;
    var this_sym24576__24580 = this;
    var coll__24581 = this_sym24576__24580;
    return coll__24581.cljs$core$ILookup$_lookup$arity$3(coll__24581, k, not_found)
  };
  G__24596 = function(this_sym24576, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24596__2.call(this, this_sym24576, k);
      case 3:
        return G__24596__3.call(this, this_sym24576, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__24596
}();
cljs.core.ObjMap.prototype.apply = function(this_sym24559, args24560) {
  var this__24582 = this;
  return this_sym24559.call.apply(this_sym24559, [this_sym24559].concat(args24560.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__24583 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__24584 = this;
  var this__24585 = this;
  return cljs.core.pr_str.call(null, this__24585)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__24586 = this;
  if(this__24586.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__24549_SHARP_) {
      return cljs.core.vector.call(null, p1__24549_SHARP_, this__24586.strobj[p1__24549_SHARP_])
    }, this__24586.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__24587 = this;
  return this__24587.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__24588 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__24589 = this;
  return new cljs.core.ObjMap(meta, this__24589.keys, this__24589.strobj, this__24589.update_count, this__24589.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__24590 = this;
  return this__24590.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__24591 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__24591.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__24592 = this;
  if(function() {
    var and__3822__auto____24593 = goog.isString(k);
    if(and__3822__auto____24593) {
      return!(cljs.core.scan_array.call(null, 1, k, this__24592.keys) == null)
    }else {
      return and__3822__auto____24593
    }
  }()) {
    var new_keys__24594 = this__24592.keys.slice();
    var new_strobj__24595 = cljs.core.obj_clone.call(null, this__24592.strobj, this__24592.keys);
    new_keys__24594.splice(cljs.core.scan_array.call(null, 1, k, new_keys__24594), 1);
    cljs.core.js_delete.call(null, new_strobj__24595, k);
    return new cljs.core.ObjMap(this__24592.meta, new_keys__24594, new_strobj__24595, this__24592.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__24600 = this;
  var h__2085__auto____24601 = this__24600.__hash;
  if(!(h__2085__auto____24601 == null)) {
    return h__2085__auto____24601
  }else {
    var h__2085__auto____24602 = cljs.core.hash_imap.call(null, coll);
    this__24600.__hash = h__2085__auto____24602;
    return h__2085__auto____24602
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__24603 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__24604 = this;
  var bucket__24605 = this__24604.hashobj[cljs.core.hash.call(null, k)];
  var i__24606 = cljs.core.truth_(bucket__24605) ? cljs.core.scan_array.call(null, 2, k, bucket__24605) : null;
  if(cljs.core.truth_(i__24606)) {
    return bucket__24605[i__24606 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__24607 = this;
  var h__24608 = cljs.core.hash.call(null, k);
  var bucket__24609 = this__24607.hashobj[h__24608];
  if(cljs.core.truth_(bucket__24609)) {
    var new_bucket__24610 = bucket__24609.slice();
    var new_hashobj__24611 = goog.object.clone(this__24607.hashobj);
    new_hashobj__24611[h__24608] = new_bucket__24610;
    var temp__3971__auto____24612 = cljs.core.scan_array.call(null, 2, k, new_bucket__24610);
    if(cljs.core.truth_(temp__3971__auto____24612)) {
      var i__24613 = temp__3971__auto____24612;
      new_bucket__24610[i__24613 + 1] = v;
      return new cljs.core.HashMap(this__24607.meta, this__24607.count, new_hashobj__24611, null)
    }else {
      new_bucket__24610.push(k, v);
      return new cljs.core.HashMap(this__24607.meta, this__24607.count + 1, new_hashobj__24611, null)
    }
  }else {
    var new_hashobj__24614 = goog.object.clone(this__24607.hashobj);
    new_hashobj__24614[h__24608] = [k, v];
    return new cljs.core.HashMap(this__24607.meta, this__24607.count + 1, new_hashobj__24614, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__24615 = this;
  var bucket__24616 = this__24615.hashobj[cljs.core.hash.call(null, k)];
  var i__24617 = cljs.core.truth_(bucket__24616) ? cljs.core.scan_array.call(null, 2, k, bucket__24616) : null;
  if(cljs.core.truth_(i__24617)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__24642 = null;
  var G__24642__2 = function(this_sym24618, k) {
    var this__24620 = this;
    var this_sym24618__24621 = this;
    var coll__24622 = this_sym24618__24621;
    return coll__24622.cljs$core$ILookup$_lookup$arity$2(coll__24622, k)
  };
  var G__24642__3 = function(this_sym24619, k, not_found) {
    var this__24620 = this;
    var this_sym24619__24623 = this;
    var coll__24624 = this_sym24619__24623;
    return coll__24624.cljs$core$ILookup$_lookup$arity$3(coll__24624, k, not_found)
  };
  G__24642 = function(this_sym24619, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24642__2.call(this, this_sym24619, k);
      case 3:
        return G__24642__3.call(this, this_sym24619, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__24642
}();
cljs.core.HashMap.prototype.apply = function(this_sym24598, args24599) {
  var this__24625 = this;
  return this_sym24598.call.apply(this_sym24598, [this_sym24598].concat(args24599.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__24626 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__24627 = this;
  var this__24628 = this;
  return cljs.core.pr_str.call(null, this__24628)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__24629 = this;
  if(this__24629.count > 0) {
    var hashes__24630 = cljs.core.js_keys.call(null, this__24629.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__24597_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__24629.hashobj[p1__24597_SHARP_]))
    }, hashes__24630)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__24631 = this;
  return this__24631.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__24632 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__24633 = this;
  return new cljs.core.HashMap(meta, this__24633.count, this__24633.hashobj, this__24633.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__24634 = this;
  return this__24634.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__24635 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__24635.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__24636 = this;
  var h__24637 = cljs.core.hash.call(null, k);
  var bucket__24638 = this__24636.hashobj[h__24637];
  var i__24639 = cljs.core.truth_(bucket__24638) ? cljs.core.scan_array.call(null, 2, k, bucket__24638) : null;
  if(cljs.core.not.call(null, i__24639)) {
    return coll
  }else {
    var new_hashobj__24640 = goog.object.clone(this__24636.hashobj);
    if(3 > bucket__24638.length) {
      cljs.core.js_delete.call(null, new_hashobj__24640, h__24637)
    }else {
      var new_bucket__24641 = bucket__24638.slice();
      new_bucket__24641.splice(i__24639, 2);
      new_hashobj__24640[h__24637] = new_bucket__24641
    }
    return new cljs.core.HashMap(this__24636.meta, this__24636.count - 1, new_hashobj__24640, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__24643 = ks.length;
  var i__24644 = 0;
  var out__24645 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__24644 < len__24643) {
      var G__24646 = i__24644 + 1;
      var G__24647 = cljs.core.assoc.call(null, out__24645, ks[i__24644], vs[i__24644]);
      i__24644 = G__24646;
      out__24645 = G__24647;
      continue
    }else {
      return out__24645
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__24651 = m.arr;
  var len__24652 = arr__24651.length;
  var i__24653 = 0;
  while(true) {
    if(len__24652 <= i__24653) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__24651[i__24653], k)) {
        return i__24653
      }else {
        if("\ufdd0'else") {
          var G__24654 = i__24653 + 2;
          i__24653 = G__24654;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__24657 = this;
  return new cljs.core.TransientArrayMap({}, this__24657.arr.length, this__24657.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__24658 = this;
  var h__2085__auto____24659 = this__24658.__hash;
  if(!(h__2085__auto____24659 == null)) {
    return h__2085__auto____24659
  }else {
    var h__2085__auto____24660 = cljs.core.hash_imap.call(null, coll);
    this__24658.__hash = h__2085__auto____24660;
    return h__2085__auto____24660
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__24661 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__24662 = this;
  var idx__24663 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__24663 === -1) {
    return not_found
  }else {
    return this__24662.arr[idx__24663 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__24664 = this;
  var idx__24665 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__24665 === -1) {
    if(this__24664.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__24664.meta, this__24664.cnt + 1, function() {
        var G__24666__24667 = this__24664.arr.slice();
        G__24666__24667.push(k);
        G__24666__24667.push(v);
        return G__24666__24667
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__24664.arr[idx__24665 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__24664.meta, this__24664.cnt, function() {
          var G__24668__24669 = this__24664.arr.slice();
          G__24668__24669[idx__24665 + 1] = v;
          return G__24668__24669
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__24670 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__24702 = null;
  var G__24702__2 = function(this_sym24671, k) {
    var this__24673 = this;
    var this_sym24671__24674 = this;
    var coll__24675 = this_sym24671__24674;
    return coll__24675.cljs$core$ILookup$_lookup$arity$2(coll__24675, k)
  };
  var G__24702__3 = function(this_sym24672, k, not_found) {
    var this__24673 = this;
    var this_sym24672__24676 = this;
    var coll__24677 = this_sym24672__24676;
    return coll__24677.cljs$core$ILookup$_lookup$arity$3(coll__24677, k, not_found)
  };
  G__24702 = function(this_sym24672, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24702__2.call(this, this_sym24672, k);
      case 3:
        return G__24702__3.call(this, this_sym24672, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__24702
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym24655, args24656) {
  var this__24678 = this;
  return this_sym24655.call.apply(this_sym24655, [this_sym24655].concat(args24656.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__24679 = this;
  var len__24680 = this__24679.arr.length;
  var i__24681 = 0;
  var init__24682 = init;
  while(true) {
    if(i__24681 < len__24680) {
      var init__24683 = f.call(null, init__24682, this__24679.arr[i__24681], this__24679.arr[i__24681 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__24683)) {
        return cljs.core.deref.call(null, init__24683)
      }else {
        var G__24703 = i__24681 + 2;
        var G__24704 = init__24683;
        i__24681 = G__24703;
        init__24682 = G__24704;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__24684 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__24685 = this;
  var this__24686 = this;
  return cljs.core.pr_str.call(null, this__24686)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__24687 = this;
  if(this__24687.cnt > 0) {
    var len__24688 = this__24687.arr.length;
    var array_map_seq__24689 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__24688) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__24687.arr[i], this__24687.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__24689.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__24690 = this;
  return this__24690.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__24691 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__24692 = this;
  return new cljs.core.PersistentArrayMap(meta, this__24692.cnt, this__24692.arr, this__24692.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__24693 = this;
  return this__24693.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__24694 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__24694.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__24695 = this;
  var idx__24696 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__24696 >= 0) {
    var len__24697 = this__24695.arr.length;
    var new_len__24698 = len__24697 - 2;
    if(new_len__24698 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__24699 = cljs.core.make_array.call(null, new_len__24698);
      var s__24700 = 0;
      var d__24701 = 0;
      while(true) {
        if(s__24700 >= len__24697) {
          return new cljs.core.PersistentArrayMap(this__24695.meta, this__24695.cnt - 1, new_arr__24699, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__24695.arr[s__24700])) {
            var G__24705 = s__24700 + 2;
            var G__24706 = d__24701;
            s__24700 = G__24705;
            d__24701 = G__24706;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__24699[d__24701] = this__24695.arr[s__24700];
              new_arr__24699[d__24701 + 1] = this__24695.arr[s__24700 + 1];
              var G__24707 = s__24700 + 2;
              var G__24708 = d__24701 + 2;
              s__24700 = G__24707;
              d__24701 = G__24708;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__24709 = cljs.core.count.call(null, ks);
  var i__24710 = 0;
  var out__24711 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__24710 < len__24709) {
      var G__24712 = i__24710 + 1;
      var G__24713 = cljs.core.assoc_BANG_.call(null, out__24711, ks[i__24710], vs[i__24710]);
      i__24710 = G__24712;
      out__24711 = G__24713;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__24711)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__24714 = this;
  if(cljs.core.truth_(this__24714.editable_QMARK_)) {
    var idx__24715 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__24715 >= 0) {
      this__24714.arr[idx__24715] = this__24714.arr[this__24714.len - 2];
      this__24714.arr[idx__24715 + 1] = this__24714.arr[this__24714.len - 1];
      var G__24716__24717 = this__24714.arr;
      G__24716__24717.pop();
      G__24716__24717.pop();
      G__24716__24717;
      this__24714.len = this__24714.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__24718 = this;
  if(cljs.core.truth_(this__24718.editable_QMARK_)) {
    var idx__24719 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__24719 === -1) {
      if(this__24718.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__24718.len = this__24718.len + 2;
        this__24718.arr.push(key);
        this__24718.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__24718.len, this__24718.arr), key, val)
      }
    }else {
      if(val === this__24718.arr[idx__24719 + 1]) {
        return tcoll
      }else {
        this__24718.arr[idx__24719 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__24720 = this;
  if(cljs.core.truth_(this__24720.editable_QMARK_)) {
    if(function() {
      var G__24721__24722 = o;
      if(G__24721__24722) {
        if(function() {
          var or__3824__auto____24723 = G__24721__24722.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____24723) {
            return or__3824__auto____24723
          }else {
            return G__24721__24722.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__24721__24722.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__24721__24722)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__24721__24722)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__24724 = cljs.core.seq.call(null, o);
      var tcoll__24725 = tcoll;
      while(true) {
        var temp__3971__auto____24726 = cljs.core.first.call(null, es__24724);
        if(cljs.core.truth_(temp__3971__auto____24726)) {
          var e__24727 = temp__3971__auto____24726;
          var G__24733 = cljs.core.next.call(null, es__24724);
          var G__24734 = tcoll__24725.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__24725, cljs.core.key.call(null, e__24727), cljs.core.val.call(null, e__24727));
          es__24724 = G__24733;
          tcoll__24725 = G__24734;
          continue
        }else {
          return tcoll__24725
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__24728 = this;
  if(cljs.core.truth_(this__24728.editable_QMARK_)) {
    this__24728.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__24728.len, 2), this__24728.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__24729 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__24730 = this;
  if(cljs.core.truth_(this__24730.editable_QMARK_)) {
    var idx__24731 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__24731 === -1) {
      return not_found
    }else {
      return this__24730.arr[idx__24731 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__24732 = this;
  if(cljs.core.truth_(this__24732.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__24732.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__24737 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__24738 = 0;
  while(true) {
    if(i__24738 < len) {
      var G__24739 = cljs.core.assoc_BANG_.call(null, out__24737, arr[i__24738], arr[i__24738 + 1]);
      var G__24740 = i__24738 + 2;
      out__24737 = G__24739;
      i__24738 = G__24740;
      continue
    }else {
      return out__24737
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2203__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__24745__24746 = arr.slice();
    G__24745__24746[i] = a;
    return G__24745__24746
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__24747__24748 = arr.slice();
    G__24747__24748[i] = a;
    G__24747__24748[j] = b;
    return G__24747__24748
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__24750 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__24750, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__24750, 2 * i, new_arr__24750.length - 2 * i);
  return new_arr__24750
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__24753 = inode.ensure_editable(edit);
    editable__24753.arr[i] = a;
    return editable__24753
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__24754 = inode.ensure_editable(edit);
    editable__24754.arr[i] = a;
    editable__24754.arr[j] = b;
    return editable__24754
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__24761 = arr.length;
  var i__24762 = 0;
  var init__24763 = init;
  while(true) {
    if(i__24762 < len__24761) {
      var init__24766 = function() {
        var k__24764 = arr[i__24762];
        if(!(k__24764 == null)) {
          return f.call(null, init__24763, k__24764, arr[i__24762 + 1])
        }else {
          var node__24765 = arr[i__24762 + 1];
          if(!(node__24765 == null)) {
            return node__24765.kv_reduce(f, init__24763)
          }else {
            return init__24763
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__24766)) {
        return cljs.core.deref.call(null, init__24766)
      }else {
        var G__24767 = i__24762 + 2;
        var G__24768 = init__24766;
        i__24762 = G__24767;
        init__24763 = G__24768;
        continue
      }
    }else {
      return init__24763
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__24769 = this;
  var inode__24770 = this;
  if(this__24769.bitmap === bit) {
    return null
  }else {
    var editable__24771 = inode__24770.ensure_editable(e);
    var earr__24772 = editable__24771.arr;
    var len__24773 = earr__24772.length;
    editable__24771.bitmap = bit ^ editable__24771.bitmap;
    cljs.core.array_copy.call(null, earr__24772, 2 * (i + 1), earr__24772, 2 * i, len__24773 - 2 * (i + 1));
    earr__24772[len__24773 - 2] = null;
    earr__24772[len__24773 - 1] = null;
    return editable__24771
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__24774 = this;
  var inode__24775 = this;
  var bit__24776 = 1 << (hash >>> shift & 31);
  var idx__24777 = cljs.core.bitmap_indexed_node_index.call(null, this__24774.bitmap, bit__24776);
  if((this__24774.bitmap & bit__24776) === 0) {
    var n__24778 = cljs.core.bit_count.call(null, this__24774.bitmap);
    if(2 * n__24778 < this__24774.arr.length) {
      var editable__24779 = inode__24775.ensure_editable(edit);
      var earr__24780 = editable__24779.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__24780, 2 * idx__24777, earr__24780, 2 * (idx__24777 + 1), 2 * (n__24778 - idx__24777));
      earr__24780[2 * idx__24777] = key;
      earr__24780[2 * idx__24777 + 1] = val;
      editable__24779.bitmap = editable__24779.bitmap | bit__24776;
      return editable__24779
    }else {
      if(n__24778 >= 16) {
        var nodes__24781 = cljs.core.make_array.call(null, 32);
        var jdx__24782 = hash >>> shift & 31;
        nodes__24781[jdx__24782] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__24783 = 0;
        var j__24784 = 0;
        while(true) {
          if(i__24783 < 32) {
            if((this__24774.bitmap >>> i__24783 & 1) === 0) {
              var G__24837 = i__24783 + 1;
              var G__24838 = j__24784;
              i__24783 = G__24837;
              j__24784 = G__24838;
              continue
            }else {
              nodes__24781[i__24783] = !(this__24774.arr[j__24784] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__24774.arr[j__24784]), this__24774.arr[j__24784], this__24774.arr[j__24784 + 1], added_leaf_QMARK_) : this__24774.arr[j__24784 + 1];
              var G__24839 = i__24783 + 1;
              var G__24840 = j__24784 + 2;
              i__24783 = G__24839;
              j__24784 = G__24840;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__24778 + 1, nodes__24781)
      }else {
        if("\ufdd0'else") {
          var new_arr__24785 = cljs.core.make_array.call(null, 2 * (n__24778 + 4));
          cljs.core.array_copy.call(null, this__24774.arr, 0, new_arr__24785, 0, 2 * idx__24777);
          new_arr__24785[2 * idx__24777] = key;
          new_arr__24785[2 * idx__24777 + 1] = val;
          cljs.core.array_copy.call(null, this__24774.arr, 2 * idx__24777, new_arr__24785, 2 * (idx__24777 + 1), 2 * (n__24778 - idx__24777));
          added_leaf_QMARK_.val = true;
          var editable__24786 = inode__24775.ensure_editable(edit);
          editable__24786.arr = new_arr__24785;
          editable__24786.bitmap = editable__24786.bitmap | bit__24776;
          return editable__24786
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__24787 = this__24774.arr[2 * idx__24777];
    var val_or_node__24788 = this__24774.arr[2 * idx__24777 + 1];
    if(key_or_nil__24787 == null) {
      var n__24789 = val_or_node__24788.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__24789 === val_or_node__24788) {
        return inode__24775
      }else {
        return cljs.core.edit_and_set.call(null, inode__24775, edit, 2 * idx__24777 + 1, n__24789)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__24787)) {
        if(val === val_or_node__24788) {
          return inode__24775
        }else {
          return cljs.core.edit_and_set.call(null, inode__24775, edit, 2 * idx__24777 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__24775, edit, 2 * idx__24777, null, 2 * idx__24777 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__24787, val_or_node__24788, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__24790 = this;
  var inode__24791 = this;
  return cljs.core.create_inode_seq.call(null, this__24790.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__24792 = this;
  var inode__24793 = this;
  var bit__24794 = 1 << (hash >>> shift & 31);
  if((this__24792.bitmap & bit__24794) === 0) {
    return inode__24793
  }else {
    var idx__24795 = cljs.core.bitmap_indexed_node_index.call(null, this__24792.bitmap, bit__24794);
    var key_or_nil__24796 = this__24792.arr[2 * idx__24795];
    var val_or_node__24797 = this__24792.arr[2 * idx__24795 + 1];
    if(key_or_nil__24796 == null) {
      var n__24798 = val_or_node__24797.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__24798 === val_or_node__24797) {
        return inode__24793
      }else {
        if(!(n__24798 == null)) {
          return cljs.core.edit_and_set.call(null, inode__24793, edit, 2 * idx__24795 + 1, n__24798)
        }else {
          if(this__24792.bitmap === bit__24794) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__24793.edit_and_remove_pair(edit, bit__24794, idx__24795)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__24796)) {
        removed_leaf_QMARK_[0] = true;
        return inode__24793.edit_and_remove_pair(edit, bit__24794, idx__24795)
      }else {
        if("\ufdd0'else") {
          return inode__24793
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__24799 = this;
  var inode__24800 = this;
  if(e === this__24799.edit) {
    return inode__24800
  }else {
    var n__24801 = cljs.core.bit_count.call(null, this__24799.bitmap);
    var new_arr__24802 = cljs.core.make_array.call(null, n__24801 < 0 ? 4 : 2 * (n__24801 + 1));
    cljs.core.array_copy.call(null, this__24799.arr, 0, new_arr__24802, 0, 2 * n__24801);
    return new cljs.core.BitmapIndexedNode(e, this__24799.bitmap, new_arr__24802)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__24803 = this;
  var inode__24804 = this;
  return cljs.core.inode_kv_reduce.call(null, this__24803.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__24805 = this;
  var inode__24806 = this;
  var bit__24807 = 1 << (hash >>> shift & 31);
  if((this__24805.bitmap & bit__24807) === 0) {
    return not_found
  }else {
    var idx__24808 = cljs.core.bitmap_indexed_node_index.call(null, this__24805.bitmap, bit__24807);
    var key_or_nil__24809 = this__24805.arr[2 * idx__24808];
    var val_or_node__24810 = this__24805.arr[2 * idx__24808 + 1];
    if(key_or_nil__24809 == null) {
      return val_or_node__24810.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__24809)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__24809, val_or_node__24810], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__24811 = this;
  var inode__24812 = this;
  var bit__24813 = 1 << (hash >>> shift & 31);
  if((this__24811.bitmap & bit__24813) === 0) {
    return inode__24812
  }else {
    var idx__24814 = cljs.core.bitmap_indexed_node_index.call(null, this__24811.bitmap, bit__24813);
    var key_or_nil__24815 = this__24811.arr[2 * idx__24814];
    var val_or_node__24816 = this__24811.arr[2 * idx__24814 + 1];
    if(key_or_nil__24815 == null) {
      var n__24817 = val_or_node__24816.inode_without(shift + 5, hash, key);
      if(n__24817 === val_or_node__24816) {
        return inode__24812
      }else {
        if(!(n__24817 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__24811.bitmap, cljs.core.clone_and_set.call(null, this__24811.arr, 2 * idx__24814 + 1, n__24817))
        }else {
          if(this__24811.bitmap === bit__24813) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__24811.bitmap ^ bit__24813, cljs.core.remove_pair.call(null, this__24811.arr, idx__24814))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__24815)) {
        return new cljs.core.BitmapIndexedNode(null, this__24811.bitmap ^ bit__24813, cljs.core.remove_pair.call(null, this__24811.arr, idx__24814))
      }else {
        if("\ufdd0'else") {
          return inode__24812
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__24818 = this;
  var inode__24819 = this;
  var bit__24820 = 1 << (hash >>> shift & 31);
  var idx__24821 = cljs.core.bitmap_indexed_node_index.call(null, this__24818.bitmap, bit__24820);
  if((this__24818.bitmap & bit__24820) === 0) {
    var n__24822 = cljs.core.bit_count.call(null, this__24818.bitmap);
    if(n__24822 >= 16) {
      var nodes__24823 = cljs.core.make_array.call(null, 32);
      var jdx__24824 = hash >>> shift & 31;
      nodes__24823[jdx__24824] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__24825 = 0;
      var j__24826 = 0;
      while(true) {
        if(i__24825 < 32) {
          if((this__24818.bitmap >>> i__24825 & 1) === 0) {
            var G__24841 = i__24825 + 1;
            var G__24842 = j__24826;
            i__24825 = G__24841;
            j__24826 = G__24842;
            continue
          }else {
            nodes__24823[i__24825] = !(this__24818.arr[j__24826] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__24818.arr[j__24826]), this__24818.arr[j__24826], this__24818.arr[j__24826 + 1], added_leaf_QMARK_) : this__24818.arr[j__24826 + 1];
            var G__24843 = i__24825 + 1;
            var G__24844 = j__24826 + 2;
            i__24825 = G__24843;
            j__24826 = G__24844;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__24822 + 1, nodes__24823)
    }else {
      var new_arr__24827 = cljs.core.make_array.call(null, 2 * (n__24822 + 1));
      cljs.core.array_copy.call(null, this__24818.arr, 0, new_arr__24827, 0, 2 * idx__24821);
      new_arr__24827[2 * idx__24821] = key;
      new_arr__24827[2 * idx__24821 + 1] = val;
      cljs.core.array_copy.call(null, this__24818.arr, 2 * idx__24821, new_arr__24827, 2 * (idx__24821 + 1), 2 * (n__24822 - idx__24821));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__24818.bitmap | bit__24820, new_arr__24827)
    }
  }else {
    var key_or_nil__24828 = this__24818.arr[2 * idx__24821];
    var val_or_node__24829 = this__24818.arr[2 * idx__24821 + 1];
    if(key_or_nil__24828 == null) {
      var n__24830 = val_or_node__24829.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__24830 === val_or_node__24829) {
        return inode__24819
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__24818.bitmap, cljs.core.clone_and_set.call(null, this__24818.arr, 2 * idx__24821 + 1, n__24830))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__24828)) {
        if(val === val_or_node__24829) {
          return inode__24819
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__24818.bitmap, cljs.core.clone_and_set.call(null, this__24818.arr, 2 * idx__24821 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__24818.bitmap, cljs.core.clone_and_set.call(null, this__24818.arr, 2 * idx__24821, null, 2 * idx__24821 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__24828, val_or_node__24829, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__24831 = this;
  var inode__24832 = this;
  var bit__24833 = 1 << (hash >>> shift & 31);
  if((this__24831.bitmap & bit__24833) === 0) {
    return not_found
  }else {
    var idx__24834 = cljs.core.bitmap_indexed_node_index.call(null, this__24831.bitmap, bit__24833);
    var key_or_nil__24835 = this__24831.arr[2 * idx__24834];
    var val_or_node__24836 = this__24831.arr[2 * idx__24834 + 1];
    if(key_or_nil__24835 == null) {
      return val_or_node__24836.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__24835)) {
        return val_or_node__24836
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__24852 = array_node.arr;
  var len__24853 = 2 * (array_node.cnt - 1);
  var new_arr__24854 = cljs.core.make_array.call(null, len__24853);
  var i__24855 = 0;
  var j__24856 = 1;
  var bitmap__24857 = 0;
  while(true) {
    if(i__24855 < len__24853) {
      if(function() {
        var and__3822__auto____24858 = !(i__24855 === idx);
        if(and__3822__auto____24858) {
          return!(arr__24852[i__24855] == null)
        }else {
          return and__3822__auto____24858
        }
      }()) {
        new_arr__24854[j__24856] = arr__24852[i__24855];
        var G__24859 = i__24855 + 1;
        var G__24860 = j__24856 + 2;
        var G__24861 = bitmap__24857 | 1 << i__24855;
        i__24855 = G__24859;
        j__24856 = G__24860;
        bitmap__24857 = G__24861;
        continue
      }else {
        var G__24862 = i__24855 + 1;
        var G__24863 = j__24856;
        var G__24864 = bitmap__24857;
        i__24855 = G__24862;
        j__24856 = G__24863;
        bitmap__24857 = G__24864;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__24857, new_arr__24854)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__24865 = this;
  var inode__24866 = this;
  var idx__24867 = hash >>> shift & 31;
  var node__24868 = this__24865.arr[idx__24867];
  if(node__24868 == null) {
    var editable__24869 = cljs.core.edit_and_set.call(null, inode__24866, edit, idx__24867, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__24869.cnt = editable__24869.cnt + 1;
    return editable__24869
  }else {
    var n__24870 = node__24868.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__24870 === node__24868) {
      return inode__24866
    }else {
      return cljs.core.edit_and_set.call(null, inode__24866, edit, idx__24867, n__24870)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__24871 = this;
  var inode__24872 = this;
  return cljs.core.create_array_node_seq.call(null, this__24871.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__24873 = this;
  var inode__24874 = this;
  var idx__24875 = hash >>> shift & 31;
  var node__24876 = this__24873.arr[idx__24875];
  if(node__24876 == null) {
    return inode__24874
  }else {
    var n__24877 = node__24876.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__24877 === node__24876) {
      return inode__24874
    }else {
      if(n__24877 == null) {
        if(this__24873.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__24874, edit, idx__24875)
        }else {
          var editable__24878 = cljs.core.edit_and_set.call(null, inode__24874, edit, idx__24875, n__24877);
          editable__24878.cnt = editable__24878.cnt - 1;
          return editable__24878
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__24874, edit, idx__24875, n__24877)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__24879 = this;
  var inode__24880 = this;
  if(e === this__24879.edit) {
    return inode__24880
  }else {
    return new cljs.core.ArrayNode(e, this__24879.cnt, this__24879.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__24881 = this;
  var inode__24882 = this;
  var len__24883 = this__24881.arr.length;
  var i__24884 = 0;
  var init__24885 = init;
  while(true) {
    if(i__24884 < len__24883) {
      var node__24886 = this__24881.arr[i__24884];
      if(!(node__24886 == null)) {
        var init__24887 = node__24886.kv_reduce(f, init__24885);
        if(cljs.core.reduced_QMARK_.call(null, init__24887)) {
          return cljs.core.deref.call(null, init__24887)
        }else {
          var G__24906 = i__24884 + 1;
          var G__24907 = init__24887;
          i__24884 = G__24906;
          init__24885 = G__24907;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__24885
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__24888 = this;
  var inode__24889 = this;
  var idx__24890 = hash >>> shift & 31;
  var node__24891 = this__24888.arr[idx__24890];
  if(!(node__24891 == null)) {
    return node__24891.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__24892 = this;
  var inode__24893 = this;
  var idx__24894 = hash >>> shift & 31;
  var node__24895 = this__24892.arr[idx__24894];
  if(!(node__24895 == null)) {
    var n__24896 = node__24895.inode_without(shift + 5, hash, key);
    if(n__24896 === node__24895) {
      return inode__24893
    }else {
      if(n__24896 == null) {
        if(this__24892.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__24893, null, idx__24894)
        }else {
          return new cljs.core.ArrayNode(null, this__24892.cnt - 1, cljs.core.clone_and_set.call(null, this__24892.arr, idx__24894, n__24896))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__24892.cnt, cljs.core.clone_and_set.call(null, this__24892.arr, idx__24894, n__24896))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__24893
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__24897 = this;
  var inode__24898 = this;
  var idx__24899 = hash >>> shift & 31;
  var node__24900 = this__24897.arr[idx__24899];
  if(node__24900 == null) {
    return new cljs.core.ArrayNode(null, this__24897.cnt + 1, cljs.core.clone_and_set.call(null, this__24897.arr, idx__24899, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__24901 = node__24900.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__24901 === node__24900) {
      return inode__24898
    }else {
      return new cljs.core.ArrayNode(null, this__24897.cnt, cljs.core.clone_and_set.call(null, this__24897.arr, idx__24899, n__24901))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__24902 = this;
  var inode__24903 = this;
  var idx__24904 = hash >>> shift & 31;
  var node__24905 = this__24902.arr[idx__24904];
  if(!(node__24905 == null)) {
    return node__24905.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__24910 = 2 * cnt;
  var i__24911 = 0;
  while(true) {
    if(i__24911 < lim__24910) {
      if(cljs.core.key_test.call(null, key, arr[i__24911])) {
        return i__24911
      }else {
        var G__24912 = i__24911 + 2;
        i__24911 = G__24912;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__24913 = this;
  var inode__24914 = this;
  if(hash === this__24913.collision_hash) {
    var idx__24915 = cljs.core.hash_collision_node_find_index.call(null, this__24913.arr, this__24913.cnt, key);
    if(idx__24915 === -1) {
      if(this__24913.arr.length > 2 * this__24913.cnt) {
        var editable__24916 = cljs.core.edit_and_set.call(null, inode__24914, edit, 2 * this__24913.cnt, key, 2 * this__24913.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__24916.cnt = editable__24916.cnt + 1;
        return editable__24916
      }else {
        var len__24917 = this__24913.arr.length;
        var new_arr__24918 = cljs.core.make_array.call(null, len__24917 + 2);
        cljs.core.array_copy.call(null, this__24913.arr, 0, new_arr__24918, 0, len__24917);
        new_arr__24918[len__24917] = key;
        new_arr__24918[len__24917 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__24914.ensure_editable_array(edit, this__24913.cnt + 1, new_arr__24918)
      }
    }else {
      if(this__24913.arr[idx__24915 + 1] === val) {
        return inode__24914
      }else {
        return cljs.core.edit_and_set.call(null, inode__24914, edit, idx__24915 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__24913.collision_hash >>> shift & 31), [null, inode__24914, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__24919 = this;
  var inode__24920 = this;
  return cljs.core.create_inode_seq.call(null, this__24919.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__24921 = this;
  var inode__24922 = this;
  var idx__24923 = cljs.core.hash_collision_node_find_index.call(null, this__24921.arr, this__24921.cnt, key);
  if(idx__24923 === -1) {
    return inode__24922
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__24921.cnt === 1) {
      return null
    }else {
      var editable__24924 = inode__24922.ensure_editable(edit);
      var earr__24925 = editable__24924.arr;
      earr__24925[idx__24923] = earr__24925[2 * this__24921.cnt - 2];
      earr__24925[idx__24923 + 1] = earr__24925[2 * this__24921.cnt - 1];
      earr__24925[2 * this__24921.cnt - 1] = null;
      earr__24925[2 * this__24921.cnt - 2] = null;
      editable__24924.cnt = editable__24924.cnt - 1;
      return editable__24924
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__24926 = this;
  var inode__24927 = this;
  if(e === this__24926.edit) {
    return inode__24927
  }else {
    var new_arr__24928 = cljs.core.make_array.call(null, 2 * (this__24926.cnt + 1));
    cljs.core.array_copy.call(null, this__24926.arr, 0, new_arr__24928, 0, 2 * this__24926.cnt);
    return new cljs.core.HashCollisionNode(e, this__24926.collision_hash, this__24926.cnt, new_arr__24928)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__24929 = this;
  var inode__24930 = this;
  return cljs.core.inode_kv_reduce.call(null, this__24929.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__24931 = this;
  var inode__24932 = this;
  var idx__24933 = cljs.core.hash_collision_node_find_index.call(null, this__24931.arr, this__24931.cnt, key);
  if(idx__24933 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__24931.arr[idx__24933])) {
      return cljs.core.PersistentVector.fromArray([this__24931.arr[idx__24933], this__24931.arr[idx__24933 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__24934 = this;
  var inode__24935 = this;
  var idx__24936 = cljs.core.hash_collision_node_find_index.call(null, this__24934.arr, this__24934.cnt, key);
  if(idx__24936 === -1) {
    return inode__24935
  }else {
    if(this__24934.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__24934.collision_hash, this__24934.cnt - 1, cljs.core.remove_pair.call(null, this__24934.arr, cljs.core.quot.call(null, idx__24936, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__24937 = this;
  var inode__24938 = this;
  if(hash === this__24937.collision_hash) {
    var idx__24939 = cljs.core.hash_collision_node_find_index.call(null, this__24937.arr, this__24937.cnt, key);
    if(idx__24939 === -1) {
      var len__24940 = this__24937.arr.length;
      var new_arr__24941 = cljs.core.make_array.call(null, len__24940 + 2);
      cljs.core.array_copy.call(null, this__24937.arr, 0, new_arr__24941, 0, len__24940);
      new_arr__24941[len__24940] = key;
      new_arr__24941[len__24940 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__24937.collision_hash, this__24937.cnt + 1, new_arr__24941)
    }else {
      if(cljs.core._EQ_.call(null, this__24937.arr[idx__24939], val)) {
        return inode__24938
      }else {
        return new cljs.core.HashCollisionNode(null, this__24937.collision_hash, this__24937.cnt, cljs.core.clone_and_set.call(null, this__24937.arr, idx__24939 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__24937.collision_hash >>> shift & 31), [null, inode__24938])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__24942 = this;
  var inode__24943 = this;
  var idx__24944 = cljs.core.hash_collision_node_find_index.call(null, this__24942.arr, this__24942.cnt, key);
  if(idx__24944 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__24942.arr[idx__24944])) {
      return this__24942.arr[idx__24944 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__24945 = this;
  var inode__24946 = this;
  if(e === this__24945.edit) {
    this__24945.arr = array;
    this__24945.cnt = count;
    return inode__24946
  }else {
    return new cljs.core.HashCollisionNode(this__24945.edit, this__24945.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__24951 = cljs.core.hash.call(null, key1);
    if(key1hash__24951 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__24951, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___24952 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__24951, key1, val1, added_leaf_QMARK___24952).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___24952)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__24953 = cljs.core.hash.call(null, key1);
    if(key1hash__24953 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__24953, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___24954 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__24953, key1, val1, added_leaf_QMARK___24954).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___24954)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__24955 = this;
  var h__2085__auto____24956 = this__24955.__hash;
  if(!(h__2085__auto____24956 == null)) {
    return h__2085__auto____24956
  }else {
    var h__2085__auto____24957 = cljs.core.hash_coll.call(null, coll);
    this__24955.__hash = h__2085__auto____24957;
    return h__2085__auto____24957
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__24958 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__24959 = this;
  var this__24960 = this;
  return cljs.core.pr_str.call(null, this__24960)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__24961 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__24962 = this;
  if(this__24962.s == null) {
    return cljs.core.PersistentVector.fromArray([this__24962.nodes[this__24962.i], this__24962.nodes[this__24962.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__24962.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__24963 = this;
  if(this__24963.s == null) {
    return cljs.core.create_inode_seq.call(null, this__24963.nodes, this__24963.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__24963.nodes, this__24963.i, cljs.core.next.call(null, this__24963.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__24964 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__24965 = this;
  return new cljs.core.NodeSeq(meta, this__24965.nodes, this__24965.i, this__24965.s, this__24965.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__24966 = this;
  return this__24966.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__24967 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__24967.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__24974 = nodes.length;
      var j__24975 = i;
      while(true) {
        if(j__24975 < len__24974) {
          if(!(nodes[j__24975] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__24975, null, null)
          }else {
            var temp__3971__auto____24976 = nodes[j__24975 + 1];
            if(cljs.core.truth_(temp__3971__auto____24976)) {
              var node__24977 = temp__3971__auto____24976;
              var temp__3971__auto____24978 = node__24977.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____24978)) {
                var node_seq__24979 = temp__3971__auto____24978;
                return new cljs.core.NodeSeq(null, nodes, j__24975 + 2, node_seq__24979, null)
              }else {
                var G__24980 = j__24975 + 2;
                j__24975 = G__24980;
                continue
              }
            }else {
              var G__24981 = j__24975 + 2;
              j__24975 = G__24981;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__24982 = this;
  var h__2085__auto____24983 = this__24982.__hash;
  if(!(h__2085__auto____24983 == null)) {
    return h__2085__auto____24983
  }else {
    var h__2085__auto____24984 = cljs.core.hash_coll.call(null, coll);
    this__24982.__hash = h__2085__auto____24984;
    return h__2085__auto____24984
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__24985 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__24986 = this;
  var this__24987 = this;
  return cljs.core.pr_str.call(null, this__24987)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__24988 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__24989 = this;
  return cljs.core.first.call(null, this__24989.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__24990 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__24990.nodes, this__24990.i, cljs.core.next.call(null, this__24990.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__24991 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__24992 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__24992.nodes, this__24992.i, this__24992.s, this__24992.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__24993 = this;
  return this__24993.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__24994 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__24994.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__25001 = nodes.length;
      var j__25002 = i;
      while(true) {
        if(j__25002 < len__25001) {
          var temp__3971__auto____25003 = nodes[j__25002];
          if(cljs.core.truth_(temp__3971__auto____25003)) {
            var nj__25004 = temp__3971__auto____25003;
            var temp__3971__auto____25005 = nj__25004.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____25005)) {
              var ns__25006 = temp__3971__auto____25005;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__25002 + 1, ns__25006, null)
            }else {
              var G__25007 = j__25002 + 1;
              j__25002 = G__25007;
              continue
            }
          }else {
            var G__25008 = j__25002 + 1;
            j__25002 = G__25008;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__25011 = this;
  return new cljs.core.TransientHashMap({}, this__25011.root, this__25011.cnt, this__25011.has_nil_QMARK_, this__25011.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__25012 = this;
  var h__2085__auto____25013 = this__25012.__hash;
  if(!(h__2085__auto____25013 == null)) {
    return h__2085__auto____25013
  }else {
    var h__2085__auto____25014 = cljs.core.hash_imap.call(null, coll);
    this__25012.__hash = h__2085__auto____25014;
    return h__2085__auto____25014
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__25015 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__25016 = this;
  if(k == null) {
    if(this__25016.has_nil_QMARK_) {
      return this__25016.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__25016.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__25016.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__25017 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____25018 = this__25017.has_nil_QMARK_;
      if(and__3822__auto____25018) {
        return v === this__25017.nil_val
      }else {
        return and__3822__auto____25018
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__25017.meta, this__25017.has_nil_QMARK_ ? this__25017.cnt : this__25017.cnt + 1, this__25017.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___25019 = new cljs.core.Box(false);
    var new_root__25020 = (this__25017.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__25017.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___25019);
    if(new_root__25020 === this__25017.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__25017.meta, added_leaf_QMARK___25019.val ? this__25017.cnt + 1 : this__25017.cnt, new_root__25020, this__25017.has_nil_QMARK_, this__25017.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__25021 = this;
  if(k == null) {
    return this__25021.has_nil_QMARK_
  }else {
    if(this__25021.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__25021.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__25044 = null;
  var G__25044__2 = function(this_sym25022, k) {
    var this__25024 = this;
    var this_sym25022__25025 = this;
    var coll__25026 = this_sym25022__25025;
    return coll__25026.cljs$core$ILookup$_lookup$arity$2(coll__25026, k)
  };
  var G__25044__3 = function(this_sym25023, k, not_found) {
    var this__25024 = this;
    var this_sym25023__25027 = this;
    var coll__25028 = this_sym25023__25027;
    return coll__25028.cljs$core$ILookup$_lookup$arity$3(coll__25028, k, not_found)
  };
  G__25044 = function(this_sym25023, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__25044__2.call(this, this_sym25023, k);
      case 3:
        return G__25044__3.call(this, this_sym25023, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__25044
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym25009, args25010) {
  var this__25029 = this;
  return this_sym25009.call.apply(this_sym25009, [this_sym25009].concat(args25010.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__25030 = this;
  var init__25031 = this__25030.has_nil_QMARK_ ? f.call(null, init, null, this__25030.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__25031)) {
    return cljs.core.deref.call(null, init__25031)
  }else {
    if(!(this__25030.root == null)) {
      return this__25030.root.kv_reduce(f, init__25031)
    }else {
      if("\ufdd0'else") {
        return init__25031
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__25032 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__25033 = this;
  var this__25034 = this;
  return cljs.core.pr_str.call(null, this__25034)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__25035 = this;
  if(this__25035.cnt > 0) {
    var s__25036 = !(this__25035.root == null) ? this__25035.root.inode_seq() : null;
    if(this__25035.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__25035.nil_val], true), s__25036)
    }else {
      return s__25036
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__25037 = this;
  return this__25037.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__25038 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__25039 = this;
  return new cljs.core.PersistentHashMap(meta, this__25039.cnt, this__25039.root, this__25039.has_nil_QMARK_, this__25039.nil_val, this__25039.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__25040 = this;
  return this__25040.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__25041 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__25041.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__25042 = this;
  if(k == null) {
    if(this__25042.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__25042.meta, this__25042.cnt - 1, this__25042.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__25042.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__25043 = this__25042.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__25043 === this__25042.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__25042.meta, this__25042.cnt - 1, new_root__25043, this__25042.has_nil_QMARK_, this__25042.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__25045 = ks.length;
  var i__25046 = 0;
  var out__25047 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__25046 < len__25045) {
      var G__25048 = i__25046 + 1;
      var G__25049 = cljs.core.assoc_BANG_.call(null, out__25047, ks[i__25046], vs[i__25046]);
      i__25046 = G__25048;
      out__25047 = G__25049;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__25047)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__25050 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__25051 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__25052 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__25053 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__25054 = this;
  if(k == null) {
    if(this__25054.has_nil_QMARK_) {
      return this__25054.nil_val
    }else {
      return null
    }
  }else {
    if(this__25054.root == null) {
      return null
    }else {
      return this__25054.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__25055 = this;
  if(k == null) {
    if(this__25055.has_nil_QMARK_) {
      return this__25055.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__25055.root == null) {
      return not_found
    }else {
      return this__25055.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__25056 = this;
  if(this__25056.edit) {
    return this__25056.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__25057 = this;
  var tcoll__25058 = this;
  if(this__25057.edit) {
    if(function() {
      var G__25059__25060 = o;
      if(G__25059__25060) {
        if(function() {
          var or__3824__auto____25061 = G__25059__25060.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____25061) {
            return or__3824__auto____25061
          }else {
            return G__25059__25060.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__25059__25060.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__25059__25060)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__25059__25060)
      }
    }()) {
      return tcoll__25058.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__25062 = cljs.core.seq.call(null, o);
      var tcoll__25063 = tcoll__25058;
      while(true) {
        var temp__3971__auto____25064 = cljs.core.first.call(null, es__25062);
        if(cljs.core.truth_(temp__3971__auto____25064)) {
          var e__25065 = temp__3971__auto____25064;
          var G__25076 = cljs.core.next.call(null, es__25062);
          var G__25077 = tcoll__25063.assoc_BANG_(cljs.core.key.call(null, e__25065), cljs.core.val.call(null, e__25065));
          es__25062 = G__25076;
          tcoll__25063 = G__25077;
          continue
        }else {
          return tcoll__25063
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__25066 = this;
  var tcoll__25067 = this;
  if(this__25066.edit) {
    if(k == null) {
      if(this__25066.nil_val === v) {
      }else {
        this__25066.nil_val = v
      }
      if(this__25066.has_nil_QMARK_) {
      }else {
        this__25066.count = this__25066.count + 1;
        this__25066.has_nil_QMARK_ = true
      }
      return tcoll__25067
    }else {
      var added_leaf_QMARK___25068 = new cljs.core.Box(false);
      var node__25069 = (this__25066.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__25066.root).inode_assoc_BANG_(this__25066.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___25068);
      if(node__25069 === this__25066.root) {
      }else {
        this__25066.root = node__25069
      }
      if(added_leaf_QMARK___25068.val) {
        this__25066.count = this__25066.count + 1
      }else {
      }
      return tcoll__25067
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__25070 = this;
  var tcoll__25071 = this;
  if(this__25070.edit) {
    if(k == null) {
      if(this__25070.has_nil_QMARK_) {
        this__25070.has_nil_QMARK_ = false;
        this__25070.nil_val = null;
        this__25070.count = this__25070.count - 1;
        return tcoll__25071
      }else {
        return tcoll__25071
      }
    }else {
      if(this__25070.root == null) {
        return tcoll__25071
      }else {
        var removed_leaf_QMARK___25072 = new cljs.core.Box(false);
        var node__25073 = this__25070.root.inode_without_BANG_(this__25070.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___25072);
        if(node__25073 === this__25070.root) {
        }else {
          this__25070.root = node__25073
        }
        if(cljs.core.truth_(removed_leaf_QMARK___25072[0])) {
          this__25070.count = this__25070.count - 1
        }else {
        }
        return tcoll__25071
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__25074 = this;
  var tcoll__25075 = this;
  if(this__25074.edit) {
    this__25074.edit = null;
    return new cljs.core.PersistentHashMap(null, this__25074.count, this__25074.root, this__25074.has_nil_QMARK_, this__25074.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__25080 = node;
  var stack__25081 = stack;
  while(true) {
    if(!(t__25080 == null)) {
      var G__25082 = ascending_QMARK_ ? t__25080.left : t__25080.right;
      var G__25083 = cljs.core.conj.call(null, stack__25081, t__25080);
      t__25080 = G__25082;
      stack__25081 = G__25083;
      continue
    }else {
      return stack__25081
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__25084 = this;
  var h__2085__auto____25085 = this__25084.__hash;
  if(!(h__2085__auto____25085 == null)) {
    return h__2085__auto____25085
  }else {
    var h__2085__auto____25086 = cljs.core.hash_coll.call(null, coll);
    this__25084.__hash = h__2085__auto____25086;
    return h__2085__auto____25086
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__25087 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__25088 = this;
  var this__25089 = this;
  return cljs.core.pr_str.call(null, this__25089)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__25090 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__25091 = this;
  if(this__25091.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__25091.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__25092 = this;
  return cljs.core.peek.call(null, this__25092.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__25093 = this;
  var t__25094 = cljs.core.first.call(null, this__25093.stack);
  var next_stack__25095 = cljs.core.tree_map_seq_push.call(null, this__25093.ascending_QMARK_ ? t__25094.right : t__25094.left, cljs.core.next.call(null, this__25093.stack), this__25093.ascending_QMARK_);
  if(!(next_stack__25095 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__25095, this__25093.ascending_QMARK_, this__25093.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__25096 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__25097 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__25097.stack, this__25097.ascending_QMARK_, this__25097.cnt, this__25097.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__25098 = this;
  return this__25098.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____25100 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____25100) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____25100
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____25102 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____25102) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____25102
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__25106 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__25106)) {
    return cljs.core.deref.call(null, init__25106)
  }else {
    var init__25107 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__25106) : init__25106;
    if(cljs.core.reduced_QMARK_.call(null, init__25107)) {
      return cljs.core.deref.call(null, init__25107)
    }else {
      var init__25108 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__25107) : init__25107;
      if(cljs.core.reduced_QMARK_.call(null, init__25108)) {
        return cljs.core.deref.call(null, init__25108)
      }else {
        return init__25108
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__25111 = this;
  var h__2085__auto____25112 = this__25111.__hash;
  if(!(h__2085__auto____25112 == null)) {
    return h__2085__auto____25112
  }else {
    var h__2085__auto____25113 = cljs.core.hash_coll.call(null, coll);
    this__25111.__hash = h__2085__auto____25113;
    return h__2085__auto____25113
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__25114 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__25115 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__25116 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__25116.key, this__25116.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__25164 = null;
  var G__25164__2 = function(this_sym25117, k) {
    var this__25119 = this;
    var this_sym25117__25120 = this;
    var node__25121 = this_sym25117__25120;
    return node__25121.cljs$core$ILookup$_lookup$arity$2(node__25121, k)
  };
  var G__25164__3 = function(this_sym25118, k, not_found) {
    var this__25119 = this;
    var this_sym25118__25122 = this;
    var node__25123 = this_sym25118__25122;
    return node__25123.cljs$core$ILookup$_lookup$arity$3(node__25123, k, not_found)
  };
  G__25164 = function(this_sym25118, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__25164__2.call(this, this_sym25118, k);
      case 3:
        return G__25164__3.call(this, this_sym25118, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__25164
}();
cljs.core.BlackNode.prototype.apply = function(this_sym25109, args25110) {
  var this__25124 = this;
  return this_sym25109.call.apply(this_sym25109, [this_sym25109].concat(args25110.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__25125 = this;
  return cljs.core.PersistentVector.fromArray([this__25125.key, this__25125.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__25126 = this;
  return this__25126.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__25127 = this;
  return this__25127.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__25128 = this;
  var node__25129 = this;
  return ins.balance_right(node__25129)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__25130 = this;
  var node__25131 = this;
  return new cljs.core.RedNode(this__25130.key, this__25130.val, this__25130.left, this__25130.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__25132 = this;
  var node__25133 = this;
  return cljs.core.balance_right_del.call(null, this__25132.key, this__25132.val, this__25132.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__25134 = this;
  var node__25135 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__25136 = this;
  var node__25137 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__25137, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__25138 = this;
  var node__25139 = this;
  return cljs.core.balance_left_del.call(null, this__25138.key, this__25138.val, del, this__25138.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__25140 = this;
  var node__25141 = this;
  return ins.balance_left(node__25141)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__25142 = this;
  var node__25143 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__25143, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__25165 = null;
  var G__25165__0 = function() {
    var this__25144 = this;
    var this__25146 = this;
    return cljs.core.pr_str.call(null, this__25146)
  };
  G__25165 = function() {
    switch(arguments.length) {
      case 0:
        return G__25165__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__25165
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__25147 = this;
  var node__25148 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__25148, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__25149 = this;
  var node__25150 = this;
  return node__25150
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__25151 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__25152 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__25153 = this;
  return cljs.core.list.call(null, this__25153.key, this__25153.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__25154 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__25155 = this;
  return this__25155.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__25156 = this;
  return cljs.core.PersistentVector.fromArray([this__25156.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__25157 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__25157.key, this__25157.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__25158 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__25159 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__25159.key, this__25159.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__25160 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__25161 = this;
  if(n === 0) {
    return this__25161.key
  }else {
    if(n === 1) {
      return this__25161.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__25162 = this;
  if(n === 0) {
    return this__25162.key
  }else {
    if(n === 1) {
      return this__25162.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__25163 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__25168 = this;
  var h__2085__auto____25169 = this__25168.__hash;
  if(!(h__2085__auto____25169 == null)) {
    return h__2085__auto____25169
  }else {
    var h__2085__auto____25170 = cljs.core.hash_coll.call(null, coll);
    this__25168.__hash = h__2085__auto____25170;
    return h__2085__auto____25170
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__25171 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__25172 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__25173 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__25173.key, this__25173.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__25221 = null;
  var G__25221__2 = function(this_sym25174, k) {
    var this__25176 = this;
    var this_sym25174__25177 = this;
    var node__25178 = this_sym25174__25177;
    return node__25178.cljs$core$ILookup$_lookup$arity$2(node__25178, k)
  };
  var G__25221__3 = function(this_sym25175, k, not_found) {
    var this__25176 = this;
    var this_sym25175__25179 = this;
    var node__25180 = this_sym25175__25179;
    return node__25180.cljs$core$ILookup$_lookup$arity$3(node__25180, k, not_found)
  };
  G__25221 = function(this_sym25175, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__25221__2.call(this, this_sym25175, k);
      case 3:
        return G__25221__3.call(this, this_sym25175, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__25221
}();
cljs.core.RedNode.prototype.apply = function(this_sym25166, args25167) {
  var this__25181 = this;
  return this_sym25166.call.apply(this_sym25166, [this_sym25166].concat(args25167.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__25182 = this;
  return cljs.core.PersistentVector.fromArray([this__25182.key, this__25182.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__25183 = this;
  return this__25183.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__25184 = this;
  return this__25184.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__25185 = this;
  var node__25186 = this;
  return new cljs.core.RedNode(this__25185.key, this__25185.val, this__25185.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__25187 = this;
  var node__25188 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__25189 = this;
  var node__25190 = this;
  return new cljs.core.RedNode(this__25189.key, this__25189.val, this__25189.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__25191 = this;
  var node__25192 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__25193 = this;
  var node__25194 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__25194, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__25195 = this;
  var node__25196 = this;
  return new cljs.core.RedNode(this__25195.key, this__25195.val, del, this__25195.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__25197 = this;
  var node__25198 = this;
  return new cljs.core.RedNode(this__25197.key, this__25197.val, ins, this__25197.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__25199 = this;
  var node__25200 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__25199.left)) {
    return new cljs.core.RedNode(this__25199.key, this__25199.val, this__25199.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__25199.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__25199.right)) {
      return new cljs.core.RedNode(this__25199.right.key, this__25199.right.val, new cljs.core.BlackNode(this__25199.key, this__25199.val, this__25199.left, this__25199.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__25199.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__25200, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__25222 = null;
  var G__25222__0 = function() {
    var this__25201 = this;
    var this__25203 = this;
    return cljs.core.pr_str.call(null, this__25203)
  };
  G__25222 = function() {
    switch(arguments.length) {
      case 0:
        return G__25222__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__25222
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__25204 = this;
  var node__25205 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__25204.right)) {
    return new cljs.core.RedNode(this__25204.key, this__25204.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__25204.left, null), this__25204.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__25204.left)) {
      return new cljs.core.RedNode(this__25204.left.key, this__25204.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__25204.left.left, null), new cljs.core.BlackNode(this__25204.key, this__25204.val, this__25204.left.right, this__25204.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__25205, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__25206 = this;
  var node__25207 = this;
  return new cljs.core.BlackNode(this__25206.key, this__25206.val, this__25206.left, this__25206.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__25208 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__25209 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__25210 = this;
  return cljs.core.list.call(null, this__25210.key, this__25210.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__25211 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__25212 = this;
  return this__25212.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__25213 = this;
  return cljs.core.PersistentVector.fromArray([this__25213.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__25214 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__25214.key, this__25214.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__25215 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__25216 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__25216.key, this__25216.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__25217 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__25218 = this;
  if(n === 0) {
    return this__25218.key
  }else {
    if(n === 1) {
      return this__25218.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__25219 = this;
  if(n === 0) {
    return this__25219.key
  }else {
    if(n === 1) {
      return this__25219.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__25220 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__25226 = comp.call(null, k, tree.key);
    if(c__25226 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__25226 < 0) {
        var ins__25227 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__25227 == null)) {
          return tree.add_left(ins__25227)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__25228 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__25228 == null)) {
            return tree.add_right(ins__25228)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__25231 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__25231)) {
            return new cljs.core.RedNode(app__25231.key, app__25231.val, new cljs.core.RedNode(left.key, left.val, left.left, app__25231.left, null), new cljs.core.RedNode(right.key, right.val, app__25231.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__25231, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__25232 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__25232)) {
              return new cljs.core.RedNode(app__25232.key, app__25232.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__25232.left, null), new cljs.core.BlackNode(right.key, right.val, app__25232.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__25232, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__25238 = comp.call(null, k, tree.key);
    if(c__25238 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__25238 < 0) {
        var del__25239 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____25240 = !(del__25239 == null);
          if(or__3824__auto____25240) {
            return or__3824__auto____25240
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__25239, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__25239, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__25241 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____25242 = !(del__25241 == null);
            if(or__3824__auto____25242) {
              return or__3824__auto____25242
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__25241)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__25241, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__25245 = tree.key;
  var c__25246 = comp.call(null, k, tk__25245);
  if(c__25246 === 0) {
    return tree.replace(tk__25245, v, tree.left, tree.right)
  }else {
    if(c__25246 < 0) {
      return tree.replace(tk__25245, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__25245, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__25249 = this;
  var h__2085__auto____25250 = this__25249.__hash;
  if(!(h__2085__auto____25250 == null)) {
    return h__2085__auto____25250
  }else {
    var h__2085__auto____25251 = cljs.core.hash_imap.call(null, coll);
    this__25249.__hash = h__2085__auto____25251;
    return h__2085__auto____25251
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__25252 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__25253 = this;
  var n__25254 = coll.entry_at(k);
  if(!(n__25254 == null)) {
    return n__25254.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__25255 = this;
  var found__25256 = [null];
  var t__25257 = cljs.core.tree_map_add.call(null, this__25255.comp, this__25255.tree, k, v, found__25256);
  if(t__25257 == null) {
    var found_node__25258 = cljs.core.nth.call(null, found__25256, 0);
    if(cljs.core._EQ_.call(null, v, found_node__25258.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__25255.comp, cljs.core.tree_map_replace.call(null, this__25255.comp, this__25255.tree, k, v), this__25255.cnt, this__25255.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__25255.comp, t__25257.blacken(), this__25255.cnt + 1, this__25255.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__25259 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__25293 = null;
  var G__25293__2 = function(this_sym25260, k) {
    var this__25262 = this;
    var this_sym25260__25263 = this;
    var coll__25264 = this_sym25260__25263;
    return coll__25264.cljs$core$ILookup$_lookup$arity$2(coll__25264, k)
  };
  var G__25293__3 = function(this_sym25261, k, not_found) {
    var this__25262 = this;
    var this_sym25261__25265 = this;
    var coll__25266 = this_sym25261__25265;
    return coll__25266.cljs$core$ILookup$_lookup$arity$3(coll__25266, k, not_found)
  };
  G__25293 = function(this_sym25261, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__25293__2.call(this, this_sym25261, k);
      case 3:
        return G__25293__3.call(this, this_sym25261, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__25293
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym25247, args25248) {
  var this__25267 = this;
  return this_sym25247.call.apply(this_sym25247, [this_sym25247].concat(args25248.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__25268 = this;
  if(!(this__25268.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__25268.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__25269 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__25270 = this;
  if(this__25270.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__25270.tree, false, this__25270.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__25271 = this;
  var this__25272 = this;
  return cljs.core.pr_str.call(null, this__25272)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__25273 = this;
  var coll__25274 = this;
  var t__25275 = this__25273.tree;
  while(true) {
    if(!(t__25275 == null)) {
      var c__25276 = this__25273.comp.call(null, k, t__25275.key);
      if(c__25276 === 0) {
        return t__25275
      }else {
        if(c__25276 < 0) {
          var G__25294 = t__25275.left;
          t__25275 = G__25294;
          continue
        }else {
          if("\ufdd0'else") {
            var G__25295 = t__25275.right;
            t__25275 = G__25295;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__25277 = this;
  if(this__25277.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__25277.tree, ascending_QMARK_, this__25277.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__25278 = this;
  if(this__25278.cnt > 0) {
    var stack__25279 = null;
    var t__25280 = this__25278.tree;
    while(true) {
      if(!(t__25280 == null)) {
        var c__25281 = this__25278.comp.call(null, k, t__25280.key);
        if(c__25281 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__25279, t__25280), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__25281 < 0) {
              var G__25296 = cljs.core.conj.call(null, stack__25279, t__25280);
              var G__25297 = t__25280.left;
              stack__25279 = G__25296;
              t__25280 = G__25297;
              continue
            }else {
              var G__25298 = stack__25279;
              var G__25299 = t__25280.right;
              stack__25279 = G__25298;
              t__25280 = G__25299;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__25281 > 0) {
                var G__25300 = cljs.core.conj.call(null, stack__25279, t__25280);
                var G__25301 = t__25280.right;
                stack__25279 = G__25300;
                t__25280 = G__25301;
                continue
              }else {
                var G__25302 = stack__25279;
                var G__25303 = t__25280.left;
                stack__25279 = G__25302;
                t__25280 = G__25303;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__25279 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__25279, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__25282 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__25283 = this;
  return this__25283.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__25284 = this;
  if(this__25284.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__25284.tree, true, this__25284.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__25285 = this;
  return this__25285.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__25286 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__25287 = this;
  return new cljs.core.PersistentTreeMap(this__25287.comp, this__25287.tree, this__25287.cnt, meta, this__25287.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__25288 = this;
  return this__25288.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__25289 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__25289.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__25290 = this;
  var found__25291 = [null];
  var t__25292 = cljs.core.tree_map_remove.call(null, this__25290.comp, this__25290.tree, k, found__25291);
  if(t__25292 == null) {
    if(cljs.core.nth.call(null, found__25291, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__25290.comp, null, 0, this__25290.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__25290.comp, t__25292.blacken(), this__25290.cnt - 1, this__25290.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__25306 = cljs.core.seq.call(null, keyvals);
    var out__25307 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__25306) {
        var G__25308 = cljs.core.nnext.call(null, in__25306);
        var G__25309 = cljs.core.assoc_BANG_.call(null, out__25307, cljs.core.first.call(null, in__25306), cljs.core.second.call(null, in__25306));
        in__25306 = G__25308;
        out__25307 = G__25309;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__25307)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__25310) {
    var keyvals = cljs.core.seq(arglist__25310);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__25311) {
    var keyvals = cljs.core.seq(arglist__25311);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__25315 = [];
    var obj__25316 = {};
    var kvs__25317 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__25317) {
        ks__25315.push(cljs.core.first.call(null, kvs__25317));
        obj__25316[cljs.core.first.call(null, kvs__25317)] = cljs.core.second.call(null, kvs__25317);
        var G__25318 = cljs.core.nnext.call(null, kvs__25317);
        kvs__25317 = G__25318;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__25315, obj__25316)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__25319) {
    var keyvals = cljs.core.seq(arglist__25319);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__25322 = cljs.core.seq.call(null, keyvals);
    var out__25323 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__25322) {
        var G__25324 = cljs.core.nnext.call(null, in__25322);
        var G__25325 = cljs.core.assoc.call(null, out__25323, cljs.core.first.call(null, in__25322), cljs.core.second.call(null, in__25322));
        in__25322 = G__25324;
        out__25323 = G__25325;
        continue
      }else {
        return out__25323
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__25326) {
    var keyvals = cljs.core.seq(arglist__25326);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__25329 = cljs.core.seq.call(null, keyvals);
    var out__25330 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__25329) {
        var G__25331 = cljs.core.nnext.call(null, in__25329);
        var G__25332 = cljs.core.assoc.call(null, out__25330, cljs.core.first.call(null, in__25329), cljs.core.second.call(null, in__25329));
        in__25329 = G__25331;
        out__25330 = G__25332;
        continue
      }else {
        return out__25330
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__25333) {
    var comparator = cljs.core.first(arglist__25333);
    var keyvals = cljs.core.rest(arglist__25333);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__25334_SHARP_, p2__25335_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____25337 = p1__25334_SHARP_;
          if(cljs.core.truth_(or__3824__auto____25337)) {
            return or__3824__auto____25337
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__25335_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__25338) {
    var maps = cljs.core.seq(arglist__25338);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__25346 = function(m, e) {
        var k__25344 = cljs.core.first.call(null, e);
        var v__25345 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__25344)) {
          return cljs.core.assoc.call(null, m, k__25344, f.call(null, cljs.core._lookup.call(null, m, k__25344, null), v__25345))
        }else {
          return cljs.core.assoc.call(null, m, k__25344, v__25345)
        }
      };
      var merge2__25348 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__25346, function() {
          var or__3824__auto____25347 = m1;
          if(cljs.core.truth_(or__3824__auto____25347)) {
            return or__3824__auto____25347
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__25348, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__25349) {
    var f = cljs.core.first(arglist__25349);
    var maps = cljs.core.rest(arglist__25349);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__25354 = cljs.core.ObjMap.EMPTY;
  var keys__25355 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__25355) {
      var key__25356 = cljs.core.first.call(null, keys__25355);
      var entry__25357 = cljs.core._lookup.call(null, map, key__25356, "\ufdd0'cljs.core/not-found");
      var G__25358 = cljs.core.not_EQ_.call(null, entry__25357, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__25354, key__25356, entry__25357) : ret__25354;
      var G__25359 = cljs.core.next.call(null, keys__25355);
      ret__25354 = G__25358;
      keys__25355 = G__25359;
      continue
    }else {
      return ret__25354
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__25363 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__25363.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__25364 = this;
  var h__2085__auto____25365 = this__25364.__hash;
  if(!(h__2085__auto____25365 == null)) {
    return h__2085__auto____25365
  }else {
    var h__2085__auto____25366 = cljs.core.hash_iset.call(null, coll);
    this__25364.__hash = h__2085__auto____25366;
    return h__2085__auto____25366
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__25367 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__25368 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__25368.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__25389 = null;
  var G__25389__2 = function(this_sym25369, k) {
    var this__25371 = this;
    var this_sym25369__25372 = this;
    var coll__25373 = this_sym25369__25372;
    return coll__25373.cljs$core$ILookup$_lookup$arity$2(coll__25373, k)
  };
  var G__25389__3 = function(this_sym25370, k, not_found) {
    var this__25371 = this;
    var this_sym25370__25374 = this;
    var coll__25375 = this_sym25370__25374;
    return coll__25375.cljs$core$ILookup$_lookup$arity$3(coll__25375, k, not_found)
  };
  G__25389 = function(this_sym25370, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__25389__2.call(this, this_sym25370, k);
      case 3:
        return G__25389__3.call(this, this_sym25370, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__25389
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym25361, args25362) {
  var this__25376 = this;
  return this_sym25361.call.apply(this_sym25361, [this_sym25361].concat(args25362.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__25377 = this;
  return new cljs.core.PersistentHashSet(this__25377.meta, cljs.core.assoc.call(null, this__25377.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__25378 = this;
  var this__25379 = this;
  return cljs.core.pr_str.call(null, this__25379)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__25380 = this;
  return cljs.core.keys.call(null, this__25380.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__25381 = this;
  return new cljs.core.PersistentHashSet(this__25381.meta, cljs.core.dissoc.call(null, this__25381.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__25382 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__25383 = this;
  var and__3822__auto____25384 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____25384) {
    var and__3822__auto____25385 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____25385) {
      return cljs.core.every_QMARK_.call(null, function(p1__25360_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__25360_SHARP_)
      }, other)
    }else {
      return and__3822__auto____25385
    }
  }else {
    return and__3822__auto____25384
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__25386 = this;
  return new cljs.core.PersistentHashSet(meta, this__25386.hash_map, this__25386.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__25387 = this;
  return this__25387.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__25388 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__25388.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__25390 = cljs.core.count.call(null, items);
  var i__25391 = 0;
  var out__25392 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__25391 < len__25390) {
      var G__25393 = i__25391 + 1;
      var G__25394 = cljs.core.conj_BANG_.call(null, out__25392, items[i__25391]);
      i__25391 = G__25393;
      out__25392 = G__25394;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__25392)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__25412 = null;
  var G__25412__2 = function(this_sym25398, k) {
    var this__25400 = this;
    var this_sym25398__25401 = this;
    var tcoll__25402 = this_sym25398__25401;
    if(cljs.core._lookup.call(null, this__25400.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__25412__3 = function(this_sym25399, k, not_found) {
    var this__25400 = this;
    var this_sym25399__25403 = this;
    var tcoll__25404 = this_sym25399__25403;
    if(cljs.core._lookup.call(null, this__25400.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__25412 = function(this_sym25399, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__25412__2.call(this, this_sym25399, k);
      case 3:
        return G__25412__3.call(this, this_sym25399, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__25412
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym25396, args25397) {
  var this__25405 = this;
  return this_sym25396.call.apply(this_sym25396, [this_sym25396].concat(args25397.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__25406 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__25407 = this;
  if(cljs.core._lookup.call(null, this__25407.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__25408 = this;
  return cljs.core.count.call(null, this__25408.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__25409 = this;
  this__25409.transient_map = cljs.core.dissoc_BANG_.call(null, this__25409.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__25410 = this;
  this__25410.transient_map = cljs.core.assoc_BANG_.call(null, this__25410.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__25411 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__25411.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__25415 = this;
  var h__2085__auto____25416 = this__25415.__hash;
  if(!(h__2085__auto____25416 == null)) {
    return h__2085__auto____25416
  }else {
    var h__2085__auto____25417 = cljs.core.hash_iset.call(null, coll);
    this__25415.__hash = h__2085__auto____25417;
    return h__2085__auto____25417
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__25418 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__25419 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__25419.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__25445 = null;
  var G__25445__2 = function(this_sym25420, k) {
    var this__25422 = this;
    var this_sym25420__25423 = this;
    var coll__25424 = this_sym25420__25423;
    return coll__25424.cljs$core$ILookup$_lookup$arity$2(coll__25424, k)
  };
  var G__25445__3 = function(this_sym25421, k, not_found) {
    var this__25422 = this;
    var this_sym25421__25425 = this;
    var coll__25426 = this_sym25421__25425;
    return coll__25426.cljs$core$ILookup$_lookup$arity$3(coll__25426, k, not_found)
  };
  G__25445 = function(this_sym25421, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__25445__2.call(this, this_sym25421, k);
      case 3:
        return G__25445__3.call(this, this_sym25421, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__25445
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym25413, args25414) {
  var this__25427 = this;
  return this_sym25413.call.apply(this_sym25413, [this_sym25413].concat(args25414.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__25428 = this;
  return new cljs.core.PersistentTreeSet(this__25428.meta, cljs.core.assoc.call(null, this__25428.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__25429 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__25429.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__25430 = this;
  var this__25431 = this;
  return cljs.core.pr_str.call(null, this__25431)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__25432 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__25432.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__25433 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__25433.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__25434 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__25435 = this;
  return cljs.core._comparator.call(null, this__25435.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__25436 = this;
  return cljs.core.keys.call(null, this__25436.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__25437 = this;
  return new cljs.core.PersistentTreeSet(this__25437.meta, cljs.core.dissoc.call(null, this__25437.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__25438 = this;
  return cljs.core.count.call(null, this__25438.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__25439 = this;
  var and__3822__auto____25440 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____25440) {
    var and__3822__auto____25441 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____25441) {
      return cljs.core.every_QMARK_.call(null, function(p1__25395_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__25395_SHARP_)
      }, other)
    }else {
      return and__3822__auto____25441
    }
  }else {
    return and__3822__auto____25440
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__25442 = this;
  return new cljs.core.PersistentTreeSet(meta, this__25442.tree_map, this__25442.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__25443 = this;
  return this__25443.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__25444 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__25444.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__25450__delegate = function(keys) {
      var in__25448 = cljs.core.seq.call(null, keys);
      var out__25449 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__25448)) {
          var G__25451 = cljs.core.next.call(null, in__25448);
          var G__25452 = cljs.core.conj_BANG_.call(null, out__25449, cljs.core.first.call(null, in__25448));
          in__25448 = G__25451;
          out__25449 = G__25452;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__25449)
        }
        break
      }
    };
    var G__25450 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__25450__delegate.call(this, keys)
    };
    G__25450.cljs$lang$maxFixedArity = 0;
    G__25450.cljs$lang$applyTo = function(arglist__25453) {
      var keys = cljs.core.seq(arglist__25453);
      return G__25450__delegate(keys)
    };
    G__25450.cljs$lang$arity$variadic = G__25450__delegate;
    return G__25450
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__25454) {
    var keys = cljs.core.seq(arglist__25454);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__25456) {
    var comparator = cljs.core.first(arglist__25456);
    var keys = cljs.core.rest(arglist__25456);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__25462 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____25463 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____25463)) {
        var e__25464 = temp__3971__auto____25463;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__25464))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__25462, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__25455_SHARP_) {
      var temp__3971__auto____25465 = cljs.core.find.call(null, smap, p1__25455_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____25465)) {
        var e__25466 = temp__3971__auto____25465;
        return cljs.core.second.call(null, e__25466)
      }else {
        return p1__25455_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__25496 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__25489, seen) {
        while(true) {
          var vec__25490__25491 = p__25489;
          var f__25492 = cljs.core.nth.call(null, vec__25490__25491, 0, null);
          var xs__25493 = vec__25490__25491;
          var temp__3974__auto____25494 = cljs.core.seq.call(null, xs__25493);
          if(temp__3974__auto____25494) {
            var s__25495 = temp__3974__auto____25494;
            if(cljs.core.contains_QMARK_.call(null, seen, f__25492)) {
              var G__25497 = cljs.core.rest.call(null, s__25495);
              var G__25498 = seen;
              p__25489 = G__25497;
              seen = G__25498;
              continue
            }else {
              return cljs.core.cons.call(null, f__25492, step.call(null, cljs.core.rest.call(null, s__25495), cljs.core.conj.call(null, seen, f__25492)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__25496.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__25501 = cljs.core.PersistentVector.EMPTY;
  var s__25502 = s;
  while(true) {
    if(cljs.core.next.call(null, s__25502)) {
      var G__25503 = cljs.core.conj.call(null, ret__25501, cljs.core.first.call(null, s__25502));
      var G__25504 = cljs.core.next.call(null, s__25502);
      ret__25501 = G__25503;
      s__25502 = G__25504;
      continue
    }else {
      return cljs.core.seq.call(null, ret__25501)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____25507 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____25507) {
        return or__3824__auto____25507
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__25508 = x.lastIndexOf("/");
      if(i__25508 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__25508 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____25511 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____25511) {
      return or__3824__auto____25511
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__25512 = x.lastIndexOf("/");
    if(i__25512 > -1) {
      return cljs.core.subs.call(null, x, 2, i__25512)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__25519 = cljs.core.ObjMap.EMPTY;
  var ks__25520 = cljs.core.seq.call(null, keys);
  var vs__25521 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____25522 = ks__25520;
      if(and__3822__auto____25522) {
        return vs__25521
      }else {
        return and__3822__auto____25522
      }
    }()) {
      var G__25523 = cljs.core.assoc.call(null, map__25519, cljs.core.first.call(null, ks__25520), cljs.core.first.call(null, vs__25521));
      var G__25524 = cljs.core.next.call(null, ks__25520);
      var G__25525 = cljs.core.next.call(null, vs__25521);
      map__25519 = G__25523;
      ks__25520 = G__25524;
      vs__25521 = G__25525;
      continue
    }else {
      return map__25519
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__25528__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__25513_SHARP_, p2__25514_SHARP_) {
        return max_key.call(null, k, p1__25513_SHARP_, p2__25514_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__25528 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__25528__delegate.call(this, k, x, y, more)
    };
    G__25528.cljs$lang$maxFixedArity = 3;
    G__25528.cljs$lang$applyTo = function(arglist__25529) {
      var k = cljs.core.first(arglist__25529);
      var x = cljs.core.first(cljs.core.next(arglist__25529));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25529)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25529)));
      return G__25528__delegate(k, x, y, more)
    };
    G__25528.cljs$lang$arity$variadic = G__25528__delegate;
    return G__25528
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__25530__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__25526_SHARP_, p2__25527_SHARP_) {
        return min_key.call(null, k, p1__25526_SHARP_, p2__25527_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__25530 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__25530__delegate.call(this, k, x, y, more)
    };
    G__25530.cljs$lang$maxFixedArity = 3;
    G__25530.cljs$lang$applyTo = function(arglist__25531) {
      var k = cljs.core.first(arglist__25531);
      var x = cljs.core.first(cljs.core.next(arglist__25531));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25531)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25531)));
      return G__25530__delegate(k, x, y, more)
    };
    G__25530.cljs$lang$arity$variadic = G__25530__delegate;
    return G__25530
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____25534 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____25534) {
        var s__25535 = temp__3974__auto____25534;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__25535), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__25535)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____25538 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____25538) {
      var s__25539 = temp__3974__auto____25538;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__25539)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__25539), take_while.call(null, pred, cljs.core.rest.call(null, s__25539)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__25541 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__25541.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__25553 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____25554 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____25554)) {
        var vec__25555__25556 = temp__3974__auto____25554;
        var e__25557 = cljs.core.nth.call(null, vec__25555__25556, 0, null);
        var s__25558 = vec__25555__25556;
        if(cljs.core.truth_(include__25553.call(null, e__25557))) {
          return s__25558
        }else {
          return cljs.core.next.call(null, s__25558)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__25553, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____25559 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____25559)) {
      var vec__25560__25561 = temp__3974__auto____25559;
      var e__25562 = cljs.core.nth.call(null, vec__25560__25561, 0, null);
      var s__25563 = vec__25560__25561;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__25562)) ? s__25563 : cljs.core.next.call(null, s__25563))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__25575 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____25576 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____25576)) {
        var vec__25577__25578 = temp__3974__auto____25576;
        var e__25579 = cljs.core.nth.call(null, vec__25577__25578, 0, null);
        var s__25580 = vec__25577__25578;
        if(cljs.core.truth_(include__25575.call(null, e__25579))) {
          return s__25580
        }else {
          return cljs.core.next.call(null, s__25580)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__25575, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____25581 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____25581)) {
      var vec__25582__25583 = temp__3974__auto____25581;
      var e__25584 = cljs.core.nth.call(null, vec__25582__25583, 0, null);
      var s__25585 = vec__25582__25583;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__25584)) ? s__25585 : cljs.core.next.call(null, s__25585))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__25586 = this;
  var h__2085__auto____25587 = this__25586.__hash;
  if(!(h__2085__auto____25587 == null)) {
    return h__2085__auto____25587
  }else {
    var h__2085__auto____25588 = cljs.core.hash_coll.call(null, rng);
    this__25586.__hash = h__2085__auto____25588;
    return h__2085__auto____25588
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__25589 = this;
  if(this__25589.step > 0) {
    if(this__25589.start + this__25589.step < this__25589.end) {
      return new cljs.core.Range(this__25589.meta, this__25589.start + this__25589.step, this__25589.end, this__25589.step, null)
    }else {
      return null
    }
  }else {
    if(this__25589.start + this__25589.step > this__25589.end) {
      return new cljs.core.Range(this__25589.meta, this__25589.start + this__25589.step, this__25589.end, this__25589.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__25590 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__25591 = this;
  var this__25592 = this;
  return cljs.core.pr_str.call(null, this__25592)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__25593 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__25594 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__25595 = this;
  if(this__25595.step > 0) {
    if(this__25595.start < this__25595.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__25595.start > this__25595.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__25596 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__25596.end - this__25596.start) / this__25596.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__25597 = this;
  return this__25597.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__25598 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__25598.meta, this__25598.start + this__25598.step, this__25598.end, this__25598.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__25599 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__25600 = this;
  return new cljs.core.Range(meta, this__25600.start, this__25600.end, this__25600.step, this__25600.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__25601 = this;
  return this__25601.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__25602 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__25602.start + n * this__25602.step
  }else {
    if(function() {
      var and__3822__auto____25603 = this__25602.start > this__25602.end;
      if(and__3822__auto____25603) {
        return this__25602.step === 0
      }else {
        return and__3822__auto____25603
      }
    }()) {
      return this__25602.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__25604 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__25604.start + n * this__25604.step
  }else {
    if(function() {
      var and__3822__auto____25605 = this__25604.start > this__25604.end;
      if(and__3822__auto____25605) {
        return this__25604.step === 0
      }else {
        return and__3822__auto____25605
      }
    }()) {
      return this__25604.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__25606 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__25606.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____25609 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____25609) {
      var s__25610 = temp__3974__auto____25609;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__25610), take_nth.call(null, n, cljs.core.drop.call(null, n, s__25610)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____25617 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____25617) {
      var s__25618 = temp__3974__auto____25617;
      var fst__25619 = cljs.core.first.call(null, s__25618);
      var fv__25620 = f.call(null, fst__25619);
      var run__25621 = cljs.core.cons.call(null, fst__25619, cljs.core.take_while.call(null, function(p1__25611_SHARP_) {
        return cljs.core._EQ_.call(null, fv__25620, f.call(null, p1__25611_SHARP_))
      }, cljs.core.next.call(null, s__25618)));
      return cljs.core.cons.call(null, run__25621, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__25621), s__25618))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____25636 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____25636) {
        var s__25637 = temp__3971__auto____25636;
        return reductions.call(null, f, cljs.core.first.call(null, s__25637), cljs.core.rest.call(null, s__25637))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____25638 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____25638) {
        var s__25639 = temp__3974__auto____25638;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__25639)), cljs.core.rest.call(null, s__25639))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__25642 = null;
      var G__25642__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__25642__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__25642__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__25642__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__25642__4 = function() {
        var G__25643__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__25643 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__25643__delegate.call(this, x, y, z, args)
        };
        G__25643.cljs$lang$maxFixedArity = 3;
        G__25643.cljs$lang$applyTo = function(arglist__25644) {
          var x = cljs.core.first(arglist__25644);
          var y = cljs.core.first(cljs.core.next(arglist__25644));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25644)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25644)));
          return G__25643__delegate(x, y, z, args)
        };
        G__25643.cljs$lang$arity$variadic = G__25643__delegate;
        return G__25643
      }();
      G__25642 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__25642__0.call(this);
          case 1:
            return G__25642__1.call(this, x);
          case 2:
            return G__25642__2.call(this, x, y);
          case 3:
            return G__25642__3.call(this, x, y, z);
          default:
            return G__25642__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__25642.cljs$lang$maxFixedArity = 3;
      G__25642.cljs$lang$applyTo = G__25642__4.cljs$lang$applyTo;
      return G__25642
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__25645 = null;
      var G__25645__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__25645__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__25645__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__25645__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__25645__4 = function() {
        var G__25646__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__25646 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__25646__delegate.call(this, x, y, z, args)
        };
        G__25646.cljs$lang$maxFixedArity = 3;
        G__25646.cljs$lang$applyTo = function(arglist__25647) {
          var x = cljs.core.first(arglist__25647);
          var y = cljs.core.first(cljs.core.next(arglist__25647));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25647)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25647)));
          return G__25646__delegate(x, y, z, args)
        };
        G__25646.cljs$lang$arity$variadic = G__25646__delegate;
        return G__25646
      }();
      G__25645 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__25645__0.call(this);
          case 1:
            return G__25645__1.call(this, x);
          case 2:
            return G__25645__2.call(this, x, y);
          case 3:
            return G__25645__3.call(this, x, y, z);
          default:
            return G__25645__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__25645.cljs$lang$maxFixedArity = 3;
      G__25645.cljs$lang$applyTo = G__25645__4.cljs$lang$applyTo;
      return G__25645
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__25648 = null;
      var G__25648__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__25648__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__25648__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__25648__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__25648__4 = function() {
        var G__25649__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__25649 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__25649__delegate.call(this, x, y, z, args)
        };
        G__25649.cljs$lang$maxFixedArity = 3;
        G__25649.cljs$lang$applyTo = function(arglist__25650) {
          var x = cljs.core.first(arglist__25650);
          var y = cljs.core.first(cljs.core.next(arglist__25650));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25650)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25650)));
          return G__25649__delegate(x, y, z, args)
        };
        G__25649.cljs$lang$arity$variadic = G__25649__delegate;
        return G__25649
      }();
      G__25648 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__25648__0.call(this);
          case 1:
            return G__25648__1.call(this, x);
          case 2:
            return G__25648__2.call(this, x, y);
          case 3:
            return G__25648__3.call(this, x, y, z);
          default:
            return G__25648__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__25648.cljs$lang$maxFixedArity = 3;
      G__25648.cljs$lang$applyTo = G__25648__4.cljs$lang$applyTo;
      return G__25648
    }()
  };
  var juxt__4 = function() {
    var G__25651__delegate = function(f, g, h, fs) {
      var fs__25641 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__25652 = null;
        var G__25652__0 = function() {
          return cljs.core.reduce.call(null, function(p1__25622_SHARP_, p2__25623_SHARP_) {
            return cljs.core.conj.call(null, p1__25622_SHARP_, p2__25623_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__25641)
        };
        var G__25652__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__25624_SHARP_, p2__25625_SHARP_) {
            return cljs.core.conj.call(null, p1__25624_SHARP_, p2__25625_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__25641)
        };
        var G__25652__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__25626_SHARP_, p2__25627_SHARP_) {
            return cljs.core.conj.call(null, p1__25626_SHARP_, p2__25627_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__25641)
        };
        var G__25652__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__25628_SHARP_, p2__25629_SHARP_) {
            return cljs.core.conj.call(null, p1__25628_SHARP_, p2__25629_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__25641)
        };
        var G__25652__4 = function() {
          var G__25653__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__25630_SHARP_, p2__25631_SHARP_) {
              return cljs.core.conj.call(null, p1__25630_SHARP_, cljs.core.apply.call(null, p2__25631_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__25641)
          };
          var G__25653 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__25653__delegate.call(this, x, y, z, args)
          };
          G__25653.cljs$lang$maxFixedArity = 3;
          G__25653.cljs$lang$applyTo = function(arglist__25654) {
            var x = cljs.core.first(arglist__25654);
            var y = cljs.core.first(cljs.core.next(arglist__25654));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25654)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25654)));
            return G__25653__delegate(x, y, z, args)
          };
          G__25653.cljs$lang$arity$variadic = G__25653__delegate;
          return G__25653
        }();
        G__25652 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__25652__0.call(this);
            case 1:
              return G__25652__1.call(this, x);
            case 2:
              return G__25652__2.call(this, x, y);
            case 3:
              return G__25652__3.call(this, x, y, z);
            default:
              return G__25652__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__25652.cljs$lang$maxFixedArity = 3;
        G__25652.cljs$lang$applyTo = G__25652__4.cljs$lang$applyTo;
        return G__25652
      }()
    };
    var G__25651 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__25651__delegate.call(this, f, g, h, fs)
    };
    G__25651.cljs$lang$maxFixedArity = 3;
    G__25651.cljs$lang$applyTo = function(arglist__25655) {
      var f = cljs.core.first(arglist__25655);
      var g = cljs.core.first(cljs.core.next(arglist__25655));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25655)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25655)));
      return G__25651__delegate(f, g, h, fs)
    };
    G__25651.cljs$lang$arity$variadic = G__25651__delegate;
    return G__25651
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__25658 = cljs.core.next.call(null, coll);
        coll = G__25658;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____25657 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____25657) {
          return n > 0
        }else {
          return and__3822__auto____25657
        }
      }())) {
        var G__25659 = n - 1;
        var G__25660 = cljs.core.next.call(null, coll);
        n = G__25659;
        coll = G__25660;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__25662 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__25662), s)) {
    if(cljs.core.count.call(null, matches__25662) === 1) {
      return cljs.core.first.call(null, matches__25662)
    }else {
      return cljs.core.vec.call(null, matches__25662)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__25664 = re.exec(s);
  if(matches__25664 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__25664) === 1) {
      return cljs.core.first.call(null, matches__25664)
    }else {
      return cljs.core.vec.call(null, matches__25664)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__25669 = cljs.core.re_find.call(null, re, s);
  var match_idx__25670 = s.search(re);
  var match_str__25671 = cljs.core.coll_QMARK_.call(null, match_data__25669) ? cljs.core.first.call(null, match_data__25669) : match_data__25669;
  var post_match__25672 = cljs.core.subs.call(null, s, match_idx__25670 + cljs.core.count.call(null, match_str__25671));
  if(cljs.core.truth_(match_data__25669)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__25669, re_seq.call(null, re, post_match__25672))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__25679__25680 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___25681 = cljs.core.nth.call(null, vec__25679__25680, 0, null);
  var flags__25682 = cljs.core.nth.call(null, vec__25679__25680, 1, null);
  var pattern__25683 = cljs.core.nth.call(null, vec__25679__25680, 2, null);
  return new RegExp(pattern__25683, flags__25682)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__25673_SHARP_) {
    return print_one.call(null, p1__25673_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____25693 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____25693)) {
            var and__3822__auto____25697 = function() {
              var G__25694__25695 = obj;
              if(G__25694__25695) {
                if(function() {
                  var or__3824__auto____25696 = G__25694__25695.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____25696) {
                    return or__3824__auto____25696
                  }else {
                    return G__25694__25695.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__25694__25695.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__25694__25695)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__25694__25695)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____25697)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____25697
            }
          }else {
            return and__3822__auto____25693
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____25698 = !(obj == null);
          if(and__3822__auto____25698) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____25698
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__25699__25700 = obj;
          if(G__25699__25700) {
            if(function() {
              var or__3824__auto____25701 = G__25699__25700.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____25701) {
                return or__3824__auto____25701
              }else {
                return G__25699__25700.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__25699__25700.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__25699__25700)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__25699__25700)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__25721 = new goog.string.StringBuffer;
  var G__25722__25723 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__25722__25723) {
    var string__25724 = cljs.core.first.call(null, G__25722__25723);
    var G__25722__25725 = G__25722__25723;
    while(true) {
      sb__25721.append(string__25724);
      var temp__3974__auto____25726 = cljs.core.next.call(null, G__25722__25725);
      if(temp__3974__auto____25726) {
        var G__25722__25727 = temp__3974__auto____25726;
        var G__25740 = cljs.core.first.call(null, G__25722__25727);
        var G__25741 = G__25722__25727;
        string__25724 = G__25740;
        G__25722__25725 = G__25741;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__25728__25729 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__25728__25729) {
    var obj__25730 = cljs.core.first.call(null, G__25728__25729);
    var G__25728__25731 = G__25728__25729;
    while(true) {
      sb__25721.append(" ");
      var G__25732__25733 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__25730, opts));
      if(G__25732__25733) {
        var string__25734 = cljs.core.first.call(null, G__25732__25733);
        var G__25732__25735 = G__25732__25733;
        while(true) {
          sb__25721.append(string__25734);
          var temp__3974__auto____25736 = cljs.core.next.call(null, G__25732__25735);
          if(temp__3974__auto____25736) {
            var G__25732__25737 = temp__3974__auto____25736;
            var G__25742 = cljs.core.first.call(null, G__25732__25737);
            var G__25743 = G__25732__25737;
            string__25734 = G__25742;
            G__25732__25735 = G__25743;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____25738 = cljs.core.next.call(null, G__25728__25731);
      if(temp__3974__auto____25738) {
        var G__25728__25739 = temp__3974__auto____25738;
        var G__25744 = cljs.core.first.call(null, G__25728__25739);
        var G__25745 = G__25728__25739;
        obj__25730 = G__25744;
        G__25728__25731 = G__25745;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__25721
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__25747 = cljs.core.pr_sb.call(null, objs, opts);
  sb__25747.append("\n");
  return[cljs.core.str(sb__25747)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__25766__25767 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__25766__25767) {
    var string__25768 = cljs.core.first.call(null, G__25766__25767);
    var G__25766__25769 = G__25766__25767;
    while(true) {
      cljs.core.string_print.call(null, string__25768);
      var temp__3974__auto____25770 = cljs.core.next.call(null, G__25766__25769);
      if(temp__3974__auto____25770) {
        var G__25766__25771 = temp__3974__auto____25770;
        var G__25784 = cljs.core.first.call(null, G__25766__25771);
        var G__25785 = G__25766__25771;
        string__25768 = G__25784;
        G__25766__25769 = G__25785;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__25772__25773 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__25772__25773) {
    var obj__25774 = cljs.core.first.call(null, G__25772__25773);
    var G__25772__25775 = G__25772__25773;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__25776__25777 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__25774, opts));
      if(G__25776__25777) {
        var string__25778 = cljs.core.first.call(null, G__25776__25777);
        var G__25776__25779 = G__25776__25777;
        while(true) {
          cljs.core.string_print.call(null, string__25778);
          var temp__3974__auto____25780 = cljs.core.next.call(null, G__25776__25779);
          if(temp__3974__auto____25780) {
            var G__25776__25781 = temp__3974__auto____25780;
            var G__25786 = cljs.core.first.call(null, G__25776__25781);
            var G__25787 = G__25776__25781;
            string__25778 = G__25786;
            G__25776__25779 = G__25787;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____25782 = cljs.core.next.call(null, G__25772__25775);
      if(temp__3974__auto____25782) {
        var G__25772__25783 = temp__3974__auto____25782;
        var G__25788 = cljs.core.first.call(null, G__25772__25783);
        var G__25789 = G__25772__25783;
        obj__25774 = G__25788;
        G__25772__25775 = G__25789;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__25790) {
    var objs = cljs.core.seq(arglist__25790);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__25791) {
    var objs = cljs.core.seq(arglist__25791);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__25792) {
    var objs = cljs.core.seq(arglist__25792);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__25793) {
    var objs = cljs.core.seq(arglist__25793);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__25794) {
    var objs = cljs.core.seq(arglist__25794);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__25795) {
    var objs = cljs.core.seq(arglist__25795);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__25796) {
    var objs = cljs.core.seq(arglist__25796);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__25797) {
    var objs = cljs.core.seq(arglist__25797);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__25798) {
    var fmt = cljs.core.first(arglist__25798);
    var args = cljs.core.rest(arglist__25798);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__25799 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__25799, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__25800 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__25800, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__25801 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__25801, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____25802 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____25802)) {
        var nspc__25803 = temp__3974__auto____25802;
        return[cljs.core.str(nspc__25803), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____25804 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____25804)) {
          var nspc__25805 = temp__3974__auto____25804;
          return[cljs.core.str(nspc__25805), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__25806 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__25806, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__25808 = function(n, len) {
    var ns__25807 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__25807) < len) {
        var G__25810 = [cljs.core.str("0"), cljs.core.str(ns__25807)].join("");
        ns__25807 = G__25810;
        continue
      }else {
        return ns__25807
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__25808.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__25808.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__25808.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__25808.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__25808.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__25808.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__25809 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__25809, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__25811 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__25812 = this;
  var G__25813__25814 = cljs.core.seq.call(null, this__25812.watches);
  if(G__25813__25814) {
    var G__25816__25818 = cljs.core.first.call(null, G__25813__25814);
    var vec__25817__25819 = G__25816__25818;
    var key__25820 = cljs.core.nth.call(null, vec__25817__25819, 0, null);
    var f__25821 = cljs.core.nth.call(null, vec__25817__25819, 1, null);
    var G__25813__25822 = G__25813__25814;
    var G__25816__25823 = G__25816__25818;
    var G__25813__25824 = G__25813__25822;
    while(true) {
      var vec__25825__25826 = G__25816__25823;
      var key__25827 = cljs.core.nth.call(null, vec__25825__25826, 0, null);
      var f__25828 = cljs.core.nth.call(null, vec__25825__25826, 1, null);
      var G__25813__25829 = G__25813__25824;
      f__25828.call(null, key__25827, this$, oldval, newval);
      var temp__3974__auto____25830 = cljs.core.next.call(null, G__25813__25829);
      if(temp__3974__auto____25830) {
        var G__25813__25831 = temp__3974__auto____25830;
        var G__25838 = cljs.core.first.call(null, G__25813__25831);
        var G__25839 = G__25813__25831;
        G__25816__25823 = G__25838;
        G__25813__25824 = G__25839;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__25832 = this;
  return this$.watches = cljs.core.assoc.call(null, this__25832.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__25833 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__25833.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__25834 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__25834.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__25835 = this;
  return this__25835.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__25836 = this;
  return this__25836.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__25837 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__25851__delegate = function(x, p__25840) {
      var map__25846__25847 = p__25840;
      var map__25846__25848 = cljs.core.seq_QMARK_.call(null, map__25846__25847) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25846__25847) : map__25846__25847;
      var validator__25849 = cljs.core._lookup.call(null, map__25846__25848, "\ufdd0'validator", null);
      var meta__25850 = cljs.core._lookup.call(null, map__25846__25848, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__25850, validator__25849, null)
    };
    var G__25851 = function(x, var_args) {
      var p__25840 = null;
      if(goog.isDef(var_args)) {
        p__25840 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__25851__delegate.call(this, x, p__25840)
    };
    G__25851.cljs$lang$maxFixedArity = 1;
    G__25851.cljs$lang$applyTo = function(arglist__25852) {
      var x = cljs.core.first(arglist__25852);
      var p__25840 = cljs.core.rest(arglist__25852);
      return G__25851__delegate(x, p__25840)
    };
    G__25851.cljs$lang$arity$variadic = G__25851__delegate;
    return G__25851
  }();
  atom = function(x, var_args) {
    var p__25840 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____25856 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____25856)) {
    var validate__25857 = temp__3974__auto____25856;
    if(cljs.core.truth_(validate__25857.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440))))].join(""));
    }
  }else {
  }
  var old_value__25858 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__25858, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__25859__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__25859 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__25859__delegate.call(this, a, f, x, y, z, more)
    };
    G__25859.cljs$lang$maxFixedArity = 5;
    G__25859.cljs$lang$applyTo = function(arglist__25860) {
      var a = cljs.core.first(arglist__25860);
      var f = cljs.core.first(cljs.core.next(arglist__25860));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25860)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__25860))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__25860)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__25860)))));
      return G__25859__delegate(a, f, x, y, z, more)
    };
    G__25859.cljs$lang$arity$variadic = G__25859__delegate;
    return G__25859
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__25861) {
    var iref = cljs.core.first(arglist__25861);
    var f = cljs.core.first(cljs.core.next(arglist__25861));
    var args = cljs.core.rest(cljs.core.next(arglist__25861));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__25862 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__25862.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__25863 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__25863.state, function(p__25864) {
    var map__25865__25866 = p__25864;
    var map__25865__25867 = cljs.core.seq_QMARK_.call(null, map__25865__25866) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25865__25866) : map__25865__25866;
    var curr_state__25868 = map__25865__25867;
    var done__25869 = cljs.core._lookup.call(null, map__25865__25867, "\ufdd0'done", null);
    if(cljs.core.truth_(done__25869)) {
      return curr_state__25868
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__25863.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__25890__25891 = options;
    var map__25890__25892 = cljs.core.seq_QMARK_.call(null, map__25890__25891) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25890__25891) : map__25890__25891;
    var keywordize_keys__25893 = cljs.core._lookup.call(null, map__25890__25892, "\ufdd0'keywordize-keys", null);
    var keyfn__25894 = cljs.core.truth_(keywordize_keys__25893) ? cljs.core.keyword : cljs.core.str;
    var f__25909 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2355__auto____25908 = function iter__25902(s__25903) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__25903__25906 = s__25903;
                    while(true) {
                      if(cljs.core.seq.call(null, s__25903__25906)) {
                        var k__25907 = cljs.core.first.call(null, s__25903__25906);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__25894.call(null, k__25907), thisfn.call(null, x[k__25907])], true), iter__25902.call(null, cljs.core.rest.call(null, s__25903__25906)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2355__auto____25908.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__25909.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__25910) {
    var x = cljs.core.first(arglist__25910);
    var options = cljs.core.rest(arglist__25910);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__25915 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__25919__delegate = function(args) {
      var temp__3971__auto____25916 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__25915), args, null);
      if(cljs.core.truth_(temp__3971__auto____25916)) {
        var v__25917 = temp__3971__auto____25916;
        return v__25917
      }else {
        var ret__25918 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__25915, cljs.core.assoc, args, ret__25918);
        return ret__25918
      }
    };
    var G__25919 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__25919__delegate.call(this, args)
    };
    G__25919.cljs$lang$maxFixedArity = 0;
    G__25919.cljs$lang$applyTo = function(arglist__25920) {
      var args = cljs.core.seq(arglist__25920);
      return G__25919__delegate(args)
    };
    G__25919.cljs$lang$arity$variadic = G__25919__delegate;
    return G__25919
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__25922 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__25922)) {
        var G__25923 = ret__25922;
        f = G__25923;
        continue
      }else {
        return ret__25922
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__25924__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__25924 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__25924__delegate.call(this, f, args)
    };
    G__25924.cljs$lang$maxFixedArity = 1;
    G__25924.cljs$lang$applyTo = function(arglist__25925) {
      var f = cljs.core.first(arglist__25925);
      var args = cljs.core.rest(arglist__25925);
      return G__25924__delegate(f, args)
    };
    G__25924.cljs$lang$arity$variadic = G__25924__delegate;
    return G__25924
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__25927 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__25927, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__25927, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____25936 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____25936) {
      return or__3824__auto____25936
    }else {
      var or__3824__auto____25937 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____25937) {
        return or__3824__auto____25937
      }else {
        var and__3822__auto____25938 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____25938) {
          var and__3822__auto____25939 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____25939) {
            var and__3822__auto____25940 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____25940) {
              var ret__25941 = true;
              var i__25942 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____25943 = cljs.core.not.call(null, ret__25941);
                  if(or__3824__auto____25943) {
                    return or__3824__auto____25943
                  }else {
                    return i__25942 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__25941
                }else {
                  var G__25944 = isa_QMARK_.call(null, h, child.call(null, i__25942), parent.call(null, i__25942));
                  var G__25945 = i__25942 + 1;
                  ret__25941 = G__25944;
                  i__25942 = G__25945;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____25940
            }
          }else {
            return and__3822__auto____25939
          }
        }else {
          return and__3822__auto____25938
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728))))].join(""));
    }
    var tp__25954 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__25955 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__25956 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__25957 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____25958 = cljs.core.contains_QMARK_.call(null, tp__25954.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__25956.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__25956.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__25954, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__25957.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__25955, parent, ta__25956), "\ufdd0'descendants":tf__25957.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__25956, tag, td__25955)})
    }();
    if(cljs.core.truth_(or__3824__auto____25958)) {
      return or__3824__auto____25958
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__25963 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__25964 = cljs.core.truth_(parentMap__25963.call(null, tag)) ? cljs.core.disj.call(null, parentMap__25963.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__25965 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__25964)) ? cljs.core.assoc.call(null, parentMap__25963, tag, childsParents__25964) : cljs.core.dissoc.call(null, parentMap__25963, tag);
    var deriv_seq__25966 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__25946_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__25946_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__25946_SHARP_), cljs.core.second.call(null, p1__25946_SHARP_)))
    }, cljs.core.seq.call(null, newParents__25965)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__25963.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__25947_SHARP_, p2__25948_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__25947_SHARP_, p2__25948_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__25966))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__25974 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____25976 = cljs.core.truth_(function() {
    var and__3822__auto____25975 = xprefs__25974;
    if(cljs.core.truth_(and__3822__auto____25975)) {
      return xprefs__25974.call(null, y)
    }else {
      return and__3822__auto____25975
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____25976)) {
    return or__3824__auto____25976
  }else {
    var or__3824__auto____25978 = function() {
      var ps__25977 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__25977) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__25977), prefer_table))) {
          }else {
          }
          var G__25981 = cljs.core.rest.call(null, ps__25977);
          ps__25977 = G__25981;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____25978)) {
      return or__3824__auto____25978
    }else {
      var or__3824__auto____25980 = function() {
        var ps__25979 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__25979) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__25979), y, prefer_table))) {
            }else {
            }
            var G__25982 = cljs.core.rest.call(null, ps__25979);
            ps__25979 = G__25982;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____25980)) {
        return or__3824__auto____25980
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____25984 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____25984)) {
    return or__3824__auto____25984
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__26002 = cljs.core.reduce.call(null, function(be, p__25994) {
    var vec__25995__25996 = p__25994;
    var k__25997 = cljs.core.nth.call(null, vec__25995__25996, 0, null);
    var ___25998 = cljs.core.nth.call(null, vec__25995__25996, 1, null);
    var e__25999 = vec__25995__25996;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__25997)) {
      var be2__26001 = cljs.core.truth_(function() {
        var or__3824__auto____26000 = be == null;
        if(or__3824__auto____26000) {
          return or__3824__auto____26000
        }else {
          return cljs.core.dominates.call(null, k__25997, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__25999 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__26001), k__25997, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__25997), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__26001)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__26001
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__26002)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__26002));
      return cljs.core.second.call(null, best_entry__26002)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____26007 = mf;
    if(and__3822__auto____26007) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____26007
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2256__auto____26008 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____26009 = cljs.core._reset[goog.typeOf(x__2256__auto____26008)];
      if(or__3824__auto____26009) {
        return or__3824__auto____26009
      }else {
        var or__3824__auto____26010 = cljs.core._reset["_"];
        if(or__3824__auto____26010) {
          return or__3824__auto____26010
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____26015 = mf;
    if(and__3822__auto____26015) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____26015
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2256__auto____26016 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____26017 = cljs.core._add_method[goog.typeOf(x__2256__auto____26016)];
      if(or__3824__auto____26017) {
        return or__3824__auto____26017
      }else {
        var or__3824__auto____26018 = cljs.core._add_method["_"];
        if(or__3824__auto____26018) {
          return or__3824__auto____26018
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____26023 = mf;
    if(and__3822__auto____26023) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____26023
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2256__auto____26024 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____26025 = cljs.core._remove_method[goog.typeOf(x__2256__auto____26024)];
      if(or__3824__auto____26025) {
        return or__3824__auto____26025
      }else {
        var or__3824__auto____26026 = cljs.core._remove_method["_"];
        if(or__3824__auto____26026) {
          return or__3824__auto____26026
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____26031 = mf;
    if(and__3822__auto____26031) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____26031
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2256__auto____26032 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____26033 = cljs.core._prefer_method[goog.typeOf(x__2256__auto____26032)];
      if(or__3824__auto____26033) {
        return or__3824__auto____26033
      }else {
        var or__3824__auto____26034 = cljs.core._prefer_method["_"];
        if(or__3824__auto____26034) {
          return or__3824__auto____26034
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____26039 = mf;
    if(and__3822__auto____26039) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____26039
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2256__auto____26040 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____26041 = cljs.core._get_method[goog.typeOf(x__2256__auto____26040)];
      if(or__3824__auto____26041) {
        return or__3824__auto____26041
      }else {
        var or__3824__auto____26042 = cljs.core._get_method["_"];
        if(or__3824__auto____26042) {
          return or__3824__auto____26042
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____26047 = mf;
    if(and__3822__auto____26047) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____26047
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2256__auto____26048 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____26049 = cljs.core._methods[goog.typeOf(x__2256__auto____26048)];
      if(or__3824__auto____26049) {
        return or__3824__auto____26049
      }else {
        var or__3824__auto____26050 = cljs.core._methods["_"];
        if(or__3824__auto____26050) {
          return or__3824__auto____26050
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____26055 = mf;
    if(and__3822__auto____26055) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____26055
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2256__auto____26056 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____26057 = cljs.core._prefers[goog.typeOf(x__2256__auto____26056)];
      if(or__3824__auto____26057) {
        return or__3824__auto____26057
      }else {
        var or__3824__auto____26058 = cljs.core._prefers["_"];
        if(or__3824__auto____26058) {
          return or__3824__auto____26058
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____26063 = mf;
    if(and__3822__auto____26063) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____26063
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2256__auto____26064 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____26065 = cljs.core._dispatch[goog.typeOf(x__2256__auto____26064)];
      if(or__3824__auto____26065) {
        return or__3824__auto____26065
      }else {
        var or__3824__auto____26066 = cljs.core._dispatch["_"];
        if(or__3824__auto____26066) {
          return or__3824__auto____26066
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__26069 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__26070 = cljs.core._get_method.call(null, mf, dispatch_val__26069);
  if(cljs.core.truth_(target_fn__26070)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__26069)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__26070, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__26071 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__26072 = this;
  cljs.core.swap_BANG_.call(null, this__26072.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__26072.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__26072.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__26072.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__26073 = this;
  cljs.core.swap_BANG_.call(null, this__26073.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__26073.method_cache, this__26073.method_table, this__26073.cached_hierarchy, this__26073.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__26074 = this;
  cljs.core.swap_BANG_.call(null, this__26074.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__26074.method_cache, this__26074.method_table, this__26074.cached_hierarchy, this__26074.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__26075 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__26075.cached_hierarchy), cljs.core.deref.call(null, this__26075.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__26075.method_cache, this__26075.method_table, this__26075.cached_hierarchy, this__26075.hierarchy)
  }
  var temp__3971__auto____26076 = cljs.core.deref.call(null, this__26075.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____26076)) {
    var target_fn__26077 = temp__3971__auto____26076;
    return target_fn__26077
  }else {
    var temp__3971__auto____26078 = cljs.core.find_and_cache_best_method.call(null, this__26075.name, dispatch_val, this__26075.hierarchy, this__26075.method_table, this__26075.prefer_table, this__26075.method_cache, this__26075.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____26078)) {
      var target_fn__26079 = temp__3971__auto____26078;
      return target_fn__26079
    }else {
      return cljs.core.deref.call(null, this__26075.method_table).call(null, this__26075.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__26080 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__26080.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__26080.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__26080.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__26080.method_cache, this__26080.method_table, this__26080.cached_hierarchy, this__26080.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__26081 = this;
  return cljs.core.deref.call(null, this__26081.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__26082 = this;
  return cljs.core.deref.call(null, this__26082.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__26083 = this;
  return cljs.core.do_dispatch.call(null, mf, this__26083.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__26085__delegate = function(_, args) {
    var self__26084 = this;
    return cljs.core._dispatch.call(null, self__26084, args)
  };
  var G__26085 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__26085__delegate.call(this, _, args)
  };
  G__26085.cljs$lang$maxFixedArity = 1;
  G__26085.cljs$lang$applyTo = function(arglist__26086) {
    var _ = cljs.core.first(arglist__26086);
    var args = cljs.core.rest(arglist__26086);
    return G__26085__delegate(_, args)
  };
  G__26085.cljs$lang$arity$variadic = G__26085__delegate;
  return G__26085
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__26087 = this;
  return cljs.core._dispatch.call(null, self__26087, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__26088 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_26090, _) {
  var this__26089 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__26089.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__26091 = this;
  var and__3822__auto____26092 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____26092) {
    return this__26091.uuid === other.uuid
  }else {
    return and__3822__auto____26092
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__26093 = this;
  var this__26094 = this;
  return cljs.core.pr_str.call(null, this__26094)
};
cljs.core.UUID;
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__26101 = s;
      var limit__26102 = limit;
      var parts__26103 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__26102, 1)) {
          return cljs.core.conj.call(null, parts__26103, s__26101)
        }else {
          var temp__3971__auto____26104 = cljs.core.re_find.call(null, re, s__26101);
          if(cljs.core.truth_(temp__3971__auto____26104)) {
            var m__26105 = temp__3971__auto____26104;
            var index__26106 = s__26101.indexOf(m__26105);
            var G__26107 = s__26101.substring(index__26106 + cljs.core.count.call(null, m__26105));
            var G__26108 = limit__26102 - 1;
            var G__26109 = cljs.core.conj.call(null, parts__26103, s__26101.substring(0, index__26106));
            s__26101 = G__26107;
            limit__26102 = G__26108;
            parts__26103 = G__26109;
            continue
          }else {
            return cljs.core.conj.call(null, parts__26103, s__26101)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__26113 = s.length;
  while(true) {
    if(index__26113 === 0) {
      return""
    }else {
      var ch__26114 = cljs.core._lookup.call(null, s, index__26113 - 1, null);
      if(function() {
        var or__3824__auto____26115 = cljs.core._EQ_.call(null, ch__26114, "\n");
        if(or__3824__auto____26115) {
          return or__3824__auto____26115
        }else {
          return cljs.core._EQ_.call(null, ch__26114, "\r")
        }
      }()) {
        var G__26116 = index__26113 - 1;
        index__26113 = G__26116;
        continue
      }else {
        return s.substring(0, index__26113)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__26120 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____26121 = cljs.core.not.call(null, s__26120);
    if(or__3824__auto____26121) {
      return or__3824__auto____26121
    }else {
      var or__3824__auto____26122 = cljs.core._EQ_.call(null, "", s__26120);
      if(or__3824__auto____26122) {
        return or__3824__auto____26122
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__26120)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__26129 = new goog.string.StringBuffer;
  var length__26130 = s.length;
  var index__26131 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__26130, index__26131)) {
      return buffer__26129.toString()
    }else {
      var ch__26132 = s.charAt(index__26131);
      var temp__3971__auto____26133 = cljs.core._lookup.call(null, cmap, ch__26132, null);
      if(cljs.core.truth_(temp__3971__auto____26133)) {
        var replacement__26134 = temp__3971__auto____26133;
        buffer__26129.append([cljs.core.str(replacement__26134)].join(""))
      }else {
        buffer__26129.append(ch__26132)
      }
      var G__26135 = index__26131 + 1;
      index__26131 = G__26135;
      continue
    }
    break
  }
};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isVersion("9"), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isVersion("9") || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            element[key] = val
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc;
  if(goog.userAgent.WEBKIT) {
    doc = frame.document || frame.contentWindow.document
  }else {
    doc = frame.contentDocument || frame.contentWindow.document
  }
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    for(var i = 0, child;child = root.childNodes[i];i++) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.userAgent.IE) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
var array_p, explode_p, ignore_p, key_prefix, map_p, namespace_tag, number_p, p, re_svg_tags, re_tag, re_whitespace, string_p, unify_p, whitespace_node_p, xmlns, __hasProp = {}.hasOwnProperty;
goog.require("goog.string");
goog.provide("singult.coffee");
goog.provide("singult.coffee.Unify");
goog.provide("singult.coffee.Ignore");
p = function(x) {
  console.log(x);
  return x
};
re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
re_svg_tags = /^(svg|g|rect|circle|clipPath|path|line|polygon|polyline|text|textPath)$/;
re_whitespace = /^\s+$/;
key_prefix = "\x00";
xmlns = {xhtml:"http://www.w3.org/1999/xhtml", svg:"http://www.w3.org/2000/svg"};
namespace_tag = function(tag_str) {
  var nsp, tag, _ref;
  _ref = tag_str.split(":"), nsp = _ref[0], tag = _ref[1];
  if(tag != null) {
    return[xmlns[nsp] || nsp, tag]
  }else {
    if(tag_str.match(re_svg_tags)) {
      return[xmlns.svg, tag_str]
    }else {
      return[xmlns.xhtml, tag_str]
    }
  }
};
explode_p = function(v) {
  return v[0] === ":*:"
};
unify_p = function(x) {
  return x != null && x instanceof singult.coffee.Unify
};
ignore_p = function(x) {
  return x != null && x instanceof singult.coffee.Ignore
};
array_p = function(x) {
  return x != null && x.forEach != null
};
map_p = function(x) {
  return x != null && !array_p(x) && !unify_p(x) && !ignore_p(x) && x instanceof Object
};
string_p = function(x) {
  return x != null && x.substring != null
};
number_p = function(x) {
  return x != null && x.toFixed != null
};
whitespace_node_p = function($n) {
  return $n.nodeType === 8 || $n.nodeType === 3 && $n.textContent.match(re_whitespace)
};
singult.coffee.style = function($e, m) {
  var k, v, _results;
  _results = [];
  for(k in m) {
    if(!__hasProp.call(m, k)) {
      continue
    }
    v = m[k];
    _results.push($e.style[goog.string.toCamelCase(k)] = v)
  }
  return _results
};
singult.coffee.properties = function($e, m) {
  var prop, v, _results;
  _results = [];
  for(prop in m) {
    if(!__hasProp.call(m, prop)) {
      continue
    }
    v = m[prop];
    _results.push($e[prop] = v)
  }
  return _results
};
singult.coffee.attr = function($e, attr_map) {
  var k, v, _results;
  if(attr_map["style"] != null) {
    singult.coffee.style($e, attr_map["style"]);
    delete attr_map["style"]
  }
  if(attr_map["properties"] != null) {
    singult.coffee.properties($e, attr_map["properties"]);
    delete attr_map["properties"]
  }
  if(array_p(attr_map["class"])) {
    $e.setAttribute("class", attr_map["class"].join(" "));
    delete attr_map["class"]
  }
  _results = [];
  for(k in attr_map) {
    if(!__hasProp.call(attr_map, k)) {
      continue
    }
    v = attr_map[k];
    if(v != null) {
      _results.push($e.setAttribute(k, v))
    }else {
      _results.push($e.removeAttribute(k))
    }
  }
  return _results
};
singult.coffee.node_data = function($e, d) {
  if(d != null) {
    return $e["__singult_data__"] = d
  }else {
    return $e["__singult_data__"]
  }
};
singult.coffee.canonicalize = function(x) {
  if(number_p(x)) {
    return x.toString()
  }else {
    if(array_p(x)) {
      return singult.coffee.canonicalize_hiccup(x)
    }else {
      return x
    }
  }
};
singult.coffee.canonicalize_hiccup = function(v) {
  var abbreviated_classes, attr, canonical, canonical_children, children, cls_str, id, nsp, tag, tag_str, _, _ref, _ref1, _ref2;
  tag = v[0];
  _ref = map_p(v[1]) ? [v[1], v.slice(2)] : [{}, v.slice(1)], attr = _ref[0], children = _ref[1];
  _ref1 = tag.match(re_tag), _ = _ref1[0], tag_str = _ref1[1], id = _ref1[2], cls_str = _ref1[3];
  if(id != null) {
    attr["id"] = id
  }
  if(cls_str != null) {
    abbreviated_classes = cls_str.split(".");
    if(array_p(attr["class"])) {
      attr["class"] = attr["class"].concat(abbreviated_classes)
    }else {
      if(string_p(attr["class"])) {
        attr["class"] = abbreviated_classes.concat([attr["class"]])
      }else {
        if(!(attr["class"] != null)) {
          attr["class"] = abbreviated_classes
        }
      }
    }
  }
  _ref2 = namespace_tag(tag_str), nsp = _ref2[0], tag = _ref2[1];
  canonical_children = [];
  children.forEach(function(v) {
    if(v != null) {
      if(explode_p(v)) {
        return v.slice(1).forEach(function(v) {
          return canonical_children.push(singult.coffee.canonicalize(v))
        })
      }else {
        return canonical_children.push(singult.coffee.canonicalize(v))
      }
    }
  });
  canonical = {nsp:nsp, tag:tag, attr:attr, children:canonical_children};
  return canonical
};
singult.coffee.render = function(m) {
  var $e, c;
  if(unify_p(m)) {
    throw new Error("Unify must be the first and only child of its parent.");
  }else {
    if(ignore_p(m)) {
      return null
    }else {
      if(string_p(m)) {
        return document.createTextNode(m)
      }else {
        $e = document.createElementNS(m.nsp, m.tag);
        singult.coffee.attr($e, m.attr);
        if(unify_p(c = m.children[0])) {
          if(c.enter != null) {
            c.data.forEach(function(d) {
              var $el;
              $el = c.enter(d);
              singult.coffee.node_data($el, d);
              return $e.appendChild($el)
            })
          }else {
            c.data.forEach(function(d) {
              var $el;
              $el = singult.coffee.render(singult.coffee.canonicalize(c.mapping(d)));
              singult.coffee.node_data($el, d);
              return $e.appendChild($el)
            })
          }
        }else {
          m.children.forEach(function(c) {
            var $c;
            $c = singult.coffee.render(c);
            if($c != null) {
              return $e.appendChild($c)
            }
          })
        }
        return $e
      }
    }
  }
};
singult.coffee.Unify = function(data, mapping, key_fn, enter, update, exit, force_update_p) {
  this.data = data;
  this.mapping = mapping;
  this.key_fn = key_fn;
  this.enter = enter;
  this.update = update;
  this.exit = exit;
  this.force_update_p = force_update_p;
  return this
};
singult.coffee.Ignore = function() {
  return this
};
singult.coffee.unify_ = function($container, u) {
  var $n, $nodes, enter, exit, i, key, key_fn, nodes_by_key, update, _;
  enter = u.enter || function(d) {
    var $el;
    $el = singult.coffee.render(singult.coffee.canonicalize(u.mapping(d)));
    $container.appendChild($el);
    return $el
  };
  update = u.update || function($n, d) {
    return singult.coffee.merge($n, singult.coffee.canonicalize(u.mapping(d)))
  };
  exit = u.exit || function($n) {
    return $container.removeChild($n)
  };
  key_fn = u.key_fn || function(d, idx) {
    return idx
  };
  $nodes = $container.childNodes;
  nodes_by_key = {};
  i = 0;
  while(i < $nodes.length) {
    key = key_prefix + key_fn(singult.coffee.node_data($nodes[i]), i);
    nodes_by_key[key] = $nodes[i];
    i += 1
  }
  u.data.forEach(function(d, i) {
    var $el, $n, identical_data_p, old_data;
    key = key_prefix + key_fn(d, i);
    if($n = nodes_by_key[key]) {
      if(u.force_update_p) {
        $el = update($n, d);
        singult.coffee.node_data($el, d)
      }else {
        old_data = singult.coffee.node_data($n);
        identical_data_p = old_data.cljs$core$IEquiv$_equiv$arity$2 != null ? old_data.cljs$core$IEquiv$_equiv$arity$2(old_data, d) : old_data === d;
        if(!identical_data_p) {
          $el = update($n, d);
          singult.coffee.node_data($el, d)
        }
      }
      return delete nodes_by_key[key]
    }else {
      $el = enter(d);
      return singult.coffee.node_data($el, d)
    }
  });
  for(_ in nodes_by_key) {
    $n = nodes_by_key[_];
    exit($n)
  }
  return null
};
singult.coffee.merge = function($e, m) {
  var $c, c, i, _i, _j, _ref, _ref1;
  if(unify_p(m)) {
    singult.coffee.unify_($e, m)
  }else {
    if(ignore_p(m)) {
    }else {
      if($e.nodeName.toLowerCase() !== m.tag.toLowerCase()) {
        p($e);
        p(m);
        throw new Error("Cannot merge $e into node of different type");
      }
      singult.coffee.attr($e, m.attr);
      if($e.hasChildNodes()) {
        for(i = _i = _ref = $e.childNodes.length - 1;_ref <= 0 ? _i <= 0 : _i >= 0;i = _ref <= 0 ? ++_i : --_i) {
          $c = $e.childNodes[i];
          if(whitespace_node_p($c)) {
            $e.removeChild($c)
          }
        }
      }
      if(unify_p(m.children[0])) {
        singult.coffee.merge($e, m.children[0])
      }else {
        if($e.childNodes.length > m.children.length) {
          for(i = _j = _ref1 = $e.childNodes.length - 1;_ref1 <= 0 ? _j <= 0 : _j >= 0;i = _ref1 <= 0 ? ++_j : --_j) {
            $e.removeChild($e.childNodes[i])
          }
        }
        i = 0;
        while(i < m.children.length) {
          c = m.children[i] || "";
          $c = $e.childNodes[i];
          if(string_p(c)) {
            if($c != null) {
              $c.textContent = c
            }else {
              $e.appendChild(document.createTextNode(c))
            }
          }else {
            if(ignore_p(c)) {
            }else {
              if(map_p(c)) {
                if($c != null) {
                  singult.coffee.merge($c, c)
                }else {
                  $e.appendChild(singult.coffee.render(c))
                }
              }else {
                p($c);
                p(c);
                throw new Error("Cannot merge children");
              }
            }
          }
          i += 1
        }
      }
    }
  }
  return $e
};
goog.provide("singult.core");
goog.require("cljs.core");
goog.require("singult.coffee");
singult.core.Unify = function(data, mapping, key_fn, enter, update, exit, force_update_QMARK_, __meta, __extmap) {
  this.data = data;
  this.mapping = mapping;
  this.key_fn = key_fn;
  this.enter = enter;
  this.update = update;
  this.exit = exit;
  this.force_update_QMARK_ = force_update_QMARK_;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054858;
  if(arguments.length > 7) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
singult.core.Unify.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2211__auto__) {
  var this__26299 = this;
  var h__2085__auto____26300 = this__26299.__hash;
  if(!(h__2085__auto____26300 == null)) {
    return h__2085__auto____26300
  }else {
    var h__2085__auto____26301 = cljs.core.hash_imap.call(null, this__2211__auto__);
    this__26299.__hash = h__2085__auto____26301;
    return h__2085__auto____26301
  }
};
singult.core.Unify.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2216__auto__, k__2217__auto__) {
  var this__26302 = this;
  return this__2216__auto__.cljs$core$ILookup$_lookup$arity$3(this__2216__auto__, k__2217__auto__, null)
};
singult.core.Unify.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2218__auto__, k26297, else__2219__auto__) {
  var this__26303 = this;
  if(k26297 === "\ufdd0'data") {
    return this__26303.data
  }else {
    if(k26297 === "\ufdd0'mapping") {
      return this__26303.mapping
    }else {
      if(k26297 === "\ufdd0'key-fn") {
        return this__26303.key_fn
      }else {
        if(k26297 === "\ufdd0'enter") {
          return this__26303.enter
        }else {
          if(k26297 === "\ufdd0'update") {
            return this__26303.update
          }else {
            if(k26297 === "\ufdd0'exit") {
              return this__26303.exit
            }else {
              if(k26297 === "\ufdd0'force-update?") {
                return this__26303.force_update_QMARK_
              }else {
                if("\ufdd0'else") {
                  return cljs.core._lookup.call(null, this__26303.__extmap, k26297, else__2219__auto__)
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
singult.core.Unify.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2223__auto__, k__2224__auto__, G__26296) {
  var this__26304 = this;
  var pred__26305__26308 = cljs.core.identical_QMARK_;
  var expr__26306__26309 = k__2224__auto__;
  if(pred__26305__26308.call(null, "\ufdd0'data", expr__26306__26309)) {
    return new singult.core.Unify(G__26296, this__26304.mapping, this__26304.key_fn, this__26304.enter, this__26304.update, this__26304.exit, this__26304.force_update_QMARK_, this__26304.__meta, this__26304.__extmap, null)
  }else {
    if(pred__26305__26308.call(null, "\ufdd0'mapping", expr__26306__26309)) {
      return new singult.core.Unify(this__26304.data, G__26296, this__26304.key_fn, this__26304.enter, this__26304.update, this__26304.exit, this__26304.force_update_QMARK_, this__26304.__meta, this__26304.__extmap, null)
    }else {
      if(pred__26305__26308.call(null, "\ufdd0'key-fn", expr__26306__26309)) {
        return new singult.core.Unify(this__26304.data, this__26304.mapping, G__26296, this__26304.enter, this__26304.update, this__26304.exit, this__26304.force_update_QMARK_, this__26304.__meta, this__26304.__extmap, null)
      }else {
        if(pred__26305__26308.call(null, "\ufdd0'enter", expr__26306__26309)) {
          return new singult.core.Unify(this__26304.data, this__26304.mapping, this__26304.key_fn, G__26296, this__26304.update, this__26304.exit, this__26304.force_update_QMARK_, this__26304.__meta, this__26304.__extmap, null)
        }else {
          if(pred__26305__26308.call(null, "\ufdd0'update", expr__26306__26309)) {
            return new singult.core.Unify(this__26304.data, this__26304.mapping, this__26304.key_fn, this__26304.enter, G__26296, this__26304.exit, this__26304.force_update_QMARK_, this__26304.__meta, this__26304.__extmap, null)
          }else {
            if(pred__26305__26308.call(null, "\ufdd0'exit", expr__26306__26309)) {
              return new singult.core.Unify(this__26304.data, this__26304.mapping, this__26304.key_fn, this__26304.enter, this__26304.update, G__26296, this__26304.force_update_QMARK_, this__26304.__meta, this__26304.__extmap, null)
            }else {
              if(pred__26305__26308.call(null, "\ufdd0'force-update?", expr__26306__26309)) {
                return new singult.core.Unify(this__26304.data, this__26304.mapping, this__26304.key_fn, this__26304.enter, this__26304.update, this__26304.exit, G__26296, this__26304.__meta, this__26304.__extmap, null)
              }else {
                return new singult.core.Unify(this__26304.data, this__26304.mapping, this__26304.key_fn, this__26304.enter, this__26304.update, this__26304.exit, this__26304.force_update_QMARK_, this__26304.__meta, cljs.core.assoc.call(null, this__26304.__extmap, k__2224__auto__, G__26296), null)
              }
            }
          }
        }
      }
    }
  }
};
singult.core.Unify.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2221__auto__, entry__2222__auto__) {
  var this__26310 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2222__auto__)) {
    return this__2221__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2221__auto__, cljs.core._nth.call(null, entry__2222__auto__, 0), cljs.core._nth.call(null, entry__2222__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2221__auto__, entry__2222__auto__)
  }
};
singult.core.Unify.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2228__auto__) {
  var this__26311 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'data", this__26311.data), cljs.core.vector.call(null, "\ufdd0'mapping", this__26311.mapping), cljs.core.vector.call(null, "\ufdd0'key-fn", this__26311.key_fn), cljs.core.vector.call(null, "\ufdd0'enter", this__26311.enter), cljs.core.vector.call(null, "\ufdd0'update", this__26311.update), cljs.core.vector.call(null, "\ufdd0'exit", this__26311.exit), cljs.core.vector.call(null, 
  "\ufdd0'force-update?", this__26311.force_update_QMARK_)], true), this__26311.__extmap))
};
singult.core.Unify.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2230__auto__, opts__2231__auto__) {
  var this__26312 = this;
  var pr_pair__2232__auto____26313 = function(keyval__2233__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2231__auto__, keyval__2233__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2232__auto____26313, [cljs.core.str("#"), cljs.core.str("Unify"), cljs.core.str("{")].join(""), ", ", "}", opts__2231__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'data", this__26312.data), cljs.core.vector.call(null, "\ufdd0'mapping", this__26312.mapping), cljs.core.vector.call(null, "\ufdd0'key-fn", this__26312.key_fn), cljs.core.vector.call(null, "\ufdd0'enter", this__26312.enter), 
  cljs.core.vector.call(null, "\ufdd0'update", this__26312.update), cljs.core.vector.call(null, "\ufdd0'exit", this__26312.exit), cljs.core.vector.call(null, "\ufdd0'force-update?", this__26312.force_update_QMARK_)], true), this__26312.__extmap))
};
singult.core.Unify.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2220__auto__) {
  var this__26314 = this;
  return 7 + cljs.core.count.call(null, this__26314.__extmap)
};
singult.core.Unify.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2212__auto__, other__2213__auto__) {
  var this__26315 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____26316 = other__2213__auto__;
    if(cljs.core.truth_(and__3822__auto____26316)) {
      var and__3822__auto____26317 = this__2212__auto__.constructor === other__2213__auto__.constructor;
      if(and__3822__auto____26317) {
        return cljs.core.equiv_map.call(null, this__2212__auto__, other__2213__auto__)
      }else {
        return and__3822__auto____26317
      }
    }else {
      return and__3822__auto____26316
    }
  }())) {
    return true
  }else {
    return false
  }
};
singult.core.Unify.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2215__auto__, G__26296) {
  var this__26318 = this;
  return new singult.core.Unify(this__26318.data, this__26318.mapping, this__26318.key_fn, this__26318.enter, this__26318.update, this__26318.exit, this__26318.force_update_QMARK_, G__26296, this__26318.__extmap, this__26318.__hash)
};
singult.core.Unify.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2214__auto__) {
  var this__26319 = this;
  return this__26319.__meta
};
singult.core.Unify.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2225__auto__, k__2226__auto__) {
  var this__26320 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'data", "\ufdd0'force-update?", "\ufdd0'enter", "\ufdd0'exit", "\ufdd0'key-fn", "\ufdd0'update", "\ufdd0'mapping"]), k__2226__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2225__auto__), this__26320.__meta), k__2226__auto__)
  }else {
    return new singult.core.Unify(this__26320.data, this__26320.mapping, this__26320.key_fn, this__26320.enter, this__26320.update, this__26320.exit, this__26320.force_update_QMARK_, this__26320.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__26320.__extmap, k__2226__auto__)), null)
  }
};
singult.core.Unify.cljs$lang$type = true;
singult.core.Unify.cljs$lang$ctorPrSeq = function(this__2250__auto__) {
  return cljs.core.list.call(null, "singult.core/Unify")
};
singult.core.__GT_Unify = function __GT_Unify(data, mapping, key_fn, enter, update, exit, force_update_QMARK_) {
  return new singult.core.Unify(data, mapping, key_fn, enter, update, exit, force_update_QMARK_)
};
singult.core.map__GT_Unify = function map__GT_Unify(G__26298) {
  return new singult.core.Unify((new cljs.core.Keyword("\ufdd0'data")).call(null, G__26298), (new cljs.core.Keyword("\ufdd0'mapping")).call(null, G__26298), (new cljs.core.Keyword("\ufdd0'key-fn")).call(null, G__26298), (new cljs.core.Keyword("\ufdd0'enter")).call(null, G__26298), (new cljs.core.Keyword("\ufdd0'update")).call(null, G__26298), (new cljs.core.Keyword("\ufdd0'exit")).call(null, G__26298), (new cljs.core.Keyword("\ufdd0'force-update?")).call(null, G__26298), null, cljs.core.dissoc.call(null, 
  G__26298, "\ufdd0'data", "\ufdd0'mapping", "\ufdd0'key-fn", "\ufdd0'enter", "\ufdd0'update", "\ufdd0'exit", "\ufdd0'force-update?"))
};
singult.core.Unify;
singult.core.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.instance_QMARK_.call(null, singult.core.Unify, x)) {
    var map__26374__26375 = x;
    var map__26374__26376 = cljs.core.seq_QMARK_.call(null, map__26374__26375) ? cljs.core.apply.call(null, cljs.core.hash_map, map__26374__26375) : map__26374__26375;
    var force_update_QMARK___26377 = cljs.core._lookup.call(null, map__26374__26376, "\ufdd0'force-update?", null);
    var exit__26378 = cljs.core._lookup.call(null, map__26374__26376, "\ufdd0'exit", null);
    var update__26379 = cljs.core._lookup.call(null, map__26374__26376, "\ufdd0'update", null);
    var enter__26380 = cljs.core._lookup.call(null, map__26374__26376, "\ufdd0'enter", null);
    var key_fn__26381 = cljs.core._lookup.call(null, map__26374__26376, "\ufdd0'key-fn", null);
    var mapping__26382 = cljs.core._lookup.call(null, map__26374__26376, "\ufdd0'mapping", null);
    var data__26383 = cljs.core._lookup.call(null, map__26374__26376, "\ufdd0'data", null);
    var data_arr__26391 = function() {
      var a__26384 = [];
      var G__26385__26386 = cljs.core.seq.call(null, data__26383);
      if(G__26385__26386) {
        var d__26387 = cljs.core.first.call(null, G__26385__26386);
        var G__26385__26388 = G__26385__26386;
        while(true) {
          a__26384.push(d__26387);
          var temp__3974__auto____26389 = cljs.core.next.call(null, G__26385__26388);
          if(temp__3974__auto____26389) {
            var G__26385__26390 = temp__3974__auto____26389;
            var G__26427 = cljs.core.first.call(null, G__26385__26390);
            var G__26428 = G__26385__26390;
            d__26387 = G__26427;
            G__26385__26388 = G__26428;
            continue
          }else {
          }
          break
        }
      }else {
      }
      return a__26384
    }();
    return new singult.coffee.Unify(data_arr__26391, function(p1__26295_SHARP_) {
      return clj__GT_js.call(null, mapping__26382.call(null, p1__26295_SHARP_))
    }, key_fn__26381, enter__26380, update__26379, exit__26378, force_update_QMARK___26377)
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        var o__26392 = {};
        var G__26393__26394 = cljs.core.seq.call(null, x);
        if(G__26393__26394) {
          var G__26396__26398 = cljs.core.first.call(null, G__26393__26394);
          var vec__26397__26399 = G__26396__26398;
          var k__26400 = cljs.core.nth.call(null, vec__26397__26399, 0, null);
          var v__26401 = cljs.core.nth.call(null, vec__26397__26399, 1, null);
          var G__26393__26402 = G__26393__26394;
          var G__26396__26403 = G__26396__26398;
          var G__26393__26404 = G__26393__26402;
          while(true) {
            var vec__26405__26406 = G__26396__26403;
            var k__26407 = cljs.core.nth.call(null, vec__26405__26406, 0, null);
            var v__26408 = cljs.core.nth.call(null, vec__26405__26406, 1, null);
            var G__26393__26409 = G__26393__26404;
            var key__26410 = clj__GT_js.call(null, k__26407);
            if(cljs.core.string_QMARK_.call(null, key__26410)) {
            }else {
              throw"Cannot convert; JavaScript map keys must be strings";
            }
            o__26392[key__26410] = clj__GT_js.call(null, v__26408);
            var temp__3974__auto____26411 = cljs.core.next.call(null, G__26393__26409);
            if(temp__3974__auto____26411) {
              var G__26393__26412 = temp__3974__auto____26411;
              var G__26429 = cljs.core.first.call(null, G__26393__26412);
              var G__26430 = G__26393__26412;
              G__26396__26403 = G__26429;
              G__26393__26404 = G__26430;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return o__26392
      }else {
        if(cljs.core.seq_QMARK_.call(null, x)) {
          var a__26413 = [];
          a__26413.push(":*:");
          var G__26414__26415 = cljs.core.seq.call(null, x);
          if(G__26414__26415) {
            var item__26416 = cljs.core.first.call(null, G__26414__26415);
            var G__26414__26417 = G__26414__26415;
            while(true) {
              a__26413.push(clj__GT_js.call(null, item__26416));
              var temp__3974__auto____26418 = cljs.core.next.call(null, G__26414__26417);
              if(temp__3974__auto____26418) {
                var G__26414__26419 = temp__3974__auto____26418;
                var G__26431 = cljs.core.first.call(null, G__26414__26419);
                var G__26432 = G__26414__26419;
                item__26416 = G__26431;
                G__26414__26417 = G__26432;
                continue
              }else {
              }
              break
            }
          }else {
          }
          return a__26413
        }else {
          if(cljs.core.coll_QMARK_.call(null, x)) {
            var a__26420 = [];
            var G__26421__26422 = cljs.core.seq.call(null, x);
            if(G__26421__26422) {
              var item__26423 = cljs.core.first.call(null, G__26421__26422);
              var G__26421__26424 = G__26421__26422;
              while(true) {
                a__26420.push(clj__GT_js.call(null, item__26423));
                var temp__3974__auto____26425 = cljs.core.next.call(null, G__26421__26424);
                if(temp__3974__auto____26425) {
                  var G__26421__26426 = temp__3974__auto____26425;
                  var G__26433 = cljs.core.first.call(null, G__26421__26426);
                  var G__26434 = G__26421__26426;
                  item__26423 = G__26433;
                  G__26421__26424 = G__26434;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return a__26420
          }else {
            if("\ufdd0'else") {
              return x
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
singult.core.node_data = singult.coffee.node_data;
singult.core.attr = function attr($n, m) {
  return singult.coffee.attr.call(null, $n, singult.core.clj__GT_js.call(null, m))
};
singult.core.render = function render(v) {
  return singult.coffee.render.call(null, singult.coffee.canonicalize.call(null, singult.core.clj__GT_js.call(null, v)))
};
singult.core.merge_BANG_ = function merge_BANG_($n, v) {
  if(v == null) {
    return null
  }else {
    return singult.coffee.merge.call(null, $n, singult.coffee.canonicalize.call(null, singult.core.clj__GT_js.call(null, v)))
  }
};
singult.core.unify = function() {
  var unify__delegate = function(data, mapping, p__26435) {
    var map__26444__26445 = p__26435;
    var map__26444__26446 = cljs.core.seq_QMARK_.call(null, map__26444__26445) ? cljs.core.apply.call(null, cljs.core.hash_map, map__26444__26445) : map__26444__26445;
    var force_update_QMARK___26447 = cljs.core._lookup.call(null, map__26444__26446, "\ufdd0'force-update?", null);
    var exit__26448 = cljs.core._lookup.call(null, map__26444__26446, "\ufdd0'exit", null);
    var update__26449 = cljs.core._lookup.call(null, map__26444__26446, "\ufdd0'update", null);
    var enter__26450 = cljs.core._lookup.call(null, map__26444__26446, "\ufdd0'enter", null);
    var key_fn__26451 = cljs.core._lookup.call(null, map__26444__26446, "\ufdd0'key-fn", null);
    return new singult.core.Unify(data, mapping, key_fn__26451, enter__26450, update__26449, exit__26448, force_update_QMARK___26447)
  };
  var unify = function(data, mapping, var_args) {
    var p__26435 = null;
    if(goog.isDef(var_args)) {
      p__26435 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unify__delegate.call(this, data, mapping, p__26435)
  };
  unify.cljs$lang$maxFixedArity = 2;
  unify.cljs$lang$applyTo = function(arglist__26452) {
    var data = cljs.core.first(arglist__26452);
    var mapping = cljs.core.first(cljs.core.next(arglist__26452));
    var p__26435 = cljs.core.rest(cljs.core.next(arglist__26452));
    return unify__delegate(data, mapping, p__26435)
  };
  unify.cljs$lang$arity$variadic = unify__delegate;
  return unify
}();
singult.core.ignore = function ignore() {
  return new singult.coffee.Ignore
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isVersion(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var scrollEl = dom.getDocumentScrollElement();
  var inContainer;
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el.scrollWidth != el.clientWidth || el.scrollHeight != el.clientHeight) && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
      inContainer = inContainer || el != scrollEl
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  if(goog.userAgent.WEBKIT) {
    visibleRect.left += scrollX;
    visibleRect.top += scrollY
  }else {
    visibleRect.left = Math.max(visibleRect.left, scrollX);
    visibleRect.top = Math.max(visibleRect.top, scrollY)
  }
  if(!inContainer || goog.userAgent.WEBKIT) {
    visibleRect.right += scrollX;
    visibleRect.bottom += scrollY
  }
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return new goog.math.Size(element.offsetWidth, element.offsetHeight)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var originalWidth = element.offsetWidth;
  var originalHeight = element.offsetHeight;
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return new goog.math.Size(originalWidth, originalHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function() {
  var mockElement = goog.dom.createElement("div");
  mockElement.style.cssText = "visibility:hidden;overflow:scroll;" + "position:absolute;top:0;width:100px;height:100px";
  goog.dom.appendChild(goog.dom.getDocument().body, mockElement);
  var width = mockElement.offsetWidth - mockElement.clientWidth;
  goog.dom.removeNode(mockElement);
  return width
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("&")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    var type = el.type.toLowerCase();
    switch(type) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "=" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, opt_value);
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, opt_value);
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, opt_value);
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
goog.provide("c2.dom");
goog.require("cljs.core");
goog.require("goog.style");
goog.require("goog.dom.classes");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("singult.core");
goog.require("clojure.string");
NodeList.prototype.cljs$core$ISeqable$ = true;
NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
HTMLCollection.prototype.cljs$core$ISeqable$ = true;
HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
Node.prototype.cljs$core$IHash$ = true;
Node.prototype.cljs$core$IHash$_hash$arity$1 = function(x) {
  return x
};
c2.dom.IDom = {};
c2.dom.__GT_dom = function __GT_dom(x) {
  if(function() {
    var and__3822__auto____26140 = x;
    if(and__3822__auto____26140) {
      return x.c2$dom$IDom$__GT_dom$arity$1
    }else {
      return and__3822__auto____26140
    }
  }()) {
    return x.c2$dom$IDom$__GT_dom$arity$1(x)
  }else {
    var x__2256__auto____26141 = x == null ? null : x;
    return function() {
      var or__3824__auto____26142 = c2.dom.__GT_dom[goog.typeOf(x__2256__auto____26141)];
      if(or__3824__auto____26142) {
        return or__3824__auto____26142
      }else {
        var or__3824__auto____26143 = c2.dom.__GT_dom["_"];
        if(or__3824__auto____26143) {
          return or__3824__auto____26143
        }else {
          throw cljs.core.missing_protocol.call(null, "IDom.->dom", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.PersistentVector.prototype.c2$dom$IDom$ = true;
cljs.core.PersistentVector.prototype.c2$dom$IDom$__GT_dom$arity$1 = function(v) {
  return singult.core.render.call(null, v)
};
Node.prototype.c2$dom$IDom$ = true;
Node.prototype.c2$dom$IDom$__GT_dom$arity$1 = function(node) {
  return node
};
c2.dom.IDom["string"] = true;
c2.dom.__GT_dom["string"] = function(selector) {
  return c2.dom.select.call(null, selector)
};
c2.dom.select = function() {
  var select = null;
  var select__1 = function(selector) {
    return document.querySelector(selector)
  };
  var select__2 = function(selector, container) {
    return c2.dom.__GT_dom.call(null, container).querySelector(selector)
  };
  select = function(selector, container) {
    switch(arguments.length) {
      case 1:
        return select__1.call(this, selector);
      case 2:
        return select__2.call(this, selector, container)
    }
    throw"Invalid arity: " + arguments.length;
  };
  select.cljs$lang$arity$1 = select__1;
  select.cljs$lang$arity$2 = select__2;
  return select
}();
c2.dom.select_all = function() {
  var select_all = null;
  var select_all__1 = function(selector) {
    return document.querySelectorAll(selector)
  };
  var select_all__2 = function(selector, container) {
    return c2.dom.__GT_dom.call(null, container).querySelectorAll(selector)
  };
  select_all = function(selector, container) {
    switch(arguments.length) {
      case 1:
        return select_all__1.call(this, selector);
      case 2:
        return select_all__2.call(this, selector, container)
    }
    throw"Invalid arity: " + arguments.length;
  };
  select_all.cljs$lang$arity$1 = select_all__1;
  select_all.cljs$lang$arity$2 = select_all__2;
  return select_all
}();
c2.dom.matches_selector_QMARK_ = function matches_selector_QMARK_(node, selector) {
  return node.webkitMatchesSelector(selector)
};
c2.dom.children = function children(node) {
  return c2.dom.__GT_dom.call(null, node).children
};
c2.dom.parent = function parent(node) {
  return c2.dom.__GT_dom.call(null, node).parentNode
};
c2.dom.append_BANG_ = function append_BANG_(container, el) {
  var el__26145 = c2.dom.__GT_dom.call(null, el);
  goog.dom.appendChild(c2.dom.__GT_dom.call(null, container), el__26145);
  return el__26145
};
c2.dom.prepend_BANG_ = function prepend_BANG_(container, el) {
  var el__26147 = c2.dom.__GT_dom.call(null, el);
  goog.dom.insertChildAt(c2.dom.__GT_dom.call(null, container), el__26147, 0);
  return el__26147
};
c2.dom.remove_BANG_ = function remove_BANG_(el) {
  return goog.dom.removeNode(c2.dom.__GT_dom.call(null, el))
};
c2.dom.replace_BANG_ = function replace_BANG_(old, new$) {
  var new__26149 = c2.dom.__GT_dom.call(null, new$);
  goog.dom.replaceNode(new__26149, c2.dom.__GT_dom.call(null, old));
  return new__26149
};
c2.dom.style = function() {
  var style = null;
  var style__1 = function(el) {
    throw new Error("TODO: return map of element styles");
  };
  var style__2 = function(el, x) {
    var el__26182 = c2.dom.__GT_dom.call(null, el);
    try {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        var k__26207 = x;
        return goog.style.getComputedStyle(el__26182, cljs.core.name.call(null, k__26207))
      }else {
        if("\ufdd0'else") {
          throw 0;
        }else {
          return null
        }
      }
    }catch(e__6897__auto__) {
      if(e__6897__auto__ === 0) {
        try {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m__26187 = x;
            var G__26188__26189 = cljs.core.seq.call(null, m__26187);
            if(G__26188__26189) {
              var G__26191__26193 = cljs.core.first.call(null, G__26188__26189);
              var vec__26192__26194 = G__26191__26193;
              var k__26195 = cljs.core.nth.call(null, vec__26192__26194, 0, null);
              var v__26196 = cljs.core.nth.call(null, vec__26192__26194, 1, null);
              var G__26188__26197 = G__26188__26189;
              var G__26191__26198 = G__26191__26193;
              var G__26188__26199 = G__26188__26197;
              while(true) {
                var vec__26200__26201 = G__26191__26198;
                var k__26202 = cljs.core.nth.call(null, vec__26200__26201, 0, null);
                var v__26203 = cljs.core.nth.call(null, vec__26200__26201, 1, null);
                var G__26188__26204 = G__26188__26199;
                style.call(null, el__26182, k__26202, v__26203);
                var temp__3974__auto____26205 = cljs.core.next.call(null, G__26188__26204);
                if(temp__3974__auto____26205) {
                  var G__26188__26206 = temp__3974__auto____26205;
                  var G__26214 = cljs.core.first.call(null, G__26188__26206);
                  var G__26215 = G__26188__26206;
                  G__26191__26198 = G__26214;
                  G__26188__26199 = G__26215;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return el__26182
          }else {
            if("\ufdd0'else") {
              throw 0;
            }else {
              return null
            }
          }
        }catch(e__6897__auto__) {
          if(e__6897__auto__ === 0) {
            var G__26183__26186 = x;
            return null
          }else {
            throw e__6897__auto__;
          }
        }
      }else {
        throw e__6897__auto__;
      }
    }
  };
  var style__3 = function(el, k, v) {
    goog.style.setStyle(c2.dom.__GT_dom.call(null, el), cljs.core.name.call(null, k), function() {
      try {
        if(cljs.core.string_QMARK_.call(null, v)) {
          var s__26213 = v;
          return s__26213
        }else {
          if("\ufdd0'else") {
            throw 0;
          }else {
            return null
          }
        }
      }catch(e__6897__auto__) {
        if(e__6897__auto__ === 0) {
          try {
            if(cljs.core.number_QMARK_.call(null, v)) {
              var n__26212 = v;
              if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray(["\ufdd0'bottom", "\ufdd0'width", "\ufdd0'top", "\ufdd0'right", "\ufdd0'left", "\ufdd0'height"]).call(null, cljs.core.keyword.call(null, k)))) {
                return[cljs.core.str(n__26212), cljs.core.str("px")].join("")
              }else {
                return n__26212
              }
            }else {
              if("\ufdd0'else") {
                throw 0;
              }else {
                return null
              }
            }
          }catch(e__6897__auto__) {
            if(e__6897__auto__ === 0) {
              var G__26208__26211 = v;
              return null
            }else {
              throw e__6897__auto__;
            }
          }
        }else {
          throw e__6897__auto__;
        }
      }
    }());
    return el
  };
  style = function(el, k, v) {
    switch(arguments.length) {
      case 1:
        return style__1.call(this, el);
      case 2:
        return style__2.call(this, el, k);
      case 3:
        return style__3.call(this, el, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  style.cljs$lang$arity$1 = style__1;
  style.cljs$lang$arity$2 = style__2;
  style.cljs$lang$arity$3 = style__3;
  return style
}();
c2.dom.attr = function() {
  var attr = null;
  var attr__1 = function(el) {
    var attrs__26251 = c2.dom.__GT_dom.call(null, el).attributes;
    return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
      var iter__2355__auto____26258 = function iter__26252(s__26253) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__26253__26256 = s__26253;
          while(true) {
            if(cljs.core.seq.call(null, s__26253__26256)) {
              var i__26257 = cljs.core.first.call(null, s__26253__26256);
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, attrs__26251[i__26257].name), attrs__26251[i__26257].value], true), iter__26252.call(null, cljs.core.rest.call(null, s__26253__26256)))
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__2355__auto____26258.call(null, cljs.core.range.call(null, attrs__26251.length))
    }())
  };
  var attr__2 = function(el, x) {
    var el__26259 = c2.dom.__GT_dom.call(null, el);
    try {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        var k__26284 = x;
        return el__26259.getAttribute(cljs.core.name.call(null, k__26284))
      }else {
        if("\ufdd0'else") {
          throw 0;
        }else {
          return null
        }
      }
    }catch(e__6897__auto__) {
      if(e__6897__auto__ === 0) {
        try {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m__26264 = x;
            var G__26265__26266 = cljs.core.seq.call(null, m__26264);
            if(G__26265__26266) {
              var G__26268__26270 = cljs.core.first.call(null, G__26265__26266);
              var vec__26269__26271 = G__26268__26270;
              var k__26272 = cljs.core.nth.call(null, vec__26269__26271, 0, null);
              var v__26273 = cljs.core.nth.call(null, vec__26269__26271, 1, null);
              var G__26265__26274 = G__26265__26266;
              var G__26268__26275 = G__26268__26270;
              var G__26265__26276 = G__26265__26274;
              while(true) {
                var vec__26277__26278 = G__26268__26275;
                var k__26279 = cljs.core.nth.call(null, vec__26277__26278, 0, null);
                var v__26280 = cljs.core.nth.call(null, vec__26277__26278, 1, null);
                var G__26265__26281 = G__26265__26276;
                attr.call(null, el__26259, k__26279, v__26280);
                var temp__3974__auto____26282 = cljs.core.next.call(null, G__26265__26281);
                if(temp__3974__auto____26282) {
                  var G__26265__26283 = temp__3974__auto____26282;
                  var G__26286 = cljs.core.first.call(null, G__26265__26283);
                  var G__26287 = G__26265__26283;
                  G__26268__26275 = G__26286;
                  G__26265__26276 = G__26287;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return el__26259
          }else {
            if("\ufdd0'else") {
              throw 0;
            }else {
              return null
            }
          }
        }catch(e__6897__auto__) {
          if(e__6897__auto__ === 0) {
            var G__26260__26263 = x;
            return null
          }else {
            throw e__6897__auto__;
          }
        }
      }else {
        throw e__6897__auto__;
      }
    }
  };
  var attr__3 = function(el, k, v) {
    var el__26285 = c2.dom.__GT_dom.call(null, el);
    if(v == null) {
      el__26285.removeAttribute(cljs.core.name.call(null, k))
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0'style", k)) {
        c2.dom.style.call(null, el__26285, v)
      }else {
        el__26285.setAttribute(cljs.core.name.call(null, k), v)
      }
    }
    return el__26285
  };
  attr = function(el, k, v) {
    switch(arguments.length) {
      case 1:
        return attr__1.call(this, el);
      case 2:
        return attr__2.call(this, el, k);
      case 3:
        return attr__3.call(this, el, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  attr.cljs$lang$arity$1 = attr__1;
  attr.cljs$lang$arity$2 = attr__2;
  attr.cljs$lang$arity$3 = attr__3;
  return attr
}();
c2.dom.text = function() {
  var text = null;
  var text__1 = function(el) {
    return goog.dom.getTextContent(c2.dom.__GT_dom.call(null, el))
  };
  var text__2 = function(el, v) {
    var el__26289 = c2.dom.__GT_dom.call(null, el);
    goog.dom.setTextContent(el__26289, v);
    return el__26289
  };
  text = function(el, v) {
    switch(arguments.length) {
      case 1:
        return text__1.call(this, el);
      case 2:
        return text__2.call(this, el, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  text.cljs$lang$arity$1 = text__1;
  text.cljs$lang$arity$2 = text__2;
  return text
}();
c2.dom.val = function() {
  var val = null;
  var val__1 = function(el) {
    return goog.dom.forms.getValue(c2.dom.__GT_dom.call(null, el))
  };
  var val__2 = function(el, v) {
    var el__26291 = c2.dom.__GT_dom.call(null, el);
    goog.dom.forms.setValue(el__26291, v);
    return el__26291
  };
  val = function(el, v) {
    switch(arguments.length) {
      case 1:
        return val__1.call(this, el);
      case 2:
        return val__2.call(this, el, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  val.cljs$lang$arity$1 = val__1;
  val.cljs$lang$arity$2 = val__2;
  return val
}();
c2.dom.classed_BANG_ = function classed_BANG_(el, class$, classed_QMARK_) {
  return goog.dom.classes.enable(c2.dom.__GT_dom.call(null, el), cljs.core.name.call(null, class$), classed_QMARK_)
};
c2.dom.add_class_BANG_ = function add_class_BANG_(el, class$) {
  return c2.dom.classed_BANG_.call(null, el, class$, true)
};
c2.dom.remove_class_BANG_ = function remove_class_BANG_(el, class$) {
  return c2.dom.classed_BANG_.call(null, el, class$, false)
};
c2.dom.request_animation_frame = function() {
  var or__3824__auto____26293 = window.requestAnimationFrame;
  if(cljs.core.truth_(or__3824__auto____26293)) {
    return or__3824__auto____26293
  }else {
    var or__3824__auto____26294 = window.webkitRequestAnimationFrame;
    if(cljs.core.truth_(or__3824__auto____26294)) {
      return or__3824__auto____26294
    }else {
      return function(p1__26292_SHARP_) {
        return setTimeout(function() {
          return p1__26292_SHARP_.call(null)
        }, 10)
      }
    }
  }
}();
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.setIgnoreCase(opt_ignoreCase == null ? opt_uri.getIgnoreCase() : opt_ignoreCase);
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQuery(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.queryData_ = new goog.Uri.QueryData(null, this, this.ignoreCase_)
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  if(this.cachedToString_) {
    return this.cachedToString_
  }
  var out = [];
  if(this.scheme_) {
    out.push(goog.Uri.encodeSpecialChars_(this.scheme_, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  if(this.domain_) {
    out.push("//");
    if(this.userInfo_) {
      out.push(goog.Uri.encodeSpecialChars_(this.userInfo_, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.Uri.encodeString_(this.domain_));
    if(this.port_ != null) {
      out.push(":", String(this.getPort()))
    }
  }
  if(this.path_) {
    if(this.hasDomain() && this.path_.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(this.path_, goog.Uri.reDisallowedInPath_))
  }
  var query = String(this.queryData_);
  if(query) {
    out.push("?", query)
  }
  if(this.fragment_) {
    out.push("#", goog.Uri.encodeSpecialChars_(this.fragment_, goog.Uri.reDisallowedInFragment_))
  }
  return this.cachedToString_ = out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQuery(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return goog.Uri.create(this.scheme_, this.userInfo_, this.domain_, this.port_, this.path_, this.queryData_.clone(), this.fragment_, this.ignoreCase_)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.uri_ = this;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, this, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeString_ = function(unescapedPart) {
  if(goog.isString(unescapedPart)) {
    return encodeURIComponent(unescapedPart)
  }
  return null
};
goog.Uri.encodeSpecialRegExp_ = /^[a-zA-Z0-9\-_.!~*'():\/;?]*$/;
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  var ret = null;
  if(goog.isString(unescapedPart)) {
    ret = unescapedPart;
    if(!goog.Uri.encodeSpecialRegExp_.test(ret)) {
      ret = encodeURI(unescapedPart)
    }
    if(ret.search(extra) >= 0) {
      ret = ret.replace(extra, goog.Uri.encodeChar_)
    }
  }
  return ret
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInPath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.uri_ = opt_uri || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("&");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("=");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  return goog.Uri.QueryData.createFromKeysValues(keys, goog.structs.getValues(map), opt_uri, opt_ignoreCase)
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, opt_uri, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.decodedQuery_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(!this.containsKey(key)) {
    this.keyMap_.set(key, value)
  }else {
    var current = this.keyMap_.get(key);
    if(goog.isArray(current)) {
      current.push(value)
    }else {
      this.keyMap_.set(key, [current, value])
    }
  }
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  if(this.keyMap_) {
    this.keyMap_.clear()
  }
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        rv.push(keys[i])
      }
    }else {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv;
  if(opt_key) {
    var key = this.getKeyName_(opt_key);
    if(this.containsKey(key)) {
      var value = this.keyMap_.get(key);
      if(goog.isArray(value)) {
        return value
      }else {
        rv = [];
        rv.push(value)
      }
    }else {
      rv = []
    }
  }else {
    var vals = this.keyMap_.getValues();
    rv = [];
    for(var i = 0;i < vals.length;i++) {
      var val = vals[i];
      if(goog.isArray(val)) {
        goog.array.extend(rv, val)
      }else {
        rv.push(val)
      }
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  this.keyMap_.set(key, value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      return val[0]
    }else {
      return val
    }
  }else {
    return opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  if(values.length > 0) {
    this.keyMap_.set(key, values);
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var count = 0;
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        if(count > 0) {
          sb.push("&")
        }
        sb.push(encodedKey);
        if(val[j] !== "") {
          sb.push("=", goog.string.urlEncode(val[j]))
        }
        count++
      }
    }else {
      if(count > 0) {
        sb.push("&")
      }
      sb.push(encodedKey);
      if(val !== "") {
        sb.push("=", goog.string.urlEncode(val))
      }
      count++
    }
  }
  return this.encodedQuery_ = sb.join("")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  if(!this.decodedQuery_) {
    this.decodedQuery_ = goog.Uri.decodeOrEmpty_(this.toString())
  }
  return this.decodedQuery_
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  delete this.decodedQuery_;
  delete this.encodedQuery_;
  if(this.uri_) {
    delete this.uri_.cachedToString_
  }
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  if(this.decodedQuery_) {
    rv.decodedQuery_ = this.decodedQuery_
  }
  if(this.encodedQuery_) {
    rv.encodedQuery_ = this.encodedQuery_
  }
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone()
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key, map) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.add(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
goog.provide("goog.net.Cookies");
goog.provide("goog.net.cookies");
goog.require("goog.userAgent");
goog.net.Cookies = function(context) {
  this.document_ = context
};
goog.net.Cookies.MAX_COOKIE_LENGTH = 3950;
goog.net.Cookies.SPLIT_RE_ = /\s*;\s*/;
goog.net.Cookies.TEST_COOKIE_NAME_ = "COOKIES_TEST_";
goog.net.Cookies.prototype.isEnabled = function() {
  var isEnabled = this.isNavigatorCookieEnabled_();
  if(isEnabled && goog.userAgent.WEBKIT) {
    var cookieName = goog.net.Cookies.TEST_COOKIE_NAME_ + goog.now();
    goog.net.cookies.set(cookieName, "1");
    if(!this.get(cookieName)) {
      return false
    }
    this.remove(cookieName)
  }
  return isEnabled
};
goog.net.Cookies.prototype.isValidName = function(name) {
  return!/[;=\s]/.test(name)
};
goog.net.Cookies.prototype.isValidValue = function(value) {
  return!/[;\r\n]/.test(value)
};
goog.net.Cookies.prototype.set = function(name, value, opt_maxAge, opt_path, opt_domain, opt_secure) {
  if(!this.isValidName(name)) {
    throw Error('Invalid cookie name "' + name + '"');
  }
  if(!this.isValidValue(value)) {
    throw Error('Invalid cookie value "' + value + '"');
  }
  if(!goog.isDef(opt_maxAge)) {
    opt_maxAge = -1
  }
  var domainStr = opt_domain ? ";domain=" + opt_domain : "";
  var pathStr = opt_path ? ";path=" + opt_path : "";
  var secureStr = opt_secure ? ";secure" : "";
  var expiresStr;
  if(opt_maxAge < 0) {
    expiresStr = ""
  }else {
    if(opt_maxAge == 0) {
      var pastDate = new Date(1970, 1, 1);
      expiresStr = ";expires=" + pastDate.toUTCString()
    }else {
      var futureDate = new Date(goog.now() + opt_maxAge * 1E3);
      expiresStr = ";expires=" + futureDate.toUTCString()
    }
  }
  this.setCookie_(name + "=" + value + domainStr + pathStr + expiresStr + secureStr)
};
goog.net.Cookies.prototype.get = function(name, opt_default) {
  var nameEq = name + "=";
  var parts = this.getParts_();
  for(var i = 0, part;part = parts[i];i++) {
    if(part.indexOf(nameEq) == 0) {
      return part.substr(nameEq.length)
    }
  }
  return opt_default
};
goog.net.Cookies.prototype.remove = function(name, opt_path, opt_domain) {
  var rv = this.containsKey(name);
  this.set(name, "", 0, opt_path, opt_domain);
  return rv
};
goog.net.Cookies.prototype.getKeys = function() {
  return this.getKeyValues_().keys
};
goog.net.Cookies.prototype.getValues = function() {
  return this.getKeyValues_().values
};
goog.net.Cookies.prototype.isEmpty = function() {
  return!this.getCookie_()
};
goog.net.Cookies.prototype.getCount = function() {
  var cookie = this.getCookie_();
  if(!cookie) {
    return 0
  }
  return this.getParts_().length
};
goog.net.Cookies.prototype.containsKey = function(key) {
  return goog.isDef(this.get(key))
};
goog.net.Cookies.prototype.containsValue = function(value) {
  var values = this.getKeyValues_().values;
  for(var i = 0;i < values.length;i++) {
    if(values[i] == value) {
      return true
    }
  }
  return false
};
goog.net.Cookies.prototype.clear = function() {
  var keys = this.getKeyValues_().keys;
  for(var i = keys.length - 1;i >= 0;i--) {
    this.remove(keys[i])
  }
};
goog.net.Cookies.prototype.setCookie_ = function(s) {
  this.document_.cookie = s
};
goog.net.Cookies.prototype.getCookie_ = function() {
  return this.document_.cookie
};
goog.net.Cookies.prototype.getParts_ = function() {
  return(this.getCookie_() || "").split(goog.net.Cookies.SPLIT_RE_)
};
goog.net.Cookies.prototype.isNavigatorCookieEnabled_ = function() {
  return navigator.cookieEnabled
};
goog.net.Cookies.prototype.getKeyValues_ = function() {
  var parts = this.getParts_();
  var keys = [], values = [], index, part;
  for(var i = 0;part = parts[i];i++) {
    index = part.indexOf("=");
    if(index == -1) {
      keys.push("");
      values.push(part)
    }else {
      keys.push(part.substring(0, index));
      values.push(part.substring(index + 1))
    }
  }
  return{keys:keys, values:values}
};
goog.net.cookies = new goog.net.Cookies(document);
goog.net.cookies.MAX_COOKIE_LENGTH = goog.net.Cookies.MAX_COOKIE_LENGTH;
goog.provide("shoreleave.browser.cookies");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.net.Cookies");
goog.net.Cookies.prototype.cljs$core$IHash$ = true;
goog.net.Cookies.prototype.cljs$core$IHash$_hash$arity$1 = function(c) {
  return cljs.core._hash.call(null, cljs.core._persistent_BANG_.call(null, c))
};
goog.net.Cookies.prototype.cljs$core$ILookup$ = true;
goog.net.Cookies.prototype.cljs$core$ILookup$_lookup$arity$2 = function(c, k) {
  return cljs.core._lookup.call(null, c, k, null)
};
goog.net.Cookies.prototype.cljs$core$ILookup$_lookup$arity$3 = function(c, k, not_found) {
  var v__27012 = c.get(cljs.core.name.call(null, k), not_found);
  if(cljs.core.string_QMARK_.call(null, v__27012)) {
    return goog.string.urlDecode(v__27012)
  }else {
    return v__27012
  }
};
goog.net.Cookies.prototype.cljs$core$IAssociative$ = true;
goog.net.Cookies.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(c, k, v) {
  return cljs.core._assoc.call(null, cljs.core._persistent_BANG_.call(null, c), k, v)
};
goog.net.Cookies.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(c, k) {
  return c.containsKey(cljs.core.name.call(null, k))
};
goog.net.Cookies.prototype.cljs$core$IFn$ = true;
goog.net.Cookies.prototype.call = function() {
  var G__27037 = null;
  var G__27037__2 = function(this_sym27013, k) {
    var this_sym27013__27015 = this;
    var c__27016 = this_sym27013__27015;
    return cljs.core._lookup.call(null, c__27016, k)
  };
  var G__27037__3 = function(this_sym27014, k, not_found) {
    var this_sym27014__27017 = this;
    var c__27018 = this_sym27014__27017;
    return cljs.core._lookup.call(null, c__27018, k, not_found)
  };
  G__27037 = function(this_sym27014, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__27037__2.call(this, this_sym27014, k);
      case 3:
        return G__27037__3.call(this, this_sym27014, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__27037
}();
goog.net.Cookies.prototype.apply = function(this_sym27010, args27011) {
  return this_sym27010.call.apply(this_sym27010, [this_sym27010].concat(args27011.slice()))
};
goog.net.Cookies.prototype.cljs$core$ITransientMap$ = true;
goog.net.Cookies.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$4 = function() {
  var G__27038__delegate = function(c, k, opts) {
    var temp__3974__auto____27020 = function() {
      var and__3822__auto____27019 = c.isValidName(cljs.core.name.call(null, k));
      if(cljs.core.truth_(and__3822__auto____27019)) {
        return cljs.core.name.call(null, k)
      }else {
        return and__3822__auto____27019
      }
    }();
    if(cljs.core.truth_(temp__3974__auto____27020)) {
      var k__27021 = temp__3974__auto____27020;
      var map__27022__27023 = cljs.core.apply.call(null, cljs.core.hash_map, opts);
      var map__27022__27024 = cljs.core.seq_QMARK_.call(null, map__27022__27023) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27022__27023) : map__27022__27023;
      var domain__27025 = cljs.core._lookup.call(null, map__27022__27024, "\ufdd0'domain", null);
      var path__27026 = cljs.core._lookup.call(null, map__27022__27024, "\ufdd0'path", null);
      return c.remove(k__27021, path__27026, domain__27025)
    }else {
      return null
    }
  };
  var G__27038 = function(c, k, var_args) {
    var opts = null;
    if(goog.isDef(var_args)) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return G__27038__delegate.call(this, c, k, opts)
  };
  G__27038.cljs$lang$maxFixedArity = 2;
  G__27038.cljs$lang$applyTo = function(arglist__27039) {
    var c = cljs.core.first(arglist__27039);
    var k = cljs.core.first(cljs.core.next(arglist__27039));
    var opts = cljs.core.rest(cljs.core.next(arglist__27039));
    return G__27038__delegate(c, k, opts)
  };
  G__27038.cljs$lang$arity$variadic = G__27038__delegate;
  return G__27038
}();
goog.net.Cookies.prototype.cljs$core$ISeqable$ = true;
goog.net.Cookies.prototype.cljs$core$ISeqable$_seq$arity$1 = function(c) {
  return cljs.core.map.call(null, cljs.core.vector, c.getKeys(), c.getValues())
};
goog.net.Cookies.prototype.cljs$core$IPrintable$ = true;
goog.net.Cookies.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(c, opts) {
  return cljs.core._pr_seq.call(null, cljs.core._persistent_BANG_.call(null, c), opts)
};
goog.net.Cookies.prototype.cljs$core$ICounted$ = true;
goog.net.Cookies.prototype.cljs$core$ICounted$_count$arity$1 = function(c) {
  return c.getCount()
};
goog.net.Cookies.prototype.cljs$core$ITransientCollection$ = true;
goog.net.Cookies.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(c) {
  return shoreleave.browser.cookies.as_hash_map.call(null, c)
};
goog.net.Cookies.prototype.cljs$core$ITransientAssociative$ = true;
goog.net.Cookies.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$5 = function() {
  var G__27040__delegate = function(c, k, v, opts) {
    var temp__3974__auto____27028 = function() {
      var and__3822__auto____27027 = c.isValidName(cljs.core.name.call(null, k));
      if(cljs.core.truth_(and__3822__auto____27027)) {
        return cljs.core.name.call(null, k)
      }else {
        return and__3822__auto____27027
      }
    }();
    if(cljs.core.truth_(temp__3974__auto____27028)) {
      var k__27029 = temp__3974__auto____27028;
      var map__27030__27031 = cljs.core.apply.call(null, cljs.core.hash_map, opts);
      var map__27030__27032 = cljs.core.seq_QMARK_.call(null, map__27030__27031) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27030__27031) : map__27030__27031;
      var secure_QMARK___27033 = cljs.core._lookup.call(null, map__27030__27032, "\ufdd0'secure?", null);
      var domain__27034 = cljs.core._lookup.call(null, map__27030__27032, "\ufdd0'domain", null);
      var path__27035 = cljs.core._lookup.call(null, map__27030__27032, "\ufdd0'path", null);
      var max_age__27036 = cljs.core._lookup.call(null, map__27030__27032, "\ufdd0'max-age", null);
      return c.set(k__27029, v, max_age__27036, path__27035, domain__27034, secure_QMARK___27033)
    }else {
      return null
    }
  };
  var G__27040 = function(c, k, v, var_args) {
    var opts = null;
    if(goog.isDef(var_args)) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return G__27040__delegate.call(this, c, k, v, opts)
  };
  G__27040.cljs$lang$maxFixedArity = 3;
  G__27040.cljs$lang$applyTo = function(arglist__27041) {
    var c = cljs.core.first(arglist__27041);
    var k = cljs.core.first(cljs.core.next(arglist__27041));
    var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__27041)));
    var opts = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__27041)));
    return G__27040__delegate(c, k, v, opts)
  };
  G__27040.cljs$lang$arity$variadic = G__27040__delegate;
  return G__27040
}();
shoreleave.browser.cookies.cookies = new goog.net.Cookies(document);
shoreleave.browser.cookies.as_hash_map = function() {
  var as_hash_map = null;
  var as_hash_map__0 = function() {
    return as_hash_map.call(null, shoreleave.browser.cookies.cookies)
  };
  var as_hash_map__1 = function(cks) {
    return cljs.core.zipmap.call(null, cks.getKeys(), cks.getValues())
  };
  as_hash_map = function(cks) {
    switch(arguments.length) {
      case 0:
        return as_hash_map__0.call(this);
      case 1:
        return as_hash_map__1.call(this, cks)
    }
    throw"Invalid arity: " + arguments.length;
  };
  as_hash_map.cljs$lang$arity$0 = as_hash_map__0;
  as_hash_map.cljs$lang$arity$1 = as_hash_map__1;
  return as_hash_map
}();
shoreleave.browser.cookies.cookies_enabled_QMARK_ = function() {
  var cookies_enabled_QMARK_ = null;
  var cookies_enabled_QMARK___0 = function() {
    return cookies_enabled_QMARK_.call(null, shoreleave.browser.cookies.cookies)
  };
  var cookies_enabled_QMARK___1 = function(cks) {
    return cks.isEnabled()
  };
  cookies_enabled_QMARK_ = function(cks) {
    switch(arguments.length) {
      case 0:
        return cookies_enabled_QMARK___0.call(this);
      case 1:
        return cookies_enabled_QMARK___1.call(this, cks)
    }
    throw"Invalid arity: " + arguments.length;
  };
  cookies_enabled_QMARK_.cljs$lang$arity$0 = cookies_enabled_QMARK___0;
  cookies_enabled_QMARK_.cljs$lang$arity$1 = cookies_enabled_QMARK___1;
  return cookies_enabled_QMARK_
}();
shoreleave.browser.cookies.empty_BANG_ = function empty_BANG_(cks) {
  return cks.clear()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
MESSAGE:"message", CONNECT:"connect"};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.disposeInternal = function() {
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isVersion("9"), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = new Function("a", "return a");
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      try {
        goog.reflect.sinkValue(relatedTarget.nodeName)
      }catch(err) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.structs.SimplePool");
goog.require("goog.Disposable");
goog.structs.SimplePool = function(initialCount, maxCount) {
  goog.Disposable.call(this);
  this.maxCount_ = maxCount;
  this.freeQueue_ = [];
  this.createInitial_(initialCount)
};
goog.inherits(goog.structs.SimplePool, goog.Disposable);
goog.structs.SimplePool.prototype.createObjectFn_ = null;
goog.structs.SimplePool.prototype.disposeObjectFn_ = null;
goog.structs.SimplePool.prototype.setCreateObjectFn = function(createObjectFn) {
  this.createObjectFn_ = createObjectFn
};
goog.structs.SimplePool.prototype.setDisposeObjectFn = function(disposeObjectFn) {
  this.disposeObjectFn_ = disposeObjectFn
};
goog.structs.SimplePool.prototype.getObject = function() {
  if(this.freeQueue_.length) {
    return this.freeQueue_.pop()
  }
  return this.createObject()
};
goog.structs.SimplePool.prototype.releaseObject = function(obj) {
  if(this.freeQueue_.length < this.maxCount_) {
    this.freeQueue_.push(obj)
  }else {
    this.disposeObject(obj)
  }
};
goog.structs.SimplePool.prototype.createInitial_ = function(initialCount) {
  if(initialCount > this.maxCount_) {
    throw Error("[goog.structs.SimplePool] Initial cannot be greater than max");
  }
  for(var i = 0;i < initialCount;i++) {
    this.freeQueue_.push(this.createObject())
  }
};
goog.structs.SimplePool.prototype.createObject = function() {
  if(this.createObjectFn_) {
    return this.createObjectFn_()
  }else {
    return{}
  }
};
goog.structs.SimplePool.prototype.disposeObject = function(obj) {
  if(this.disposeObjectFn_) {
    this.disposeObjectFn_(obj)
  }else {
    if(goog.isObject(obj)) {
      if(goog.isFunction(obj.dispose)) {
        obj.dispose()
      }else {
        for(var i in obj) {
          delete obj[i]
        }
      }
    }
  }
};
goog.structs.SimplePool.prototype.disposeInternal = function() {
  goog.structs.SimplePool.superClass_.disposeInternal.call(this);
  var freeQueue = this.freeQueue_;
  while(freeQueue.length) {
    this.disposeObject(freeQueue.pop())
  }
  delete this.freeQueue_
};
goog.provide("goog.events.pools");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Listener");
goog.require("goog.structs.SimplePool");
goog.require("goog.userAgent.jscript");
goog.events.ASSUME_GOOD_GC = false;
goog.events.pools.getObject;
goog.events.pools.releaseObject;
goog.events.pools.getArray;
goog.events.pools.releaseArray;
goog.events.pools.getProxy;
goog.events.pools.setProxyCallbackFunction;
goog.events.pools.releaseProxy;
goog.events.pools.getListener;
goog.events.pools.releaseListener;
goog.events.pools.getEvent;
goog.events.pools.releaseEvent;
(function() {
  var BAD_GC = !goog.events.ASSUME_GOOD_GC && goog.userAgent.jscript.HAS_JSCRIPT && !goog.userAgent.jscript.isVersion("5.7");
  function getObject() {
    return{count_:0, remaining_:0}
  }
  function getArray() {
    return[]
  }
  var proxyCallbackFunction;
  goog.events.pools.setProxyCallbackFunction = function(cb) {
    proxyCallbackFunction = cb
  };
  function getProxy() {
    var f = function(eventObject) {
      return proxyCallbackFunction.call(f.src, f.key, eventObject)
    };
    return f
  }
  function getListener() {
    return new goog.events.Listener
  }
  function getEvent() {
    return new goog.events.BrowserEvent
  }
  if(!BAD_GC) {
    goog.events.pools.getObject = getObject;
    goog.events.pools.releaseObject = goog.nullFunction;
    goog.events.pools.getArray = getArray;
    goog.events.pools.releaseArray = goog.nullFunction;
    goog.events.pools.getProxy = getProxy;
    goog.events.pools.releaseProxy = goog.nullFunction;
    goog.events.pools.getListener = getListener;
    goog.events.pools.releaseListener = goog.nullFunction;
    goog.events.pools.getEvent = getEvent;
    goog.events.pools.releaseEvent = goog.nullFunction
  }else {
    goog.events.pools.getObject = function() {
      return objectPool.getObject()
    };
    goog.events.pools.releaseObject = function(obj) {
      objectPool.releaseObject(obj)
    };
    goog.events.pools.getArray = function() {
      return arrayPool.getObject()
    };
    goog.events.pools.releaseArray = function(obj) {
      arrayPool.releaseObject(obj)
    };
    goog.events.pools.getProxy = function() {
      return proxyPool.getObject()
    };
    goog.events.pools.releaseProxy = function(obj) {
      proxyPool.releaseObject(getProxy())
    };
    goog.events.pools.getListener = function() {
      return listenerPool.getObject()
    };
    goog.events.pools.releaseListener = function(obj) {
      listenerPool.releaseObject(obj)
    };
    goog.events.pools.getEvent = function() {
      return eventPool.getObject()
    };
    goog.events.pools.releaseEvent = function(obj) {
      eventPool.releaseObject(obj)
    };
    var OBJECT_POOL_INITIAL_COUNT = 0;
    var OBJECT_POOL_MAX_COUNT = 600;
    var objectPool = new goog.structs.SimplePool(OBJECT_POOL_INITIAL_COUNT, OBJECT_POOL_MAX_COUNT);
    objectPool.setCreateObjectFn(getObject);
    var ARRAY_POOL_INITIAL_COUNT = 0;
    var ARRAY_POOL_MAX_COUNT = 600;
    var arrayPool = new goog.structs.SimplePool(ARRAY_POOL_INITIAL_COUNT, ARRAY_POOL_MAX_COUNT);
    arrayPool.setCreateObjectFn(getArray);
    var HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT = 0;
    var HANDLE_EVENT_PROXY_POOL_MAX_COUNT = 600;
    var proxyPool = new goog.structs.SimplePool(HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT, HANDLE_EVENT_PROXY_POOL_MAX_COUNT);
    proxyPool.setCreateObjectFn(getProxy);
    var LISTENER_POOL_INITIAL_COUNT = 0;
    var LISTENER_POOL_MAX_COUNT = 600;
    var listenerPool = new goog.structs.SimplePool(LISTENER_POOL_INITIAL_COUNT, LISTENER_POOL_MAX_COUNT);
    listenerPool.setCreateObjectFn(getListener);
    var EVENT_POOL_INITIAL_COUNT = 0;
    var EVENT_POOL_MAX_COUNT = 600;
    var eventPool = new goog.structs.SimplePool(EVENT_POOL_INITIAL_COUNT, EVENT_POOL_MAX_COUNT);
    eventPool.setCreateObjectFn(getEvent)
  }
})();
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.pools");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.requiresSyntheticEventPropagation_;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = goog.events.pools.getObject()
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = goog.events.pools.getObject();
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = goog.events.pools.getArray();
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.pools.getProxy();
      proxy.src = src;
      listenerObj = goog.events.pools.getListener();
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = goog.events.pools.getArray()
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          goog.events.pools.releaseProxy(proxy);
          goog.events.pools.releaseListener(listenerArray[oldIndex]);
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        goog.events.pools.releaseArray(listenerArray);
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type][capture]);
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type]);
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(goog.events.synthesizeEventPropagation_()) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = goog.events.pools.getEvent();
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = goog.events.pools.getArray();
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0;
        goog.events.pools.releaseArray(ancestors)
      }
      evt.dispose();
      goog.events.pools.releaseEvent(evt)
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_);
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.events.synthesizeEventPropagation_ = function() {
  if(goog.events.requiresSyntheticEventPropagation_ === undefined) {
    goog.events.requiresSyntheticEventPropagation_ = goog.userAgent.IE && !goog.global["addEventListener"]
  }
  return goog.events.requiresSyntheticEventPropagation_
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
clojure.browser.event.EventType = {};
clojure.browser.event.event_types = function event_types(this$) {
  if(function() {
    var and__3822__auto____26976 = this$;
    if(and__3822__auto____26976) {
      return this$.clojure$browser$event$EventType$event_types$arity$1
    }else {
      return and__3822__auto____26976
    }
  }()) {
    return this$.clojure$browser$event$EventType$event_types$arity$1(this$)
  }else {
    var x__2256__auto____26977 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____26978 = clojure.browser.event.event_types[goog.typeOf(x__2256__auto____26977)];
      if(or__3824__auto____26978) {
        return or__3824__auto____26978
      }else {
        var or__3824__auto____26979 = clojure.browser.event.event_types["_"];
        if(or__3824__auto____26979) {
          return or__3824__auto____26979
        }else {
          throw cljs.core.missing_protocol.call(null, "EventType.event-types", this$);
        }
      }
    }().call(null, this$)
  }
};
Element.prototype.clojure$browser$event$EventType$ = true;
Element.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__26980) {
    var vec__26981__26982 = p__26980;
    var k__26983 = cljs.core.nth.call(null, vec__26981__26982, 0, null);
    var v__26984 = cljs.core.nth.call(null, vec__26981__26982, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__26983.toLowerCase()), v__26984], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
goog.events.EventTarget.prototype.clojure$browser$event$EventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__26985) {
    var vec__26986__26987 = p__26985;
    var k__26988 = cljs.core.nth.call(null, vec__26986__26987, 0, null);
    var v__26989 = cljs.core.nth.call(null, vec__26986__26987, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__26988.toLowerCase()), v__26989], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false)
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen.cljs$lang$arity$3 = listen__3;
  listen.cljs$lang$arity$4 = listen__4;
  return listen
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false)
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once.cljs$lang$arity$3 = listen_once__3;
  listen_once.cljs$lang$arity$4 = listen_once__4;
  return listen_once
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false)
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten.cljs$lang$arity$3 = unlisten__3;
  unlisten.cljs$lang$arity$4 = unlisten__4;
  return unlisten
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key)
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event)
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e)
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount()
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.serialize = function(object) {
  return(new goog.json.Serializer).serialize(object)
};
goog.json.Serializer = function() {
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    this.serialize_(arr[i], sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return Boolean(opt_cancel)
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.getFunctionName = function(fn) {
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.logToSpeedTracer_ = function(msg) {
  if(goog.global["console"] && goog.global["console"]["markTimeline"]) {
    goog.global["console"]["markTimeline"](msg)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  this.logToSpeedTracer_("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.debug.Logger");
goog.require("goog.json");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.base(this);
  this.services_ = {}
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.debug.Logger.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if(opt_connectCb) {
    opt_connectCb()
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload}
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if(!service) {
    return
  }
  payload = this.decodePayload(serviceName, payload, service.objectPayload);
  if(goog.isDefAndNotNull(payload)) {
    service.callback(payload)
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if(service) {
    return service
  }else {
    if(this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload}
    }
  }
  this.logger.warning('Unknown service name "' + serviceName + '"');
  return null
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if(objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload)
    }catch(err) {
      this.logger.warning("Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null
    }
  }else {
    if(!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload)
    }
  }
  return payload
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  goog.dispose(this.logger);
  delete this.logger;
  delete this.services_;
  delete this.defaultService_
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.debug.Logger");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.channels_ = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while(length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength))
  }
  return s
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.debug.Logger.getLogger("goog.net.xpc");
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.net.xpc");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper()
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow()
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || ""
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this)
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER) {
    this.iframeElm_ = this.channel_.iframeElement_;
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this)
  }else {
    this.attemptSetup_()
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if(!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement
    }
    if(this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(retry) {
    if(!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this)
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected_()
  }else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if(!this.recursive_ && this.queue_.length == 0) {
    this.channel_.deliver_(serviceName, payload)
  }else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if(this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1)
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while(this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.deliver_(msg.serviceName, msg.payload)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null
};
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = []
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg"
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack"
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  goog.net.xpc.logger.fine("transport connect called");
  if(!this.initialized_) {
    goog.net.xpc.logger.fine("initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true
  }
  this.checkForeignFramesReady_()
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name]
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.net.xpc.logger.finest("constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr
};
goog.net.xpc.IframePollingTransport.prototype.innerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("innerPeerReconnect called");
  this.channel_.name = goog.net.xpc.getRandomString(10);
  goog.net.xpc.logger.finest("switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name)
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("outerPeerReconnect called");
  var frames = this.channel_.peerWindowObject_.frames;
  var length = frames.length;
  for(var i = 0;i < length;i++) {
    var frameName;
    try {
      if(frames[i] && frames[i].name) {
        frameName = frames[i].name
      }
    }catch(e) {
    }
    if(!frameName) {
      continue
    }
    var message = frameName.split("_");
    if(message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.net.xpc.logger.finest("deconstructSenderFrames called");
  if(this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null
  }
  if(this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if(!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.net.xpc.logger.finest("foreign frames not (yet) present");
    if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.INNER && !this.reconnectFrame_) {
      this.innerPeerReconnect_()
    }else {
      if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER) {
        this.outerPeerReconnect_()
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100)
  }else {
    goog.net.xpc.logger.fine("foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getMsgFrameName_()], goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getAckFrameName_()], goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_()
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.net.xpc.logger.finest("checking for receive frame: " + frameName);
  try {
    var winObj = this.channel_.peerWindowObject_.frames[frameName];
    if(!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false
    }
  }catch(e) {
    return false
  }
  return true
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.channel_.peerWindowObject_.frames;
  if(!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if(!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this)
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.net.xpc.logger.fine("local frames not (yet) present")
  }else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.net.xpc.logger.fine("local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.net.xpc.logger.fine("SETUP sent")
    }, this), 100)
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if(this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected_();
    if(this.deliveryQueue_) {
      goog.net.xpc.logger.fine("delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for(var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.deliver_(m.service, m.payload)
      }
      delete this.deliveryQueue_
    }
  }else {
    goog.net.xpc.logger.finest("checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_)
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.net.xpc.logger.finest("msg received: " + raw);
  if(raw == goog.net.xpc.SETUP) {
    if(!this.ackSender_) {
      return
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.net.xpc.logger.finest("SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if(pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame)
      }else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if(part0 == 1) {
          this.parts_ = []
        }
        this.parts_.push(frame);
        if(part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_
        }
      }
    }else {
      goog.net.xpc.logger.warning("received msg, but channel is not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.net.xpc.logger.finest("ack received: " + msgStr);
  if(msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected()) {
      if(!this.waitForAck_) {
        goog.net.xpc.logger.warning("got unexpected ack");
        return
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if(seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_()
      }else {
        goog.net.xpc.logger.warning("got ack with wrong sequence")
      }
    }else {
      goog.net.xpc.logger.warning("received ack, but channel not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if(this.waitForAck_ || !this.sendQueue_.length) {
    return
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.net.xpc.logger.finest("msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if(!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.net.xpc.logger.finest("queued delivery")
  }else {
    this.channel_.deliver_(service, payload)
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if(!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame)
  }else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while(pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_
    }
  }
  this.sendNextFrame_()
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var rcvd = false;
  try {
    for(var i = 0, l = goog.net.xpc.IframePollingTransport.receivers_.length;i < l;i++) {
      rcvd = rcvd || goog.net.xpc.IframePollingTransport.receivers_[i].receive()
    }
  }catch(e) {
    goog.net.xpc.logger.info("receive_() failed: " + e);
    goog.net.xpc.IframePollingTransport.receivers_[i].transport_.channel_.notifyTransportError_();
    if(!goog.net.xpc.IframePollingTransport.receivers_.length) {
      return
    }
  }
  var now = goog.now();
  if(rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t)
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.net.xpc.logger.fine("starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if(goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_)
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_)
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if(goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url
    }else {
      this.sendFrame_.location.replace(url)
    }
  }catch(e) {
    goog.net.xpc.logger.severe("sending failed", e)
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if(loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if(payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload))
    }
    return true
  }else {
    return false
  }
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_()
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if(goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if(!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_()
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while(goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.net.xpc.logger.finest("iframe removed")
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_()
  }
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if(!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP)
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if(!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  }else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if(!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0}
    }
    if(goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if(fragmentInfo.received != fragmentInfo.expected) {
      return
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr]
  }
  goog.net.xpc.channels_[channelName].deliver_(service, decodeURIComponent(payload))
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if(payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected_()
  }else {
    if(payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected_()
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if(goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for(var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr)
    }
  }else {
    this.send_(service, encodedPayload)
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if(goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    div.innerHTML = '<iframe onload="this.xpcOnload()"></iframe>';
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_
  }else {
    var ifr = this.getWindow().document.createElement("iframe");
    if(goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr})
    }else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_)
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if(this.peerIframeId_) {
    url += "," + this.peerIframeId_
  }
  url += "|" + service;
  if(opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.net.xpc.logger.finest("msg sent: " + url)
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.net.xpc.logger.finest("iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0)
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerHostname_ = peerHostname || "*"
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if(!goog.isNumber(value)) {
    value = 0
  }
  if(value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if(headDelim == -1 || serviceDelim == -1) {
    return false
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.net.xpc.logger.fine("messageReceived: channel=" + channelName + ", service=" + service + ", payload=" + payload);
  var channel = goog.net.xpc.channels_[channelName];
  if(channel) {
    channel.deliver_(service, payload, msgEvt.getBrowserEvent().origin);
    return true
  }
  for(var staleChannelName in goog.net.xpc.channels_) {
    var staleChannel = goog.net.xpc.channels_[staleChannelName];
    if(staleChannel.getRole() == goog.net.xpc.CrossPageChannel.Role.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && payload == goog.net.xpc.SETUP) {
      goog.net.xpc.logger.fine("changing channel name to " + channelName);
      staleChannel.name = channelName;
      delete goog.net.xpc.channels_[staleChannelName];
      goog.net.xpc.channels_[channelName] = staleChannel;
      staleChannel.deliver_(service, payload);
      return true
    }
  }
  goog.net.xpc.logger.info('channel name mismatch; message ignored"');
  return false
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  switch(payload) {
    case goog.net.xpc.SETUP:
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      break;
    case goog.net.xpc.SETUP_ACK_:
      this.channel_.notifyConnected_();
      break
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.connectWithRetries_()
};
goog.net.xpc.NativeMessagingTransport.prototype.connectWithRetries_ = function() {
  if(this.channel_.isConnected() || this.isDisposed()) {
    return
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  this.getWindow().setTimeout(goog.bind(this.connectWithRetries_, this), 100)
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.peerWindowObject_;
  if(!win) {
    goog.net.xpc.logger.fine("send(): window not ready");
    return
  }
  var obj = win.postMessage ? win : win.document;
  this.send = function(service, payload) {
    goog.net.xpc.logger.fine("send(): payload=" + payload + " to hostname=" + this.peerHostname_);
    obj.postMessage(this.channel_.name + "|" + service + ":" + payload, this.peerHostname_)
  };
  this.send(service, payload)
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if(value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
    }
  }
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if(listenWindow["nix_setup_complete"]) {
    return
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport = transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth = auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken = m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap = New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " = wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting global setup: " + e)
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER) {
    this.attemptOuterSetup_()
  }else {
    this.attemptInnerSetup_()
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  var innerFrame = this.channel_.iframeElement_;
  try {
    innerFrame.contentWindow.opener = this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_);
    this.localSetupCompleted_ = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  try {
    var opener = this.getWindow().opener;
    if(opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if(remoteAuthToken != this.remoteAuthToken_) {
        goog.net.xpc.logger.severe("Invalid auth token from other party");
        return
      }
      this.nixChannel_["CreateChannel"](this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
    return
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if(typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.net.xpc.logger.severe("Invalid NIX channel given to createChannel_")
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if(remoteAuthToken != this.remoteAuthToken_) {
    goog.net.xpc.logger.severe("Invalid auth token from other party");
    return
  }
  this.channel_.notifyConnected_()
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  function deliveryHandler() {
    this.channel_.deliver_(serviceName, payload)
  }
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1)
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if(typeof this.nixChannel_ !== "unknown") {
    goog.net.xpc.logger.severe("NIX channel not connected")
  }
  this.nixChannel_["SendMessage"](service, payload)
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.nixChannel_ = null
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.provide("goog.net.xpc.CrossPageChannel.Role");
goog.require("goog.Disposable");
goog.require("goog.Uri");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.json");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.base(this);
  for(var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if(uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  goog.net.xpc.channels_[this.name] = this;
  goog.events.listen(window, "unload", goog.net.xpc.CrossPageChannel.disposeAll_);
  goog.net.xpc.logger.info("CrossPageChannel created: " + this.name)
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if(goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING
  }else {
    if(goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD
    }else {
      if(goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY
      }else {
        if(goog.userAgent.IE) {
          transportType = goog.net.xpc.TransportTypes.NIX
        }else {
          if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI] && this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
            transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING
          }
        }
      }
    }
  }
  return transportType
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if(this.transport_) {
    return
  }
  if(!this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    this.cfg_[goog.net.xpc.CfgFields.TRANSPORT] = this.determineTransportType_()
  }
  switch(this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME], this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break
  }
  if(this.transport_) {
    goog.net.xpc.logger.info("Transport created: " + this.transport_.getName())
  }else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType()
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName()
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]
  }
  return peerCfg
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4)
  }
  var iframeElm = goog.dom.createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if(opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm)
  }else {
    iframeElm.style.width = iframeElm.style.height = "100%"
  }
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if(goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri)
  }
  if(opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()))
  }
  if(goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    this.deferConnect_ = true;
    window.setTimeout(goog.bind(function() {
      this.deferConnect_ = false;
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")");
      if(this.connectDeferred_) {
        this.connect(this.connectCb_)
      }
    }, this), 1)
  }else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")")
  }
  return iframeElm
};
goog.net.xpc.CrossPageChannel.prototype.deferConnect_ = false;
goog.net.xpc.CrossPageChannel.prototype.connectDeferred_ = false;
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if(this.deferConnect_) {
    goog.net.xpc.logger.info("connect() deferred");
    this.connectDeferred_ = true;
    return
  }
  goog.net.xpc.logger.info("connect()");
  if(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID])
  }
  if(this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if(!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]]
    }
    this.setPeerWindowObject(winObj)
  }
  if(!this.peerWindowObject_) {
    if(window == top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    }else {
      this.setPeerWindowObject(window.parent)
    }
  }
  this.createTransport_();
  this.transport_.connect()
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  if(!this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  this.transport_.dispose();
  this.transport_ = null;
  goog.net.xpc.logger.info('Channel "' + this.name + '" closed')
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = function() {
  if(this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.net.xpc.logger.info('Channel "' + this.name + '" connected');
  this.connectCb_()
};
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError_ = function() {
  goog.net.xpc.logger.info("Transport Error");
  this.close()
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if(!this.isConnected()) {
    goog.net.xpc.logger.severe("Can't send. Channel not connected.");
    return
  }
  if(this.peerWindowObject_.closed) {
    goog.net.xpc.logger.severe("Peer has disappeared.");
    this.close();
    return
  }
  if(goog.isObject(payload)) {
    payload = goog.json.serialize(payload)
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload)
};
goog.net.xpc.CrossPageChannel.prototype.deliver_ = function(serviceName, payload, opt_origin) {
  if(!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.net.xpc.logger.warning('Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return
  }
  if(this.isDisposed()) {
    goog.net.xpc.logger.warning("CrossPageChannel::deliver_(): Disposed.")
  }else {
    if(!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload)
    }else {
      if(this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload)
      }else {
        goog.net.xpc.logger.info("CrossPageChannel::deliver_(): Not connected.")
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name
  }
  return name.replace(/[%:|]/g, encodeURIComponent)
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1)
  }else {
    return name
  }
};
goog.net.xpc.CrossPageChannel.Role = {OUTER:0, INNER:1};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannel.Role.INNER : goog.net.xpc.CrossPageChannel.Role.OUTER
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME]
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels_[this.name]
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for(var name in goog.net.xpc.channels_) {
    var ch = goog.net.xpc.channels_[name];
    if(ch) {
      ch.dispose()
    }
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method || "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : new goog.net.XmlHttp
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    return this.xhr_ && this.xhr_.response
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.json");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__26839) {
  var vec__26840__26841 = p__26839;
  var k__26842 = cljs.core.nth.call(null, vec__26840__26841, 0, null);
  var v__26843 = cljs.core.nth.call(null, vec__26840__26841, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__26842.toLowerCase()), v__26843], true)
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = {};
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if(function() {
      var and__3822__auto____26860 = this$;
      if(and__3822__auto____26860) {
        return this$.clojure$browser$net$IConnection$connect$arity$1
      }else {
        return and__3822__auto____26860
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$)
    }else {
      var x__2256__auto____26861 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____26862 = clojure.browser.net.connect[goog.typeOf(x__2256__auto____26861)];
        if(or__3824__auto____26862) {
          return or__3824__auto____26862
        }else {
          var or__3824__auto____26863 = clojure.browser.net.connect["_"];
          if(or__3824__auto____26863) {
            return or__3824__auto____26863
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var connect__2 = function(this$, opt1) {
    if(function() {
      var and__3822__auto____26864 = this$;
      if(and__3822__auto____26864) {
        return this$.clojure$browser$net$IConnection$connect$arity$2
      }else {
        return and__3822__auto____26864
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1)
    }else {
      var x__2256__auto____26865 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____26866 = clojure.browser.net.connect[goog.typeOf(x__2256__auto____26865)];
        if(or__3824__auto____26866) {
          return or__3824__auto____26866
        }else {
          var or__3824__auto____26867 = clojure.browser.net.connect["_"];
          if(or__3824__auto____26867) {
            return or__3824__auto____26867
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1)
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if(function() {
      var and__3822__auto____26868 = this$;
      if(and__3822__auto____26868) {
        return this$.clojure$browser$net$IConnection$connect$arity$3
      }else {
        return and__3822__auto____26868
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2)
    }else {
      var x__2256__auto____26869 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____26870 = clojure.browser.net.connect[goog.typeOf(x__2256__auto____26869)];
        if(or__3824__auto____26870) {
          return or__3824__auto____26870
        }else {
          var or__3824__auto____26871 = clojure.browser.net.connect["_"];
          if(or__3824__auto____26871) {
            return or__3824__auto____26871
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2)
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if(function() {
      var and__3822__auto____26872 = this$;
      if(and__3822__auto____26872) {
        return this$.clojure$browser$net$IConnection$connect$arity$4
      }else {
        return and__3822__auto____26872
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3)
    }else {
      var x__2256__auto____26873 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____26874 = clojure.browser.net.connect[goog.typeOf(x__2256__auto____26873)];
        if(or__3824__auto____26874) {
          return or__3824__auto____26874
        }else {
          var or__3824__auto____26875 = clojure.browser.net.connect["_"];
          if(or__3824__auto____26875) {
            return or__3824__auto____26875
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3)
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3)
    }
    throw"Invalid arity: " + arguments.length;
  };
  connect.cljs$lang$arity$1 = connect__1;
  connect.cljs$lang$arity$2 = connect__2;
  connect.cljs$lang$arity$3 = connect__3;
  connect.cljs$lang$arity$4 = connect__4;
  return connect
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if(function() {
      var and__3822__auto____26896 = this$;
      if(and__3822__auto____26896) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2
      }else {
        return and__3822__auto____26896
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt)
    }else {
      var x__2256__auto____26897 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____26898 = clojure.browser.net.transmit[goog.typeOf(x__2256__auto____26897)];
        if(or__3824__auto____26898) {
          return or__3824__auto____26898
        }else {
          var or__3824__auto____26899 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____26899) {
            return or__3824__auto____26899
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt)
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if(function() {
      var and__3822__auto____26900 = this$;
      if(and__3822__auto____26900) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3
      }else {
        return and__3822__auto____26900
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2)
    }else {
      var x__2256__auto____26901 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____26902 = clojure.browser.net.transmit[goog.typeOf(x__2256__auto____26901)];
        if(or__3824__auto____26902) {
          return or__3824__auto____26902
        }else {
          var or__3824__auto____26903 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____26903) {
            return or__3824__auto____26903
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2)
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if(function() {
      var and__3822__auto____26904 = this$;
      if(and__3822__auto____26904) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4
      }else {
        return and__3822__auto____26904
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3)
    }else {
      var x__2256__auto____26905 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____26906 = clojure.browser.net.transmit[goog.typeOf(x__2256__auto____26905)];
        if(or__3824__auto____26906) {
          return or__3824__auto____26906
        }else {
          var or__3824__auto____26907 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____26907) {
            return or__3824__auto____26907
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3)
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if(function() {
      var and__3822__auto____26908 = this$;
      if(and__3822__auto____26908) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5
      }else {
        return and__3822__auto____26908
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4)
    }else {
      var x__2256__auto____26909 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____26910 = clojure.browser.net.transmit[goog.typeOf(x__2256__auto____26909)];
        if(or__3824__auto____26910) {
          return or__3824__auto____26910
        }else {
          var or__3824__auto____26911 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____26911) {
            return or__3824__auto____26911
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4)
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if(function() {
      var and__3822__auto____26912 = this$;
      if(and__3822__auto____26912) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6
      }else {
        return and__3822__auto____26912
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5)
    }else {
      var x__2256__auto____26913 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____26914 = clojure.browser.net.transmit[goog.typeOf(x__2256__auto____26913)];
        if(or__3824__auto____26914) {
          return or__3824__auto____26914
        }else {
          var or__3824__auto____26915 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____26915) {
            return or__3824__auto____26915
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5)
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5)
    }
    throw"Invalid arity: " + arguments.length;
  };
  transmit.cljs$lang$arity$2 = transmit__2;
  transmit.cljs$lang$arity$3 = transmit__3;
  transmit.cljs$lang$arity$4 = transmit__4;
  transmit.cljs$lang$arity$5 = transmit__5;
  transmit.cljs$lang$arity$6 = transmit__6;
  return transmit
}();
clojure.browser.net.close = function close(this$) {
  if(function() {
    var and__3822__auto____26920 = this$;
    if(and__3822__auto____26920) {
      return this$.clojure$browser$net$IConnection$close$arity$1
    }else {
      return and__3822__auto____26920
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$)
  }else {
    var x__2256__auto____26921 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____26922 = clojure.browser.net.close[goog.typeOf(x__2256__auto____26921)];
      if(or__3824__auto____26922) {
        return or__3824__auto____26922
      }else {
        var or__3824__auto____26923 = clojure.browser.net.close["_"];
        if(or__3824__auto____26923) {
          return or__3824__auto____26923
        }else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$)
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__26924) {
    var vec__26925__26926 = p__26924;
    var k__26927 = cljs.core.nth.call(null, vec__26925__26926, 0, null);
    var v__26928 = cljs.core.nth.call(null, vec__26925__26926, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__26927.toLowerCase()), v__26928], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))))
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  return clojure.browser.net.transmit.call(null, this$, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  this$.setTimeoutInterval(timeout);
  return this$.send(uri, method, content, headers)
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__26929) {
  var vec__26930__26931 = p__26929;
  var k__26932 = cljs.core.nth.call(null, vec__26930__26931, 0, null);
  var v__26933 = cljs.core.nth.call(null, vec__26930__26931, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__26932.toLowerCase()), v__26933], true)
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo
};
clojure.browser.net.ICrossPageChannel = {};
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if(function() {
      var and__3822__auto____26942 = this$;
      if(and__3822__auto____26942) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3
      }else {
        return and__3822__auto____26942
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn)
    }else {
      var x__2256__auto____26943 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____26944 = clojure.browser.net.register_service[goog.typeOf(x__2256__auto____26943)];
        if(or__3824__auto____26944) {
          return or__3824__auto____26944
        }else {
          var or__3824__auto____26945 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____26945) {
            return or__3824__auto____26945
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn)
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if(function() {
      var and__3822__auto____26946 = this$;
      if(and__3822__auto____26946) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4
      }else {
        return and__3822__auto____26946
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_)
    }else {
      var x__2256__auto____26947 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____26948 = clojure.browser.net.register_service[goog.typeOf(x__2256__auto____26947)];
        if(or__3824__auto____26948) {
          return or__3824__auto____26948
        }else {
          var or__3824__auto____26949 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____26949) {
            return or__3824__auto____26949
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_)
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  register_service.cljs$lang$arity$3 = register_service__3;
  register_service.cljs$lang$arity$4 = register_service__4;
  return register_service
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  return clojure.browser.net.connect.call(null, this$, null)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  return clojure.browser.net.connect.call(null, this$, on_connect_fn, config_iframe_fn, document.body)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  this$.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  return this$.send(cljs.core.name.call(null, service_name), payload)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  return this$.close(cljs.core.List.EMPTY)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  return clojure.browser.net.register_service.call(null, this$, service_name, fn, false)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  return this$.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_)
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__3974__auto____26961 = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if(cljs.core.truth_(temp__3974__auto____26961)) {
      var config__26962 = temp__3974__auto____26961;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config__26962))
    }else {
      return null
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__26963) {
      var vec__26964__26965 = p__26963;
      var k__26966 = cljs.core.nth.call(null, vec__26964__26965, 0, null);
      var v__26967 = cljs.core.nth.call(null, vec__26964__26965, 1, null);
      var temp__3971__auto____26968 = cljs.core._lookup.call(null, clojure.browser.net.xpc_config_fields, k__26966, null);
      if(cljs.core.truth_(temp__3971__auto____26968)) {
        var field__26969 = temp__3971__auto____26968;
        var G__26970__26971 = sum;
        G__26970__26971[field__26969] = v__26967;
        return G__26970__26971
      }else {
        return sum
      }
    }, {}, config))
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config)
    }
    throw"Invalid arity: " + arguments.length;
  };
  xpc_connection.cljs$lang$arity$0 = xpc_connection__0;
  xpc_connection.cljs$lang$arity$1 = xpc_connection__1;
  return xpc_connection
}();
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.repl_print = function repl_print(data) {
  var temp__3971__auto____26821 = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  if(cljs.core.truth_(temp__3971__auto____26821)) {
    var conn__26822 = temp__3971__auto____26821;
    return clojure.browser.net.transmit.call(null, conn__26822, "\ufdd0'print", cljs.core.pr_str.call(null, data))
  }else {
    return null
  }
};
clojure.browser.repl.evaluate_javascript = function evaluate_javascript(conn, block) {
  var result__26828 = function() {
    try {
      return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value"], {"\ufdd0'status":"\ufdd0'success", "\ufdd0'value":[cljs.core.str(eval(block))].join("")})
    }catch(e26826) {
      if(cljs.core.instance_QMARK_.call(null, Error, e26826)) {
        var e__26827 = e26826;
        return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value", "\ufdd0'stacktrace"], {"\ufdd0'status":"\ufdd0'exception", "\ufdd0'value":cljs.core.pr_str.call(null, e__26827), "\ufdd0'stacktrace":cljs.core.truth_(e__26827.hasOwnProperty("stack")) ? e__26827.stack : "No stacktrace available."})
      }else {
        if("\ufdd0'else") {
          throw e26826;
        }else {
          return null
        }
      }
    }
  }();
  return cljs.core.pr_str.call(null, result__26828)
};
clojure.browser.repl.send_result = function send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0)
};
clojure.browser.repl.send_print = function() {
  var send_print = null;
  var send_print__2 = function(url, data) {
    return send_print.call(null, url, data, 0)
  };
  var send_print__3 = function(url, data, n) {
    var conn__26830 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, conn__26830, "\ufdd0'error", function(_) {
      if(n < 10) {
        return send_print.call(null, url, data, n + 1)
      }else {
        return console.log([cljs.core.str("Could not send "), cljs.core.str(data), cljs.core.str(" after "), cljs.core.str(n), cljs.core.str(" attempts.")].join(""))
      }
    });
    return clojure.browser.net.transmit.call(null, conn__26830, url, "POST", data, null, 0)
  };
  send_print = function(url, data, n) {
    switch(arguments.length) {
      case 2:
        return send_print__2.call(this, url, data);
      case 3:
        return send_print__3.call(this, url, data, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  send_print.cljs$lang$arity$2 = send_print__2;
  send_print.cljs$lang$arity$3 = send_print__3;
  return send_print
}();
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function wrap_message(t, data) {
  return cljs.core.pr_str.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'content", "\ufdd0'order"], {"\ufdd0'type":t, "\ufdd0'content":data, "\ufdd0'order":cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)}))
};
clojure.browser.repl.start_evaluator = function start_evaluator(url) {
  var temp__3971__auto____26834 = clojure.browser.net.xpc_connection.call(null);
  if(cljs.core.truth_(temp__3971__auto____26834)) {
    var repl_connection__26835 = temp__3971__auto____26834;
    var connection__26836 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, connection__26836, "\ufdd0'success", function(e) {
      return clojure.browser.net.transmit.call(null, repl_connection__26835, "\ufdd0'evaluate-javascript", e.currentTarget.getResponseText(cljs.core.List.EMPTY))
    });
    clojure.browser.net.register_service.call(null, repl_connection__26835, "\ufdd0'send-result", function(data) {
      return clojure.browser.repl.send_result.call(null, connection__26836, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'result", data))
    });
    clojure.browser.net.register_service.call(null, repl_connection__26835, "\ufdd0'print", function(data) {
      return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'print", data))
    });
    clojure.browser.net.connect.call(null, repl_connection__26835, cljs.core.constantly.call(null, null));
    return setTimeout(function() {
      return clojure.browser.repl.send_result.call(null, connection__26836, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'ready", "ready"))
    }, 50)
  }else {
    return alert("No 'xpc' param provided to child iframe.")
  }
};
clojure.browser.repl.connect = function connect(repl_server_url) {
  var repl_connection__26838 = clojure.browser.net.xpc_connection.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'peer_uri"], {"\ufdd0'peer_uri":repl_server_url}));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection__26838));
  clojure.browser.net.register_service.call(null, repl_connection__26838, "\ufdd0'evaluate-javascript", function(js) {
    return clojure.browser.net.transmit.call(null, repl_connection__26838, "\ufdd0'send-result", clojure.browser.repl.evaluate_javascript.call(null, repl_connection__26838, js))
  });
  return clojure.browser.net.connect.call(null, repl_connection__26838, cljs.core.constantly.call(null, null), function(iframe) {
    return iframe.style.display = "none"
  })
};
goog.provide("shoreleave.brepl");
goog.require("cljs.core");
goog.require("clojure.browser.repl");
shoreleave.brepl.connect = function connect() {
  return clojure.browser.repl.connect.call(null, "http://localhost:9000/repl")
};
goog.provide("shoreleave.common");
goog.require("cljs.core");
goog.require("shoreleave.brepl");
shoreleave.common.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        var out__26781 = {};
        var G__26782__26783 = cljs.core.seq.call(null, x);
        if(G__26782__26783) {
          var G__26785__26787 = cljs.core.first.call(null, G__26782__26783);
          var vec__26786__26788 = G__26785__26787;
          var k__26789 = cljs.core.nth.call(null, vec__26786__26788, 0, null);
          var v__26790 = cljs.core.nth.call(null, vec__26786__26788, 1, null);
          var G__26782__26791 = G__26782__26783;
          var G__26785__26792 = G__26785__26787;
          var G__26782__26793 = G__26782__26791;
          while(true) {
            var vec__26794__26795 = G__26785__26792;
            var k__26796 = cljs.core.nth.call(null, vec__26794__26795, 0, null);
            var v__26797 = cljs.core.nth.call(null, vec__26794__26795, 1, null);
            var G__26782__26798 = G__26782__26793;
            out__26781[cljs.core.name.call(null, k__26796)] = clj__GT_js.call(null, v__26797);
            var temp__3974__auto____26799 = cljs.core.next.call(null, G__26782__26798);
            if(temp__3974__auto____26799) {
              var G__26782__26800 = temp__3974__auto____26799;
              var G__26801 = cljs.core.first.call(null, G__26782__26800);
              var G__26802 = G__26782__26800;
              G__26785__26792 = G__26801;
              G__26782__26793 = G__26802;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return out__26781
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
        }else {
          if("\ufdd0'else") {
            return x
          }else {
            return null
          }
        }
      }
    }
  }
};
shoreleave.common.args_map = function args_map(location_str) {
  var query_args_obj__26804 = new goog.Uri.QueryData(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["#", "?"]), cljs.core._lookup.call(null, location_str, 0, null)) ? cljs.core.subs.call(null, location_str, 1) : location_str);
  return cljs.core.zipmap.call(null, cljs.core.map.call(null, cljs.core.keyword, query_args_obj__26804.getKeys()), query_args_obj__26804.getValues())
};
shoreleave.common.query_args_map = function query_args_map() {
  return shoreleave.common.args_map.call(null, window.location.search)
};
shoreleave.common.hash_args_map = function hash_args_map() {
  return shoreleave.common.args_map.call(null, window.location.hash)
};
shoreleave.common.set_window_hash_args = function set_window_hash_args(args_map) {
  var hash_str__26817 = cljs.core.reduce.call(null, function(old_str, p__26812) {
    var vec__26813__26814 = p__26812;
    var k__26815 = cljs.core.nth.call(null, vec__26813__26814, 0, null);
    var v__26816 = cljs.core.nth.call(null, vec__26813__26814, 1, null);
    return[cljs.core.str(old_str), cljs.core.str(cljs.core.name.call(null, k__26815)), cljs.core.str("="), cljs.core.str(v__26816), cljs.core.str("&")].join("")
  }, "#", args_map);
  var clean_hash_str__26818 = cljs.core.subs.call(null, hash_str__26817, 0, cljs.core.count.call(null, hash_str__26817) - 1);
  window.location.hash = clean_hash_str__26818;
  return args_map
};
shoreleave.common.toggle_brepl = function() {
  var toggle_brepl = null;
  var toggle_brepl__0 = function() {
    return toggle_brepl.call(null, shoreleave.common.query_args_map.call(null))
  };
  var toggle_brepl__1 = function(query_map) {
    return toggle_brepl.call(null, query_map, "\ufdd0'brepl")
  };
  var toggle_brepl__2 = function(query_map, query_key) {
    if(cljs.core.truth_(query_map.call(null, query_key))) {
      return shoreleave.brepl.connect.call(null)
    }else {
      return null
    }
  };
  toggle_brepl = function(query_map, query_key) {
    switch(arguments.length) {
      case 0:
        return toggle_brepl__0.call(this);
      case 1:
        return toggle_brepl__1.call(this, query_map);
      case 2:
        return toggle_brepl__2.call(this, query_map, query_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  toggle_brepl.cljs$lang$arity$0 = toggle_brepl__0;
  toggle_brepl.cljs$lang$arity$1 = toggle_brepl__1;
  toggle_brepl.cljs$lang$arity$2 = toggle_brepl__2;
  return toggle_brepl
}();
goog.provide("shoreleave.remotes.common");
goog.require("cljs.core");
goog.require("shoreleave.common");
goog.require("shoreleave.common");
goog.require("shoreleave.browser.cookies");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.Uri.QueryData");
goog.require("clojure.string");
shoreleave.remotes.common.rand_id_str = function rand_id_str() {
  return goog.string.getRandomString()
};
shoreleave.remotes.common.__GT_url_method = function __GT_url_method(m) {
  return clojure.string.upper_case.call(null, cljs.core.name.call(null, m))
};
shoreleave.remotes.common.parse_route = function parse_route(route) {
  if(cljs.core.string_QMARK_.call(null, route)) {
    return cljs.core.PersistentVector.fromArray(["GET", route], true)
  }else {
    if(cljs.core.vector_QMARK_.call(null, route)) {
      var vec__26994__26995 = route;
      var m__26996 = cljs.core.nth.call(null, vec__26994__26995, 0, null);
      var u__26997 = cljs.core.nth.call(null, vec__26994__26995, 1, null);
      return cljs.core.PersistentVector.fromArray([shoreleave.remotes.common.__GT_url_method.call(null, m__26996), u__26997], true)
    }else {
      if("\ufdd0'else") {
        return cljs.core.PersistentVector.fromArray(["GET", route], true)
      }else {
        return null
      }
    }
  }
};
shoreleave.remotes.common.__GT_simple_callback = function __GT_simple_callback(callback) {
  if(cljs.core.truth_(callback)) {
    return function(req) {
      var data__26999 = req.getResponseText();
      return callback.call(null, data__26999)
    }
  }else {
    return null
  }
};
shoreleave.remotes.common.csrf_protected = function csrf_protected(content_map, method) {
  var temp__3971__auto____27004 = function() {
    var and__3822__auto____27003 = cljs.core._EQ_.call(null, method, "POST");
    if(and__3822__auto____27003) {
      return(new cljs.core.Keyword("\ufdd0'__anti-forgery-token")).call(null, shoreleave.browser.cookies.cookies)
    }else {
      return and__3822__auto____27003
    }
  }();
  if(cljs.core.truth_(temp__3971__auto____27004)) {
    var anti_forgery_token__27005 = temp__3971__auto____27004;
    return cljs.core.merge.call(null, content_map, cljs.core.ObjMap.fromObject(["\ufdd0'__anti-forgery-token"], {"\ufdd0'__anti-forgery-token":anti_forgery_token__27005}))
  }else {
    return content_map
  }
};
shoreleave.remotes.common.__GT_data_str = function __GT_data_str(d) {
  var cur__27008 = shoreleave.common.clj__GT_js.call(null, d);
  var query__27009 = goog.Uri.QueryData.createFromMap(new goog.structs.Map(cur__27008));
  return[cljs.core.str(query__27009)].join("")
};
goog.provide("shoreleave.remotes.xhr");
goog.require("cljs.core");
goog.require("shoreleave.common");
goog.require("shoreleave.common");
goog.require("shoreleave.remotes.common");
goog.require("goog.events");
goog.require("goog.net.XhrIo");
shoreleave.remotes.xhr.xhr = function() {
  var xhr__delegate = function(route, opts) {
    var req__26748 = new goog.net.XhrIo;
    var vec__26746__26749 = shoreleave.remotes.common.parse_route.call(null, route);
    var method__26750 = cljs.core.nth.call(null, vec__26746__26749, 0, null);
    var uri__26751 = cljs.core.nth.call(null, vec__26746__26749, 1, null);
    var map__26747__26752 = cljs.core.apply.call(null, cljs.core.hash_map, opts);
    var map__26747__26753 = cljs.core.seq_QMARK_.call(null, map__26747__26752) ? cljs.core.apply.call(null, cljs.core.hash_map, map__26747__26752) : map__26747__26752;
    var headers__26754 = cljs.core._lookup.call(null, map__26747__26753, "\ufdd0'headers", null);
    var content__26755 = cljs.core._lookup.call(null, map__26747__26753, "\ufdd0'content", null);
    var on_success__26756 = cljs.core._lookup.call(null, map__26747__26753, "\ufdd0'on-success", null);
    var content__26757 = shoreleave.remotes.common.csrf_protected.call(null, content__26755, method__26750);
    var data__26758 = shoreleave.remotes.common.__GT_data_str.call(null, content__26757);
    var callback__26759 = shoreleave.remotes.common.__GT_simple_callback.call(null, on_success__26756);
    if(cljs.core.truth_(callback__26759)) {
      goog.events.listen(req__26748, goog.net.EventType.COMPLETE, function() {
        return callback__26759.call(null, req__26748)
      })
    }else {
    }
    return req__26748.send(uri__26751, method__26750, data__26758, cljs.core.truth_(headers__26754) ? shoreleave.common.clj__GT_js.call(null, headers__26754) : null)
  };
  var xhr = function(route, var_args) {
    var opts = null;
    if(goog.isDef(var_args)) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return xhr__delegate.call(this, route, opts)
  };
  xhr.cljs$lang$maxFixedArity = 1;
  xhr.cljs$lang$applyTo = function(arglist__26760) {
    var route = cljs.core.first(arglist__26760);
    var opts = cljs.core.rest(arglist__26760);
    return xhr__delegate(route, opts)
  };
  xhr.cljs$lang$arity$variadic = xhr__delegate;
  return xhr
}();
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3822__auto____26463 = reader;
    if(and__3822__auto____26463) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3822__auto____26463
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__2256__auto____26464 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____26465 = cljs.reader.read_char[goog.typeOf(x__2256__auto____26464)];
      if(or__3824__auto____26465) {
        return or__3824__auto____26465
      }else {
        var or__3824__auto____26466 = cljs.reader.read_char["_"];
        if(or__3824__auto____26466) {
          return or__3824__auto____26466
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3822__auto____26471 = reader;
    if(and__3822__auto____26471) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3822__auto____26471
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__2256__auto____26472 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____26473 = cljs.reader.unread[goog.typeOf(x__2256__auto____26472)];
      if(or__3824__auto____26473) {
        return or__3824__auto____26473
      }else {
        var or__3824__auto____26474 = cljs.reader.unread["_"];
        if(or__3824__auto____26474) {
          return or__3824__auto____26474
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
cljs.reader.StringPushbackReader = function(s, index_atom, buffer_atom) {
  this.s = s;
  this.index_atom = index_atom;
  this.buffer_atom = buffer_atom
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var this__26475 = this;
  if(cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, this__26475.buffer_atom))) {
    var idx__26476 = cljs.core.deref.call(null, this__26475.index_atom);
    cljs.core.swap_BANG_.call(null, this__26475.index_atom, cljs.core.inc);
    return this__26475.s[idx__26476]
  }else {
    var buf__26477 = cljs.core.deref.call(null, this__26475.buffer_atom);
    cljs.core.swap_BANG_.call(null, this__26475.buffer_atom, cljs.core.rest);
    return cljs.core.first.call(null, buf__26477)
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var this__26478 = this;
  return cljs.core.swap_BANG_.call(null, this__26478.buffer_atom, function(p1__26458_SHARP_) {
    return cljs.core.cons.call(null, ch, p1__26458_SHARP_)
  })
};
cljs.reader.StringPushbackReader;
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3824__auto____26480 = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3824__auto____26480)) {
    return or__3824__auto____26480
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3824__auto____26485 = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3824__auto____26485) {
    return or__3824__auto____26485
  }else {
    var and__3822__auto____26487 = function() {
      var or__3824__auto____26486 = "+" === initch;
      if(or__3824__auto____26486) {
        return or__3824__auto____26486
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3822__auto____26487)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch__26488 = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch__26488);
        return next_ch__26488
      }())
    }else {
      return and__3822__auto____26487
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(goog.isDef(var_args)) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__26489) {
    var rdr = cljs.core.first(arglist__26489);
    var msg = cljs.core.rest(arglist__26489);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$lang$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3822__auto____26493 = !(ch === "#");
  if(and__3822__auto____26493) {
    var and__3822__auto____26494 = !(ch === "'");
    if(and__3822__auto____26494) {
      var and__3822__auto____26495 = !(ch === ":");
      if(and__3822__auto____26495) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3822__auto____26495
      }
    }else {
      return and__3822__auto____26494
    }
  }else {
    return and__3822__auto____26493
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb__26500 = new goog.string.StringBuffer(initch);
  var ch__26501 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3824__auto____26502 = ch__26501 == null;
      if(or__3824__auto____26502) {
        return or__3824__auto____26502
      }else {
        var or__3824__auto____26503 = cljs.reader.whitespace_QMARK_.call(null, ch__26501);
        if(or__3824__auto____26503) {
          return or__3824__auto____26503
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch__26501)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch__26501);
      return sb__26500.toString()
    }else {
      var G__26504 = function() {
        sb__26500.append(ch__26501);
        return sb__26500
      }();
      var G__26505 = cljs.reader.read_char.call(null, rdr);
      sb__26500 = G__26504;
      ch__26501 = G__26505;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch__26509 = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3824__auto____26510 = ch__26509 === "n";
      if(or__3824__auto____26510) {
        return or__3824__auto____26510
      }else {
        var or__3824__auto____26511 = ch__26509 === "r";
        if(or__3824__auto____26511) {
          return or__3824__auto____26511
        }else {
          return ch__26509 == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches__26513 = re.exec(s);
  if(matches__26513 == null) {
    return null
  }else {
    if(matches__26513.length === 1) {
      return matches__26513[0]
    }else {
      return matches__26513
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups__26521 = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3__26522 = groups__26521[2];
  if(!function() {
    var or__3824__auto____26523 = group3__26522 == null;
    if(or__3824__auto____26523) {
      return or__3824__auto____26523
    }else {
      return group3__26522.length < 1
    }
  }()) {
    return 0
  }else {
    var negate__26524 = "-" === groups__26521[1] ? -1 : 1;
    var a__26525 = cljs.core.truth_(groups__26521[3]) ? [groups__26521[3], 10] : cljs.core.truth_(groups__26521[4]) ? [groups__26521[4], 16] : cljs.core.truth_(groups__26521[5]) ? [groups__26521[5], 8] : cljs.core.truth_(groups__26521[7]) ? [groups__26521[7], parseInt(groups__26521[7])] : "\ufdd0'default" ? [null, null] : null;
    var n__26526 = a__26525[0];
    var radix__26527 = a__26525[1];
    if(n__26526 == null) {
      return null
    }else {
      return negate__26524 * parseInt(n__26526, radix__26527)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups__26531 = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator__26532 = groups__26531[1];
  var denominator__26533 = groups__26531[2];
  return parseInt(numinator__26532) / parseInt(denominator__26533)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches__26536 = re.exec(s);
  if(function() {
    var and__3822__auto____26537 = !(matches__26536 == null);
    if(and__3822__auto____26537) {
      return matches__26536[0] === s
    }else {
      return and__3822__auto____26537
    }
  }()) {
    if(matches__26536.length === 1) {
      return matches__26536[0]
    }else {
      return matches__26536
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\u0008"
            }else {
              if(c === "f") {
                return"\u000c"
              }else {
                if("\ufdd0'else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code__26539 = parseInt(code_str, 16);
  return String.fromCharCode(code__26539)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch__26542 = cljs.reader.read_char.call(null, reader);
  var mapresult__26543 = cljs.reader.escape_char_map.call(null, ch__26542);
  if(cljs.core.truth_(mapresult__26543)) {
    return mapresult__26543
  }else {
    if(ch__26542 === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch__26542, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch__26542 === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch__26542, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch__26542)) {
          return String.fromCharCode(ch__26542)
        }else {
          if("\ufdd0'else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch__26542)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch__26545 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch__26545))) {
      var G__26546 = cljs.reader.read_char.call(null, rdr);
      ch__26545 = G__26546;
      continue
    }else {
      return ch__26545
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a__26553 = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch__26554 = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch__26554)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF")
    }
    if(delim === ch__26554) {
      return cljs.core.persistent_BANG_.call(null, a__26553)
    }else {
      var temp__3971__auto____26555 = cljs.reader.macros.call(null, ch__26554);
      if(cljs.core.truth_(temp__3971__auto____26555)) {
        var macrofn__26556 = temp__3971__auto____26555;
        var mret__26557 = macrofn__26556.call(null, rdr, ch__26554);
        var G__26559 = mret__26557 === rdr ? a__26553 : cljs.core.conj_BANG_.call(null, a__26553, mret__26557);
        a__26553 = G__26559;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch__26554);
        var o__26558 = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__26560 = o__26558 === rdr ? a__26553 : cljs.core.conj_BANG_.call(null, a__26553, o__26558);
        a__26553 = G__26560;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch__26565 = cljs.reader.read_char.call(null, rdr);
  var dm__26566 = cljs.reader.dispatch_macros.call(null, ch__26565);
  if(cljs.core.truth_(dm__26566)) {
    return dm__26566.call(null, rdr, _)
  }else {
    var temp__3971__auto____26567 = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch__26565);
    if(cljs.core.truth_(temp__3971__auto____26567)) {
      var obj__26568 = temp__3971__auto____26567;
      return obj__26568
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch__26565)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l__26570 = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l__26570))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l__26570)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer__26577 = new goog.string.StringBuffer(initch);
  var ch__26578 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____26579 = ch__26578 == null;
      if(or__3824__auto____26579) {
        return or__3824__auto____26579
      }else {
        var or__3824__auto____26580 = cljs.reader.whitespace_QMARK_.call(null, ch__26578);
        if(or__3824__auto____26580) {
          return or__3824__auto____26580
        }else {
          return cljs.reader.macros.call(null, ch__26578)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch__26578);
      var s__26581 = buffer__26577.toString();
      var or__3824__auto____26582 = cljs.reader.match_number.call(null, s__26581);
      if(cljs.core.truth_(or__3824__auto____26582)) {
        return or__3824__auto____26582
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s__26581, "]")
      }
    }else {
      var G__26583 = function() {
        buffer__26577.append(ch__26578);
        return buffer__26577
      }();
      var G__26584 = cljs.reader.read_char.call(null, reader);
      buffer__26577 = G__26583;
      ch__26578 = G__26584;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer__26587 = new goog.string.StringBuffer;
  var ch__26588 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch__26588 == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading string")
    }else {
      if("\\" === ch__26588) {
        var G__26589 = function() {
          buffer__26587.append(cljs.reader.escape_char.call(null, buffer__26587, reader));
          return buffer__26587
        }();
        var G__26590 = cljs.reader.read_char.call(null, reader);
        buffer__26587 = G__26589;
        ch__26588 = G__26590;
        continue
      }else {
        if('"' === ch__26588) {
          return buffer__26587.toString()
        }else {
          if("\ufdd0'default") {
            var G__26591 = function() {
              buffer__26587.append(ch__26588);
              return buffer__26587
            }();
            var G__26592 = cljs.reader.read_char.call(null, reader);
            buffer__26587 = G__26591;
            ch__26588 = G__26592;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token__26594 = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token__26594, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token__26594, 0, token__26594.indexOf("/")), cljs.core.subs.call(null, token__26594, token__26594.indexOf("/") + 1, token__26594.length))
  }else {
    return cljs.reader.special_symbols.call(null, token__26594, cljs.core.symbol.call(null, token__26594))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token__26604 = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a__26605 = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token__26604);
  var token__26606 = a__26605[0];
  var ns__26607 = a__26605[1];
  var name__26608 = a__26605[2];
  if(cljs.core.truth_(function() {
    var or__3824__auto____26610 = function() {
      var and__3822__auto____26609 = !(void 0 === ns__26607);
      if(and__3822__auto____26609) {
        return ns__26607.substring(ns__26607.length - 2, ns__26607.length) === ":/"
      }else {
        return and__3822__auto____26609
      }
    }();
    if(cljs.core.truth_(or__3824__auto____26610)) {
      return or__3824__auto____26610
    }else {
      var or__3824__auto____26611 = name__26608[name__26608.length - 1] === ":";
      if(or__3824__auto____26611) {
        return or__3824__auto____26611
      }else {
        return!(token__26606.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__26606)
  }else {
    if(function() {
      var and__3822__auto____26612 = !(ns__26607 == null);
      if(and__3822__auto____26612) {
        return ns__26607.length > 0
      }else {
        return and__3822__auto____26612
      }
    }()) {
      return cljs.core.keyword.call(null, ns__26607.substring(0, ns__26607.indexOf("/")), name__26608)
    }else {
      return cljs.core.keyword.call(null, token__26606)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(cljs.core.symbol_QMARK_.call(null, f)) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArrays([f], [true])
      }else {
        if("\ufdd0'else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m__26618 = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m__26618)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o__26619 = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__26620__26621 = o__26619;
    if(G__26620__26621) {
      if(function() {
        var or__3824__auto____26622 = G__26620__26621.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3824__auto____26622) {
          return or__3824__auto____26622
        }else {
          return G__26620__26621.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__26620__26621.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__26620__26621)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__26620__26621)
    }
  }()) {
    return cljs.core.with_meta.call(null, o__26619, cljs.core.merge.call(null, cljs.core.meta.call(null, o__26619), m__26618))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, "\ufdd1'quote")
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, "\ufdd1'deref")
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0'else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "<") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0'else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch__26626 = cljs.reader.read_char.call(null, reader);
    if(ch__26626 == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch__26626)) {
        var G__26629 = reader;
        var G__26630 = eof_is_error;
        var G__26631 = sentinel;
        var G__26632 = is_recursive;
        reader = G__26629;
        eof_is_error = G__26630;
        sentinel = G__26631;
        is_recursive = G__26632;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch__26626)) {
          var G__26633 = cljs.reader.read_comment.call(null, reader, ch__26626);
          var G__26634 = eof_is_error;
          var G__26635 = sentinel;
          var G__26636 = is_recursive;
          reader = G__26633;
          eof_is_error = G__26634;
          sentinel = G__26635;
          is_recursive = G__26636;
          continue
        }else {
          if("\ufdd0'else") {
            var f__26627 = cljs.reader.macros.call(null, ch__26626);
            var res__26628 = cljs.core.truth_(f__26627) ? f__26627.call(null, reader, ch__26626) : cljs.reader.number_literal_QMARK_.call(null, reader, ch__26626) ? cljs.reader.read_number.call(null, reader, ch__26626) : "\ufdd0'else" ? cljs.reader.read_symbol.call(null, reader, ch__26626) : null;
            if(res__26628 === reader) {
              var G__26637 = reader;
              var G__26638 = eof_is_error;
              var G__26639 = sentinel;
              var G__26640 = is_recursive;
              reader = G__26637;
              eof_is_error = G__26638;
              sentinel = G__26639;
              is_recursive = G__26640;
              continue
            }else {
              return res__26628
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r__26642 = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r__26642, true, null, false)
};
cljs.reader.zero_fill_right = function zero_fill_right(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return s.substring(0, width)
    }else {
      if("\ufdd0'else") {
        var b__26644 = new goog.string.StringBuffer(s);
        while(true) {
          if(b__26644.getLength() < width) {
            var G__26645 = b__26644.append("0");
            b__26644 = G__26645;
            continue
          }else {
            return b__26644.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return num % div === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3822__auto____26648 = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3822__auto____26648)) {
    var or__3824__auto____26649 = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3824__auto____26649)) {
      return or__3824__auto____26649
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3822__auto____26648
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm__26654 = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap__26655 = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core._lookup.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap__26655 : dim_norm__26654, month, null)
  }
}();
cljs.reader.parse_and_validate_timestamp = function() {
  var timestamp__26656 = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
  var check__26658 = function(low, n, high, msg) {
    if(function() {
      var and__3822__auto____26657 = low <= n;
      if(and__3822__auto____26657) {
        return n <= high
      }else {
        return and__3822__auto____26657
      }
    }()) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'<=", "\ufdd1'low", "\ufdd1'n", "\ufdd1'high"), cljs.core.hash_map("\ufdd0'line", 474))))].join(""));
    }
    return n
  };
  return function(ts) {
    var temp__3974__auto____26659 = cljs.core.map.call(null, cljs.core.vec, cljs.core.split_at.call(null, 8, cljs.core.re_matches.call(null, timestamp__26656, ts)));
    if(cljs.core.truth_(temp__3974__auto____26659)) {
      var vec__26660__26663 = temp__3974__auto____26659;
      var vec__26661__26664 = cljs.core.nth.call(null, vec__26660__26663, 0, null);
      var ___26665 = cljs.core.nth.call(null, vec__26661__26664, 0, null);
      var years__26666 = cljs.core.nth.call(null, vec__26661__26664, 1, null);
      var months__26667 = cljs.core.nth.call(null, vec__26661__26664, 2, null);
      var days__26668 = cljs.core.nth.call(null, vec__26661__26664, 3, null);
      var hours__26669 = cljs.core.nth.call(null, vec__26661__26664, 4, null);
      var minutes__26670 = cljs.core.nth.call(null, vec__26661__26664, 5, null);
      var seconds__26671 = cljs.core.nth.call(null, vec__26661__26664, 6, null);
      var milliseconds__26672 = cljs.core.nth.call(null, vec__26661__26664, 7, null);
      var vec__26662__26673 = cljs.core.nth.call(null, vec__26660__26663, 1, null);
      var ___26674 = cljs.core.nth.call(null, vec__26662__26673, 0, null);
      var ___26675 = cljs.core.nth.call(null, vec__26662__26673, 1, null);
      var ___26676 = cljs.core.nth.call(null, vec__26662__26673, 2, null);
      var V__26677 = vec__26660__26663;
      var vec__26678__26681 = cljs.core.map.call(null, function(v) {
        return cljs.core.map.call(null, function(p1__26653_SHARP_) {
          return parseInt(p1__26653_SHARP_, 10)
        }, v)
      }, cljs.core.map.call(null, function(p1__26651_SHARP_, p2__26650_SHARP_) {
        return cljs.core.update_in.call(null, p2__26650_SHARP_, cljs.core.PersistentVector.fromArray([0], true), p1__26651_SHARP_)
      }, cljs.core.PersistentVector.fromArray([cljs.core.constantly.call(null, null), function(p1__26652_SHARP_) {
        if(cljs.core._EQ_.call(null, p1__26652_SHARP_, "-")) {
          return"-1"
        }else {
          return"1"
        }
      }], true), V__26677));
      var vec__26679__26682 = cljs.core.nth.call(null, vec__26678__26681, 0, null);
      var ___26683 = cljs.core.nth.call(null, vec__26679__26682, 0, null);
      var y__26684 = cljs.core.nth.call(null, vec__26679__26682, 1, null);
      var mo__26685 = cljs.core.nth.call(null, vec__26679__26682, 2, null);
      var d__26686 = cljs.core.nth.call(null, vec__26679__26682, 3, null);
      var h__26687 = cljs.core.nth.call(null, vec__26679__26682, 4, null);
      var m__26688 = cljs.core.nth.call(null, vec__26679__26682, 5, null);
      var s__26689 = cljs.core.nth.call(null, vec__26679__26682, 6, null);
      var ms__26690 = cljs.core.nth.call(null, vec__26679__26682, 7, null);
      var vec__26680__26691 = cljs.core.nth.call(null, vec__26678__26681, 1, null);
      var offset_sign__26692 = cljs.core.nth.call(null, vec__26680__26691, 0, null);
      var offset_hours__26693 = cljs.core.nth.call(null, vec__26680__26691, 1, null);
      var offset_minutes__26694 = cljs.core.nth.call(null, vec__26680__26691, 2, null);
      var offset__26695 = offset_sign__26692 * (offset_hours__26693 * 60 + offset_minutes__26694);
      return cljs.core.PersistentVector.fromArray([cljs.core.not.call(null, years__26666) ? 1970 : y__26684, cljs.core.not.call(null, months__26667) ? 1 : check__26658.call(null, 1, mo__26685, 12, "timestamp month field must be in range 1..12"), cljs.core.not.call(null, days__26668) ? 1 : check__26658.call(null, 1, d__26686, cljs.reader.days_in_month.call(null, mo__26685, cljs.reader.leap_year_QMARK_.call(null, y__26684)), "timestamp day field must be in range 1..last day in month"), cljs.core.not.call(null, 
      hours__26669) ? 0 : check__26658.call(null, 0, h__26687, 23, "timestamp hour field must be in range 0..23"), cljs.core.not.call(null, minutes__26670) ? 0 : check__26658.call(null, 0, m__26688, 59, "timestamp minute field must be in range 0..59"), cljs.core.not.call(null, seconds__26671) ? 0 : check__26658.call(null, 0, s__26689, cljs.core._EQ_.call(null, m__26688, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.core.not.call(null, milliseconds__26672) ? 0 : check__26658.call(null, 
      0, ms__26690, 999, "timestamp millisecond field must be in range 0..999"), offset__26695], true)
    }else {
      return null
    }
  }
}();
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__3971__auto____26707 = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__3971__auto____26707)) {
    var vec__26708__26709 = temp__3971__auto____26707;
    var years__26710 = cljs.core.nth.call(null, vec__26708__26709, 0, null);
    var months__26711 = cljs.core.nth.call(null, vec__26708__26709, 1, null);
    var days__26712 = cljs.core.nth.call(null, vec__26708__26709, 2, null);
    var hours__26713 = cljs.core.nth.call(null, vec__26708__26709, 3, null);
    var minutes__26714 = cljs.core.nth.call(null, vec__26708__26709, 4, null);
    var seconds__26715 = cljs.core.nth.call(null, vec__26708__26709, 5, null);
    var ms__26716 = cljs.core.nth.call(null, vec__26708__26709, 6, null);
    var offset__26717 = cljs.core.nth.call(null, vec__26708__26709, 7, null);
    return new Date(Date.UTC(years__26710, months__26711 - 1, days__26712, hours__26713, minutes__26714, seconds__26715, ms__26716) - offset__26717 * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["inst", "uuid", "queue"], {"inst":cljs.reader.read_date, "uuid":cljs.reader.read_uuid, "queue":cljs.reader.read_queue}));
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag__26721 = cljs.reader.read_symbol.call(null, rdr, initch);
  var temp__3971__auto____26722 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), cljs.core.name.call(null, tag__26721), null);
  if(cljs.core.truth_(temp__3971__auto____26722)) {
    var pfn__26723 = temp__3971__auto____26722;
    return pfn__26723.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", cljs.core.name.call(null, tag__26721), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__26726 = cljs.core.name.call(null, tag);
  var old_parser__26727 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__26726, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__26726, f);
  return old_parser__26727
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__26730 = cljs.core.name.call(null, tag);
  var old_parser__26731 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__26730, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__26730);
  return old_parser__26731
};
goog.provide("shoreleave.remotes.http_rpc");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("shoreleave.remotes.xhr");
shoreleave.remotes.http_rpc._STAR_remote_uri_STAR_ = "/_fetch";
shoreleave.remotes.http_rpc.remote_callback = function() {
  var remote_callback__delegate = function(remote, params, callback, extra_content) {
    return shoreleave.remotes.xhr.xhr.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'post", shoreleave.remotes.http_rpc._STAR_remote_uri_STAR_], true), "\ufdd0'content", cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'remote", "\ufdd0'params"], {"\ufdd0'remote":remote, "\ufdd0'params":cljs.core.pr_str.call(null, params)}), cljs.core.apply.call(null, cljs.core.hash_map, extra_content)), "\ufdd0'on-success", cljs.core.truth_(callback) ? function(data) {
      var data__26456 = cljs.core._EQ_.call(null, data, "") ? "nil" : data;
      return callback.call(null, cljs.reader.read_string.call(null, data__26456))
    } : null)
  };
  var remote_callback = function(remote, params, callback, var_args) {
    var extra_content = null;
    if(goog.isDef(var_args)) {
      extra_content = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return remote_callback__delegate.call(this, remote, params, callback, extra_content)
  };
  remote_callback.cljs$lang$maxFixedArity = 3;
  remote_callback.cljs$lang$applyTo = function(arglist__26457) {
    var remote = cljs.core.first(arglist__26457);
    var params = cljs.core.first(cljs.core.next(arglist__26457));
    var callback = cljs.core.first(cljs.core.next(cljs.core.next(arglist__26457)));
    var extra_content = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__26457)));
    return remote_callback__delegate(remote, params, callback, extra_content)
  };
  remote_callback.cljs$lang$arity$variadic = remote_callback__delegate;
  return remote_callback
}();
goog.provide("aahru.ui");
goog.require("cljs.core");
goog.require("shoreleave.remotes.http_rpc");
goog.require("c2.dom");
goog.require("clojure.string");
aahru.ui.set_navigation = function set_navigation() {
  var loc__21971 = cljs.core.last.call(null, clojure.string.split.call(null, window.location.toString(cljs.core.List.EMPTY), /\//));
  var G__21972__21973 = cljs.core.seq.call(null, c2.dom.children.call(null, c2.dom.select.call(null, "#top-navbar")));
  if(G__21972__21973) {
    var list_item__21974 = cljs.core.first.call(null, G__21972__21973);
    var G__21972__21975 = G__21972__21973;
    while(true) {
      if(cljs.core._EQ_.call(null, [cljs.core.str("/"), cljs.core.str(loc__21971)].join(""), c2.dom.attr.call(null, cljs.core.first.call(null, c2.dom.children.call(null, list_item__21974)), "\ufdd0'href"))) {
        c2.dom.add_class_BANG_.call(null, list_item__21974, "active")
      }else {
        c2.dom.remove_class_BANG_.call(null, list_item__21974, "active")
      }
      var temp__3974__auto____21976 = cljs.core.next.call(null, G__21972__21975);
      if(temp__3974__auto____21976) {
        var G__21972__21977 = temp__3974__auto____21976;
        var G__21978 = cljs.core.first.call(null, G__21972__21977);
        var G__21979 = G__21972__21977;
        list_item__21974 = G__21978;
        G__21972__21975 = G__21979;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
goog.exportSymbol("aahru.ui.set_navigation", aahru.ui.set_navigation);
aahru.ui.logged_in_dropdown = function logged_in_dropdown(user) {
  return cljs.core.PersistentVector.fromArray(["\ufdd0'ul", cljs.core.ObjMap.fromObject(["\ufdd0'class", "\ufdd0'id"], {"\ufdd0'class":"nav pull-right", "\ufdd0'id":"user-dropdown"}), cljs.core.PersistentVector.fromArray(["\ufdd0'li", cljs.core.ObjMap.fromObject(["\ufdd0'class"], {"\ufdd0'class":"divider-vertical"})], true), cljs.core.PersistentVector.fromArray(["\ufdd0'li", cljs.core.ObjMap.fromObject(["\ufdd0'class"], {"\ufdd0'class":"dropdown"}), cljs.core.PersistentVector.fromArray(["\ufdd0'a", 
  cljs.core.ObjMap.fromObject(["\ufdd0'href", "\ufdd0'class", "\ufdd0'data-toggle"], {"\ufdd0'href":"#", "\ufdd0'class":"dropdown-toggle", "\ufdd0'data-toggle":"dropdown"}), cljs.core.PersistentVector.fromArray(["\ufdd0'i", cljs.core.ObjMap.fromObject(["\ufdd0'class", "\ufdd0'style"], {"\ufdd0'class":"icon-user icon-white", "\ufdd0'style":"margin-right: 6px"})], true), user, cljs.core.PersistentVector.fromArray(["\ufdd0'span", cljs.core.ObjMap.fromObject(["\ufdd0'class", "\ufdd0'style"], {"\ufdd0'class":"caret", 
  "\ufdd0'style":"margin-left: 6px"})], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'ul", cljs.core.ObjMap.fromObject(["\ufdd0'class"], {"\ufdd0'class":"dropdown-menu"}), cljs.core.PersistentVector.fromArray(["\ufdd0'li", cljs.core.PersistentVector.fromArray(["\ufdd0'a", cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'href"], {"\ufdd0'id":"logout-btn", "\ufdd0'href":"/logout"}), "Logout"], true)], true)], true)], true)], true)
};
aahru.ui.set_user = function set_user() {
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "meta/username", cljs.core.PersistentVector.EMPTY, function(username) {
    if(cljs.core.truth_(username)) {
      return c2.dom.replace_BANG_.call(null, "#user-dropdown", aahru.ui.logged_in_dropdown.call(null, username))
    }else {
      return null
    }
  })
};
goog.provide("chosen.jquery");
goog.require("cljs.core");
jQuery.prototype.cljs$core$IReduce$ = true;
jQuery.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  return cljs.core.ci_reduce.call(null, this$, f)
};
jQuery.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  return cljs.core.ci_reduce.call(null, this$, f, start)
};
jQuery.prototype.cljs$core$ILookup$ = true;
jQuery.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var or__3824__auto____22154 = this$.slice(k, k + 1);
  if(cljs.core.truth_(or__3824__auto____22154)) {
    return or__3824__auto____22154
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  return cljs.core._nth.call(null, this$, k, not_found)
};
jQuery.prototype.cljs$core$ISequential$ = true;
jQuery.prototype.cljs$core$IIndexed$ = true;
jQuery.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    if(void 0 === not_found) {
      return null
    }else {
      return not_found
    }
  }
};
jQuery.prototype.cljs$core$ICounted$ = true;
jQuery.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  return this$.size()
};
jQuery.prototype.cljs$core$ISeq$ = true;
jQuery.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  return this$.get(0)
};
jQuery.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  if(cljs.core.count.call(null, this$) > 1) {
    return this$.slice(1)
  }else {
    return cljs.core.list.call(null)
  }
};
jQuery.prototype.cljs$core$ISeqable$ = true;
jQuery.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  if(cljs.core.truth_(this$.get(0))) {
    return this$
  }else {
    return null
  }
};
goog.provide("chosen.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("chosen.jquery");
goog.require("goog.string");
goog.require("clojure.string");
chosen.core.ISelectable = {};
chosen.core.selected = function() {
  var selected = null;
  var selected__1 = function(this$) {
    if(function() {
      var and__3822__auto____21989 = this$;
      if(and__3822__auto____21989) {
        return this$.chosen$core$ISelectable$selected$arity$1
      }else {
        return and__3822__auto____21989
      }
    }()) {
      return this$.chosen$core$ISelectable$selected$arity$1(this$)
    }else {
      var x__2256__auto____21990 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____21991 = chosen.core.selected[goog.typeOf(x__2256__auto____21990)];
        if(or__3824__auto____21991) {
          return or__3824__auto____21991
        }else {
          var or__3824__auto____21992 = chosen.core.selected["_"];
          if(or__3824__auto____21992) {
            return or__3824__auto____21992
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelectable.selected", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var selected__2 = function(this$, values) {
    if(function() {
      var and__3822__auto____21993 = this$;
      if(and__3822__auto____21993) {
        return this$.chosen$core$ISelectable$selected$arity$2
      }else {
        return and__3822__auto____21993
      }
    }()) {
      return this$.chosen$core$ISelectable$selected$arity$2(this$, values)
    }else {
      var x__2256__auto____21994 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____21995 = chosen.core.selected[goog.typeOf(x__2256__auto____21994)];
        if(or__3824__auto____21995) {
          return or__3824__auto____21995
        }else {
          var or__3824__auto____21996 = chosen.core.selected["_"];
          if(or__3824__auto____21996) {
            return or__3824__auto____21996
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelectable.selected", this$);
          }
        }
      }().call(null, this$, values)
    }
  };
  selected = function(this$, values) {
    switch(arguments.length) {
      case 1:
        return selected__1.call(this, this$);
      case 2:
        return selected__2.call(this, this$, values)
    }
    throw"Invalid arity: " + arguments.length;
  };
  selected.cljs$lang$arity$1 = selected__1;
  selected.cljs$lang$arity$2 = selected__2;
  return selected
}();
chosen.core.IOptions = {};
chosen.core.options = function() {
  var options = null;
  var options__1 = function(this$) {
    if(function() {
      var and__3822__auto____22005 = this$;
      if(and__3822__auto____22005) {
        return this$.chosen$core$IOptions$options$arity$1
      }else {
        return and__3822__auto____22005
      }
    }()) {
      return this$.chosen$core$IOptions$options$arity$1(this$)
    }else {
      var x__2256__auto____22006 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22007 = chosen.core.options[goog.typeOf(x__2256__auto____22006)];
        if(or__3824__auto____22007) {
          return or__3824__auto____22007
        }else {
          var or__3824__auto____22008 = chosen.core.options["_"];
          if(or__3824__auto____22008) {
            return or__3824__auto____22008
          }else {
            throw cljs.core.missing_protocol.call(null, "IOptions.options", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var options__2 = function(this$, opts) {
    if(function() {
      var and__3822__auto____22009 = this$;
      if(and__3822__auto____22009) {
        return this$.chosen$core$IOptions$options$arity$2
      }else {
        return and__3822__auto____22009
      }
    }()) {
      return this$.chosen$core$IOptions$options$arity$2(this$, opts)
    }else {
      var x__2256__auto____22010 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____22011 = chosen.core.options[goog.typeOf(x__2256__auto____22010)];
        if(or__3824__auto____22011) {
          return or__3824__auto____22011
        }else {
          var or__3824__auto____22012 = chosen.core.options["_"];
          if(or__3824__auto____22012) {
            return or__3824__auto____22012
          }else {
            throw cljs.core.missing_protocol.call(null, "IOptions.options", this$);
          }
        }
      }().call(null, this$, opts)
    }
  };
  options = function(this$, opts) {
    switch(arguments.length) {
      case 1:
        return options__1.call(this, this$);
      case 2:
        return options__2.call(this, this$, opts)
    }
    throw"Invalid arity: " + arguments.length;
  };
  options.cljs$lang$arity$1 = options__1;
  options.cljs$lang$arity$2 = options__2;
  return options
}();
chosen.core.__GT_coll = function __GT_coll(c) {
  if(!function() {
    var or__3824__auto____22015 = cljs.core.set_QMARK_.call(null, c);
    if(or__3824__auto____22015) {
      return or__3824__auto____22015
    }else {
      return cljs.core.sequential_QMARK_.call(null, c)
    }
  }()) {
    return cljs.core.PersistentVector.fromArray([c], true)
  }else {
    return c
  }
};
chosen.core.option_values = function option_values(option_els) {
  return cljs.core.map.call(null, function(p1__22013_SHARP_) {
    return p1__22013_SHARP_.value
  }, option_els)
};
chosen.core.selected_values = function selected_values(el) {
  return cljs.core.set.call(null, chosen.core.option_values.call(null, $(el).find("option:selected")))
};
chosen.core.el_options = function el_options(el) {
  return cljs.core.map.call(null, function(e) {
    var $e__22018 = $(e);
    var group__22019 = $e__22018.parent("optgroup").attr("label");
    return cljs.core.ObjMap.fromObject(["\ufdd0'text", "\ufdd0'value", "\ufdd0'selected", "\ufdd0'disabled", "\ufdd0'group"], {"\ufdd0'text":$e__22018.text(), "\ufdd0'value":$e__22018.val(), "\ufdd0'selected":e.selected, "\ufdd0'disabled":e.disabled, "\ufdd0'group":void 0 === group__22019 ? null : group__22019})
  }, $(el).find("option"))
};
chosen.core.opt__GT_html = function opt__GT_html(o) {
  var map__22030__22031 = o;
  var map__22030__22032 = cljs.core.seq_QMARK_.call(null, map__22030__22031) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22030__22031) : map__22030__22031;
  var style__22033 = cljs.core._lookup.call(null, map__22030__22032, "\ufdd0'style", null);
  var group__22034 = cljs.core._lookup.call(null, map__22030__22032, "\ufdd0'group", null);
  var disabled__22035 = cljs.core._lookup.call(null, map__22030__22032, "\ufdd0'disabled", null);
  var selected__22036 = cljs.core._lookup.call(null, map__22030__22032, "\ufdd0'selected", null);
  var text__22037 = cljs.core._lookup.call(null, map__22030__22032, "\ufdd0'text", null);
  var value__22038 = cljs.core._lookup.call(null, map__22030__22032, "\ufdd0'value", null);
  return[cljs.core.str(clojure.string.join.call(null, " ", cljs.core.PersistentVector.fromArray(["<option", [cljs.core.str('value="'), cljs.core.str(goog.string.htmlEscape(function() {
    var or__3824__auto____22039 = value__22038;
    if(cljs.core.truth_(or__3824__auto____22039)) {
      return or__3824__auto____22039
    }else {
      return text__22037
    }
  }())), cljs.core.str('"')].join(""), cljs.core.truth_(style__22033) ? [cljs.core.str("style='"), cljs.core.str(goog.string.htmlEscape(style__22033)), cljs.core.str("'")].join("") : null, cljs.core.truth_(disabled__22035) ? "disabled='disabled'" : null, cljs.core.truth_(selected__22036) ? "selected='selected'" : null, ">"], true))), cljs.core.str(text__22037), cljs.core.str("</option>")].join("")
};
chosen.core.optionify = function optionify(x) {
  if(cljs.core.map_QMARK_.call(null, x)) {
    return x
  }else {
    return cljs.core.ObjMap.fromObject(["\ufdd0'value", "\ufdd0'text"], {"\ufdd0'value":x, "\ufdd0'text":[cljs.core.str(x)].join("")})
  }
};
chosen.core.reset_dom_options_BANG_ = function reset_dom_options_BANG_($el, options) {
  $el.children().remove();
  var G__22060__22061 = cljs.core.seq.call(null, cljs.core.group_by.call(null, "\ufdd0'group", cljs.core.map.call(null, chosen.core.optionify, chosen.core.__GT_coll.call(null, options))));
  if(G__22060__22061) {
    var G__22063__22065 = cljs.core.first.call(null, G__22060__22061);
    var vec__22064__22066 = G__22063__22065;
    var group__22067 = cljs.core.nth.call(null, vec__22064__22066, 0, null);
    var opts__22068 = cljs.core.nth.call(null, vec__22064__22066, 1, null);
    var G__22060__22069 = G__22060__22061;
    var G__22063__22070 = G__22063__22065;
    var G__22060__22071 = G__22060__22069;
    while(true) {
      var vec__22072__22073 = G__22063__22070;
      var group__22074 = cljs.core.nth.call(null, vec__22072__22073, 0, null);
      var opts__22075 = cljs.core.nth.call(null, vec__22072__22073, 1, null);
      var G__22060__22076 = G__22060__22071;
      var opts_html__22077 = clojure.string.join.call(null, "\n", cljs.core.map.call(null, chosen.core.opt__GT_html, opts__22075));
      if(group__22074 == null) {
        $el.append(opts_html__22077)
      }else {
        $el.append([cljs.core.str("<optgroup label='"), cljs.core.str(goog.string.htmlEscape(cljs.core.name.call(null, group__22074))), cljs.core.str("'>"), cljs.core.str(opts_html__22077), cljs.core.str("</optgroup>")].join(""))
      }
      var temp__3974__auto____22078 = cljs.core.next.call(null, G__22060__22076);
      if(temp__3974__auto____22078) {
        var G__22060__22079 = temp__3974__auto____22078;
        var G__22080 = cljs.core.first.call(null, G__22060__22079);
        var G__22081 = G__22060__22079;
        G__22063__22070 = G__22080;
        G__22060__22071 = G__22081;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
chosen.core.Chosen = function($el, _BANG_a, multiple_QMARK_) {
  this.$el = $el;
  this._BANG_a = _BANG_a;
  this.multiple_QMARK_ = multiple_QMARK_;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147516416
};
chosen.core.Chosen.cljs$lang$type = true;
chosen.core.Chosen.cljs$lang$ctorPrSeq = function(this__2202__auto__) {
  return cljs.core.list.call(null, "chosen.core/Chosen")
};
chosen.core.Chosen.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(_22083, _22084, _) {
  var this__22082 = this;
  return null
};
chosen.core.Chosen.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(_, key, f) {
  var this__22085 = this;
  return cljs.core.add_watch.call(null, this__22085._BANG_a, key, function(_22088, _, p__22086, p__22087) {
    var map__22089__22091 = p__22086;
    var map__22089__22092 = cljs.core.seq_QMARK_.call(null, map__22089__22091) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22089__22091) : map__22089__22091;
    var old_sel__22093 = cljs.core._lookup.call(null, map__22089__22092, "\ufdd0'selected", null);
    var map__22090__22094 = p__22087;
    var map__22090__22095 = cljs.core.seq_QMARK_.call(null, map__22090__22094) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22090__22094) : map__22090__22094;
    var sel__22096 = cljs.core._lookup.call(null, map__22090__22095, "\ufdd0'selected", null);
    if(cljs.core.not_EQ_.call(null, old_sel__22093, sel__22096)) {
      return f.call(null, cljs.core.truth_(this__22085.multiple_QMARK_) ? sel__22096 : cljs.core.first.call(null, sel__22096))
    }else {
      return null
    }
  })
};
chosen.core.Chosen.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(_, key) {
  var this__22097 = this;
  return cljs.core.remove_watch.call(null, this__22097._BANG_a, key)
};
chosen.core.Chosen.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var this__22098 = this;
  return this$.chosen$core$ISelectable$selected$arity$1(this$)
};
chosen.core.Chosen.prototype.chosen$core$IOptions$ = true;
chosen.core.Chosen.prototype.chosen$core$IOptions$options$arity$1 = function(_) {
  var this__22099 = this;
  return(new cljs.core.Keyword("\ufdd0'options")).call(null, cljs.core.deref.call(null, this__22099._BANG_a))
};
chosen.core.Chosen.prototype.chosen$core$IOptions$options$arity$2 = function(_, opts) {
  var this__22100 = this;
  chosen.core.reset_dom_options_BANG_.call(null, this__22100.$el, opts);
  return cljs.core.swap_BANG_.call(null, this__22100._BANG_a, cljs.core.assoc, "\ufdd0'options", chosen.core.el_options.call(null, this__22100.$el))
};
chosen.core.Chosen.prototype.chosen$core$ISelectable$ = true;
chosen.core.Chosen.prototype.chosen$core$ISelectable$selected$arity$1 = function(_) {
  var this__22101 = this;
  var sel__22102 = (new cljs.core.Keyword("\ufdd0'selected")).call(null, cljs.core.deref.call(null, this__22101._BANG_a));
  if(cljs.core.truth_(this__22101.multiple_QMARK_)) {
    return sel__22102
  }else {
    return cljs.core.first.call(null, sel__22102)
  }
};
chosen.core.Chosen.prototype.chosen$core$ISelectable$selected$arity$2 = function(_, values) {
  var this__22103 = this;
  return cljs.core.swap_BANG_.call(null, this__22103._BANG_a, cljs.core.assoc, "\ufdd0'selected", chosen.core.__GT_coll.call(null, values))
};
chosen.core.Chosen;
chosen.core.ichooseu_BANG_ = function() {
  var ichooseu_BANG___delegate = function(el, p__22104) {
    var map__22128__22129 = p__22104;
    var map__22128__22130 = cljs.core.seq_QMARK_.call(null, map__22128__22129) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22128__22129) : map__22128__22129;
    var search_contains__22131 = cljs.core._lookup.call(null, map__22128__22130, "\ufdd0'search-contains", false);
    var $el__22132 = $(el);
    var multiple_QMARK___22133 = cljs.core._EQ_.call(null, "multiple", $el__22132.attr("multiple"));
    var _BANG_a__22134 = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'options", "\ufdd0'selected"], {"\ufdd0'options":chosen.core.el_options.call(null, $el__22132), "\ufdd0'selected":chosen.core.selected_values.call(null, $el__22132)}));
    $el__22132.chosen(function() {
      var G__22135__22136 = {};
      G__22135__22136["search_contains"] = search_contains__22131;
      return G__22135__22136
    }()).on("change", function() {
      return cljs.core.swap_BANG_.call(null, _BANG_a__22134, cljs.core.assoc, "\ufdd0'selected", chosen.core.selected_values.call(null, $el__22132))
    });
    cljs.core.add_watch.call(null, _BANG_a__22134, "\ufdd0'_update-dom", function(_22138, _22139, _, p__22137) {
      var map__22140__22141 = p__22137;
      var map__22140__22142 = cljs.core.seq_QMARK_.call(null, map__22140__22141) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22140__22141) : map__22140__22141;
      var selected__22143 = cljs.core._lookup.call(null, map__22140__22142, "\ufdd0'selected", null);
      $el__22132.find("option[selected='selected']").removeAttr("selected");
      var G__22144__22145 = cljs.core.seq.call(null, selected__22143);
      if(G__22144__22145) {
        var val__22146 = cljs.core.first.call(null, G__22144__22145);
        var G__22144__22147 = G__22144__22145;
        while(true) {
          $el__22132.find([cljs.core.str("option[value='"), cljs.core.str(val__22146), cljs.core.str("']")].join("")).first().attr("selected", "selected");
          var temp__3974__auto____22148 = cljs.core.next.call(null, G__22144__22147);
          if(temp__3974__auto____22148) {
            var G__22144__22149 = temp__3974__auto____22148;
            var G__22151 = cljs.core.first.call(null, G__22144__22149);
            var G__22152 = G__22144__22149;
            val__22146 = G__22151;
            G__22144__22147 = G__22152;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var dom_selected__22150 = chosen.core.selected_values.call(null, $el__22132);
      if(cljs.core.not_EQ_.call(null, selected__22143, dom_selected__22150)) {
        cljs.core.swap_BANG_.call(null, _BANG_a__22134, cljs.core.assoc, "\ufdd0'selected", dom_selected__22150)
      }else {
      }
      return $el__22132.trigger("liszt:updated")
    });
    return new chosen.core.Chosen($el__22132, _BANG_a__22134, multiple_QMARK___22133)
  };
  var ichooseu_BANG_ = function(el, var_args) {
    var p__22104 = null;
    if(goog.isDef(var_args)) {
      p__22104 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return ichooseu_BANG___delegate.call(this, el, p__22104)
  };
  ichooseu_BANG_.cljs$lang$maxFixedArity = 1;
  ichooseu_BANG_.cljs$lang$applyTo = function(arglist__22153) {
    var el = cljs.core.first(arglist__22153);
    var p__22104 = cljs.core.rest(arglist__22153);
    return ichooseu_BANG___delegate(el, p__22104)
  };
  ichooseu_BANG_.cljs$lang$arity$variadic = ichooseu_BANG___delegate;
  return ichooseu_BANG_
}();
goog.provide("aahru.xprize.score");
goog.require("cljs.core");
goog.require("goog.Timer");
goog.require("goog.string");
goog.require("shoreleave.remotes.http_rpc");
goog.require("chosen.core");
goog.require("c2.dom");
goog.require("clojure.string");
aahru.xprize.score.progress_percent = function progress_percent(desc) {
  if(cljs.core.truth_(goog.string.startsWith(desc, "Starting variation"))) {
    return 10
  }else {
    if(cljs.core.truth_(goog.string.startsWith(desc, "Prepare VCF, resorting to genome build: contestant"))) {
      return 15
    }else {
      if(cljs.core.truth_(goog.string.startsWith(desc, "Normalize MNP and indel variants: contestant"))) {
        return 60
      }else {
        if(cljs.core.truth_(goog.string.startsWith(desc, "Comparing VCFs: reference vs contestant"))) {
          return 75
        }else {
          if(cljs.core.truth_(goog.string.startsWith(desc, "Summarize comparisons"))) {
            return 90
          }else {
            if(cljs.core.truth_(goog.string.startsWith(desc, "Finished"))) {
              return 100
            }else {
              if("\ufdd0'else") {
                return null
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
aahru.xprize.score.update_run_status = function update_run_status(run_id) {
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "xprize/status", cljs.core.PersistentVector.fromArray([run_id], true), function(info) {
    if(cljs.core._EQ_.call(null, "\ufdd0'finished", (new cljs.core.Keyword("\ufdd0'state")).call(null, info))) {
      return shoreleave.remotes.http_rpc.remote_callback.call(null, "xprize/summary", cljs.core.PersistentVector.fromArray([run_id], true), function(sum_html) {
        if(sum_html == null) {
          return goog.Timer.callOnce(function() {
            return update_run_status.call(null, run_id)
          }, 2E3)
        }else {
          return c2.dom.replace_BANG_.call(null, "#scoring-in-process", sum_html)
        }
      })
    }else {
      if(info == null) {
      }else {
        c2.dom.text.call(null, "#scoring-status", (new cljs.core.Keyword("\ufdd0'desc")).call(null, info));
        var temp__3974__auto____21818 = aahru.xprize.score.progress_percent.call(null, (new cljs.core.Keyword("\ufdd0'desc")).call(null, info));
        if(cljs.core.truth_(temp__3974__auto____21818)) {
          var pct__21819 = temp__3974__auto____21818;
          c2.dom.style.call(null, "#scoring-progress", "\ufdd0'width", [cljs.core.str(pct__21819), cljs.core.str("%")].join(""))
        }else {
        }
      }
      return goog.Timer.callOnce(function() {
        return update_run_status.call(null, run_id)
      }, 2E3)
    }
  })
};
goog.exportSymbol("aahru.xprize.score.update_run_status", aahru.xprize.score.update_run_status);
aahru.xprize.score.remote__GT_chosen = function remote__GT_chosen(xs) {
  return cljs.core.map.call(null, function(x) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'value", "\ufdd0'text"], {"\ufdd0'value":(new cljs.core.Keyword("\ufdd0'full")).call(null, x), "\ufdd0'text":(new cljs.core.Keyword("\ufdd0'name")).call(null, x)})
  }, xs)
};
aahru.xprize.score.update_remote_files_BANG_ = function update_remote_files_BANG_(file_chosen, dir, ftype) {
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "variant/external-files", cljs.core.PersistentVector.fromArray([dir, ftype], true), function(files) {
    return chosen.core.options.call(null, file_chosen, aahru.xprize.score.remote__GT_chosen.call(null, files))
  })
};
aahru.xprize.score.prep_remote_selectors = function prep_remote_selectors(select_id, ftype) {
  var folder_chosen__21824 = chosen.core.ichooseu_BANG_.call(null, [cljs.core.str("#"), cljs.core.str(select_id), cljs.core.str("-folder")].join(""));
  var file_chosen__21825 = chosen.core.ichooseu_BANG_.call(null, [cljs.core.str("#"), cljs.core.str(select_id), cljs.core.str("-file")].join(""));
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "variant/external-dirs", cljs.core.PersistentVector.EMPTY, function(dirs) {
    chosen.core.options.call(null, folder_chosen__21824, aahru.xprize.score.remote__GT_chosen.call(null, dirs));
    var temp__3974__auto____21826 = chosen.core.selected.call(null, folder_chosen__21824);
    if(cljs.core.truth_(temp__3974__auto____21826)) {
      var cur_dir__21827 = temp__3974__auto____21826;
      aahru.xprize.score.update_remote_files_BANG_.call(null, file_chosen__21825, cur_dir__21827, ftype)
    }else {
    }
    return cljs.core.add_watch.call(null, folder_chosen__21824, "\ufdd0'change", function(dir) {
      return aahru.xprize.score.update_remote_files_BANG_.call(null, file_chosen__21825, dir, ftype)
    })
  })
};
aahru.xprize.score.prep_genome_selector = function prep_genome_selector() {
  var genome_chosen__21829 = chosen.core.ichooseu_BANG_.call(null, "#comparison-genome");
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "meta/genomes", cljs.core.PersistentVector.EMPTY, function(genomes) {
    return chosen.core.options.call(null, genome_chosen__21829, genomes)
  })
};
aahru.xprize.score.setup_remotes = function setup_remotes() {
  aahru.xprize.score.prep_genome_selector.call(null);
  aahru.xprize.score.prep_remote_selectors.call(null, "variant", "vcf");
  return aahru.xprize.score.prep_remote_selectors.call(null, "region", "bed")
};
goog.exportSymbol("aahru.xprize.score.setup_remotes", aahru.xprize.score.setup_remotes);
goog.provide("reflex.core");
goog.require("cljs.core");
reflex.core.capture_derefed = function capture_derefed(f) {
  var _BANG_recently_derefed27080__27081 = reflex.core._BANG_recently_derefed;
  try {
    reflex.core._BANG_recently_derefed = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY, "\ufdd0'meta", cljs.core.ObjMap.fromObject(["\ufdd0'no-deref-monitor"], {"\ufdd0'no-deref-monitor":true}));
    var res__27083 = f.call(null);
    return cljs.core.ObjMap.fromObject(["\ufdd0'res", "\ufdd0'derefed"], {"\ufdd0'res":res__27083, "\ufdd0'derefed":cljs.core.deref.call(null, reflex.core._BANG_recently_derefed)})
  }finally {
    reflex.core._BANG_recently_derefed = _BANG_recently_derefed27080__27081
  }
};
reflex.core.notify_deref_watcher_BANG_ = function notify_deref_watcher_BANG_(derefable) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____27085 = reflex.core._BANG_recently_derefed;
    if(cljs.core.truth_(and__3822__auto____27085)) {
      return cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'no-deref-monitor")).call(null, cljs.core.meta.call(null, derefable)))
    }else {
      return and__3822__auto____27085
    }
  }())) {
    return cljs.core.swap_BANG_.call(null, reflex.core._BANG_recently_derefed, function(p1__27075_SHARP_) {
      return cljs.core.conj.call(null, p1__27075_SHARP_, derefable)
    })
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IDeref$ = true;
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  reflex.core.notify_deref_watcher_BANG_.call(null, this$);
  return this$.state
};
reflex.core.IDisposable = {};
reflex.core.dispose_BANG_ = function dispose_BANG_(this$) {
  if(function() {
    var and__3822__auto____27090 = this$;
    if(and__3822__auto____27090) {
      return this$.reflex$core$IDisposable$dispose_BANG_$arity$1
    }else {
      return and__3822__auto____27090
    }
  }()) {
    return this$.reflex$core$IDisposable$dispose_BANG_$arity$1(this$)
  }else {
    var x__2256__auto____27091 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____27092 = reflex.core.dispose_BANG_[goog.typeOf(x__2256__auto____27091)];
      if(or__3824__auto____27092) {
        return or__3824__auto____27092
      }else {
        var or__3824__auto____27093 = reflex.core.dispose_BANG_["_"];
        if(or__3824__auto____27093) {
          return or__3824__auto____27093
        }else {
          throw cljs.core.missing_protocol.call(null, "IDisposable.dispose!", this$);
        }
      }
    }().call(null, this$)
  }
};
reflex.core.ComputedObservable = function(state, dirty_QMARK_, f, key, parent_watchables, watches, __meta, __extmap) {
  this.state = state;
  this.dirty_QMARK_ = dirty_QMARK_;
  this.f = f;
  this.key = key;
  this.parent_watchables = parent_watchables;
  this.watches = watches;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2766571274;
  if(arguments.length > 6) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2211__auto__) {
  var this__27097 = this;
  var h__2085__auto____27098 = this__27097.__hash;
  if(!(h__2085__auto____27098 == null)) {
    return h__2085__auto____27098
  }else {
    var h__2085__auto____27099 = cljs.core.hash_imap.call(null, this__2211__auto__);
    this__27097.__hash = h__2085__auto____27099;
    return h__2085__auto____27099
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2216__auto__, k__2217__auto__) {
  var this__27100 = this;
  return this__2216__auto__.cljs$core$ILookup$_lookup$arity$3(this__2216__auto__, k__2217__auto__, null)
};
reflex.core.ComputedObservable.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2218__auto__, k27095, else__2219__auto__) {
  var this__27101 = this;
  if(k27095 === "\ufdd0'state") {
    return this__27101.state
  }else {
    if(k27095 === "\ufdd0'dirty?") {
      return this__27101.dirty_QMARK_
    }else {
      if(k27095 === "\ufdd0'f") {
        return this__27101.f
      }else {
        if(k27095 === "\ufdd0'key") {
          return this__27101.key
        }else {
          if(k27095 === "\ufdd0'parent-watchables") {
            return this__27101.parent_watchables
          }else {
            if(k27095 === "\ufdd0'watches") {
              return this__27101.watches
            }else {
              if("\ufdd0'else") {
                return cljs.core._lookup.call(null, this__27101.__extmap, k27095, else__2219__auto__)
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2223__auto__, k__2224__auto__, G__27094) {
  var this__27102 = this;
  var pred__27103__27106 = cljs.core.identical_QMARK_;
  var expr__27104__27107 = k__2224__auto__;
  if(pred__27103__27106.call(null, "\ufdd0'state", expr__27104__27107)) {
    return new reflex.core.ComputedObservable(G__27094, this__27102.dirty_QMARK_, this__27102.f, this__27102.key, this__27102.parent_watchables, this__27102.watches, this__27102.__meta, this__27102.__extmap, null)
  }else {
    if(pred__27103__27106.call(null, "\ufdd0'dirty?", expr__27104__27107)) {
      return new reflex.core.ComputedObservable(this__27102.state, G__27094, this__27102.f, this__27102.key, this__27102.parent_watchables, this__27102.watches, this__27102.__meta, this__27102.__extmap, null)
    }else {
      if(pred__27103__27106.call(null, "\ufdd0'f", expr__27104__27107)) {
        return new reflex.core.ComputedObservable(this__27102.state, this__27102.dirty_QMARK_, G__27094, this__27102.key, this__27102.parent_watchables, this__27102.watches, this__27102.__meta, this__27102.__extmap, null)
      }else {
        if(pred__27103__27106.call(null, "\ufdd0'key", expr__27104__27107)) {
          return new reflex.core.ComputedObservable(this__27102.state, this__27102.dirty_QMARK_, this__27102.f, G__27094, this__27102.parent_watchables, this__27102.watches, this__27102.__meta, this__27102.__extmap, null)
        }else {
          if(pred__27103__27106.call(null, "\ufdd0'parent-watchables", expr__27104__27107)) {
            return new reflex.core.ComputedObservable(this__27102.state, this__27102.dirty_QMARK_, this__27102.f, this__27102.key, G__27094, this__27102.watches, this__27102.__meta, this__27102.__extmap, null)
          }else {
            if(pred__27103__27106.call(null, "\ufdd0'watches", expr__27104__27107)) {
              return new reflex.core.ComputedObservable(this__27102.state, this__27102.dirty_QMARK_, this__27102.f, this__27102.key, this__27102.parent_watchables, G__27094, this__27102.__meta, this__27102.__extmap, null)
            }else {
              return new reflex.core.ComputedObservable(this__27102.state, this__27102.dirty_QMARK_, this__27102.f, this__27102.key, this__27102.parent_watchables, this__27102.watches, this__27102.__meta, cljs.core.assoc.call(null, this__27102.__extmap, k__2224__auto__, G__27094), null)
            }
          }
        }
      }
    }
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var this__27108 = this;
  reflex.core.notify_deref_watcher_BANG_.call(null, this$);
  if(cljs.core.not.call(null, this__27108.dirty_QMARK_)) {
    return this$.state
  }else {
    var map__27109__27110 = reflex.core.capture_derefed.call(null, this__27108.f);
    var map__27109__27111 = cljs.core.seq_QMARK_.call(null, map__27109__27110) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27109__27110) : map__27109__27110;
    var derefed__27112 = cljs.core._lookup.call(null, map__27109__27111, "\ufdd0'derefed", null);
    var res__27113 = cljs.core._lookup.call(null, map__27109__27111, "\ufdd0'res", null);
    var G__27114__27115 = cljs.core.seq.call(null, this__27108.parent_watchables);
    if(G__27114__27115) {
      var w__27116 = cljs.core.first.call(null, G__27114__27115);
      var G__27114__27117 = G__27114__27115;
      while(true) {
        cljs.core.remove_watch.call(null, w__27116, this__27108.key);
        var temp__3974__auto____27118 = cljs.core.next.call(null, G__27114__27117);
        if(temp__3974__auto____27118) {
          var G__27114__27119 = temp__3974__auto____27118;
          var G__27167 = cljs.core.first.call(null, G__27114__27119);
          var G__27168 = G__27114__27119;
          w__27116 = G__27167;
          G__27114__27117 = G__27168;
          continue
        }else {
        }
        break
      }
    }else {
    }
    this$.parent_watchables = derefed__27112;
    var G__27120__27121 = cljs.core.seq.call(null, derefed__27112);
    if(G__27120__27121) {
      var w__27122 = cljs.core.first.call(null, G__27120__27121);
      var G__27120__27123 = G__27120__27121;
      while(true) {
        cljs.core.add_watch.call(null, w__27122, this__27108.key, function(w__27122, G__27120__27123) {
          return function() {
            this$.dirty_QMARK_ = true;
            return cljs.core._notify_watches.call(null, this$, null, null)
          }
        }(w__27122, G__27120__27123));
        var temp__3974__auto____27124 = cljs.core.next.call(null, G__27120__27123);
        if(temp__3974__auto____27124) {
          var G__27120__27125 = temp__3974__auto____27124;
          var G__27169 = cljs.core.first.call(null, G__27120__27125);
          var G__27170 = G__27120__27125;
          w__27122 = G__27169;
          G__27120__27123 = G__27170;
          continue
        }else {
        }
        break
      }
    }else {
    }
    this$.state = res__27113;
    this$.dirty_QMARK_ = false;
    return res__27113
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2221__auto__, entry__2222__auto__) {
  var this__27126 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2222__auto__)) {
    return this__2221__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2221__auto__, cljs.core._nth.call(null, entry__2222__auto__, 0), cljs.core._nth.call(null, entry__2222__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2221__auto__, entry__2222__auto__)
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, _27128, _) {
  var this__27127 = this;
  var G__27129__27130 = cljs.core.seq.call(null, this__27127.watches);
  if(G__27129__27130) {
    var G__27132__27134 = cljs.core.first.call(null, G__27129__27130);
    var vec__27133__27135 = G__27132__27134;
    var key__27136 = cljs.core.nth.call(null, vec__27133__27135, 0, null);
    var wf__27137 = cljs.core.nth.call(null, vec__27133__27135, 1, null);
    var G__27129__27138 = G__27129__27130;
    var G__27132__27139 = G__27132__27134;
    var G__27129__27140 = G__27129__27138;
    while(true) {
      var vec__27141__27142 = G__27132__27139;
      var key__27143 = cljs.core.nth.call(null, vec__27141__27142, 0, null);
      var wf__27144 = cljs.core.nth.call(null, vec__27141__27142, 1, null);
      var G__27129__27145 = G__27129__27140;
      wf__27144.call(null);
      var temp__3974__auto____27146 = cljs.core.next.call(null, G__27129__27145);
      if(temp__3974__auto____27146) {
        var G__27129__27147 = temp__3974__auto____27146;
        var G__27171 = cljs.core.first.call(null, G__27129__27147);
        var G__27172 = G__27129__27147;
        G__27132__27139 = G__27171;
        G__27129__27140 = G__27172;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, wf) {
  var this__27148 = this;
  return this$.watches = cljs.core.assoc.call(null, this__27148.watches, key, wf)
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__27149 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__27149.watches, key)
};
reflex.core.ComputedObservable.prototype.reflex$core$IDisposable$ = true;
reflex.core.ComputedObservable.prototype.reflex$core$IDisposable$dispose_BANG_$arity$1 = function(this$) {
  var this__27150 = this;
  var G__27151__27152 = cljs.core.seq.call(null, this__27150.parent_watchables);
  if(G__27151__27152) {
    var w__27153 = cljs.core.first.call(null, G__27151__27152);
    var G__27151__27154 = G__27151__27152;
    while(true) {
      cljs.core.remove_watch.call(null, w__27153, this__27150.key);
      var temp__3974__auto____27155 = cljs.core.next.call(null, G__27151__27154);
      if(temp__3974__auto____27155) {
        var G__27151__27156 = temp__3974__auto____27155;
        var G__27173 = cljs.core.first.call(null, G__27151__27156);
        var G__27174 = G__27151__27156;
        w__27153 = G__27173;
        G__27151__27154 = G__27174;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return this$.watches = null
};
reflex.core.ComputedObservable.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2228__auto__) {
  var this__27157 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'state", this__27157.state), cljs.core.vector.call(null, "\ufdd0'dirty?", this__27157.dirty_QMARK_), cljs.core.vector.call(null, "\ufdd0'f", this__27157.f), cljs.core.vector.call(null, "\ufdd0'key", this__27157.key), cljs.core.vector.call(null, "\ufdd0'parent-watchables", this__27157.parent_watchables), cljs.core.vector.call(null, "\ufdd0'watches", this__27157.watches)], 
  true), this__27157.__extmap))
};
reflex.core.ComputedObservable.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2230__auto__, opts__2231__auto__) {
  var this__27158 = this;
  var pr_pair__2232__auto____27159 = function(keyval__2233__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2231__auto__, keyval__2233__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2232__auto____27159, [cljs.core.str("#"), cljs.core.str("ComputedObservable"), cljs.core.str("{")].join(""), ", ", "}", opts__2231__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'state", this__27158.state), cljs.core.vector.call(null, "\ufdd0'dirty?", this__27158.dirty_QMARK_), cljs.core.vector.call(null, "\ufdd0'f", this__27158.f), cljs.core.vector.call(null, "\ufdd0'key", this__27158.key), 
  cljs.core.vector.call(null, "\ufdd0'parent-watchables", this__27158.parent_watchables), cljs.core.vector.call(null, "\ufdd0'watches", this__27158.watches)], true), this__27158.__extmap))
};
reflex.core.ComputedObservable.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2220__auto__) {
  var this__27160 = this;
  return 6 + cljs.core.count.call(null, this__27160.__extmap)
};
reflex.core.ComputedObservable.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2212__auto__, other__2213__auto__) {
  var this__27161 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____27162 = other__2213__auto__;
    if(cljs.core.truth_(and__3822__auto____27162)) {
      var and__3822__auto____27163 = this__2212__auto__.constructor === other__2213__auto__.constructor;
      if(and__3822__auto____27163) {
        return cljs.core.equiv_map.call(null, this__2212__auto__, other__2213__auto__)
      }else {
        return and__3822__auto____27163
      }
    }else {
      return and__3822__auto____27162
    }
  }())) {
    return true
  }else {
    return false
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2215__auto__, G__27094) {
  var this__27164 = this;
  return new reflex.core.ComputedObservable(this__27164.state, this__27164.dirty_QMARK_, this__27164.f, this__27164.key, this__27164.parent_watchables, this__27164.watches, G__27094, this__27164.__extmap, this__27164.__hash)
};
reflex.core.ComputedObservable.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2214__auto__) {
  var this__27165 = this;
  return this__27165.__meta
};
reflex.core.ComputedObservable.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2225__auto__, k__2226__auto__) {
  var this__27166 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'dirty?", "\ufdd0'state", "\ufdd0'key", "\ufdd0'f", "\ufdd0'watches", "\ufdd0'parent-watchables"]), k__2226__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2225__auto__), this__27166.__meta), k__2226__auto__)
  }else {
    return new reflex.core.ComputedObservable(this__27166.state, this__27166.dirty_QMARK_, this__27166.f, this__27166.key, this__27166.parent_watchables, this__27166.watches, this__27166.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__27166.__extmap, k__2226__auto__)), null)
  }
};
reflex.core.ComputedObservable.cljs$lang$type = true;
reflex.core.ComputedObservable.cljs$lang$ctorPrSeq = function(this__2250__auto__) {
  return cljs.core.list.call(null, "reflex.core/ComputedObservable")
};
reflex.core.__GT_ComputedObservable = function __GT_ComputedObservable(state, dirty_QMARK_, f, key, parent_watchables, watches) {
  return new reflex.core.ComputedObservable(state, dirty_QMARK_, f, key, parent_watchables, watches)
};
reflex.core.map__GT_ComputedObservable = function map__GT_ComputedObservable(G__27096) {
  return new reflex.core.ComputedObservable((new cljs.core.Keyword("\ufdd0'state")).call(null, G__27096), (new cljs.core.Keyword("\ufdd0'dirty?")).call(null, G__27096), (new cljs.core.Keyword("\ufdd0'f")).call(null, G__27096), (new cljs.core.Keyword("\ufdd0'key")).call(null, G__27096), (new cljs.core.Keyword("\ufdd0'parent-watchables")).call(null, G__27096), (new cljs.core.Keyword("\ufdd0'watches")).call(null, G__27096), null, cljs.core.dissoc.call(null, G__27096, "\ufdd0'state", "\ufdd0'dirty?", 
  "\ufdd0'f", "\ufdd0'key", "\ufdd0'parent-watchables", "\ufdd0'watches"))
};
reflex.core.ComputedObservable;
reflex.core.ComputedObservable.prototype.cljs$core$IHash$ = true;
reflex.core.ComputedObservable.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  return this$.key
};
goog.provide("c2.core");
goog.require("cljs.core");
goog.require("reflex.core");
goog.require("c2.dom");
goog.require("singult.core");
c2.core.node_data = singult.core.node_data;
c2.core.unify = function() {
  var unify__delegate = function(data, mapping, args) {
    if(cljs.core.seq.call(null, data)) {
      mapping.call(null, cljs.core.first.call(null, data))
    }else {
    }
    return cljs.core.apply.call(null, singult.core.unify, data, mapping, args)
  };
  var unify = function(data, mapping, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unify__delegate.call(this, data, mapping, args)
  };
  unify.cljs$lang$maxFixedArity = 2;
  unify.cljs$lang$applyTo = function(arglist__27074) {
    var data = cljs.core.first(arglist__27074);
    var mapping = cljs.core.first(cljs.core.next(arglist__27074));
    var args = cljs.core.rest(cljs.core.next(arglist__27074));
    return unify__delegate(data, mapping, args)
  };
  unify.cljs$lang$arity$variadic = unify__delegate;
  return unify
}();
goog.provide("c2.event");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("c2.core");
goog.require("goog.events");
goog.require("c2.dom");
goog.require("c2.core");
goog.require("cljs.reader");
c2.event.on_load = function on_load(f) {
  return goog.events.listen(window, goog.events.EventType.LOAD, f)
};
c2.event.on_raw = function() {
  var on_raw__delegate = function(node, event_type, f, p__27042) {
    var map__27047__27048 = p__27042;
    var map__27047__27049 = cljs.core.seq_QMARK_.call(null, map__27047__27048) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27047__27048) : map__27047__27048;
    var capture__27050 = cljs.core._lookup.call(null, map__27047__27049, "\ufdd0'capture", false);
    return goog.events.listen(c2.dom.__GT_dom.call(null, node), cljs.core.name.call(null, event_type), f, capture__27050)
  };
  var on_raw = function(node, event_type, f, var_args) {
    var p__27042 = null;
    if(goog.isDef(var_args)) {
      p__27042 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return on_raw__delegate.call(this, node, event_type, f, p__27042)
  };
  on_raw.cljs$lang$maxFixedArity = 3;
  on_raw.cljs$lang$applyTo = function(arglist__27051) {
    var node = cljs.core.first(arglist__27051);
    var event_type = cljs.core.first(cljs.core.next(arglist__27051));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__27051)));
    var p__27042 = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__27051)));
    return on_raw__delegate(node, event_type, f, p__27042)
  };
  on_raw.cljs$lang$arity$variadic = on_raw__delegate;
  return on_raw
}();
c2.event.on = function() {
  var on = null;
  var on__3 = function(node, event_type, f) {
    return on.call(null, node, "*", event_type, f)
  };
  var on__5 = function() {
    var G__27071__delegate = function(node, selector, event_type, f, p__27052) {
      var map__27062__27063 = p__27052;
      var map__27062__27064 = cljs.core.seq_QMARK_.call(null, map__27062__27063) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27062__27063) : map__27062__27063;
      var capture__27065 = cljs.core._lookup.call(null, map__27062__27064, "\ufdd0'capture", false);
      return goog.events.listen(c2.dom.__GT_dom.call(null, node), cljs.core.name.call(null, event_type), function(event) {
        if(cljs.core.truth_(c2.dom.matches_selector_QMARK_.call(null, event.target, selector))) {
          var $node__27066 = event.target;
          while(true) {
            var temp__3971__auto____27067 = c2.core.node_data.call(null, $node__27066);
            if(cljs.core.truth_(temp__3971__auto____27067)) {
              var d__27068 = temp__3971__auto____27067;
              return f.call(null, d__27068, $node__27066, event)
            }else {
              var temp__3971__auto____27069 = c2.dom.parent.call(null, $node__27066);
              if(cljs.core.truth_(temp__3971__auto____27069)) {
                var parent__27070 = temp__3971__auto____27069;
                var G__27072 = parent__27070;
                $node__27066 = G__27072;
                continue
              }else {
                return null
              }
            }
            break
          }
        }else {
          return null
        }
      }, capture__27065)
    };
    var G__27071 = function(node, selector, event_type, f, var_args) {
      var p__27052 = null;
      if(goog.isDef(var_args)) {
        p__27052 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__27071__delegate.call(this, node, selector, event_type, f, p__27052)
    };
    G__27071.cljs$lang$maxFixedArity = 4;
    G__27071.cljs$lang$applyTo = function(arglist__27073) {
      var node = cljs.core.first(arglist__27073);
      var selector = cljs.core.first(cljs.core.next(arglist__27073));
      var event_type = cljs.core.first(cljs.core.next(cljs.core.next(arglist__27073)));
      var f = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__27073))));
      var p__27052 = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__27073))));
      return G__27071__delegate(node, selector, event_type, f, p__27052)
    };
    G__27071.cljs$lang$arity$variadic = G__27071__delegate;
    return G__27071
  }();
  on = function(node, selector, event_type, f, var_args) {
    var p__27052 = var_args;
    switch(arguments.length) {
      case 3:
        return on__3.call(this, node, selector, event_type);
      default:
        return on__5.cljs$lang$arity$variadic(node, selector, event_type, f, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  on.cljs$lang$maxFixedArity = 4;
  on.cljs$lang$applyTo = on__5.cljs$lang$applyTo;
  on.cljs$lang$arity$3 = on__3;
  on.cljs$lang$arity$variadic = on__5.cljs$lang$arity$variadic;
  return on
}();
goog.provide("aahru.xprize.analyses");
goog.require("cljs.core");
goog.require("shoreleave.remotes.http_rpc");
goog.require("c2.event");
goog.require("c2.dom");
aahru.xprize.analyses.display_selected_analysis = function display_selected_analysis(analysis_id) {
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "xprize/summary", cljs.core.PersistentVector.fromArray([analysis_id], true), function(sum_html) {
    return c2.dom.replace_BANG_.call(null, "#user-analyses", sum_html)
  })
};
aahru.xprize.analyses.display_analyses = function display_analyses() {
  var G__21956__21957 = cljs.core.seq.call(null, c2.dom.children.call(null, c2.dom.select.call(null, "#user-analyses ul")));
  if(G__21956__21957) {
    var x__21958 = cljs.core.first.call(null, G__21956__21957);
    var G__21956__21959 = G__21956__21957;
    while(true) {
      c2.event.on_raw.call(null, x__21958, "\ufdd0'click", function(x__21958, G__21956__21959) {
        return function(evt) {
          return aahru.xprize.analyses.display_selected_analysis.call(null, c2.dom.attr.call(null, evt.target, "\ufdd0'id"))
        }
      }(x__21958, G__21956__21959), "\ufdd0'capture", true);
      var temp__3974__auto____21960 = cljs.core.next.call(null, G__21956__21959);
      if(temp__3974__auto____21960) {
        var G__21956__21961 = temp__3974__auto____21960;
        var G__21962 = cljs.core.first.call(null, G__21956__21961);
        var G__21963 = G__21956__21961;
        x__21958 = G__21962;
        G__21956__21959 = G__21963;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
goog.exportSymbol("aahru.xprize.analyses.display_analyses", aahru.xprize.analyses.display_analyses);
