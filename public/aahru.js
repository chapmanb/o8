var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.evalWorksForGlobals_ = null;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.getObjectByName(name) && !goog.implicitNamespaces_[name]) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.require = function(rule) {
  if(!COMPILED) {
    if(goog.getObjectByName(rule)) {
      return
    }
    var path = goog.getPathFromDeps_(rule);
    if(path) {
      goog.included_[path] = true;
      goog.writeScripts_()
    }else {
      var errorMessage = "goog.require could not find: " + rule;
      if(goog.global.console) {
        goog.global.console["error"](errorMessage)
      }
      throw Error(errorMessage);
    }
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(requireName in deps.nameToPath) {
            visitNode(deps.nameToPath[requireName])
          }else {
            if(!goog.getObjectByName(requireName)) {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  var context = selfObj || goog.global;
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(context, newArgs)
    }
  }else {
    return function() {
      return fn.apply(context, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = style
};
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global && !goog.string.contains(str, "<")) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var el = goog.global["document"]["createElement"]("div");
  el["innerHTML"] = "<pre>x" + str + "</pre>";
  if(el["firstChild"][goog.string.NORMALIZE_FN_]) {
    el["firstChild"][goog.string.NORMALIZE_FN_]()
  }
  str = el["firstChild"]["firstChild"]["nodeValue"].slice(1);
  el["innerHTML"] = "";
  return goog.string.canonicalizeNewlines(str)
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.NORMALIZE_FN_ = "normalize";
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  value = parseInt(value, 10);
  precision = 0;
  return goog.string.format.demuxes_["f"](value, flags, width, dotp, precision, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__23756 = x == null ? null : x;
  if(p[goog.typeOf(x__23756)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__23757__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__23757 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__23757__delegate.call(this, array, i, idxs)
    };
    G__23757.cljs$lang$maxFixedArity = 2;
    G__23757.cljs$lang$applyTo = function(arglist__23758) {
      var array = cljs.core.first(arglist__23758);
      var i = cljs.core.first(cljs.core.next(arglist__23758));
      var idxs = cljs.core.rest(cljs.core.next(arglist__23758));
      return G__23757__delegate(array, i, idxs)
    };
    G__23757.cljs$lang$arity$variadic = G__23757__delegate;
    return G__23757
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____23843 = this$;
      if(and__3822__auto____23843) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____23843
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2264__auto____23844 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23845 = cljs.core._invoke[goog.typeOf(x__2264__auto____23844)];
        if(or__3824__auto____23845) {
          return or__3824__auto____23845
        }else {
          var or__3824__auto____23846 = cljs.core._invoke["_"];
          if(or__3824__auto____23846) {
            return or__3824__auto____23846
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____23847 = this$;
      if(and__3822__auto____23847) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____23847
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2264__auto____23848 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23849 = cljs.core._invoke[goog.typeOf(x__2264__auto____23848)];
        if(or__3824__auto____23849) {
          return or__3824__auto____23849
        }else {
          var or__3824__auto____23850 = cljs.core._invoke["_"];
          if(or__3824__auto____23850) {
            return or__3824__auto____23850
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____23851 = this$;
      if(and__3822__auto____23851) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____23851
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2264__auto____23852 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23853 = cljs.core._invoke[goog.typeOf(x__2264__auto____23852)];
        if(or__3824__auto____23853) {
          return or__3824__auto____23853
        }else {
          var or__3824__auto____23854 = cljs.core._invoke["_"];
          if(or__3824__auto____23854) {
            return or__3824__auto____23854
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____23855 = this$;
      if(and__3822__auto____23855) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____23855
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2264__auto____23856 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23857 = cljs.core._invoke[goog.typeOf(x__2264__auto____23856)];
        if(or__3824__auto____23857) {
          return or__3824__auto____23857
        }else {
          var or__3824__auto____23858 = cljs.core._invoke["_"];
          if(or__3824__auto____23858) {
            return or__3824__auto____23858
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____23859 = this$;
      if(and__3822__auto____23859) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____23859
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2264__auto____23860 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23861 = cljs.core._invoke[goog.typeOf(x__2264__auto____23860)];
        if(or__3824__auto____23861) {
          return or__3824__auto____23861
        }else {
          var or__3824__auto____23862 = cljs.core._invoke["_"];
          if(or__3824__auto____23862) {
            return or__3824__auto____23862
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____23863 = this$;
      if(and__3822__auto____23863) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____23863
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2264__auto____23864 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23865 = cljs.core._invoke[goog.typeOf(x__2264__auto____23864)];
        if(or__3824__auto____23865) {
          return or__3824__auto____23865
        }else {
          var or__3824__auto____23866 = cljs.core._invoke["_"];
          if(or__3824__auto____23866) {
            return or__3824__auto____23866
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____23867 = this$;
      if(and__3822__auto____23867) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____23867
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2264__auto____23868 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23869 = cljs.core._invoke[goog.typeOf(x__2264__auto____23868)];
        if(or__3824__auto____23869) {
          return or__3824__auto____23869
        }else {
          var or__3824__auto____23870 = cljs.core._invoke["_"];
          if(or__3824__auto____23870) {
            return or__3824__auto____23870
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____23871 = this$;
      if(and__3822__auto____23871) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____23871
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2264__auto____23872 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23873 = cljs.core._invoke[goog.typeOf(x__2264__auto____23872)];
        if(or__3824__auto____23873) {
          return or__3824__auto____23873
        }else {
          var or__3824__auto____23874 = cljs.core._invoke["_"];
          if(or__3824__auto____23874) {
            return or__3824__auto____23874
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____23875 = this$;
      if(and__3822__auto____23875) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____23875
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2264__auto____23876 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23877 = cljs.core._invoke[goog.typeOf(x__2264__auto____23876)];
        if(or__3824__auto____23877) {
          return or__3824__auto____23877
        }else {
          var or__3824__auto____23878 = cljs.core._invoke["_"];
          if(or__3824__auto____23878) {
            return or__3824__auto____23878
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____23879 = this$;
      if(and__3822__auto____23879) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____23879
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2264__auto____23880 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23881 = cljs.core._invoke[goog.typeOf(x__2264__auto____23880)];
        if(or__3824__auto____23881) {
          return or__3824__auto____23881
        }else {
          var or__3824__auto____23882 = cljs.core._invoke["_"];
          if(or__3824__auto____23882) {
            return or__3824__auto____23882
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____23883 = this$;
      if(and__3822__auto____23883) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____23883
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2264__auto____23884 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23885 = cljs.core._invoke[goog.typeOf(x__2264__auto____23884)];
        if(or__3824__auto____23885) {
          return or__3824__auto____23885
        }else {
          var or__3824__auto____23886 = cljs.core._invoke["_"];
          if(or__3824__auto____23886) {
            return or__3824__auto____23886
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____23887 = this$;
      if(and__3822__auto____23887) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____23887
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2264__auto____23888 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23889 = cljs.core._invoke[goog.typeOf(x__2264__auto____23888)];
        if(or__3824__auto____23889) {
          return or__3824__auto____23889
        }else {
          var or__3824__auto____23890 = cljs.core._invoke["_"];
          if(or__3824__auto____23890) {
            return or__3824__auto____23890
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____23891 = this$;
      if(and__3822__auto____23891) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____23891
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2264__auto____23892 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23893 = cljs.core._invoke[goog.typeOf(x__2264__auto____23892)];
        if(or__3824__auto____23893) {
          return or__3824__auto____23893
        }else {
          var or__3824__auto____23894 = cljs.core._invoke["_"];
          if(or__3824__auto____23894) {
            return or__3824__auto____23894
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____23895 = this$;
      if(and__3822__auto____23895) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____23895
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2264__auto____23896 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23897 = cljs.core._invoke[goog.typeOf(x__2264__auto____23896)];
        if(or__3824__auto____23897) {
          return or__3824__auto____23897
        }else {
          var or__3824__auto____23898 = cljs.core._invoke["_"];
          if(or__3824__auto____23898) {
            return or__3824__auto____23898
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____23899 = this$;
      if(and__3822__auto____23899) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____23899
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2264__auto____23900 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23901 = cljs.core._invoke[goog.typeOf(x__2264__auto____23900)];
        if(or__3824__auto____23901) {
          return or__3824__auto____23901
        }else {
          var or__3824__auto____23902 = cljs.core._invoke["_"];
          if(or__3824__auto____23902) {
            return or__3824__auto____23902
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____23903 = this$;
      if(and__3822__auto____23903) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____23903
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2264__auto____23904 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23905 = cljs.core._invoke[goog.typeOf(x__2264__auto____23904)];
        if(or__3824__auto____23905) {
          return or__3824__auto____23905
        }else {
          var or__3824__auto____23906 = cljs.core._invoke["_"];
          if(or__3824__auto____23906) {
            return or__3824__auto____23906
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____23907 = this$;
      if(and__3822__auto____23907) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____23907
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2264__auto____23908 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23909 = cljs.core._invoke[goog.typeOf(x__2264__auto____23908)];
        if(or__3824__auto____23909) {
          return or__3824__auto____23909
        }else {
          var or__3824__auto____23910 = cljs.core._invoke["_"];
          if(or__3824__auto____23910) {
            return or__3824__auto____23910
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____23911 = this$;
      if(and__3822__auto____23911) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____23911
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2264__auto____23912 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23913 = cljs.core._invoke[goog.typeOf(x__2264__auto____23912)];
        if(or__3824__auto____23913) {
          return or__3824__auto____23913
        }else {
          var or__3824__auto____23914 = cljs.core._invoke["_"];
          if(or__3824__auto____23914) {
            return or__3824__auto____23914
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____23915 = this$;
      if(and__3822__auto____23915) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____23915
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2264__auto____23916 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23917 = cljs.core._invoke[goog.typeOf(x__2264__auto____23916)];
        if(or__3824__auto____23917) {
          return or__3824__auto____23917
        }else {
          var or__3824__auto____23918 = cljs.core._invoke["_"];
          if(or__3824__auto____23918) {
            return or__3824__auto____23918
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____23919 = this$;
      if(and__3822__auto____23919) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____23919
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2264__auto____23920 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23921 = cljs.core._invoke[goog.typeOf(x__2264__auto____23920)];
        if(or__3824__auto____23921) {
          return or__3824__auto____23921
        }else {
          var or__3824__auto____23922 = cljs.core._invoke["_"];
          if(or__3824__auto____23922) {
            return or__3824__auto____23922
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____23923 = this$;
      if(and__3822__auto____23923) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____23923
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2264__auto____23924 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23925 = cljs.core._invoke[goog.typeOf(x__2264__auto____23924)];
        if(or__3824__auto____23925) {
          return or__3824__auto____23925
        }else {
          var or__3824__auto____23926 = cljs.core._invoke["_"];
          if(or__3824__auto____23926) {
            return or__3824__auto____23926
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____23931 = coll;
    if(and__3822__auto____23931) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____23931
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2264__auto____23932 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____23933 = cljs.core._count[goog.typeOf(x__2264__auto____23932)];
      if(or__3824__auto____23933) {
        return or__3824__auto____23933
      }else {
        var or__3824__auto____23934 = cljs.core._count["_"];
        if(or__3824__auto____23934) {
          return or__3824__auto____23934
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____23939 = coll;
    if(and__3822__auto____23939) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____23939
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2264__auto____23940 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____23941 = cljs.core._empty[goog.typeOf(x__2264__auto____23940)];
      if(or__3824__auto____23941) {
        return or__3824__auto____23941
      }else {
        var or__3824__auto____23942 = cljs.core._empty["_"];
        if(or__3824__auto____23942) {
          return or__3824__auto____23942
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____23947 = coll;
    if(and__3822__auto____23947) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____23947
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2264__auto____23948 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____23949 = cljs.core._conj[goog.typeOf(x__2264__auto____23948)];
      if(or__3824__auto____23949) {
        return or__3824__auto____23949
      }else {
        var or__3824__auto____23950 = cljs.core._conj["_"];
        if(or__3824__auto____23950) {
          return or__3824__auto____23950
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____23959 = coll;
      if(and__3822__auto____23959) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____23959
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2264__auto____23960 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____23961 = cljs.core._nth[goog.typeOf(x__2264__auto____23960)];
        if(or__3824__auto____23961) {
          return or__3824__auto____23961
        }else {
          var or__3824__auto____23962 = cljs.core._nth["_"];
          if(or__3824__auto____23962) {
            return or__3824__auto____23962
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____23963 = coll;
      if(and__3822__auto____23963) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____23963
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2264__auto____23964 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____23965 = cljs.core._nth[goog.typeOf(x__2264__auto____23964)];
        if(or__3824__auto____23965) {
          return or__3824__auto____23965
        }else {
          var or__3824__auto____23966 = cljs.core._nth["_"];
          if(or__3824__auto____23966) {
            return or__3824__auto____23966
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____23971 = coll;
    if(and__3822__auto____23971) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____23971
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2264__auto____23972 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____23973 = cljs.core._first[goog.typeOf(x__2264__auto____23972)];
      if(or__3824__auto____23973) {
        return or__3824__auto____23973
      }else {
        var or__3824__auto____23974 = cljs.core._first["_"];
        if(or__3824__auto____23974) {
          return or__3824__auto____23974
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____23979 = coll;
    if(and__3822__auto____23979) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____23979
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2264__auto____23980 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____23981 = cljs.core._rest[goog.typeOf(x__2264__auto____23980)];
      if(or__3824__auto____23981) {
        return or__3824__auto____23981
      }else {
        var or__3824__auto____23982 = cljs.core._rest["_"];
        if(or__3824__auto____23982) {
          return or__3824__auto____23982
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____23987 = coll;
    if(and__3822__auto____23987) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____23987
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2264__auto____23988 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____23989 = cljs.core._next[goog.typeOf(x__2264__auto____23988)];
      if(or__3824__auto____23989) {
        return or__3824__auto____23989
      }else {
        var or__3824__auto____23990 = cljs.core._next["_"];
        if(or__3824__auto____23990) {
          return or__3824__auto____23990
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____23999 = o;
      if(and__3822__auto____23999) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____23999
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2264__auto____24000 = o == null ? null : o;
      return function() {
        var or__3824__auto____24001 = cljs.core._lookup[goog.typeOf(x__2264__auto____24000)];
        if(or__3824__auto____24001) {
          return or__3824__auto____24001
        }else {
          var or__3824__auto____24002 = cljs.core._lookup["_"];
          if(or__3824__auto____24002) {
            return or__3824__auto____24002
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____24003 = o;
      if(and__3822__auto____24003) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____24003
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2264__auto____24004 = o == null ? null : o;
      return function() {
        var or__3824__auto____24005 = cljs.core._lookup[goog.typeOf(x__2264__auto____24004)];
        if(or__3824__auto____24005) {
          return or__3824__auto____24005
        }else {
          var or__3824__auto____24006 = cljs.core._lookup["_"];
          if(or__3824__auto____24006) {
            return or__3824__auto____24006
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____24011 = coll;
    if(and__3822__auto____24011) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____24011
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2264__auto____24012 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____24013 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2264__auto____24012)];
      if(or__3824__auto____24013) {
        return or__3824__auto____24013
      }else {
        var or__3824__auto____24014 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____24014) {
          return or__3824__auto____24014
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____24019 = coll;
    if(and__3822__auto____24019) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____24019
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2264__auto____24020 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____24021 = cljs.core._assoc[goog.typeOf(x__2264__auto____24020)];
      if(or__3824__auto____24021) {
        return or__3824__auto____24021
      }else {
        var or__3824__auto____24022 = cljs.core._assoc["_"];
        if(or__3824__auto____24022) {
          return or__3824__auto____24022
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____24027 = coll;
    if(and__3822__auto____24027) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____24027
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2264__auto____24028 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____24029 = cljs.core._dissoc[goog.typeOf(x__2264__auto____24028)];
      if(or__3824__auto____24029) {
        return or__3824__auto____24029
      }else {
        var or__3824__auto____24030 = cljs.core._dissoc["_"];
        if(or__3824__auto____24030) {
          return or__3824__auto____24030
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____24035 = coll;
    if(and__3822__auto____24035) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____24035
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2264__auto____24036 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____24037 = cljs.core._key[goog.typeOf(x__2264__auto____24036)];
      if(or__3824__auto____24037) {
        return or__3824__auto____24037
      }else {
        var or__3824__auto____24038 = cljs.core._key["_"];
        if(or__3824__auto____24038) {
          return or__3824__auto____24038
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____24043 = coll;
    if(and__3822__auto____24043) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____24043
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2264__auto____24044 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____24045 = cljs.core._val[goog.typeOf(x__2264__auto____24044)];
      if(or__3824__auto____24045) {
        return or__3824__auto____24045
      }else {
        var or__3824__auto____24046 = cljs.core._val["_"];
        if(or__3824__auto____24046) {
          return or__3824__auto____24046
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____24051 = coll;
    if(and__3822__auto____24051) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____24051
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2264__auto____24052 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____24053 = cljs.core._disjoin[goog.typeOf(x__2264__auto____24052)];
      if(or__3824__auto____24053) {
        return or__3824__auto____24053
      }else {
        var or__3824__auto____24054 = cljs.core._disjoin["_"];
        if(or__3824__auto____24054) {
          return or__3824__auto____24054
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____24059 = coll;
    if(and__3822__auto____24059) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____24059
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2264__auto____24060 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____24061 = cljs.core._peek[goog.typeOf(x__2264__auto____24060)];
      if(or__3824__auto____24061) {
        return or__3824__auto____24061
      }else {
        var or__3824__auto____24062 = cljs.core._peek["_"];
        if(or__3824__auto____24062) {
          return or__3824__auto____24062
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____24067 = coll;
    if(and__3822__auto____24067) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____24067
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2264__auto____24068 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____24069 = cljs.core._pop[goog.typeOf(x__2264__auto____24068)];
      if(or__3824__auto____24069) {
        return or__3824__auto____24069
      }else {
        var or__3824__auto____24070 = cljs.core._pop["_"];
        if(or__3824__auto____24070) {
          return or__3824__auto____24070
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____24075 = coll;
    if(and__3822__auto____24075) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____24075
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2264__auto____24076 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____24077 = cljs.core._assoc_n[goog.typeOf(x__2264__auto____24076)];
      if(or__3824__auto____24077) {
        return or__3824__auto____24077
      }else {
        var or__3824__auto____24078 = cljs.core._assoc_n["_"];
        if(or__3824__auto____24078) {
          return or__3824__auto____24078
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____24083 = o;
    if(and__3822__auto____24083) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____24083
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2264__auto____24084 = o == null ? null : o;
    return function() {
      var or__3824__auto____24085 = cljs.core._deref[goog.typeOf(x__2264__auto____24084)];
      if(or__3824__auto____24085) {
        return or__3824__auto____24085
      }else {
        var or__3824__auto____24086 = cljs.core._deref["_"];
        if(or__3824__auto____24086) {
          return or__3824__auto____24086
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____24091 = o;
    if(and__3822__auto____24091) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____24091
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2264__auto____24092 = o == null ? null : o;
    return function() {
      var or__3824__auto____24093 = cljs.core._deref_with_timeout[goog.typeOf(x__2264__auto____24092)];
      if(or__3824__auto____24093) {
        return or__3824__auto____24093
      }else {
        var or__3824__auto____24094 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____24094) {
          return or__3824__auto____24094
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____24099 = o;
    if(and__3822__auto____24099) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____24099
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2264__auto____24100 = o == null ? null : o;
    return function() {
      var or__3824__auto____24101 = cljs.core._meta[goog.typeOf(x__2264__auto____24100)];
      if(or__3824__auto____24101) {
        return or__3824__auto____24101
      }else {
        var or__3824__auto____24102 = cljs.core._meta["_"];
        if(or__3824__auto____24102) {
          return or__3824__auto____24102
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____24107 = o;
    if(and__3822__auto____24107) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____24107
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2264__auto____24108 = o == null ? null : o;
    return function() {
      var or__3824__auto____24109 = cljs.core._with_meta[goog.typeOf(x__2264__auto____24108)];
      if(or__3824__auto____24109) {
        return or__3824__auto____24109
      }else {
        var or__3824__auto____24110 = cljs.core._with_meta["_"];
        if(or__3824__auto____24110) {
          return or__3824__auto____24110
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____24119 = coll;
      if(and__3822__auto____24119) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____24119
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2264__auto____24120 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____24121 = cljs.core._reduce[goog.typeOf(x__2264__auto____24120)];
        if(or__3824__auto____24121) {
          return or__3824__auto____24121
        }else {
          var or__3824__auto____24122 = cljs.core._reduce["_"];
          if(or__3824__auto____24122) {
            return or__3824__auto____24122
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____24123 = coll;
      if(and__3822__auto____24123) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____24123
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2264__auto____24124 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____24125 = cljs.core._reduce[goog.typeOf(x__2264__auto____24124)];
        if(or__3824__auto____24125) {
          return or__3824__auto____24125
        }else {
          var or__3824__auto____24126 = cljs.core._reduce["_"];
          if(or__3824__auto____24126) {
            return or__3824__auto____24126
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____24131 = coll;
    if(and__3822__auto____24131) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____24131
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2264__auto____24132 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____24133 = cljs.core._kv_reduce[goog.typeOf(x__2264__auto____24132)];
      if(or__3824__auto____24133) {
        return or__3824__auto____24133
      }else {
        var or__3824__auto____24134 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____24134) {
          return or__3824__auto____24134
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____24139 = o;
    if(and__3822__auto____24139) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____24139
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2264__auto____24140 = o == null ? null : o;
    return function() {
      var or__3824__auto____24141 = cljs.core._equiv[goog.typeOf(x__2264__auto____24140)];
      if(or__3824__auto____24141) {
        return or__3824__auto____24141
      }else {
        var or__3824__auto____24142 = cljs.core._equiv["_"];
        if(or__3824__auto____24142) {
          return or__3824__auto____24142
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____24147 = o;
    if(and__3822__auto____24147) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____24147
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2264__auto____24148 = o == null ? null : o;
    return function() {
      var or__3824__auto____24149 = cljs.core._hash[goog.typeOf(x__2264__auto____24148)];
      if(or__3824__auto____24149) {
        return or__3824__auto____24149
      }else {
        var or__3824__auto____24150 = cljs.core._hash["_"];
        if(or__3824__auto____24150) {
          return or__3824__auto____24150
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____24155 = o;
    if(and__3822__auto____24155) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____24155
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2264__auto____24156 = o == null ? null : o;
    return function() {
      var or__3824__auto____24157 = cljs.core._seq[goog.typeOf(x__2264__auto____24156)];
      if(or__3824__auto____24157) {
        return or__3824__auto____24157
      }else {
        var or__3824__auto____24158 = cljs.core._seq["_"];
        if(or__3824__auto____24158) {
          return or__3824__auto____24158
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____24163 = coll;
    if(and__3822__auto____24163) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____24163
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2264__auto____24164 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____24165 = cljs.core._rseq[goog.typeOf(x__2264__auto____24164)];
      if(or__3824__auto____24165) {
        return or__3824__auto____24165
      }else {
        var or__3824__auto____24166 = cljs.core._rseq["_"];
        if(or__3824__auto____24166) {
          return or__3824__auto____24166
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____24171 = coll;
    if(and__3822__auto____24171) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____24171
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2264__auto____24172 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____24173 = cljs.core._sorted_seq[goog.typeOf(x__2264__auto____24172)];
      if(or__3824__auto____24173) {
        return or__3824__auto____24173
      }else {
        var or__3824__auto____24174 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____24174) {
          return or__3824__auto____24174
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____24179 = coll;
    if(and__3822__auto____24179) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____24179
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2264__auto____24180 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____24181 = cljs.core._sorted_seq_from[goog.typeOf(x__2264__auto____24180)];
      if(or__3824__auto____24181) {
        return or__3824__auto____24181
      }else {
        var or__3824__auto____24182 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____24182) {
          return or__3824__auto____24182
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____24187 = coll;
    if(and__3822__auto____24187) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____24187
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2264__auto____24188 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____24189 = cljs.core._entry_key[goog.typeOf(x__2264__auto____24188)];
      if(or__3824__auto____24189) {
        return or__3824__auto____24189
      }else {
        var or__3824__auto____24190 = cljs.core._entry_key["_"];
        if(or__3824__auto____24190) {
          return or__3824__auto____24190
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____24195 = coll;
    if(and__3822__auto____24195) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____24195
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2264__auto____24196 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____24197 = cljs.core._comparator[goog.typeOf(x__2264__auto____24196)];
      if(or__3824__auto____24197) {
        return or__3824__auto____24197
      }else {
        var or__3824__auto____24198 = cljs.core._comparator["_"];
        if(or__3824__auto____24198) {
          return or__3824__auto____24198
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____24203 = o;
    if(and__3822__auto____24203) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____24203
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2264__auto____24204 = o == null ? null : o;
    return function() {
      var or__3824__auto____24205 = cljs.core._pr_seq[goog.typeOf(x__2264__auto____24204)];
      if(or__3824__auto____24205) {
        return or__3824__auto____24205
      }else {
        var or__3824__auto____24206 = cljs.core._pr_seq["_"];
        if(or__3824__auto____24206) {
          return or__3824__auto____24206
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____24211 = d;
    if(and__3822__auto____24211) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____24211
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2264__auto____24212 = d == null ? null : d;
    return function() {
      var or__3824__auto____24213 = cljs.core._realized_QMARK_[goog.typeOf(x__2264__auto____24212)];
      if(or__3824__auto____24213) {
        return or__3824__auto____24213
      }else {
        var or__3824__auto____24214 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____24214) {
          return or__3824__auto____24214
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____24219 = this$;
    if(and__3822__auto____24219) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____24219
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2264__auto____24220 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____24221 = cljs.core._notify_watches[goog.typeOf(x__2264__auto____24220)];
      if(or__3824__auto____24221) {
        return or__3824__auto____24221
      }else {
        var or__3824__auto____24222 = cljs.core._notify_watches["_"];
        if(or__3824__auto____24222) {
          return or__3824__auto____24222
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____24227 = this$;
    if(and__3822__auto____24227) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____24227
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2264__auto____24228 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____24229 = cljs.core._add_watch[goog.typeOf(x__2264__auto____24228)];
      if(or__3824__auto____24229) {
        return or__3824__auto____24229
      }else {
        var or__3824__auto____24230 = cljs.core._add_watch["_"];
        if(or__3824__auto____24230) {
          return or__3824__auto____24230
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____24235 = this$;
    if(and__3822__auto____24235) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____24235
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2264__auto____24236 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____24237 = cljs.core._remove_watch[goog.typeOf(x__2264__auto____24236)];
      if(or__3824__auto____24237) {
        return or__3824__auto____24237
      }else {
        var or__3824__auto____24238 = cljs.core._remove_watch["_"];
        if(or__3824__auto____24238) {
          return or__3824__auto____24238
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____24243 = coll;
    if(and__3822__auto____24243) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____24243
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2264__auto____24244 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____24245 = cljs.core._as_transient[goog.typeOf(x__2264__auto____24244)];
      if(or__3824__auto____24245) {
        return or__3824__auto____24245
      }else {
        var or__3824__auto____24246 = cljs.core._as_transient["_"];
        if(or__3824__auto____24246) {
          return or__3824__auto____24246
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____24251 = tcoll;
    if(and__3822__auto____24251) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____24251
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2264__auto____24252 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____24253 = cljs.core._conj_BANG_[goog.typeOf(x__2264__auto____24252)];
      if(or__3824__auto____24253) {
        return or__3824__auto____24253
      }else {
        var or__3824__auto____24254 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____24254) {
          return or__3824__auto____24254
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____24259 = tcoll;
    if(and__3822__auto____24259) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____24259
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2264__auto____24260 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____24261 = cljs.core._persistent_BANG_[goog.typeOf(x__2264__auto____24260)];
      if(or__3824__auto____24261) {
        return or__3824__auto____24261
      }else {
        var or__3824__auto____24262 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____24262) {
          return or__3824__auto____24262
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____24267 = tcoll;
    if(and__3822__auto____24267) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____24267
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2264__auto____24268 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____24269 = cljs.core._assoc_BANG_[goog.typeOf(x__2264__auto____24268)];
      if(or__3824__auto____24269) {
        return or__3824__auto____24269
      }else {
        var or__3824__auto____24270 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____24270) {
          return or__3824__auto____24270
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____24275 = tcoll;
    if(and__3822__auto____24275) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____24275
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2264__auto____24276 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____24277 = cljs.core._dissoc_BANG_[goog.typeOf(x__2264__auto____24276)];
      if(or__3824__auto____24277) {
        return or__3824__auto____24277
      }else {
        var or__3824__auto____24278 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____24278) {
          return or__3824__auto____24278
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____24283 = tcoll;
    if(and__3822__auto____24283) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____24283
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2264__auto____24284 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____24285 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2264__auto____24284)];
      if(or__3824__auto____24285) {
        return or__3824__auto____24285
      }else {
        var or__3824__auto____24286 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____24286) {
          return or__3824__auto____24286
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____24291 = tcoll;
    if(and__3822__auto____24291) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____24291
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2264__auto____24292 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____24293 = cljs.core._pop_BANG_[goog.typeOf(x__2264__auto____24292)];
      if(or__3824__auto____24293) {
        return or__3824__auto____24293
      }else {
        var or__3824__auto____24294 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____24294) {
          return or__3824__auto____24294
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____24299 = tcoll;
    if(and__3822__auto____24299) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____24299
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2264__auto____24300 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____24301 = cljs.core._disjoin_BANG_[goog.typeOf(x__2264__auto____24300)];
      if(or__3824__auto____24301) {
        return or__3824__auto____24301
      }else {
        var or__3824__auto____24302 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____24302) {
          return or__3824__auto____24302
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____24307 = x;
    if(and__3822__auto____24307) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____24307
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2264__auto____24308 = x == null ? null : x;
    return function() {
      var or__3824__auto____24309 = cljs.core._compare[goog.typeOf(x__2264__auto____24308)];
      if(or__3824__auto____24309) {
        return or__3824__auto____24309
      }else {
        var or__3824__auto____24310 = cljs.core._compare["_"];
        if(or__3824__auto____24310) {
          return or__3824__auto____24310
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____24315 = coll;
    if(and__3822__auto____24315) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____24315
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2264__auto____24316 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____24317 = cljs.core._drop_first[goog.typeOf(x__2264__auto____24316)];
      if(or__3824__auto____24317) {
        return or__3824__auto____24317
      }else {
        var or__3824__auto____24318 = cljs.core._drop_first["_"];
        if(or__3824__auto____24318) {
          return or__3824__auto____24318
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____24323 = coll;
    if(and__3822__auto____24323) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____24323
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2264__auto____24324 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____24325 = cljs.core._chunked_first[goog.typeOf(x__2264__auto____24324)];
      if(or__3824__auto____24325) {
        return or__3824__auto____24325
      }else {
        var or__3824__auto____24326 = cljs.core._chunked_first["_"];
        if(or__3824__auto____24326) {
          return or__3824__auto____24326
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____24331 = coll;
    if(and__3822__auto____24331) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____24331
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2264__auto____24332 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____24333 = cljs.core._chunked_rest[goog.typeOf(x__2264__auto____24332)];
      if(or__3824__auto____24333) {
        return or__3824__auto____24333
      }else {
        var or__3824__auto____24334 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____24334) {
          return or__3824__auto____24334
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____24339 = coll;
    if(and__3822__auto____24339) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____24339
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2264__auto____24340 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____24341 = cljs.core._chunked_next[goog.typeOf(x__2264__auto____24340)];
      if(or__3824__auto____24341) {
        return or__3824__auto____24341
      }else {
        var or__3824__auto____24342 = cljs.core._chunked_next["_"];
        if(or__3824__auto____24342) {
          return or__3824__auto____24342
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____24344 = x === y;
    if(or__3824__auto____24344) {
      return or__3824__auto____24344
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__24345__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__24346 = y;
            var G__24347 = cljs.core.first.call(null, more);
            var G__24348 = cljs.core.next.call(null, more);
            x = G__24346;
            y = G__24347;
            more = G__24348;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__24345 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__24345__delegate.call(this, x, y, more)
    };
    G__24345.cljs$lang$maxFixedArity = 2;
    G__24345.cljs$lang$applyTo = function(arglist__24349) {
      var x = cljs.core.first(arglist__24349);
      var y = cljs.core.first(cljs.core.next(arglist__24349));
      var more = cljs.core.rest(cljs.core.next(arglist__24349));
      return G__24345__delegate(x, y, more)
    };
    G__24345.cljs$lang$arity$variadic = G__24345__delegate;
    return G__24345
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__24350 = null;
  var G__24350__2 = function(o, k) {
    return null
  };
  var G__24350__3 = function(o, k, not_found) {
    return not_found
  };
  G__24350 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24350__2.call(this, o, k);
      case 3:
        return G__24350__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__24350
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__24351 = null;
  var G__24351__2 = function(_, f) {
    return f.call(null)
  };
  var G__24351__3 = function(_, f, start) {
    return start
  };
  G__24351 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__24351__2.call(this, _, f);
      case 3:
        return G__24351__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__24351
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__24352 = null;
  var G__24352__2 = function(_, n) {
    return null
  };
  var G__24352__3 = function(_, n, not_found) {
    return not_found
  };
  G__24352 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24352__2.call(this, _, n);
      case 3:
        return G__24352__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__24352
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____24353 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____24353) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____24353
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__24366 = cljs.core._count.call(null, cicoll);
    if(cnt__24366 === 0) {
      return f.call(null)
    }else {
      var val__24367 = cljs.core._nth.call(null, cicoll, 0);
      var n__24368 = 1;
      while(true) {
        if(n__24368 < cnt__24366) {
          var nval__24369 = f.call(null, val__24367, cljs.core._nth.call(null, cicoll, n__24368));
          if(cljs.core.reduced_QMARK_.call(null, nval__24369)) {
            return cljs.core.deref.call(null, nval__24369)
          }else {
            var G__24378 = nval__24369;
            var G__24379 = n__24368 + 1;
            val__24367 = G__24378;
            n__24368 = G__24379;
            continue
          }
        }else {
          return val__24367
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__24370 = cljs.core._count.call(null, cicoll);
    var val__24371 = val;
    var n__24372 = 0;
    while(true) {
      if(n__24372 < cnt__24370) {
        var nval__24373 = f.call(null, val__24371, cljs.core._nth.call(null, cicoll, n__24372));
        if(cljs.core.reduced_QMARK_.call(null, nval__24373)) {
          return cljs.core.deref.call(null, nval__24373)
        }else {
          var G__24380 = nval__24373;
          var G__24381 = n__24372 + 1;
          val__24371 = G__24380;
          n__24372 = G__24381;
          continue
        }
      }else {
        return val__24371
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__24374 = cljs.core._count.call(null, cicoll);
    var val__24375 = val;
    var n__24376 = idx;
    while(true) {
      if(n__24376 < cnt__24374) {
        var nval__24377 = f.call(null, val__24375, cljs.core._nth.call(null, cicoll, n__24376));
        if(cljs.core.reduced_QMARK_.call(null, nval__24377)) {
          return cljs.core.deref.call(null, nval__24377)
        }else {
          var G__24382 = nval__24377;
          var G__24383 = n__24376 + 1;
          val__24375 = G__24382;
          n__24376 = G__24383;
          continue
        }
      }else {
        return val__24375
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__24396 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__24397 = arr[0];
      var n__24398 = 1;
      while(true) {
        if(n__24398 < cnt__24396) {
          var nval__24399 = f.call(null, val__24397, arr[n__24398]);
          if(cljs.core.reduced_QMARK_.call(null, nval__24399)) {
            return cljs.core.deref.call(null, nval__24399)
          }else {
            var G__24408 = nval__24399;
            var G__24409 = n__24398 + 1;
            val__24397 = G__24408;
            n__24398 = G__24409;
            continue
          }
        }else {
          return val__24397
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__24400 = arr.length;
    var val__24401 = val;
    var n__24402 = 0;
    while(true) {
      if(n__24402 < cnt__24400) {
        var nval__24403 = f.call(null, val__24401, arr[n__24402]);
        if(cljs.core.reduced_QMARK_.call(null, nval__24403)) {
          return cljs.core.deref.call(null, nval__24403)
        }else {
          var G__24410 = nval__24403;
          var G__24411 = n__24402 + 1;
          val__24401 = G__24410;
          n__24402 = G__24411;
          continue
        }
      }else {
        return val__24401
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__24404 = arr.length;
    var val__24405 = val;
    var n__24406 = idx;
    while(true) {
      if(n__24406 < cnt__24404) {
        var nval__24407 = f.call(null, val__24405, arr[n__24406]);
        if(cljs.core.reduced_QMARK_.call(null, nval__24407)) {
          return cljs.core.deref.call(null, nval__24407)
        }else {
          var G__24412 = nval__24407;
          var G__24413 = n__24406 + 1;
          val__24405 = G__24412;
          n__24406 = G__24413;
          continue
        }
      }else {
        return val__24405
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__24414 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__24415 = this;
  if(this__24415.i + 1 < this__24415.a.length) {
    return new cljs.core.IndexedSeq(this__24415.a, this__24415.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__24416 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__24417 = this;
  var c__24418 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__24418 > 0) {
    return new cljs.core.RSeq(coll, c__24418 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__24419 = this;
  var this__24420 = this;
  return cljs.core.pr_str.call(null, this__24420)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__24421 = this;
  if(cljs.core.counted_QMARK_.call(null, this__24421.a)) {
    return cljs.core.ci_reduce.call(null, this__24421.a, f, this__24421.a[this__24421.i], this__24421.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__24421.a[this__24421.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__24422 = this;
  if(cljs.core.counted_QMARK_.call(null, this__24422.a)) {
    return cljs.core.ci_reduce.call(null, this__24422.a, f, start, this__24422.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__24423 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__24424 = this;
  return this__24424.a.length - this__24424.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__24425 = this;
  return this__24425.a[this__24425.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__24426 = this;
  if(this__24426.i + 1 < this__24426.a.length) {
    return new cljs.core.IndexedSeq(this__24426.a, this__24426.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__24427 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__24428 = this;
  var i__24429 = n + this__24428.i;
  if(i__24429 < this__24428.a.length) {
    return this__24428.a[i__24429]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__24430 = this;
  var i__24431 = n + this__24430.i;
  if(i__24431 < this__24430.a.length) {
    return this__24430.a[i__24431]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__24432 = null;
  var G__24432__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__24432__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__24432 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__24432__2.call(this, array, f);
      case 3:
        return G__24432__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__24432
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__24433 = null;
  var G__24433__2 = function(array, k) {
    return array[k]
  };
  var G__24433__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__24433 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24433__2.call(this, array, k);
      case 3:
        return G__24433__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__24433
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__24434 = null;
  var G__24434__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__24434__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__24434 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24434__2.call(this, array, n);
      case 3:
        return G__24434__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__24434
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__24435 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__24436 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__24437 = this;
  var this__24438 = this;
  return cljs.core.pr_str.call(null, this__24438)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__24439 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__24440 = this;
  return this__24440.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__24441 = this;
  return cljs.core._nth.call(null, this__24441.ci, this__24441.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__24442 = this;
  if(this__24442.i > 0) {
    return new cljs.core.RSeq(this__24442.ci, this__24442.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__24443 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__24444 = this;
  return new cljs.core.RSeq(this__24444.ci, this__24444.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__24445 = this;
  return this__24445.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__24449__24450 = coll;
      if(G__24449__24450) {
        if(function() {
          var or__3824__auto____24451 = G__24449__24450.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____24451) {
            return or__3824__auto____24451
          }else {
            return G__24449__24450.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__24449__24450.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__24449__24450)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__24449__24450)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__24456__24457 = coll;
      if(G__24456__24457) {
        if(function() {
          var or__3824__auto____24458 = G__24456__24457.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____24458) {
            return or__3824__auto____24458
          }else {
            return G__24456__24457.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__24456__24457.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__24456__24457)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__24456__24457)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__24459 = cljs.core.seq.call(null, coll);
      if(s__24459 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__24459)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__24464__24465 = coll;
      if(G__24464__24465) {
        if(function() {
          var or__3824__auto____24466 = G__24464__24465.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____24466) {
            return or__3824__auto____24466
          }else {
            return G__24464__24465.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__24464__24465.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__24464__24465)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__24464__24465)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__24467 = cljs.core.seq.call(null, coll);
      if(!(s__24467 == null)) {
        return cljs.core._rest.call(null, s__24467)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__24471__24472 = coll;
      if(G__24471__24472) {
        if(function() {
          var or__3824__auto____24473 = G__24471__24472.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____24473) {
            return or__3824__auto____24473
          }else {
            return G__24471__24472.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__24471__24472.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__24471__24472)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__24471__24472)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__24475 = cljs.core.next.call(null, s);
    if(!(sn__24475 == null)) {
      var G__24476 = sn__24475;
      s = G__24476;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__24477__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__24478 = conj.call(null, coll, x);
          var G__24479 = cljs.core.first.call(null, xs);
          var G__24480 = cljs.core.next.call(null, xs);
          coll = G__24478;
          x = G__24479;
          xs = G__24480;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__24477 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__24477__delegate.call(this, coll, x, xs)
    };
    G__24477.cljs$lang$maxFixedArity = 2;
    G__24477.cljs$lang$applyTo = function(arglist__24481) {
      var coll = cljs.core.first(arglist__24481);
      var x = cljs.core.first(cljs.core.next(arglist__24481));
      var xs = cljs.core.rest(cljs.core.next(arglist__24481));
      return G__24477__delegate(coll, x, xs)
    };
    G__24477.cljs$lang$arity$variadic = G__24477__delegate;
    return G__24477
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__24484 = cljs.core.seq.call(null, coll);
  var acc__24485 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__24484)) {
      return acc__24485 + cljs.core._count.call(null, s__24484)
    }else {
      var G__24486 = cljs.core.next.call(null, s__24484);
      var G__24487 = acc__24485 + 1;
      s__24484 = G__24486;
      acc__24485 = G__24487;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__24494__24495 = coll;
        if(G__24494__24495) {
          if(function() {
            var or__3824__auto____24496 = G__24494__24495.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____24496) {
              return or__3824__auto____24496
            }else {
              return G__24494__24495.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__24494__24495.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__24494__24495)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__24494__24495)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__24497__24498 = coll;
        if(G__24497__24498) {
          if(function() {
            var or__3824__auto____24499 = G__24497__24498.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____24499) {
              return or__3824__auto____24499
            }else {
              return G__24497__24498.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__24497__24498.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__24497__24498)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__24497__24498)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__24502__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__24501 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__24503 = ret__24501;
          var G__24504 = cljs.core.first.call(null, kvs);
          var G__24505 = cljs.core.second.call(null, kvs);
          var G__24506 = cljs.core.nnext.call(null, kvs);
          coll = G__24503;
          k = G__24504;
          v = G__24505;
          kvs = G__24506;
          continue
        }else {
          return ret__24501
        }
        break
      }
    };
    var G__24502 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__24502__delegate.call(this, coll, k, v, kvs)
    };
    G__24502.cljs$lang$maxFixedArity = 3;
    G__24502.cljs$lang$applyTo = function(arglist__24507) {
      var coll = cljs.core.first(arglist__24507);
      var k = cljs.core.first(cljs.core.next(arglist__24507));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__24507)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__24507)));
      return G__24502__delegate(coll, k, v, kvs)
    };
    G__24502.cljs$lang$arity$variadic = G__24502__delegate;
    return G__24502
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__24510__delegate = function(coll, k, ks) {
      while(true) {
        var ret__24509 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__24511 = ret__24509;
          var G__24512 = cljs.core.first.call(null, ks);
          var G__24513 = cljs.core.next.call(null, ks);
          coll = G__24511;
          k = G__24512;
          ks = G__24513;
          continue
        }else {
          return ret__24509
        }
        break
      }
    };
    var G__24510 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__24510__delegate.call(this, coll, k, ks)
    };
    G__24510.cljs$lang$maxFixedArity = 2;
    G__24510.cljs$lang$applyTo = function(arglist__24514) {
      var coll = cljs.core.first(arglist__24514);
      var k = cljs.core.first(cljs.core.next(arglist__24514));
      var ks = cljs.core.rest(cljs.core.next(arglist__24514));
      return G__24510__delegate(coll, k, ks)
    };
    G__24510.cljs$lang$arity$variadic = G__24510__delegate;
    return G__24510
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__24518__24519 = o;
    if(G__24518__24519) {
      if(function() {
        var or__3824__auto____24520 = G__24518__24519.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____24520) {
          return or__3824__auto____24520
        }else {
          return G__24518__24519.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__24518__24519.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__24518__24519)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__24518__24519)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__24523__delegate = function(coll, k, ks) {
      while(true) {
        var ret__24522 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__24524 = ret__24522;
          var G__24525 = cljs.core.first.call(null, ks);
          var G__24526 = cljs.core.next.call(null, ks);
          coll = G__24524;
          k = G__24525;
          ks = G__24526;
          continue
        }else {
          return ret__24522
        }
        break
      }
    };
    var G__24523 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__24523__delegate.call(this, coll, k, ks)
    };
    G__24523.cljs$lang$maxFixedArity = 2;
    G__24523.cljs$lang$applyTo = function(arglist__24527) {
      var coll = cljs.core.first(arglist__24527);
      var k = cljs.core.first(cljs.core.next(arglist__24527));
      var ks = cljs.core.rest(cljs.core.next(arglist__24527));
      return G__24523__delegate(coll, k, ks)
    };
    G__24523.cljs$lang$arity$variadic = G__24523__delegate;
    return G__24523
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__24529 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__24529;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__24529
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__24531 = cljs.core.string_hash_cache[k];
  if(!(h__24531 == null)) {
    return h__24531
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____24533 = goog.isString(o);
      if(and__3822__auto____24533) {
        return check_cache
      }else {
        return and__3822__auto____24533
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__24537__24538 = x;
    if(G__24537__24538) {
      if(function() {
        var or__3824__auto____24539 = G__24537__24538.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____24539) {
          return or__3824__auto____24539
        }else {
          return G__24537__24538.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__24537__24538.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__24537__24538)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__24537__24538)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__24543__24544 = x;
    if(G__24543__24544) {
      if(function() {
        var or__3824__auto____24545 = G__24543__24544.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____24545) {
          return or__3824__auto____24545
        }else {
          return G__24543__24544.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__24543__24544.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__24543__24544)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__24543__24544)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__24549__24550 = x;
  if(G__24549__24550) {
    if(function() {
      var or__3824__auto____24551 = G__24549__24550.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____24551) {
        return or__3824__auto____24551
      }else {
        return G__24549__24550.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__24549__24550.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__24549__24550)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__24549__24550)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__24555__24556 = x;
  if(G__24555__24556) {
    if(function() {
      var or__3824__auto____24557 = G__24555__24556.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____24557) {
        return or__3824__auto____24557
      }else {
        return G__24555__24556.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__24555__24556.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__24555__24556)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__24555__24556)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__24561__24562 = x;
  if(G__24561__24562) {
    if(function() {
      var or__3824__auto____24563 = G__24561__24562.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____24563) {
        return or__3824__auto____24563
      }else {
        return G__24561__24562.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__24561__24562.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__24561__24562)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__24561__24562)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__24567__24568 = x;
  if(G__24567__24568) {
    if(function() {
      var or__3824__auto____24569 = G__24567__24568.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____24569) {
        return or__3824__auto____24569
      }else {
        return G__24567__24568.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__24567__24568.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__24567__24568)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__24567__24568)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__24573__24574 = x;
  if(G__24573__24574) {
    if(function() {
      var or__3824__auto____24575 = G__24573__24574.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____24575) {
        return or__3824__auto____24575
      }else {
        return G__24573__24574.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__24573__24574.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__24573__24574)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__24573__24574)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__24579__24580 = x;
    if(G__24579__24580) {
      if(function() {
        var or__3824__auto____24581 = G__24579__24580.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____24581) {
          return or__3824__auto____24581
        }else {
          return G__24579__24580.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__24579__24580.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__24579__24580)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__24579__24580)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__24585__24586 = x;
  if(G__24585__24586) {
    if(function() {
      var or__3824__auto____24587 = G__24585__24586.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____24587) {
        return or__3824__auto____24587
      }else {
        return G__24585__24586.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__24585__24586.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__24585__24586)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__24585__24586)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__24591__24592 = x;
  if(G__24591__24592) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____24593 = null;
      if(cljs.core.truth_(or__3824__auto____24593)) {
        return or__3824__auto____24593
      }else {
        return G__24591__24592.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__24591__24592.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__24591__24592)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__24591__24592)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__24594__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__24594 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__24594__delegate.call(this, keyvals)
    };
    G__24594.cljs$lang$maxFixedArity = 0;
    G__24594.cljs$lang$applyTo = function(arglist__24595) {
      var keyvals = cljs.core.seq(arglist__24595);
      return G__24594__delegate(keyvals)
    };
    G__24594.cljs$lang$arity$variadic = G__24594__delegate;
    return G__24594
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__24597 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__24597.push(key)
  });
  return keys__24597
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__24601 = i;
  var j__24602 = j;
  var len__24603 = len;
  while(true) {
    if(len__24603 === 0) {
      return to
    }else {
      to[j__24602] = from[i__24601];
      var G__24604 = i__24601 + 1;
      var G__24605 = j__24602 + 1;
      var G__24606 = len__24603 - 1;
      i__24601 = G__24604;
      j__24602 = G__24605;
      len__24603 = G__24606;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__24610 = i + (len - 1);
  var j__24611 = j + (len - 1);
  var len__24612 = len;
  while(true) {
    if(len__24612 === 0) {
      return to
    }else {
      to[j__24611] = from[i__24610];
      var G__24613 = i__24610 - 1;
      var G__24614 = j__24611 - 1;
      var G__24615 = len__24612 - 1;
      i__24610 = G__24613;
      j__24611 = G__24614;
      len__24612 = G__24615;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__24619__24620 = s;
    if(G__24619__24620) {
      if(function() {
        var or__3824__auto____24621 = G__24619__24620.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____24621) {
          return or__3824__auto____24621
        }else {
          return G__24619__24620.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__24619__24620.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__24619__24620)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__24619__24620)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__24625__24626 = s;
  if(G__24625__24626) {
    if(function() {
      var or__3824__auto____24627 = G__24625__24626.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____24627) {
        return or__3824__auto____24627
      }else {
        return G__24625__24626.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__24625__24626.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__24625__24626)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__24625__24626)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____24630 = goog.isString(x);
  if(and__3822__auto____24630) {
    return!function() {
      var or__3824__auto____24631 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____24631) {
        return or__3824__auto____24631
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____24630
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____24633 = goog.isString(x);
  if(and__3822__auto____24633) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____24633
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____24635 = goog.isString(x);
  if(and__3822__auto____24635) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____24635
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____24640 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____24640) {
    return or__3824__auto____24640
  }else {
    var G__24641__24642 = f;
    if(G__24641__24642) {
      if(function() {
        var or__3824__auto____24643 = G__24641__24642.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____24643) {
          return or__3824__auto____24643
        }else {
          return G__24641__24642.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__24641__24642.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__24641__24642)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__24641__24642)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____24645 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____24645) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____24645
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____24648 = coll;
    if(cljs.core.truth_(and__3822__auto____24648)) {
      var and__3822__auto____24649 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____24649) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____24649
      }
    }else {
      return and__3822__auto____24648
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__24658__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__24654 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__24655 = more;
        while(true) {
          var x__24656 = cljs.core.first.call(null, xs__24655);
          var etc__24657 = cljs.core.next.call(null, xs__24655);
          if(cljs.core.truth_(xs__24655)) {
            if(cljs.core.contains_QMARK_.call(null, s__24654, x__24656)) {
              return false
            }else {
              var G__24659 = cljs.core.conj.call(null, s__24654, x__24656);
              var G__24660 = etc__24657;
              s__24654 = G__24659;
              xs__24655 = G__24660;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__24658 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__24658__delegate.call(this, x, y, more)
    };
    G__24658.cljs$lang$maxFixedArity = 2;
    G__24658.cljs$lang$applyTo = function(arglist__24661) {
      var x = cljs.core.first(arglist__24661);
      var y = cljs.core.first(cljs.core.next(arglist__24661));
      var more = cljs.core.rest(cljs.core.next(arglist__24661));
      return G__24658__delegate(x, y, more)
    };
    G__24658.cljs$lang$arity$variadic = G__24658__delegate;
    return G__24658
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__24665__24666 = x;
            if(G__24665__24666) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____24667 = null;
                if(cljs.core.truth_(or__3824__auto____24667)) {
                  return or__3824__auto____24667
                }else {
                  return G__24665__24666.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__24665__24666.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__24665__24666)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__24665__24666)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__24672 = cljs.core.count.call(null, xs);
    var yl__24673 = cljs.core.count.call(null, ys);
    if(xl__24672 < yl__24673) {
      return-1
    }else {
      if(xl__24672 > yl__24673) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__24672, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__24674 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____24675 = d__24674 === 0;
        if(and__3822__auto____24675) {
          return n + 1 < len
        }else {
          return and__3822__auto____24675
        }
      }()) {
        var G__24676 = xs;
        var G__24677 = ys;
        var G__24678 = len;
        var G__24679 = n + 1;
        xs = G__24676;
        ys = G__24677;
        len = G__24678;
        n = G__24679;
        continue
      }else {
        return d__24674
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__24681 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__24681)) {
        return r__24681
      }else {
        if(cljs.core.truth_(r__24681)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__24683 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__24683, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__24683)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____24689 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____24689) {
      var s__24690 = temp__3971__auto____24689;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__24690), cljs.core.next.call(null, s__24690))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__24691 = val;
    var coll__24692 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__24692) {
        var nval__24693 = f.call(null, val__24691, cljs.core.first.call(null, coll__24692));
        if(cljs.core.reduced_QMARK_.call(null, nval__24693)) {
          return cljs.core.deref.call(null, nval__24693)
        }else {
          var G__24694 = nval__24693;
          var G__24695 = cljs.core.next.call(null, coll__24692);
          val__24691 = G__24694;
          coll__24692 = G__24695;
          continue
        }
      }else {
        return val__24691
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__24697 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__24697);
  return cljs.core.vec.call(null, a__24697)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__24704__24705 = coll;
      if(G__24704__24705) {
        if(function() {
          var or__3824__auto____24706 = G__24704__24705.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____24706) {
            return or__3824__auto____24706
          }else {
            return G__24704__24705.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__24704__24705.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__24704__24705)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__24704__24705)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__24707__24708 = coll;
      if(G__24707__24708) {
        if(function() {
          var or__3824__auto____24709 = G__24707__24708.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____24709) {
            return or__3824__auto____24709
          }else {
            return G__24707__24708.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__24707__24708.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__24707__24708)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__24707__24708)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__24710 = this;
  return this__24710.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__24711__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__24711 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__24711__delegate.call(this, x, y, more)
    };
    G__24711.cljs$lang$maxFixedArity = 2;
    G__24711.cljs$lang$applyTo = function(arglist__24712) {
      var x = cljs.core.first(arglist__24712);
      var y = cljs.core.first(cljs.core.next(arglist__24712));
      var more = cljs.core.rest(cljs.core.next(arglist__24712));
      return G__24711__delegate(x, y, more)
    };
    G__24711.cljs$lang$arity$variadic = G__24711__delegate;
    return G__24711
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__24713__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__24713 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__24713__delegate.call(this, x, y, more)
    };
    G__24713.cljs$lang$maxFixedArity = 2;
    G__24713.cljs$lang$applyTo = function(arglist__24714) {
      var x = cljs.core.first(arglist__24714);
      var y = cljs.core.first(cljs.core.next(arglist__24714));
      var more = cljs.core.rest(cljs.core.next(arglist__24714));
      return G__24713__delegate(x, y, more)
    };
    G__24713.cljs$lang$arity$variadic = G__24713__delegate;
    return G__24713
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__24715__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__24715 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__24715__delegate.call(this, x, y, more)
    };
    G__24715.cljs$lang$maxFixedArity = 2;
    G__24715.cljs$lang$applyTo = function(arglist__24716) {
      var x = cljs.core.first(arglist__24716);
      var y = cljs.core.first(cljs.core.next(arglist__24716));
      var more = cljs.core.rest(cljs.core.next(arglist__24716));
      return G__24715__delegate(x, y, more)
    };
    G__24715.cljs$lang$arity$variadic = G__24715__delegate;
    return G__24715
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__24717__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__24717 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__24717__delegate.call(this, x, y, more)
    };
    G__24717.cljs$lang$maxFixedArity = 2;
    G__24717.cljs$lang$applyTo = function(arglist__24718) {
      var x = cljs.core.first(arglist__24718);
      var y = cljs.core.first(cljs.core.next(arglist__24718));
      var more = cljs.core.rest(cljs.core.next(arglist__24718));
      return G__24717__delegate(x, y, more)
    };
    G__24717.cljs$lang$arity$variadic = G__24717__delegate;
    return G__24717
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__24719__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__24720 = y;
            var G__24721 = cljs.core.first.call(null, more);
            var G__24722 = cljs.core.next.call(null, more);
            x = G__24720;
            y = G__24721;
            more = G__24722;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__24719 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__24719__delegate.call(this, x, y, more)
    };
    G__24719.cljs$lang$maxFixedArity = 2;
    G__24719.cljs$lang$applyTo = function(arglist__24723) {
      var x = cljs.core.first(arglist__24723);
      var y = cljs.core.first(cljs.core.next(arglist__24723));
      var more = cljs.core.rest(cljs.core.next(arglist__24723));
      return G__24719__delegate(x, y, more)
    };
    G__24719.cljs$lang$arity$variadic = G__24719__delegate;
    return G__24719
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__24724__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__24725 = y;
            var G__24726 = cljs.core.first.call(null, more);
            var G__24727 = cljs.core.next.call(null, more);
            x = G__24725;
            y = G__24726;
            more = G__24727;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__24724 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__24724__delegate.call(this, x, y, more)
    };
    G__24724.cljs$lang$maxFixedArity = 2;
    G__24724.cljs$lang$applyTo = function(arglist__24728) {
      var x = cljs.core.first(arglist__24728);
      var y = cljs.core.first(cljs.core.next(arglist__24728));
      var more = cljs.core.rest(cljs.core.next(arglist__24728));
      return G__24724__delegate(x, y, more)
    };
    G__24724.cljs$lang$arity$variadic = G__24724__delegate;
    return G__24724
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__24729__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__24730 = y;
            var G__24731 = cljs.core.first.call(null, more);
            var G__24732 = cljs.core.next.call(null, more);
            x = G__24730;
            y = G__24731;
            more = G__24732;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__24729 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__24729__delegate.call(this, x, y, more)
    };
    G__24729.cljs$lang$maxFixedArity = 2;
    G__24729.cljs$lang$applyTo = function(arglist__24733) {
      var x = cljs.core.first(arglist__24733);
      var y = cljs.core.first(cljs.core.next(arglist__24733));
      var more = cljs.core.rest(cljs.core.next(arglist__24733));
      return G__24729__delegate(x, y, more)
    };
    G__24729.cljs$lang$arity$variadic = G__24729__delegate;
    return G__24729
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__24734__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__24735 = y;
            var G__24736 = cljs.core.first.call(null, more);
            var G__24737 = cljs.core.next.call(null, more);
            x = G__24735;
            y = G__24736;
            more = G__24737;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__24734 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__24734__delegate.call(this, x, y, more)
    };
    G__24734.cljs$lang$maxFixedArity = 2;
    G__24734.cljs$lang$applyTo = function(arglist__24738) {
      var x = cljs.core.first(arglist__24738);
      var y = cljs.core.first(cljs.core.next(arglist__24738));
      var more = cljs.core.rest(cljs.core.next(arglist__24738));
      return G__24734__delegate(x, y, more)
    };
    G__24734.cljs$lang$arity$variadic = G__24734__delegate;
    return G__24734
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__24739__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__24739 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__24739__delegate.call(this, x, y, more)
    };
    G__24739.cljs$lang$maxFixedArity = 2;
    G__24739.cljs$lang$applyTo = function(arglist__24740) {
      var x = cljs.core.first(arglist__24740);
      var y = cljs.core.first(cljs.core.next(arglist__24740));
      var more = cljs.core.rest(cljs.core.next(arglist__24740));
      return G__24739__delegate(x, y, more)
    };
    G__24739.cljs$lang$arity$variadic = G__24739__delegate;
    return G__24739
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__24741__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__24741 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__24741__delegate.call(this, x, y, more)
    };
    G__24741.cljs$lang$maxFixedArity = 2;
    G__24741.cljs$lang$applyTo = function(arglist__24742) {
      var x = cljs.core.first(arglist__24742);
      var y = cljs.core.first(cljs.core.next(arglist__24742));
      var more = cljs.core.rest(cljs.core.next(arglist__24742));
      return G__24741__delegate(x, y, more)
    };
    G__24741.cljs$lang$arity$variadic = G__24741__delegate;
    return G__24741
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__24744 = n % d;
  return cljs.core.fix.call(null, (n - rem__24744) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__24746 = cljs.core.quot.call(null, n, d);
  return n - d * q__24746
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__24749 = v - (v >> 1 & 1431655765);
  var v__24750 = (v__24749 & 858993459) + (v__24749 >> 2 & 858993459);
  return(v__24750 + (v__24750 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__24751__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__24752 = y;
            var G__24753 = cljs.core.first.call(null, more);
            var G__24754 = cljs.core.next.call(null, more);
            x = G__24752;
            y = G__24753;
            more = G__24754;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__24751 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__24751__delegate.call(this, x, y, more)
    };
    G__24751.cljs$lang$maxFixedArity = 2;
    G__24751.cljs$lang$applyTo = function(arglist__24755) {
      var x = cljs.core.first(arglist__24755);
      var y = cljs.core.first(cljs.core.next(arglist__24755));
      var more = cljs.core.rest(cljs.core.next(arglist__24755));
      return G__24751__delegate(x, y, more)
    };
    G__24751.cljs$lang$arity$variadic = G__24751__delegate;
    return G__24751
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__24759 = n;
  var xs__24760 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____24761 = xs__24760;
      if(and__3822__auto____24761) {
        return n__24759 > 0
      }else {
        return and__3822__auto____24761
      }
    }())) {
      var G__24762 = n__24759 - 1;
      var G__24763 = cljs.core.next.call(null, xs__24760);
      n__24759 = G__24762;
      xs__24760 = G__24763;
      continue
    }else {
      return xs__24760
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__24764__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__24765 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__24766 = cljs.core.next.call(null, more);
            sb = G__24765;
            more = G__24766;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__24764 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__24764__delegate.call(this, x, ys)
    };
    G__24764.cljs$lang$maxFixedArity = 1;
    G__24764.cljs$lang$applyTo = function(arglist__24767) {
      var x = cljs.core.first(arglist__24767);
      var ys = cljs.core.rest(arglist__24767);
      return G__24764__delegate(x, ys)
    };
    G__24764.cljs$lang$arity$variadic = G__24764__delegate;
    return G__24764
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__24768__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__24769 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__24770 = cljs.core.next.call(null, more);
            sb = G__24769;
            more = G__24770;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__24768 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__24768__delegate.call(this, x, ys)
    };
    G__24768.cljs$lang$maxFixedArity = 1;
    G__24768.cljs$lang$applyTo = function(arglist__24771) {
      var x = cljs.core.first(arglist__24771);
      var ys = cljs.core.rest(arglist__24771);
      return G__24768__delegate(x, ys)
    };
    G__24768.cljs$lang$arity$variadic = G__24768__delegate;
    return G__24768
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__24772) {
    var fmt = cljs.core.first(arglist__24772);
    var args = cljs.core.rest(arglist__24772);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__24775 = cljs.core.seq.call(null, x);
    var ys__24776 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__24775 == null) {
        return ys__24776 == null
      }else {
        if(ys__24776 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__24775), cljs.core.first.call(null, ys__24776))) {
            var G__24777 = cljs.core.next.call(null, xs__24775);
            var G__24778 = cljs.core.next.call(null, ys__24776);
            xs__24775 = G__24777;
            ys__24776 = G__24778;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__24779_SHARP_, p2__24780_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__24779_SHARP_, cljs.core.hash.call(null, p2__24780_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__24784 = 0;
  var s__24785 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__24785) {
      var e__24786 = cljs.core.first.call(null, s__24785);
      var G__24787 = (h__24784 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__24786)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__24786)))) % 4503599627370496;
      var G__24788 = cljs.core.next.call(null, s__24785);
      h__24784 = G__24787;
      s__24785 = G__24788;
      continue
    }else {
      return h__24784
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__24792 = 0;
  var s__24793 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__24793) {
      var e__24794 = cljs.core.first.call(null, s__24793);
      var G__24795 = (h__24792 + cljs.core.hash.call(null, e__24794)) % 4503599627370496;
      var G__24796 = cljs.core.next.call(null, s__24793);
      h__24792 = G__24795;
      s__24793 = G__24796;
      continue
    }else {
      return h__24792
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__24817__24818 = cljs.core.seq.call(null, fn_map);
  if(G__24817__24818) {
    var G__24820__24822 = cljs.core.first.call(null, G__24817__24818);
    var vec__24821__24823 = G__24820__24822;
    var key_name__24824 = cljs.core.nth.call(null, vec__24821__24823, 0, null);
    var f__24825 = cljs.core.nth.call(null, vec__24821__24823, 1, null);
    var G__24817__24826 = G__24817__24818;
    var G__24820__24827 = G__24820__24822;
    var G__24817__24828 = G__24817__24826;
    while(true) {
      var vec__24829__24830 = G__24820__24827;
      var key_name__24831 = cljs.core.nth.call(null, vec__24829__24830, 0, null);
      var f__24832 = cljs.core.nth.call(null, vec__24829__24830, 1, null);
      var G__24817__24833 = G__24817__24828;
      var str_name__24834 = cljs.core.name.call(null, key_name__24831);
      obj[str_name__24834] = f__24832;
      var temp__3974__auto____24835 = cljs.core.next.call(null, G__24817__24833);
      if(temp__3974__auto____24835) {
        var G__24817__24836 = temp__3974__auto____24835;
        var G__24837 = cljs.core.first.call(null, G__24817__24836);
        var G__24838 = G__24817__24836;
        G__24820__24827 = G__24837;
        G__24817__24828 = G__24838;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__24839 = this;
  var h__2093__auto____24840 = this__24839.__hash;
  if(!(h__2093__auto____24840 == null)) {
    return h__2093__auto____24840
  }else {
    var h__2093__auto____24841 = cljs.core.hash_coll.call(null, coll);
    this__24839.__hash = h__2093__auto____24841;
    return h__2093__auto____24841
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__24842 = this;
  if(this__24842.count === 1) {
    return null
  }else {
    return this__24842.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__24843 = this;
  return new cljs.core.List(this__24843.meta, o, coll, this__24843.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__24844 = this;
  var this__24845 = this;
  return cljs.core.pr_str.call(null, this__24845)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__24846 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__24847 = this;
  return this__24847.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__24848 = this;
  return this__24848.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__24849 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__24850 = this;
  return this__24850.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__24851 = this;
  if(this__24851.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__24851.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__24852 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__24853 = this;
  return new cljs.core.List(meta, this__24853.first, this__24853.rest, this__24853.count, this__24853.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__24854 = this;
  return this__24854.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__24855 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__24856 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__24857 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__24858 = this;
  return new cljs.core.List(this__24858.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__24859 = this;
  var this__24860 = this;
  return cljs.core.pr_str.call(null, this__24860)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__24861 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__24862 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__24863 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__24864 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__24865 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__24866 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__24867 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__24868 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__24869 = this;
  return this__24869.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__24870 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__24874__24875 = coll;
  if(G__24874__24875) {
    if(function() {
      var or__3824__auto____24876 = G__24874__24875.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____24876) {
        return or__3824__auto____24876
      }else {
        return G__24874__24875.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__24874__24875.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__24874__24875)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__24874__24875)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__24877__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__24877 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__24877__delegate.call(this, x, y, z, items)
    };
    G__24877.cljs$lang$maxFixedArity = 3;
    G__24877.cljs$lang$applyTo = function(arglist__24878) {
      var x = cljs.core.first(arglist__24878);
      var y = cljs.core.first(cljs.core.next(arglist__24878));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__24878)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__24878)));
      return G__24877__delegate(x, y, z, items)
    };
    G__24877.cljs$lang$arity$variadic = G__24877__delegate;
    return G__24877
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__24879 = this;
  var h__2093__auto____24880 = this__24879.__hash;
  if(!(h__2093__auto____24880 == null)) {
    return h__2093__auto____24880
  }else {
    var h__2093__auto____24881 = cljs.core.hash_coll.call(null, coll);
    this__24879.__hash = h__2093__auto____24881;
    return h__2093__auto____24881
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__24882 = this;
  if(this__24882.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__24882.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__24883 = this;
  return new cljs.core.Cons(null, o, coll, this__24883.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__24884 = this;
  var this__24885 = this;
  return cljs.core.pr_str.call(null, this__24885)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__24886 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__24887 = this;
  return this__24887.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__24888 = this;
  if(this__24888.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__24888.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__24889 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__24890 = this;
  return new cljs.core.Cons(meta, this__24890.first, this__24890.rest, this__24890.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__24891 = this;
  return this__24891.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__24892 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__24892.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____24897 = coll == null;
    if(or__3824__auto____24897) {
      return or__3824__auto____24897
    }else {
      var G__24898__24899 = coll;
      if(G__24898__24899) {
        if(function() {
          var or__3824__auto____24900 = G__24898__24899.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____24900) {
            return or__3824__auto____24900
          }else {
            return G__24898__24899.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__24898__24899.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__24898__24899)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__24898__24899)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__24904__24905 = x;
  if(G__24904__24905) {
    if(function() {
      var or__3824__auto____24906 = G__24904__24905.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____24906) {
        return or__3824__auto____24906
      }else {
        return G__24904__24905.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__24904__24905.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__24904__24905)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__24904__24905)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__24907 = null;
  var G__24907__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__24907__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__24907 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__24907__2.call(this, string, f);
      case 3:
        return G__24907__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__24907
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__24908 = null;
  var G__24908__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__24908__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__24908 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24908__2.call(this, string, k);
      case 3:
        return G__24908__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__24908
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__24909 = null;
  var G__24909__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__24909__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__24909 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24909__2.call(this, string, n);
      case 3:
        return G__24909__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__24909
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__24921 = null;
  var G__24921__2 = function(this_sym24912, coll) {
    var this__24914 = this;
    var this_sym24912__24915 = this;
    var ___24916 = this_sym24912__24915;
    if(coll == null) {
      return null
    }else {
      var strobj__24917 = coll.strobj;
      if(strobj__24917 == null) {
        return cljs.core._lookup.call(null, coll, this__24914.k, null)
      }else {
        return strobj__24917[this__24914.k]
      }
    }
  };
  var G__24921__3 = function(this_sym24913, coll, not_found) {
    var this__24914 = this;
    var this_sym24913__24918 = this;
    var ___24919 = this_sym24913__24918;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__24914.k, not_found)
    }
  };
  G__24921 = function(this_sym24913, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24921__2.call(this, this_sym24913, coll);
      case 3:
        return G__24921__3.call(this, this_sym24913, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__24921
}();
cljs.core.Keyword.prototype.apply = function(this_sym24910, args24911) {
  var this__24920 = this;
  return this_sym24910.call.apply(this_sym24910, [this_sym24910].concat(args24911.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__24930 = null;
  var G__24930__2 = function(this_sym24924, coll) {
    var this_sym24924__24926 = this;
    var this__24927 = this_sym24924__24926;
    return cljs.core._lookup.call(null, coll, this__24927.toString(), null)
  };
  var G__24930__3 = function(this_sym24925, coll, not_found) {
    var this_sym24925__24928 = this;
    var this__24929 = this_sym24925__24928;
    return cljs.core._lookup.call(null, coll, this__24929.toString(), not_found)
  };
  G__24930 = function(this_sym24925, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24930__2.call(this, this_sym24925, coll);
      case 3:
        return G__24930__3.call(this, this_sym24925, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__24930
}();
String.prototype.apply = function(this_sym24922, args24923) {
  return this_sym24922.call.apply(this_sym24922, [this_sym24922].concat(args24923.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__24932 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__24932
  }else {
    lazy_seq.x = x__24932.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__24933 = this;
  var h__2093__auto____24934 = this__24933.__hash;
  if(!(h__2093__auto____24934 == null)) {
    return h__2093__auto____24934
  }else {
    var h__2093__auto____24935 = cljs.core.hash_coll.call(null, coll);
    this__24933.__hash = h__2093__auto____24935;
    return h__2093__auto____24935
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__24936 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__24937 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__24938 = this;
  var this__24939 = this;
  return cljs.core.pr_str.call(null, this__24939)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__24940 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__24941 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__24942 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__24943 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__24944 = this;
  return new cljs.core.LazySeq(meta, this__24944.realized, this__24944.x, this__24944.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__24945 = this;
  return this__24945.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__24946 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__24946.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__24947 = this;
  return this__24947.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__24948 = this;
  var ___24949 = this;
  this__24948.buf[this__24948.end] = o;
  return this__24948.end = this__24948.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__24950 = this;
  var ___24951 = this;
  var ret__24952 = new cljs.core.ArrayChunk(this__24950.buf, 0, this__24950.end);
  this__24950.buf = null;
  return ret__24952
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__24953 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__24953.arr[this__24953.off], this__24953.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__24954 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__24954.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__24955 = this;
  if(this__24955.off === this__24955.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__24955.arr, this__24955.off + 1, this__24955.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__24956 = this;
  return this__24956.arr[this__24956.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__24957 = this;
  if(function() {
    var and__3822__auto____24958 = i >= 0;
    if(and__3822__auto____24958) {
      return i < this__24957.end - this__24957.off
    }else {
      return and__3822__auto____24958
    }
  }()) {
    return this__24957.arr[this__24957.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__24959 = this;
  return this__24959.end - this__24959.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__24960 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__24961 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__24962 = this;
  return cljs.core._nth.call(null, this__24962.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__24963 = this;
  if(cljs.core._count.call(null, this__24963.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__24963.chunk), this__24963.more, this__24963.meta)
  }else {
    if(this__24963.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__24963.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__24964 = this;
  if(this__24964.more == null) {
    return null
  }else {
    return this__24964.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__24965 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__24966 = this;
  return new cljs.core.ChunkedCons(this__24966.chunk, this__24966.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__24967 = this;
  return this__24967.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__24968 = this;
  return this__24968.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__24969 = this;
  if(this__24969.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__24969.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__24973__24974 = s;
    if(G__24973__24974) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____24975 = null;
        if(cljs.core.truth_(or__3824__auto____24975)) {
          return or__3824__auto____24975
        }else {
          return G__24973__24974.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__24973__24974.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__24973__24974)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__24973__24974)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__24978 = [];
  var s__24979 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__24979)) {
      ary__24978.push(cljs.core.first.call(null, s__24979));
      var G__24980 = cljs.core.next.call(null, s__24979);
      s__24979 = G__24980;
      continue
    }else {
      return ary__24978
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__24984 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__24985 = 0;
  var xs__24986 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__24986) {
      ret__24984[i__24985] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__24986));
      var G__24987 = i__24985 + 1;
      var G__24988 = cljs.core.next.call(null, xs__24986);
      i__24985 = G__24987;
      xs__24986 = G__24988;
      continue
    }else {
    }
    break
  }
  return ret__24984
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__24996 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__24997 = cljs.core.seq.call(null, init_val_or_seq);
      var i__24998 = 0;
      var s__24999 = s__24997;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____25000 = s__24999;
          if(and__3822__auto____25000) {
            return i__24998 < size
          }else {
            return and__3822__auto____25000
          }
        }())) {
          a__24996[i__24998] = cljs.core.first.call(null, s__24999);
          var G__25003 = i__24998 + 1;
          var G__25004 = cljs.core.next.call(null, s__24999);
          i__24998 = G__25003;
          s__24999 = G__25004;
          continue
        }else {
          return a__24996
        }
        break
      }
    }else {
      var n__2428__auto____25001 = size;
      var i__25002 = 0;
      while(true) {
        if(i__25002 < n__2428__auto____25001) {
          a__24996[i__25002] = init_val_or_seq;
          var G__25005 = i__25002 + 1;
          i__25002 = G__25005;
          continue
        }else {
        }
        break
      }
      return a__24996
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__25013 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__25014 = cljs.core.seq.call(null, init_val_or_seq);
      var i__25015 = 0;
      var s__25016 = s__25014;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____25017 = s__25016;
          if(and__3822__auto____25017) {
            return i__25015 < size
          }else {
            return and__3822__auto____25017
          }
        }())) {
          a__25013[i__25015] = cljs.core.first.call(null, s__25016);
          var G__25020 = i__25015 + 1;
          var G__25021 = cljs.core.next.call(null, s__25016);
          i__25015 = G__25020;
          s__25016 = G__25021;
          continue
        }else {
          return a__25013
        }
        break
      }
    }else {
      var n__2428__auto____25018 = size;
      var i__25019 = 0;
      while(true) {
        if(i__25019 < n__2428__auto____25018) {
          a__25013[i__25019] = init_val_or_seq;
          var G__25022 = i__25019 + 1;
          i__25019 = G__25022;
          continue
        }else {
        }
        break
      }
      return a__25013
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__25030 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__25031 = cljs.core.seq.call(null, init_val_or_seq);
      var i__25032 = 0;
      var s__25033 = s__25031;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____25034 = s__25033;
          if(and__3822__auto____25034) {
            return i__25032 < size
          }else {
            return and__3822__auto____25034
          }
        }())) {
          a__25030[i__25032] = cljs.core.first.call(null, s__25033);
          var G__25037 = i__25032 + 1;
          var G__25038 = cljs.core.next.call(null, s__25033);
          i__25032 = G__25037;
          s__25033 = G__25038;
          continue
        }else {
          return a__25030
        }
        break
      }
    }else {
      var n__2428__auto____25035 = size;
      var i__25036 = 0;
      while(true) {
        if(i__25036 < n__2428__auto____25035) {
          a__25030[i__25036] = init_val_or_seq;
          var G__25039 = i__25036 + 1;
          i__25036 = G__25039;
          continue
        }else {
        }
        break
      }
      return a__25030
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__25044 = s;
    var i__25045 = n;
    var sum__25046 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____25047 = i__25045 > 0;
        if(and__3822__auto____25047) {
          return cljs.core.seq.call(null, s__25044)
        }else {
          return and__3822__auto____25047
        }
      }())) {
        var G__25048 = cljs.core.next.call(null, s__25044);
        var G__25049 = i__25045 - 1;
        var G__25050 = sum__25046 + 1;
        s__25044 = G__25048;
        i__25045 = G__25049;
        sum__25046 = G__25050;
        continue
      }else {
        return sum__25046
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__25055 = cljs.core.seq.call(null, x);
      if(s__25055) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__25055)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__25055), concat.call(null, cljs.core.chunk_rest.call(null, s__25055), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__25055), concat.call(null, cljs.core.rest.call(null, s__25055), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__25059__delegate = function(x, y, zs) {
      var cat__25058 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__25057 = cljs.core.seq.call(null, xys);
          if(xys__25057) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__25057)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__25057), cat.call(null, cljs.core.chunk_rest.call(null, xys__25057), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__25057), cat.call(null, cljs.core.rest.call(null, xys__25057), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__25058.call(null, concat.call(null, x, y), zs)
    };
    var G__25059 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__25059__delegate.call(this, x, y, zs)
    };
    G__25059.cljs$lang$maxFixedArity = 2;
    G__25059.cljs$lang$applyTo = function(arglist__25060) {
      var x = cljs.core.first(arglist__25060);
      var y = cljs.core.first(cljs.core.next(arglist__25060));
      var zs = cljs.core.rest(cljs.core.next(arglist__25060));
      return G__25059__delegate(x, y, zs)
    };
    G__25059.cljs$lang$arity$variadic = G__25059__delegate;
    return G__25059
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__25061__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__25061 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__25061__delegate.call(this, a, b, c, d, more)
    };
    G__25061.cljs$lang$maxFixedArity = 4;
    G__25061.cljs$lang$applyTo = function(arglist__25062) {
      var a = cljs.core.first(arglist__25062);
      var b = cljs.core.first(cljs.core.next(arglist__25062));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25062)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__25062))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__25062))));
      return G__25061__delegate(a, b, c, d, more)
    };
    G__25061.cljs$lang$arity$variadic = G__25061__delegate;
    return G__25061
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__25104 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__25105 = cljs.core._first.call(null, args__25104);
    var args__25106 = cljs.core._rest.call(null, args__25104);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__25105)
      }else {
        return f.call(null, a__25105)
      }
    }else {
      var b__25107 = cljs.core._first.call(null, args__25106);
      var args__25108 = cljs.core._rest.call(null, args__25106);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__25105, b__25107)
        }else {
          return f.call(null, a__25105, b__25107)
        }
      }else {
        var c__25109 = cljs.core._first.call(null, args__25108);
        var args__25110 = cljs.core._rest.call(null, args__25108);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__25105, b__25107, c__25109)
          }else {
            return f.call(null, a__25105, b__25107, c__25109)
          }
        }else {
          var d__25111 = cljs.core._first.call(null, args__25110);
          var args__25112 = cljs.core._rest.call(null, args__25110);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__25105, b__25107, c__25109, d__25111)
            }else {
              return f.call(null, a__25105, b__25107, c__25109, d__25111)
            }
          }else {
            var e__25113 = cljs.core._first.call(null, args__25112);
            var args__25114 = cljs.core._rest.call(null, args__25112);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__25105, b__25107, c__25109, d__25111, e__25113)
              }else {
                return f.call(null, a__25105, b__25107, c__25109, d__25111, e__25113)
              }
            }else {
              var f__25115 = cljs.core._first.call(null, args__25114);
              var args__25116 = cljs.core._rest.call(null, args__25114);
              if(argc === 6) {
                if(f__25115.cljs$lang$arity$6) {
                  return f__25115.cljs$lang$arity$6(a__25105, b__25107, c__25109, d__25111, e__25113, f__25115)
                }else {
                  return f__25115.call(null, a__25105, b__25107, c__25109, d__25111, e__25113, f__25115)
                }
              }else {
                var g__25117 = cljs.core._first.call(null, args__25116);
                var args__25118 = cljs.core._rest.call(null, args__25116);
                if(argc === 7) {
                  if(f__25115.cljs$lang$arity$7) {
                    return f__25115.cljs$lang$arity$7(a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117)
                  }else {
                    return f__25115.call(null, a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117)
                  }
                }else {
                  var h__25119 = cljs.core._first.call(null, args__25118);
                  var args__25120 = cljs.core._rest.call(null, args__25118);
                  if(argc === 8) {
                    if(f__25115.cljs$lang$arity$8) {
                      return f__25115.cljs$lang$arity$8(a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119)
                    }else {
                      return f__25115.call(null, a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119)
                    }
                  }else {
                    var i__25121 = cljs.core._first.call(null, args__25120);
                    var args__25122 = cljs.core._rest.call(null, args__25120);
                    if(argc === 9) {
                      if(f__25115.cljs$lang$arity$9) {
                        return f__25115.cljs$lang$arity$9(a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121)
                      }else {
                        return f__25115.call(null, a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121)
                      }
                    }else {
                      var j__25123 = cljs.core._first.call(null, args__25122);
                      var args__25124 = cljs.core._rest.call(null, args__25122);
                      if(argc === 10) {
                        if(f__25115.cljs$lang$arity$10) {
                          return f__25115.cljs$lang$arity$10(a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121, j__25123)
                        }else {
                          return f__25115.call(null, a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121, j__25123)
                        }
                      }else {
                        var k__25125 = cljs.core._first.call(null, args__25124);
                        var args__25126 = cljs.core._rest.call(null, args__25124);
                        if(argc === 11) {
                          if(f__25115.cljs$lang$arity$11) {
                            return f__25115.cljs$lang$arity$11(a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121, j__25123, k__25125)
                          }else {
                            return f__25115.call(null, a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121, j__25123, k__25125)
                          }
                        }else {
                          var l__25127 = cljs.core._first.call(null, args__25126);
                          var args__25128 = cljs.core._rest.call(null, args__25126);
                          if(argc === 12) {
                            if(f__25115.cljs$lang$arity$12) {
                              return f__25115.cljs$lang$arity$12(a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121, j__25123, k__25125, l__25127)
                            }else {
                              return f__25115.call(null, a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121, j__25123, k__25125, l__25127)
                            }
                          }else {
                            var m__25129 = cljs.core._first.call(null, args__25128);
                            var args__25130 = cljs.core._rest.call(null, args__25128);
                            if(argc === 13) {
                              if(f__25115.cljs$lang$arity$13) {
                                return f__25115.cljs$lang$arity$13(a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121, j__25123, k__25125, l__25127, m__25129)
                              }else {
                                return f__25115.call(null, a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121, j__25123, k__25125, l__25127, m__25129)
                              }
                            }else {
                              var n__25131 = cljs.core._first.call(null, args__25130);
                              var args__25132 = cljs.core._rest.call(null, args__25130);
                              if(argc === 14) {
                                if(f__25115.cljs$lang$arity$14) {
                                  return f__25115.cljs$lang$arity$14(a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121, j__25123, k__25125, l__25127, m__25129, n__25131)
                                }else {
                                  return f__25115.call(null, a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121, j__25123, k__25125, l__25127, m__25129, n__25131)
                                }
                              }else {
                                var o__25133 = cljs.core._first.call(null, args__25132);
                                var args__25134 = cljs.core._rest.call(null, args__25132);
                                if(argc === 15) {
                                  if(f__25115.cljs$lang$arity$15) {
                                    return f__25115.cljs$lang$arity$15(a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121, j__25123, k__25125, l__25127, m__25129, n__25131, o__25133)
                                  }else {
                                    return f__25115.call(null, a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121, j__25123, k__25125, l__25127, m__25129, n__25131, o__25133)
                                  }
                                }else {
                                  var p__25135 = cljs.core._first.call(null, args__25134);
                                  var args__25136 = cljs.core._rest.call(null, args__25134);
                                  if(argc === 16) {
                                    if(f__25115.cljs$lang$arity$16) {
                                      return f__25115.cljs$lang$arity$16(a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121, j__25123, k__25125, l__25127, m__25129, n__25131, o__25133, p__25135)
                                    }else {
                                      return f__25115.call(null, a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121, j__25123, k__25125, l__25127, m__25129, n__25131, o__25133, p__25135)
                                    }
                                  }else {
                                    var q__25137 = cljs.core._first.call(null, args__25136);
                                    var args__25138 = cljs.core._rest.call(null, args__25136);
                                    if(argc === 17) {
                                      if(f__25115.cljs$lang$arity$17) {
                                        return f__25115.cljs$lang$arity$17(a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121, j__25123, k__25125, l__25127, m__25129, n__25131, o__25133, p__25135, q__25137)
                                      }else {
                                        return f__25115.call(null, a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121, j__25123, k__25125, l__25127, m__25129, n__25131, o__25133, p__25135, q__25137)
                                      }
                                    }else {
                                      var r__25139 = cljs.core._first.call(null, args__25138);
                                      var args__25140 = cljs.core._rest.call(null, args__25138);
                                      if(argc === 18) {
                                        if(f__25115.cljs$lang$arity$18) {
                                          return f__25115.cljs$lang$arity$18(a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121, j__25123, k__25125, l__25127, m__25129, n__25131, o__25133, p__25135, q__25137, r__25139)
                                        }else {
                                          return f__25115.call(null, a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121, j__25123, k__25125, l__25127, m__25129, n__25131, o__25133, p__25135, q__25137, r__25139)
                                        }
                                      }else {
                                        var s__25141 = cljs.core._first.call(null, args__25140);
                                        var args__25142 = cljs.core._rest.call(null, args__25140);
                                        if(argc === 19) {
                                          if(f__25115.cljs$lang$arity$19) {
                                            return f__25115.cljs$lang$arity$19(a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121, j__25123, k__25125, l__25127, m__25129, n__25131, o__25133, p__25135, q__25137, r__25139, s__25141)
                                          }else {
                                            return f__25115.call(null, a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121, j__25123, k__25125, l__25127, m__25129, n__25131, o__25133, p__25135, q__25137, r__25139, s__25141)
                                          }
                                        }else {
                                          var t__25143 = cljs.core._first.call(null, args__25142);
                                          var args__25144 = cljs.core._rest.call(null, args__25142);
                                          if(argc === 20) {
                                            if(f__25115.cljs$lang$arity$20) {
                                              return f__25115.cljs$lang$arity$20(a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121, j__25123, k__25125, l__25127, m__25129, n__25131, o__25133, p__25135, q__25137, r__25139, s__25141, t__25143)
                                            }else {
                                              return f__25115.call(null, a__25105, b__25107, c__25109, d__25111, e__25113, f__25115, g__25117, h__25119, i__25121, j__25123, k__25125, l__25127, m__25129, n__25131, o__25133, p__25135, q__25137, r__25139, s__25141, t__25143)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__25159 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__25160 = cljs.core.bounded_count.call(null, args, fixed_arity__25159 + 1);
      if(bc__25160 <= fixed_arity__25159) {
        return cljs.core.apply_to.call(null, f, bc__25160, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__25161 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__25162 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__25163 = cljs.core.bounded_count.call(null, arglist__25161, fixed_arity__25162 + 1);
      if(bc__25163 <= fixed_arity__25162) {
        return cljs.core.apply_to.call(null, f, bc__25163, arglist__25161)
      }else {
        return f.cljs$lang$applyTo(arglist__25161)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__25161))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__25164 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__25165 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__25166 = cljs.core.bounded_count.call(null, arglist__25164, fixed_arity__25165 + 1);
      if(bc__25166 <= fixed_arity__25165) {
        return cljs.core.apply_to.call(null, f, bc__25166, arglist__25164)
      }else {
        return f.cljs$lang$applyTo(arglist__25164)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__25164))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__25167 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__25168 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__25169 = cljs.core.bounded_count.call(null, arglist__25167, fixed_arity__25168 + 1);
      if(bc__25169 <= fixed_arity__25168) {
        return cljs.core.apply_to.call(null, f, bc__25169, arglist__25167)
      }else {
        return f.cljs$lang$applyTo(arglist__25167)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__25167))
    }
  };
  var apply__6 = function() {
    var G__25173__delegate = function(f, a, b, c, d, args) {
      var arglist__25170 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__25171 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__25172 = cljs.core.bounded_count.call(null, arglist__25170, fixed_arity__25171 + 1);
        if(bc__25172 <= fixed_arity__25171) {
          return cljs.core.apply_to.call(null, f, bc__25172, arglist__25170)
        }else {
          return f.cljs$lang$applyTo(arglist__25170)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__25170))
      }
    };
    var G__25173 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__25173__delegate.call(this, f, a, b, c, d, args)
    };
    G__25173.cljs$lang$maxFixedArity = 5;
    G__25173.cljs$lang$applyTo = function(arglist__25174) {
      var f = cljs.core.first(arglist__25174);
      var a = cljs.core.first(cljs.core.next(arglist__25174));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25174)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__25174))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__25174)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__25174)))));
      return G__25173__delegate(f, a, b, c, d, args)
    };
    G__25173.cljs$lang$arity$variadic = G__25173__delegate;
    return G__25173
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__25175) {
    var obj = cljs.core.first(arglist__25175);
    var f = cljs.core.first(cljs.core.next(arglist__25175));
    var args = cljs.core.rest(cljs.core.next(arglist__25175));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__25176__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__25176 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__25176__delegate.call(this, x, y, more)
    };
    G__25176.cljs$lang$maxFixedArity = 2;
    G__25176.cljs$lang$applyTo = function(arglist__25177) {
      var x = cljs.core.first(arglist__25177);
      var y = cljs.core.first(cljs.core.next(arglist__25177));
      var more = cljs.core.rest(cljs.core.next(arglist__25177));
      return G__25176__delegate(x, y, more)
    };
    G__25176.cljs$lang$arity$variadic = G__25176__delegate;
    return G__25176
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__25178 = pred;
        var G__25179 = cljs.core.next.call(null, coll);
        pred = G__25178;
        coll = G__25179;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____25181 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____25181)) {
        return or__3824__auto____25181
      }else {
        var G__25182 = pred;
        var G__25183 = cljs.core.next.call(null, coll);
        pred = G__25182;
        coll = G__25183;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__25184 = null;
    var G__25184__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__25184__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__25184__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__25184__3 = function() {
      var G__25185__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__25185 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__25185__delegate.call(this, x, y, zs)
      };
      G__25185.cljs$lang$maxFixedArity = 2;
      G__25185.cljs$lang$applyTo = function(arglist__25186) {
        var x = cljs.core.first(arglist__25186);
        var y = cljs.core.first(cljs.core.next(arglist__25186));
        var zs = cljs.core.rest(cljs.core.next(arglist__25186));
        return G__25185__delegate(x, y, zs)
      };
      G__25185.cljs$lang$arity$variadic = G__25185__delegate;
      return G__25185
    }();
    G__25184 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__25184__0.call(this);
        case 1:
          return G__25184__1.call(this, x);
        case 2:
          return G__25184__2.call(this, x, y);
        default:
          return G__25184__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__25184.cljs$lang$maxFixedArity = 2;
    G__25184.cljs$lang$applyTo = G__25184__3.cljs$lang$applyTo;
    return G__25184
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__25187__delegate = function(args) {
      return x
    };
    var G__25187 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__25187__delegate.call(this, args)
    };
    G__25187.cljs$lang$maxFixedArity = 0;
    G__25187.cljs$lang$applyTo = function(arglist__25188) {
      var args = cljs.core.seq(arglist__25188);
      return G__25187__delegate(args)
    };
    G__25187.cljs$lang$arity$variadic = G__25187__delegate;
    return G__25187
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__25195 = null;
      var G__25195__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__25195__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__25195__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__25195__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__25195__4 = function() {
        var G__25196__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__25196 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__25196__delegate.call(this, x, y, z, args)
        };
        G__25196.cljs$lang$maxFixedArity = 3;
        G__25196.cljs$lang$applyTo = function(arglist__25197) {
          var x = cljs.core.first(arglist__25197);
          var y = cljs.core.first(cljs.core.next(arglist__25197));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25197)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25197)));
          return G__25196__delegate(x, y, z, args)
        };
        G__25196.cljs$lang$arity$variadic = G__25196__delegate;
        return G__25196
      }();
      G__25195 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__25195__0.call(this);
          case 1:
            return G__25195__1.call(this, x);
          case 2:
            return G__25195__2.call(this, x, y);
          case 3:
            return G__25195__3.call(this, x, y, z);
          default:
            return G__25195__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__25195.cljs$lang$maxFixedArity = 3;
      G__25195.cljs$lang$applyTo = G__25195__4.cljs$lang$applyTo;
      return G__25195
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__25198 = null;
      var G__25198__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__25198__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__25198__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__25198__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__25198__4 = function() {
        var G__25199__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__25199 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__25199__delegate.call(this, x, y, z, args)
        };
        G__25199.cljs$lang$maxFixedArity = 3;
        G__25199.cljs$lang$applyTo = function(arglist__25200) {
          var x = cljs.core.first(arglist__25200);
          var y = cljs.core.first(cljs.core.next(arglist__25200));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25200)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25200)));
          return G__25199__delegate(x, y, z, args)
        };
        G__25199.cljs$lang$arity$variadic = G__25199__delegate;
        return G__25199
      }();
      G__25198 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__25198__0.call(this);
          case 1:
            return G__25198__1.call(this, x);
          case 2:
            return G__25198__2.call(this, x, y);
          case 3:
            return G__25198__3.call(this, x, y, z);
          default:
            return G__25198__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__25198.cljs$lang$maxFixedArity = 3;
      G__25198.cljs$lang$applyTo = G__25198__4.cljs$lang$applyTo;
      return G__25198
    }()
  };
  var comp__4 = function() {
    var G__25201__delegate = function(f1, f2, f3, fs) {
      var fs__25192 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__25202__delegate = function(args) {
          var ret__25193 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__25192), args);
          var fs__25194 = cljs.core.next.call(null, fs__25192);
          while(true) {
            if(fs__25194) {
              var G__25203 = cljs.core.first.call(null, fs__25194).call(null, ret__25193);
              var G__25204 = cljs.core.next.call(null, fs__25194);
              ret__25193 = G__25203;
              fs__25194 = G__25204;
              continue
            }else {
              return ret__25193
            }
            break
          }
        };
        var G__25202 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__25202__delegate.call(this, args)
        };
        G__25202.cljs$lang$maxFixedArity = 0;
        G__25202.cljs$lang$applyTo = function(arglist__25205) {
          var args = cljs.core.seq(arglist__25205);
          return G__25202__delegate(args)
        };
        G__25202.cljs$lang$arity$variadic = G__25202__delegate;
        return G__25202
      }()
    };
    var G__25201 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__25201__delegate.call(this, f1, f2, f3, fs)
    };
    G__25201.cljs$lang$maxFixedArity = 3;
    G__25201.cljs$lang$applyTo = function(arglist__25206) {
      var f1 = cljs.core.first(arglist__25206);
      var f2 = cljs.core.first(cljs.core.next(arglist__25206));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25206)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25206)));
      return G__25201__delegate(f1, f2, f3, fs)
    };
    G__25201.cljs$lang$arity$variadic = G__25201__delegate;
    return G__25201
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__25207__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__25207 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__25207__delegate.call(this, args)
      };
      G__25207.cljs$lang$maxFixedArity = 0;
      G__25207.cljs$lang$applyTo = function(arglist__25208) {
        var args = cljs.core.seq(arglist__25208);
        return G__25207__delegate(args)
      };
      G__25207.cljs$lang$arity$variadic = G__25207__delegate;
      return G__25207
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__25209__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__25209 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__25209__delegate.call(this, args)
      };
      G__25209.cljs$lang$maxFixedArity = 0;
      G__25209.cljs$lang$applyTo = function(arglist__25210) {
        var args = cljs.core.seq(arglist__25210);
        return G__25209__delegate(args)
      };
      G__25209.cljs$lang$arity$variadic = G__25209__delegate;
      return G__25209
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__25211__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__25211 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__25211__delegate.call(this, args)
      };
      G__25211.cljs$lang$maxFixedArity = 0;
      G__25211.cljs$lang$applyTo = function(arglist__25212) {
        var args = cljs.core.seq(arglist__25212);
        return G__25211__delegate(args)
      };
      G__25211.cljs$lang$arity$variadic = G__25211__delegate;
      return G__25211
    }()
  };
  var partial__5 = function() {
    var G__25213__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__25214__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__25214 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__25214__delegate.call(this, args)
        };
        G__25214.cljs$lang$maxFixedArity = 0;
        G__25214.cljs$lang$applyTo = function(arglist__25215) {
          var args = cljs.core.seq(arglist__25215);
          return G__25214__delegate(args)
        };
        G__25214.cljs$lang$arity$variadic = G__25214__delegate;
        return G__25214
      }()
    };
    var G__25213 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__25213__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__25213.cljs$lang$maxFixedArity = 4;
    G__25213.cljs$lang$applyTo = function(arglist__25216) {
      var f = cljs.core.first(arglist__25216);
      var arg1 = cljs.core.first(cljs.core.next(arglist__25216));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25216)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__25216))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__25216))));
      return G__25213__delegate(f, arg1, arg2, arg3, more)
    };
    G__25213.cljs$lang$arity$variadic = G__25213__delegate;
    return G__25213
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__25217 = null;
      var G__25217__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__25217__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__25217__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__25217__4 = function() {
        var G__25218__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__25218 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__25218__delegate.call(this, a, b, c, ds)
        };
        G__25218.cljs$lang$maxFixedArity = 3;
        G__25218.cljs$lang$applyTo = function(arglist__25219) {
          var a = cljs.core.first(arglist__25219);
          var b = cljs.core.first(cljs.core.next(arglist__25219));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25219)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25219)));
          return G__25218__delegate(a, b, c, ds)
        };
        G__25218.cljs$lang$arity$variadic = G__25218__delegate;
        return G__25218
      }();
      G__25217 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__25217__1.call(this, a);
          case 2:
            return G__25217__2.call(this, a, b);
          case 3:
            return G__25217__3.call(this, a, b, c);
          default:
            return G__25217__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__25217.cljs$lang$maxFixedArity = 3;
      G__25217.cljs$lang$applyTo = G__25217__4.cljs$lang$applyTo;
      return G__25217
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__25220 = null;
      var G__25220__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__25220__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__25220__4 = function() {
        var G__25221__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__25221 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__25221__delegate.call(this, a, b, c, ds)
        };
        G__25221.cljs$lang$maxFixedArity = 3;
        G__25221.cljs$lang$applyTo = function(arglist__25222) {
          var a = cljs.core.first(arglist__25222);
          var b = cljs.core.first(cljs.core.next(arglist__25222));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25222)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25222)));
          return G__25221__delegate(a, b, c, ds)
        };
        G__25221.cljs$lang$arity$variadic = G__25221__delegate;
        return G__25221
      }();
      G__25220 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__25220__2.call(this, a, b);
          case 3:
            return G__25220__3.call(this, a, b, c);
          default:
            return G__25220__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__25220.cljs$lang$maxFixedArity = 3;
      G__25220.cljs$lang$applyTo = G__25220__4.cljs$lang$applyTo;
      return G__25220
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__25223 = null;
      var G__25223__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__25223__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__25223__4 = function() {
        var G__25224__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__25224 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__25224__delegate.call(this, a, b, c, ds)
        };
        G__25224.cljs$lang$maxFixedArity = 3;
        G__25224.cljs$lang$applyTo = function(arglist__25225) {
          var a = cljs.core.first(arglist__25225);
          var b = cljs.core.first(cljs.core.next(arglist__25225));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25225)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25225)));
          return G__25224__delegate(a, b, c, ds)
        };
        G__25224.cljs$lang$arity$variadic = G__25224__delegate;
        return G__25224
      }();
      G__25223 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__25223__2.call(this, a, b);
          case 3:
            return G__25223__3.call(this, a, b, c);
          default:
            return G__25223__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__25223.cljs$lang$maxFixedArity = 3;
      G__25223.cljs$lang$applyTo = G__25223__4.cljs$lang$applyTo;
      return G__25223
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__25241 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____25249 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____25249) {
        var s__25250 = temp__3974__auto____25249;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__25250)) {
          var c__25251 = cljs.core.chunk_first.call(null, s__25250);
          var size__25252 = cljs.core.count.call(null, c__25251);
          var b__25253 = cljs.core.chunk_buffer.call(null, size__25252);
          var n__2428__auto____25254 = size__25252;
          var i__25255 = 0;
          while(true) {
            if(i__25255 < n__2428__auto____25254) {
              cljs.core.chunk_append.call(null, b__25253, f.call(null, idx + i__25255, cljs.core._nth.call(null, c__25251, i__25255)));
              var G__25256 = i__25255 + 1;
              i__25255 = G__25256;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__25253), mapi.call(null, idx + size__25252, cljs.core.chunk_rest.call(null, s__25250)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__25250)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__25250)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__25241.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____25266 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____25266) {
      var s__25267 = temp__3974__auto____25266;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__25267)) {
        var c__25268 = cljs.core.chunk_first.call(null, s__25267);
        var size__25269 = cljs.core.count.call(null, c__25268);
        var b__25270 = cljs.core.chunk_buffer.call(null, size__25269);
        var n__2428__auto____25271 = size__25269;
        var i__25272 = 0;
        while(true) {
          if(i__25272 < n__2428__auto____25271) {
            var x__25273 = f.call(null, cljs.core._nth.call(null, c__25268, i__25272));
            if(x__25273 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__25270, x__25273)
            }
            var G__25275 = i__25272 + 1;
            i__25272 = G__25275;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__25270), keep.call(null, f, cljs.core.chunk_rest.call(null, s__25267)))
      }else {
        var x__25274 = f.call(null, cljs.core.first.call(null, s__25267));
        if(x__25274 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__25267))
        }else {
          return cljs.core.cons.call(null, x__25274, keep.call(null, f, cljs.core.rest.call(null, s__25267)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__25301 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____25311 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____25311) {
        var s__25312 = temp__3974__auto____25311;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__25312)) {
          var c__25313 = cljs.core.chunk_first.call(null, s__25312);
          var size__25314 = cljs.core.count.call(null, c__25313);
          var b__25315 = cljs.core.chunk_buffer.call(null, size__25314);
          var n__2428__auto____25316 = size__25314;
          var i__25317 = 0;
          while(true) {
            if(i__25317 < n__2428__auto____25316) {
              var x__25318 = f.call(null, idx + i__25317, cljs.core._nth.call(null, c__25313, i__25317));
              if(x__25318 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__25315, x__25318)
              }
              var G__25320 = i__25317 + 1;
              i__25317 = G__25320;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__25315), keepi.call(null, idx + size__25314, cljs.core.chunk_rest.call(null, s__25312)))
        }else {
          var x__25319 = f.call(null, idx, cljs.core.first.call(null, s__25312));
          if(x__25319 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__25312))
          }else {
            return cljs.core.cons.call(null, x__25319, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__25312)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__25301.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____25406 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____25406)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____25406
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____25407 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____25407)) {
            var and__3822__auto____25408 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____25408)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____25408
            }
          }else {
            return and__3822__auto____25407
          }
        }())
      };
      var ep1__4 = function() {
        var G__25477__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____25409 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____25409)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____25409
            }
          }())
        };
        var G__25477 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__25477__delegate.call(this, x, y, z, args)
        };
        G__25477.cljs$lang$maxFixedArity = 3;
        G__25477.cljs$lang$applyTo = function(arglist__25478) {
          var x = cljs.core.first(arglist__25478);
          var y = cljs.core.first(cljs.core.next(arglist__25478));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25478)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25478)));
          return G__25477__delegate(x, y, z, args)
        };
        G__25477.cljs$lang$arity$variadic = G__25477__delegate;
        return G__25477
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____25421 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____25421)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____25421
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____25422 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____25422)) {
            var and__3822__auto____25423 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____25423)) {
              var and__3822__auto____25424 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____25424)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____25424
              }
            }else {
              return and__3822__auto____25423
            }
          }else {
            return and__3822__auto____25422
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____25425 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____25425)) {
            var and__3822__auto____25426 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____25426)) {
              var and__3822__auto____25427 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____25427)) {
                var and__3822__auto____25428 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____25428)) {
                  var and__3822__auto____25429 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____25429)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____25429
                  }
                }else {
                  return and__3822__auto____25428
                }
              }else {
                return and__3822__auto____25427
              }
            }else {
              return and__3822__auto____25426
            }
          }else {
            return and__3822__auto____25425
          }
        }())
      };
      var ep2__4 = function() {
        var G__25479__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____25430 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____25430)) {
              return cljs.core.every_QMARK_.call(null, function(p1__25276_SHARP_) {
                var and__3822__auto____25431 = p1.call(null, p1__25276_SHARP_);
                if(cljs.core.truth_(and__3822__auto____25431)) {
                  return p2.call(null, p1__25276_SHARP_)
                }else {
                  return and__3822__auto____25431
                }
              }, args)
            }else {
              return and__3822__auto____25430
            }
          }())
        };
        var G__25479 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__25479__delegate.call(this, x, y, z, args)
        };
        G__25479.cljs$lang$maxFixedArity = 3;
        G__25479.cljs$lang$applyTo = function(arglist__25480) {
          var x = cljs.core.first(arglist__25480);
          var y = cljs.core.first(cljs.core.next(arglist__25480));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25480)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25480)));
          return G__25479__delegate(x, y, z, args)
        };
        G__25479.cljs$lang$arity$variadic = G__25479__delegate;
        return G__25479
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____25450 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____25450)) {
            var and__3822__auto____25451 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____25451)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____25451
            }
          }else {
            return and__3822__auto____25450
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____25452 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____25452)) {
            var and__3822__auto____25453 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____25453)) {
              var and__3822__auto____25454 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____25454)) {
                var and__3822__auto____25455 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____25455)) {
                  var and__3822__auto____25456 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____25456)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____25456
                  }
                }else {
                  return and__3822__auto____25455
                }
              }else {
                return and__3822__auto____25454
              }
            }else {
              return and__3822__auto____25453
            }
          }else {
            return and__3822__auto____25452
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____25457 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____25457)) {
            var and__3822__auto____25458 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____25458)) {
              var and__3822__auto____25459 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____25459)) {
                var and__3822__auto____25460 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____25460)) {
                  var and__3822__auto____25461 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____25461)) {
                    var and__3822__auto____25462 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____25462)) {
                      var and__3822__auto____25463 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____25463)) {
                        var and__3822__auto____25464 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____25464)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____25464
                        }
                      }else {
                        return and__3822__auto____25463
                      }
                    }else {
                      return and__3822__auto____25462
                    }
                  }else {
                    return and__3822__auto____25461
                  }
                }else {
                  return and__3822__auto____25460
                }
              }else {
                return and__3822__auto____25459
              }
            }else {
              return and__3822__auto____25458
            }
          }else {
            return and__3822__auto____25457
          }
        }())
      };
      var ep3__4 = function() {
        var G__25481__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____25465 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____25465)) {
              return cljs.core.every_QMARK_.call(null, function(p1__25277_SHARP_) {
                var and__3822__auto____25466 = p1.call(null, p1__25277_SHARP_);
                if(cljs.core.truth_(and__3822__auto____25466)) {
                  var and__3822__auto____25467 = p2.call(null, p1__25277_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____25467)) {
                    return p3.call(null, p1__25277_SHARP_)
                  }else {
                    return and__3822__auto____25467
                  }
                }else {
                  return and__3822__auto____25466
                }
              }, args)
            }else {
              return and__3822__auto____25465
            }
          }())
        };
        var G__25481 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__25481__delegate.call(this, x, y, z, args)
        };
        G__25481.cljs$lang$maxFixedArity = 3;
        G__25481.cljs$lang$applyTo = function(arglist__25482) {
          var x = cljs.core.first(arglist__25482);
          var y = cljs.core.first(cljs.core.next(arglist__25482));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25482)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25482)));
          return G__25481__delegate(x, y, z, args)
        };
        G__25481.cljs$lang$arity$variadic = G__25481__delegate;
        return G__25481
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__25483__delegate = function(p1, p2, p3, ps) {
      var ps__25468 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__25278_SHARP_) {
            return p1__25278_SHARP_.call(null, x)
          }, ps__25468)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__25279_SHARP_) {
            var and__3822__auto____25473 = p1__25279_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____25473)) {
              return p1__25279_SHARP_.call(null, y)
            }else {
              return and__3822__auto____25473
            }
          }, ps__25468)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__25280_SHARP_) {
            var and__3822__auto____25474 = p1__25280_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____25474)) {
              var and__3822__auto____25475 = p1__25280_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____25475)) {
                return p1__25280_SHARP_.call(null, z)
              }else {
                return and__3822__auto____25475
              }
            }else {
              return and__3822__auto____25474
            }
          }, ps__25468)
        };
        var epn__4 = function() {
          var G__25484__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____25476 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____25476)) {
                return cljs.core.every_QMARK_.call(null, function(p1__25281_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__25281_SHARP_, args)
                }, ps__25468)
              }else {
                return and__3822__auto____25476
              }
            }())
          };
          var G__25484 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__25484__delegate.call(this, x, y, z, args)
          };
          G__25484.cljs$lang$maxFixedArity = 3;
          G__25484.cljs$lang$applyTo = function(arglist__25485) {
            var x = cljs.core.first(arglist__25485);
            var y = cljs.core.first(cljs.core.next(arglist__25485));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25485)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25485)));
            return G__25484__delegate(x, y, z, args)
          };
          G__25484.cljs$lang$arity$variadic = G__25484__delegate;
          return G__25484
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__25483 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__25483__delegate.call(this, p1, p2, p3, ps)
    };
    G__25483.cljs$lang$maxFixedArity = 3;
    G__25483.cljs$lang$applyTo = function(arglist__25486) {
      var p1 = cljs.core.first(arglist__25486);
      var p2 = cljs.core.first(cljs.core.next(arglist__25486));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25486)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25486)));
      return G__25483__delegate(p1, p2, p3, ps)
    };
    G__25483.cljs$lang$arity$variadic = G__25483__delegate;
    return G__25483
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____25567 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____25567)) {
          return or__3824__auto____25567
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____25568 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____25568)) {
          return or__3824__auto____25568
        }else {
          var or__3824__auto____25569 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____25569)) {
            return or__3824__auto____25569
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__25638__delegate = function(x, y, z, args) {
          var or__3824__auto____25570 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____25570)) {
            return or__3824__auto____25570
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__25638 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__25638__delegate.call(this, x, y, z, args)
        };
        G__25638.cljs$lang$maxFixedArity = 3;
        G__25638.cljs$lang$applyTo = function(arglist__25639) {
          var x = cljs.core.first(arglist__25639);
          var y = cljs.core.first(cljs.core.next(arglist__25639));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25639)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25639)));
          return G__25638__delegate(x, y, z, args)
        };
        G__25638.cljs$lang$arity$variadic = G__25638__delegate;
        return G__25638
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____25582 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____25582)) {
          return or__3824__auto____25582
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____25583 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____25583)) {
          return or__3824__auto____25583
        }else {
          var or__3824__auto____25584 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____25584)) {
            return or__3824__auto____25584
          }else {
            var or__3824__auto____25585 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____25585)) {
              return or__3824__auto____25585
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____25586 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____25586)) {
          return or__3824__auto____25586
        }else {
          var or__3824__auto____25587 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____25587)) {
            return or__3824__auto____25587
          }else {
            var or__3824__auto____25588 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____25588)) {
              return or__3824__auto____25588
            }else {
              var or__3824__auto____25589 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____25589)) {
                return or__3824__auto____25589
              }else {
                var or__3824__auto____25590 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____25590)) {
                  return or__3824__auto____25590
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__25640__delegate = function(x, y, z, args) {
          var or__3824__auto____25591 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____25591)) {
            return or__3824__auto____25591
          }else {
            return cljs.core.some.call(null, function(p1__25321_SHARP_) {
              var or__3824__auto____25592 = p1.call(null, p1__25321_SHARP_);
              if(cljs.core.truth_(or__3824__auto____25592)) {
                return or__3824__auto____25592
              }else {
                return p2.call(null, p1__25321_SHARP_)
              }
            }, args)
          }
        };
        var G__25640 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__25640__delegate.call(this, x, y, z, args)
        };
        G__25640.cljs$lang$maxFixedArity = 3;
        G__25640.cljs$lang$applyTo = function(arglist__25641) {
          var x = cljs.core.first(arglist__25641);
          var y = cljs.core.first(cljs.core.next(arglist__25641));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25641)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25641)));
          return G__25640__delegate(x, y, z, args)
        };
        G__25640.cljs$lang$arity$variadic = G__25640__delegate;
        return G__25640
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____25611 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____25611)) {
          return or__3824__auto____25611
        }else {
          var or__3824__auto____25612 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____25612)) {
            return or__3824__auto____25612
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____25613 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____25613)) {
          return or__3824__auto____25613
        }else {
          var or__3824__auto____25614 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____25614)) {
            return or__3824__auto____25614
          }else {
            var or__3824__auto____25615 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____25615)) {
              return or__3824__auto____25615
            }else {
              var or__3824__auto____25616 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____25616)) {
                return or__3824__auto____25616
              }else {
                var or__3824__auto____25617 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____25617)) {
                  return or__3824__auto____25617
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____25618 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____25618)) {
          return or__3824__auto____25618
        }else {
          var or__3824__auto____25619 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____25619)) {
            return or__3824__auto____25619
          }else {
            var or__3824__auto____25620 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____25620)) {
              return or__3824__auto____25620
            }else {
              var or__3824__auto____25621 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____25621)) {
                return or__3824__auto____25621
              }else {
                var or__3824__auto____25622 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____25622)) {
                  return or__3824__auto____25622
                }else {
                  var or__3824__auto____25623 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____25623)) {
                    return or__3824__auto____25623
                  }else {
                    var or__3824__auto____25624 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____25624)) {
                      return or__3824__auto____25624
                    }else {
                      var or__3824__auto____25625 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____25625)) {
                        return or__3824__auto____25625
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__25642__delegate = function(x, y, z, args) {
          var or__3824__auto____25626 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____25626)) {
            return or__3824__auto____25626
          }else {
            return cljs.core.some.call(null, function(p1__25322_SHARP_) {
              var or__3824__auto____25627 = p1.call(null, p1__25322_SHARP_);
              if(cljs.core.truth_(or__3824__auto____25627)) {
                return or__3824__auto____25627
              }else {
                var or__3824__auto____25628 = p2.call(null, p1__25322_SHARP_);
                if(cljs.core.truth_(or__3824__auto____25628)) {
                  return or__3824__auto____25628
                }else {
                  return p3.call(null, p1__25322_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__25642 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__25642__delegate.call(this, x, y, z, args)
        };
        G__25642.cljs$lang$maxFixedArity = 3;
        G__25642.cljs$lang$applyTo = function(arglist__25643) {
          var x = cljs.core.first(arglist__25643);
          var y = cljs.core.first(cljs.core.next(arglist__25643));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25643)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25643)));
          return G__25642__delegate(x, y, z, args)
        };
        G__25642.cljs$lang$arity$variadic = G__25642__delegate;
        return G__25642
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__25644__delegate = function(p1, p2, p3, ps) {
      var ps__25629 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__25323_SHARP_) {
            return p1__25323_SHARP_.call(null, x)
          }, ps__25629)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__25324_SHARP_) {
            var or__3824__auto____25634 = p1__25324_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____25634)) {
              return or__3824__auto____25634
            }else {
              return p1__25324_SHARP_.call(null, y)
            }
          }, ps__25629)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__25325_SHARP_) {
            var or__3824__auto____25635 = p1__25325_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____25635)) {
              return or__3824__auto____25635
            }else {
              var or__3824__auto____25636 = p1__25325_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____25636)) {
                return or__3824__auto____25636
              }else {
                return p1__25325_SHARP_.call(null, z)
              }
            }
          }, ps__25629)
        };
        var spn__4 = function() {
          var G__25645__delegate = function(x, y, z, args) {
            var or__3824__auto____25637 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____25637)) {
              return or__3824__auto____25637
            }else {
              return cljs.core.some.call(null, function(p1__25326_SHARP_) {
                return cljs.core.some.call(null, p1__25326_SHARP_, args)
              }, ps__25629)
            }
          };
          var G__25645 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__25645__delegate.call(this, x, y, z, args)
          };
          G__25645.cljs$lang$maxFixedArity = 3;
          G__25645.cljs$lang$applyTo = function(arglist__25646) {
            var x = cljs.core.first(arglist__25646);
            var y = cljs.core.first(cljs.core.next(arglist__25646));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25646)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25646)));
            return G__25645__delegate(x, y, z, args)
          };
          G__25645.cljs$lang$arity$variadic = G__25645__delegate;
          return G__25645
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__25644 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__25644__delegate.call(this, p1, p2, p3, ps)
    };
    G__25644.cljs$lang$maxFixedArity = 3;
    G__25644.cljs$lang$applyTo = function(arglist__25647) {
      var p1 = cljs.core.first(arglist__25647);
      var p2 = cljs.core.first(cljs.core.next(arglist__25647));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25647)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25647)));
      return G__25644__delegate(p1, p2, p3, ps)
    };
    G__25644.cljs$lang$arity$variadic = G__25644__delegate;
    return G__25644
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____25666 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____25666) {
        var s__25667 = temp__3974__auto____25666;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__25667)) {
          var c__25668 = cljs.core.chunk_first.call(null, s__25667);
          var size__25669 = cljs.core.count.call(null, c__25668);
          var b__25670 = cljs.core.chunk_buffer.call(null, size__25669);
          var n__2428__auto____25671 = size__25669;
          var i__25672 = 0;
          while(true) {
            if(i__25672 < n__2428__auto____25671) {
              cljs.core.chunk_append.call(null, b__25670, f.call(null, cljs.core._nth.call(null, c__25668, i__25672)));
              var G__25684 = i__25672 + 1;
              i__25672 = G__25684;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__25670), map.call(null, f, cljs.core.chunk_rest.call(null, s__25667)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__25667)), map.call(null, f, cljs.core.rest.call(null, s__25667)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__25673 = cljs.core.seq.call(null, c1);
      var s2__25674 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____25675 = s1__25673;
        if(and__3822__auto____25675) {
          return s2__25674
        }else {
          return and__3822__auto____25675
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__25673), cljs.core.first.call(null, s2__25674)), map.call(null, f, cljs.core.rest.call(null, s1__25673), cljs.core.rest.call(null, s2__25674)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__25676 = cljs.core.seq.call(null, c1);
      var s2__25677 = cljs.core.seq.call(null, c2);
      var s3__25678 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____25679 = s1__25676;
        if(and__3822__auto____25679) {
          var and__3822__auto____25680 = s2__25677;
          if(and__3822__auto____25680) {
            return s3__25678
          }else {
            return and__3822__auto____25680
          }
        }else {
          return and__3822__auto____25679
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__25676), cljs.core.first.call(null, s2__25677), cljs.core.first.call(null, s3__25678)), map.call(null, f, cljs.core.rest.call(null, s1__25676), cljs.core.rest.call(null, s2__25677), cljs.core.rest.call(null, s3__25678)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__25685__delegate = function(f, c1, c2, c3, colls) {
      var step__25683 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__25682 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__25682)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__25682), step.call(null, map.call(null, cljs.core.rest, ss__25682)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__25487_SHARP_) {
        return cljs.core.apply.call(null, f, p1__25487_SHARP_)
      }, step__25683.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__25685 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__25685__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__25685.cljs$lang$maxFixedArity = 4;
    G__25685.cljs$lang$applyTo = function(arglist__25686) {
      var f = cljs.core.first(arglist__25686);
      var c1 = cljs.core.first(cljs.core.next(arglist__25686));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25686)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__25686))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__25686))));
      return G__25685__delegate(f, c1, c2, c3, colls)
    };
    G__25685.cljs$lang$arity$variadic = G__25685__delegate;
    return G__25685
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____25689 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____25689) {
        var s__25690 = temp__3974__auto____25689;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__25690), take.call(null, n - 1, cljs.core.rest.call(null, s__25690)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__25696 = function(n, coll) {
    while(true) {
      var s__25694 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____25695 = n > 0;
        if(and__3822__auto____25695) {
          return s__25694
        }else {
          return and__3822__auto____25695
        }
      }())) {
        var G__25697 = n - 1;
        var G__25698 = cljs.core.rest.call(null, s__25694);
        n = G__25697;
        coll = G__25698;
        continue
      }else {
        return s__25694
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__25696.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__25701 = cljs.core.seq.call(null, coll);
  var lead__25702 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__25702) {
      var G__25703 = cljs.core.next.call(null, s__25701);
      var G__25704 = cljs.core.next.call(null, lead__25702);
      s__25701 = G__25703;
      lead__25702 = G__25704;
      continue
    }else {
      return s__25701
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__25710 = function(pred, coll) {
    while(true) {
      var s__25708 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____25709 = s__25708;
        if(and__3822__auto____25709) {
          return pred.call(null, cljs.core.first.call(null, s__25708))
        }else {
          return and__3822__auto____25709
        }
      }())) {
        var G__25711 = pred;
        var G__25712 = cljs.core.rest.call(null, s__25708);
        pred = G__25711;
        coll = G__25712;
        continue
      }else {
        return s__25708
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__25710.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____25715 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____25715) {
      var s__25716 = temp__3974__auto____25715;
      return cljs.core.concat.call(null, s__25716, cycle.call(null, s__25716))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__25721 = cljs.core.seq.call(null, c1);
      var s2__25722 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____25723 = s1__25721;
        if(and__3822__auto____25723) {
          return s2__25722
        }else {
          return and__3822__auto____25723
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__25721), cljs.core.cons.call(null, cljs.core.first.call(null, s2__25722), interleave.call(null, cljs.core.rest.call(null, s1__25721), cljs.core.rest.call(null, s2__25722))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__25725__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__25724 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__25724)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__25724), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__25724)))
        }else {
          return null
        }
      }, null)
    };
    var G__25725 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__25725__delegate.call(this, c1, c2, colls)
    };
    G__25725.cljs$lang$maxFixedArity = 2;
    G__25725.cljs$lang$applyTo = function(arglist__25726) {
      var c1 = cljs.core.first(arglist__25726);
      var c2 = cljs.core.first(cljs.core.next(arglist__25726));
      var colls = cljs.core.rest(cljs.core.next(arglist__25726));
      return G__25725__delegate(c1, c2, colls)
    };
    G__25725.cljs$lang$arity$variadic = G__25725__delegate;
    return G__25725
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__25736 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____25734 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____25734) {
        var coll__25735 = temp__3971__auto____25734;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__25735), cat.call(null, cljs.core.rest.call(null, coll__25735), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__25736.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__25737__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__25737 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__25737__delegate.call(this, f, coll, colls)
    };
    G__25737.cljs$lang$maxFixedArity = 2;
    G__25737.cljs$lang$applyTo = function(arglist__25738) {
      var f = cljs.core.first(arglist__25738);
      var coll = cljs.core.first(cljs.core.next(arglist__25738));
      var colls = cljs.core.rest(cljs.core.next(arglist__25738));
      return G__25737__delegate(f, coll, colls)
    };
    G__25737.cljs$lang$arity$variadic = G__25737__delegate;
    return G__25737
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____25748 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____25748) {
      var s__25749 = temp__3974__auto____25748;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__25749)) {
        var c__25750 = cljs.core.chunk_first.call(null, s__25749);
        var size__25751 = cljs.core.count.call(null, c__25750);
        var b__25752 = cljs.core.chunk_buffer.call(null, size__25751);
        var n__2428__auto____25753 = size__25751;
        var i__25754 = 0;
        while(true) {
          if(i__25754 < n__2428__auto____25753) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__25750, i__25754)))) {
              cljs.core.chunk_append.call(null, b__25752, cljs.core._nth.call(null, c__25750, i__25754))
            }else {
            }
            var G__25757 = i__25754 + 1;
            i__25754 = G__25757;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__25752), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__25749)))
      }else {
        var f__25755 = cljs.core.first.call(null, s__25749);
        var r__25756 = cljs.core.rest.call(null, s__25749);
        if(cljs.core.truth_(pred.call(null, f__25755))) {
          return cljs.core.cons.call(null, f__25755, filter.call(null, pred, r__25756))
        }else {
          return filter.call(null, pred, r__25756)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__25760 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__25760.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__25758_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__25758_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__25764__25765 = to;
    if(G__25764__25765) {
      if(function() {
        var or__3824__auto____25766 = G__25764__25765.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____25766) {
          return or__3824__auto____25766
        }else {
          return G__25764__25765.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__25764__25765.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__25764__25765)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__25764__25765)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__25767__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__25767 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__25767__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__25767.cljs$lang$maxFixedArity = 4;
    G__25767.cljs$lang$applyTo = function(arglist__25768) {
      var f = cljs.core.first(arglist__25768);
      var c1 = cljs.core.first(cljs.core.next(arglist__25768));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25768)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__25768))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__25768))));
      return G__25767__delegate(f, c1, c2, c3, colls)
    };
    G__25767.cljs$lang$arity$variadic = G__25767__delegate;
    return G__25767
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____25775 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____25775) {
        var s__25776 = temp__3974__auto____25775;
        var p__25777 = cljs.core.take.call(null, n, s__25776);
        if(n === cljs.core.count.call(null, p__25777)) {
          return cljs.core.cons.call(null, p__25777, partition.call(null, n, step, cljs.core.drop.call(null, step, s__25776)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____25778 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____25778) {
        var s__25779 = temp__3974__auto____25778;
        var p__25780 = cljs.core.take.call(null, n, s__25779);
        if(n === cljs.core.count.call(null, p__25780)) {
          return cljs.core.cons.call(null, p__25780, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__25779)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__25780, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__25785 = cljs.core.lookup_sentinel;
    var m__25786 = m;
    var ks__25787 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__25787) {
        var m__25788 = cljs.core._lookup.call(null, m__25786, cljs.core.first.call(null, ks__25787), sentinel__25785);
        if(sentinel__25785 === m__25788) {
          return not_found
        }else {
          var G__25789 = sentinel__25785;
          var G__25790 = m__25788;
          var G__25791 = cljs.core.next.call(null, ks__25787);
          sentinel__25785 = G__25789;
          m__25786 = G__25790;
          ks__25787 = G__25791;
          continue
        }
      }else {
        return m__25786
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__25792, v) {
  var vec__25797__25798 = p__25792;
  var k__25799 = cljs.core.nth.call(null, vec__25797__25798, 0, null);
  var ks__25800 = cljs.core.nthnext.call(null, vec__25797__25798, 1);
  if(cljs.core.truth_(ks__25800)) {
    return cljs.core.assoc.call(null, m, k__25799, assoc_in.call(null, cljs.core._lookup.call(null, m, k__25799, null), ks__25800, v))
  }else {
    return cljs.core.assoc.call(null, m, k__25799, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__25801, f, args) {
    var vec__25806__25807 = p__25801;
    var k__25808 = cljs.core.nth.call(null, vec__25806__25807, 0, null);
    var ks__25809 = cljs.core.nthnext.call(null, vec__25806__25807, 1);
    if(cljs.core.truth_(ks__25809)) {
      return cljs.core.assoc.call(null, m, k__25808, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__25808, null), ks__25809, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__25808, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__25808, null), args))
    }
  };
  var update_in = function(m, p__25801, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__25801, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__25810) {
    var m = cljs.core.first(arglist__25810);
    var p__25801 = cljs.core.first(cljs.core.next(arglist__25810));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__25810)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__25810)));
    return update_in__delegate(m, p__25801, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__25813 = this;
  var h__2093__auto____25814 = this__25813.__hash;
  if(!(h__2093__auto____25814 == null)) {
    return h__2093__auto____25814
  }else {
    var h__2093__auto____25815 = cljs.core.hash_coll.call(null, coll);
    this__25813.__hash = h__2093__auto____25815;
    return h__2093__auto____25815
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__25816 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__25817 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__25818 = this;
  var new_array__25819 = this__25818.array.slice();
  new_array__25819[k] = v;
  return new cljs.core.Vector(this__25818.meta, new_array__25819, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__25850 = null;
  var G__25850__2 = function(this_sym25820, k) {
    var this__25822 = this;
    var this_sym25820__25823 = this;
    var coll__25824 = this_sym25820__25823;
    return coll__25824.cljs$core$ILookup$_lookup$arity$2(coll__25824, k)
  };
  var G__25850__3 = function(this_sym25821, k, not_found) {
    var this__25822 = this;
    var this_sym25821__25825 = this;
    var coll__25826 = this_sym25821__25825;
    return coll__25826.cljs$core$ILookup$_lookup$arity$3(coll__25826, k, not_found)
  };
  G__25850 = function(this_sym25821, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__25850__2.call(this, this_sym25821, k);
      case 3:
        return G__25850__3.call(this, this_sym25821, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__25850
}();
cljs.core.Vector.prototype.apply = function(this_sym25811, args25812) {
  var this__25827 = this;
  return this_sym25811.call.apply(this_sym25811, [this_sym25811].concat(args25812.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__25828 = this;
  var new_array__25829 = this__25828.array.slice();
  new_array__25829.push(o);
  return new cljs.core.Vector(this__25828.meta, new_array__25829, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__25830 = this;
  var this__25831 = this;
  return cljs.core.pr_str.call(null, this__25831)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__25832 = this;
  return cljs.core.ci_reduce.call(null, this__25832.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__25833 = this;
  return cljs.core.ci_reduce.call(null, this__25833.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__25834 = this;
  if(this__25834.array.length > 0) {
    var vector_seq__25835 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__25834.array.length) {
          return cljs.core.cons.call(null, this__25834.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__25835.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__25836 = this;
  return this__25836.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__25837 = this;
  var count__25838 = this__25837.array.length;
  if(count__25838 > 0) {
    return this__25837.array[count__25838 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__25839 = this;
  if(this__25839.array.length > 0) {
    var new_array__25840 = this__25839.array.slice();
    new_array__25840.pop();
    return new cljs.core.Vector(this__25839.meta, new_array__25840, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__25841 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__25842 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__25843 = this;
  return new cljs.core.Vector(meta, this__25843.array, this__25843.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__25844 = this;
  return this__25844.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__25845 = this;
  if(function() {
    var and__3822__auto____25846 = 0 <= n;
    if(and__3822__auto____25846) {
      return n < this__25845.array.length
    }else {
      return and__3822__auto____25846
    }
  }()) {
    return this__25845.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__25847 = this;
  if(function() {
    var and__3822__auto____25848 = 0 <= n;
    if(and__3822__auto____25848) {
      return n < this__25847.array.length
    }else {
      return and__3822__auto____25848
    }
  }()) {
    return this__25847.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__25849 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__25849.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2211__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__25852 = pv.cnt;
  if(cnt__25852 < 32) {
    return 0
  }else {
    return cnt__25852 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__25858 = level;
  var ret__25859 = node;
  while(true) {
    if(ll__25858 === 0) {
      return ret__25859
    }else {
      var embed__25860 = ret__25859;
      var r__25861 = cljs.core.pv_fresh_node.call(null, edit);
      var ___25862 = cljs.core.pv_aset.call(null, r__25861, 0, embed__25860);
      var G__25863 = ll__25858 - 5;
      var G__25864 = r__25861;
      ll__25858 = G__25863;
      ret__25859 = G__25864;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__25870 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__25871 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__25870, subidx__25871, tailnode);
    return ret__25870
  }else {
    var child__25872 = cljs.core.pv_aget.call(null, parent, subidx__25871);
    if(!(child__25872 == null)) {
      var node_to_insert__25873 = push_tail.call(null, pv, level - 5, child__25872, tailnode);
      cljs.core.pv_aset.call(null, ret__25870, subidx__25871, node_to_insert__25873);
      return ret__25870
    }else {
      var node_to_insert__25874 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__25870, subidx__25871, node_to_insert__25874);
      return ret__25870
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____25878 = 0 <= i;
    if(and__3822__auto____25878) {
      return i < pv.cnt
    }else {
      return and__3822__auto____25878
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__25879 = pv.root;
      var level__25880 = pv.shift;
      while(true) {
        if(level__25880 > 0) {
          var G__25881 = cljs.core.pv_aget.call(null, node__25879, i >>> level__25880 & 31);
          var G__25882 = level__25880 - 5;
          node__25879 = G__25881;
          level__25880 = G__25882;
          continue
        }else {
          return node__25879.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__25885 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__25885, i & 31, val);
    return ret__25885
  }else {
    var subidx__25886 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__25885, subidx__25886, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__25886), i, val));
    return ret__25885
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__25892 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__25893 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__25892));
    if(function() {
      var and__3822__auto____25894 = new_child__25893 == null;
      if(and__3822__auto____25894) {
        return subidx__25892 === 0
      }else {
        return and__3822__auto____25894
      }
    }()) {
      return null
    }else {
      var ret__25895 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__25895, subidx__25892, new_child__25893);
      return ret__25895
    }
  }else {
    if(subidx__25892 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__25896 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__25896, subidx__25892, null);
        return ret__25896
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__25899 = this;
  return new cljs.core.TransientVector(this__25899.cnt, this__25899.shift, cljs.core.tv_editable_root.call(null, this__25899.root), cljs.core.tv_editable_tail.call(null, this__25899.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__25900 = this;
  var h__2093__auto____25901 = this__25900.__hash;
  if(!(h__2093__auto____25901 == null)) {
    return h__2093__auto____25901
  }else {
    var h__2093__auto____25902 = cljs.core.hash_coll.call(null, coll);
    this__25900.__hash = h__2093__auto____25902;
    return h__2093__auto____25902
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__25903 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__25904 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__25905 = this;
  if(function() {
    var and__3822__auto____25906 = 0 <= k;
    if(and__3822__auto____25906) {
      return k < this__25905.cnt
    }else {
      return and__3822__auto____25906
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__25907 = this__25905.tail.slice();
      new_tail__25907[k & 31] = v;
      return new cljs.core.PersistentVector(this__25905.meta, this__25905.cnt, this__25905.shift, this__25905.root, new_tail__25907, null)
    }else {
      return new cljs.core.PersistentVector(this__25905.meta, this__25905.cnt, this__25905.shift, cljs.core.do_assoc.call(null, coll, this__25905.shift, this__25905.root, k, v), this__25905.tail, null)
    }
  }else {
    if(k === this__25905.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__25905.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__25955 = null;
  var G__25955__2 = function(this_sym25908, k) {
    var this__25910 = this;
    var this_sym25908__25911 = this;
    var coll__25912 = this_sym25908__25911;
    return coll__25912.cljs$core$ILookup$_lookup$arity$2(coll__25912, k)
  };
  var G__25955__3 = function(this_sym25909, k, not_found) {
    var this__25910 = this;
    var this_sym25909__25913 = this;
    var coll__25914 = this_sym25909__25913;
    return coll__25914.cljs$core$ILookup$_lookup$arity$3(coll__25914, k, not_found)
  };
  G__25955 = function(this_sym25909, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__25955__2.call(this, this_sym25909, k);
      case 3:
        return G__25955__3.call(this, this_sym25909, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__25955
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym25897, args25898) {
  var this__25915 = this;
  return this_sym25897.call.apply(this_sym25897, [this_sym25897].concat(args25898.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__25916 = this;
  var step_init__25917 = [0, init];
  var i__25918 = 0;
  while(true) {
    if(i__25918 < this__25916.cnt) {
      var arr__25919 = cljs.core.array_for.call(null, v, i__25918);
      var len__25920 = arr__25919.length;
      var init__25924 = function() {
        var j__25921 = 0;
        var init__25922 = step_init__25917[1];
        while(true) {
          if(j__25921 < len__25920) {
            var init__25923 = f.call(null, init__25922, j__25921 + i__25918, arr__25919[j__25921]);
            if(cljs.core.reduced_QMARK_.call(null, init__25923)) {
              return init__25923
            }else {
              var G__25956 = j__25921 + 1;
              var G__25957 = init__25923;
              j__25921 = G__25956;
              init__25922 = G__25957;
              continue
            }
          }else {
            step_init__25917[0] = len__25920;
            step_init__25917[1] = init__25922;
            return init__25922
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__25924)) {
        return cljs.core.deref.call(null, init__25924)
      }else {
        var G__25958 = i__25918 + step_init__25917[0];
        i__25918 = G__25958;
        continue
      }
    }else {
      return step_init__25917[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__25925 = this;
  if(this__25925.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__25926 = this__25925.tail.slice();
    new_tail__25926.push(o);
    return new cljs.core.PersistentVector(this__25925.meta, this__25925.cnt + 1, this__25925.shift, this__25925.root, new_tail__25926, null)
  }else {
    var root_overflow_QMARK___25927 = this__25925.cnt >>> 5 > 1 << this__25925.shift;
    var new_shift__25928 = root_overflow_QMARK___25927 ? this__25925.shift + 5 : this__25925.shift;
    var new_root__25930 = root_overflow_QMARK___25927 ? function() {
      var n_r__25929 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__25929, 0, this__25925.root);
      cljs.core.pv_aset.call(null, n_r__25929, 1, cljs.core.new_path.call(null, null, this__25925.shift, new cljs.core.VectorNode(null, this__25925.tail)));
      return n_r__25929
    }() : cljs.core.push_tail.call(null, coll, this__25925.shift, this__25925.root, new cljs.core.VectorNode(null, this__25925.tail));
    return new cljs.core.PersistentVector(this__25925.meta, this__25925.cnt + 1, new_shift__25928, new_root__25930, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__25931 = this;
  if(this__25931.cnt > 0) {
    return new cljs.core.RSeq(coll, this__25931.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__25932 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__25933 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__25934 = this;
  var this__25935 = this;
  return cljs.core.pr_str.call(null, this__25935)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__25936 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__25937 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__25938 = this;
  if(this__25938.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__25939 = this;
  return this__25939.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__25940 = this;
  if(this__25940.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__25940.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__25941 = this;
  if(this__25941.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__25941.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__25941.meta)
    }else {
      if(1 < this__25941.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__25941.meta, this__25941.cnt - 1, this__25941.shift, this__25941.root, this__25941.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__25942 = cljs.core.array_for.call(null, coll, this__25941.cnt - 2);
          var nr__25943 = cljs.core.pop_tail.call(null, coll, this__25941.shift, this__25941.root);
          var new_root__25944 = nr__25943 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__25943;
          var cnt_1__25945 = this__25941.cnt - 1;
          if(function() {
            var and__3822__auto____25946 = 5 < this__25941.shift;
            if(and__3822__auto____25946) {
              return cljs.core.pv_aget.call(null, new_root__25944, 1) == null
            }else {
              return and__3822__auto____25946
            }
          }()) {
            return new cljs.core.PersistentVector(this__25941.meta, cnt_1__25945, this__25941.shift - 5, cljs.core.pv_aget.call(null, new_root__25944, 0), new_tail__25942, null)
          }else {
            return new cljs.core.PersistentVector(this__25941.meta, cnt_1__25945, this__25941.shift, new_root__25944, new_tail__25942, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__25947 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__25948 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__25949 = this;
  return new cljs.core.PersistentVector(meta, this__25949.cnt, this__25949.shift, this__25949.root, this__25949.tail, this__25949.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__25950 = this;
  return this__25950.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__25951 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__25952 = this;
  if(function() {
    var and__3822__auto____25953 = 0 <= n;
    if(and__3822__auto____25953) {
      return n < this__25952.cnt
    }else {
      return and__3822__auto____25953
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__25954 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__25954.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__25959 = xs.length;
  var xs__25960 = no_clone === true ? xs : xs.slice();
  if(l__25959 < 32) {
    return new cljs.core.PersistentVector(null, l__25959, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__25960, null)
  }else {
    var node__25961 = xs__25960.slice(0, 32);
    var v__25962 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__25961, null);
    var i__25963 = 32;
    var out__25964 = cljs.core._as_transient.call(null, v__25962);
    while(true) {
      if(i__25963 < l__25959) {
        var G__25965 = i__25963 + 1;
        var G__25966 = cljs.core.conj_BANG_.call(null, out__25964, xs__25960[i__25963]);
        i__25963 = G__25965;
        out__25964 = G__25966;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__25964)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__25967) {
    var args = cljs.core.seq(arglist__25967);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__25968 = this;
  if(this__25968.off + 1 < this__25968.node.length) {
    var s__25969 = cljs.core.chunked_seq.call(null, this__25968.vec, this__25968.node, this__25968.i, this__25968.off + 1);
    if(s__25969 == null) {
      return null
    }else {
      return s__25969
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__25970 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__25971 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__25972 = this;
  return this__25972.node[this__25972.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__25973 = this;
  if(this__25973.off + 1 < this__25973.node.length) {
    var s__25974 = cljs.core.chunked_seq.call(null, this__25973.vec, this__25973.node, this__25973.i, this__25973.off + 1);
    if(s__25974 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__25974
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__25975 = this;
  var l__25976 = this__25975.node.length;
  var s__25977 = this__25975.i + l__25976 < cljs.core._count.call(null, this__25975.vec) ? cljs.core.chunked_seq.call(null, this__25975.vec, this__25975.i + l__25976, 0) : null;
  if(s__25977 == null) {
    return null
  }else {
    return s__25977
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__25978 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__25979 = this;
  return cljs.core.chunked_seq.call(null, this__25979.vec, this__25979.node, this__25979.i, this__25979.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__25980 = this;
  return this__25980.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__25981 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__25981.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__25982 = this;
  return cljs.core.array_chunk.call(null, this__25982.node, this__25982.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__25983 = this;
  var l__25984 = this__25983.node.length;
  var s__25985 = this__25983.i + l__25984 < cljs.core._count.call(null, this__25983.vec) ? cljs.core.chunked_seq.call(null, this__25983.vec, this__25983.i + l__25984, 0) : null;
  if(s__25985 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__25985
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__25988 = this;
  var h__2093__auto____25989 = this__25988.__hash;
  if(!(h__2093__auto____25989 == null)) {
    return h__2093__auto____25989
  }else {
    var h__2093__auto____25990 = cljs.core.hash_coll.call(null, coll);
    this__25988.__hash = h__2093__auto____25990;
    return h__2093__auto____25990
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__25991 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__25992 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__25993 = this;
  var v_pos__25994 = this__25993.start + key;
  return new cljs.core.Subvec(this__25993.meta, cljs.core._assoc.call(null, this__25993.v, v_pos__25994, val), this__25993.start, this__25993.end > v_pos__25994 + 1 ? this__25993.end : v_pos__25994 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__26020 = null;
  var G__26020__2 = function(this_sym25995, k) {
    var this__25997 = this;
    var this_sym25995__25998 = this;
    var coll__25999 = this_sym25995__25998;
    return coll__25999.cljs$core$ILookup$_lookup$arity$2(coll__25999, k)
  };
  var G__26020__3 = function(this_sym25996, k, not_found) {
    var this__25997 = this;
    var this_sym25996__26000 = this;
    var coll__26001 = this_sym25996__26000;
    return coll__26001.cljs$core$ILookup$_lookup$arity$3(coll__26001, k, not_found)
  };
  G__26020 = function(this_sym25996, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__26020__2.call(this, this_sym25996, k);
      case 3:
        return G__26020__3.call(this, this_sym25996, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__26020
}();
cljs.core.Subvec.prototype.apply = function(this_sym25986, args25987) {
  var this__26002 = this;
  return this_sym25986.call.apply(this_sym25986, [this_sym25986].concat(args25987.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__26003 = this;
  return new cljs.core.Subvec(this__26003.meta, cljs.core._assoc_n.call(null, this__26003.v, this__26003.end, o), this__26003.start, this__26003.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__26004 = this;
  var this__26005 = this;
  return cljs.core.pr_str.call(null, this__26005)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__26006 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__26007 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__26008 = this;
  var subvec_seq__26009 = function subvec_seq(i) {
    if(i === this__26008.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__26008.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__26009.call(null, this__26008.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__26010 = this;
  return this__26010.end - this__26010.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__26011 = this;
  return cljs.core._nth.call(null, this__26011.v, this__26011.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__26012 = this;
  if(this__26012.start === this__26012.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__26012.meta, this__26012.v, this__26012.start, this__26012.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__26013 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__26014 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__26015 = this;
  return new cljs.core.Subvec(meta, this__26015.v, this__26015.start, this__26015.end, this__26015.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__26016 = this;
  return this__26016.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__26017 = this;
  return cljs.core._nth.call(null, this__26017.v, this__26017.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__26018 = this;
  return cljs.core._nth.call(null, this__26018.v, this__26018.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__26019 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__26019.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__26022 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__26022, 0, tl.length);
  return ret__26022
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__26026 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__26027 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__26026, subidx__26027, level === 5 ? tail_node : function() {
    var child__26028 = cljs.core.pv_aget.call(null, ret__26026, subidx__26027);
    if(!(child__26028 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__26028, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__26026
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__26033 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__26034 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__26035 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__26033, subidx__26034));
    if(function() {
      var and__3822__auto____26036 = new_child__26035 == null;
      if(and__3822__auto____26036) {
        return subidx__26034 === 0
      }else {
        return and__3822__auto____26036
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__26033, subidx__26034, new_child__26035);
      return node__26033
    }
  }else {
    if(subidx__26034 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__26033, subidx__26034, null);
        return node__26033
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____26041 = 0 <= i;
    if(and__3822__auto____26041) {
      return i < tv.cnt
    }else {
      return and__3822__auto____26041
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__26042 = tv.root;
      var node__26043 = root__26042;
      var level__26044 = tv.shift;
      while(true) {
        if(level__26044 > 0) {
          var G__26045 = cljs.core.tv_ensure_editable.call(null, root__26042.edit, cljs.core.pv_aget.call(null, node__26043, i >>> level__26044 & 31));
          var G__26046 = level__26044 - 5;
          node__26043 = G__26045;
          level__26044 = G__26046;
          continue
        }else {
          return node__26043.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__26086 = null;
  var G__26086__2 = function(this_sym26049, k) {
    var this__26051 = this;
    var this_sym26049__26052 = this;
    var coll__26053 = this_sym26049__26052;
    return coll__26053.cljs$core$ILookup$_lookup$arity$2(coll__26053, k)
  };
  var G__26086__3 = function(this_sym26050, k, not_found) {
    var this__26051 = this;
    var this_sym26050__26054 = this;
    var coll__26055 = this_sym26050__26054;
    return coll__26055.cljs$core$ILookup$_lookup$arity$3(coll__26055, k, not_found)
  };
  G__26086 = function(this_sym26050, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__26086__2.call(this, this_sym26050, k);
      case 3:
        return G__26086__3.call(this, this_sym26050, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__26086
}();
cljs.core.TransientVector.prototype.apply = function(this_sym26047, args26048) {
  var this__26056 = this;
  return this_sym26047.call.apply(this_sym26047, [this_sym26047].concat(args26048.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__26057 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__26058 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__26059 = this;
  if(this__26059.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__26060 = this;
  if(function() {
    var and__3822__auto____26061 = 0 <= n;
    if(and__3822__auto____26061) {
      return n < this__26060.cnt
    }else {
      return and__3822__auto____26061
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__26062 = this;
  if(this__26062.root.edit) {
    return this__26062.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__26063 = this;
  if(this__26063.root.edit) {
    if(function() {
      var and__3822__auto____26064 = 0 <= n;
      if(and__3822__auto____26064) {
        return n < this__26063.cnt
      }else {
        return and__3822__auto____26064
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__26063.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__26069 = function go(level, node) {
          var node__26067 = cljs.core.tv_ensure_editable.call(null, this__26063.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__26067, n & 31, val);
            return node__26067
          }else {
            var subidx__26068 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__26067, subidx__26068, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__26067, subidx__26068)));
            return node__26067
          }
        }.call(null, this__26063.shift, this__26063.root);
        this__26063.root = new_root__26069;
        return tcoll
      }
    }else {
      if(n === this__26063.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__26063.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__26070 = this;
  if(this__26070.root.edit) {
    if(this__26070.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__26070.cnt) {
        this__26070.cnt = 0;
        return tcoll
      }else {
        if((this__26070.cnt - 1 & 31) > 0) {
          this__26070.cnt = this__26070.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__26071 = cljs.core.editable_array_for.call(null, tcoll, this__26070.cnt - 2);
            var new_root__26073 = function() {
              var nr__26072 = cljs.core.tv_pop_tail.call(null, tcoll, this__26070.shift, this__26070.root);
              if(!(nr__26072 == null)) {
                return nr__26072
              }else {
                return new cljs.core.VectorNode(this__26070.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____26074 = 5 < this__26070.shift;
              if(and__3822__auto____26074) {
                return cljs.core.pv_aget.call(null, new_root__26073, 1) == null
              }else {
                return and__3822__auto____26074
              }
            }()) {
              var new_root__26075 = cljs.core.tv_ensure_editable.call(null, this__26070.root.edit, cljs.core.pv_aget.call(null, new_root__26073, 0));
              this__26070.root = new_root__26075;
              this__26070.shift = this__26070.shift - 5;
              this__26070.cnt = this__26070.cnt - 1;
              this__26070.tail = new_tail__26071;
              return tcoll
            }else {
              this__26070.root = new_root__26073;
              this__26070.cnt = this__26070.cnt - 1;
              this__26070.tail = new_tail__26071;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__26076 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__26077 = this;
  if(this__26077.root.edit) {
    if(this__26077.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__26077.tail[this__26077.cnt & 31] = o;
      this__26077.cnt = this__26077.cnt + 1;
      return tcoll
    }else {
      var tail_node__26078 = new cljs.core.VectorNode(this__26077.root.edit, this__26077.tail);
      var new_tail__26079 = cljs.core.make_array.call(null, 32);
      new_tail__26079[0] = o;
      this__26077.tail = new_tail__26079;
      if(this__26077.cnt >>> 5 > 1 << this__26077.shift) {
        var new_root_array__26080 = cljs.core.make_array.call(null, 32);
        var new_shift__26081 = this__26077.shift + 5;
        new_root_array__26080[0] = this__26077.root;
        new_root_array__26080[1] = cljs.core.new_path.call(null, this__26077.root.edit, this__26077.shift, tail_node__26078);
        this__26077.root = new cljs.core.VectorNode(this__26077.root.edit, new_root_array__26080);
        this__26077.shift = new_shift__26081;
        this__26077.cnt = this__26077.cnt + 1;
        return tcoll
      }else {
        var new_root__26082 = cljs.core.tv_push_tail.call(null, tcoll, this__26077.shift, this__26077.root, tail_node__26078);
        this__26077.root = new_root__26082;
        this__26077.cnt = this__26077.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__26083 = this;
  if(this__26083.root.edit) {
    this__26083.root.edit = null;
    var len__26084 = this__26083.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__26085 = cljs.core.make_array.call(null, len__26084);
    cljs.core.array_copy.call(null, this__26083.tail, 0, trimmed_tail__26085, 0, len__26084);
    return new cljs.core.PersistentVector(null, this__26083.cnt, this__26083.shift, this__26083.root, trimmed_tail__26085, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__26087 = this;
  var h__2093__auto____26088 = this__26087.__hash;
  if(!(h__2093__auto____26088 == null)) {
    return h__2093__auto____26088
  }else {
    var h__2093__auto____26089 = cljs.core.hash_coll.call(null, coll);
    this__26087.__hash = h__2093__auto____26089;
    return h__2093__auto____26089
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__26090 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__26091 = this;
  var this__26092 = this;
  return cljs.core.pr_str.call(null, this__26092)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__26093 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__26094 = this;
  return cljs.core._first.call(null, this__26094.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__26095 = this;
  var temp__3971__auto____26096 = cljs.core.next.call(null, this__26095.front);
  if(temp__3971__auto____26096) {
    var f1__26097 = temp__3971__auto____26096;
    return new cljs.core.PersistentQueueSeq(this__26095.meta, f1__26097, this__26095.rear, null)
  }else {
    if(this__26095.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__26095.meta, this__26095.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__26098 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__26099 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__26099.front, this__26099.rear, this__26099.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__26100 = this;
  return this__26100.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__26101 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__26101.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__26102 = this;
  var h__2093__auto____26103 = this__26102.__hash;
  if(!(h__2093__auto____26103 == null)) {
    return h__2093__auto____26103
  }else {
    var h__2093__auto____26104 = cljs.core.hash_coll.call(null, coll);
    this__26102.__hash = h__2093__auto____26104;
    return h__2093__auto____26104
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__26105 = this;
  if(cljs.core.truth_(this__26105.front)) {
    return new cljs.core.PersistentQueue(this__26105.meta, this__26105.count + 1, this__26105.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____26106 = this__26105.rear;
      if(cljs.core.truth_(or__3824__auto____26106)) {
        return or__3824__auto____26106
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__26105.meta, this__26105.count + 1, cljs.core.conj.call(null, this__26105.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__26107 = this;
  var this__26108 = this;
  return cljs.core.pr_str.call(null, this__26108)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__26109 = this;
  var rear__26110 = cljs.core.seq.call(null, this__26109.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____26111 = this__26109.front;
    if(cljs.core.truth_(or__3824__auto____26111)) {
      return or__3824__auto____26111
    }else {
      return rear__26110
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__26109.front, cljs.core.seq.call(null, rear__26110), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__26112 = this;
  return this__26112.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__26113 = this;
  return cljs.core._first.call(null, this__26113.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__26114 = this;
  if(cljs.core.truth_(this__26114.front)) {
    var temp__3971__auto____26115 = cljs.core.next.call(null, this__26114.front);
    if(temp__3971__auto____26115) {
      var f1__26116 = temp__3971__auto____26115;
      return new cljs.core.PersistentQueue(this__26114.meta, this__26114.count - 1, f1__26116, this__26114.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__26114.meta, this__26114.count - 1, cljs.core.seq.call(null, this__26114.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__26117 = this;
  return cljs.core.first.call(null, this__26117.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__26118 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__26119 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__26120 = this;
  return new cljs.core.PersistentQueue(meta, this__26120.count, this__26120.front, this__26120.rear, this__26120.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__26121 = this;
  return this__26121.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__26122 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__26123 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__26126 = array.length;
  var i__26127 = 0;
  while(true) {
    if(i__26127 < len__26126) {
      if(k === array[i__26127]) {
        return i__26127
      }else {
        var G__26128 = i__26127 + incr;
        i__26127 = G__26128;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__26131 = cljs.core.hash.call(null, a);
  var b__26132 = cljs.core.hash.call(null, b);
  if(a__26131 < b__26132) {
    return-1
  }else {
    if(a__26131 > b__26132) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__26140 = m.keys;
  var len__26141 = ks__26140.length;
  var so__26142 = m.strobj;
  var out__26143 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__26144 = 0;
  var out__26145 = cljs.core.transient$.call(null, out__26143);
  while(true) {
    if(i__26144 < len__26141) {
      var k__26146 = ks__26140[i__26144];
      var G__26147 = i__26144 + 1;
      var G__26148 = cljs.core.assoc_BANG_.call(null, out__26145, k__26146, so__26142[k__26146]);
      i__26144 = G__26147;
      out__26145 = G__26148;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__26145, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__26154 = {};
  var l__26155 = ks.length;
  var i__26156 = 0;
  while(true) {
    if(i__26156 < l__26155) {
      var k__26157 = ks[i__26156];
      new_obj__26154[k__26157] = obj[k__26157];
      var G__26158 = i__26156 + 1;
      i__26156 = G__26158;
      continue
    }else {
    }
    break
  }
  return new_obj__26154
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__26161 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__26162 = this;
  var h__2093__auto____26163 = this__26162.__hash;
  if(!(h__2093__auto____26163 == null)) {
    return h__2093__auto____26163
  }else {
    var h__2093__auto____26164 = cljs.core.hash_imap.call(null, coll);
    this__26162.__hash = h__2093__auto____26164;
    return h__2093__auto____26164
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__26165 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__26166 = this;
  if(function() {
    var and__3822__auto____26167 = goog.isString(k);
    if(and__3822__auto____26167) {
      return!(cljs.core.scan_array.call(null, 1, k, this__26166.keys) == null)
    }else {
      return and__3822__auto____26167
    }
  }()) {
    return this__26166.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__26168 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____26169 = this__26168.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____26169) {
        return or__3824__auto____26169
      }else {
        return this__26168.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__26168.keys) == null)) {
        var new_strobj__26170 = cljs.core.obj_clone.call(null, this__26168.strobj, this__26168.keys);
        new_strobj__26170[k] = v;
        return new cljs.core.ObjMap(this__26168.meta, this__26168.keys, new_strobj__26170, this__26168.update_count + 1, null)
      }else {
        var new_strobj__26171 = cljs.core.obj_clone.call(null, this__26168.strobj, this__26168.keys);
        var new_keys__26172 = this__26168.keys.slice();
        new_strobj__26171[k] = v;
        new_keys__26172.push(k);
        return new cljs.core.ObjMap(this__26168.meta, new_keys__26172, new_strobj__26171, this__26168.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__26173 = this;
  if(function() {
    var and__3822__auto____26174 = goog.isString(k);
    if(and__3822__auto____26174) {
      return!(cljs.core.scan_array.call(null, 1, k, this__26173.keys) == null)
    }else {
      return and__3822__auto____26174
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__26196 = null;
  var G__26196__2 = function(this_sym26175, k) {
    var this__26177 = this;
    var this_sym26175__26178 = this;
    var coll__26179 = this_sym26175__26178;
    return coll__26179.cljs$core$ILookup$_lookup$arity$2(coll__26179, k)
  };
  var G__26196__3 = function(this_sym26176, k, not_found) {
    var this__26177 = this;
    var this_sym26176__26180 = this;
    var coll__26181 = this_sym26176__26180;
    return coll__26181.cljs$core$ILookup$_lookup$arity$3(coll__26181, k, not_found)
  };
  G__26196 = function(this_sym26176, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__26196__2.call(this, this_sym26176, k);
      case 3:
        return G__26196__3.call(this, this_sym26176, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__26196
}();
cljs.core.ObjMap.prototype.apply = function(this_sym26159, args26160) {
  var this__26182 = this;
  return this_sym26159.call.apply(this_sym26159, [this_sym26159].concat(args26160.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__26183 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__26184 = this;
  var this__26185 = this;
  return cljs.core.pr_str.call(null, this__26185)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__26186 = this;
  if(this__26186.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__26149_SHARP_) {
      return cljs.core.vector.call(null, p1__26149_SHARP_, this__26186.strobj[p1__26149_SHARP_])
    }, this__26186.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__26187 = this;
  return this__26187.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__26188 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__26189 = this;
  return new cljs.core.ObjMap(meta, this__26189.keys, this__26189.strobj, this__26189.update_count, this__26189.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__26190 = this;
  return this__26190.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__26191 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__26191.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__26192 = this;
  if(function() {
    var and__3822__auto____26193 = goog.isString(k);
    if(and__3822__auto____26193) {
      return!(cljs.core.scan_array.call(null, 1, k, this__26192.keys) == null)
    }else {
      return and__3822__auto____26193
    }
  }()) {
    var new_keys__26194 = this__26192.keys.slice();
    var new_strobj__26195 = cljs.core.obj_clone.call(null, this__26192.strobj, this__26192.keys);
    new_keys__26194.splice(cljs.core.scan_array.call(null, 1, k, new_keys__26194), 1);
    cljs.core.js_delete.call(null, new_strobj__26195, k);
    return new cljs.core.ObjMap(this__26192.meta, new_keys__26194, new_strobj__26195, this__26192.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__26200 = this;
  var h__2093__auto____26201 = this__26200.__hash;
  if(!(h__2093__auto____26201 == null)) {
    return h__2093__auto____26201
  }else {
    var h__2093__auto____26202 = cljs.core.hash_imap.call(null, coll);
    this__26200.__hash = h__2093__auto____26202;
    return h__2093__auto____26202
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__26203 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__26204 = this;
  var bucket__26205 = this__26204.hashobj[cljs.core.hash.call(null, k)];
  var i__26206 = cljs.core.truth_(bucket__26205) ? cljs.core.scan_array.call(null, 2, k, bucket__26205) : null;
  if(cljs.core.truth_(i__26206)) {
    return bucket__26205[i__26206 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__26207 = this;
  var h__26208 = cljs.core.hash.call(null, k);
  var bucket__26209 = this__26207.hashobj[h__26208];
  if(cljs.core.truth_(bucket__26209)) {
    var new_bucket__26210 = bucket__26209.slice();
    var new_hashobj__26211 = goog.object.clone(this__26207.hashobj);
    new_hashobj__26211[h__26208] = new_bucket__26210;
    var temp__3971__auto____26212 = cljs.core.scan_array.call(null, 2, k, new_bucket__26210);
    if(cljs.core.truth_(temp__3971__auto____26212)) {
      var i__26213 = temp__3971__auto____26212;
      new_bucket__26210[i__26213 + 1] = v;
      return new cljs.core.HashMap(this__26207.meta, this__26207.count, new_hashobj__26211, null)
    }else {
      new_bucket__26210.push(k, v);
      return new cljs.core.HashMap(this__26207.meta, this__26207.count + 1, new_hashobj__26211, null)
    }
  }else {
    var new_hashobj__26214 = goog.object.clone(this__26207.hashobj);
    new_hashobj__26214[h__26208] = [k, v];
    return new cljs.core.HashMap(this__26207.meta, this__26207.count + 1, new_hashobj__26214, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__26215 = this;
  var bucket__26216 = this__26215.hashobj[cljs.core.hash.call(null, k)];
  var i__26217 = cljs.core.truth_(bucket__26216) ? cljs.core.scan_array.call(null, 2, k, bucket__26216) : null;
  if(cljs.core.truth_(i__26217)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__26242 = null;
  var G__26242__2 = function(this_sym26218, k) {
    var this__26220 = this;
    var this_sym26218__26221 = this;
    var coll__26222 = this_sym26218__26221;
    return coll__26222.cljs$core$ILookup$_lookup$arity$2(coll__26222, k)
  };
  var G__26242__3 = function(this_sym26219, k, not_found) {
    var this__26220 = this;
    var this_sym26219__26223 = this;
    var coll__26224 = this_sym26219__26223;
    return coll__26224.cljs$core$ILookup$_lookup$arity$3(coll__26224, k, not_found)
  };
  G__26242 = function(this_sym26219, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__26242__2.call(this, this_sym26219, k);
      case 3:
        return G__26242__3.call(this, this_sym26219, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__26242
}();
cljs.core.HashMap.prototype.apply = function(this_sym26198, args26199) {
  var this__26225 = this;
  return this_sym26198.call.apply(this_sym26198, [this_sym26198].concat(args26199.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__26226 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__26227 = this;
  var this__26228 = this;
  return cljs.core.pr_str.call(null, this__26228)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__26229 = this;
  if(this__26229.count > 0) {
    var hashes__26230 = cljs.core.js_keys.call(null, this__26229.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__26197_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__26229.hashobj[p1__26197_SHARP_]))
    }, hashes__26230)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__26231 = this;
  return this__26231.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__26232 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__26233 = this;
  return new cljs.core.HashMap(meta, this__26233.count, this__26233.hashobj, this__26233.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__26234 = this;
  return this__26234.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__26235 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__26235.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__26236 = this;
  var h__26237 = cljs.core.hash.call(null, k);
  var bucket__26238 = this__26236.hashobj[h__26237];
  var i__26239 = cljs.core.truth_(bucket__26238) ? cljs.core.scan_array.call(null, 2, k, bucket__26238) : null;
  if(cljs.core.not.call(null, i__26239)) {
    return coll
  }else {
    var new_hashobj__26240 = goog.object.clone(this__26236.hashobj);
    if(3 > bucket__26238.length) {
      cljs.core.js_delete.call(null, new_hashobj__26240, h__26237)
    }else {
      var new_bucket__26241 = bucket__26238.slice();
      new_bucket__26241.splice(i__26239, 2);
      new_hashobj__26240[h__26237] = new_bucket__26241
    }
    return new cljs.core.HashMap(this__26236.meta, this__26236.count - 1, new_hashobj__26240, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__26243 = ks.length;
  var i__26244 = 0;
  var out__26245 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__26244 < len__26243) {
      var G__26246 = i__26244 + 1;
      var G__26247 = cljs.core.assoc.call(null, out__26245, ks[i__26244], vs[i__26244]);
      i__26244 = G__26246;
      out__26245 = G__26247;
      continue
    }else {
      return out__26245
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__26251 = m.arr;
  var len__26252 = arr__26251.length;
  var i__26253 = 0;
  while(true) {
    if(len__26252 <= i__26253) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__26251[i__26253], k)) {
        return i__26253
      }else {
        if("\ufdd0'else") {
          var G__26254 = i__26253 + 2;
          i__26253 = G__26254;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__26257 = this;
  return new cljs.core.TransientArrayMap({}, this__26257.arr.length, this__26257.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__26258 = this;
  var h__2093__auto____26259 = this__26258.__hash;
  if(!(h__2093__auto____26259 == null)) {
    return h__2093__auto____26259
  }else {
    var h__2093__auto____26260 = cljs.core.hash_imap.call(null, coll);
    this__26258.__hash = h__2093__auto____26260;
    return h__2093__auto____26260
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__26261 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__26262 = this;
  var idx__26263 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__26263 === -1) {
    return not_found
  }else {
    return this__26262.arr[idx__26263 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__26264 = this;
  var idx__26265 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__26265 === -1) {
    if(this__26264.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__26264.meta, this__26264.cnt + 1, function() {
        var G__26266__26267 = this__26264.arr.slice();
        G__26266__26267.push(k);
        G__26266__26267.push(v);
        return G__26266__26267
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__26264.arr[idx__26265 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__26264.meta, this__26264.cnt, function() {
          var G__26268__26269 = this__26264.arr.slice();
          G__26268__26269[idx__26265 + 1] = v;
          return G__26268__26269
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__26270 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__26302 = null;
  var G__26302__2 = function(this_sym26271, k) {
    var this__26273 = this;
    var this_sym26271__26274 = this;
    var coll__26275 = this_sym26271__26274;
    return coll__26275.cljs$core$ILookup$_lookup$arity$2(coll__26275, k)
  };
  var G__26302__3 = function(this_sym26272, k, not_found) {
    var this__26273 = this;
    var this_sym26272__26276 = this;
    var coll__26277 = this_sym26272__26276;
    return coll__26277.cljs$core$ILookup$_lookup$arity$3(coll__26277, k, not_found)
  };
  G__26302 = function(this_sym26272, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__26302__2.call(this, this_sym26272, k);
      case 3:
        return G__26302__3.call(this, this_sym26272, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__26302
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym26255, args26256) {
  var this__26278 = this;
  return this_sym26255.call.apply(this_sym26255, [this_sym26255].concat(args26256.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__26279 = this;
  var len__26280 = this__26279.arr.length;
  var i__26281 = 0;
  var init__26282 = init;
  while(true) {
    if(i__26281 < len__26280) {
      var init__26283 = f.call(null, init__26282, this__26279.arr[i__26281], this__26279.arr[i__26281 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__26283)) {
        return cljs.core.deref.call(null, init__26283)
      }else {
        var G__26303 = i__26281 + 2;
        var G__26304 = init__26283;
        i__26281 = G__26303;
        init__26282 = G__26304;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__26284 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__26285 = this;
  var this__26286 = this;
  return cljs.core.pr_str.call(null, this__26286)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__26287 = this;
  if(this__26287.cnt > 0) {
    var len__26288 = this__26287.arr.length;
    var array_map_seq__26289 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__26288) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__26287.arr[i], this__26287.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__26289.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__26290 = this;
  return this__26290.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__26291 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__26292 = this;
  return new cljs.core.PersistentArrayMap(meta, this__26292.cnt, this__26292.arr, this__26292.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__26293 = this;
  return this__26293.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__26294 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__26294.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__26295 = this;
  var idx__26296 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__26296 >= 0) {
    var len__26297 = this__26295.arr.length;
    var new_len__26298 = len__26297 - 2;
    if(new_len__26298 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__26299 = cljs.core.make_array.call(null, new_len__26298);
      var s__26300 = 0;
      var d__26301 = 0;
      while(true) {
        if(s__26300 >= len__26297) {
          return new cljs.core.PersistentArrayMap(this__26295.meta, this__26295.cnt - 1, new_arr__26299, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__26295.arr[s__26300])) {
            var G__26305 = s__26300 + 2;
            var G__26306 = d__26301;
            s__26300 = G__26305;
            d__26301 = G__26306;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__26299[d__26301] = this__26295.arr[s__26300];
              new_arr__26299[d__26301 + 1] = this__26295.arr[s__26300 + 1];
              var G__26307 = s__26300 + 2;
              var G__26308 = d__26301 + 2;
              s__26300 = G__26307;
              d__26301 = G__26308;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__26309 = cljs.core.count.call(null, ks);
  var i__26310 = 0;
  var out__26311 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__26310 < len__26309) {
      var G__26312 = i__26310 + 1;
      var G__26313 = cljs.core.assoc_BANG_.call(null, out__26311, ks[i__26310], vs[i__26310]);
      i__26310 = G__26312;
      out__26311 = G__26313;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__26311)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__26314 = this;
  if(cljs.core.truth_(this__26314.editable_QMARK_)) {
    var idx__26315 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__26315 >= 0) {
      this__26314.arr[idx__26315] = this__26314.arr[this__26314.len - 2];
      this__26314.arr[idx__26315 + 1] = this__26314.arr[this__26314.len - 1];
      var G__26316__26317 = this__26314.arr;
      G__26316__26317.pop();
      G__26316__26317.pop();
      G__26316__26317;
      this__26314.len = this__26314.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__26318 = this;
  if(cljs.core.truth_(this__26318.editable_QMARK_)) {
    var idx__26319 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__26319 === -1) {
      if(this__26318.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__26318.len = this__26318.len + 2;
        this__26318.arr.push(key);
        this__26318.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__26318.len, this__26318.arr), key, val)
      }
    }else {
      if(val === this__26318.arr[idx__26319 + 1]) {
        return tcoll
      }else {
        this__26318.arr[idx__26319 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__26320 = this;
  if(cljs.core.truth_(this__26320.editable_QMARK_)) {
    if(function() {
      var G__26321__26322 = o;
      if(G__26321__26322) {
        if(function() {
          var or__3824__auto____26323 = G__26321__26322.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____26323) {
            return or__3824__auto____26323
          }else {
            return G__26321__26322.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__26321__26322.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__26321__26322)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__26321__26322)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__26324 = cljs.core.seq.call(null, o);
      var tcoll__26325 = tcoll;
      while(true) {
        var temp__3971__auto____26326 = cljs.core.first.call(null, es__26324);
        if(cljs.core.truth_(temp__3971__auto____26326)) {
          var e__26327 = temp__3971__auto____26326;
          var G__26333 = cljs.core.next.call(null, es__26324);
          var G__26334 = tcoll__26325.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__26325, cljs.core.key.call(null, e__26327), cljs.core.val.call(null, e__26327));
          es__26324 = G__26333;
          tcoll__26325 = G__26334;
          continue
        }else {
          return tcoll__26325
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__26328 = this;
  if(cljs.core.truth_(this__26328.editable_QMARK_)) {
    this__26328.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__26328.len, 2), this__26328.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__26329 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__26330 = this;
  if(cljs.core.truth_(this__26330.editable_QMARK_)) {
    var idx__26331 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__26331 === -1) {
      return not_found
    }else {
      return this__26330.arr[idx__26331 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__26332 = this;
  if(cljs.core.truth_(this__26332.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__26332.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__26337 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__26338 = 0;
  while(true) {
    if(i__26338 < len) {
      var G__26339 = cljs.core.assoc_BANG_.call(null, out__26337, arr[i__26338], arr[i__26338 + 1]);
      var G__26340 = i__26338 + 2;
      out__26337 = G__26339;
      i__26338 = G__26340;
      continue
    }else {
      return out__26337
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2211__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__26345__26346 = arr.slice();
    G__26345__26346[i] = a;
    return G__26345__26346
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__26347__26348 = arr.slice();
    G__26347__26348[i] = a;
    G__26347__26348[j] = b;
    return G__26347__26348
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__26350 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__26350, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__26350, 2 * i, new_arr__26350.length - 2 * i);
  return new_arr__26350
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__26353 = inode.ensure_editable(edit);
    editable__26353.arr[i] = a;
    return editable__26353
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__26354 = inode.ensure_editable(edit);
    editable__26354.arr[i] = a;
    editable__26354.arr[j] = b;
    return editable__26354
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__26361 = arr.length;
  var i__26362 = 0;
  var init__26363 = init;
  while(true) {
    if(i__26362 < len__26361) {
      var init__26366 = function() {
        var k__26364 = arr[i__26362];
        if(!(k__26364 == null)) {
          return f.call(null, init__26363, k__26364, arr[i__26362 + 1])
        }else {
          var node__26365 = arr[i__26362 + 1];
          if(!(node__26365 == null)) {
            return node__26365.kv_reduce(f, init__26363)
          }else {
            return init__26363
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__26366)) {
        return cljs.core.deref.call(null, init__26366)
      }else {
        var G__26367 = i__26362 + 2;
        var G__26368 = init__26366;
        i__26362 = G__26367;
        init__26363 = G__26368;
        continue
      }
    }else {
      return init__26363
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__26369 = this;
  var inode__26370 = this;
  if(this__26369.bitmap === bit) {
    return null
  }else {
    var editable__26371 = inode__26370.ensure_editable(e);
    var earr__26372 = editable__26371.arr;
    var len__26373 = earr__26372.length;
    editable__26371.bitmap = bit ^ editable__26371.bitmap;
    cljs.core.array_copy.call(null, earr__26372, 2 * (i + 1), earr__26372, 2 * i, len__26373 - 2 * (i + 1));
    earr__26372[len__26373 - 2] = null;
    earr__26372[len__26373 - 1] = null;
    return editable__26371
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__26374 = this;
  var inode__26375 = this;
  var bit__26376 = 1 << (hash >>> shift & 31);
  var idx__26377 = cljs.core.bitmap_indexed_node_index.call(null, this__26374.bitmap, bit__26376);
  if((this__26374.bitmap & bit__26376) === 0) {
    var n__26378 = cljs.core.bit_count.call(null, this__26374.bitmap);
    if(2 * n__26378 < this__26374.arr.length) {
      var editable__26379 = inode__26375.ensure_editable(edit);
      var earr__26380 = editable__26379.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__26380, 2 * idx__26377, earr__26380, 2 * (idx__26377 + 1), 2 * (n__26378 - idx__26377));
      earr__26380[2 * idx__26377] = key;
      earr__26380[2 * idx__26377 + 1] = val;
      editable__26379.bitmap = editable__26379.bitmap | bit__26376;
      return editable__26379
    }else {
      if(n__26378 >= 16) {
        var nodes__26381 = cljs.core.make_array.call(null, 32);
        var jdx__26382 = hash >>> shift & 31;
        nodes__26381[jdx__26382] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__26383 = 0;
        var j__26384 = 0;
        while(true) {
          if(i__26383 < 32) {
            if((this__26374.bitmap >>> i__26383 & 1) === 0) {
              var G__26437 = i__26383 + 1;
              var G__26438 = j__26384;
              i__26383 = G__26437;
              j__26384 = G__26438;
              continue
            }else {
              nodes__26381[i__26383] = !(this__26374.arr[j__26384] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__26374.arr[j__26384]), this__26374.arr[j__26384], this__26374.arr[j__26384 + 1], added_leaf_QMARK_) : this__26374.arr[j__26384 + 1];
              var G__26439 = i__26383 + 1;
              var G__26440 = j__26384 + 2;
              i__26383 = G__26439;
              j__26384 = G__26440;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__26378 + 1, nodes__26381)
      }else {
        if("\ufdd0'else") {
          var new_arr__26385 = cljs.core.make_array.call(null, 2 * (n__26378 + 4));
          cljs.core.array_copy.call(null, this__26374.arr, 0, new_arr__26385, 0, 2 * idx__26377);
          new_arr__26385[2 * idx__26377] = key;
          new_arr__26385[2 * idx__26377 + 1] = val;
          cljs.core.array_copy.call(null, this__26374.arr, 2 * idx__26377, new_arr__26385, 2 * (idx__26377 + 1), 2 * (n__26378 - idx__26377));
          added_leaf_QMARK_.val = true;
          var editable__26386 = inode__26375.ensure_editable(edit);
          editable__26386.arr = new_arr__26385;
          editable__26386.bitmap = editable__26386.bitmap | bit__26376;
          return editable__26386
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__26387 = this__26374.arr[2 * idx__26377];
    var val_or_node__26388 = this__26374.arr[2 * idx__26377 + 1];
    if(key_or_nil__26387 == null) {
      var n__26389 = val_or_node__26388.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__26389 === val_or_node__26388) {
        return inode__26375
      }else {
        return cljs.core.edit_and_set.call(null, inode__26375, edit, 2 * idx__26377 + 1, n__26389)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__26387)) {
        if(val === val_or_node__26388) {
          return inode__26375
        }else {
          return cljs.core.edit_and_set.call(null, inode__26375, edit, 2 * idx__26377 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__26375, edit, 2 * idx__26377, null, 2 * idx__26377 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__26387, val_or_node__26388, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__26390 = this;
  var inode__26391 = this;
  return cljs.core.create_inode_seq.call(null, this__26390.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__26392 = this;
  var inode__26393 = this;
  var bit__26394 = 1 << (hash >>> shift & 31);
  if((this__26392.bitmap & bit__26394) === 0) {
    return inode__26393
  }else {
    var idx__26395 = cljs.core.bitmap_indexed_node_index.call(null, this__26392.bitmap, bit__26394);
    var key_or_nil__26396 = this__26392.arr[2 * idx__26395];
    var val_or_node__26397 = this__26392.arr[2 * idx__26395 + 1];
    if(key_or_nil__26396 == null) {
      var n__26398 = val_or_node__26397.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__26398 === val_or_node__26397) {
        return inode__26393
      }else {
        if(!(n__26398 == null)) {
          return cljs.core.edit_and_set.call(null, inode__26393, edit, 2 * idx__26395 + 1, n__26398)
        }else {
          if(this__26392.bitmap === bit__26394) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__26393.edit_and_remove_pair(edit, bit__26394, idx__26395)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__26396)) {
        removed_leaf_QMARK_[0] = true;
        return inode__26393.edit_and_remove_pair(edit, bit__26394, idx__26395)
      }else {
        if("\ufdd0'else") {
          return inode__26393
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__26399 = this;
  var inode__26400 = this;
  if(e === this__26399.edit) {
    return inode__26400
  }else {
    var n__26401 = cljs.core.bit_count.call(null, this__26399.bitmap);
    var new_arr__26402 = cljs.core.make_array.call(null, n__26401 < 0 ? 4 : 2 * (n__26401 + 1));
    cljs.core.array_copy.call(null, this__26399.arr, 0, new_arr__26402, 0, 2 * n__26401);
    return new cljs.core.BitmapIndexedNode(e, this__26399.bitmap, new_arr__26402)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__26403 = this;
  var inode__26404 = this;
  return cljs.core.inode_kv_reduce.call(null, this__26403.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__26405 = this;
  var inode__26406 = this;
  var bit__26407 = 1 << (hash >>> shift & 31);
  if((this__26405.bitmap & bit__26407) === 0) {
    return not_found
  }else {
    var idx__26408 = cljs.core.bitmap_indexed_node_index.call(null, this__26405.bitmap, bit__26407);
    var key_or_nil__26409 = this__26405.arr[2 * idx__26408];
    var val_or_node__26410 = this__26405.arr[2 * idx__26408 + 1];
    if(key_or_nil__26409 == null) {
      return val_or_node__26410.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__26409)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__26409, val_or_node__26410], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__26411 = this;
  var inode__26412 = this;
  var bit__26413 = 1 << (hash >>> shift & 31);
  if((this__26411.bitmap & bit__26413) === 0) {
    return inode__26412
  }else {
    var idx__26414 = cljs.core.bitmap_indexed_node_index.call(null, this__26411.bitmap, bit__26413);
    var key_or_nil__26415 = this__26411.arr[2 * idx__26414];
    var val_or_node__26416 = this__26411.arr[2 * idx__26414 + 1];
    if(key_or_nil__26415 == null) {
      var n__26417 = val_or_node__26416.inode_without(shift + 5, hash, key);
      if(n__26417 === val_or_node__26416) {
        return inode__26412
      }else {
        if(!(n__26417 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__26411.bitmap, cljs.core.clone_and_set.call(null, this__26411.arr, 2 * idx__26414 + 1, n__26417))
        }else {
          if(this__26411.bitmap === bit__26413) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__26411.bitmap ^ bit__26413, cljs.core.remove_pair.call(null, this__26411.arr, idx__26414))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__26415)) {
        return new cljs.core.BitmapIndexedNode(null, this__26411.bitmap ^ bit__26413, cljs.core.remove_pair.call(null, this__26411.arr, idx__26414))
      }else {
        if("\ufdd0'else") {
          return inode__26412
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__26418 = this;
  var inode__26419 = this;
  var bit__26420 = 1 << (hash >>> shift & 31);
  var idx__26421 = cljs.core.bitmap_indexed_node_index.call(null, this__26418.bitmap, bit__26420);
  if((this__26418.bitmap & bit__26420) === 0) {
    var n__26422 = cljs.core.bit_count.call(null, this__26418.bitmap);
    if(n__26422 >= 16) {
      var nodes__26423 = cljs.core.make_array.call(null, 32);
      var jdx__26424 = hash >>> shift & 31;
      nodes__26423[jdx__26424] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__26425 = 0;
      var j__26426 = 0;
      while(true) {
        if(i__26425 < 32) {
          if((this__26418.bitmap >>> i__26425 & 1) === 0) {
            var G__26441 = i__26425 + 1;
            var G__26442 = j__26426;
            i__26425 = G__26441;
            j__26426 = G__26442;
            continue
          }else {
            nodes__26423[i__26425] = !(this__26418.arr[j__26426] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__26418.arr[j__26426]), this__26418.arr[j__26426], this__26418.arr[j__26426 + 1], added_leaf_QMARK_) : this__26418.arr[j__26426 + 1];
            var G__26443 = i__26425 + 1;
            var G__26444 = j__26426 + 2;
            i__26425 = G__26443;
            j__26426 = G__26444;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__26422 + 1, nodes__26423)
    }else {
      var new_arr__26427 = cljs.core.make_array.call(null, 2 * (n__26422 + 1));
      cljs.core.array_copy.call(null, this__26418.arr, 0, new_arr__26427, 0, 2 * idx__26421);
      new_arr__26427[2 * idx__26421] = key;
      new_arr__26427[2 * idx__26421 + 1] = val;
      cljs.core.array_copy.call(null, this__26418.arr, 2 * idx__26421, new_arr__26427, 2 * (idx__26421 + 1), 2 * (n__26422 - idx__26421));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__26418.bitmap | bit__26420, new_arr__26427)
    }
  }else {
    var key_or_nil__26428 = this__26418.arr[2 * idx__26421];
    var val_or_node__26429 = this__26418.arr[2 * idx__26421 + 1];
    if(key_or_nil__26428 == null) {
      var n__26430 = val_or_node__26429.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__26430 === val_or_node__26429) {
        return inode__26419
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__26418.bitmap, cljs.core.clone_and_set.call(null, this__26418.arr, 2 * idx__26421 + 1, n__26430))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__26428)) {
        if(val === val_or_node__26429) {
          return inode__26419
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__26418.bitmap, cljs.core.clone_and_set.call(null, this__26418.arr, 2 * idx__26421 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__26418.bitmap, cljs.core.clone_and_set.call(null, this__26418.arr, 2 * idx__26421, null, 2 * idx__26421 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__26428, val_or_node__26429, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__26431 = this;
  var inode__26432 = this;
  var bit__26433 = 1 << (hash >>> shift & 31);
  if((this__26431.bitmap & bit__26433) === 0) {
    return not_found
  }else {
    var idx__26434 = cljs.core.bitmap_indexed_node_index.call(null, this__26431.bitmap, bit__26433);
    var key_or_nil__26435 = this__26431.arr[2 * idx__26434];
    var val_or_node__26436 = this__26431.arr[2 * idx__26434 + 1];
    if(key_or_nil__26435 == null) {
      return val_or_node__26436.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__26435)) {
        return val_or_node__26436
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__26452 = array_node.arr;
  var len__26453 = 2 * (array_node.cnt - 1);
  var new_arr__26454 = cljs.core.make_array.call(null, len__26453);
  var i__26455 = 0;
  var j__26456 = 1;
  var bitmap__26457 = 0;
  while(true) {
    if(i__26455 < len__26453) {
      if(function() {
        var and__3822__auto____26458 = !(i__26455 === idx);
        if(and__3822__auto____26458) {
          return!(arr__26452[i__26455] == null)
        }else {
          return and__3822__auto____26458
        }
      }()) {
        new_arr__26454[j__26456] = arr__26452[i__26455];
        var G__26459 = i__26455 + 1;
        var G__26460 = j__26456 + 2;
        var G__26461 = bitmap__26457 | 1 << i__26455;
        i__26455 = G__26459;
        j__26456 = G__26460;
        bitmap__26457 = G__26461;
        continue
      }else {
        var G__26462 = i__26455 + 1;
        var G__26463 = j__26456;
        var G__26464 = bitmap__26457;
        i__26455 = G__26462;
        j__26456 = G__26463;
        bitmap__26457 = G__26464;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__26457, new_arr__26454)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__26465 = this;
  var inode__26466 = this;
  var idx__26467 = hash >>> shift & 31;
  var node__26468 = this__26465.arr[idx__26467];
  if(node__26468 == null) {
    var editable__26469 = cljs.core.edit_and_set.call(null, inode__26466, edit, idx__26467, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__26469.cnt = editable__26469.cnt + 1;
    return editable__26469
  }else {
    var n__26470 = node__26468.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__26470 === node__26468) {
      return inode__26466
    }else {
      return cljs.core.edit_and_set.call(null, inode__26466, edit, idx__26467, n__26470)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__26471 = this;
  var inode__26472 = this;
  return cljs.core.create_array_node_seq.call(null, this__26471.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__26473 = this;
  var inode__26474 = this;
  var idx__26475 = hash >>> shift & 31;
  var node__26476 = this__26473.arr[idx__26475];
  if(node__26476 == null) {
    return inode__26474
  }else {
    var n__26477 = node__26476.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__26477 === node__26476) {
      return inode__26474
    }else {
      if(n__26477 == null) {
        if(this__26473.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__26474, edit, idx__26475)
        }else {
          var editable__26478 = cljs.core.edit_and_set.call(null, inode__26474, edit, idx__26475, n__26477);
          editable__26478.cnt = editable__26478.cnt - 1;
          return editable__26478
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__26474, edit, idx__26475, n__26477)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__26479 = this;
  var inode__26480 = this;
  if(e === this__26479.edit) {
    return inode__26480
  }else {
    return new cljs.core.ArrayNode(e, this__26479.cnt, this__26479.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__26481 = this;
  var inode__26482 = this;
  var len__26483 = this__26481.arr.length;
  var i__26484 = 0;
  var init__26485 = init;
  while(true) {
    if(i__26484 < len__26483) {
      var node__26486 = this__26481.arr[i__26484];
      if(!(node__26486 == null)) {
        var init__26487 = node__26486.kv_reduce(f, init__26485);
        if(cljs.core.reduced_QMARK_.call(null, init__26487)) {
          return cljs.core.deref.call(null, init__26487)
        }else {
          var G__26506 = i__26484 + 1;
          var G__26507 = init__26487;
          i__26484 = G__26506;
          init__26485 = G__26507;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__26485
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__26488 = this;
  var inode__26489 = this;
  var idx__26490 = hash >>> shift & 31;
  var node__26491 = this__26488.arr[idx__26490];
  if(!(node__26491 == null)) {
    return node__26491.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__26492 = this;
  var inode__26493 = this;
  var idx__26494 = hash >>> shift & 31;
  var node__26495 = this__26492.arr[idx__26494];
  if(!(node__26495 == null)) {
    var n__26496 = node__26495.inode_without(shift + 5, hash, key);
    if(n__26496 === node__26495) {
      return inode__26493
    }else {
      if(n__26496 == null) {
        if(this__26492.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__26493, null, idx__26494)
        }else {
          return new cljs.core.ArrayNode(null, this__26492.cnt - 1, cljs.core.clone_and_set.call(null, this__26492.arr, idx__26494, n__26496))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__26492.cnt, cljs.core.clone_and_set.call(null, this__26492.arr, idx__26494, n__26496))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__26493
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__26497 = this;
  var inode__26498 = this;
  var idx__26499 = hash >>> shift & 31;
  var node__26500 = this__26497.arr[idx__26499];
  if(node__26500 == null) {
    return new cljs.core.ArrayNode(null, this__26497.cnt + 1, cljs.core.clone_and_set.call(null, this__26497.arr, idx__26499, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__26501 = node__26500.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__26501 === node__26500) {
      return inode__26498
    }else {
      return new cljs.core.ArrayNode(null, this__26497.cnt, cljs.core.clone_and_set.call(null, this__26497.arr, idx__26499, n__26501))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__26502 = this;
  var inode__26503 = this;
  var idx__26504 = hash >>> shift & 31;
  var node__26505 = this__26502.arr[idx__26504];
  if(!(node__26505 == null)) {
    return node__26505.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__26510 = 2 * cnt;
  var i__26511 = 0;
  while(true) {
    if(i__26511 < lim__26510) {
      if(cljs.core.key_test.call(null, key, arr[i__26511])) {
        return i__26511
      }else {
        var G__26512 = i__26511 + 2;
        i__26511 = G__26512;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__26513 = this;
  var inode__26514 = this;
  if(hash === this__26513.collision_hash) {
    var idx__26515 = cljs.core.hash_collision_node_find_index.call(null, this__26513.arr, this__26513.cnt, key);
    if(idx__26515 === -1) {
      if(this__26513.arr.length > 2 * this__26513.cnt) {
        var editable__26516 = cljs.core.edit_and_set.call(null, inode__26514, edit, 2 * this__26513.cnt, key, 2 * this__26513.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__26516.cnt = editable__26516.cnt + 1;
        return editable__26516
      }else {
        var len__26517 = this__26513.arr.length;
        var new_arr__26518 = cljs.core.make_array.call(null, len__26517 + 2);
        cljs.core.array_copy.call(null, this__26513.arr, 0, new_arr__26518, 0, len__26517);
        new_arr__26518[len__26517] = key;
        new_arr__26518[len__26517 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__26514.ensure_editable_array(edit, this__26513.cnt + 1, new_arr__26518)
      }
    }else {
      if(this__26513.arr[idx__26515 + 1] === val) {
        return inode__26514
      }else {
        return cljs.core.edit_and_set.call(null, inode__26514, edit, idx__26515 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__26513.collision_hash >>> shift & 31), [null, inode__26514, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__26519 = this;
  var inode__26520 = this;
  return cljs.core.create_inode_seq.call(null, this__26519.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__26521 = this;
  var inode__26522 = this;
  var idx__26523 = cljs.core.hash_collision_node_find_index.call(null, this__26521.arr, this__26521.cnt, key);
  if(idx__26523 === -1) {
    return inode__26522
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__26521.cnt === 1) {
      return null
    }else {
      var editable__26524 = inode__26522.ensure_editable(edit);
      var earr__26525 = editable__26524.arr;
      earr__26525[idx__26523] = earr__26525[2 * this__26521.cnt - 2];
      earr__26525[idx__26523 + 1] = earr__26525[2 * this__26521.cnt - 1];
      earr__26525[2 * this__26521.cnt - 1] = null;
      earr__26525[2 * this__26521.cnt - 2] = null;
      editable__26524.cnt = editable__26524.cnt - 1;
      return editable__26524
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__26526 = this;
  var inode__26527 = this;
  if(e === this__26526.edit) {
    return inode__26527
  }else {
    var new_arr__26528 = cljs.core.make_array.call(null, 2 * (this__26526.cnt + 1));
    cljs.core.array_copy.call(null, this__26526.arr, 0, new_arr__26528, 0, 2 * this__26526.cnt);
    return new cljs.core.HashCollisionNode(e, this__26526.collision_hash, this__26526.cnt, new_arr__26528)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__26529 = this;
  var inode__26530 = this;
  return cljs.core.inode_kv_reduce.call(null, this__26529.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__26531 = this;
  var inode__26532 = this;
  var idx__26533 = cljs.core.hash_collision_node_find_index.call(null, this__26531.arr, this__26531.cnt, key);
  if(idx__26533 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__26531.arr[idx__26533])) {
      return cljs.core.PersistentVector.fromArray([this__26531.arr[idx__26533], this__26531.arr[idx__26533 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__26534 = this;
  var inode__26535 = this;
  var idx__26536 = cljs.core.hash_collision_node_find_index.call(null, this__26534.arr, this__26534.cnt, key);
  if(idx__26536 === -1) {
    return inode__26535
  }else {
    if(this__26534.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__26534.collision_hash, this__26534.cnt - 1, cljs.core.remove_pair.call(null, this__26534.arr, cljs.core.quot.call(null, idx__26536, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__26537 = this;
  var inode__26538 = this;
  if(hash === this__26537.collision_hash) {
    var idx__26539 = cljs.core.hash_collision_node_find_index.call(null, this__26537.arr, this__26537.cnt, key);
    if(idx__26539 === -1) {
      var len__26540 = this__26537.arr.length;
      var new_arr__26541 = cljs.core.make_array.call(null, len__26540 + 2);
      cljs.core.array_copy.call(null, this__26537.arr, 0, new_arr__26541, 0, len__26540);
      new_arr__26541[len__26540] = key;
      new_arr__26541[len__26540 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__26537.collision_hash, this__26537.cnt + 1, new_arr__26541)
    }else {
      if(cljs.core._EQ_.call(null, this__26537.arr[idx__26539], val)) {
        return inode__26538
      }else {
        return new cljs.core.HashCollisionNode(null, this__26537.collision_hash, this__26537.cnt, cljs.core.clone_and_set.call(null, this__26537.arr, idx__26539 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__26537.collision_hash >>> shift & 31), [null, inode__26538])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__26542 = this;
  var inode__26543 = this;
  var idx__26544 = cljs.core.hash_collision_node_find_index.call(null, this__26542.arr, this__26542.cnt, key);
  if(idx__26544 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__26542.arr[idx__26544])) {
      return this__26542.arr[idx__26544 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__26545 = this;
  var inode__26546 = this;
  if(e === this__26545.edit) {
    this__26545.arr = array;
    this__26545.cnt = count;
    return inode__26546
  }else {
    return new cljs.core.HashCollisionNode(this__26545.edit, this__26545.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__26551 = cljs.core.hash.call(null, key1);
    if(key1hash__26551 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__26551, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___26552 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__26551, key1, val1, added_leaf_QMARK___26552).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___26552)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__26553 = cljs.core.hash.call(null, key1);
    if(key1hash__26553 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__26553, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___26554 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__26553, key1, val1, added_leaf_QMARK___26554).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___26554)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__26555 = this;
  var h__2093__auto____26556 = this__26555.__hash;
  if(!(h__2093__auto____26556 == null)) {
    return h__2093__auto____26556
  }else {
    var h__2093__auto____26557 = cljs.core.hash_coll.call(null, coll);
    this__26555.__hash = h__2093__auto____26557;
    return h__2093__auto____26557
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__26558 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__26559 = this;
  var this__26560 = this;
  return cljs.core.pr_str.call(null, this__26560)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__26561 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__26562 = this;
  if(this__26562.s == null) {
    return cljs.core.PersistentVector.fromArray([this__26562.nodes[this__26562.i], this__26562.nodes[this__26562.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__26562.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__26563 = this;
  if(this__26563.s == null) {
    return cljs.core.create_inode_seq.call(null, this__26563.nodes, this__26563.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__26563.nodes, this__26563.i, cljs.core.next.call(null, this__26563.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__26564 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__26565 = this;
  return new cljs.core.NodeSeq(meta, this__26565.nodes, this__26565.i, this__26565.s, this__26565.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__26566 = this;
  return this__26566.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__26567 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__26567.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__26574 = nodes.length;
      var j__26575 = i;
      while(true) {
        if(j__26575 < len__26574) {
          if(!(nodes[j__26575] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__26575, null, null)
          }else {
            var temp__3971__auto____26576 = nodes[j__26575 + 1];
            if(cljs.core.truth_(temp__3971__auto____26576)) {
              var node__26577 = temp__3971__auto____26576;
              var temp__3971__auto____26578 = node__26577.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____26578)) {
                var node_seq__26579 = temp__3971__auto____26578;
                return new cljs.core.NodeSeq(null, nodes, j__26575 + 2, node_seq__26579, null)
              }else {
                var G__26580 = j__26575 + 2;
                j__26575 = G__26580;
                continue
              }
            }else {
              var G__26581 = j__26575 + 2;
              j__26575 = G__26581;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__26582 = this;
  var h__2093__auto____26583 = this__26582.__hash;
  if(!(h__2093__auto____26583 == null)) {
    return h__2093__auto____26583
  }else {
    var h__2093__auto____26584 = cljs.core.hash_coll.call(null, coll);
    this__26582.__hash = h__2093__auto____26584;
    return h__2093__auto____26584
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__26585 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__26586 = this;
  var this__26587 = this;
  return cljs.core.pr_str.call(null, this__26587)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__26588 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__26589 = this;
  return cljs.core.first.call(null, this__26589.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__26590 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__26590.nodes, this__26590.i, cljs.core.next.call(null, this__26590.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__26591 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__26592 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__26592.nodes, this__26592.i, this__26592.s, this__26592.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__26593 = this;
  return this__26593.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__26594 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__26594.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__26601 = nodes.length;
      var j__26602 = i;
      while(true) {
        if(j__26602 < len__26601) {
          var temp__3971__auto____26603 = nodes[j__26602];
          if(cljs.core.truth_(temp__3971__auto____26603)) {
            var nj__26604 = temp__3971__auto____26603;
            var temp__3971__auto____26605 = nj__26604.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____26605)) {
              var ns__26606 = temp__3971__auto____26605;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__26602 + 1, ns__26606, null)
            }else {
              var G__26607 = j__26602 + 1;
              j__26602 = G__26607;
              continue
            }
          }else {
            var G__26608 = j__26602 + 1;
            j__26602 = G__26608;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__26611 = this;
  return new cljs.core.TransientHashMap({}, this__26611.root, this__26611.cnt, this__26611.has_nil_QMARK_, this__26611.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__26612 = this;
  var h__2093__auto____26613 = this__26612.__hash;
  if(!(h__2093__auto____26613 == null)) {
    return h__2093__auto____26613
  }else {
    var h__2093__auto____26614 = cljs.core.hash_imap.call(null, coll);
    this__26612.__hash = h__2093__auto____26614;
    return h__2093__auto____26614
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__26615 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__26616 = this;
  if(k == null) {
    if(this__26616.has_nil_QMARK_) {
      return this__26616.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__26616.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__26616.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__26617 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____26618 = this__26617.has_nil_QMARK_;
      if(and__3822__auto____26618) {
        return v === this__26617.nil_val
      }else {
        return and__3822__auto____26618
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__26617.meta, this__26617.has_nil_QMARK_ ? this__26617.cnt : this__26617.cnt + 1, this__26617.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___26619 = new cljs.core.Box(false);
    var new_root__26620 = (this__26617.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__26617.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___26619);
    if(new_root__26620 === this__26617.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__26617.meta, added_leaf_QMARK___26619.val ? this__26617.cnt + 1 : this__26617.cnt, new_root__26620, this__26617.has_nil_QMARK_, this__26617.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__26621 = this;
  if(k == null) {
    return this__26621.has_nil_QMARK_
  }else {
    if(this__26621.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__26621.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__26644 = null;
  var G__26644__2 = function(this_sym26622, k) {
    var this__26624 = this;
    var this_sym26622__26625 = this;
    var coll__26626 = this_sym26622__26625;
    return coll__26626.cljs$core$ILookup$_lookup$arity$2(coll__26626, k)
  };
  var G__26644__3 = function(this_sym26623, k, not_found) {
    var this__26624 = this;
    var this_sym26623__26627 = this;
    var coll__26628 = this_sym26623__26627;
    return coll__26628.cljs$core$ILookup$_lookup$arity$3(coll__26628, k, not_found)
  };
  G__26644 = function(this_sym26623, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__26644__2.call(this, this_sym26623, k);
      case 3:
        return G__26644__3.call(this, this_sym26623, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__26644
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym26609, args26610) {
  var this__26629 = this;
  return this_sym26609.call.apply(this_sym26609, [this_sym26609].concat(args26610.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__26630 = this;
  var init__26631 = this__26630.has_nil_QMARK_ ? f.call(null, init, null, this__26630.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__26631)) {
    return cljs.core.deref.call(null, init__26631)
  }else {
    if(!(this__26630.root == null)) {
      return this__26630.root.kv_reduce(f, init__26631)
    }else {
      if("\ufdd0'else") {
        return init__26631
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__26632 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__26633 = this;
  var this__26634 = this;
  return cljs.core.pr_str.call(null, this__26634)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__26635 = this;
  if(this__26635.cnt > 0) {
    var s__26636 = !(this__26635.root == null) ? this__26635.root.inode_seq() : null;
    if(this__26635.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__26635.nil_val], true), s__26636)
    }else {
      return s__26636
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__26637 = this;
  return this__26637.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__26638 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__26639 = this;
  return new cljs.core.PersistentHashMap(meta, this__26639.cnt, this__26639.root, this__26639.has_nil_QMARK_, this__26639.nil_val, this__26639.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__26640 = this;
  return this__26640.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__26641 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__26641.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__26642 = this;
  if(k == null) {
    if(this__26642.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__26642.meta, this__26642.cnt - 1, this__26642.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__26642.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__26643 = this__26642.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__26643 === this__26642.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__26642.meta, this__26642.cnt - 1, new_root__26643, this__26642.has_nil_QMARK_, this__26642.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__26645 = ks.length;
  var i__26646 = 0;
  var out__26647 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__26646 < len__26645) {
      var G__26648 = i__26646 + 1;
      var G__26649 = cljs.core.assoc_BANG_.call(null, out__26647, ks[i__26646], vs[i__26646]);
      i__26646 = G__26648;
      out__26647 = G__26649;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__26647)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__26650 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__26651 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__26652 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__26653 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__26654 = this;
  if(k == null) {
    if(this__26654.has_nil_QMARK_) {
      return this__26654.nil_val
    }else {
      return null
    }
  }else {
    if(this__26654.root == null) {
      return null
    }else {
      return this__26654.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__26655 = this;
  if(k == null) {
    if(this__26655.has_nil_QMARK_) {
      return this__26655.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__26655.root == null) {
      return not_found
    }else {
      return this__26655.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__26656 = this;
  if(this__26656.edit) {
    return this__26656.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__26657 = this;
  var tcoll__26658 = this;
  if(this__26657.edit) {
    if(function() {
      var G__26659__26660 = o;
      if(G__26659__26660) {
        if(function() {
          var or__3824__auto____26661 = G__26659__26660.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____26661) {
            return or__3824__auto____26661
          }else {
            return G__26659__26660.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__26659__26660.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__26659__26660)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__26659__26660)
      }
    }()) {
      return tcoll__26658.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__26662 = cljs.core.seq.call(null, o);
      var tcoll__26663 = tcoll__26658;
      while(true) {
        var temp__3971__auto____26664 = cljs.core.first.call(null, es__26662);
        if(cljs.core.truth_(temp__3971__auto____26664)) {
          var e__26665 = temp__3971__auto____26664;
          var G__26676 = cljs.core.next.call(null, es__26662);
          var G__26677 = tcoll__26663.assoc_BANG_(cljs.core.key.call(null, e__26665), cljs.core.val.call(null, e__26665));
          es__26662 = G__26676;
          tcoll__26663 = G__26677;
          continue
        }else {
          return tcoll__26663
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__26666 = this;
  var tcoll__26667 = this;
  if(this__26666.edit) {
    if(k == null) {
      if(this__26666.nil_val === v) {
      }else {
        this__26666.nil_val = v
      }
      if(this__26666.has_nil_QMARK_) {
      }else {
        this__26666.count = this__26666.count + 1;
        this__26666.has_nil_QMARK_ = true
      }
      return tcoll__26667
    }else {
      var added_leaf_QMARK___26668 = new cljs.core.Box(false);
      var node__26669 = (this__26666.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__26666.root).inode_assoc_BANG_(this__26666.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___26668);
      if(node__26669 === this__26666.root) {
      }else {
        this__26666.root = node__26669
      }
      if(added_leaf_QMARK___26668.val) {
        this__26666.count = this__26666.count + 1
      }else {
      }
      return tcoll__26667
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__26670 = this;
  var tcoll__26671 = this;
  if(this__26670.edit) {
    if(k == null) {
      if(this__26670.has_nil_QMARK_) {
        this__26670.has_nil_QMARK_ = false;
        this__26670.nil_val = null;
        this__26670.count = this__26670.count - 1;
        return tcoll__26671
      }else {
        return tcoll__26671
      }
    }else {
      if(this__26670.root == null) {
        return tcoll__26671
      }else {
        var removed_leaf_QMARK___26672 = new cljs.core.Box(false);
        var node__26673 = this__26670.root.inode_without_BANG_(this__26670.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___26672);
        if(node__26673 === this__26670.root) {
        }else {
          this__26670.root = node__26673
        }
        if(cljs.core.truth_(removed_leaf_QMARK___26672[0])) {
          this__26670.count = this__26670.count - 1
        }else {
        }
        return tcoll__26671
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__26674 = this;
  var tcoll__26675 = this;
  if(this__26674.edit) {
    this__26674.edit = null;
    return new cljs.core.PersistentHashMap(null, this__26674.count, this__26674.root, this__26674.has_nil_QMARK_, this__26674.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__26680 = node;
  var stack__26681 = stack;
  while(true) {
    if(!(t__26680 == null)) {
      var G__26682 = ascending_QMARK_ ? t__26680.left : t__26680.right;
      var G__26683 = cljs.core.conj.call(null, stack__26681, t__26680);
      t__26680 = G__26682;
      stack__26681 = G__26683;
      continue
    }else {
      return stack__26681
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__26684 = this;
  var h__2093__auto____26685 = this__26684.__hash;
  if(!(h__2093__auto____26685 == null)) {
    return h__2093__auto____26685
  }else {
    var h__2093__auto____26686 = cljs.core.hash_coll.call(null, coll);
    this__26684.__hash = h__2093__auto____26686;
    return h__2093__auto____26686
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__26687 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__26688 = this;
  var this__26689 = this;
  return cljs.core.pr_str.call(null, this__26689)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__26690 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__26691 = this;
  if(this__26691.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__26691.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__26692 = this;
  return cljs.core.peek.call(null, this__26692.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__26693 = this;
  var t__26694 = cljs.core.first.call(null, this__26693.stack);
  var next_stack__26695 = cljs.core.tree_map_seq_push.call(null, this__26693.ascending_QMARK_ ? t__26694.right : t__26694.left, cljs.core.next.call(null, this__26693.stack), this__26693.ascending_QMARK_);
  if(!(next_stack__26695 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__26695, this__26693.ascending_QMARK_, this__26693.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__26696 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__26697 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__26697.stack, this__26697.ascending_QMARK_, this__26697.cnt, this__26697.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__26698 = this;
  return this__26698.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____26700 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____26700) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____26700
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____26702 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____26702) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____26702
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__26706 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__26706)) {
    return cljs.core.deref.call(null, init__26706)
  }else {
    var init__26707 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__26706) : init__26706;
    if(cljs.core.reduced_QMARK_.call(null, init__26707)) {
      return cljs.core.deref.call(null, init__26707)
    }else {
      var init__26708 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__26707) : init__26707;
      if(cljs.core.reduced_QMARK_.call(null, init__26708)) {
        return cljs.core.deref.call(null, init__26708)
      }else {
        return init__26708
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__26711 = this;
  var h__2093__auto____26712 = this__26711.__hash;
  if(!(h__2093__auto____26712 == null)) {
    return h__2093__auto____26712
  }else {
    var h__2093__auto____26713 = cljs.core.hash_coll.call(null, coll);
    this__26711.__hash = h__2093__auto____26713;
    return h__2093__auto____26713
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__26714 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__26715 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__26716 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__26716.key, this__26716.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__26764 = null;
  var G__26764__2 = function(this_sym26717, k) {
    var this__26719 = this;
    var this_sym26717__26720 = this;
    var node__26721 = this_sym26717__26720;
    return node__26721.cljs$core$ILookup$_lookup$arity$2(node__26721, k)
  };
  var G__26764__3 = function(this_sym26718, k, not_found) {
    var this__26719 = this;
    var this_sym26718__26722 = this;
    var node__26723 = this_sym26718__26722;
    return node__26723.cljs$core$ILookup$_lookup$arity$3(node__26723, k, not_found)
  };
  G__26764 = function(this_sym26718, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__26764__2.call(this, this_sym26718, k);
      case 3:
        return G__26764__3.call(this, this_sym26718, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__26764
}();
cljs.core.BlackNode.prototype.apply = function(this_sym26709, args26710) {
  var this__26724 = this;
  return this_sym26709.call.apply(this_sym26709, [this_sym26709].concat(args26710.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__26725 = this;
  return cljs.core.PersistentVector.fromArray([this__26725.key, this__26725.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__26726 = this;
  return this__26726.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__26727 = this;
  return this__26727.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__26728 = this;
  var node__26729 = this;
  return ins.balance_right(node__26729)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__26730 = this;
  var node__26731 = this;
  return new cljs.core.RedNode(this__26730.key, this__26730.val, this__26730.left, this__26730.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__26732 = this;
  var node__26733 = this;
  return cljs.core.balance_right_del.call(null, this__26732.key, this__26732.val, this__26732.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__26734 = this;
  var node__26735 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__26736 = this;
  var node__26737 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__26737, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__26738 = this;
  var node__26739 = this;
  return cljs.core.balance_left_del.call(null, this__26738.key, this__26738.val, del, this__26738.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__26740 = this;
  var node__26741 = this;
  return ins.balance_left(node__26741)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__26742 = this;
  var node__26743 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__26743, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__26765 = null;
  var G__26765__0 = function() {
    var this__26744 = this;
    var this__26746 = this;
    return cljs.core.pr_str.call(null, this__26746)
  };
  G__26765 = function() {
    switch(arguments.length) {
      case 0:
        return G__26765__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__26765
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__26747 = this;
  var node__26748 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__26748, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__26749 = this;
  var node__26750 = this;
  return node__26750
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__26751 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__26752 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__26753 = this;
  return cljs.core.list.call(null, this__26753.key, this__26753.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__26754 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__26755 = this;
  return this__26755.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__26756 = this;
  return cljs.core.PersistentVector.fromArray([this__26756.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__26757 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__26757.key, this__26757.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__26758 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__26759 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__26759.key, this__26759.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__26760 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__26761 = this;
  if(n === 0) {
    return this__26761.key
  }else {
    if(n === 1) {
      return this__26761.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__26762 = this;
  if(n === 0) {
    return this__26762.key
  }else {
    if(n === 1) {
      return this__26762.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__26763 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__26768 = this;
  var h__2093__auto____26769 = this__26768.__hash;
  if(!(h__2093__auto____26769 == null)) {
    return h__2093__auto____26769
  }else {
    var h__2093__auto____26770 = cljs.core.hash_coll.call(null, coll);
    this__26768.__hash = h__2093__auto____26770;
    return h__2093__auto____26770
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__26771 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__26772 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__26773 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__26773.key, this__26773.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__26821 = null;
  var G__26821__2 = function(this_sym26774, k) {
    var this__26776 = this;
    var this_sym26774__26777 = this;
    var node__26778 = this_sym26774__26777;
    return node__26778.cljs$core$ILookup$_lookup$arity$2(node__26778, k)
  };
  var G__26821__3 = function(this_sym26775, k, not_found) {
    var this__26776 = this;
    var this_sym26775__26779 = this;
    var node__26780 = this_sym26775__26779;
    return node__26780.cljs$core$ILookup$_lookup$arity$3(node__26780, k, not_found)
  };
  G__26821 = function(this_sym26775, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__26821__2.call(this, this_sym26775, k);
      case 3:
        return G__26821__3.call(this, this_sym26775, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__26821
}();
cljs.core.RedNode.prototype.apply = function(this_sym26766, args26767) {
  var this__26781 = this;
  return this_sym26766.call.apply(this_sym26766, [this_sym26766].concat(args26767.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__26782 = this;
  return cljs.core.PersistentVector.fromArray([this__26782.key, this__26782.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__26783 = this;
  return this__26783.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__26784 = this;
  return this__26784.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__26785 = this;
  var node__26786 = this;
  return new cljs.core.RedNode(this__26785.key, this__26785.val, this__26785.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__26787 = this;
  var node__26788 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__26789 = this;
  var node__26790 = this;
  return new cljs.core.RedNode(this__26789.key, this__26789.val, this__26789.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__26791 = this;
  var node__26792 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__26793 = this;
  var node__26794 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__26794, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__26795 = this;
  var node__26796 = this;
  return new cljs.core.RedNode(this__26795.key, this__26795.val, del, this__26795.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__26797 = this;
  var node__26798 = this;
  return new cljs.core.RedNode(this__26797.key, this__26797.val, ins, this__26797.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__26799 = this;
  var node__26800 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__26799.left)) {
    return new cljs.core.RedNode(this__26799.key, this__26799.val, this__26799.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__26799.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__26799.right)) {
      return new cljs.core.RedNode(this__26799.right.key, this__26799.right.val, new cljs.core.BlackNode(this__26799.key, this__26799.val, this__26799.left, this__26799.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__26799.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__26800, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__26822 = null;
  var G__26822__0 = function() {
    var this__26801 = this;
    var this__26803 = this;
    return cljs.core.pr_str.call(null, this__26803)
  };
  G__26822 = function() {
    switch(arguments.length) {
      case 0:
        return G__26822__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__26822
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__26804 = this;
  var node__26805 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__26804.right)) {
    return new cljs.core.RedNode(this__26804.key, this__26804.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__26804.left, null), this__26804.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__26804.left)) {
      return new cljs.core.RedNode(this__26804.left.key, this__26804.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__26804.left.left, null), new cljs.core.BlackNode(this__26804.key, this__26804.val, this__26804.left.right, this__26804.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__26805, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__26806 = this;
  var node__26807 = this;
  return new cljs.core.BlackNode(this__26806.key, this__26806.val, this__26806.left, this__26806.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__26808 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__26809 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__26810 = this;
  return cljs.core.list.call(null, this__26810.key, this__26810.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__26811 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__26812 = this;
  return this__26812.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__26813 = this;
  return cljs.core.PersistentVector.fromArray([this__26813.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__26814 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__26814.key, this__26814.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__26815 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__26816 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__26816.key, this__26816.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__26817 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__26818 = this;
  if(n === 0) {
    return this__26818.key
  }else {
    if(n === 1) {
      return this__26818.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__26819 = this;
  if(n === 0) {
    return this__26819.key
  }else {
    if(n === 1) {
      return this__26819.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__26820 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__26826 = comp.call(null, k, tree.key);
    if(c__26826 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__26826 < 0) {
        var ins__26827 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__26827 == null)) {
          return tree.add_left(ins__26827)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__26828 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__26828 == null)) {
            return tree.add_right(ins__26828)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__26831 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__26831)) {
            return new cljs.core.RedNode(app__26831.key, app__26831.val, new cljs.core.RedNode(left.key, left.val, left.left, app__26831.left, null), new cljs.core.RedNode(right.key, right.val, app__26831.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__26831, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__26832 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__26832)) {
              return new cljs.core.RedNode(app__26832.key, app__26832.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__26832.left, null), new cljs.core.BlackNode(right.key, right.val, app__26832.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__26832, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__26838 = comp.call(null, k, tree.key);
    if(c__26838 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__26838 < 0) {
        var del__26839 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____26840 = !(del__26839 == null);
          if(or__3824__auto____26840) {
            return or__3824__auto____26840
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__26839, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__26839, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__26841 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____26842 = !(del__26841 == null);
            if(or__3824__auto____26842) {
              return or__3824__auto____26842
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__26841)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__26841, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__26845 = tree.key;
  var c__26846 = comp.call(null, k, tk__26845);
  if(c__26846 === 0) {
    return tree.replace(tk__26845, v, tree.left, tree.right)
  }else {
    if(c__26846 < 0) {
      return tree.replace(tk__26845, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__26845, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__26849 = this;
  var h__2093__auto____26850 = this__26849.__hash;
  if(!(h__2093__auto____26850 == null)) {
    return h__2093__auto____26850
  }else {
    var h__2093__auto____26851 = cljs.core.hash_imap.call(null, coll);
    this__26849.__hash = h__2093__auto____26851;
    return h__2093__auto____26851
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__26852 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__26853 = this;
  var n__26854 = coll.entry_at(k);
  if(!(n__26854 == null)) {
    return n__26854.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__26855 = this;
  var found__26856 = [null];
  var t__26857 = cljs.core.tree_map_add.call(null, this__26855.comp, this__26855.tree, k, v, found__26856);
  if(t__26857 == null) {
    var found_node__26858 = cljs.core.nth.call(null, found__26856, 0);
    if(cljs.core._EQ_.call(null, v, found_node__26858.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__26855.comp, cljs.core.tree_map_replace.call(null, this__26855.comp, this__26855.tree, k, v), this__26855.cnt, this__26855.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__26855.comp, t__26857.blacken(), this__26855.cnt + 1, this__26855.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__26859 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__26893 = null;
  var G__26893__2 = function(this_sym26860, k) {
    var this__26862 = this;
    var this_sym26860__26863 = this;
    var coll__26864 = this_sym26860__26863;
    return coll__26864.cljs$core$ILookup$_lookup$arity$2(coll__26864, k)
  };
  var G__26893__3 = function(this_sym26861, k, not_found) {
    var this__26862 = this;
    var this_sym26861__26865 = this;
    var coll__26866 = this_sym26861__26865;
    return coll__26866.cljs$core$ILookup$_lookup$arity$3(coll__26866, k, not_found)
  };
  G__26893 = function(this_sym26861, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__26893__2.call(this, this_sym26861, k);
      case 3:
        return G__26893__3.call(this, this_sym26861, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__26893
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym26847, args26848) {
  var this__26867 = this;
  return this_sym26847.call.apply(this_sym26847, [this_sym26847].concat(args26848.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__26868 = this;
  if(!(this__26868.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__26868.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__26869 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__26870 = this;
  if(this__26870.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__26870.tree, false, this__26870.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__26871 = this;
  var this__26872 = this;
  return cljs.core.pr_str.call(null, this__26872)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__26873 = this;
  var coll__26874 = this;
  var t__26875 = this__26873.tree;
  while(true) {
    if(!(t__26875 == null)) {
      var c__26876 = this__26873.comp.call(null, k, t__26875.key);
      if(c__26876 === 0) {
        return t__26875
      }else {
        if(c__26876 < 0) {
          var G__26894 = t__26875.left;
          t__26875 = G__26894;
          continue
        }else {
          if("\ufdd0'else") {
            var G__26895 = t__26875.right;
            t__26875 = G__26895;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__26877 = this;
  if(this__26877.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__26877.tree, ascending_QMARK_, this__26877.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__26878 = this;
  if(this__26878.cnt > 0) {
    var stack__26879 = null;
    var t__26880 = this__26878.tree;
    while(true) {
      if(!(t__26880 == null)) {
        var c__26881 = this__26878.comp.call(null, k, t__26880.key);
        if(c__26881 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__26879, t__26880), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__26881 < 0) {
              var G__26896 = cljs.core.conj.call(null, stack__26879, t__26880);
              var G__26897 = t__26880.left;
              stack__26879 = G__26896;
              t__26880 = G__26897;
              continue
            }else {
              var G__26898 = stack__26879;
              var G__26899 = t__26880.right;
              stack__26879 = G__26898;
              t__26880 = G__26899;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__26881 > 0) {
                var G__26900 = cljs.core.conj.call(null, stack__26879, t__26880);
                var G__26901 = t__26880.right;
                stack__26879 = G__26900;
                t__26880 = G__26901;
                continue
              }else {
                var G__26902 = stack__26879;
                var G__26903 = t__26880.left;
                stack__26879 = G__26902;
                t__26880 = G__26903;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__26879 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__26879, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__26882 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__26883 = this;
  return this__26883.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__26884 = this;
  if(this__26884.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__26884.tree, true, this__26884.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__26885 = this;
  return this__26885.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__26886 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__26887 = this;
  return new cljs.core.PersistentTreeMap(this__26887.comp, this__26887.tree, this__26887.cnt, meta, this__26887.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__26888 = this;
  return this__26888.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__26889 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__26889.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__26890 = this;
  var found__26891 = [null];
  var t__26892 = cljs.core.tree_map_remove.call(null, this__26890.comp, this__26890.tree, k, found__26891);
  if(t__26892 == null) {
    if(cljs.core.nth.call(null, found__26891, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__26890.comp, null, 0, this__26890.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__26890.comp, t__26892.blacken(), this__26890.cnt - 1, this__26890.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__26906 = cljs.core.seq.call(null, keyvals);
    var out__26907 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__26906) {
        var G__26908 = cljs.core.nnext.call(null, in__26906);
        var G__26909 = cljs.core.assoc_BANG_.call(null, out__26907, cljs.core.first.call(null, in__26906), cljs.core.second.call(null, in__26906));
        in__26906 = G__26908;
        out__26907 = G__26909;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__26907)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__26910) {
    var keyvals = cljs.core.seq(arglist__26910);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__26911) {
    var keyvals = cljs.core.seq(arglist__26911);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__26915 = [];
    var obj__26916 = {};
    var kvs__26917 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__26917) {
        ks__26915.push(cljs.core.first.call(null, kvs__26917));
        obj__26916[cljs.core.first.call(null, kvs__26917)] = cljs.core.second.call(null, kvs__26917);
        var G__26918 = cljs.core.nnext.call(null, kvs__26917);
        kvs__26917 = G__26918;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__26915, obj__26916)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__26919) {
    var keyvals = cljs.core.seq(arglist__26919);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__26922 = cljs.core.seq.call(null, keyvals);
    var out__26923 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__26922) {
        var G__26924 = cljs.core.nnext.call(null, in__26922);
        var G__26925 = cljs.core.assoc.call(null, out__26923, cljs.core.first.call(null, in__26922), cljs.core.second.call(null, in__26922));
        in__26922 = G__26924;
        out__26923 = G__26925;
        continue
      }else {
        return out__26923
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__26926) {
    var keyvals = cljs.core.seq(arglist__26926);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__26929 = cljs.core.seq.call(null, keyvals);
    var out__26930 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__26929) {
        var G__26931 = cljs.core.nnext.call(null, in__26929);
        var G__26932 = cljs.core.assoc.call(null, out__26930, cljs.core.first.call(null, in__26929), cljs.core.second.call(null, in__26929));
        in__26929 = G__26931;
        out__26930 = G__26932;
        continue
      }else {
        return out__26930
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__26933) {
    var comparator = cljs.core.first(arglist__26933);
    var keyvals = cljs.core.rest(arglist__26933);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__26934_SHARP_, p2__26935_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____26937 = p1__26934_SHARP_;
          if(cljs.core.truth_(or__3824__auto____26937)) {
            return or__3824__auto____26937
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__26935_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__26938) {
    var maps = cljs.core.seq(arglist__26938);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__26946 = function(m, e) {
        var k__26944 = cljs.core.first.call(null, e);
        var v__26945 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__26944)) {
          return cljs.core.assoc.call(null, m, k__26944, f.call(null, cljs.core._lookup.call(null, m, k__26944, null), v__26945))
        }else {
          return cljs.core.assoc.call(null, m, k__26944, v__26945)
        }
      };
      var merge2__26948 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__26946, function() {
          var or__3824__auto____26947 = m1;
          if(cljs.core.truth_(or__3824__auto____26947)) {
            return or__3824__auto____26947
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__26948, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__26949) {
    var f = cljs.core.first(arglist__26949);
    var maps = cljs.core.rest(arglist__26949);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__26954 = cljs.core.ObjMap.EMPTY;
  var keys__26955 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__26955) {
      var key__26956 = cljs.core.first.call(null, keys__26955);
      var entry__26957 = cljs.core._lookup.call(null, map, key__26956, "\ufdd0'cljs.core/not-found");
      var G__26958 = cljs.core.not_EQ_.call(null, entry__26957, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__26954, key__26956, entry__26957) : ret__26954;
      var G__26959 = cljs.core.next.call(null, keys__26955);
      ret__26954 = G__26958;
      keys__26955 = G__26959;
      continue
    }else {
      return ret__26954
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__26963 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__26963.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__26964 = this;
  var h__2093__auto____26965 = this__26964.__hash;
  if(!(h__2093__auto____26965 == null)) {
    return h__2093__auto____26965
  }else {
    var h__2093__auto____26966 = cljs.core.hash_iset.call(null, coll);
    this__26964.__hash = h__2093__auto____26966;
    return h__2093__auto____26966
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__26967 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__26968 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__26968.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__26989 = null;
  var G__26989__2 = function(this_sym26969, k) {
    var this__26971 = this;
    var this_sym26969__26972 = this;
    var coll__26973 = this_sym26969__26972;
    return coll__26973.cljs$core$ILookup$_lookup$arity$2(coll__26973, k)
  };
  var G__26989__3 = function(this_sym26970, k, not_found) {
    var this__26971 = this;
    var this_sym26970__26974 = this;
    var coll__26975 = this_sym26970__26974;
    return coll__26975.cljs$core$ILookup$_lookup$arity$3(coll__26975, k, not_found)
  };
  G__26989 = function(this_sym26970, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__26989__2.call(this, this_sym26970, k);
      case 3:
        return G__26989__3.call(this, this_sym26970, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__26989
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym26961, args26962) {
  var this__26976 = this;
  return this_sym26961.call.apply(this_sym26961, [this_sym26961].concat(args26962.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__26977 = this;
  return new cljs.core.PersistentHashSet(this__26977.meta, cljs.core.assoc.call(null, this__26977.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__26978 = this;
  var this__26979 = this;
  return cljs.core.pr_str.call(null, this__26979)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__26980 = this;
  return cljs.core.keys.call(null, this__26980.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__26981 = this;
  return new cljs.core.PersistentHashSet(this__26981.meta, cljs.core.dissoc.call(null, this__26981.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__26982 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__26983 = this;
  var and__3822__auto____26984 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____26984) {
    var and__3822__auto____26985 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____26985) {
      return cljs.core.every_QMARK_.call(null, function(p1__26960_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__26960_SHARP_)
      }, other)
    }else {
      return and__3822__auto____26985
    }
  }else {
    return and__3822__auto____26984
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__26986 = this;
  return new cljs.core.PersistentHashSet(meta, this__26986.hash_map, this__26986.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__26987 = this;
  return this__26987.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__26988 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__26988.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__26990 = cljs.core.count.call(null, items);
  var i__26991 = 0;
  var out__26992 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__26991 < len__26990) {
      var G__26993 = i__26991 + 1;
      var G__26994 = cljs.core.conj_BANG_.call(null, out__26992, items[i__26991]);
      i__26991 = G__26993;
      out__26992 = G__26994;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__26992)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__27012 = null;
  var G__27012__2 = function(this_sym26998, k) {
    var this__27000 = this;
    var this_sym26998__27001 = this;
    var tcoll__27002 = this_sym26998__27001;
    if(cljs.core._lookup.call(null, this__27000.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__27012__3 = function(this_sym26999, k, not_found) {
    var this__27000 = this;
    var this_sym26999__27003 = this;
    var tcoll__27004 = this_sym26999__27003;
    if(cljs.core._lookup.call(null, this__27000.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__27012 = function(this_sym26999, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__27012__2.call(this, this_sym26999, k);
      case 3:
        return G__27012__3.call(this, this_sym26999, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__27012
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym26996, args26997) {
  var this__27005 = this;
  return this_sym26996.call.apply(this_sym26996, [this_sym26996].concat(args26997.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__27006 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__27007 = this;
  if(cljs.core._lookup.call(null, this__27007.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__27008 = this;
  return cljs.core.count.call(null, this__27008.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__27009 = this;
  this__27009.transient_map = cljs.core.dissoc_BANG_.call(null, this__27009.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__27010 = this;
  this__27010.transient_map = cljs.core.assoc_BANG_.call(null, this__27010.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__27011 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__27011.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__27015 = this;
  var h__2093__auto____27016 = this__27015.__hash;
  if(!(h__2093__auto____27016 == null)) {
    return h__2093__auto____27016
  }else {
    var h__2093__auto____27017 = cljs.core.hash_iset.call(null, coll);
    this__27015.__hash = h__2093__auto____27017;
    return h__2093__auto____27017
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__27018 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__27019 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__27019.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__27045 = null;
  var G__27045__2 = function(this_sym27020, k) {
    var this__27022 = this;
    var this_sym27020__27023 = this;
    var coll__27024 = this_sym27020__27023;
    return coll__27024.cljs$core$ILookup$_lookup$arity$2(coll__27024, k)
  };
  var G__27045__3 = function(this_sym27021, k, not_found) {
    var this__27022 = this;
    var this_sym27021__27025 = this;
    var coll__27026 = this_sym27021__27025;
    return coll__27026.cljs$core$ILookup$_lookup$arity$3(coll__27026, k, not_found)
  };
  G__27045 = function(this_sym27021, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__27045__2.call(this, this_sym27021, k);
      case 3:
        return G__27045__3.call(this, this_sym27021, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__27045
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym27013, args27014) {
  var this__27027 = this;
  return this_sym27013.call.apply(this_sym27013, [this_sym27013].concat(args27014.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__27028 = this;
  return new cljs.core.PersistentTreeSet(this__27028.meta, cljs.core.assoc.call(null, this__27028.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__27029 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__27029.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__27030 = this;
  var this__27031 = this;
  return cljs.core.pr_str.call(null, this__27031)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__27032 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__27032.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__27033 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__27033.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__27034 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__27035 = this;
  return cljs.core._comparator.call(null, this__27035.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__27036 = this;
  return cljs.core.keys.call(null, this__27036.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__27037 = this;
  return new cljs.core.PersistentTreeSet(this__27037.meta, cljs.core.dissoc.call(null, this__27037.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__27038 = this;
  return cljs.core.count.call(null, this__27038.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__27039 = this;
  var and__3822__auto____27040 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____27040) {
    var and__3822__auto____27041 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____27041) {
      return cljs.core.every_QMARK_.call(null, function(p1__26995_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__26995_SHARP_)
      }, other)
    }else {
      return and__3822__auto____27041
    }
  }else {
    return and__3822__auto____27040
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__27042 = this;
  return new cljs.core.PersistentTreeSet(meta, this__27042.tree_map, this__27042.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__27043 = this;
  return this__27043.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__27044 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__27044.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__27050__delegate = function(keys) {
      var in__27048 = cljs.core.seq.call(null, keys);
      var out__27049 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__27048)) {
          var G__27051 = cljs.core.next.call(null, in__27048);
          var G__27052 = cljs.core.conj_BANG_.call(null, out__27049, cljs.core.first.call(null, in__27048));
          in__27048 = G__27051;
          out__27049 = G__27052;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__27049)
        }
        break
      }
    };
    var G__27050 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__27050__delegate.call(this, keys)
    };
    G__27050.cljs$lang$maxFixedArity = 0;
    G__27050.cljs$lang$applyTo = function(arglist__27053) {
      var keys = cljs.core.seq(arglist__27053);
      return G__27050__delegate(keys)
    };
    G__27050.cljs$lang$arity$variadic = G__27050__delegate;
    return G__27050
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__27054) {
    var keys = cljs.core.seq(arglist__27054);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__27056) {
    var comparator = cljs.core.first(arglist__27056);
    var keys = cljs.core.rest(arglist__27056);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__27062 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____27063 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____27063)) {
        var e__27064 = temp__3971__auto____27063;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__27064))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__27062, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__27055_SHARP_) {
      var temp__3971__auto____27065 = cljs.core.find.call(null, smap, p1__27055_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____27065)) {
        var e__27066 = temp__3971__auto____27065;
        return cljs.core.second.call(null, e__27066)
      }else {
        return p1__27055_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__27096 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__27089, seen) {
        while(true) {
          var vec__27090__27091 = p__27089;
          var f__27092 = cljs.core.nth.call(null, vec__27090__27091, 0, null);
          var xs__27093 = vec__27090__27091;
          var temp__3974__auto____27094 = cljs.core.seq.call(null, xs__27093);
          if(temp__3974__auto____27094) {
            var s__27095 = temp__3974__auto____27094;
            if(cljs.core.contains_QMARK_.call(null, seen, f__27092)) {
              var G__27097 = cljs.core.rest.call(null, s__27095);
              var G__27098 = seen;
              p__27089 = G__27097;
              seen = G__27098;
              continue
            }else {
              return cljs.core.cons.call(null, f__27092, step.call(null, cljs.core.rest.call(null, s__27095), cljs.core.conj.call(null, seen, f__27092)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__27096.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__27101 = cljs.core.PersistentVector.EMPTY;
  var s__27102 = s;
  while(true) {
    if(cljs.core.next.call(null, s__27102)) {
      var G__27103 = cljs.core.conj.call(null, ret__27101, cljs.core.first.call(null, s__27102));
      var G__27104 = cljs.core.next.call(null, s__27102);
      ret__27101 = G__27103;
      s__27102 = G__27104;
      continue
    }else {
      return cljs.core.seq.call(null, ret__27101)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____27107 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____27107) {
        return or__3824__auto____27107
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__27108 = x.lastIndexOf("/");
      if(i__27108 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__27108 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____27111 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____27111) {
      return or__3824__auto____27111
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__27112 = x.lastIndexOf("/");
    if(i__27112 > -1) {
      return cljs.core.subs.call(null, x, 2, i__27112)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__27119 = cljs.core.ObjMap.EMPTY;
  var ks__27120 = cljs.core.seq.call(null, keys);
  var vs__27121 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____27122 = ks__27120;
      if(and__3822__auto____27122) {
        return vs__27121
      }else {
        return and__3822__auto____27122
      }
    }()) {
      var G__27123 = cljs.core.assoc.call(null, map__27119, cljs.core.first.call(null, ks__27120), cljs.core.first.call(null, vs__27121));
      var G__27124 = cljs.core.next.call(null, ks__27120);
      var G__27125 = cljs.core.next.call(null, vs__27121);
      map__27119 = G__27123;
      ks__27120 = G__27124;
      vs__27121 = G__27125;
      continue
    }else {
      return map__27119
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__27128__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__27113_SHARP_, p2__27114_SHARP_) {
        return max_key.call(null, k, p1__27113_SHARP_, p2__27114_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__27128 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__27128__delegate.call(this, k, x, y, more)
    };
    G__27128.cljs$lang$maxFixedArity = 3;
    G__27128.cljs$lang$applyTo = function(arglist__27129) {
      var k = cljs.core.first(arglist__27129);
      var x = cljs.core.first(cljs.core.next(arglist__27129));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__27129)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__27129)));
      return G__27128__delegate(k, x, y, more)
    };
    G__27128.cljs$lang$arity$variadic = G__27128__delegate;
    return G__27128
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__27130__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__27126_SHARP_, p2__27127_SHARP_) {
        return min_key.call(null, k, p1__27126_SHARP_, p2__27127_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__27130 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__27130__delegate.call(this, k, x, y, more)
    };
    G__27130.cljs$lang$maxFixedArity = 3;
    G__27130.cljs$lang$applyTo = function(arglist__27131) {
      var k = cljs.core.first(arglist__27131);
      var x = cljs.core.first(cljs.core.next(arglist__27131));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__27131)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__27131)));
      return G__27130__delegate(k, x, y, more)
    };
    G__27130.cljs$lang$arity$variadic = G__27130__delegate;
    return G__27130
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____27134 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____27134) {
        var s__27135 = temp__3974__auto____27134;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__27135), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__27135)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____27138 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____27138) {
      var s__27139 = temp__3974__auto____27138;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__27139)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__27139), take_while.call(null, pred, cljs.core.rest.call(null, s__27139)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__27141 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__27141.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__27153 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____27154 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____27154)) {
        var vec__27155__27156 = temp__3974__auto____27154;
        var e__27157 = cljs.core.nth.call(null, vec__27155__27156, 0, null);
        var s__27158 = vec__27155__27156;
        if(cljs.core.truth_(include__27153.call(null, e__27157))) {
          return s__27158
        }else {
          return cljs.core.next.call(null, s__27158)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__27153, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____27159 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____27159)) {
      var vec__27160__27161 = temp__3974__auto____27159;
      var e__27162 = cljs.core.nth.call(null, vec__27160__27161, 0, null);
      var s__27163 = vec__27160__27161;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__27162)) ? s__27163 : cljs.core.next.call(null, s__27163))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__27175 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____27176 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____27176)) {
        var vec__27177__27178 = temp__3974__auto____27176;
        var e__27179 = cljs.core.nth.call(null, vec__27177__27178, 0, null);
        var s__27180 = vec__27177__27178;
        if(cljs.core.truth_(include__27175.call(null, e__27179))) {
          return s__27180
        }else {
          return cljs.core.next.call(null, s__27180)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__27175, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____27181 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____27181)) {
      var vec__27182__27183 = temp__3974__auto____27181;
      var e__27184 = cljs.core.nth.call(null, vec__27182__27183, 0, null);
      var s__27185 = vec__27182__27183;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__27184)) ? s__27185 : cljs.core.next.call(null, s__27185))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__27186 = this;
  var h__2093__auto____27187 = this__27186.__hash;
  if(!(h__2093__auto____27187 == null)) {
    return h__2093__auto____27187
  }else {
    var h__2093__auto____27188 = cljs.core.hash_coll.call(null, rng);
    this__27186.__hash = h__2093__auto____27188;
    return h__2093__auto____27188
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__27189 = this;
  if(this__27189.step > 0) {
    if(this__27189.start + this__27189.step < this__27189.end) {
      return new cljs.core.Range(this__27189.meta, this__27189.start + this__27189.step, this__27189.end, this__27189.step, null)
    }else {
      return null
    }
  }else {
    if(this__27189.start + this__27189.step > this__27189.end) {
      return new cljs.core.Range(this__27189.meta, this__27189.start + this__27189.step, this__27189.end, this__27189.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__27190 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__27191 = this;
  var this__27192 = this;
  return cljs.core.pr_str.call(null, this__27192)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__27193 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__27194 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__27195 = this;
  if(this__27195.step > 0) {
    if(this__27195.start < this__27195.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__27195.start > this__27195.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__27196 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__27196.end - this__27196.start) / this__27196.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__27197 = this;
  return this__27197.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__27198 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__27198.meta, this__27198.start + this__27198.step, this__27198.end, this__27198.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__27199 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__27200 = this;
  return new cljs.core.Range(meta, this__27200.start, this__27200.end, this__27200.step, this__27200.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__27201 = this;
  return this__27201.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__27202 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__27202.start + n * this__27202.step
  }else {
    if(function() {
      var and__3822__auto____27203 = this__27202.start > this__27202.end;
      if(and__3822__auto____27203) {
        return this__27202.step === 0
      }else {
        return and__3822__auto____27203
      }
    }()) {
      return this__27202.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__27204 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__27204.start + n * this__27204.step
  }else {
    if(function() {
      var and__3822__auto____27205 = this__27204.start > this__27204.end;
      if(and__3822__auto____27205) {
        return this__27204.step === 0
      }else {
        return and__3822__auto____27205
      }
    }()) {
      return this__27204.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__27206 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__27206.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____27209 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____27209) {
      var s__27210 = temp__3974__auto____27209;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__27210), take_nth.call(null, n, cljs.core.drop.call(null, n, s__27210)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____27217 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____27217) {
      var s__27218 = temp__3974__auto____27217;
      var fst__27219 = cljs.core.first.call(null, s__27218);
      var fv__27220 = f.call(null, fst__27219);
      var run__27221 = cljs.core.cons.call(null, fst__27219, cljs.core.take_while.call(null, function(p1__27211_SHARP_) {
        return cljs.core._EQ_.call(null, fv__27220, f.call(null, p1__27211_SHARP_))
      }, cljs.core.next.call(null, s__27218)));
      return cljs.core.cons.call(null, run__27221, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__27221), s__27218))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____27236 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____27236) {
        var s__27237 = temp__3971__auto____27236;
        return reductions.call(null, f, cljs.core.first.call(null, s__27237), cljs.core.rest.call(null, s__27237))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____27238 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____27238) {
        var s__27239 = temp__3974__auto____27238;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__27239)), cljs.core.rest.call(null, s__27239))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__27242 = null;
      var G__27242__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__27242__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__27242__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__27242__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__27242__4 = function() {
        var G__27243__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__27243 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__27243__delegate.call(this, x, y, z, args)
        };
        G__27243.cljs$lang$maxFixedArity = 3;
        G__27243.cljs$lang$applyTo = function(arglist__27244) {
          var x = cljs.core.first(arglist__27244);
          var y = cljs.core.first(cljs.core.next(arglist__27244));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__27244)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__27244)));
          return G__27243__delegate(x, y, z, args)
        };
        G__27243.cljs$lang$arity$variadic = G__27243__delegate;
        return G__27243
      }();
      G__27242 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__27242__0.call(this);
          case 1:
            return G__27242__1.call(this, x);
          case 2:
            return G__27242__2.call(this, x, y);
          case 3:
            return G__27242__3.call(this, x, y, z);
          default:
            return G__27242__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__27242.cljs$lang$maxFixedArity = 3;
      G__27242.cljs$lang$applyTo = G__27242__4.cljs$lang$applyTo;
      return G__27242
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__27245 = null;
      var G__27245__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__27245__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__27245__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__27245__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__27245__4 = function() {
        var G__27246__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__27246 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__27246__delegate.call(this, x, y, z, args)
        };
        G__27246.cljs$lang$maxFixedArity = 3;
        G__27246.cljs$lang$applyTo = function(arglist__27247) {
          var x = cljs.core.first(arglist__27247);
          var y = cljs.core.first(cljs.core.next(arglist__27247));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__27247)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__27247)));
          return G__27246__delegate(x, y, z, args)
        };
        G__27246.cljs$lang$arity$variadic = G__27246__delegate;
        return G__27246
      }();
      G__27245 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__27245__0.call(this);
          case 1:
            return G__27245__1.call(this, x);
          case 2:
            return G__27245__2.call(this, x, y);
          case 3:
            return G__27245__3.call(this, x, y, z);
          default:
            return G__27245__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__27245.cljs$lang$maxFixedArity = 3;
      G__27245.cljs$lang$applyTo = G__27245__4.cljs$lang$applyTo;
      return G__27245
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__27248 = null;
      var G__27248__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__27248__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__27248__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__27248__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__27248__4 = function() {
        var G__27249__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__27249 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__27249__delegate.call(this, x, y, z, args)
        };
        G__27249.cljs$lang$maxFixedArity = 3;
        G__27249.cljs$lang$applyTo = function(arglist__27250) {
          var x = cljs.core.first(arglist__27250);
          var y = cljs.core.first(cljs.core.next(arglist__27250));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__27250)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__27250)));
          return G__27249__delegate(x, y, z, args)
        };
        G__27249.cljs$lang$arity$variadic = G__27249__delegate;
        return G__27249
      }();
      G__27248 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__27248__0.call(this);
          case 1:
            return G__27248__1.call(this, x);
          case 2:
            return G__27248__2.call(this, x, y);
          case 3:
            return G__27248__3.call(this, x, y, z);
          default:
            return G__27248__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__27248.cljs$lang$maxFixedArity = 3;
      G__27248.cljs$lang$applyTo = G__27248__4.cljs$lang$applyTo;
      return G__27248
    }()
  };
  var juxt__4 = function() {
    var G__27251__delegate = function(f, g, h, fs) {
      var fs__27241 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__27252 = null;
        var G__27252__0 = function() {
          return cljs.core.reduce.call(null, function(p1__27222_SHARP_, p2__27223_SHARP_) {
            return cljs.core.conj.call(null, p1__27222_SHARP_, p2__27223_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__27241)
        };
        var G__27252__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__27224_SHARP_, p2__27225_SHARP_) {
            return cljs.core.conj.call(null, p1__27224_SHARP_, p2__27225_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__27241)
        };
        var G__27252__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__27226_SHARP_, p2__27227_SHARP_) {
            return cljs.core.conj.call(null, p1__27226_SHARP_, p2__27227_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__27241)
        };
        var G__27252__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__27228_SHARP_, p2__27229_SHARP_) {
            return cljs.core.conj.call(null, p1__27228_SHARP_, p2__27229_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__27241)
        };
        var G__27252__4 = function() {
          var G__27253__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__27230_SHARP_, p2__27231_SHARP_) {
              return cljs.core.conj.call(null, p1__27230_SHARP_, cljs.core.apply.call(null, p2__27231_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__27241)
          };
          var G__27253 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__27253__delegate.call(this, x, y, z, args)
          };
          G__27253.cljs$lang$maxFixedArity = 3;
          G__27253.cljs$lang$applyTo = function(arglist__27254) {
            var x = cljs.core.first(arglist__27254);
            var y = cljs.core.first(cljs.core.next(arglist__27254));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__27254)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__27254)));
            return G__27253__delegate(x, y, z, args)
          };
          G__27253.cljs$lang$arity$variadic = G__27253__delegate;
          return G__27253
        }();
        G__27252 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__27252__0.call(this);
            case 1:
              return G__27252__1.call(this, x);
            case 2:
              return G__27252__2.call(this, x, y);
            case 3:
              return G__27252__3.call(this, x, y, z);
            default:
              return G__27252__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__27252.cljs$lang$maxFixedArity = 3;
        G__27252.cljs$lang$applyTo = G__27252__4.cljs$lang$applyTo;
        return G__27252
      }()
    };
    var G__27251 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__27251__delegate.call(this, f, g, h, fs)
    };
    G__27251.cljs$lang$maxFixedArity = 3;
    G__27251.cljs$lang$applyTo = function(arglist__27255) {
      var f = cljs.core.first(arglist__27255);
      var g = cljs.core.first(cljs.core.next(arglist__27255));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__27255)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__27255)));
      return G__27251__delegate(f, g, h, fs)
    };
    G__27251.cljs$lang$arity$variadic = G__27251__delegate;
    return G__27251
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__27258 = cljs.core.next.call(null, coll);
        coll = G__27258;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____27257 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____27257) {
          return n > 0
        }else {
          return and__3822__auto____27257
        }
      }())) {
        var G__27259 = n - 1;
        var G__27260 = cljs.core.next.call(null, coll);
        n = G__27259;
        coll = G__27260;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__27262 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__27262), s)) {
    if(cljs.core.count.call(null, matches__27262) === 1) {
      return cljs.core.first.call(null, matches__27262)
    }else {
      return cljs.core.vec.call(null, matches__27262)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__27264 = re.exec(s);
  if(matches__27264 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__27264) === 1) {
      return cljs.core.first.call(null, matches__27264)
    }else {
      return cljs.core.vec.call(null, matches__27264)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__27269 = cljs.core.re_find.call(null, re, s);
  var match_idx__27270 = s.search(re);
  var match_str__27271 = cljs.core.coll_QMARK_.call(null, match_data__27269) ? cljs.core.first.call(null, match_data__27269) : match_data__27269;
  var post_match__27272 = cljs.core.subs.call(null, s, match_idx__27270 + cljs.core.count.call(null, match_str__27271));
  if(cljs.core.truth_(match_data__27269)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__27269, re_seq.call(null, re, post_match__27272))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__27279__27280 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___27281 = cljs.core.nth.call(null, vec__27279__27280, 0, null);
  var flags__27282 = cljs.core.nth.call(null, vec__27279__27280, 1, null);
  var pattern__27283 = cljs.core.nth.call(null, vec__27279__27280, 2, null);
  return new RegExp(pattern__27283, flags__27282)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__27273_SHARP_) {
    return print_one.call(null, p1__27273_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____27293 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____27293)) {
            var and__3822__auto____27297 = function() {
              var G__27294__27295 = obj;
              if(G__27294__27295) {
                if(function() {
                  var or__3824__auto____27296 = G__27294__27295.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____27296) {
                    return or__3824__auto____27296
                  }else {
                    return G__27294__27295.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__27294__27295.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__27294__27295)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__27294__27295)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____27297)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____27297
            }
          }else {
            return and__3822__auto____27293
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____27298 = !(obj == null);
          if(and__3822__auto____27298) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____27298
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__27299__27300 = obj;
          if(G__27299__27300) {
            if(function() {
              var or__3824__auto____27301 = G__27299__27300.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____27301) {
                return or__3824__auto____27301
              }else {
                return G__27299__27300.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__27299__27300.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__27299__27300)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__27299__27300)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__27321 = new goog.string.StringBuffer;
  var G__27322__27323 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__27322__27323) {
    var string__27324 = cljs.core.first.call(null, G__27322__27323);
    var G__27322__27325 = G__27322__27323;
    while(true) {
      sb__27321.append(string__27324);
      var temp__3974__auto____27326 = cljs.core.next.call(null, G__27322__27325);
      if(temp__3974__auto____27326) {
        var G__27322__27327 = temp__3974__auto____27326;
        var G__27340 = cljs.core.first.call(null, G__27322__27327);
        var G__27341 = G__27322__27327;
        string__27324 = G__27340;
        G__27322__27325 = G__27341;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__27328__27329 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__27328__27329) {
    var obj__27330 = cljs.core.first.call(null, G__27328__27329);
    var G__27328__27331 = G__27328__27329;
    while(true) {
      sb__27321.append(" ");
      var G__27332__27333 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__27330, opts));
      if(G__27332__27333) {
        var string__27334 = cljs.core.first.call(null, G__27332__27333);
        var G__27332__27335 = G__27332__27333;
        while(true) {
          sb__27321.append(string__27334);
          var temp__3974__auto____27336 = cljs.core.next.call(null, G__27332__27335);
          if(temp__3974__auto____27336) {
            var G__27332__27337 = temp__3974__auto____27336;
            var G__27342 = cljs.core.first.call(null, G__27332__27337);
            var G__27343 = G__27332__27337;
            string__27334 = G__27342;
            G__27332__27335 = G__27343;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____27338 = cljs.core.next.call(null, G__27328__27331);
      if(temp__3974__auto____27338) {
        var G__27328__27339 = temp__3974__auto____27338;
        var G__27344 = cljs.core.first.call(null, G__27328__27339);
        var G__27345 = G__27328__27339;
        obj__27330 = G__27344;
        G__27328__27331 = G__27345;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__27321
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__27347 = cljs.core.pr_sb.call(null, objs, opts);
  sb__27347.append("\n");
  return[cljs.core.str(sb__27347)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__27366__27367 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__27366__27367) {
    var string__27368 = cljs.core.first.call(null, G__27366__27367);
    var G__27366__27369 = G__27366__27367;
    while(true) {
      cljs.core.string_print.call(null, string__27368);
      var temp__3974__auto____27370 = cljs.core.next.call(null, G__27366__27369);
      if(temp__3974__auto____27370) {
        var G__27366__27371 = temp__3974__auto____27370;
        var G__27384 = cljs.core.first.call(null, G__27366__27371);
        var G__27385 = G__27366__27371;
        string__27368 = G__27384;
        G__27366__27369 = G__27385;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__27372__27373 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__27372__27373) {
    var obj__27374 = cljs.core.first.call(null, G__27372__27373);
    var G__27372__27375 = G__27372__27373;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__27376__27377 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__27374, opts));
      if(G__27376__27377) {
        var string__27378 = cljs.core.first.call(null, G__27376__27377);
        var G__27376__27379 = G__27376__27377;
        while(true) {
          cljs.core.string_print.call(null, string__27378);
          var temp__3974__auto____27380 = cljs.core.next.call(null, G__27376__27379);
          if(temp__3974__auto____27380) {
            var G__27376__27381 = temp__3974__auto____27380;
            var G__27386 = cljs.core.first.call(null, G__27376__27381);
            var G__27387 = G__27376__27381;
            string__27378 = G__27386;
            G__27376__27379 = G__27387;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____27382 = cljs.core.next.call(null, G__27372__27375);
      if(temp__3974__auto____27382) {
        var G__27372__27383 = temp__3974__auto____27382;
        var G__27388 = cljs.core.first.call(null, G__27372__27383);
        var G__27389 = G__27372__27383;
        obj__27374 = G__27388;
        G__27372__27375 = G__27389;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__27390) {
    var objs = cljs.core.seq(arglist__27390);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__27391) {
    var objs = cljs.core.seq(arglist__27391);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__27392) {
    var objs = cljs.core.seq(arglist__27392);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__27393) {
    var objs = cljs.core.seq(arglist__27393);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__27394) {
    var objs = cljs.core.seq(arglist__27394);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__27395) {
    var objs = cljs.core.seq(arglist__27395);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__27396) {
    var objs = cljs.core.seq(arglist__27396);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__27397) {
    var objs = cljs.core.seq(arglist__27397);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__27398) {
    var fmt = cljs.core.first(arglist__27398);
    var args = cljs.core.rest(arglist__27398);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__27399 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__27399, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__27400 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__27400, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__27401 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__27401, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____27402 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____27402)) {
        var nspc__27403 = temp__3974__auto____27402;
        return[cljs.core.str(nspc__27403), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____27404 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____27404)) {
          var nspc__27405 = temp__3974__auto____27404;
          return[cljs.core.str(nspc__27405), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__27406 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__27406, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__27408 = function(n, len) {
    var ns__27407 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__27407) < len) {
        var G__27410 = [cljs.core.str("0"), cljs.core.str(ns__27407)].join("");
        ns__27407 = G__27410;
        continue
      }else {
        return ns__27407
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__27408.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__27408.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__27408.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__27408.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__27408.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__27408.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__27409 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__27409, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__27411 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__27412 = this;
  var G__27413__27414 = cljs.core.seq.call(null, this__27412.watches);
  if(G__27413__27414) {
    var G__27416__27418 = cljs.core.first.call(null, G__27413__27414);
    var vec__27417__27419 = G__27416__27418;
    var key__27420 = cljs.core.nth.call(null, vec__27417__27419, 0, null);
    var f__27421 = cljs.core.nth.call(null, vec__27417__27419, 1, null);
    var G__27413__27422 = G__27413__27414;
    var G__27416__27423 = G__27416__27418;
    var G__27413__27424 = G__27413__27422;
    while(true) {
      var vec__27425__27426 = G__27416__27423;
      var key__27427 = cljs.core.nth.call(null, vec__27425__27426, 0, null);
      var f__27428 = cljs.core.nth.call(null, vec__27425__27426, 1, null);
      var G__27413__27429 = G__27413__27424;
      f__27428.call(null, key__27427, this$, oldval, newval);
      var temp__3974__auto____27430 = cljs.core.next.call(null, G__27413__27429);
      if(temp__3974__auto____27430) {
        var G__27413__27431 = temp__3974__auto____27430;
        var G__27438 = cljs.core.first.call(null, G__27413__27431);
        var G__27439 = G__27413__27431;
        G__27416__27423 = G__27438;
        G__27413__27424 = G__27439;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__27432 = this;
  return this$.watches = cljs.core.assoc.call(null, this__27432.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__27433 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__27433.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__27434 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__27434.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__27435 = this;
  return this__27435.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__27436 = this;
  return this__27436.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__27437 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__27451__delegate = function(x, p__27440) {
      var map__27446__27447 = p__27440;
      var map__27446__27448 = cljs.core.seq_QMARK_.call(null, map__27446__27447) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27446__27447) : map__27446__27447;
      var validator__27449 = cljs.core._lookup.call(null, map__27446__27448, "\ufdd0'validator", null);
      var meta__27450 = cljs.core._lookup.call(null, map__27446__27448, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__27450, validator__27449, null)
    };
    var G__27451 = function(x, var_args) {
      var p__27440 = null;
      if(goog.isDef(var_args)) {
        p__27440 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__27451__delegate.call(this, x, p__27440)
    };
    G__27451.cljs$lang$maxFixedArity = 1;
    G__27451.cljs$lang$applyTo = function(arglist__27452) {
      var x = cljs.core.first(arglist__27452);
      var p__27440 = cljs.core.rest(arglist__27452);
      return G__27451__delegate(x, p__27440)
    };
    G__27451.cljs$lang$arity$variadic = G__27451__delegate;
    return G__27451
  }();
  atom = function(x, var_args) {
    var p__27440 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____27456 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____27456)) {
    var validate__27457 = temp__3974__auto____27456;
    if(cljs.core.truth_(validate__27457.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440))))].join(""));
    }
  }else {
  }
  var old_value__27458 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__27458, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__27459__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__27459 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__27459__delegate.call(this, a, f, x, y, z, more)
    };
    G__27459.cljs$lang$maxFixedArity = 5;
    G__27459.cljs$lang$applyTo = function(arglist__27460) {
      var a = cljs.core.first(arglist__27460);
      var f = cljs.core.first(cljs.core.next(arglist__27460));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__27460)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__27460))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__27460)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__27460)))));
      return G__27459__delegate(a, f, x, y, z, more)
    };
    G__27459.cljs$lang$arity$variadic = G__27459__delegate;
    return G__27459
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__27461) {
    var iref = cljs.core.first(arglist__27461);
    var f = cljs.core.first(cljs.core.next(arglist__27461));
    var args = cljs.core.rest(cljs.core.next(arglist__27461));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__27462 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__27462.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__27463 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__27463.state, function(p__27464) {
    var map__27465__27466 = p__27464;
    var map__27465__27467 = cljs.core.seq_QMARK_.call(null, map__27465__27466) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27465__27466) : map__27465__27466;
    var curr_state__27468 = map__27465__27467;
    var done__27469 = cljs.core._lookup.call(null, map__27465__27467, "\ufdd0'done", null);
    if(cljs.core.truth_(done__27469)) {
      return curr_state__27468
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__27463.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__27490__27491 = options;
    var map__27490__27492 = cljs.core.seq_QMARK_.call(null, map__27490__27491) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27490__27491) : map__27490__27491;
    var keywordize_keys__27493 = cljs.core._lookup.call(null, map__27490__27492, "\ufdd0'keywordize-keys", null);
    var keyfn__27494 = cljs.core.truth_(keywordize_keys__27493) ? cljs.core.keyword : cljs.core.str;
    var f__27509 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2363__auto____27508 = function iter__27502(s__27503) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__27503__27506 = s__27503;
                    while(true) {
                      if(cljs.core.seq.call(null, s__27503__27506)) {
                        var k__27507 = cljs.core.first.call(null, s__27503__27506);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__27494.call(null, k__27507), thisfn.call(null, x[k__27507])], true), iter__27502.call(null, cljs.core.rest.call(null, s__27503__27506)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2363__auto____27508.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__27509.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__27510) {
    var x = cljs.core.first(arglist__27510);
    var options = cljs.core.rest(arglist__27510);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__27515 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__27519__delegate = function(args) {
      var temp__3971__auto____27516 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__27515), args, null);
      if(cljs.core.truth_(temp__3971__auto____27516)) {
        var v__27517 = temp__3971__auto____27516;
        return v__27517
      }else {
        var ret__27518 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__27515, cljs.core.assoc, args, ret__27518);
        return ret__27518
      }
    };
    var G__27519 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__27519__delegate.call(this, args)
    };
    G__27519.cljs$lang$maxFixedArity = 0;
    G__27519.cljs$lang$applyTo = function(arglist__27520) {
      var args = cljs.core.seq(arglist__27520);
      return G__27519__delegate(args)
    };
    G__27519.cljs$lang$arity$variadic = G__27519__delegate;
    return G__27519
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__27522 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__27522)) {
        var G__27523 = ret__27522;
        f = G__27523;
        continue
      }else {
        return ret__27522
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__27524__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__27524 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__27524__delegate.call(this, f, args)
    };
    G__27524.cljs$lang$maxFixedArity = 1;
    G__27524.cljs$lang$applyTo = function(arglist__27525) {
      var f = cljs.core.first(arglist__27525);
      var args = cljs.core.rest(arglist__27525);
      return G__27524__delegate(f, args)
    };
    G__27524.cljs$lang$arity$variadic = G__27524__delegate;
    return G__27524
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__27527 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__27527, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__27527, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____27536 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____27536) {
      return or__3824__auto____27536
    }else {
      var or__3824__auto____27537 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____27537) {
        return or__3824__auto____27537
      }else {
        var and__3822__auto____27538 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____27538) {
          var and__3822__auto____27539 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____27539) {
            var and__3822__auto____27540 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____27540) {
              var ret__27541 = true;
              var i__27542 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____27543 = cljs.core.not.call(null, ret__27541);
                  if(or__3824__auto____27543) {
                    return or__3824__auto____27543
                  }else {
                    return i__27542 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__27541
                }else {
                  var G__27544 = isa_QMARK_.call(null, h, child.call(null, i__27542), parent.call(null, i__27542));
                  var G__27545 = i__27542 + 1;
                  ret__27541 = G__27544;
                  i__27542 = G__27545;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____27540
            }
          }else {
            return and__3822__auto____27539
          }
        }else {
          return and__3822__auto____27538
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728))))].join(""));
    }
    var tp__27554 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__27555 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__27556 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__27557 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____27558 = cljs.core.contains_QMARK_.call(null, tp__27554.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__27556.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__27556.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__27554, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__27557.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__27555, parent, ta__27556), "\ufdd0'descendants":tf__27557.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__27556, tag, td__27555)})
    }();
    if(cljs.core.truth_(or__3824__auto____27558)) {
      return or__3824__auto____27558
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__27563 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__27564 = cljs.core.truth_(parentMap__27563.call(null, tag)) ? cljs.core.disj.call(null, parentMap__27563.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__27565 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__27564)) ? cljs.core.assoc.call(null, parentMap__27563, tag, childsParents__27564) : cljs.core.dissoc.call(null, parentMap__27563, tag);
    var deriv_seq__27566 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__27546_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__27546_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__27546_SHARP_), cljs.core.second.call(null, p1__27546_SHARP_)))
    }, cljs.core.seq.call(null, newParents__27565)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__27563.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__27547_SHARP_, p2__27548_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__27547_SHARP_, p2__27548_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__27566))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__27574 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____27576 = cljs.core.truth_(function() {
    var and__3822__auto____27575 = xprefs__27574;
    if(cljs.core.truth_(and__3822__auto____27575)) {
      return xprefs__27574.call(null, y)
    }else {
      return and__3822__auto____27575
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____27576)) {
    return or__3824__auto____27576
  }else {
    var or__3824__auto____27578 = function() {
      var ps__27577 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__27577) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__27577), prefer_table))) {
          }else {
          }
          var G__27581 = cljs.core.rest.call(null, ps__27577);
          ps__27577 = G__27581;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____27578)) {
      return or__3824__auto____27578
    }else {
      var or__3824__auto____27580 = function() {
        var ps__27579 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__27579) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__27579), y, prefer_table))) {
            }else {
            }
            var G__27582 = cljs.core.rest.call(null, ps__27579);
            ps__27579 = G__27582;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____27580)) {
        return or__3824__auto____27580
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____27584 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____27584)) {
    return or__3824__auto____27584
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__27602 = cljs.core.reduce.call(null, function(be, p__27594) {
    var vec__27595__27596 = p__27594;
    var k__27597 = cljs.core.nth.call(null, vec__27595__27596, 0, null);
    var ___27598 = cljs.core.nth.call(null, vec__27595__27596, 1, null);
    var e__27599 = vec__27595__27596;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__27597)) {
      var be2__27601 = cljs.core.truth_(function() {
        var or__3824__auto____27600 = be == null;
        if(or__3824__auto____27600) {
          return or__3824__auto____27600
        }else {
          return cljs.core.dominates.call(null, k__27597, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__27599 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__27601), k__27597, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__27597), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__27601)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__27601
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__27602)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__27602));
      return cljs.core.second.call(null, best_entry__27602)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____27607 = mf;
    if(and__3822__auto____27607) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____27607
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2264__auto____27608 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____27609 = cljs.core._reset[goog.typeOf(x__2264__auto____27608)];
      if(or__3824__auto____27609) {
        return or__3824__auto____27609
      }else {
        var or__3824__auto____27610 = cljs.core._reset["_"];
        if(or__3824__auto____27610) {
          return or__3824__auto____27610
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____27615 = mf;
    if(and__3822__auto____27615) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____27615
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2264__auto____27616 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____27617 = cljs.core._add_method[goog.typeOf(x__2264__auto____27616)];
      if(or__3824__auto____27617) {
        return or__3824__auto____27617
      }else {
        var or__3824__auto____27618 = cljs.core._add_method["_"];
        if(or__3824__auto____27618) {
          return or__3824__auto____27618
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____27623 = mf;
    if(and__3822__auto____27623) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____27623
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2264__auto____27624 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____27625 = cljs.core._remove_method[goog.typeOf(x__2264__auto____27624)];
      if(or__3824__auto____27625) {
        return or__3824__auto____27625
      }else {
        var or__3824__auto____27626 = cljs.core._remove_method["_"];
        if(or__3824__auto____27626) {
          return or__3824__auto____27626
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____27631 = mf;
    if(and__3822__auto____27631) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____27631
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2264__auto____27632 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____27633 = cljs.core._prefer_method[goog.typeOf(x__2264__auto____27632)];
      if(or__3824__auto____27633) {
        return or__3824__auto____27633
      }else {
        var or__3824__auto____27634 = cljs.core._prefer_method["_"];
        if(or__3824__auto____27634) {
          return or__3824__auto____27634
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____27639 = mf;
    if(and__3822__auto____27639) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____27639
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2264__auto____27640 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____27641 = cljs.core._get_method[goog.typeOf(x__2264__auto____27640)];
      if(or__3824__auto____27641) {
        return or__3824__auto____27641
      }else {
        var or__3824__auto____27642 = cljs.core._get_method["_"];
        if(or__3824__auto____27642) {
          return or__3824__auto____27642
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____27647 = mf;
    if(and__3822__auto____27647) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____27647
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2264__auto____27648 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____27649 = cljs.core._methods[goog.typeOf(x__2264__auto____27648)];
      if(or__3824__auto____27649) {
        return or__3824__auto____27649
      }else {
        var or__3824__auto____27650 = cljs.core._methods["_"];
        if(or__3824__auto____27650) {
          return or__3824__auto____27650
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____27655 = mf;
    if(and__3822__auto____27655) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____27655
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2264__auto____27656 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____27657 = cljs.core._prefers[goog.typeOf(x__2264__auto____27656)];
      if(or__3824__auto____27657) {
        return or__3824__auto____27657
      }else {
        var or__3824__auto____27658 = cljs.core._prefers["_"];
        if(or__3824__auto____27658) {
          return or__3824__auto____27658
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____27663 = mf;
    if(and__3822__auto____27663) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____27663
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2264__auto____27664 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____27665 = cljs.core._dispatch[goog.typeOf(x__2264__auto____27664)];
      if(or__3824__auto____27665) {
        return or__3824__auto____27665
      }else {
        var or__3824__auto____27666 = cljs.core._dispatch["_"];
        if(or__3824__auto____27666) {
          return or__3824__auto____27666
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__27669 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__27670 = cljs.core._get_method.call(null, mf, dispatch_val__27669);
  if(cljs.core.truth_(target_fn__27670)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__27669)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__27670, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__27671 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__27672 = this;
  cljs.core.swap_BANG_.call(null, this__27672.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__27672.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__27672.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__27672.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__27673 = this;
  cljs.core.swap_BANG_.call(null, this__27673.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__27673.method_cache, this__27673.method_table, this__27673.cached_hierarchy, this__27673.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__27674 = this;
  cljs.core.swap_BANG_.call(null, this__27674.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__27674.method_cache, this__27674.method_table, this__27674.cached_hierarchy, this__27674.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__27675 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__27675.cached_hierarchy), cljs.core.deref.call(null, this__27675.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__27675.method_cache, this__27675.method_table, this__27675.cached_hierarchy, this__27675.hierarchy)
  }
  var temp__3971__auto____27676 = cljs.core.deref.call(null, this__27675.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____27676)) {
    var target_fn__27677 = temp__3971__auto____27676;
    return target_fn__27677
  }else {
    var temp__3971__auto____27678 = cljs.core.find_and_cache_best_method.call(null, this__27675.name, dispatch_val, this__27675.hierarchy, this__27675.method_table, this__27675.prefer_table, this__27675.method_cache, this__27675.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____27678)) {
      var target_fn__27679 = temp__3971__auto____27678;
      return target_fn__27679
    }else {
      return cljs.core.deref.call(null, this__27675.method_table).call(null, this__27675.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__27680 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__27680.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__27680.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__27680.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__27680.method_cache, this__27680.method_table, this__27680.cached_hierarchy, this__27680.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__27681 = this;
  return cljs.core.deref.call(null, this__27681.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__27682 = this;
  return cljs.core.deref.call(null, this__27682.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__27683 = this;
  return cljs.core.do_dispatch.call(null, mf, this__27683.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__27685__delegate = function(_, args) {
    var self__27684 = this;
    return cljs.core._dispatch.call(null, self__27684, args)
  };
  var G__27685 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__27685__delegate.call(this, _, args)
  };
  G__27685.cljs$lang$maxFixedArity = 1;
  G__27685.cljs$lang$applyTo = function(arglist__27686) {
    var _ = cljs.core.first(arglist__27686);
    var args = cljs.core.rest(arglist__27686);
    return G__27685__delegate(_, args)
  };
  G__27685.cljs$lang$arity$variadic = G__27685__delegate;
  return G__27685
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__27687 = this;
  return cljs.core._dispatch.call(null, self__27687, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__27688 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_27690, _) {
  var this__27689 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__27689.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__27691 = this;
  var and__3822__auto____27692 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____27692) {
    return this__27691.uuid === other.uuid
  }else {
    return and__3822__auto____27692
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__27693 = this;
  var this__27694 = this;
  return cljs.core.pr_str.call(null, this__27694)
};
cljs.core.UUID;
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__27701 = s;
      var limit__27702 = limit;
      var parts__27703 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__27702, 1)) {
          return cljs.core.conj.call(null, parts__27703, s__27701)
        }else {
          var temp__3971__auto____27704 = cljs.core.re_find.call(null, re, s__27701);
          if(cljs.core.truth_(temp__3971__auto____27704)) {
            var m__27705 = temp__3971__auto____27704;
            var index__27706 = s__27701.indexOf(m__27705);
            var G__27707 = s__27701.substring(index__27706 + cljs.core.count.call(null, m__27705));
            var G__27708 = limit__27702 - 1;
            var G__27709 = cljs.core.conj.call(null, parts__27703, s__27701.substring(0, index__27706));
            s__27701 = G__27707;
            limit__27702 = G__27708;
            parts__27703 = G__27709;
            continue
          }else {
            return cljs.core.conj.call(null, parts__27703, s__27701)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__27713 = s.length;
  while(true) {
    if(index__27713 === 0) {
      return""
    }else {
      var ch__27714 = cljs.core._lookup.call(null, s, index__27713 - 1, null);
      if(function() {
        var or__3824__auto____27715 = cljs.core._EQ_.call(null, ch__27714, "\n");
        if(or__3824__auto____27715) {
          return or__3824__auto____27715
        }else {
          return cljs.core._EQ_.call(null, ch__27714, "\r")
        }
      }()) {
        var G__27716 = index__27713 - 1;
        index__27713 = G__27716;
        continue
      }else {
        return s.substring(0, index__27713)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__27720 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____27721 = cljs.core.not.call(null, s__27720);
    if(or__3824__auto____27721) {
      return or__3824__auto____27721
    }else {
      var or__3824__auto____27722 = cljs.core._EQ_.call(null, "", s__27720);
      if(or__3824__auto____27722) {
        return or__3824__auto____27722
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__27720)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__27729 = new goog.string.StringBuffer;
  var length__27730 = s.length;
  var index__27731 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__27730, index__27731)) {
      return buffer__27729.toString()
    }else {
      var ch__27732 = s.charAt(index__27731);
      var temp__3971__auto____27733 = cljs.core._lookup.call(null, cmap, ch__27732, null);
      if(cljs.core.truth_(temp__3971__auto____27733)) {
        var replacement__27734 = temp__3971__auto____27733;
        buffer__27729.append([cljs.core.str(replacement__27734)].join(""))
      }else {
        buffer__27729.append(ch__27732)
      }
      var G__27735 = index__27731 + 1;
      index__27731 = G__27735;
      continue
    }
    break
  }
};
goog.provide("crate.util");
goog.require("cljs.core");
goog.require("clojure.string");
crate.util._STAR_base_url_STAR_ = null;
crate.util.as_str = function() {
  var as_str = null;
  var as_str__0 = function() {
    return""
  };
  var as_str__1 = function(x) {
    if(function() {
      var or__3824__auto____28314 = cljs.core.symbol_QMARK_.call(null, x);
      if(or__3824__auto____28314) {
        return or__3824__auto____28314
      }else {
        return cljs.core.keyword_QMARK_.call(null, x)
      }
    }()) {
      return cljs.core.name.call(null, x)
    }else {
      return[cljs.core.str(x)].join("")
    }
  };
  var as_str__2 = function() {
    var G__28315__delegate = function(x, xs) {
      return function(s, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__28316 = [cljs.core.str(s), cljs.core.str(as_str.call(null, cljs.core.first.call(null, more)))].join("");
            var G__28317 = cljs.core.next.call(null, more);
            s = G__28316;
            more = G__28317;
            continue
          }else {
            return s
          }
          break
        }
      }.call(null, as_str.call(null, x), xs)
    };
    var G__28315 = function(x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__28315__delegate.call(this, x, xs)
    };
    G__28315.cljs$lang$maxFixedArity = 1;
    G__28315.cljs$lang$applyTo = function(arglist__28318) {
      var x = cljs.core.first(arglist__28318);
      var xs = cljs.core.rest(arglist__28318);
      return G__28315__delegate(x, xs)
    };
    G__28315.cljs$lang$arity$variadic = G__28315__delegate;
    return G__28315
  }();
  as_str = function(x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return as_str__0.call(this);
      case 1:
        return as_str__1.call(this, x);
      default:
        return as_str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  as_str.cljs$lang$maxFixedArity = 1;
  as_str.cljs$lang$applyTo = as_str__2.cljs$lang$applyTo;
  as_str.cljs$lang$arity$0 = as_str__0;
  as_str.cljs$lang$arity$1 = as_str__1;
  as_str.cljs$lang$arity$variadic = as_str__2.cljs$lang$arity$variadic;
  return as_str
}();
crate.util.escape_html = function escape_html(text) {
  return clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, crate.util.as_str.call(null, text), "&", "&amp;"), "<", "&lt;"), ">", "&gt;"), '"', "&quot;")
};
crate.util.to_uri = function to_uri(uri) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, /^\w+:.*/, uri))) {
    return uri
  }else {
    return[cljs.core.str(crate.util._STAR_base_url_STAR_), cljs.core.str(uri)].join("")
  }
};
crate.util.url_encode_component = function url_encode_component(s) {
  return encodeURIComponent(crate.util.as_str.call(null, s))
};
crate.util.url_encode = function url_encode(params) {
  return clojure.string.join.call(null, "&", function() {
    var iter__2363__auto____28344 = function iter__28332(s__28333) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__28333__28339 = s__28333;
        while(true) {
          if(cljs.core.seq.call(null, s__28333__28339)) {
            var vec__28340__28341 = cljs.core.first.call(null, s__28333__28339);
            var k__28342 = cljs.core.nth.call(null, vec__28340__28341, 0, null);
            var v__28343 = cljs.core.nth.call(null, vec__28340__28341, 1, null);
            return cljs.core.cons.call(null, [cljs.core.str(crate.util.url_encode_component.call(null, k__28342)), cljs.core.str("="), cljs.core.str(crate.util.url_encode_component.call(null, v__28343))].join(""), iter__28332.call(null, cljs.core.rest.call(null, s__28333__28339)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2363__auto____28344.call(null, params)
  }())
};
crate.util.url = function() {
  var url__delegate = function(args) {
    var params__28347 = cljs.core.last.call(null, args);
    var args__28348 = cljs.core.butlast.call(null, args);
    return[cljs.core.str(crate.util.to_uri.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, args__28348)), cljs.core.str(cljs.core.map_QMARK_.call(null, params__28347) ? [cljs.core.str("?"), cljs.core.str(crate.util.url_encode.call(null, params__28347))].join("") : params__28347)].join("")))].join("")
  };
  var url = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return url__delegate.call(this, args)
  };
  url.cljs$lang$maxFixedArity = 0;
  url.cljs$lang$applyTo = function(arglist__28349) {
    var args = cljs.core.seq(arglist__28349);
    return url__delegate(args)
  };
  url.cljs$lang$arity$variadic = url__delegate;
  return url
}();
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isVersion("9"), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isVersion("9") || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            element[key] = val
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc;
  if(goog.userAgent.WEBKIT) {
    doc = frame.document || frame.contentWindow.document
  }else {
    doc = frame.contentDocument || frame.contentWindow.document
  }
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    for(var i = 0, child;child = root.childNodes[i];i++) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.userAgent.IE) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max__28233 = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max__28233, cljs.core.remove.call(null, function(p1__28231_SHARP_) {
    return max__28233 === p1__28231_SHARP_
  }, coll))
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var union__1 = function(s1) {
    return s1
  };
  var union__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2)
    }
  };
  var union__3 = function() {
    var G__28237__delegate = function(s1, s2, sets) {
      var bubbled_sets__28236 = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets__28236), cljs.core.rest.call(null, bubbled_sets__28236))
    };
    var G__28237 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__28237__delegate.call(this, s1, s2, sets)
    };
    G__28237.cljs$lang$maxFixedArity = 2;
    G__28237.cljs$lang$applyTo = function(arglist__28238) {
      var s1 = cljs.core.first(arglist__28238);
      var s2 = cljs.core.first(cljs.core.next(arglist__28238));
      var sets = cljs.core.rest(cljs.core.next(arglist__28238));
      return G__28237__delegate(s1, s2, sets)
    };
    G__28237.cljs$lang$arity$variadic = G__28237__delegate;
    return G__28237
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$lang$arity$0 = union__0;
  union.cljs$lang$arity$1 = union__1;
  union.cljs$lang$arity$2 = union__2;
  union.cljs$lang$arity$variadic = union__3.cljs$lang$arity$variadic;
  return union
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1
  };
  var intersection__2 = function(s1, s2) {
    while(true) {
      if(cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__28241 = s2;
        var G__28242 = s1;
        s1 = G__28241;
        s2 = G__28242;
        continue
      }else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if(cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result
            }else {
              return cljs.core.disj.call(null, result, item)
            }
          }
        }(s1, s2), s1, s1)
      }
      break
    }
  };
  var intersection__3 = function() {
    var G__28243__delegate = function(s1, s2, sets) {
      var bubbled_sets__28240 = clojure.set.bubble_max_key.call(null, function(p1__28234_SHARP_) {
        return-cljs.core.count.call(null, p1__28234_SHARP_)
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets__28240), cljs.core.rest.call(null, bubbled_sets__28240))
    };
    var G__28243 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__28243__delegate.call(this, s1, s2, sets)
    };
    G__28243.cljs$lang$maxFixedArity = 2;
    G__28243.cljs$lang$applyTo = function(arglist__28244) {
      var s1 = cljs.core.first(arglist__28244);
      var s2 = cljs.core.first(cljs.core.next(arglist__28244));
      var sets = cljs.core.rest(cljs.core.next(arglist__28244));
      return G__28243__delegate(s1, s2, sets)
    };
    G__28243.cljs$lang$arity$variadic = G__28243__delegate;
    return G__28243
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$lang$arity$1 = intersection__1;
  intersection.cljs$lang$arity$2 = intersection__2;
  intersection.cljs$lang$arity$variadic = intersection__3.cljs$lang$arity$variadic;
  return intersection
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1
  };
  var difference__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if(cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item)
        }else {
          return result
        }
      }, s1, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2)
    }
  };
  var difference__3 = function() {
    var G__28245__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2))
    };
    var G__28245 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__28245__delegate.call(this, s1, s2, sets)
    };
    G__28245.cljs$lang$maxFixedArity = 2;
    G__28245.cljs$lang$applyTo = function(arglist__28246) {
      var s1 = cljs.core.first(arglist__28246);
      var s2 = cljs.core.first(cljs.core.next(arglist__28246));
      var sets = cljs.core.rest(cljs.core.next(arglist__28246));
      return G__28245__delegate(s1, s2, sets)
    };
    G__28245.cljs$lang$arity$variadic = G__28245__delegate;
    return G__28245
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$lang$arity$1 = difference__1;
  difference.cljs$lang$arity$2 = difference__2;
  difference.cljs$lang$arity$variadic = difference__3.cljs$lang$arity$variadic;
  return difference
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if(cljs.core.truth_(pred.call(null, k))) {
      return s
    }else {
      return cljs.core.disj.call(null, s, k)
    }
  }, xset, xset)
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__28247_SHARP_) {
    return cljs.core.select_keys.call(null, p1__28247_SHARP_, ks)
  }, xrel))
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__28255) {
    var vec__28256__28257 = p__28255;
    var old__28258 = cljs.core.nth.call(null, vec__28256__28257, 0, null);
    var new__28259 = cljs.core.nth.call(null, vec__28256__28257, 1, null);
    if(function() {
      var and__3822__auto____28260 = cljs.core.not_EQ_.call(null, old__28258, new__28259);
      if(and__3822__auto____28260) {
        return cljs.core.contains_QMARK_.call(null, m, old__28258)
      }else {
        return and__3822__auto____28260
      }
    }()) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, m, new__28259, cljs.core._lookup.call(null, m, old__28258, null)), old__28258)
    }else {
      return m
    }
  }, map, kmap)
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__28248_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__28248_SHARP_, kmap)
  }, xrel))
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik__28262 = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik__28262, cljs.core.conj.call(null, cljs.core._lookup.call(null, m, ik__28262, cljs.core.PersistentHashSet.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, xrel)
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m, p__28272) {
    var vec__28273__28274 = p__28272;
    var k__28275 = cljs.core.nth.call(null, vec__28273__28274, 0, null);
    var v__28276 = cljs.core.nth.call(null, vec__28273__28274, 1, null);
    return cljs.core.assoc.call(null, m, v__28276, k__28275)
  }, cljs.core.ObjMap.EMPTY, m)
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if(function() {
      var and__3822__auto____28293 = cljs.core.seq.call(null, xrel);
      if(and__3822__auto____28293) {
        return cljs.core.seq.call(null, yrel)
      }else {
        return and__3822__auto____28293
      }
    }()) {
      var ks__28295 = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__28294__28296 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel], true) : cljs.core.PersistentVector.fromArray([yrel, xrel], true);
      var r__28297 = cljs.core.nth.call(null, vec__28294__28296, 0, null);
      var s__28298 = cljs.core.nth.call(null, vec__28294__28296, 1, null);
      var idx__28299 = clojure.set.index.call(null, r__28297, ks__28295);
      return cljs.core.reduce.call(null, function(ret, x) {
        var found__28300 = idx__28299.call(null, cljs.core.select_keys.call(null, x, ks__28295));
        if(cljs.core.truth_(found__28300)) {
          return cljs.core.reduce.call(null, function(p1__28263_SHARP_, p2__28264_SHARP_) {
            return cljs.core.conj.call(null, p1__28263_SHARP_, cljs.core.merge.call(null, p2__28264_SHARP_, x))
          }, ret, found__28300)
        }else {
          return ret
        }
      }, cljs.core.PersistentHashSet.EMPTY, s__28298)
    }else {
      return cljs.core.PersistentHashSet.EMPTY
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__28301__28302 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel, clojure.set.map_invert.call(null, km)], true) : cljs.core.PersistentVector.fromArray([yrel, xrel, km], true);
    var r__28303 = cljs.core.nth.call(null, vec__28301__28302, 0, null);
    var s__28304 = cljs.core.nth.call(null, vec__28301__28302, 1, null);
    var k__28305 = cljs.core.nth.call(null, vec__28301__28302, 2, null);
    var idx__28306 = clojure.set.index.call(null, r__28303, cljs.core.vals.call(null, k__28305));
    return cljs.core.reduce.call(null, function(ret, x) {
      var found__28307 = idx__28306.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k__28305)), k__28305));
      if(cljs.core.truth_(found__28307)) {
        return cljs.core.reduce.call(null, function(p1__28265_SHARP_, p2__28266_SHARP_) {
          return cljs.core.conj.call(null, p1__28265_SHARP_, cljs.core.merge.call(null, p2__28266_SHARP_, x))
        }, ret, found__28307)
      }else {
        return ret
      }
    }, cljs.core.PersistentHashSet.EMPTY, s__28304)
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$2 = join__2;
  join.cljs$lang$arity$3 = join__3;
  return join
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  var and__3822__auto____28310 = cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2);
  if(and__3822__auto____28310) {
    return cljs.core.every_QMARK_.call(null, function(p1__28277_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set2, p1__28277_SHARP_)
    }, set1)
  }else {
    return and__3822__auto____28310
  }
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  var and__3822__auto____28312 = cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2);
  if(and__3822__auto____28312) {
    return cljs.core.every_QMARK_.call(null, function(p1__28308_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set1, p1__28308_SHARP_)
    }, set2)
  }else {
    return and__3822__auto____28312
  }
};
goog.provide("crate.binding");
goog.require("cljs.core");
goog.require("clojure.set");
crate.binding.SubAtom = function(atm, path, prevhash, watches) {
  this.atm = atm;
  this.path = path;
  this.prevhash = prevhash;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690678784
};
crate.binding.SubAtom.cljs$lang$type = true;
crate.binding.SubAtom.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "crate.binding/SubAtom")
};
crate.binding.SubAtom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__28002 = this;
  return goog.getUid(this$)
};
crate.binding.SubAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__28003 = this;
  var G__28004__28005 = cljs.core.seq.call(null, this__28003.watches);
  if(G__28004__28005) {
    var G__28007__28009 = cljs.core.first.call(null, G__28004__28005);
    var vec__28008__28010 = G__28007__28009;
    var key__28011 = cljs.core.nth.call(null, vec__28008__28010, 0, null);
    var f__28012 = cljs.core.nth.call(null, vec__28008__28010, 1, null);
    var G__28004__28013 = G__28004__28005;
    var G__28007__28014 = G__28007__28009;
    var G__28004__28015 = G__28004__28013;
    while(true) {
      var vec__28016__28017 = G__28007__28014;
      var key__28018 = cljs.core.nth.call(null, vec__28016__28017, 0, null);
      var f__28019 = cljs.core.nth.call(null, vec__28016__28017, 1, null);
      var G__28004__28020 = G__28004__28015;
      f__28019.call(null, key__28018, this$, oldval, newval);
      var temp__3974__auto____28021 = cljs.core.next.call(null, G__28004__28020);
      if(temp__3974__auto____28021) {
        var G__28004__28022 = temp__3974__auto____28021;
        var G__28028 = cljs.core.first.call(null, G__28004__28022);
        var G__28029 = G__28004__28022;
        G__28007__28014 = G__28028;
        G__28004__28015 = G__28029;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.binding.SubAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__28023 = this;
  if(cljs.core.truth_(f)) {
    return this$.watches = cljs.core.assoc.call(null, this__28023.watches, key, f)
  }else {
    return null
  }
};
crate.binding.SubAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__28024 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__28024.watches, key)
};
crate.binding.SubAtom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__28025 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<SubAtom: "], true), cljs.core._pr_seq.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, this__28025.atm), this__28025.path), opts), ">")
};
crate.binding.SubAtom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__28026 = this;
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, this__28026.atm), this__28026.path)
};
crate.binding.SubAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__28027 = this;
  return o === other
};
crate.binding.SubAtom;
crate.binding.subatom = function subatom(atm, path) {
  var path__28043 = cljs.core.coll_QMARK_.call(null, path) ? path : cljs.core.PersistentVector.fromArray([path], true);
  var vec__28042__28044 = cljs.core.instance_QMARK_.call(null, crate.binding.SubAtom, atm) ? cljs.core.PersistentVector.fromArray([atm.atm, cljs.core.concat.call(null, atm.path, path__28043)], true) : cljs.core.PersistentVector.fromArray([atm, path__28043], true);
  var atm__28045 = cljs.core.nth.call(null, vec__28042__28044, 0, null);
  var path__28046 = cljs.core.nth.call(null, vec__28042__28044, 1, null);
  var k__28047 = cljs.core.gensym.call(null, "subatom");
  var sa__28048 = new crate.binding.SubAtom(atm__28045, path__28046, cljs.core.hash.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, atm__28045), path__28046)), null);
  cljs.core.add_watch.call(null, atm__28045, k__28047, function(_28049, _, ov, nv) {
    var latest__28050 = cljs.core.get_in.call(null, nv, path__28046);
    var prev__28051 = cljs.core.get_in.call(null, ov, path__28046);
    var latest_hash__28052 = cljs.core.hash.call(null, latest__28050);
    if(function() {
      var and__3822__auto____28053 = cljs.core.not_EQ_.call(null, sa__28048.prevhash, latest_hash__28052);
      if(and__3822__auto____28053) {
        return cljs.core.not_EQ_.call(null, prev__28051, latest__28050)
      }else {
        return and__3822__auto____28053
      }
    }()) {
      sa__28048.prevhash = latest_hash__28052;
      return cljs.core._notify_watches.call(null, sa__28048, cljs.core.get_in.call(null, ov, path__28046), latest__28050)
    }else {
      return null
    }
  });
  return sa__28048
};
crate.binding.sub_reset_BANG_ = function sub_reset_BANG_(sa, new_value) {
  cljs.core.swap_BANG_.call(null, sa.atm, cljs.core.assoc_in, sa.path, new_value);
  return new_value
};
crate.binding.sub_swap_BANG_ = function() {
  var sub_swap_BANG_ = null;
  var sub_swap_BANG___2 = function(sa, f) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa)))
  };
  var sub_swap_BANG___3 = function(sa, f, x) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa), x))
  };
  var sub_swap_BANG___4 = function(sa, f, x, y) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa), x, y))
  };
  var sub_swap_BANG___5 = function(sa, f, x, y, z) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa), x, y, z))
  };
  var sub_swap_BANG___6 = function() {
    var G__28054__delegate = function(sa, f, x, y, z, more) {
      return crate.binding.sub_reset_BANG_.call(null, sa, cljs.core.apply.call(null, f, cljs.core.deref.call(null, sa), x, y, z, more))
    };
    var G__28054 = function(sa, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__28054__delegate.call(this, sa, f, x, y, z, more)
    };
    G__28054.cljs$lang$maxFixedArity = 5;
    G__28054.cljs$lang$applyTo = function(arglist__28055) {
      var sa = cljs.core.first(arglist__28055);
      var f = cljs.core.first(cljs.core.next(arglist__28055));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__28055)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__28055))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__28055)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__28055)))));
      return G__28054__delegate(sa, f, x, y, z, more)
    };
    G__28054.cljs$lang$arity$variadic = G__28054__delegate;
    return G__28054
  }();
  sub_swap_BANG_ = function(sa, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return sub_swap_BANG___2.call(this, sa, f);
      case 3:
        return sub_swap_BANG___3.call(this, sa, f, x);
      case 4:
        return sub_swap_BANG___4.call(this, sa, f, x, y);
      case 5:
        return sub_swap_BANG___5.call(this, sa, f, x, y, z);
      default:
        return sub_swap_BANG___6.cljs$lang$arity$variadic(sa, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  sub_swap_BANG_.cljs$lang$maxFixedArity = 5;
  sub_swap_BANG_.cljs$lang$applyTo = sub_swap_BANG___6.cljs$lang$applyTo;
  sub_swap_BANG_.cljs$lang$arity$2 = sub_swap_BANG___2;
  sub_swap_BANG_.cljs$lang$arity$3 = sub_swap_BANG___3;
  sub_swap_BANG_.cljs$lang$arity$4 = sub_swap_BANG___4;
  sub_swap_BANG_.cljs$lang$arity$5 = sub_swap_BANG___5;
  sub_swap_BANG_.cljs$lang$arity$variadic = sub_swap_BANG___6.cljs$lang$arity$variadic;
  return sub_swap_BANG_
}();
crate.binding.notify = function notify(w, o, v) {
  return cljs.core._notify_watches.call(null, w, o, v)
};
crate.binding.bindable_coll = {};
crate.binding.bindable = {};
crate.binding._value = function _value(this$) {
  if(function() {
    var and__3822__auto____28060 = this$;
    if(and__3822__auto____28060) {
      return this$.crate$binding$bindable$_value$arity$1
    }else {
      return and__3822__auto____28060
    }
  }()) {
    return this$.crate$binding$bindable$_value$arity$1(this$)
  }else {
    var x__2264__auto____28061 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____28062 = crate.binding._value[goog.typeOf(x__2264__auto____28061)];
      if(or__3824__auto____28062) {
        return or__3824__auto____28062
      }else {
        var or__3824__auto____28063 = crate.binding._value["_"];
        if(or__3824__auto____28063) {
          return or__3824__auto____28063
        }else {
          throw cljs.core.missing_protocol.call(null, "bindable.-value", this$);
        }
      }
    }().call(null, this$)
  }
};
crate.binding._on_change = function _on_change(this$, func) {
  if(function() {
    var and__3822__auto____28068 = this$;
    if(and__3822__auto____28068) {
      return this$.crate$binding$bindable$_on_change$arity$2
    }else {
      return and__3822__auto____28068
    }
  }()) {
    return this$.crate$binding$bindable$_on_change$arity$2(this$, func)
  }else {
    var x__2264__auto____28069 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____28070 = crate.binding._on_change[goog.typeOf(x__2264__auto____28069)];
      if(or__3824__auto____28070) {
        return or__3824__auto____28070
      }else {
        var or__3824__auto____28071 = crate.binding._on_change["_"];
        if(or__3824__auto____28071) {
          return or__3824__auto____28071
        }else {
          throw cljs.core.missing_protocol.call(null, "bindable.-on-change", this$);
        }
      }
    }().call(null, this$, func)
  }
};
crate.binding.atom_binding = function(atm, value_func) {
  this.atm = atm;
  this.value_func = value_func
};
crate.binding.atom_binding.cljs$lang$type = true;
crate.binding.atom_binding.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "crate.binding/atom-binding")
};
crate.binding.atom_binding.prototype.crate$binding$bindable$ = true;
crate.binding.atom_binding.prototype.crate$binding$bindable$_value$arity$1 = function(this$) {
  var this__28072 = this;
  return this__28072.value_func.call(null, cljs.core.deref.call(null, this__28072.atm))
};
crate.binding.atom_binding.prototype.crate$binding$bindable$_on_change$arity$2 = function(this$, func) {
  var this__28073 = this;
  return cljs.core.add_watch.call(null, this__28073.atm, cljs.core.gensym.call(null, "atom-binding"), function() {
    return func.call(null, crate.binding._value.call(null, this$))
  })
};
crate.binding.atom_binding;
crate.binding.notifier = function(watches) {
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147483648
};
crate.binding.notifier.cljs$lang$type = true;
crate.binding.notifier.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "crate.binding/notifier")
};
crate.binding.notifier.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__28074 = this;
  var G__28075__28076 = cljs.core.seq.call(null, this__28074.watches);
  if(G__28075__28076) {
    var G__28078__28080 = cljs.core.first.call(null, G__28075__28076);
    var vec__28079__28081 = G__28078__28080;
    var key__28082 = cljs.core.nth.call(null, vec__28079__28081, 0, null);
    var f__28083 = cljs.core.nth.call(null, vec__28079__28081, 1, null);
    var G__28075__28084 = G__28075__28076;
    var G__28078__28085 = G__28078__28080;
    var G__28075__28086 = G__28075__28084;
    while(true) {
      var vec__28087__28088 = G__28078__28085;
      var key__28089 = cljs.core.nth.call(null, vec__28087__28088, 0, null);
      var f__28090 = cljs.core.nth.call(null, vec__28087__28088, 1, null);
      var G__28075__28091 = G__28075__28086;
      f__28090.call(null, key__28089, this$, oldval, newval);
      var temp__3974__auto____28092 = cljs.core.next.call(null, G__28075__28091);
      if(temp__3974__auto____28092) {
        var G__28075__28093 = temp__3974__auto____28092;
        var G__28096 = cljs.core.first.call(null, G__28075__28093);
        var G__28097 = G__28075__28093;
        G__28078__28085 = G__28096;
        G__28075__28086 = G__28097;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.binding.notifier.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__28094 = this;
  return this$.watches = cljs.core.assoc.call(null, this__28094.watches, key, f)
};
crate.binding.notifier.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__28095 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__28095.watches, key)
};
crate.binding.notifier;
crate.binding.bound_collection = function(atm, notif, opts, stuff) {
  this.atm = atm;
  this.notif = notif;
  this.opts = opts;
  this.stuff = stuff
};
crate.binding.bound_collection.cljs$lang$type = true;
crate.binding.bound_collection.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "crate.binding/bound-collection")
};
crate.binding.bound_collection.prototype.crate$binding$bindable$ = true;
crate.binding.bound_collection.prototype.crate$binding$bindable$_value$arity$1 = function(this$) {
  var this__28098 = this;
  return cljs.core.map.call(null, "\ufdd0'elem", cljs.core.vals.call(null, this$.stuff))
};
crate.binding.bound_collection.prototype.crate$binding$bindable$_on_change$arity$2 = function(this$, func) {
  var this__28099 = this;
  return cljs.core.add_watch.call(null, this__28099.notif, cljs.core.gensym.call(null, "bound-coll"), function(_28101, _28102, _, p__28100) {
    var vec__28103__28104 = p__28100;
    var event__28105 = cljs.core.nth.call(null, vec__28103__28104, 0, null);
    var el__28106 = cljs.core.nth.call(null, vec__28103__28104, 1, null);
    var v__28107 = cljs.core.nth.call(null, vec__28103__28104, 2, null);
    return func.call(null, event__28105, el__28106, v__28107)
  })
};
crate.binding.bound_collection.prototype.crate$binding$bindable_coll$ = true;
crate.binding.bound_collection;
crate.binding.opt = function opt(bc, k) {
  return bc.opts.call(null, k)
};
crate.binding.bc_add = function bc_add(bc, path, key) {
  var sa__28110 = crate.binding.subatom.call(null, bc.atm, path);
  var elem__28111 = crate.binding.opt.call(null, bc, "\ufdd0'as").call(null, sa__28110);
  bc.stuff = cljs.core.assoc.call(null, bc.stuff, key, cljs.core.ObjMap.fromObject(["\ufdd0'elem", "\ufdd0'subatom"], {"\ufdd0'elem":elem__28111, "\ufdd0'subatom":sa__28110}));
  return crate.binding.notify.call(null, bc.notif, null, cljs.core.PersistentVector.fromArray(["\ufdd0'add", elem__28111, cljs.core.deref.call(null, sa__28110)], true))
};
crate.binding.bc_remove = function bc_remove(bc, key) {
  var notif__28114 = bc.notif;
  var prev__28115 = bc.stuff.call(null, key);
  bc.stuff = cljs.core.dissoc.call(null, bc.stuff, key);
  return crate.binding.notify.call(null, bc.notif, null, cljs.core.PersistentVector.fromArray(["\ufdd0'remove", (new cljs.core.Keyword("\ufdd0'elem")).call(null, prev__28115), null], true))
};
crate.binding.__GT_indexed = function __GT_indexed(coll) {
  if(cljs.core.map_QMARK_.call(null, coll)) {
    return cljs.core.seq.call(null, coll)
  }else {
    if(cljs.core.set_QMARK_.call(null, coll)) {
      return cljs.core.map.call(null, cljs.core.juxt.call(null, cljs.core.identity, cljs.core.identity), coll)
    }else {
      if("\ufdd0'else") {
        return cljs.core.map_indexed.call(null, cljs.core.vector, coll)
      }else {
        return null
      }
    }
  }
};
crate.binding.__GT_keyed = function __GT_keyed(coll, keyfn) {
  return cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.map.call(null, keyfn, crate.binding.__GT_indexed.call(null, coll)))
};
crate.binding.__GT_path = function() {
  var __GT_path__delegate = function(bc, segs) {
    return cljs.core.concat.call(null, function() {
      var or__3824__auto____28117 = crate.binding.opt.call(null, bc, "\ufdd0'path");
      if(cljs.core.truth_(or__3824__auto____28117)) {
        return or__3824__auto____28117
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), segs)
  };
  var __GT_path = function(bc, var_args) {
    var segs = null;
    if(goog.isDef(var_args)) {
      segs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return __GT_path__delegate.call(this, bc, segs)
  };
  __GT_path.cljs$lang$maxFixedArity = 1;
  __GT_path.cljs$lang$applyTo = function(arglist__28118) {
    var bc = cljs.core.first(arglist__28118);
    var segs = cljs.core.rest(arglist__28118);
    return __GT_path__delegate(bc, segs)
  };
  __GT_path.cljs$lang$arity$variadic = __GT_path__delegate;
  return __GT_path
}();
crate.binding.bc_compare = function bc_compare(bc, neue) {
  var prev__28136 = bc.stuff;
  var pset__28137 = cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.keys.call(null, prev__28136));
  var nset__28138 = crate.binding.__GT_keyed.call(null, neue, crate.binding.opt.call(null, bc, "\ufdd0'keyfn"));
  var added__28139 = cljs.core.into.call(null, cljs.core.sorted_set.call(null), clojure.set.difference.call(null, nset__28138, pset__28137));
  var removed__28140 = cljs.core.into.call(null, cljs.core.sorted_set.call(null), clojure.set.difference.call(null, pset__28137, nset__28138));
  var G__28141__28142 = cljs.core.seq.call(null, added__28139);
  if(G__28141__28142) {
    var a__28143 = cljs.core.first.call(null, G__28141__28142);
    var G__28141__28144 = G__28141__28142;
    while(true) {
      crate.binding.bc_add.call(null, bc, a__28143, a__28143);
      var temp__3974__auto____28145 = cljs.core.next.call(null, G__28141__28144);
      if(temp__3974__auto____28145) {
        var G__28141__28146 = temp__3974__auto____28145;
        var G__28153 = cljs.core.first.call(null, G__28141__28146);
        var G__28154 = G__28141__28146;
        a__28143 = G__28153;
        G__28141__28144 = G__28154;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__28147__28148 = cljs.core.seq.call(null, removed__28140);
  if(G__28147__28148) {
    var r__28149 = cljs.core.first.call(null, G__28147__28148);
    var G__28147__28150 = G__28147__28148;
    while(true) {
      crate.binding.bc_remove.call(null, bc, r__28149);
      var temp__3974__auto____28151 = cljs.core.next.call(null, G__28147__28150);
      if(temp__3974__auto____28151) {
        var G__28147__28152 = temp__3974__auto____28151;
        var G__28155 = cljs.core.first.call(null, G__28147__28152);
        var G__28156 = G__28147__28152;
        r__28149 = G__28155;
        G__28147__28150 = G__28156;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.binding.bound_coll = function() {
  var bound_coll__delegate = function(atm, p__28157) {
    var vec__28172__28173 = p__28157;
    var path__28174 = cljs.core.nth.call(null, vec__28172__28173, 0, null);
    var opts__28175 = cljs.core.nth.call(null, vec__28172__28173, 1, null);
    var vec__28176__28177 = cljs.core.truth_(opts__28175) ? cljs.core.PersistentVector.fromArray([path__28174, opts__28175], true) : cljs.core.PersistentVector.fromArray([null, path__28174], true);
    var path__28178 = cljs.core.nth.call(null, vec__28176__28177, 0, null);
    var opts__28179 = cljs.core.nth.call(null, vec__28176__28177, 1, null);
    var atm__28180 = cljs.core.not.call(null, path__28178) ? atm : crate.binding.subatom.call(null, atm, path__28178);
    var opts__28181 = cljs.core.assoc.call(null, opts__28179, "\ufdd0'path", path__28178);
    var opts__28182 = cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'keyfn")).call(null, opts__28181)) ? cljs.core.assoc.call(null, opts__28181, "\ufdd0'keyfn", cljs.core.first) : cljs.core.assoc.call(null, opts__28181, "\ufdd0'keyfn", cljs.core.comp.call(null, (new cljs.core.Keyword("\ufdd0'keyfn")).call(null, opts__28181), cljs.core.second));
    var bc__28183 = new crate.binding.bound_collection(atm__28180, new crate.binding.notifier(null), opts__28182, cljs.core.sorted_map.call(null));
    cljs.core.add_watch.call(null, atm__28180, cljs.core.gensym.call(null, "bound-coll"), function(_28184, _28185, _, neue) {
      return crate.binding.bc_compare.call(null, bc__28183, neue)
    });
    crate.binding.bc_compare.call(null, bc__28183, cljs.core.deref.call(null, atm__28180));
    return bc__28183
  };
  var bound_coll = function(atm, var_args) {
    var p__28157 = null;
    if(goog.isDef(var_args)) {
      p__28157 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return bound_coll__delegate.call(this, atm, p__28157)
  };
  bound_coll.cljs$lang$maxFixedArity = 1;
  bound_coll.cljs$lang$applyTo = function(arglist__28186) {
    var atm = cljs.core.first(arglist__28186);
    var p__28157 = cljs.core.rest(arglist__28186);
    return bound_coll__delegate(atm, p__28157)
  };
  bound_coll.cljs$lang$arity$variadic = bound_coll__delegate;
  return bound_coll
}();
crate.binding.map_bound = function() {
  var map_bound__delegate = function(as, atm, p__28187) {
    var vec__28197__28198 = p__28187;
    var opts__28199 = cljs.core.nth.call(null, vec__28197__28198, 0, null);
    var opts__28200 = cljs.core.assoc.call(null, opts__28199, "\ufdd0'as", as);
    var atm__28201 = cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'path")).call(null, opts__28200)) ? atm : crate.binding.subatom.call(null, atm, (new cljs.core.Keyword("\ufdd0'path")).call(null, opts__28200));
    var opts__28202 = cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'keyfn")).call(null, opts__28200)) ? cljs.core.assoc.call(null, opts__28200, "\ufdd0'keyfn", cljs.core.first) : cljs.core.assoc.call(null, opts__28200, "\ufdd0'keyfn", cljs.core.comp.call(null, (new cljs.core.Keyword("\ufdd0'keyfn")).call(null, opts__28200), cljs.core.second));
    var bc__28203 = new crate.binding.bound_collection(atm__28201, new crate.binding.notifier(null), opts__28202, cljs.core.sorted_map.call(null));
    cljs.core.add_watch.call(null, atm__28201, cljs.core.gensym.call(null, "bound-coll"), function(_28204, _28205, _, neue) {
      return crate.binding.bc_compare.call(null, bc__28203, neue)
    });
    crate.binding.bc_compare.call(null, bc__28203, cljs.core.deref.call(null, atm__28201));
    return bc__28203
  };
  var map_bound = function(as, atm, var_args) {
    var p__28187 = null;
    if(goog.isDef(var_args)) {
      p__28187 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return map_bound__delegate.call(this, as, atm, p__28187)
  };
  map_bound.cljs$lang$maxFixedArity = 2;
  map_bound.cljs$lang$applyTo = function(arglist__28206) {
    var as = cljs.core.first(arglist__28206);
    var atm = cljs.core.first(cljs.core.next(arglist__28206));
    var p__28187 = cljs.core.rest(cljs.core.next(arglist__28206));
    return map_bound__delegate(as, atm, p__28187)
  };
  map_bound.cljs$lang$arity$variadic = map_bound__delegate;
  return map_bound
}();
crate.binding.binding_QMARK_ = function binding_QMARK_(b) {
  var G__28210__28211 = b;
  if(G__28210__28211) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____28212 = null;
      if(cljs.core.truth_(or__3824__auto____28212)) {
        return or__3824__auto____28212
      }else {
        return G__28210__28211.crate$binding$bindable$
      }
    }())) {
      return true
    }else {
      if(!G__28210__28211.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, crate.binding.bindable, G__28210__28211)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, crate.binding.bindable, G__28210__28211)
  }
};
crate.binding.binding_coll_QMARK_ = function binding_coll_QMARK_(b) {
  var G__28216__28217 = b;
  if(G__28216__28217) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____28218 = null;
      if(cljs.core.truth_(or__3824__auto____28218)) {
        return or__3824__auto____28218
      }else {
        return G__28216__28217.crate$binding$bindable_coll$
      }
    }())) {
      return true
    }else {
      if(!G__28216__28217.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, crate.binding.bindable_coll, G__28216__28217)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, crate.binding.bindable_coll, G__28216__28217)
  }
};
crate.binding.value = function value(b) {
  return crate.binding._value.call(null, b)
};
crate.binding.index = function index(sub_atom) {
  return cljs.core.last.call(null, sub_atom.path)
};
crate.binding.on_change = function on_change(b, func) {
  return crate.binding._on_change.call(null, b, func)
};
crate.binding.bound = function() {
  var bound__delegate = function(atm, p__28219) {
    var vec__28225__28226 = p__28219;
    var func__28227 = cljs.core.nth.call(null, vec__28225__28226, 0, null);
    var func__28229 = function() {
      var or__3824__auto____28228 = func__28227;
      if(cljs.core.truth_(or__3824__auto____28228)) {
        return or__3824__auto____28228
      }else {
        return cljs.core.identity
      }
    }();
    return new crate.binding.atom_binding(atm, func__28229)
  };
  var bound = function(atm, var_args) {
    var p__28219 = null;
    if(goog.isDef(var_args)) {
      p__28219 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return bound__delegate.call(this, atm, p__28219)
  };
  bound.cljs$lang$maxFixedArity = 1;
  bound.cljs$lang$applyTo = function(arglist__28230) {
    var atm = cljs.core.first(arglist__28230);
    var p__28219 = cljs.core.rest(arglist__28230);
    return bound__delegate(atm, p__28219)
  };
  bound.cljs$lang$arity$variadic = bound__delegate;
  return bound
}();
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isVersion(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var scrollEl = dom.getDocumentScrollElement();
  var inContainer;
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el.scrollWidth != el.clientWidth || el.scrollHeight != el.clientHeight) && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
      inContainer = inContainer || el != scrollEl
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  if(goog.userAgent.WEBKIT) {
    visibleRect.left += scrollX;
    visibleRect.top += scrollY
  }else {
    visibleRect.left = Math.max(visibleRect.left, scrollX);
    visibleRect.top = Math.max(visibleRect.top, scrollY)
  }
  if(!inContainer || goog.userAgent.WEBKIT) {
    visibleRect.right += scrollX;
    visibleRect.bottom += scrollY
  }
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return new goog.math.Size(element.offsetWidth, element.offsetHeight)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var originalWidth = element.offsetWidth;
  var originalHeight = element.offsetHeight;
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return new goog.math.Size(originalWidth, originalHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function() {
  var mockElement = goog.dom.createElement("div");
  mockElement.style.cssText = "visibility:hidden;overflow:scroll;" + "position:absolute;top:0;width:100px;height:100px";
  goog.dom.appendChild(goog.dom.getDocument().body, mockElement);
  var width = mockElement.offsetWidth - mockElement.clientWidth;
  goog.dom.removeNode(mockElement);
  return width
};
goog.provide("crate.compiler");
goog.require("cljs.core");
goog.require("crate.binding");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("goog.dom");
crate.compiler.xmlns = cljs.core.ObjMap.fromObject(["\ufdd0'xhtml", "\ufdd0'svg"], {"\ufdd0'xhtml":"http://www.w3.org/1999/xhtml", "\ufdd0'svg":"http://www.w3.org/2000/svg"});
crate.compiler.group_id = cljs.core.atom.call(null, 0);
crate.compiler.bindings = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
crate.compiler.capture_binding = function capture_binding(tag, b) {
  return cljs.core.swap_BANG_.call(null, crate.compiler.bindings, cljs.core.conj, cljs.core.PersistentVector.fromArray([tag, b], true))
};
crate.compiler.as_content = function as_content(parent, content) {
  var G__27746__27747 = cljs.core.seq.call(null, content);
  if(G__27746__27747) {
    var c__27748 = cljs.core.first.call(null, G__27746__27747);
    var G__27746__27749 = G__27746__27747;
    while(true) {
      var child__27750 = c__27748 == null ? null : cljs.core.map_QMARK_.call(null, c__27748) ? function() {
        throw"Maps cannot be used as content";
      }() : cljs.core.string_QMARK_.call(null, c__27748) ? goog.dom.createTextNode(c__27748) : cljs.core.vector_QMARK_.call(null, c__27748) ? crate.compiler.elem_factory.call(null, c__27748) : cljs.core.seq_QMARK_.call(null, c__27748) ? as_content.call(null, parent, c__27748) : cljs.core.truth_(crate.binding.binding_coll_QMARK_.call(null, c__27748)) ? function() {
        crate.compiler.capture_binding.call(null, "\ufdd0'coll", c__27748);
        return as_content.call(null, parent, cljs.core.PersistentVector.fromArray([crate.binding.value.call(null, c__27748)], true))
      }() : cljs.core.truth_(crate.binding.binding_QMARK_.call(null, c__27748)) ? function() {
        crate.compiler.capture_binding.call(null, "\ufdd0'text", c__27748);
        return as_content.call(null, parent, cljs.core.PersistentVector.fromArray([crate.binding.value.call(null, c__27748)], true))
      }() : cljs.core.truth_(c__27748.nodeName) ? c__27748 : cljs.core.truth_(c__27748.get) ? c__27748.get(0) : "\ufdd0'else" ? goog.dom.createTextNode([cljs.core.str(c__27748)].join("")) : null;
      if(cljs.core.truth_(child__27750)) {
        goog.dom.appendChild(parent, child__27750)
      }else {
      }
      var temp__3974__auto____27751 = cljs.core.next.call(null, G__27746__27749);
      if(temp__3974__auto____27751) {
        var G__27746__27752 = temp__3974__auto____27751;
        var G__27753 = cljs.core.first.call(null, G__27746__27752);
        var G__27754 = G__27746__27752;
        c__27748 = G__27753;
        G__27746__27749 = G__27754;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.compiler.dom_binding = function() {
  var method_table__2438__auto____27755 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  var prefer_table__2439__auto____27756 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  var method_cache__2440__auto____27757 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  var cached_hierarchy__2441__auto____27758 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  var hierarchy__2442__auto____27759 = cljs.core._lookup.call(null, cljs.core.ObjMap.EMPTY, "\ufdd0'hierarchy", cljs.core.global_hierarchy);
  return new cljs.core.MultiFn("dom-binding", function(type, _27760, _) {
    return type
  }, "\ufdd0'default", hierarchy__2442__auto____27759, method_table__2438__auto____27755, prefer_table__2439__auto____27756, method_cache__2440__auto____27757, cached_hierarchy__2441__auto____27758)
}();
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0'text", function(_, b, elem) {
  return crate.binding.on_change.call(null, b, function(v) {
    goog.dom.removeChildren(elem);
    return crate.compiler.as_content.call(null, elem, cljs.core.PersistentVector.fromArray([v], true))
  })
});
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0'attr", function(_, p__27761, elem) {
  var vec__27762__27763 = p__27761;
  var k__27764 = cljs.core.nth.call(null, vec__27762__27763, 0, null);
  var b__27765 = cljs.core.nth.call(null, vec__27762__27763, 1, null);
  return crate.binding.on_change.call(null, b__27765, function(v) {
    return crate.compiler.dom_attr.call(null, elem, k__27764, v)
  })
});
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0'style", function(_, p__27766, elem) {
  var vec__27767__27768 = p__27766;
  var k__27769 = cljs.core.nth.call(null, vec__27767__27768, 0, null);
  var b__27770 = cljs.core.nth.call(null, vec__27767__27768, 1, null);
  return crate.binding.on_change.call(null, b__27770, function(v) {
    if(cljs.core.truth_(k__27769)) {
      return crate.compiler.dom_style.call(null, elem, k__27769, v)
    }else {
      return crate.compiler.dom_style.call(null, elem, v)
    }
  })
});
crate.compiler.dom_add = function dom_add(bc, parent, elem, v) {
  var temp__3971__auto____27773 = crate.binding.opt.call(null, bc, "\ufdd0'add");
  if(cljs.core.truth_(temp__3971__auto____27773)) {
    var adder__27774 = temp__3971__auto____27773;
    return adder__27774.call(null, parent, elem, v)
  }else {
    return goog.dom.appendChild(parent, elem)
  }
};
crate.compiler.dom_remove = function dom_remove(bc, elem) {
  var temp__3971__auto____27777 = crate.binding.opt.call(null, bc, "\ufdd0'remove");
  if(cljs.core.truth_(temp__3971__auto____27777)) {
    var remover__27778 = temp__3971__auto____27777;
    return remover__27778.call(null, elem)
  }else {
    return goog.dom.removeNode(elem)
  }
};
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0'coll", function(_, bc, parent) {
  return crate.binding.on_change.call(null, bc, function(type, elem, v) {
    var pred__27779__27782 = cljs.core._EQ_;
    var expr__27780__27783 = type;
    if(pred__27779__27782.call(null, "\ufdd0'add", expr__27780__27783)) {
      return crate.compiler.dom_add.call(null, bc, parent, elem, v)
    }else {
      if(pred__27779__27782.call(null, "\ufdd0'remove", expr__27780__27783)) {
        return crate.compiler.dom_remove.call(null, bc, elem)
      }else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__27780__27783)].join(""));
      }
    }
  })
});
crate.compiler.handle_bindings = function handle_bindings(bs, elem) {
  var G__27803__27804 = cljs.core.seq.call(null, bs);
  if(G__27803__27804) {
    var G__27806__27808 = cljs.core.first.call(null, G__27803__27804);
    var vec__27807__27809 = G__27806__27808;
    var type__27810 = cljs.core.nth.call(null, vec__27807__27809, 0, null);
    var b__27811 = cljs.core.nth.call(null, vec__27807__27809, 1, null);
    var G__27803__27812 = G__27803__27804;
    var G__27806__27813 = G__27806__27808;
    var G__27803__27814 = G__27803__27812;
    while(true) {
      var vec__27815__27816 = G__27806__27813;
      var type__27817 = cljs.core.nth.call(null, vec__27815__27816, 0, null);
      var b__27818 = cljs.core.nth.call(null, vec__27815__27816, 1, null);
      var G__27803__27819 = G__27803__27814;
      crate.compiler.dom_binding.call(null, type__27817, b__27818, elem);
      var temp__3974__auto____27820 = cljs.core.next.call(null, G__27803__27819);
      if(temp__3974__auto____27820) {
        var G__27803__27821 = temp__3974__auto____27820;
        var G__27822 = cljs.core.first.call(null, G__27803__27821);
        var G__27823 = G__27803__27821;
        G__27806__27813 = G__27822;
        G__27803__27814 = G__27823;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.compiler.dom_style = function() {
  var dom_style = null;
  var dom_style__2 = function(elem, v) {
    if(cljs.core.string_QMARK_.call(null, v)) {
      elem.setAttribute("style", v)
    }else {
      if(cljs.core.map_QMARK_.call(null, v)) {
        var G__27844__27845 = cljs.core.seq.call(null, v);
        if(G__27844__27845) {
          var G__27847__27849 = cljs.core.first.call(null, G__27844__27845);
          var vec__27848__27850 = G__27847__27849;
          var k__27851 = cljs.core.nth.call(null, vec__27848__27850, 0, null);
          var v__27852 = cljs.core.nth.call(null, vec__27848__27850, 1, null);
          var G__27844__27853 = G__27844__27845;
          var G__27847__27854 = G__27847__27849;
          var G__27844__27855 = G__27844__27853;
          while(true) {
            var vec__27856__27857 = G__27847__27854;
            var k__27858 = cljs.core.nth.call(null, vec__27856__27857, 0, null);
            var v__27859 = cljs.core.nth.call(null, vec__27856__27857, 1, null);
            var G__27844__27860 = G__27844__27855;
            dom_style.call(null, elem, k__27858, v__27859);
            var temp__3974__auto____27861 = cljs.core.next.call(null, G__27844__27860);
            if(temp__3974__auto____27861) {
              var G__27844__27862 = temp__3974__auto____27861;
              var G__27864 = cljs.core.first.call(null, G__27844__27862);
              var G__27865 = G__27844__27862;
              G__27847__27854 = G__27864;
              G__27844__27855 = G__27865;
              continue
            }else {
            }
            break
          }
        }else {
        }
      }else {
        if(cljs.core.truth_(crate.binding.binding_QMARK_.call(null, v))) {
          crate.compiler.capture_binding.call(null, "\ufdd0'style", cljs.core.PersistentVector.fromArray([null, v], true));
          dom_style.call(null, elem, crate.binding.value.call(null, v))
        }else {
        }
      }
    }
    return elem
  };
  var dom_style__3 = function(elem, k, v) {
    var v__27863 = cljs.core.truth_(crate.binding.binding_QMARK_.call(null, v)) ? function() {
      crate.compiler.capture_binding.call(null, "\ufdd0'style", cljs.core.PersistentVector.fromArray([k, v], true));
      return crate.binding.value.call(null, v)
    }() : v;
    return goog.style.setStyle(elem, cljs.core.name.call(null, k), v__27863)
  };
  dom_style = function(elem, k, v) {
    switch(arguments.length) {
      case 2:
        return dom_style__2.call(this, elem, k);
      case 3:
        return dom_style__3.call(this, elem, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dom_style.cljs$lang$arity$2 = dom_style__2;
  dom_style.cljs$lang$arity$3 = dom_style__3;
  return dom_style
}();
crate.compiler.dom_attr = function() {
  var dom_attr = null;
  var dom_attr__2 = function(elem, attrs) {
    if(cljs.core.truth_(elem)) {
      if(!cljs.core.map_QMARK_.call(null, attrs)) {
        return elem.getAttribute(cljs.core.name.call(null, attrs))
      }else {
        var G__27886__27887 = cljs.core.seq.call(null, attrs);
        if(G__27886__27887) {
          var G__27889__27891 = cljs.core.first.call(null, G__27886__27887);
          var vec__27890__27892 = G__27889__27891;
          var k__27893 = cljs.core.nth.call(null, vec__27890__27892, 0, null);
          var v__27894 = cljs.core.nth.call(null, vec__27890__27892, 1, null);
          var G__27886__27895 = G__27886__27887;
          var G__27889__27896 = G__27889__27891;
          var G__27886__27897 = G__27886__27895;
          while(true) {
            var vec__27898__27899 = G__27889__27896;
            var k__27900 = cljs.core.nth.call(null, vec__27898__27899, 0, null);
            var v__27901 = cljs.core.nth.call(null, vec__27898__27899, 1, null);
            var G__27886__27902 = G__27886__27897;
            dom_attr.call(null, elem, k__27900, v__27901);
            var temp__3974__auto____27903 = cljs.core.next.call(null, G__27886__27902);
            if(temp__3974__auto____27903) {
              var G__27886__27904 = temp__3974__auto____27903;
              var G__27906 = cljs.core.first.call(null, G__27886__27904);
              var G__27907 = G__27886__27904;
              G__27889__27896 = G__27906;
              G__27886__27897 = G__27907;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return elem
      }
    }else {
      return null
    }
  };
  var dom_attr__3 = function(elem, k, v) {
    if(cljs.core._EQ_.call(null, k, "\ufdd0'style")) {
      crate.compiler.dom_style.call(null, elem, v)
    }else {
      var v__27905 = cljs.core.truth_(crate.binding.binding_QMARK_.call(null, v)) ? function() {
        crate.compiler.capture_binding.call(null, "\ufdd0'attr", cljs.core.PersistentVector.fromArray([k, v], true));
        return crate.binding.value.call(null, v)
      }() : v;
      elem.setAttribute(cljs.core.name.call(null, k), v__27905)
    }
    return elem
  };
  dom_attr = function(elem, k, v) {
    switch(arguments.length) {
      case 2:
        return dom_attr__2.call(this, elem, k);
      case 3:
        return dom_attr__3.call(this, elem, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dom_attr.cljs$lang$arity$2 = dom_attr__2;
  dom_attr.cljs$lang$arity$3 = dom_attr__3;
  return dom_attr
}();
crate.compiler.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
crate.compiler.normalize_map_attrs = function normalize_map_attrs(map_attrs) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__27914) {
    var vec__27915__27916 = p__27914;
    var n__27917 = cljs.core.nth.call(null, vec__27915__27916, 0, null);
    var v__27918 = cljs.core.nth.call(null, vec__27915__27916, 1, null);
    if(v__27918 === true) {
      return cljs.core.PersistentVector.fromArray([n__27917, cljs.core.name.call(null, n__27917)], true)
    }else {
      return cljs.core.PersistentVector.fromArray([n__27917, v__27918], true)
    }
  }, cljs.core.filter.call(null, cljs.core.comp.call(null, cljs.core.boolean$, cljs.core.second), map_attrs)))
};
crate.compiler.normalize_element = function normalize_element(p__27919) {
  var vec__27945__27946 = p__27919;
  var tag__27947 = cljs.core.nth.call(null, vec__27945__27946, 0, null);
  var content__27948 = cljs.core.nthnext.call(null, vec__27945__27946, 1);
  if(!function() {
    var or__3824__auto____27949 = cljs.core.keyword_QMARK_.call(null, tag__27947);
    if(or__3824__auto____27949) {
      return or__3824__auto____27949
    }else {
      var or__3824__auto____27950 = cljs.core.symbol_QMARK_.call(null, tag__27947);
      if(or__3824__auto____27950) {
        return or__3824__auto____27950
      }else {
        return cljs.core.string_QMARK_.call(null, tag__27947)
      }
    }
  }()) {
    throw[cljs.core.str(tag__27947), cljs.core.str(" is not a valid tag name.")].join("");
  }else {
  }
  var vec__27951__27953 = cljs.core.re_matches.call(null, crate.compiler.re_tag, cljs.core.name.call(null, tag__27947));
  var ___27954 = cljs.core.nth.call(null, vec__27951__27953, 0, null);
  var tag__27955 = cljs.core.nth.call(null, vec__27951__27953, 1, null);
  var id__27956 = cljs.core.nth.call(null, vec__27951__27953, 2, null);
  var class__27957 = cljs.core.nth.call(null, vec__27951__27953, 3, null);
  var vec__27952__27964 = function() {
    var vec__27958__27959 = clojure.string.split.call(null, tag__27955, /:/);
    var nsp__27960 = cljs.core.nth.call(null, vec__27958__27959, 0, null);
    var t__27961 = cljs.core.nth.call(null, vec__27958__27959, 1, null);
    var ns_xmlns__27962 = crate.compiler.xmlns.call(null, cljs.core.keyword.call(null, nsp__27960));
    if(cljs.core.truth_(t__27961)) {
      return cljs.core.PersistentVector.fromArray([function() {
        var or__3824__auto____27963 = ns_xmlns__27962;
        if(cljs.core.truth_(or__3824__auto____27963)) {
          return or__3824__auto____27963
        }else {
          return nsp__27960
        }
      }(), t__27961], true)
    }else {
      return cljs.core.PersistentVector.fromArray([(new cljs.core.Keyword("\ufdd0'xhtml")).call(null, crate.compiler.xmlns), nsp__27960], true)
    }
  }();
  var nsp__27965 = cljs.core.nth.call(null, vec__27952__27964, 0, null);
  var tag__27966 = cljs.core.nth.call(null, vec__27952__27964, 1, null);
  var tag_attrs__27968 = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.filter.call(null, function(p1__27908_SHARP_) {
    return!(cljs.core.second.call(null, p1__27908_SHARP_) == null)
  }, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":function() {
    var or__3824__auto____27967 = id__27956;
    if(cljs.core.truth_(or__3824__auto____27967)) {
      return or__3824__auto____27967
    }else {
      return null
    }
  }(), "\ufdd0'class":cljs.core.truth_(class__27957) ? clojure.string.replace.call(null, class__27957, /\./, " ") : null})));
  var map_attrs__27969 = cljs.core.first.call(null, content__27948);
  if(cljs.core.map_QMARK_.call(null, map_attrs__27969)) {
    return cljs.core.PersistentVector.fromArray([nsp__27965, tag__27966, cljs.core.merge.call(null, tag_attrs__27968, crate.compiler.normalize_map_attrs.call(null, map_attrs__27969)), cljs.core.next.call(null, content__27948)], true)
  }else {
    return cljs.core.PersistentVector.fromArray([nsp__27965, tag__27966, tag_attrs__27968, content__27948], true)
  }
};
crate.compiler.parse_content = function parse_content(elem, content) {
  var attrs__27971 = cljs.core.first.call(null, content);
  if(cljs.core.map_QMARK_.call(null, attrs__27971)) {
    crate.compiler.dom_attr.call(null, elem, attrs__27971);
    return cljs.core.rest.call(null, content)
  }else {
    return content
  }
};
crate.compiler.create_elem = cljs.core.truth_(document.createElementNS) ? function(nsp, tag) {
  return document.createElementNS(nsp, tag)
} : function(_, tag) {
  return document.createElement(tag)
};
crate.compiler.elem_factory = function elem_factory(tag_def) {
  var bindings27982__27983 = crate.compiler.bindings;
  try {
    crate.compiler.bindings = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
    var vec__27985__27986 = crate.compiler.normalize_element.call(null, tag_def);
    var nsp__27987 = cljs.core.nth.call(null, vec__27985__27986, 0, null);
    var tag__27988 = cljs.core.nth.call(null, vec__27985__27986, 1, null);
    var attrs__27989 = cljs.core.nth.call(null, vec__27985__27986, 2, null);
    var content__27990 = cljs.core.nth.call(null, vec__27985__27986, 3, null);
    var elem__27991 = crate.compiler.create_elem.call(null, nsp__27987, tag__27988);
    crate.compiler.dom_attr.call(null, elem__27991, attrs__27989);
    crate.compiler.as_content.call(null, elem__27991, content__27990);
    crate.compiler.handle_bindings.call(null, cljs.core.deref.call(null, crate.compiler.bindings), elem__27991);
    return elem__27991
  }finally {
    crate.compiler.bindings = bindings27982__27983
  }
};
crate.compiler.add_optional_attrs = function add_optional_attrs(func) {
  return function() {
    var G__28000__delegate = function(args) {
      if(cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, args))) {
        var vec__27996__27997 = cljs.core.apply.call(null, func, cljs.core.rest.call(null, args));
        var tag__27998 = cljs.core.nth.call(null, vec__27996__27997, 0, null);
        var body__27999 = cljs.core.nthnext.call(null, vec__27996__27997, 1);
        if(cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, body__27999))) {
          return cljs.core.apply.call(null, cljs.core.vector, tag__27998, cljs.core.merge.call(null, cljs.core.first.call(null, body__27999), cljs.core.first.call(null, args)), cljs.core.rest.call(null, body__27999))
        }else {
          return cljs.core.apply.call(null, cljs.core.vector, tag__27998, cljs.core.first.call(null, args), body__27999)
        }
      }else {
        return cljs.core.apply.call(null, func, args)
      }
    };
    var G__28000 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__28000__delegate.call(this, args)
    };
    G__28000.cljs$lang$maxFixedArity = 0;
    G__28000.cljs$lang$applyTo = function(arglist__28001) {
      var args = cljs.core.seq(arglist__28001);
      return G__28000__delegate(args)
    };
    G__28000.cljs$lang$arity$variadic = G__28000__delegate;
    return G__28000
  }()
};
goog.provide("crate.core");
goog.require("cljs.core");
goog.require("crate.util");
goog.require("crate.compiler");
crate.core.group_id = cljs.core.atom.call(null, 0);
crate.core.html = function() {
  var html__delegate = function(tags) {
    var res__27737 = cljs.core.map.call(null, crate.compiler.elem_factory, tags);
    if(cljs.core.truth_(cljs.core.second.call(null, res__27737))) {
      return res__27737
    }else {
      return cljs.core.first.call(null, res__27737)
    }
  };
  var html = function(var_args) {
    var tags = null;
    if(goog.isDef(var_args)) {
      tags = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return html__delegate.call(this, tags)
  };
  html.cljs$lang$maxFixedArity = 0;
  html.cljs$lang$applyTo = function(arglist__27738) {
    var tags = cljs.core.seq(arglist__27738);
    return html__delegate(tags)
  };
  html.cljs$lang$arity$variadic = html__delegate;
  return html
}();
crate.core.h = crate.util.escape_html;
var array_p, explode_p, ignore_p, key_prefix, map_p, namespace_tag, number_p, p, re_svg_tags, re_tag, re_whitespace, string_p, unify_p, whitespace_node_p, xmlns, __hasProp = {}.hasOwnProperty;
goog.require("goog.string");
goog.provide("singult.coffee");
goog.provide("singult.coffee.Unify");
goog.provide("singult.coffee.Ignore");
p = function(x) {
  console.log(x);
  return x
};
re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
re_svg_tags = /^(svg|g|rect|circle|clipPath|path|line|polygon|polyline|text|textPath)$/;
re_whitespace = /^\s+$/;
key_prefix = "\x00";
xmlns = {xhtml:"http://www.w3.org/1999/xhtml", svg:"http://www.w3.org/2000/svg"};
namespace_tag = function(tag_str) {
  var nsp, tag, _ref;
  _ref = tag_str.split(":"), nsp = _ref[0], tag = _ref[1];
  if(tag != null) {
    return[xmlns[nsp] || nsp, tag]
  }else {
    if(tag_str.match(re_svg_tags)) {
      return[xmlns.svg, tag_str]
    }else {
      return[xmlns.xhtml, tag_str]
    }
  }
};
explode_p = function(v) {
  return v[0] === ":*:"
};
unify_p = function(x) {
  return x != null && x instanceof singult.coffee.Unify
};
ignore_p = function(x) {
  return x != null && x instanceof singult.coffee.Ignore
};
array_p = function(x) {
  return x != null && x.forEach != null
};
map_p = function(x) {
  return x != null && !array_p(x) && !unify_p(x) && !ignore_p(x) && x instanceof Object
};
string_p = function(x) {
  return x != null && x.substring != null
};
number_p = function(x) {
  return x != null && x.toFixed != null
};
whitespace_node_p = function($n) {
  return $n.nodeType === 8 || $n.nodeType === 3 && $n.textContent.match(re_whitespace)
};
singult.coffee.style = function($e, m) {
  var k, v, _results;
  _results = [];
  for(k in m) {
    if(!__hasProp.call(m, k)) {
      continue
    }
    v = m[k];
    _results.push($e.style[goog.string.toCamelCase(k)] = v)
  }
  return _results
};
singult.coffee.properties = function($e, m) {
  var prop, v, _results;
  _results = [];
  for(prop in m) {
    if(!__hasProp.call(m, prop)) {
      continue
    }
    v = m[prop];
    _results.push($e[prop] = v)
  }
  return _results
};
singult.coffee.attr = function($e, attr_map) {
  var k, v, _results;
  if(attr_map["style"] != null) {
    singult.coffee.style($e, attr_map["style"]);
    delete attr_map["style"]
  }
  if(attr_map["properties"] != null) {
    singult.coffee.properties($e, attr_map["properties"]);
    delete attr_map["properties"]
  }
  if(array_p(attr_map["class"])) {
    $e.setAttribute("class", attr_map["class"].join(" "));
    delete attr_map["class"]
  }
  _results = [];
  for(k in attr_map) {
    if(!__hasProp.call(attr_map, k)) {
      continue
    }
    v = attr_map[k];
    if(v != null) {
      _results.push($e.setAttribute(k, v))
    }else {
      _results.push($e.removeAttribute(k))
    }
  }
  return _results
};
singult.coffee.node_data = function($e, d) {
  if(d != null) {
    return $e["__singult_data__"] = d
  }else {
    return $e["__singult_data__"]
  }
};
singult.coffee.canonicalize = function(x) {
  if(number_p(x)) {
    return x.toString()
  }else {
    if(array_p(x)) {
      return singult.coffee.canonicalize_hiccup(x)
    }else {
      return x
    }
  }
};
singult.coffee.canonicalize_hiccup = function(v) {
  var abbreviated_classes, attr, canonical, canonical_children, children, cls_str, id, nsp, tag, tag_str, _, _ref, _ref1, _ref2;
  tag = v[0];
  _ref = map_p(v[1]) ? [v[1], v.slice(2)] : [{}, v.slice(1)], attr = _ref[0], children = _ref[1];
  _ref1 = tag.match(re_tag), _ = _ref1[0], tag_str = _ref1[1], id = _ref1[2], cls_str = _ref1[3];
  if(id != null) {
    attr["id"] = id
  }
  if(cls_str != null) {
    abbreviated_classes = cls_str.split(".");
    if(array_p(attr["class"])) {
      attr["class"] = attr["class"].concat(abbreviated_classes)
    }else {
      if(string_p(attr["class"])) {
        attr["class"] = abbreviated_classes.concat([attr["class"]])
      }else {
        if(!(attr["class"] != null)) {
          attr["class"] = abbreviated_classes
        }
      }
    }
  }
  _ref2 = namespace_tag(tag_str), nsp = _ref2[0], tag = _ref2[1];
  canonical_children = [];
  children.forEach(function(v) {
    if(v != null) {
      if(explode_p(v)) {
        return v.slice(1).forEach(function(v) {
          return canonical_children.push(singult.coffee.canonicalize(v))
        })
      }else {
        return canonical_children.push(singult.coffee.canonicalize(v))
      }
    }
  });
  canonical = {nsp:nsp, tag:tag, attr:attr, children:canonical_children};
  return canonical
};
singult.coffee.render = function(m) {
  var $e, c;
  if(unify_p(m)) {
    throw new Error("Unify must be the first and only child of its parent.");
  }else {
    if(ignore_p(m)) {
      return null
    }else {
      if(string_p(m)) {
        return document.createTextNode(m)
      }else {
        $e = document.createElementNS(m.nsp, m.tag);
        singult.coffee.attr($e, m.attr);
        if(unify_p(c = m.children[0])) {
          if(c.enter != null) {
            c.data.forEach(function(d) {
              var $el;
              $el = c.enter(d);
              singult.coffee.node_data($el, d);
              return $e.appendChild($el)
            })
          }else {
            c.data.forEach(function(d) {
              var $el;
              $el = singult.coffee.render(singult.coffee.canonicalize(c.mapping(d)));
              singult.coffee.node_data($el, d);
              return $e.appendChild($el)
            })
          }
        }else {
          m.children.forEach(function(c) {
            var $c;
            $c = singult.coffee.render(c);
            if($c != null) {
              return $e.appendChild($c)
            }
          })
        }
        return $e
      }
    }
  }
};
singult.coffee.Unify = function(data, mapping, key_fn, enter, update, exit, force_update_p) {
  this.data = data;
  this.mapping = mapping;
  this.key_fn = key_fn;
  this.enter = enter;
  this.update = update;
  this.exit = exit;
  this.force_update_p = force_update_p;
  return this
};
singult.coffee.Ignore = function() {
  return this
};
singult.coffee.unify_ = function($container, u) {
  var $n, $nodes, enter, exit, i, key, key_fn, nodes_by_key, update, _;
  enter = u.enter || function(d) {
    var $el;
    $el = singult.coffee.render(singult.coffee.canonicalize(u.mapping(d)));
    $container.appendChild($el);
    return $el
  };
  update = u.update || function($n, d) {
    return singult.coffee.merge($n, singult.coffee.canonicalize(u.mapping(d)))
  };
  exit = u.exit || function($n) {
    return $container.removeChild($n)
  };
  key_fn = u.key_fn || function(d, idx) {
    return idx
  };
  $nodes = $container.childNodes;
  nodes_by_key = {};
  i = 0;
  while(i < $nodes.length) {
    key = key_prefix + key_fn(singult.coffee.node_data($nodes[i]), i);
    nodes_by_key[key] = $nodes[i];
    i += 1
  }
  u.data.forEach(function(d, i) {
    var $el, $n, identical_data_p, old_data;
    key = key_prefix + key_fn(d, i);
    if($n = nodes_by_key[key]) {
      if(u.force_update_p) {
        $el = update($n, d);
        singult.coffee.node_data($el, d)
      }else {
        old_data = singult.coffee.node_data($n);
        identical_data_p = old_data.cljs$core$IEquiv$_equiv$arity$2 != null ? old_data.cljs$core$IEquiv$_equiv$arity$2(old_data, d) : old_data === d;
        if(!identical_data_p) {
          $el = update($n, d);
          singult.coffee.node_data($el, d)
        }
      }
      return delete nodes_by_key[key]
    }else {
      $el = enter(d);
      return singult.coffee.node_data($el, d)
    }
  });
  for(_ in nodes_by_key) {
    $n = nodes_by_key[_];
    exit($n)
  }
  return null
};
singult.coffee.merge = function($e, m) {
  var $c, c, i, _i, _j, _ref, _ref1;
  if(unify_p(m)) {
    singult.coffee.unify_($e, m)
  }else {
    if(ignore_p(m)) {
    }else {
      if($e.nodeName.toLowerCase() !== m.tag.toLowerCase()) {
        p($e);
        p(m);
        throw new Error("Cannot merge $e into node of different type");
      }
      singult.coffee.attr($e, m.attr);
      if($e.hasChildNodes()) {
        for(i = _i = _ref = $e.childNodes.length - 1;_ref <= 0 ? _i <= 0 : _i >= 0;i = _ref <= 0 ? ++_i : --_i) {
          $c = $e.childNodes[i];
          if(whitespace_node_p($c)) {
            $e.removeChild($c)
          }
        }
      }
      if(unify_p(m.children[0])) {
        singult.coffee.merge($e, m.children[0])
      }else {
        if($e.childNodes.length > m.children.length) {
          for(i = _j = _ref1 = $e.childNodes.length - 1;_ref1 <= 0 ? _j <= 0 : _j >= 0;i = _ref1 <= 0 ? ++_j : --_j) {
            $e.removeChild($e.childNodes[i])
          }
        }
        i = 0;
        while(i < m.children.length) {
          c = m.children[i] || "";
          $c = $e.childNodes[i];
          if(string_p(c)) {
            if($c != null) {
              $c.textContent = c
            }else {
              $e.appendChild(document.createTextNode(c))
            }
          }else {
            if(ignore_p(c)) {
            }else {
              if(map_p(c)) {
                if($c != null) {
                  singult.coffee.merge($c, c)
                }else {
                  $e.appendChild(singult.coffee.render(c))
                }
              }else {
                p($c);
                p(c);
                throw new Error("Cannot merge children");
              }
            }
          }
          i += 1
        }
      }
    }
  }
  return $e
};
goog.provide("singult.core");
goog.require("cljs.core");
goog.require("singult.coffee");
singult.core.Unify = function(data, mapping, key_fn, enter, update, exit, force_update_QMARK_, __meta, __extmap) {
  this.data = data;
  this.mapping = mapping;
  this.key_fn = key_fn;
  this.enter = enter;
  this.update = update;
  this.exit = exit;
  this.force_update_QMARK_ = force_update_QMARK_;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054858;
  if(arguments.length > 7) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
singult.core.Unify.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__28513 = this;
  var h__2093__auto____28514 = this__28513.__hash;
  if(!(h__2093__auto____28514 == null)) {
    return h__2093__auto____28514
  }else {
    var h__2093__auto____28515 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__28513.__hash = h__2093__auto____28515;
    return h__2093__auto____28515
  }
};
singult.core.Unify.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__28516 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
singult.core.Unify.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k28511, else__2227__auto__) {
  var this__28517 = this;
  if(k28511 === "\ufdd0'data") {
    return this__28517.data
  }else {
    if(k28511 === "\ufdd0'mapping") {
      return this__28517.mapping
    }else {
      if(k28511 === "\ufdd0'key-fn") {
        return this__28517.key_fn
      }else {
        if(k28511 === "\ufdd0'enter") {
          return this__28517.enter
        }else {
          if(k28511 === "\ufdd0'update") {
            return this__28517.update
          }else {
            if(k28511 === "\ufdd0'exit") {
              return this__28517.exit
            }else {
              if(k28511 === "\ufdd0'force-update?") {
                return this__28517.force_update_QMARK_
              }else {
                if("\ufdd0'else") {
                  return cljs.core._lookup.call(null, this__28517.__extmap, k28511, else__2227__auto__)
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
singult.core.Unify.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__28510) {
  var this__28518 = this;
  var pred__28519__28522 = cljs.core.identical_QMARK_;
  var expr__28520__28523 = k__2232__auto__;
  if(pred__28519__28522.call(null, "\ufdd0'data", expr__28520__28523)) {
    return new singult.core.Unify(G__28510, this__28518.mapping, this__28518.key_fn, this__28518.enter, this__28518.update, this__28518.exit, this__28518.force_update_QMARK_, this__28518.__meta, this__28518.__extmap, null)
  }else {
    if(pred__28519__28522.call(null, "\ufdd0'mapping", expr__28520__28523)) {
      return new singult.core.Unify(this__28518.data, G__28510, this__28518.key_fn, this__28518.enter, this__28518.update, this__28518.exit, this__28518.force_update_QMARK_, this__28518.__meta, this__28518.__extmap, null)
    }else {
      if(pred__28519__28522.call(null, "\ufdd0'key-fn", expr__28520__28523)) {
        return new singult.core.Unify(this__28518.data, this__28518.mapping, G__28510, this__28518.enter, this__28518.update, this__28518.exit, this__28518.force_update_QMARK_, this__28518.__meta, this__28518.__extmap, null)
      }else {
        if(pred__28519__28522.call(null, "\ufdd0'enter", expr__28520__28523)) {
          return new singult.core.Unify(this__28518.data, this__28518.mapping, this__28518.key_fn, G__28510, this__28518.update, this__28518.exit, this__28518.force_update_QMARK_, this__28518.__meta, this__28518.__extmap, null)
        }else {
          if(pred__28519__28522.call(null, "\ufdd0'update", expr__28520__28523)) {
            return new singult.core.Unify(this__28518.data, this__28518.mapping, this__28518.key_fn, this__28518.enter, G__28510, this__28518.exit, this__28518.force_update_QMARK_, this__28518.__meta, this__28518.__extmap, null)
          }else {
            if(pred__28519__28522.call(null, "\ufdd0'exit", expr__28520__28523)) {
              return new singult.core.Unify(this__28518.data, this__28518.mapping, this__28518.key_fn, this__28518.enter, this__28518.update, G__28510, this__28518.force_update_QMARK_, this__28518.__meta, this__28518.__extmap, null)
            }else {
              if(pred__28519__28522.call(null, "\ufdd0'force-update?", expr__28520__28523)) {
                return new singult.core.Unify(this__28518.data, this__28518.mapping, this__28518.key_fn, this__28518.enter, this__28518.update, this__28518.exit, G__28510, this__28518.__meta, this__28518.__extmap, null)
              }else {
                return new singult.core.Unify(this__28518.data, this__28518.mapping, this__28518.key_fn, this__28518.enter, this__28518.update, this__28518.exit, this__28518.force_update_QMARK_, this__28518.__meta, cljs.core.assoc.call(null, this__28518.__extmap, k__2232__auto__, G__28510), null)
              }
            }
          }
        }
      }
    }
  }
};
singult.core.Unify.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__28524 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
singult.core.Unify.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__28525 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'data", this__28525.data), cljs.core.vector.call(null, "\ufdd0'mapping", this__28525.mapping), cljs.core.vector.call(null, "\ufdd0'key-fn", this__28525.key_fn), cljs.core.vector.call(null, "\ufdd0'enter", this__28525.enter), cljs.core.vector.call(null, "\ufdd0'update", this__28525.update), cljs.core.vector.call(null, "\ufdd0'exit", this__28525.exit), cljs.core.vector.call(null, 
  "\ufdd0'force-update?", this__28525.force_update_QMARK_)], true), this__28525.__extmap))
};
singult.core.Unify.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__28526 = this;
  var pr_pair__2240__auto____28527 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____28527, [cljs.core.str("#"), cljs.core.str("Unify"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'data", this__28526.data), cljs.core.vector.call(null, "\ufdd0'mapping", this__28526.mapping), cljs.core.vector.call(null, "\ufdd0'key-fn", this__28526.key_fn), cljs.core.vector.call(null, "\ufdd0'enter", this__28526.enter), 
  cljs.core.vector.call(null, "\ufdd0'update", this__28526.update), cljs.core.vector.call(null, "\ufdd0'exit", this__28526.exit), cljs.core.vector.call(null, "\ufdd0'force-update?", this__28526.force_update_QMARK_)], true), this__28526.__extmap))
};
singult.core.Unify.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__28528 = this;
  return 7 + cljs.core.count.call(null, this__28528.__extmap)
};
singult.core.Unify.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__28529 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____28530 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____28530)) {
      var and__3822__auto____28531 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____28531) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____28531
      }
    }else {
      return and__3822__auto____28530
    }
  }())) {
    return true
  }else {
    return false
  }
};
singult.core.Unify.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__28510) {
  var this__28532 = this;
  return new singult.core.Unify(this__28532.data, this__28532.mapping, this__28532.key_fn, this__28532.enter, this__28532.update, this__28532.exit, this__28532.force_update_QMARK_, G__28510, this__28532.__extmap, this__28532.__hash)
};
singult.core.Unify.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__28533 = this;
  return this__28533.__meta
};
singult.core.Unify.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__28534 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'data", "\ufdd0'force-update?", "\ufdd0'enter", "\ufdd0'exit", "\ufdd0'key-fn", "\ufdd0'update", "\ufdd0'mapping"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__28534.__meta), k__2234__auto__)
  }else {
    return new singult.core.Unify(this__28534.data, this__28534.mapping, this__28534.key_fn, this__28534.enter, this__28534.update, this__28534.exit, this__28534.force_update_QMARK_, this__28534.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__28534.__extmap, k__2234__auto__)), null)
  }
};
singult.core.Unify.cljs$lang$type = true;
singult.core.Unify.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "singult.core/Unify")
};
singult.core.__GT_Unify = function __GT_Unify(data, mapping, key_fn, enter, update, exit, force_update_QMARK_) {
  return new singult.core.Unify(data, mapping, key_fn, enter, update, exit, force_update_QMARK_)
};
singult.core.map__GT_Unify = function map__GT_Unify(G__28512) {
  return new singult.core.Unify((new cljs.core.Keyword("\ufdd0'data")).call(null, G__28512), (new cljs.core.Keyword("\ufdd0'mapping")).call(null, G__28512), (new cljs.core.Keyword("\ufdd0'key-fn")).call(null, G__28512), (new cljs.core.Keyword("\ufdd0'enter")).call(null, G__28512), (new cljs.core.Keyword("\ufdd0'update")).call(null, G__28512), (new cljs.core.Keyword("\ufdd0'exit")).call(null, G__28512), (new cljs.core.Keyword("\ufdd0'force-update?")).call(null, G__28512), null, cljs.core.dissoc.call(null, 
  G__28512, "\ufdd0'data", "\ufdd0'mapping", "\ufdd0'key-fn", "\ufdd0'enter", "\ufdd0'update", "\ufdd0'exit", "\ufdd0'force-update?"))
};
singult.core.Unify;
singult.core.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.instance_QMARK_.call(null, singult.core.Unify, x)) {
    var map__28588__28589 = x;
    var map__28588__28590 = cljs.core.seq_QMARK_.call(null, map__28588__28589) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28588__28589) : map__28588__28589;
    var force_update_QMARK___28591 = cljs.core._lookup.call(null, map__28588__28590, "\ufdd0'force-update?", null);
    var exit__28592 = cljs.core._lookup.call(null, map__28588__28590, "\ufdd0'exit", null);
    var update__28593 = cljs.core._lookup.call(null, map__28588__28590, "\ufdd0'update", null);
    var enter__28594 = cljs.core._lookup.call(null, map__28588__28590, "\ufdd0'enter", null);
    var key_fn__28595 = cljs.core._lookup.call(null, map__28588__28590, "\ufdd0'key-fn", null);
    var mapping__28596 = cljs.core._lookup.call(null, map__28588__28590, "\ufdd0'mapping", null);
    var data__28597 = cljs.core._lookup.call(null, map__28588__28590, "\ufdd0'data", null);
    var data_arr__28605 = function() {
      var a__28598 = [];
      var G__28599__28600 = cljs.core.seq.call(null, data__28597);
      if(G__28599__28600) {
        var d__28601 = cljs.core.first.call(null, G__28599__28600);
        var G__28599__28602 = G__28599__28600;
        while(true) {
          a__28598.push(d__28601);
          var temp__3974__auto____28603 = cljs.core.next.call(null, G__28599__28602);
          if(temp__3974__auto____28603) {
            var G__28599__28604 = temp__3974__auto____28603;
            var G__28641 = cljs.core.first.call(null, G__28599__28604);
            var G__28642 = G__28599__28604;
            d__28601 = G__28641;
            G__28599__28602 = G__28642;
            continue
          }else {
          }
          break
        }
      }else {
      }
      return a__28598
    }();
    return new singult.coffee.Unify(data_arr__28605, function(p1__28509_SHARP_) {
      return clj__GT_js.call(null, mapping__28596.call(null, p1__28509_SHARP_))
    }, key_fn__28595, enter__28594, update__28593, exit__28592, force_update_QMARK___28591)
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        var o__28606 = {};
        var G__28607__28608 = cljs.core.seq.call(null, x);
        if(G__28607__28608) {
          var G__28610__28612 = cljs.core.first.call(null, G__28607__28608);
          var vec__28611__28613 = G__28610__28612;
          var k__28614 = cljs.core.nth.call(null, vec__28611__28613, 0, null);
          var v__28615 = cljs.core.nth.call(null, vec__28611__28613, 1, null);
          var G__28607__28616 = G__28607__28608;
          var G__28610__28617 = G__28610__28612;
          var G__28607__28618 = G__28607__28616;
          while(true) {
            var vec__28619__28620 = G__28610__28617;
            var k__28621 = cljs.core.nth.call(null, vec__28619__28620, 0, null);
            var v__28622 = cljs.core.nth.call(null, vec__28619__28620, 1, null);
            var G__28607__28623 = G__28607__28618;
            var key__28624 = clj__GT_js.call(null, k__28621);
            if(cljs.core.string_QMARK_.call(null, key__28624)) {
            }else {
              throw"Cannot convert; JavaScript map keys must be strings";
            }
            o__28606[key__28624] = clj__GT_js.call(null, v__28622);
            var temp__3974__auto____28625 = cljs.core.next.call(null, G__28607__28623);
            if(temp__3974__auto____28625) {
              var G__28607__28626 = temp__3974__auto____28625;
              var G__28643 = cljs.core.first.call(null, G__28607__28626);
              var G__28644 = G__28607__28626;
              G__28610__28617 = G__28643;
              G__28607__28618 = G__28644;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return o__28606
      }else {
        if(cljs.core.seq_QMARK_.call(null, x)) {
          var a__28627 = [];
          a__28627.push(":*:");
          var G__28628__28629 = cljs.core.seq.call(null, x);
          if(G__28628__28629) {
            var item__28630 = cljs.core.first.call(null, G__28628__28629);
            var G__28628__28631 = G__28628__28629;
            while(true) {
              a__28627.push(clj__GT_js.call(null, item__28630));
              var temp__3974__auto____28632 = cljs.core.next.call(null, G__28628__28631);
              if(temp__3974__auto____28632) {
                var G__28628__28633 = temp__3974__auto____28632;
                var G__28645 = cljs.core.first.call(null, G__28628__28633);
                var G__28646 = G__28628__28633;
                item__28630 = G__28645;
                G__28628__28631 = G__28646;
                continue
              }else {
              }
              break
            }
          }else {
          }
          return a__28627
        }else {
          if(cljs.core.coll_QMARK_.call(null, x)) {
            var a__28634 = [];
            var G__28635__28636 = cljs.core.seq.call(null, x);
            if(G__28635__28636) {
              var item__28637 = cljs.core.first.call(null, G__28635__28636);
              var G__28635__28638 = G__28635__28636;
              while(true) {
                a__28634.push(clj__GT_js.call(null, item__28637));
                var temp__3974__auto____28639 = cljs.core.next.call(null, G__28635__28638);
                if(temp__3974__auto____28639) {
                  var G__28635__28640 = temp__3974__auto____28639;
                  var G__28647 = cljs.core.first.call(null, G__28635__28640);
                  var G__28648 = G__28635__28640;
                  item__28637 = G__28647;
                  G__28635__28638 = G__28648;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return a__28634
          }else {
            if("\ufdd0'else") {
              return x
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
singult.core.node_data = singult.coffee.node_data;
singult.core.attr = function attr($n, m) {
  return singult.coffee.attr.call(null, $n, singult.core.clj__GT_js.call(null, m))
};
singult.core.render = function render(v) {
  return singult.coffee.render.call(null, singult.coffee.canonicalize.call(null, singult.core.clj__GT_js.call(null, v)))
};
singult.core.merge_BANG_ = function merge_BANG_($n, v) {
  if(v == null) {
    return null
  }else {
    return singult.coffee.merge.call(null, $n, singult.coffee.canonicalize.call(null, singult.core.clj__GT_js.call(null, v)))
  }
};
singult.core.unify = function() {
  var unify__delegate = function(data, mapping, p__28649) {
    var map__28658__28659 = p__28649;
    var map__28658__28660 = cljs.core.seq_QMARK_.call(null, map__28658__28659) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28658__28659) : map__28658__28659;
    var force_update_QMARK___28661 = cljs.core._lookup.call(null, map__28658__28660, "\ufdd0'force-update?", null);
    var exit__28662 = cljs.core._lookup.call(null, map__28658__28660, "\ufdd0'exit", null);
    var update__28663 = cljs.core._lookup.call(null, map__28658__28660, "\ufdd0'update", null);
    var enter__28664 = cljs.core._lookup.call(null, map__28658__28660, "\ufdd0'enter", null);
    var key_fn__28665 = cljs.core._lookup.call(null, map__28658__28660, "\ufdd0'key-fn", null);
    return new singult.core.Unify(data, mapping, key_fn__28665, enter__28664, update__28663, exit__28662, force_update_QMARK___28661)
  };
  var unify = function(data, mapping, var_args) {
    var p__28649 = null;
    if(goog.isDef(var_args)) {
      p__28649 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unify__delegate.call(this, data, mapping, p__28649)
  };
  unify.cljs$lang$maxFixedArity = 2;
  unify.cljs$lang$applyTo = function(arglist__28666) {
    var data = cljs.core.first(arglist__28666);
    var mapping = cljs.core.first(cljs.core.next(arglist__28666));
    var p__28649 = cljs.core.rest(cljs.core.next(arglist__28666));
    return unify__delegate(data, mapping, p__28649)
  };
  unify.cljs$lang$arity$variadic = unify__delegate;
  return unify
}();
singult.core.ignore = function ignore() {
  return new singult.coffee.Ignore
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("&")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    var type = el.type.toLowerCase();
    switch(type) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "=" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, opt_value);
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, opt_value);
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, opt_value);
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
goog.provide("c2.dom");
goog.require("cljs.core");
goog.require("goog.style");
goog.require("goog.dom.classes");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("singult.core");
goog.require("clojure.string");
NodeList.prototype.cljs$core$ISeqable$ = true;
NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
HTMLCollection.prototype.cljs$core$ISeqable$ = true;
HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
Node.prototype.cljs$core$IHash$ = true;
Node.prototype.cljs$core$IHash$_hash$arity$1 = function(x) {
  return x
};
c2.dom.IDom = {};
c2.dom.__GT_dom = function __GT_dom(x) {
  if(function() {
    var and__3822__auto____28354 = x;
    if(and__3822__auto____28354) {
      return x.c2$dom$IDom$__GT_dom$arity$1
    }else {
      return and__3822__auto____28354
    }
  }()) {
    return x.c2$dom$IDom$__GT_dom$arity$1(x)
  }else {
    var x__2264__auto____28355 = x == null ? null : x;
    return function() {
      var or__3824__auto____28356 = c2.dom.__GT_dom[goog.typeOf(x__2264__auto____28355)];
      if(or__3824__auto____28356) {
        return or__3824__auto____28356
      }else {
        var or__3824__auto____28357 = c2.dom.__GT_dom["_"];
        if(or__3824__auto____28357) {
          return or__3824__auto____28357
        }else {
          throw cljs.core.missing_protocol.call(null, "IDom.->dom", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.PersistentVector.prototype.c2$dom$IDom$ = true;
cljs.core.PersistentVector.prototype.c2$dom$IDom$__GT_dom$arity$1 = function(v) {
  return singult.core.render.call(null, v)
};
Node.prototype.c2$dom$IDom$ = true;
Node.prototype.c2$dom$IDom$__GT_dom$arity$1 = function(node) {
  return node
};
c2.dom.IDom["string"] = true;
c2.dom.__GT_dom["string"] = function(selector) {
  return c2.dom.select.call(null, selector)
};
c2.dom.select = function() {
  var select = null;
  var select__1 = function(selector) {
    return document.querySelector(selector)
  };
  var select__2 = function(selector, container) {
    return c2.dom.__GT_dom.call(null, container).querySelector(selector)
  };
  select = function(selector, container) {
    switch(arguments.length) {
      case 1:
        return select__1.call(this, selector);
      case 2:
        return select__2.call(this, selector, container)
    }
    throw"Invalid arity: " + arguments.length;
  };
  select.cljs$lang$arity$1 = select__1;
  select.cljs$lang$arity$2 = select__2;
  return select
}();
c2.dom.select_all = function() {
  var select_all = null;
  var select_all__1 = function(selector) {
    return document.querySelectorAll(selector)
  };
  var select_all__2 = function(selector, container) {
    return c2.dom.__GT_dom.call(null, container).querySelectorAll(selector)
  };
  select_all = function(selector, container) {
    switch(arguments.length) {
      case 1:
        return select_all__1.call(this, selector);
      case 2:
        return select_all__2.call(this, selector, container)
    }
    throw"Invalid arity: " + arguments.length;
  };
  select_all.cljs$lang$arity$1 = select_all__1;
  select_all.cljs$lang$arity$2 = select_all__2;
  return select_all
}();
c2.dom.matches_selector_QMARK_ = function matches_selector_QMARK_(node, selector) {
  return node.webkitMatchesSelector(selector)
};
c2.dom.children = function children(node) {
  return c2.dom.__GT_dom.call(null, node).children
};
c2.dom.parent = function parent(node) {
  return c2.dom.__GT_dom.call(null, node).parentNode
};
c2.dom.append_BANG_ = function append_BANG_(container, el) {
  var el__28359 = c2.dom.__GT_dom.call(null, el);
  goog.dom.appendChild(c2.dom.__GT_dom.call(null, container), el__28359);
  return el__28359
};
c2.dom.prepend_BANG_ = function prepend_BANG_(container, el) {
  var el__28361 = c2.dom.__GT_dom.call(null, el);
  goog.dom.insertChildAt(c2.dom.__GT_dom.call(null, container), el__28361, 0);
  return el__28361
};
c2.dom.remove_BANG_ = function remove_BANG_(el) {
  return goog.dom.removeNode(c2.dom.__GT_dom.call(null, el))
};
c2.dom.replace_BANG_ = function replace_BANG_(old, new$) {
  var new__28363 = c2.dom.__GT_dom.call(null, new$);
  goog.dom.replaceNode(new__28363, c2.dom.__GT_dom.call(null, old));
  return new__28363
};
c2.dom.style = function() {
  var style = null;
  var style__1 = function(el) {
    throw new Error("TODO: return map of element styles");
  };
  var style__2 = function(el, x) {
    var el__28396 = c2.dom.__GT_dom.call(null, el);
    try {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        var k__28421 = x;
        return goog.style.getComputedStyle(el__28396, cljs.core.name.call(null, k__28421))
      }else {
        if("\ufdd0'else") {
          throw 0;
        }else {
          return null
        }
      }
    }catch(e__6905__auto__) {
      if(e__6905__auto__ === 0) {
        try {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m__28401 = x;
            var G__28402__28403 = cljs.core.seq.call(null, m__28401);
            if(G__28402__28403) {
              var G__28405__28407 = cljs.core.first.call(null, G__28402__28403);
              var vec__28406__28408 = G__28405__28407;
              var k__28409 = cljs.core.nth.call(null, vec__28406__28408, 0, null);
              var v__28410 = cljs.core.nth.call(null, vec__28406__28408, 1, null);
              var G__28402__28411 = G__28402__28403;
              var G__28405__28412 = G__28405__28407;
              var G__28402__28413 = G__28402__28411;
              while(true) {
                var vec__28414__28415 = G__28405__28412;
                var k__28416 = cljs.core.nth.call(null, vec__28414__28415, 0, null);
                var v__28417 = cljs.core.nth.call(null, vec__28414__28415, 1, null);
                var G__28402__28418 = G__28402__28413;
                style.call(null, el__28396, k__28416, v__28417);
                var temp__3974__auto____28419 = cljs.core.next.call(null, G__28402__28418);
                if(temp__3974__auto____28419) {
                  var G__28402__28420 = temp__3974__auto____28419;
                  var G__28428 = cljs.core.first.call(null, G__28402__28420);
                  var G__28429 = G__28402__28420;
                  G__28405__28412 = G__28428;
                  G__28402__28413 = G__28429;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return el__28396
          }else {
            if("\ufdd0'else") {
              throw 0;
            }else {
              return null
            }
          }
        }catch(e__6905__auto__) {
          if(e__6905__auto__ === 0) {
            var G__28397__28400 = x;
            return null
          }else {
            throw e__6905__auto__;
          }
        }
      }else {
        throw e__6905__auto__;
      }
    }
  };
  var style__3 = function(el, k, v) {
    goog.style.setStyle(c2.dom.__GT_dom.call(null, el), cljs.core.name.call(null, k), function() {
      try {
        if(cljs.core.string_QMARK_.call(null, v)) {
          var s__28427 = v;
          return s__28427
        }else {
          if("\ufdd0'else") {
            throw 0;
          }else {
            return null
          }
        }
      }catch(e__6905__auto__) {
        if(e__6905__auto__ === 0) {
          try {
            if(cljs.core.number_QMARK_.call(null, v)) {
              var n__28426 = v;
              if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray(["\ufdd0'bottom", "\ufdd0'width", "\ufdd0'top", "\ufdd0'right", "\ufdd0'left", "\ufdd0'height"]).call(null, cljs.core.keyword.call(null, k)))) {
                return[cljs.core.str(n__28426), cljs.core.str("px")].join("")
              }else {
                return n__28426
              }
            }else {
              if("\ufdd0'else") {
                throw 0;
              }else {
                return null
              }
            }
          }catch(e__6905__auto__) {
            if(e__6905__auto__ === 0) {
              var G__28422__28425 = v;
              return null
            }else {
              throw e__6905__auto__;
            }
          }
        }else {
          throw e__6905__auto__;
        }
      }
    }());
    return el
  };
  style = function(el, k, v) {
    switch(arguments.length) {
      case 1:
        return style__1.call(this, el);
      case 2:
        return style__2.call(this, el, k);
      case 3:
        return style__3.call(this, el, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  style.cljs$lang$arity$1 = style__1;
  style.cljs$lang$arity$2 = style__2;
  style.cljs$lang$arity$3 = style__3;
  return style
}();
c2.dom.attr = function() {
  var attr = null;
  var attr__1 = function(el) {
    var attrs__28465 = c2.dom.__GT_dom.call(null, el).attributes;
    return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
      var iter__2363__auto____28472 = function iter__28466(s__28467) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__28467__28470 = s__28467;
          while(true) {
            if(cljs.core.seq.call(null, s__28467__28470)) {
              var i__28471 = cljs.core.first.call(null, s__28467__28470);
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, attrs__28465[i__28471].name), attrs__28465[i__28471].value], true), iter__28466.call(null, cljs.core.rest.call(null, s__28467__28470)))
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__2363__auto____28472.call(null, cljs.core.range.call(null, attrs__28465.length))
    }())
  };
  var attr__2 = function(el, x) {
    var el__28473 = c2.dom.__GT_dom.call(null, el);
    try {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        var k__28498 = x;
        return el__28473.getAttribute(cljs.core.name.call(null, k__28498))
      }else {
        if("\ufdd0'else") {
          throw 0;
        }else {
          return null
        }
      }
    }catch(e__6905__auto__) {
      if(e__6905__auto__ === 0) {
        try {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m__28478 = x;
            var G__28479__28480 = cljs.core.seq.call(null, m__28478);
            if(G__28479__28480) {
              var G__28482__28484 = cljs.core.first.call(null, G__28479__28480);
              var vec__28483__28485 = G__28482__28484;
              var k__28486 = cljs.core.nth.call(null, vec__28483__28485, 0, null);
              var v__28487 = cljs.core.nth.call(null, vec__28483__28485, 1, null);
              var G__28479__28488 = G__28479__28480;
              var G__28482__28489 = G__28482__28484;
              var G__28479__28490 = G__28479__28488;
              while(true) {
                var vec__28491__28492 = G__28482__28489;
                var k__28493 = cljs.core.nth.call(null, vec__28491__28492, 0, null);
                var v__28494 = cljs.core.nth.call(null, vec__28491__28492, 1, null);
                var G__28479__28495 = G__28479__28490;
                attr.call(null, el__28473, k__28493, v__28494);
                var temp__3974__auto____28496 = cljs.core.next.call(null, G__28479__28495);
                if(temp__3974__auto____28496) {
                  var G__28479__28497 = temp__3974__auto____28496;
                  var G__28500 = cljs.core.first.call(null, G__28479__28497);
                  var G__28501 = G__28479__28497;
                  G__28482__28489 = G__28500;
                  G__28479__28490 = G__28501;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return el__28473
          }else {
            if("\ufdd0'else") {
              throw 0;
            }else {
              return null
            }
          }
        }catch(e__6905__auto__) {
          if(e__6905__auto__ === 0) {
            var G__28474__28477 = x;
            return null
          }else {
            throw e__6905__auto__;
          }
        }
      }else {
        throw e__6905__auto__;
      }
    }
  };
  var attr__3 = function(el, k, v) {
    var el__28499 = c2.dom.__GT_dom.call(null, el);
    if(v == null) {
      el__28499.removeAttribute(cljs.core.name.call(null, k))
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0'style", k)) {
        c2.dom.style.call(null, el__28499, v)
      }else {
        el__28499.setAttribute(cljs.core.name.call(null, k), v)
      }
    }
    return el__28499
  };
  attr = function(el, k, v) {
    switch(arguments.length) {
      case 1:
        return attr__1.call(this, el);
      case 2:
        return attr__2.call(this, el, k);
      case 3:
        return attr__3.call(this, el, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  attr.cljs$lang$arity$1 = attr__1;
  attr.cljs$lang$arity$2 = attr__2;
  attr.cljs$lang$arity$3 = attr__3;
  return attr
}();
c2.dom.text = function() {
  var text = null;
  var text__1 = function(el) {
    return goog.dom.getTextContent(c2.dom.__GT_dom.call(null, el))
  };
  var text__2 = function(el, v) {
    var el__28503 = c2.dom.__GT_dom.call(null, el);
    goog.dom.setTextContent(el__28503, v);
    return el__28503
  };
  text = function(el, v) {
    switch(arguments.length) {
      case 1:
        return text__1.call(this, el);
      case 2:
        return text__2.call(this, el, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  text.cljs$lang$arity$1 = text__1;
  text.cljs$lang$arity$2 = text__2;
  return text
}();
c2.dom.val = function() {
  var val = null;
  var val__1 = function(el) {
    return goog.dom.forms.getValue(c2.dom.__GT_dom.call(null, el))
  };
  var val__2 = function(el, v) {
    var el__28505 = c2.dom.__GT_dom.call(null, el);
    goog.dom.forms.setValue(el__28505, v);
    return el__28505
  };
  val = function(el, v) {
    switch(arguments.length) {
      case 1:
        return val__1.call(this, el);
      case 2:
        return val__2.call(this, el, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  val.cljs$lang$arity$1 = val__1;
  val.cljs$lang$arity$2 = val__2;
  return val
}();
c2.dom.classed_BANG_ = function classed_BANG_(el, class$, classed_QMARK_) {
  return goog.dom.classes.enable(c2.dom.__GT_dom.call(null, el), cljs.core.name.call(null, class$), classed_QMARK_)
};
c2.dom.add_class_BANG_ = function add_class_BANG_(el, class$) {
  return c2.dom.classed_BANG_.call(null, el, class$, true)
};
c2.dom.remove_class_BANG_ = function remove_class_BANG_(el, class$) {
  return c2.dom.classed_BANG_.call(null, el, class$, false)
};
c2.dom.request_animation_frame = function() {
  var or__3824__auto____28507 = window.requestAnimationFrame;
  if(cljs.core.truth_(or__3824__auto____28507)) {
    return or__3824__auto____28507
  }else {
    var or__3824__auto____28508 = window.webkitRequestAnimationFrame;
    if(cljs.core.truth_(or__3824__auto____28508)) {
      return or__3824__auto____28508
    }else {
      return function(p1__28506_SHARP_) {
        return setTimeout(function() {
          return p1__28506_SHARP_.call(null)
        }, 10)
      }
    }
  }
}();
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.setIgnoreCase(opt_ignoreCase == null ? opt_uri.getIgnoreCase() : opt_ignoreCase);
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQuery(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.queryData_ = new goog.Uri.QueryData(null, this, this.ignoreCase_)
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  if(this.cachedToString_) {
    return this.cachedToString_
  }
  var out = [];
  if(this.scheme_) {
    out.push(goog.Uri.encodeSpecialChars_(this.scheme_, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  if(this.domain_) {
    out.push("//");
    if(this.userInfo_) {
      out.push(goog.Uri.encodeSpecialChars_(this.userInfo_, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.Uri.encodeString_(this.domain_));
    if(this.port_ != null) {
      out.push(":", String(this.getPort()))
    }
  }
  if(this.path_) {
    if(this.hasDomain() && this.path_.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(this.path_, goog.Uri.reDisallowedInPath_))
  }
  var query = String(this.queryData_);
  if(query) {
    out.push("?", query)
  }
  if(this.fragment_) {
    out.push("#", goog.Uri.encodeSpecialChars_(this.fragment_, goog.Uri.reDisallowedInFragment_))
  }
  return this.cachedToString_ = out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQuery(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return goog.Uri.create(this.scheme_, this.userInfo_, this.domain_, this.port_, this.path_, this.queryData_.clone(), this.fragment_, this.ignoreCase_)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.uri_ = this;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, this, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeString_ = function(unescapedPart) {
  if(goog.isString(unescapedPart)) {
    return encodeURIComponent(unescapedPart)
  }
  return null
};
goog.Uri.encodeSpecialRegExp_ = /^[a-zA-Z0-9\-_.!~*'():\/;?]*$/;
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  var ret = null;
  if(goog.isString(unescapedPart)) {
    ret = unescapedPart;
    if(!goog.Uri.encodeSpecialRegExp_.test(ret)) {
      ret = encodeURI(unescapedPart)
    }
    if(ret.search(extra) >= 0) {
      ret = ret.replace(extra, goog.Uri.encodeChar_)
    }
  }
  return ret
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInPath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.uri_ = opt_uri || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("&");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("=");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  return goog.Uri.QueryData.createFromKeysValues(keys, goog.structs.getValues(map), opt_uri, opt_ignoreCase)
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, opt_uri, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.decodedQuery_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(!this.containsKey(key)) {
    this.keyMap_.set(key, value)
  }else {
    var current = this.keyMap_.get(key);
    if(goog.isArray(current)) {
      current.push(value)
    }else {
      this.keyMap_.set(key, [current, value])
    }
  }
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  if(this.keyMap_) {
    this.keyMap_.clear()
  }
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        rv.push(keys[i])
      }
    }else {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv;
  if(opt_key) {
    var key = this.getKeyName_(opt_key);
    if(this.containsKey(key)) {
      var value = this.keyMap_.get(key);
      if(goog.isArray(value)) {
        return value
      }else {
        rv = [];
        rv.push(value)
      }
    }else {
      rv = []
    }
  }else {
    var vals = this.keyMap_.getValues();
    rv = [];
    for(var i = 0;i < vals.length;i++) {
      var val = vals[i];
      if(goog.isArray(val)) {
        goog.array.extend(rv, val)
      }else {
        rv.push(val)
      }
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  this.keyMap_.set(key, value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      return val[0]
    }else {
      return val
    }
  }else {
    return opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  if(values.length > 0) {
    this.keyMap_.set(key, values);
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var count = 0;
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        if(count > 0) {
          sb.push("&")
        }
        sb.push(encodedKey);
        if(val[j] !== "") {
          sb.push("=", goog.string.urlEncode(val[j]))
        }
        count++
      }
    }else {
      if(count > 0) {
        sb.push("&")
      }
      sb.push(encodedKey);
      if(val !== "") {
        sb.push("=", goog.string.urlEncode(val))
      }
      count++
    }
  }
  return this.encodedQuery_ = sb.join("")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  if(!this.decodedQuery_) {
    this.decodedQuery_ = goog.Uri.decodeOrEmpty_(this.toString())
  }
  return this.decodedQuery_
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  delete this.decodedQuery_;
  delete this.encodedQuery_;
  if(this.uri_) {
    delete this.uri_.cachedToString_
  }
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  if(this.decodedQuery_) {
    rv.decodedQuery_ = this.decodedQuery_
  }
  if(this.encodedQuery_) {
    rv.encodedQuery_ = this.encodedQuery_
  }
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone()
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key, map) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.add(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
goog.provide("goog.net.Cookies");
goog.provide("goog.net.cookies");
goog.require("goog.userAgent");
goog.net.Cookies = function(context) {
  this.document_ = context
};
goog.net.Cookies.MAX_COOKIE_LENGTH = 3950;
goog.net.Cookies.SPLIT_RE_ = /\s*;\s*/;
goog.net.Cookies.TEST_COOKIE_NAME_ = "COOKIES_TEST_";
goog.net.Cookies.prototype.isEnabled = function() {
  var isEnabled = this.isNavigatorCookieEnabled_();
  if(isEnabled && goog.userAgent.WEBKIT) {
    var cookieName = goog.net.Cookies.TEST_COOKIE_NAME_ + goog.now();
    goog.net.cookies.set(cookieName, "1");
    if(!this.get(cookieName)) {
      return false
    }
    this.remove(cookieName)
  }
  return isEnabled
};
goog.net.Cookies.prototype.isValidName = function(name) {
  return!/[;=\s]/.test(name)
};
goog.net.Cookies.prototype.isValidValue = function(value) {
  return!/[;\r\n]/.test(value)
};
goog.net.Cookies.prototype.set = function(name, value, opt_maxAge, opt_path, opt_domain, opt_secure) {
  if(!this.isValidName(name)) {
    throw Error('Invalid cookie name "' + name + '"');
  }
  if(!this.isValidValue(value)) {
    throw Error('Invalid cookie value "' + value + '"');
  }
  if(!goog.isDef(opt_maxAge)) {
    opt_maxAge = -1
  }
  var domainStr = opt_domain ? ";domain=" + opt_domain : "";
  var pathStr = opt_path ? ";path=" + opt_path : "";
  var secureStr = opt_secure ? ";secure" : "";
  var expiresStr;
  if(opt_maxAge < 0) {
    expiresStr = ""
  }else {
    if(opt_maxAge == 0) {
      var pastDate = new Date(1970, 1, 1);
      expiresStr = ";expires=" + pastDate.toUTCString()
    }else {
      var futureDate = new Date(goog.now() + opt_maxAge * 1E3);
      expiresStr = ";expires=" + futureDate.toUTCString()
    }
  }
  this.setCookie_(name + "=" + value + domainStr + pathStr + expiresStr + secureStr)
};
goog.net.Cookies.prototype.get = function(name, opt_default) {
  var nameEq = name + "=";
  var parts = this.getParts_();
  for(var i = 0, part;part = parts[i];i++) {
    if(part.indexOf(nameEq) == 0) {
      return part.substr(nameEq.length)
    }
  }
  return opt_default
};
goog.net.Cookies.prototype.remove = function(name, opt_path, opt_domain) {
  var rv = this.containsKey(name);
  this.set(name, "", 0, opt_path, opt_domain);
  return rv
};
goog.net.Cookies.prototype.getKeys = function() {
  return this.getKeyValues_().keys
};
goog.net.Cookies.prototype.getValues = function() {
  return this.getKeyValues_().values
};
goog.net.Cookies.prototype.isEmpty = function() {
  return!this.getCookie_()
};
goog.net.Cookies.prototype.getCount = function() {
  var cookie = this.getCookie_();
  if(!cookie) {
    return 0
  }
  return this.getParts_().length
};
goog.net.Cookies.prototype.containsKey = function(key) {
  return goog.isDef(this.get(key))
};
goog.net.Cookies.prototype.containsValue = function(value) {
  var values = this.getKeyValues_().values;
  for(var i = 0;i < values.length;i++) {
    if(values[i] == value) {
      return true
    }
  }
  return false
};
goog.net.Cookies.prototype.clear = function() {
  var keys = this.getKeyValues_().keys;
  for(var i = keys.length - 1;i >= 0;i--) {
    this.remove(keys[i])
  }
};
goog.net.Cookies.prototype.setCookie_ = function(s) {
  this.document_.cookie = s
};
goog.net.Cookies.prototype.getCookie_ = function() {
  return this.document_.cookie
};
goog.net.Cookies.prototype.getParts_ = function() {
  return(this.getCookie_() || "").split(goog.net.Cookies.SPLIT_RE_)
};
goog.net.Cookies.prototype.isNavigatorCookieEnabled_ = function() {
  return navigator.cookieEnabled
};
goog.net.Cookies.prototype.getKeyValues_ = function() {
  var parts = this.getParts_();
  var keys = [], values = [], index, part;
  for(var i = 0;part = parts[i];i++) {
    index = part.indexOf("=");
    if(index == -1) {
      keys.push("");
      values.push(part)
    }else {
      keys.push(part.substring(0, index));
      values.push(part.substring(index + 1))
    }
  }
  return{keys:keys, values:values}
};
goog.net.cookies = new goog.net.Cookies(document);
goog.net.cookies.MAX_COOKIE_LENGTH = goog.net.Cookies.MAX_COOKIE_LENGTH;
goog.provide("shoreleave.browser.cookies");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.net.Cookies");
goog.net.Cookies.prototype.cljs$core$IHash$ = true;
goog.net.Cookies.prototype.cljs$core$IHash$_hash$arity$1 = function(c) {
  return cljs.core._hash.call(null, cljs.core._persistent_BANG_.call(null, c))
};
goog.net.Cookies.prototype.cljs$core$ILookup$ = true;
goog.net.Cookies.prototype.cljs$core$ILookup$_lookup$arity$2 = function(c, k) {
  return cljs.core._lookup.call(null, c, k, null)
};
goog.net.Cookies.prototype.cljs$core$ILookup$_lookup$arity$3 = function(c, k, not_found) {
  var v__29226 = c.get(cljs.core.name.call(null, k), not_found);
  if(cljs.core.string_QMARK_.call(null, v__29226)) {
    return goog.string.urlDecode(v__29226)
  }else {
    return v__29226
  }
};
goog.net.Cookies.prototype.cljs$core$IAssociative$ = true;
goog.net.Cookies.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(c, k, v) {
  return cljs.core._assoc.call(null, cljs.core._persistent_BANG_.call(null, c), k, v)
};
goog.net.Cookies.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(c, k) {
  return c.containsKey(cljs.core.name.call(null, k))
};
goog.net.Cookies.prototype.cljs$core$IFn$ = true;
goog.net.Cookies.prototype.call = function() {
  var G__29251 = null;
  var G__29251__2 = function(this_sym29227, k) {
    var this_sym29227__29229 = this;
    var c__29230 = this_sym29227__29229;
    return cljs.core._lookup.call(null, c__29230, k)
  };
  var G__29251__3 = function(this_sym29228, k, not_found) {
    var this_sym29228__29231 = this;
    var c__29232 = this_sym29228__29231;
    return cljs.core._lookup.call(null, c__29232, k, not_found)
  };
  G__29251 = function(this_sym29228, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__29251__2.call(this, this_sym29228, k);
      case 3:
        return G__29251__3.call(this, this_sym29228, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__29251
}();
goog.net.Cookies.prototype.apply = function(this_sym29224, args29225) {
  return this_sym29224.call.apply(this_sym29224, [this_sym29224].concat(args29225.slice()))
};
goog.net.Cookies.prototype.cljs$core$ITransientMap$ = true;
goog.net.Cookies.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$4 = function() {
  var G__29252__delegate = function(c, k, opts) {
    var temp__3974__auto____29234 = function() {
      var and__3822__auto____29233 = c.isValidName(cljs.core.name.call(null, k));
      if(cljs.core.truth_(and__3822__auto____29233)) {
        return cljs.core.name.call(null, k)
      }else {
        return and__3822__auto____29233
      }
    }();
    if(cljs.core.truth_(temp__3974__auto____29234)) {
      var k__29235 = temp__3974__auto____29234;
      var map__29236__29237 = cljs.core.apply.call(null, cljs.core.hash_map, opts);
      var map__29236__29238 = cljs.core.seq_QMARK_.call(null, map__29236__29237) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29236__29237) : map__29236__29237;
      var domain__29239 = cljs.core._lookup.call(null, map__29236__29238, "\ufdd0'domain", null);
      var path__29240 = cljs.core._lookup.call(null, map__29236__29238, "\ufdd0'path", null);
      return c.remove(k__29235, path__29240, domain__29239)
    }else {
      return null
    }
  };
  var G__29252 = function(c, k, var_args) {
    var opts = null;
    if(goog.isDef(var_args)) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return G__29252__delegate.call(this, c, k, opts)
  };
  G__29252.cljs$lang$maxFixedArity = 2;
  G__29252.cljs$lang$applyTo = function(arglist__29253) {
    var c = cljs.core.first(arglist__29253);
    var k = cljs.core.first(cljs.core.next(arglist__29253));
    var opts = cljs.core.rest(cljs.core.next(arglist__29253));
    return G__29252__delegate(c, k, opts)
  };
  G__29252.cljs$lang$arity$variadic = G__29252__delegate;
  return G__29252
}();
goog.net.Cookies.prototype.cljs$core$ISeqable$ = true;
goog.net.Cookies.prototype.cljs$core$ISeqable$_seq$arity$1 = function(c) {
  return cljs.core.map.call(null, cljs.core.vector, c.getKeys(), c.getValues())
};
goog.net.Cookies.prototype.cljs$core$IPrintable$ = true;
goog.net.Cookies.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(c, opts) {
  return cljs.core._pr_seq.call(null, cljs.core._persistent_BANG_.call(null, c), opts)
};
goog.net.Cookies.prototype.cljs$core$ICounted$ = true;
goog.net.Cookies.prototype.cljs$core$ICounted$_count$arity$1 = function(c) {
  return c.getCount()
};
goog.net.Cookies.prototype.cljs$core$ITransientCollection$ = true;
goog.net.Cookies.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(c) {
  return shoreleave.browser.cookies.as_hash_map.call(null, c)
};
goog.net.Cookies.prototype.cljs$core$ITransientAssociative$ = true;
goog.net.Cookies.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$5 = function() {
  var G__29254__delegate = function(c, k, v, opts) {
    var temp__3974__auto____29242 = function() {
      var and__3822__auto____29241 = c.isValidName(cljs.core.name.call(null, k));
      if(cljs.core.truth_(and__3822__auto____29241)) {
        return cljs.core.name.call(null, k)
      }else {
        return and__3822__auto____29241
      }
    }();
    if(cljs.core.truth_(temp__3974__auto____29242)) {
      var k__29243 = temp__3974__auto____29242;
      var map__29244__29245 = cljs.core.apply.call(null, cljs.core.hash_map, opts);
      var map__29244__29246 = cljs.core.seq_QMARK_.call(null, map__29244__29245) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29244__29245) : map__29244__29245;
      var secure_QMARK___29247 = cljs.core._lookup.call(null, map__29244__29246, "\ufdd0'secure?", null);
      var domain__29248 = cljs.core._lookup.call(null, map__29244__29246, "\ufdd0'domain", null);
      var path__29249 = cljs.core._lookup.call(null, map__29244__29246, "\ufdd0'path", null);
      var max_age__29250 = cljs.core._lookup.call(null, map__29244__29246, "\ufdd0'max-age", null);
      return c.set(k__29243, v, max_age__29250, path__29249, domain__29248, secure_QMARK___29247)
    }else {
      return null
    }
  };
  var G__29254 = function(c, k, v, var_args) {
    var opts = null;
    if(goog.isDef(var_args)) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return G__29254__delegate.call(this, c, k, v, opts)
  };
  G__29254.cljs$lang$maxFixedArity = 3;
  G__29254.cljs$lang$applyTo = function(arglist__29255) {
    var c = cljs.core.first(arglist__29255);
    var k = cljs.core.first(cljs.core.next(arglist__29255));
    var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__29255)));
    var opts = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__29255)));
    return G__29254__delegate(c, k, v, opts)
  };
  G__29254.cljs$lang$arity$variadic = G__29254__delegate;
  return G__29254
}();
shoreleave.browser.cookies.cookies = new goog.net.Cookies(document);
shoreleave.browser.cookies.as_hash_map = function() {
  var as_hash_map = null;
  var as_hash_map__0 = function() {
    return as_hash_map.call(null, shoreleave.browser.cookies.cookies)
  };
  var as_hash_map__1 = function(cks) {
    return cljs.core.zipmap.call(null, cks.getKeys(), cks.getValues())
  };
  as_hash_map = function(cks) {
    switch(arguments.length) {
      case 0:
        return as_hash_map__0.call(this);
      case 1:
        return as_hash_map__1.call(this, cks)
    }
    throw"Invalid arity: " + arguments.length;
  };
  as_hash_map.cljs$lang$arity$0 = as_hash_map__0;
  as_hash_map.cljs$lang$arity$1 = as_hash_map__1;
  return as_hash_map
}();
shoreleave.browser.cookies.cookies_enabled_QMARK_ = function() {
  var cookies_enabled_QMARK_ = null;
  var cookies_enabled_QMARK___0 = function() {
    return cookies_enabled_QMARK_.call(null, shoreleave.browser.cookies.cookies)
  };
  var cookies_enabled_QMARK___1 = function(cks) {
    return cks.isEnabled()
  };
  cookies_enabled_QMARK_ = function(cks) {
    switch(arguments.length) {
      case 0:
        return cookies_enabled_QMARK___0.call(this);
      case 1:
        return cookies_enabled_QMARK___1.call(this, cks)
    }
    throw"Invalid arity: " + arguments.length;
  };
  cookies_enabled_QMARK_.cljs$lang$arity$0 = cookies_enabled_QMARK___0;
  cookies_enabled_QMARK_.cljs$lang$arity$1 = cookies_enabled_QMARK___1;
  return cookies_enabled_QMARK_
}();
shoreleave.browser.cookies.empty_BANG_ = function empty_BANG_(cks) {
  return cks.clear()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
MESSAGE:"message", CONNECT:"connect"};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.disposeInternal = function() {
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isVersion("9"), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = new Function("a", "return a");
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      try {
        goog.reflect.sinkValue(relatedTarget.nodeName)
      }catch(err) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.structs.SimplePool");
goog.require("goog.Disposable");
goog.structs.SimplePool = function(initialCount, maxCount) {
  goog.Disposable.call(this);
  this.maxCount_ = maxCount;
  this.freeQueue_ = [];
  this.createInitial_(initialCount)
};
goog.inherits(goog.structs.SimplePool, goog.Disposable);
goog.structs.SimplePool.prototype.createObjectFn_ = null;
goog.structs.SimplePool.prototype.disposeObjectFn_ = null;
goog.structs.SimplePool.prototype.setCreateObjectFn = function(createObjectFn) {
  this.createObjectFn_ = createObjectFn
};
goog.structs.SimplePool.prototype.setDisposeObjectFn = function(disposeObjectFn) {
  this.disposeObjectFn_ = disposeObjectFn
};
goog.structs.SimplePool.prototype.getObject = function() {
  if(this.freeQueue_.length) {
    return this.freeQueue_.pop()
  }
  return this.createObject()
};
goog.structs.SimplePool.prototype.releaseObject = function(obj) {
  if(this.freeQueue_.length < this.maxCount_) {
    this.freeQueue_.push(obj)
  }else {
    this.disposeObject(obj)
  }
};
goog.structs.SimplePool.prototype.createInitial_ = function(initialCount) {
  if(initialCount > this.maxCount_) {
    throw Error("[goog.structs.SimplePool] Initial cannot be greater than max");
  }
  for(var i = 0;i < initialCount;i++) {
    this.freeQueue_.push(this.createObject())
  }
};
goog.structs.SimplePool.prototype.createObject = function() {
  if(this.createObjectFn_) {
    return this.createObjectFn_()
  }else {
    return{}
  }
};
goog.structs.SimplePool.prototype.disposeObject = function(obj) {
  if(this.disposeObjectFn_) {
    this.disposeObjectFn_(obj)
  }else {
    if(goog.isObject(obj)) {
      if(goog.isFunction(obj.dispose)) {
        obj.dispose()
      }else {
        for(var i in obj) {
          delete obj[i]
        }
      }
    }
  }
};
goog.structs.SimplePool.prototype.disposeInternal = function() {
  goog.structs.SimplePool.superClass_.disposeInternal.call(this);
  var freeQueue = this.freeQueue_;
  while(freeQueue.length) {
    this.disposeObject(freeQueue.pop())
  }
  delete this.freeQueue_
};
goog.provide("goog.events.pools");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Listener");
goog.require("goog.structs.SimplePool");
goog.require("goog.userAgent.jscript");
goog.events.ASSUME_GOOD_GC = false;
goog.events.pools.getObject;
goog.events.pools.releaseObject;
goog.events.pools.getArray;
goog.events.pools.releaseArray;
goog.events.pools.getProxy;
goog.events.pools.setProxyCallbackFunction;
goog.events.pools.releaseProxy;
goog.events.pools.getListener;
goog.events.pools.releaseListener;
goog.events.pools.getEvent;
goog.events.pools.releaseEvent;
(function() {
  var BAD_GC = !goog.events.ASSUME_GOOD_GC && goog.userAgent.jscript.HAS_JSCRIPT && !goog.userAgent.jscript.isVersion("5.7");
  function getObject() {
    return{count_:0, remaining_:0}
  }
  function getArray() {
    return[]
  }
  var proxyCallbackFunction;
  goog.events.pools.setProxyCallbackFunction = function(cb) {
    proxyCallbackFunction = cb
  };
  function getProxy() {
    var f = function(eventObject) {
      return proxyCallbackFunction.call(f.src, f.key, eventObject)
    };
    return f
  }
  function getListener() {
    return new goog.events.Listener
  }
  function getEvent() {
    return new goog.events.BrowserEvent
  }
  if(!BAD_GC) {
    goog.events.pools.getObject = getObject;
    goog.events.pools.releaseObject = goog.nullFunction;
    goog.events.pools.getArray = getArray;
    goog.events.pools.releaseArray = goog.nullFunction;
    goog.events.pools.getProxy = getProxy;
    goog.events.pools.releaseProxy = goog.nullFunction;
    goog.events.pools.getListener = getListener;
    goog.events.pools.releaseListener = goog.nullFunction;
    goog.events.pools.getEvent = getEvent;
    goog.events.pools.releaseEvent = goog.nullFunction
  }else {
    goog.events.pools.getObject = function() {
      return objectPool.getObject()
    };
    goog.events.pools.releaseObject = function(obj) {
      objectPool.releaseObject(obj)
    };
    goog.events.pools.getArray = function() {
      return arrayPool.getObject()
    };
    goog.events.pools.releaseArray = function(obj) {
      arrayPool.releaseObject(obj)
    };
    goog.events.pools.getProxy = function() {
      return proxyPool.getObject()
    };
    goog.events.pools.releaseProxy = function(obj) {
      proxyPool.releaseObject(getProxy())
    };
    goog.events.pools.getListener = function() {
      return listenerPool.getObject()
    };
    goog.events.pools.releaseListener = function(obj) {
      listenerPool.releaseObject(obj)
    };
    goog.events.pools.getEvent = function() {
      return eventPool.getObject()
    };
    goog.events.pools.releaseEvent = function(obj) {
      eventPool.releaseObject(obj)
    };
    var OBJECT_POOL_INITIAL_COUNT = 0;
    var OBJECT_POOL_MAX_COUNT = 600;
    var objectPool = new goog.structs.SimplePool(OBJECT_POOL_INITIAL_COUNT, OBJECT_POOL_MAX_COUNT);
    objectPool.setCreateObjectFn(getObject);
    var ARRAY_POOL_INITIAL_COUNT = 0;
    var ARRAY_POOL_MAX_COUNT = 600;
    var arrayPool = new goog.structs.SimplePool(ARRAY_POOL_INITIAL_COUNT, ARRAY_POOL_MAX_COUNT);
    arrayPool.setCreateObjectFn(getArray);
    var HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT = 0;
    var HANDLE_EVENT_PROXY_POOL_MAX_COUNT = 600;
    var proxyPool = new goog.structs.SimplePool(HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT, HANDLE_EVENT_PROXY_POOL_MAX_COUNT);
    proxyPool.setCreateObjectFn(getProxy);
    var LISTENER_POOL_INITIAL_COUNT = 0;
    var LISTENER_POOL_MAX_COUNT = 600;
    var listenerPool = new goog.structs.SimplePool(LISTENER_POOL_INITIAL_COUNT, LISTENER_POOL_MAX_COUNT);
    listenerPool.setCreateObjectFn(getListener);
    var EVENT_POOL_INITIAL_COUNT = 0;
    var EVENT_POOL_MAX_COUNT = 600;
    var eventPool = new goog.structs.SimplePool(EVENT_POOL_INITIAL_COUNT, EVENT_POOL_MAX_COUNT);
    eventPool.setCreateObjectFn(getEvent)
  }
})();
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.pools");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.requiresSyntheticEventPropagation_;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = goog.events.pools.getObject()
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = goog.events.pools.getObject();
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = goog.events.pools.getArray();
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.pools.getProxy();
      proxy.src = src;
      listenerObj = goog.events.pools.getListener();
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = goog.events.pools.getArray()
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          goog.events.pools.releaseProxy(proxy);
          goog.events.pools.releaseListener(listenerArray[oldIndex]);
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        goog.events.pools.releaseArray(listenerArray);
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type][capture]);
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type]);
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(goog.events.synthesizeEventPropagation_()) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = goog.events.pools.getEvent();
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = goog.events.pools.getArray();
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0;
        goog.events.pools.releaseArray(ancestors)
      }
      evt.dispose();
      goog.events.pools.releaseEvent(evt)
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_);
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.events.synthesizeEventPropagation_ = function() {
  if(goog.events.requiresSyntheticEventPropagation_ === undefined) {
    goog.events.requiresSyntheticEventPropagation_ = goog.userAgent.IE && !goog.global["addEventListener"]
  }
  return goog.events.requiresSyntheticEventPropagation_
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
clojure.browser.event.EventType = {};
clojure.browser.event.event_types = function event_types(this$) {
  if(function() {
    var and__3822__auto____29190 = this$;
    if(and__3822__auto____29190) {
      return this$.clojure$browser$event$EventType$event_types$arity$1
    }else {
      return and__3822__auto____29190
    }
  }()) {
    return this$.clojure$browser$event$EventType$event_types$arity$1(this$)
  }else {
    var x__2264__auto____29191 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____29192 = clojure.browser.event.event_types[goog.typeOf(x__2264__auto____29191)];
      if(or__3824__auto____29192) {
        return or__3824__auto____29192
      }else {
        var or__3824__auto____29193 = clojure.browser.event.event_types["_"];
        if(or__3824__auto____29193) {
          return or__3824__auto____29193
        }else {
          throw cljs.core.missing_protocol.call(null, "EventType.event-types", this$);
        }
      }
    }().call(null, this$)
  }
};
Element.prototype.clojure$browser$event$EventType$ = true;
Element.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__29194) {
    var vec__29195__29196 = p__29194;
    var k__29197 = cljs.core.nth.call(null, vec__29195__29196, 0, null);
    var v__29198 = cljs.core.nth.call(null, vec__29195__29196, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__29197.toLowerCase()), v__29198], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
goog.events.EventTarget.prototype.clojure$browser$event$EventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__29199) {
    var vec__29200__29201 = p__29199;
    var k__29202 = cljs.core.nth.call(null, vec__29200__29201, 0, null);
    var v__29203 = cljs.core.nth.call(null, vec__29200__29201, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__29202.toLowerCase()), v__29203], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false)
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen.cljs$lang$arity$3 = listen__3;
  listen.cljs$lang$arity$4 = listen__4;
  return listen
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false)
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once.cljs$lang$arity$3 = listen_once__3;
  listen_once.cljs$lang$arity$4 = listen_once__4;
  return listen_once
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false)
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten.cljs$lang$arity$3 = unlisten__3;
  unlisten.cljs$lang$arity$4 = unlisten__4;
  return unlisten
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key)
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event)
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e)
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount()
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.serialize = function(object) {
  return(new goog.json.Serializer).serialize(object)
};
goog.json.Serializer = function() {
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    this.serialize_(arr[i], sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return Boolean(opt_cancel)
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.getFunctionName = function(fn) {
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.logToSpeedTracer_ = function(msg) {
  if(goog.global["console"] && goog.global["console"]["markTimeline"]) {
    goog.global["console"]["markTimeline"](msg)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  this.logToSpeedTracer_("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.debug.Logger");
goog.require("goog.json");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.base(this);
  this.services_ = {}
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.debug.Logger.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if(opt_connectCb) {
    opt_connectCb()
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload}
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if(!service) {
    return
  }
  payload = this.decodePayload(serviceName, payload, service.objectPayload);
  if(goog.isDefAndNotNull(payload)) {
    service.callback(payload)
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if(service) {
    return service
  }else {
    if(this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload}
    }
  }
  this.logger.warning('Unknown service name "' + serviceName + '"');
  return null
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if(objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload)
    }catch(err) {
      this.logger.warning("Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null
    }
  }else {
    if(!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload)
    }
  }
  return payload
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  goog.dispose(this.logger);
  delete this.logger;
  delete this.services_;
  delete this.defaultService_
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.debug.Logger");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.channels_ = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while(length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength))
  }
  return s
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.debug.Logger.getLogger("goog.net.xpc");
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.net.xpc");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper()
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow()
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || ""
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this)
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER) {
    this.iframeElm_ = this.channel_.iframeElement_;
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this)
  }else {
    this.attemptSetup_()
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if(!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement
    }
    if(this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(retry) {
    if(!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this)
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected_()
  }else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if(!this.recursive_ && this.queue_.length == 0) {
    this.channel_.deliver_(serviceName, payload)
  }else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if(this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1)
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while(this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.deliver_(msg.serviceName, msg.payload)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null
};
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = []
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg"
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack"
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  goog.net.xpc.logger.fine("transport connect called");
  if(!this.initialized_) {
    goog.net.xpc.logger.fine("initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true
  }
  this.checkForeignFramesReady_()
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name]
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.net.xpc.logger.finest("constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr
};
goog.net.xpc.IframePollingTransport.prototype.innerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("innerPeerReconnect called");
  this.channel_.name = goog.net.xpc.getRandomString(10);
  goog.net.xpc.logger.finest("switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name)
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("outerPeerReconnect called");
  var frames = this.channel_.peerWindowObject_.frames;
  var length = frames.length;
  for(var i = 0;i < length;i++) {
    var frameName;
    try {
      if(frames[i] && frames[i].name) {
        frameName = frames[i].name
      }
    }catch(e) {
    }
    if(!frameName) {
      continue
    }
    var message = frameName.split("_");
    if(message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.net.xpc.logger.finest("deconstructSenderFrames called");
  if(this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null
  }
  if(this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if(!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.net.xpc.logger.finest("foreign frames not (yet) present");
    if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.INNER && !this.reconnectFrame_) {
      this.innerPeerReconnect_()
    }else {
      if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER) {
        this.outerPeerReconnect_()
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100)
  }else {
    goog.net.xpc.logger.fine("foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getMsgFrameName_()], goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getAckFrameName_()], goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_()
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.net.xpc.logger.finest("checking for receive frame: " + frameName);
  try {
    var winObj = this.channel_.peerWindowObject_.frames[frameName];
    if(!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false
    }
  }catch(e) {
    return false
  }
  return true
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.channel_.peerWindowObject_.frames;
  if(!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if(!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this)
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.net.xpc.logger.fine("local frames not (yet) present")
  }else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.net.xpc.logger.fine("local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.net.xpc.logger.fine("SETUP sent")
    }, this), 100)
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if(this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected_();
    if(this.deliveryQueue_) {
      goog.net.xpc.logger.fine("delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for(var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.deliver_(m.service, m.payload)
      }
      delete this.deliveryQueue_
    }
  }else {
    goog.net.xpc.logger.finest("checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_)
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.net.xpc.logger.finest("msg received: " + raw);
  if(raw == goog.net.xpc.SETUP) {
    if(!this.ackSender_) {
      return
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.net.xpc.logger.finest("SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if(pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame)
      }else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if(part0 == 1) {
          this.parts_ = []
        }
        this.parts_.push(frame);
        if(part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_
        }
      }
    }else {
      goog.net.xpc.logger.warning("received msg, but channel is not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.net.xpc.logger.finest("ack received: " + msgStr);
  if(msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected()) {
      if(!this.waitForAck_) {
        goog.net.xpc.logger.warning("got unexpected ack");
        return
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if(seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_()
      }else {
        goog.net.xpc.logger.warning("got ack with wrong sequence")
      }
    }else {
      goog.net.xpc.logger.warning("received ack, but channel not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if(this.waitForAck_ || !this.sendQueue_.length) {
    return
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.net.xpc.logger.finest("msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if(!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.net.xpc.logger.finest("queued delivery")
  }else {
    this.channel_.deliver_(service, payload)
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if(!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame)
  }else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while(pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_
    }
  }
  this.sendNextFrame_()
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var rcvd = false;
  try {
    for(var i = 0, l = goog.net.xpc.IframePollingTransport.receivers_.length;i < l;i++) {
      rcvd = rcvd || goog.net.xpc.IframePollingTransport.receivers_[i].receive()
    }
  }catch(e) {
    goog.net.xpc.logger.info("receive_() failed: " + e);
    goog.net.xpc.IframePollingTransport.receivers_[i].transport_.channel_.notifyTransportError_();
    if(!goog.net.xpc.IframePollingTransport.receivers_.length) {
      return
    }
  }
  var now = goog.now();
  if(rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t)
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.net.xpc.logger.fine("starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if(goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_)
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_)
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if(goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url
    }else {
      this.sendFrame_.location.replace(url)
    }
  }catch(e) {
    goog.net.xpc.logger.severe("sending failed", e)
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if(loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if(payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload))
    }
    return true
  }else {
    return false
  }
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_()
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if(goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if(!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_()
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while(goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.net.xpc.logger.finest("iframe removed")
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_()
  }
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if(!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP)
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if(!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  }else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if(!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0}
    }
    if(goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if(fragmentInfo.received != fragmentInfo.expected) {
      return
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr]
  }
  goog.net.xpc.channels_[channelName].deliver_(service, decodeURIComponent(payload))
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if(payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected_()
  }else {
    if(payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected_()
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if(goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for(var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr)
    }
  }else {
    this.send_(service, encodedPayload)
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if(goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    div.innerHTML = '<iframe onload="this.xpcOnload()"></iframe>';
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_
  }else {
    var ifr = this.getWindow().document.createElement("iframe");
    if(goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr})
    }else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_)
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if(this.peerIframeId_) {
    url += "," + this.peerIframeId_
  }
  url += "|" + service;
  if(opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.net.xpc.logger.finest("msg sent: " + url)
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.net.xpc.logger.finest("iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0)
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerHostname_ = peerHostname || "*"
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if(!goog.isNumber(value)) {
    value = 0
  }
  if(value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if(headDelim == -1 || serviceDelim == -1) {
    return false
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.net.xpc.logger.fine("messageReceived: channel=" + channelName + ", service=" + service + ", payload=" + payload);
  var channel = goog.net.xpc.channels_[channelName];
  if(channel) {
    channel.deliver_(service, payload, msgEvt.getBrowserEvent().origin);
    return true
  }
  for(var staleChannelName in goog.net.xpc.channels_) {
    var staleChannel = goog.net.xpc.channels_[staleChannelName];
    if(staleChannel.getRole() == goog.net.xpc.CrossPageChannel.Role.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && payload == goog.net.xpc.SETUP) {
      goog.net.xpc.logger.fine("changing channel name to " + channelName);
      staleChannel.name = channelName;
      delete goog.net.xpc.channels_[staleChannelName];
      goog.net.xpc.channels_[channelName] = staleChannel;
      staleChannel.deliver_(service, payload);
      return true
    }
  }
  goog.net.xpc.logger.info('channel name mismatch; message ignored"');
  return false
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  switch(payload) {
    case goog.net.xpc.SETUP:
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      break;
    case goog.net.xpc.SETUP_ACK_:
      this.channel_.notifyConnected_();
      break
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.connectWithRetries_()
};
goog.net.xpc.NativeMessagingTransport.prototype.connectWithRetries_ = function() {
  if(this.channel_.isConnected() || this.isDisposed()) {
    return
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  this.getWindow().setTimeout(goog.bind(this.connectWithRetries_, this), 100)
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.peerWindowObject_;
  if(!win) {
    goog.net.xpc.logger.fine("send(): window not ready");
    return
  }
  var obj = win.postMessage ? win : win.document;
  this.send = function(service, payload) {
    goog.net.xpc.logger.fine("send(): payload=" + payload + " to hostname=" + this.peerHostname_);
    obj.postMessage(this.channel_.name + "|" + service + ":" + payload, this.peerHostname_)
  };
  this.send(service, payload)
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if(value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
    }
  }
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if(listenWindow["nix_setup_complete"]) {
    return
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport = transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth = auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken = m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap = New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " = wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting global setup: " + e)
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER) {
    this.attemptOuterSetup_()
  }else {
    this.attemptInnerSetup_()
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  var innerFrame = this.channel_.iframeElement_;
  try {
    innerFrame.contentWindow.opener = this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_);
    this.localSetupCompleted_ = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  try {
    var opener = this.getWindow().opener;
    if(opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if(remoteAuthToken != this.remoteAuthToken_) {
        goog.net.xpc.logger.severe("Invalid auth token from other party");
        return
      }
      this.nixChannel_["CreateChannel"](this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
    return
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if(typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.net.xpc.logger.severe("Invalid NIX channel given to createChannel_")
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if(remoteAuthToken != this.remoteAuthToken_) {
    goog.net.xpc.logger.severe("Invalid auth token from other party");
    return
  }
  this.channel_.notifyConnected_()
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  function deliveryHandler() {
    this.channel_.deliver_(serviceName, payload)
  }
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1)
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if(typeof this.nixChannel_ !== "unknown") {
    goog.net.xpc.logger.severe("NIX channel not connected")
  }
  this.nixChannel_["SendMessage"](service, payload)
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.nixChannel_ = null
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.provide("goog.net.xpc.CrossPageChannel.Role");
goog.require("goog.Disposable");
goog.require("goog.Uri");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.json");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.base(this);
  for(var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if(uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  goog.net.xpc.channels_[this.name] = this;
  goog.events.listen(window, "unload", goog.net.xpc.CrossPageChannel.disposeAll_);
  goog.net.xpc.logger.info("CrossPageChannel created: " + this.name)
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if(goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING
  }else {
    if(goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD
    }else {
      if(goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY
      }else {
        if(goog.userAgent.IE) {
          transportType = goog.net.xpc.TransportTypes.NIX
        }else {
          if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI] && this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
            transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING
          }
        }
      }
    }
  }
  return transportType
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if(this.transport_) {
    return
  }
  if(!this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    this.cfg_[goog.net.xpc.CfgFields.TRANSPORT] = this.determineTransportType_()
  }
  switch(this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME], this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break
  }
  if(this.transport_) {
    goog.net.xpc.logger.info("Transport created: " + this.transport_.getName())
  }else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType()
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName()
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]
  }
  return peerCfg
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4)
  }
  var iframeElm = goog.dom.createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if(opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm)
  }else {
    iframeElm.style.width = iframeElm.style.height = "100%"
  }
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if(goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri)
  }
  if(opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()))
  }
  if(goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    this.deferConnect_ = true;
    window.setTimeout(goog.bind(function() {
      this.deferConnect_ = false;
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")");
      if(this.connectDeferred_) {
        this.connect(this.connectCb_)
      }
    }, this), 1)
  }else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")")
  }
  return iframeElm
};
goog.net.xpc.CrossPageChannel.prototype.deferConnect_ = false;
goog.net.xpc.CrossPageChannel.prototype.connectDeferred_ = false;
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if(this.deferConnect_) {
    goog.net.xpc.logger.info("connect() deferred");
    this.connectDeferred_ = true;
    return
  }
  goog.net.xpc.logger.info("connect()");
  if(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID])
  }
  if(this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if(!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]]
    }
    this.setPeerWindowObject(winObj)
  }
  if(!this.peerWindowObject_) {
    if(window == top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    }else {
      this.setPeerWindowObject(window.parent)
    }
  }
  this.createTransport_();
  this.transport_.connect()
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  if(!this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  this.transport_.dispose();
  this.transport_ = null;
  goog.net.xpc.logger.info('Channel "' + this.name + '" closed')
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = function() {
  if(this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.net.xpc.logger.info('Channel "' + this.name + '" connected');
  this.connectCb_()
};
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError_ = function() {
  goog.net.xpc.logger.info("Transport Error");
  this.close()
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if(!this.isConnected()) {
    goog.net.xpc.logger.severe("Can't send. Channel not connected.");
    return
  }
  if(this.peerWindowObject_.closed) {
    goog.net.xpc.logger.severe("Peer has disappeared.");
    this.close();
    return
  }
  if(goog.isObject(payload)) {
    payload = goog.json.serialize(payload)
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload)
};
goog.net.xpc.CrossPageChannel.prototype.deliver_ = function(serviceName, payload, opt_origin) {
  if(!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.net.xpc.logger.warning('Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return
  }
  if(this.isDisposed()) {
    goog.net.xpc.logger.warning("CrossPageChannel::deliver_(): Disposed.")
  }else {
    if(!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload)
    }else {
      if(this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload)
      }else {
        goog.net.xpc.logger.info("CrossPageChannel::deliver_(): Not connected.")
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name
  }
  return name.replace(/[%:|]/g, encodeURIComponent)
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1)
  }else {
    return name
  }
};
goog.net.xpc.CrossPageChannel.Role = {OUTER:0, INNER:1};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannel.Role.INNER : goog.net.xpc.CrossPageChannel.Role.OUTER
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME]
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels_[this.name]
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for(var name in goog.net.xpc.channels_) {
    var ch = goog.net.xpc.channels_[name];
    if(ch) {
      ch.dispose()
    }
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method || "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : new goog.net.XmlHttp
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    return this.xhr_ && this.xhr_.response
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.json");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__29053) {
  var vec__29054__29055 = p__29053;
  var k__29056 = cljs.core.nth.call(null, vec__29054__29055, 0, null);
  var v__29057 = cljs.core.nth.call(null, vec__29054__29055, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__29056.toLowerCase()), v__29057], true)
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = {};
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if(function() {
      var and__3822__auto____29074 = this$;
      if(and__3822__auto____29074) {
        return this$.clojure$browser$net$IConnection$connect$arity$1
      }else {
        return and__3822__auto____29074
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$)
    }else {
      var x__2264__auto____29075 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____29076 = clojure.browser.net.connect[goog.typeOf(x__2264__auto____29075)];
        if(or__3824__auto____29076) {
          return or__3824__auto____29076
        }else {
          var or__3824__auto____29077 = clojure.browser.net.connect["_"];
          if(or__3824__auto____29077) {
            return or__3824__auto____29077
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var connect__2 = function(this$, opt1) {
    if(function() {
      var and__3822__auto____29078 = this$;
      if(and__3822__auto____29078) {
        return this$.clojure$browser$net$IConnection$connect$arity$2
      }else {
        return and__3822__auto____29078
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1)
    }else {
      var x__2264__auto____29079 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____29080 = clojure.browser.net.connect[goog.typeOf(x__2264__auto____29079)];
        if(or__3824__auto____29080) {
          return or__3824__auto____29080
        }else {
          var or__3824__auto____29081 = clojure.browser.net.connect["_"];
          if(or__3824__auto____29081) {
            return or__3824__auto____29081
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1)
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if(function() {
      var and__3822__auto____29082 = this$;
      if(and__3822__auto____29082) {
        return this$.clojure$browser$net$IConnection$connect$arity$3
      }else {
        return and__3822__auto____29082
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2)
    }else {
      var x__2264__auto____29083 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____29084 = clojure.browser.net.connect[goog.typeOf(x__2264__auto____29083)];
        if(or__3824__auto____29084) {
          return or__3824__auto____29084
        }else {
          var or__3824__auto____29085 = clojure.browser.net.connect["_"];
          if(or__3824__auto____29085) {
            return or__3824__auto____29085
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2)
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if(function() {
      var and__3822__auto____29086 = this$;
      if(and__3822__auto____29086) {
        return this$.clojure$browser$net$IConnection$connect$arity$4
      }else {
        return and__3822__auto____29086
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3)
    }else {
      var x__2264__auto____29087 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____29088 = clojure.browser.net.connect[goog.typeOf(x__2264__auto____29087)];
        if(or__3824__auto____29088) {
          return or__3824__auto____29088
        }else {
          var or__3824__auto____29089 = clojure.browser.net.connect["_"];
          if(or__3824__auto____29089) {
            return or__3824__auto____29089
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3)
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3)
    }
    throw"Invalid arity: " + arguments.length;
  };
  connect.cljs$lang$arity$1 = connect__1;
  connect.cljs$lang$arity$2 = connect__2;
  connect.cljs$lang$arity$3 = connect__3;
  connect.cljs$lang$arity$4 = connect__4;
  return connect
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if(function() {
      var and__3822__auto____29110 = this$;
      if(and__3822__auto____29110) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2
      }else {
        return and__3822__auto____29110
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt)
    }else {
      var x__2264__auto____29111 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____29112 = clojure.browser.net.transmit[goog.typeOf(x__2264__auto____29111)];
        if(or__3824__auto____29112) {
          return or__3824__auto____29112
        }else {
          var or__3824__auto____29113 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____29113) {
            return or__3824__auto____29113
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt)
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if(function() {
      var and__3822__auto____29114 = this$;
      if(and__3822__auto____29114) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3
      }else {
        return and__3822__auto____29114
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2)
    }else {
      var x__2264__auto____29115 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____29116 = clojure.browser.net.transmit[goog.typeOf(x__2264__auto____29115)];
        if(or__3824__auto____29116) {
          return or__3824__auto____29116
        }else {
          var or__3824__auto____29117 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____29117) {
            return or__3824__auto____29117
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2)
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if(function() {
      var and__3822__auto____29118 = this$;
      if(and__3822__auto____29118) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4
      }else {
        return and__3822__auto____29118
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3)
    }else {
      var x__2264__auto____29119 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____29120 = clojure.browser.net.transmit[goog.typeOf(x__2264__auto____29119)];
        if(or__3824__auto____29120) {
          return or__3824__auto____29120
        }else {
          var or__3824__auto____29121 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____29121) {
            return or__3824__auto____29121
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3)
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if(function() {
      var and__3822__auto____29122 = this$;
      if(and__3822__auto____29122) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5
      }else {
        return and__3822__auto____29122
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4)
    }else {
      var x__2264__auto____29123 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____29124 = clojure.browser.net.transmit[goog.typeOf(x__2264__auto____29123)];
        if(or__3824__auto____29124) {
          return or__3824__auto____29124
        }else {
          var or__3824__auto____29125 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____29125) {
            return or__3824__auto____29125
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4)
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if(function() {
      var and__3822__auto____29126 = this$;
      if(and__3822__auto____29126) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6
      }else {
        return and__3822__auto____29126
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5)
    }else {
      var x__2264__auto____29127 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____29128 = clojure.browser.net.transmit[goog.typeOf(x__2264__auto____29127)];
        if(or__3824__auto____29128) {
          return or__3824__auto____29128
        }else {
          var or__3824__auto____29129 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____29129) {
            return or__3824__auto____29129
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5)
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5)
    }
    throw"Invalid arity: " + arguments.length;
  };
  transmit.cljs$lang$arity$2 = transmit__2;
  transmit.cljs$lang$arity$3 = transmit__3;
  transmit.cljs$lang$arity$4 = transmit__4;
  transmit.cljs$lang$arity$5 = transmit__5;
  transmit.cljs$lang$arity$6 = transmit__6;
  return transmit
}();
clojure.browser.net.close = function close(this$) {
  if(function() {
    var and__3822__auto____29134 = this$;
    if(and__3822__auto____29134) {
      return this$.clojure$browser$net$IConnection$close$arity$1
    }else {
      return and__3822__auto____29134
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$)
  }else {
    var x__2264__auto____29135 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____29136 = clojure.browser.net.close[goog.typeOf(x__2264__auto____29135)];
      if(or__3824__auto____29136) {
        return or__3824__auto____29136
      }else {
        var or__3824__auto____29137 = clojure.browser.net.close["_"];
        if(or__3824__auto____29137) {
          return or__3824__auto____29137
        }else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$)
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__29138) {
    var vec__29139__29140 = p__29138;
    var k__29141 = cljs.core.nth.call(null, vec__29139__29140, 0, null);
    var v__29142 = cljs.core.nth.call(null, vec__29139__29140, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__29141.toLowerCase()), v__29142], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))))
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  return clojure.browser.net.transmit.call(null, this$, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  this$.setTimeoutInterval(timeout);
  return this$.send(uri, method, content, headers)
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__29143) {
  var vec__29144__29145 = p__29143;
  var k__29146 = cljs.core.nth.call(null, vec__29144__29145, 0, null);
  var v__29147 = cljs.core.nth.call(null, vec__29144__29145, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__29146.toLowerCase()), v__29147], true)
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo
};
clojure.browser.net.ICrossPageChannel = {};
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if(function() {
      var and__3822__auto____29156 = this$;
      if(and__3822__auto____29156) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3
      }else {
        return and__3822__auto____29156
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn)
    }else {
      var x__2264__auto____29157 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____29158 = clojure.browser.net.register_service[goog.typeOf(x__2264__auto____29157)];
        if(or__3824__auto____29158) {
          return or__3824__auto____29158
        }else {
          var or__3824__auto____29159 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____29159) {
            return or__3824__auto____29159
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn)
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if(function() {
      var and__3822__auto____29160 = this$;
      if(and__3822__auto____29160) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4
      }else {
        return and__3822__auto____29160
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_)
    }else {
      var x__2264__auto____29161 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____29162 = clojure.browser.net.register_service[goog.typeOf(x__2264__auto____29161)];
        if(or__3824__auto____29162) {
          return or__3824__auto____29162
        }else {
          var or__3824__auto____29163 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____29163) {
            return or__3824__auto____29163
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_)
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  register_service.cljs$lang$arity$3 = register_service__3;
  register_service.cljs$lang$arity$4 = register_service__4;
  return register_service
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  return clojure.browser.net.connect.call(null, this$, null)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  return clojure.browser.net.connect.call(null, this$, on_connect_fn, config_iframe_fn, document.body)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  this$.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  return this$.send(cljs.core.name.call(null, service_name), payload)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  return this$.close(cljs.core.List.EMPTY)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  return clojure.browser.net.register_service.call(null, this$, service_name, fn, false)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  return this$.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_)
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__3974__auto____29175 = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if(cljs.core.truth_(temp__3974__auto____29175)) {
      var config__29176 = temp__3974__auto____29175;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config__29176))
    }else {
      return null
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__29177) {
      var vec__29178__29179 = p__29177;
      var k__29180 = cljs.core.nth.call(null, vec__29178__29179, 0, null);
      var v__29181 = cljs.core.nth.call(null, vec__29178__29179, 1, null);
      var temp__3971__auto____29182 = cljs.core._lookup.call(null, clojure.browser.net.xpc_config_fields, k__29180, null);
      if(cljs.core.truth_(temp__3971__auto____29182)) {
        var field__29183 = temp__3971__auto____29182;
        var G__29184__29185 = sum;
        G__29184__29185[field__29183] = v__29181;
        return G__29184__29185
      }else {
        return sum
      }
    }, {}, config))
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config)
    }
    throw"Invalid arity: " + arguments.length;
  };
  xpc_connection.cljs$lang$arity$0 = xpc_connection__0;
  xpc_connection.cljs$lang$arity$1 = xpc_connection__1;
  return xpc_connection
}();
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.repl_print = function repl_print(data) {
  var temp__3971__auto____29035 = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  if(cljs.core.truth_(temp__3971__auto____29035)) {
    var conn__29036 = temp__3971__auto____29035;
    return clojure.browser.net.transmit.call(null, conn__29036, "\ufdd0'print", cljs.core.pr_str.call(null, data))
  }else {
    return null
  }
};
clojure.browser.repl.evaluate_javascript = function evaluate_javascript(conn, block) {
  var result__29042 = function() {
    try {
      return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value"], {"\ufdd0'status":"\ufdd0'success", "\ufdd0'value":[cljs.core.str(eval(block))].join("")})
    }catch(e29040) {
      if(cljs.core.instance_QMARK_.call(null, Error, e29040)) {
        var e__29041 = e29040;
        return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value", "\ufdd0'stacktrace"], {"\ufdd0'status":"\ufdd0'exception", "\ufdd0'value":cljs.core.pr_str.call(null, e__29041), "\ufdd0'stacktrace":cljs.core.truth_(e__29041.hasOwnProperty("stack")) ? e__29041.stack : "No stacktrace available."})
      }else {
        if("\ufdd0'else") {
          throw e29040;
        }else {
          return null
        }
      }
    }
  }();
  return cljs.core.pr_str.call(null, result__29042)
};
clojure.browser.repl.send_result = function send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0)
};
clojure.browser.repl.send_print = function() {
  var send_print = null;
  var send_print__2 = function(url, data) {
    return send_print.call(null, url, data, 0)
  };
  var send_print__3 = function(url, data, n) {
    var conn__29044 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, conn__29044, "\ufdd0'error", function(_) {
      if(n < 10) {
        return send_print.call(null, url, data, n + 1)
      }else {
        return console.log([cljs.core.str("Could not send "), cljs.core.str(data), cljs.core.str(" after "), cljs.core.str(n), cljs.core.str(" attempts.")].join(""))
      }
    });
    return clojure.browser.net.transmit.call(null, conn__29044, url, "POST", data, null, 0)
  };
  send_print = function(url, data, n) {
    switch(arguments.length) {
      case 2:
        return send_print__2.call(this, url, data);
      case 3:
        return send_print__3.call(this, url, data, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  send_print.cljs$lang$arity$2 = send_print__2;
  send_print.cljs$lang$arity$3 = send_print__3;
  return send_print
}();
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function wrap_message(t, data) {
  return cljs.core.pr_str.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'content", "\ufdd0'order"], {"\ufdd0'type":t, "\ufdd0'content":data, "\ufdd0'order":cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)}))
};
clojure.browser.repl.start_evaluator = function start_evaluator(url) {
  var temp__3971__auto____29048 = clojure.browser.net.xpc_connection.call(null);
  if(cljs.core.truth_(temp__3971__auto____29048)) {
    var repl_connection__29049 = temp__3971__auto____29048;
    var connection__29050 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, connection__29050, "\ufdd0'success", function(e) {
      return clojure.browser.net.transmit.call(null, repl_connection__29049, "\ufdd0'evaluate-javascript", e.currentTarget.getResponseText(cljs.core.List.EMPTY))
    });
    clojure.browser.net.register_service.call(null, repl_connection__29049, "\ufdd0'send-result", function(data) {
      return clojure.browser.repl.send_result.call(null, connection__29050, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'result", data))
    });
    clojure.browser.net.register_service.call(null, repl_connection__29049, "\ufdd0'print", function(data) {
      return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'print", data))
    });
    clojure.browser.net.connect.call(null, repl_connection__29049, cljs.core.constantly.call(null, null));
    return setTimeout(function() {
      return clojure.browser.repl.send_result.call(null, connection__29050, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'ready", "ready"))
    }, 50)
  }else {
    return alert("No 'xpc' param provided to child iframe.")
  }
};
clojure.browser.repl.connect = function connect(repl_server_url) {
  var repl_connection__29052 = clojure.browser.net.xpc_connection.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'peer_uri"], {"\ufdd0'peer_uri":repl_server_url}));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection__29052));
  clojure.browser.net.register_service.call(null, repl_connection__29052, "\ufdd0'evaluate-javascript", function(js) {
    return clojure.browser.net.transmit.call(null, repl_connection__29052, "\ufdd0'send-result", clojure.browser.repl.evaluate_javascript.call(null, repl_connection__29052, js))
  });
  return clojure.browser.net.connect.call(null, repl_connection__29052, cljs.core.constantly.call(null, null), function(iframe) {
    return iframe.style.display = "none"
  })
};
goog.provide("shoreleave.brepl");
goog.require("cljs.core");
goog.require("clojure.browser.repl");
shoreleave.brepl.connect = function connect() {
  return clojure.browser.repl.connect.call(null, "http://localhost:9000/repl")
};
goog.provide("shoreleave.common");
goog.require("cljs.core");
goog.require("shoreleave.brepl");
shoreleave.common.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        var out__28995 = {};
        var G__28996__28997 = cljs.core.seq.call(null, x);
        if(G__28996__28997) {
          var G__28999__29001 = cljs.core.first.call(null, G__28996__28997);
          var vec__29000__29002 = G__28999__29001;
          var k__29003 = cljs.core.nth.call(null, vec__29000__29002, 0, null);
          var v__29004 = cljs.core.nth.call(null, vec__29000__29002, 1, null);
          var G__28996__29005 = G__28996__28997;
          var G__28999__29006 = G__28999__29001;
          var G__28996__29007 = G__28996__29005;
          while(true) {
            var vec__29008__29009 = G__28999__29006;
            var k__29010 = cljs.core.nth.call(null, vec__29008__29009, 0, null);
            var v__29011 = cljs.core.nth.call(null, vec__29008__29009, 1, null);
            var G__28996__29012 = G__28996__29007;
            out__28995[cljs.core.name.call(null, k__29010)] = clj__GT_js.call(null, v__29011);
            var temp__3974__auto____29013 = cljs.core.next.call(null, G__28996__29012);
            if(temp__3974__auto____29013) {
              var G__28996__29014 = temp__3974__auto____29013;
              var G__29015 = cljs.core.first.call(null, G__28996__29014);
              var G__29016 = G__28996__29014;
              G__28999__29006 = G__29015;
              G__28996__29007 = G__29016;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return out__28995
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
        }else {
          if("\ufdd0'else") {
            return x
          }else {
            return null
          }
        }
      }
    }
  }
};
shoreleave.common.args_map = function args_map(location_str) {
  var query_args_obj__29018 = new goog.Uri.QueryData(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["#", "?"]), cljs.core._lookup.call(null, location_str, 0, null)) ? cljs.core.subs.call(null, location_str, 1) : location_str);
  return cljs.core.zipmap.call(null, cljs.core.map.call(null, cljs.core.keyword, query_args_obj__29018.getKeys()), query_args_obj__29018.getValues())
};
shoreleave.common.query_args_map = function query_args_map() {
  return shoreleave.common.args_map.call(null, window.location.search)
};
shoreleave.common.hash_args_map = function hash_args_map() {
  return shoreleave.common.args_map.call(null, window.location.hash)
};
shoreleave.common.set_window_hash_args = function set_window_hash_args(args_map) {
  var hash_str__29031 = cljs.core.reduce.call(null, function(old_str, p__29026) {
    var vec__29027__29028 = p__29026;
    var k__29029 = cljs.core.nth.call(null, vec__29027__29028, 0, null);
    var v__29030 = cljs.core.nth.call(null, vec__29027__29028, 1, null);
    return[cljs.core.str(old_str), cljs.core.str(cljs.core.name.call(null, k__29029)), cljs.core.str("="), cljs.core.str(v__29030), cljs.core.str("&")].join("")
  }, "#", args_map);
  var clean_hash_str__29032 = cljs.core.subs.call(null, hash_str__29031, 0, cljs.core.count.call(null, hash_str__29031) - 1);
  window.location.hash = clean_hash_str__29032;
  return args_map
};
shoreleave.common.toggle_brepl = function() {
  var toggle_brepl = null;
  var toggle_brepl__0 = function() {
    return toggle_brepl.call(null, shoreleave.common.query_args_map.call(null))
  };
  var toggle_brepl__1 = function(query_map) {
    return toggle_brepl.call(null, query_map, "\ufdd0'brepl")
  };
  var toggle_brepl__2 = function(query_map, query_key) {
    if(cljs.core.truth_(query_map.call(null, query_key))) {
      return shoreleave.brepl.connect.call(null)
    }else {
      return null
    }
  };
  toggle_brepl = function(query_map, query_key) {
    switch(arguments.length) {
      case 0:
        return toggle_brepl__0.call(this);
      case 1:
        return toggle_brepl__1.call(this, query_map);
      case 2:
        return toggle_brepl__2.call(this, query_map, query_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  toggle_brepl.cljs$lang$arity$0 = toggle_brepl__0;
  toggle_brepl.cljs$lang$arity$1 = toggle_brepl__1;
  toggle_brepl.cljs$lang$arity$2 = toggle_brepl__2;
  return toggle_brepl
}();
goog.provide("shoreleave.remotes.common");
goog.require("cljs.core");
goog.require("shoreleave.common");
goog.require("shoreleave.common");
goog.require("shoreleave.browser.cookies");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.Uri.QueryData");
goog.require("clojure.string");
shoreleave.remotes.common.rand_id_str = function rand_id_str() {
  return goog.string.getRandomString()
};
shoreleave.remotes.common.__GT_url_method = function __GT_url_method(m) {
  return clojure.string.upper_case.call(null, cljs.core.name.call(null, m))
};
shoreleave.remotes.common.parse_route = function parse_route(route) {
  if(cljs.core.string_QMARK_.call(null, route)) {
    return cljs.core.PersistentVector.fromArray(["GET", route], true)
  }else {
    if(cljs.core.vector_QMARK_.call(null, route)) {
      var vec__29208__29209 = route;
      var m__29210 = cljs.core.nth.call(null, vec__29208__29209, 0, null);
      var u__29211 = cljs.core.nth.call(null, vec__29208__29209, 1, null);
      return cljs.core.PersistentVector.fromArray([shoreleave.remotes.common.__GT_url_method.call(null, m__29210), u__29211], true)
    }else {
      if("\ufdd0'else") {
        return cljs.core.PersistentVector.fromArray(["GET", route], true)
      }else {
        return null
      }
    }
  }
};
shoreleave.remotes.common.__GT_simple_callback = function __GT_simple_callback(callback) {
  if(cljs.core.truth_(callback)) {
    return function(req) {
      var data__29213 = req.getResponseText();
      return callback.call(null, data__29213)
    }
  }else {
    return null
  }
};
shoreleave.remotes.common.csrf_protected = function csrf_protected(content_map, method) {
  var temp__3971__auto____29218 = function() {
    var and__3822__auto____29217 = cljs.core._EQ_.call(null, method, "POST");
    if(and__3822__auto____29217) {
      return(new cljs.core.Keyword("\ufdd0'__anti-forgery-token")).call(null, shoreleave.browser.cookies.cookies)
    }else {
      return and__3822__auto____29217
    }
  }();
  if(cljs.core.truth_(temp__3971__auto____29218)) {
    var anti_forgery_token__29219 = temp__3971__auto____29218;
    return cljs.core.merge.call(null, content_map, cljs.core.ObjMap.fromObject(["\ufdd0'__anti-forgery-token"], {"\ufdd0'__anti-forgery-token":anti_forgery_token__29219}))
  }else {
    return content_map
  }
};
shoreleave.remotes.common.__GT_data_str = function __GT_data_str(d) {
  var cur__29222 = shoreleave.common.clj__GT_js.call(null, d);
  var query__29223 = goog.Uri.QueryData.createFromMap(new goog.structs.Map(cur__29222));
  return[cljs.core.str(query__29223)].join("")
};
goog.provide("shoreleave.remotes.xhr");
goog.require("cljs.core");
goog.require("shoreleave.common");
goog.require("shoreleave.common");
goog.require("shoreleave.remotes.common");
goog.require("goog.events");
goog.require("goog.net.XhrIo");
shoreleave.remotes.xhr.xhr = function() {
  var xhr__delegate = function(route, opts) {
    var req__28962 = new goog.net.XhrIo;
    var vec__28960__28963 = shoreleave.remotes.common.parse_route.call(null, route);
    var method__28964 = cljs.core.nth.call(null, vec__28960__28963, 0, null);
    var uri__28965 = cljs.core.nth.call(null, vec__28960__28963, 1, null);
    var map__28961__28966 = cljs.core.apply.call(null, cljs.core.hash_map, opts);
    var map__28961__28967 = cljs.core.seq_QMARK_.call(null, map__28961__28966) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28961__28966) : map__28961__28966;
    var headers__28968 = cljs.core._lookup.call(null, map__28961__28967, "\ufdd0'headers", null);
    var content__28969 = cljs.core._lookup.call(null, map__28961__28967, "\ufdd0'content", null);
    var on_success__28970 = cljs.core._lookup.call(null, map__28961__28967, "\ufdd0'on-success", null);
    var content__28971 = shoreleave.remotes.common.csrf_protected.call(null, content__28969, method__28964);
    var data__28972 = shoreleave.remotes.common.__GT_data_str.call(null, content__28971);
    var callback__28973 = shoreleave.remotes.common.__GT_simple_callback.call(null, on_success__28970);
    if(cljs.core.truth_(callback__28973)) {
      goog.events.listen(req__28962, goog.net.EventType.COMPLETE, function() {
        return callback__28973.call(null, req__28962)
      })
    }else {
    }
    return req__28962.send(uri__28965, method__28964, data__28972, cljs.core.truth_(headers__28968) ? shoreleave.common.clj__GT_js.call(null, headers__28968) : null)
  };
  var xhr = function(route, var_args) {
    var opts = null;
    if(goog.isDef(var_args)) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return xhr__delegate.call(this, route, opts)
  };
  xhr.cljs$lang$maxFixedArity = 1;
  xhr.cljs$lang$applyTo = function(arglist__28974) {
    var route = cljs.core.first(arglist__28974);
    var opts = cljs.core.rest(arglist__28974);
    return xhr__delegate(route, opts)
  };
  xhr.cljs$lang$arity$variadic = xhr__delegate;
  return xhr
}();
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3822__auto____28677 = reader;
    if(and__3822__auto____28677) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3822__auto____28677
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__2264__auto____28678 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____28679 = cljs.reader.read_char[goog.typeOf(x__2264__auto____28678)];
      if(or__3824__auto____28679) {
        return or__3824__auto____28679
      }else {
        var or__3824__auto____28680 = cljs.reader.read_char["_"];
        if(or__3824__auto____28680) {
          return or__3824__auto____28680
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3822__auto____28685 = reader;
    if(and__3822__auto____28685) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3822__auto____28685
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__2264__auto____28686 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____28687 = cljs.reader.unread[goog.typeOf(x__2264__auto____28686)];
      if(or__3824__auto____28687) {
        return or__3824__auto____28687
      }else {
        var or__3824__auto____28688 = cljs.reader.unread["_"];
        if(or__3824__auto____28688) {
          return or__3824__auto____28688
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
cljs.reader.StringPushbackReader = function(s, index_atom, buffer_atom) {
  this.s = s;
  this.index_atom = index_atom;
  this.buffer_atom = buffer_atom
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var this__28689 = this;
  if(cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, this__28689.buffer_atom))) {
    var idx__28690 = cljs.core.deref.call(null, this__28689.index_atom);
    cljs.core.swap_BANG_.call(null, this__28689.index_atom, cljs.core.inc);
    return this__28689.s[idx__28690]
  }else {
    var buf__28691 = cljs.core.deref.call(null, this__28689.buffer_atom);
    cljs.core.swap_BANG_.call(null, this__28689.buffer_atom, cljs.core.rest);
    return cljs.core.first.call(null, buf__28691)
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var this__28692 = this;
  return cljs.core.swap_BANG_.call(null, this__28692.buffer_atom, function(p1__28672_SHARP_) {
    return cljs.core.cons.call(null, ch, p1__28672_SHARP_)
  })
};
cljs.reader.StringPushbackReader;
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3824__auto____28694 = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3824__auto____28694)) {
    return or__3824__auto____28694
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3824__auto____28699 = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3824__auto____28699) {
    return or__3824__auto____28699
  }else {
    var and__3822__auto____28701 = function() {
      var or__3824__auto____28700 = "+" === initch;
      if(or__3824__auto____28700) {
        return or__3824__auto____28700
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3822__auto____28701)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch__28702 = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch__28702);
        return next_ch__28702
      }())
    }else {
      return and__3822__auto____28701
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(goog.isDef(var_args)) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__28703) {
    var rdr = cljs.core.first(arglist__28703);
    var msg = cljs.core.rest(arglist__28703);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$lang$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3822__auto____28707 = !(ch === "#");
  if(and__3822__auto____28707) {
    var and__3822__auto____28708 = !(ch === "'");
    if(and__3822__auto____28708) {
      var and__3822__auto____28709 = !(ch === ":");
      if(and__3822__auto____28709) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3822__auto____28709
      }
    }else {
      return and__3822__auto____28708
    }
  }else {
    return and__3822__auto____28707
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb__28714 = new goog.string.StringBuffer(initch);
  var ch__28715 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3824__auto____28716 = ch__28715 == null;
      if(or__3824__auto____28716) {
        return or__3824__auto____28716
      }else {
        var or__3824__auto____28717 = cljs.reader.whitespace_QMARK_.call(null, ch__28715);
        if(or__3824__auto____28717) {
          return or__3824__auto____28717
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch__28715)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch__28715);
      return sb__28714.toString()
    }else {
      var G__28718 = function() {
        sb__28714.append(ch__28715);
        return sb__28714
      }();
      var G__28719 = cljs.reader.read_char.call(null, rdr);
      sb__28714 = G__28718;
      ch__28715 = G__28719;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch__28723 = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3824__auto____28724 = ch__28723 === "n";
      if(or__3824__auto____28724) {
        return or__3824__auto____28724
      }else {
        var or__3824__auto____28725 = ch__28723 === "r";
        if(or__3824__auto____28725) {
          return or__3824__auto____28725
        }else {
          return ch__28723 == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches__28727 = re.exec(s);
  if(matches__28727 == null) {
    return null
  }else {
    if(matches__28727.length === 1) {
      return matches__28727[0]
    }else {
      return matches__28727
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups__28735 = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3__28736 = groups__28735[2];
  if(!function() {
    var or__3824__auto____28737 = group3__28736 == null;
    if(or__3824__auto____28737) {
      return or__3824__auto____28737
    }else {
      return group3__28736.length < 1
    }
  }()) {
    return 0
  }else {
    var negate__28738 = "-" === groups__28735[1] ? -1 : 1;
    var a__28739 = cljs.core.truth_(groups__28735[3]) ? [groups__28735[3], 10] : cljs.core.truth_(groups__28735[4]) ? [groups__28735[4], 16] : cljs.core.truth_(groups__28735[5]) ? [groups__28735[5], 8] : cljs.core.truth_(groups__28735[7]) ? [groups__28735[7], parseInt(groups__28735[7])] : "\ufdd0'default" ? [null, null] : null;
    var n__28740 = a__28739[0];
    var radix__28741 = a__28739[1];
    if(n__28740 == null) {
      return null
    }else {
      return negate__28738 * parseInt(n__28740, radix__28741)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups__28745 = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator__28746 = groups__28745[1];
  var denominator__28747 = groups__28745[2];
  return parseInt(numinator__28746) / parseInt(denominator__28747)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches__28750 = re.exec(s);
  if(function() {
    var and__3822__auto____28751 = !(matches__28750 == null);
    if(and__3822__auto____28751) {
      return matches__28750[0] === s
    }else {
      return and__3822__auto____28751
    }
  }()) {
    if(matches__28750.length === 1) {
      return matches__28750[0]
    }else {
      return matches__28750
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\u0008"
            }else {
              if(c === "f") {
                return"\u000c"
              }else {
                if("\ufdd0'else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code__28753 = parseInt(code_str, 16);
  return String.fromCharCode(code__28753)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch__28756 = cljs.reader.read_char.call(null, reader);
  var mapresult__28757 = cljs.reader.escape_char_map.call(null, ch__28756);
  if(cljs.core.truth_(mapresult__28757)) {
    return mapresult__28757
  }else {
    if(ch__28756 === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch__28756, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch__28756 === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch__28756, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch__28756)) {
          return String.fromCharCode(ch__28756)
        }else {
          if("\ufdd0'else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch__28756)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch__28759 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch__28759))) {
      var G__28760 = cljs.reader.read_char.call(null, rdr);
      ch__28759 = G__28760;
      continue
    }else {
      return ch__28759
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a__28767 = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch__28768 = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch__28768)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF")
    }
    if(delim === ch__28768) {
      return cljs.core.persistent_BANG_.call(null, a__28767)
    }else {
      var temp__3971__auto____28769 = cljs.reader.macros.call(null, ch__28768);
      if(cljs.core.truth_(temp__3971__auto____28769)) {
        var macrofn__28770 = temp__3971__auto____28769;
        var mret__28771 = macrofn__28770.call(null, rdr, ch__28768);
        var G__28773 = mret__28771 === rdr ? a__28767 : cljs.core.conj_BANG_.call(null, a__28767, mret__28771);
        a__28767 = G__28773;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch__28768);
        var o__28772 = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__28774 = o__28772 === rdr ? a__28767 : cljs.core.conj_BANG_.call(null, a__28767, o__28772);
        a__28767 = G__28774;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch__28779 = cljs.reader.read_char.call(null, rdr);
  var dm__28780 = cljs.reader.dispatch_macros.call(null, ch__28779);
  if(cljs.core.truth_(dm__28780)) {
    return dm__28780.call(null, rdr, _)
  }else {
    var temp__3971__auto____28781 = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch__28779);
    if(cljs.core.truth_(temp__3971__auto____28781)) {
      var obj__28782 = temp__3971__auto____28781;
      return obj__28782
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch__28779)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l__28784 = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l__28784))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l__28784)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer__28791 = new goog.string.StringBuffer(initch);
  var ch__28792 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____28793 = ch__28792 == null;
      if(or__3824__auto____28793) {
        return or__3824__auto____28793
      }else {
        var or__3824__auto____28794 = cljs.reader.whitespace_QMARK_.call(null, ch__28792);
        if(or__3824__auto____28794) {
          return or__3824__auto____28794
        }else {
          return cljs.reader.macros.call(null, ch__28792)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch__28792);
      var s__28795 = buffer__28791.toString();
      var or__3824__auto____28796 = cljs.reader.match_number.call(null, s__28795);
      if(cljs.core.truth_(or__3824__auto____28796)) {
        return or__3824__auto____28796
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s__28795, "]")
      }
    }else {
      var G__28797 = function() {
        buffer__28791.append(ch__28792);
        return buffer__28791
      }();
      var G__28798 = cljs.reader.read_char.call(null, reader);
      buffer__28791 = G__28797;
      ch__28792 = G__28798;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer__28801 = new goog.string.StringBuffer;
  var ch__28802 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch__28802 == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading string")
    }else {
      if("\\" === ch__28802) {
        var G__28803 = function() {
          buffer__28801.append(cljs.reader.escape_char.call(null, buffer__28801, reader));
          return buffer__28801
        }();
        var G__28804 = cljs.reader.read_char.call(null, reader);
        buffer__28801 = G__28803;
        ch__28802 = G__28804;
        continue
      }else {
        if('"' === ch__28802) {
          return buffer__28801.toString()
        }else {
          if("\ufdd0'default") {
            var G__28805 = function() {
              buffer__28801.append(ch__28802);
              return buffer__28801
            }();
            var G__28806 = cljs.reader.read_char.call(null, reader);
            buffer__28801 = G__28805;
            ch__28802 = G__28806;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token__28808 = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token__28808, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token__28808, 0, token__28808.indexOf("/")), cljs.core.subs.call(null, token__28808, token__28808.indexOf("/") + 1, token__28808.length))
  }else {
    return cljs.reader.special_symbols.call(null, token__28808, cljs.core.symbol.call(null, token__28808))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token__28818 = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a__28819 = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token__28818);
  var token__28820 = a__28819[0];
  var ns__28821 = a__28819[1];
  var name__28822 = a__28819[2];
  if(cljs.core.truth_(function() {
    var or__3824__auto____28824 = function() {
      var and__3822__auto____28823 = !(void 0 === ns__28821);
      if(and__3822__auto____28823) {
        return ns__28821.substring(ns__28821.length - 2, ns__28821.length) === ":/"
      }else {
        return and__3822__auto____28823
      }
    }();
    if(cljs.core.truth_(or__3824__auto____28824)) {
      return or__3824__auto____28824
    }else {
      var or__3824__auto____28825 = name__28822[name__28822.length - 1] === ":";
      if(or__3824__auto____28825) {
        return or__3824__auto____28825
      }else {
        return!(token__28820.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__28820)
  }else {
    if(function() {
      var and__3822__auto____28826 = !(ns__28821 == null);
      if(and__3822__auto____28826) {
        return ns__28821.length > 0
      }else {
        return and__3822__auto____28826
      }
    }()) {
      return cljs.core.keyword.call(null, ns__28821.substring(0, ns__28821.indexOf("/")), name__28822)
    }else {
      return cljs.core.keyword.call(null, token__28820)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(cljs.core.symbol_QMARK_.call(null, f)) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArrays([f], [true])
      }else {
        if("\ufdd0'else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m__28832 = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m__28832)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o__28833 = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__28834__28835 = o__28833;
    if(G__28834__28835) {
      if(function() {
        var or__3824__auto____28836 = G__28834__28835.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3824__auto____28836) {
          return or__3824__auto____28836
        }else {
          return G__28834__28835.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__28834__28835.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__28834__28835)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__28834__28835)
    }
  }()) {
    return cljs.core.with_meta.call(null, o__28833, cljs.core.merge.call(null, cljs.core.meta.call(null, o__28833), m__28832))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, "\ufdd1'quote")
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, "\ufdd1'deref")
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0'else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "<") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0'else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch__28840 = cljs.reader.read_char.call(null, reader);
    if(ch__28840 == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch__28840)) {
        var G__28843 = reader;
        var G__28844 = eof_is_error;
        var G__28845 = sentinel;
        var G__28846 = is_recursive;
        reader = G__28843;
        eof_is_error = G__28844;
        sentinel = G__28845;
        is_recursive = G__28846;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch__28840)) {
          var G__28847 = cljs.reader.read_comment.call(null, reader, ch__28840);
          var G__28848 = eof_is_error;
          var G__28849 = sentinel;
          var G__28850 = is_recursive;
          reader = G__28847;
          eof_is_error = G__28848;
          sentinel = G__28849;
          is_recursive = G__28850;
          continue
        }else {
          if("\ufdd0'else") {
            var f__28841 = cljs.reader.macros.call(null, ch__28840);
            var res__28842 = cljs.core.truth_(f__28841) ? f__28841.call(null, reader, ch__28840) : cljs.reader.number_literal_QMARK_.call(null, reader, ch__28840) ? cljs.reader.read_number.call(null, reader, ch__28840) : "\ufdd0'else" ? cljs.reader.read_symbol.call(null, reader, ch__28840) : null;
            if(res__28842 === reader) {
              var G__28851 = reader;
              var G__28852 = eof_is_error;
              var G__28853 = sentinel;
              var G__28854 = is_recursive;
              reader = G__28851;
              eof_is_error = G__28852;
              sentinel = G__28853;
              is_recursive = G__28854;
              continue
            }else {
              return res__28842
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r__28856 = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r__28856, true, null, false)
};
cljs.reader.zero_fill_right = function zero_fill_right(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return s.substring(0, width)
    }else {
      if("\ufdd0'else") {
        var b__28858 = new goog.string.StringBuffer(s);
        while(true) {
          if(b__28858.getLength() < width) {
            var G__28859 = b__28858.append("0");
            b__28858 = G__28859;
            continue
          }else {
            return b__28858.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return num % div === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3822__auto____28862 = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3822__auto____28862)) {
    var or__3824__auto____28863 = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3824__auto____28863)) {
      return or__3824__auto____28863
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3822__auto____28862
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm__28868 = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap__28869 = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core._lookup.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap__28869 : dim_norm__28868, month, null)
  }
}();
cljs.reader.parse_and_validate_timestamp = function() {
  var timestamp__28870 = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
  var check__28872 = function(low, n, high, msg) {
    if(function() {
      var and__3822__auto____28871 = low <= n;
      if(and__3822__auto____28871) {
        return n <= high
      }else {
        return and__3822__auto____28871
      }
    }()) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'<=", "\ufdd1'low", "\ufdd1'n", "\ufdd1'high"), cljs.core.hash_map("\ufdd0'line", 474))))].join(""));
    }
    return n
  };
  return function(ts) {
    var temp__3974__auto____28873 = cljs.core.map.call(null, cljs.core.vec, cljs.core.split_at.call(null, 8, cljs.core.re_matches.call(null, timestamp__28870, ts)));
    if(cljs.core.truth_(temp__3974__auto____28873)) {
      var vec__28874__28877 = temp__3974__auto____28873;
      var vec__28875__28878 = cljs.core.nth.call(null, vec__28874__28877, 0, null);
      var ___28879 = cljs.core.nth.call(null, vec__28875__28878, 0, null);
      var years__28880 = cljs.core.nth.call(null, vec__28875__28878, 1, null);
      var months__28881 = cljs.core.nth.call(null, vec__28875__28878, 2, null);
      var days__28882 = cljs.core.nth.call(null, vec__28875__28878, 3, null);
      var hours__28883 = cljs.core.nth.call(null, vec__28875__28878, 4, null);
      var minutes__28884 = cljs.core.nth.call(null, vec__28875__28878, 5, null);
      var seconds__28885 = cljs.core.nth.call(null, vec__28875__28878, 6, null);
      var milliseconds__28886 = cljs.core.nth.call(null, vec__28875__28878, 7, null);
      var vec__28876__28887 = cljs.core.nth.call(null, vec__28874__28877, 1, null);
      var ___28888 = cljs.core.nth.call(null, vec__28876__28887, 0, null);
      var ___28889 = cljs.core.nth.call(null, vec__28876__28887, 1, null);
      var ___28890 = cljs.core.nth.call(null, vec__28876__28887, 2, null);
      var V__28891 = vec__28874__28877;
      var vec__28892__28895 = cljs.core.map.call(null, function(v) {
        return cljs.core.map.call(null, function(p1__28867_SHARP_) {
          return parseInt(p1__28867_SHARP_, 10)
        }, v)
      }, cljs.core.map.call(null, function(p1__28865_SHARP_, p2__28864_SHARP_) {
        return cljs.core.update_in.call(null, p2__28864_SHARP_, cljs.core.PersistentVector.fromArray([0], true), p1__28865_SHARP_)
      }, cljs.core.PersistentVector.fromArray([cljs.core.constantly.call(null, null), function(p1__28866_SHARP_) {
        if(cljs.core._EQ_.call(null, p1__28866_SHARP_, "-")) {
          return"-1"
        }else {
          return"1"
        }
      }], true), V__28891));
      var vec__28893__28896 = cljs.core.nth.call(null, vec__28892__28895, 0, null);
      var ___28897 = cljs.core.nth.call(null, vec__28893__28896, 0, null);
      var y__28898 = cljs.core.nth.call(null, vec__28893__28896, 1, null);
      var mo__28899 = cljs.core.nth.call(null, vec__28893__28896, 2, null);
      var d__28900 = cljs.core.nth.call(null, vec__28893__28896, 3, null);
      var h__28901 = cljs.core.nth.call(null, vec__28893__28896, 4, null);
      var m__28902 = cljs.core.nth.call(null, vec__28893__28896, 5, null);
      var s__28903 = cljs.core.nth.call(null, vec__28893__28896, 6, null);
      var ms__28904 = cljs.core.nth.call(null, vec__28893__28896, 7, null);
      var vec__28894__28905 = cljs.core.nth.call(null, vec__28892__28895, 1, null);
      var offset_sign__28906 = cljs.core.nth.call(null, vec__28894__28905, 0, null);
      var offset_hours__28907 = cljs.core.nth.call(null, vec__28894__28905, 1, null);
      var offset_minutes__28908 = cljs.core.nth.call(null, vec__28894__28905, 2, null);
      var offset__28909 = offset_sign__28906 * (offset_hours__28907 * 60 + offset_minutes__28908);
      return cljs.core.PersistentVector.fromArray([cljs.core.not.call(null, years__28880) ? 1970 : y__28898, cljs.core.not.call(null, months__28881) ? 1 : check__28872.call(null, 1, mo__28899, 12, "timestamp month field must be in range 1..12"), cljs.core.not.call(null, days__28882) ? 1 : check__28872.call(null, 1, d__28900, cljs.reader.days_in_month.call(null, mo__28899, cljs.reader.leap_year_QMARK_.call(null, y__28898)), "timestamp day field must be in range 1..last day in month"), cljs.core.not.call(null, 
      hours__28883) ? 0 : check__28872.call(null, 0, h__28901, 23, "timestamp hour field must be in range 0..23"), cljs.core.not.call(null, minutes__28884) ? 0 : check__28872.call(null, 0, m__28902, 59, "timestamp minute field must be in range 0..59"), cljs.core.not.call(null, seconds__28885) ? 0 : check__28872.call(null, 0, s__28903, cljs.core._EQ_.call(null, m__28902, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.core.not.call(null, milliseconds__28886) ? 0 : check__28872.call(null, 
      0, ms__28904, 999, "timestamp millisecond field must be in range 0..999"), offset__28909], true)
    }else {
      return null
    }
  }
}();
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__3971__auto____28921 = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__3971__auto____28921)) {
    var vec__28922__28923 = temp__3971__auto____28921;
    var years__28924 = cljs.core.nth.call(null, vec__28922__28923, 0, null);
    var months__28925 = cljs.core.nth.call(null, vec__28922__28923, 1, null);
    var days__28926 = cljs.core.nth.call(null, vec__28922__28923, 2, null);
    var hours__28927 = cljs.core.nth.call(null, vec__28922__28923, 3, null);
    var minutes__28928 = cljs.core.nth.call(null, vec__28922__28923, 4, null);
    var seconds__28929 = cljs.core.nth.call(null, vec__28922__28923, 5, null);
    var ms__28930 = cljs.core.nth.call(null, vec__28922__28923, 6, null);
    var offset__28931 = cljs.core.nth.call(null, vec__28922__28923, 7, null);
    return new Date(Date.UTC(years__28924, months__28925 - 1, days__28926, hours__28927, minutes__28928, seconds__28929, ms__28930) - offset__28931 * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["inst", "uuid", "queue"], {"inst":cljs.reader.read_date, "uuid":cljs.reader.read_uuid, "queue":cljs.reader.read_queue}));
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag__28935 = cljs.reader.read_symbol.call(null, rdr, initch);
  var temp__3971__auto____28936 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), cljs.core.name.call(null, tag__28935), null);
  if(cljs.core.truth_(temp__3971__auto____28936)) {
    var pfn__28937 = temp__3971__auto____28936;
    return pfn__28937.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", cljs.core.name.call(null, tag__28935), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__28940 = cljs.core.name.call(null, tag);
  var old_parser__28941 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__28940, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__28940, f);
  return old_parser__28941
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__28944 = cljs.core.name.call(null, tag);
  var old_parser__28945 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__28944, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__28944);
  return old_parser__28945
};
goog.provide("shoreleave.remotes.http_rpc");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("shoreleave.remotes.xhr");
shoreleave.remotes.http_rpc._STAR_remote_uri_STAR_ = "/_fetch";
shoreleave.remotes.http_rpc.remote_callback = function() {
  var remote_callback__delegate = function(remote, params, callback, extra_content) {
    return shoreleave.remotes.xhr.xhr.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'post", shoreleave.remotes.http_rpc._STAR_remote_uri_STAR_], true), "\ufdd0'content", cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'remote", "\ufdd0'params"], {"\ufdd0'remote":remote, "\ufdd0'params":cljs.core.pr_str.call(null, params)}), cljs.core.apply.call(null, cljs.core.hash_map, extra_content)), "\ufdd0'on-success", cljs.core.truth_(callback) ? function(data) {
      var data__28670 = cljs.core._EQ_.call(null, data, "") ? "nil" : data;
      return callback.call(null, cljs.reader.read_string.call(null, data__28670))
    } : null)
  };
  var remote_callback = function(remote, params, callback, var_args) {
    var extra_content = null;
    if(goog.isDef(var_args)) {
      extra_content = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return remote_callback__delegate.call(this, remote, params, callback, extra_content)
  };
  remote_callback.cljs$lang$maxFixedArity = 3;
  remote_callback.cljs$lang$applyTo = function(arglist__28671) {
    var remote = cljs.core.first(arglist__28671);
    var params = cljs.core.first(cljs.core.next(arglist__28671));
    var callback = cljs.core.first(cljs.core.next(cljs.core.next(arglist__28671)));
    var extra_content = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__28671)));
    return remote_callback__delegate(remote, params, callback, extra_content)
  };
  remote_callback.cljs$lang$arity$variadic = remote_callback__delegate;
  return remote_callback
}();
goog.provide("aahru.ui");
goog.require("cljs.core");
goog.require("shoreleave.remotes.http_rpc");
goog.require("crate.core");
goog.require("c2.dom");
goog.require("clojure.string");
aahru.ui.set_navigation = function set_navigation() {
  var loc__93419 = cljs.core.last.call(null, clojure.string.split.call(null, window.location.toString(cljs.core.List.EMPTY), /\//));
  var G__93420__93421 = cljs.core.seq.call(null, c2.dom.children.call(null, c2.dom.select.call(null, "#top-navbar")));
  if(G__93420__93421) {
    var list_item__93422 = cljs.core.first.call(null, G__93420__93421);
    var G__93420__93423 = G__93420__93421;
    while(true) {
      if(cljs.core._EQ_.call(null, [cljs.core.str("/"), cljs.core.str(loc__93419)].join(""), c2.dom.attr.call(null, cljs.core.first.call(null, c2.dom.children.call(null, list_item__93422)), "\ufdd0'href"))) {
        c2.dom.add_class_BANG_.call(null, list_item__93422, "active")
      }else {
        c2.dom.remove_class_BANG_.call(null, list_item__93422, "active")
      }
      var temp__3974__auto____93424 = cljs.core.next.call(null, G__93420__93423);
      if(temp__3974__auto____93424) {
        var G__93420__93425 = temp__3974__auto____93424;
        var G__93426 = cljs.core.first.call(null, G__93420__93425);
        var G__93427 = G__93420__93425;
        list_item__93422 = G__93426;
        G__93420__93423 = G__93427;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
goog.exportSymbol("aahru.ui.set_navigation", aahru.ui.set_navigation);
aahru.ui.logged_in_dropdown = function logged_in_dropdown(user) {
  return crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'ul", cljs.core.ObjMap.fromObject(["\ufdd0'class", "\ufdd0'id"], {"\ufdd0'class":"nav pull-right", "\ufdd0'id":"user-dropdown"}), cljs.core.PersistentVector.fromArray(["\ufdd0'li", cljs.core.ObjMap.fromObject(["\ufdd0'class"], {"\ufdd0'class":"divider-vertical"})], true), cljs.core.PersistentVector.fromArray(["\ufdd0'li", cljs.core.ObjMap.fromObject(["\ufdd0'class"], {"\ufdd0'class":"dropdown"}), cljs.core.PersistentVector.fromArray(["\ufdd0'a", 
  cljs.core.ObjMap.fromObject(["\ufdd0'href", "\ufdd0'class", "\ufdd0'data-toggle"], {"\ufdd0'href":"#", "\ufdd0'class":"dropdown-toggle", "\ufdd0'data-toggle":"dropdown"}), cljs.core.PersistentVector.fromArray(["\ufdd0'i", cljs.core.ObjMap.fromObject(["\ufdd0'class", "\ufdd0'style"], {"\ufdd0'class":"icon-user icon-white", "\ufdd0'style":"margin-right: 6px"})], true), user, cljs.core.PersistentVector.fromArray(["\ufdd0'span", cljs.core.ObjMap.fromObject(["\ufdd0'class", "\ufdd0'style"], {"\ufdd0'class":"caret", 
  "\ufdd0'style":"margin-left: 6px"})], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'ul", cljs.core.ObjMap.fromObject(["\ufdd0'class"], {"\ufdd0'class":"dropdown-menu"}), cljs.core.PersistentVector.fromArray(["\ufdd0'li", cljs.core.PersistentVector.fromArray(["\ufdd0'a", cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'href"], {"\ufdd0'id":"logout-btn", "\ufdd0'href":"/logout"}), "Logout"], true)], true)], true)], true)], true))
};
aahru.ui.set_user = function set_user() {
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "meta/username", cljs.core.PersistentVector.EMPTY, function(username) {
    var res__7906__auto____93431 = username;
    console.log(cljs.core.prn_str.call(null, res__7906__auto____93431));
    res__7906__auto____93431;
    var res__7906__auto____93432 = c2.dom.select.call(null, "#user-dropdown");
    console.log(cljs.core.prn_str.call(null, res__7906__auto____93432));
    res__7906__auto____93432;
    var res__7906__auto____93433 = aahru.ui.logged_in_dropdown.call(null, username);
    console.log(cljs.core.prn_str.call(null, res__7906__auto____93433));
    res__7906__auto____93433;
    if(cljs.core.truth_(username)) {
      return c2.dom.replace_BANG_.call(null, "#user-dropdown", aahru.ui.logged_in_dropdown.call(null, username))
    }else {
      return null
    }
  })
};
goog.provide("chosen.jquery");
goog.require("cljs.core");
jQuery.prototype.cljs$core$IReduce$ = true;
jQuery.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  return cljs.core.ci_reduce.call(null, this$, f)
};
jQuery.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  return cljs.core.ci_reduce.call(null, this$, f, start)
};
jQuery.prototype.cljs$core$ILookup$ = true;
jQuery.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var or__3824__auto____23754 = this$.slice(k, k + 1);
  if(cljs.core.truth_(or__3824__auto____23754)) {
    return or__3824__auto____23754
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  return cljs.core._nth.call(null, this$, k, not_found)
};
jQuery.prototype.cljs$core$ISequential$ = true;
jQuery.prototype.cljs$core$IIndexed$ = true;
jQuery.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    if(void 0 === not_found) {
      return null
    }else {
      return not_found
    }
  }
};
jQuery.prototype.cljs$core$ICounted$ = true;
jQuery.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  return this$.size()
};
jQuery.prototype.cljs$core$ISeq$ = true;
jQuery.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  return this$.get(0)
};
jQuery.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  if(cljs.core.count.call(null, this$) > 1) {
    return this$.slice(1)
  }else {
    return cljs.core.list.call(null)
  }
};
jQuery.prototype.cljs$core$ISeqable$ = true;
jQuery.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  if(cljs.core.truth_(this$.get(0))) {
    return this$
  }else {
    return null
  }
};
goog.provide("chosen.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("chosen.jquery");
goog.require("goog.string");
goog.require("clojure.string");
chosen.core.ISelectable = {};
chosen.core.selected = function() {
  var selected = null;
  var selected__1 = function(this$) {
    if(function() {
      var and__3822__auto____23589 = this$;
      if(and__3822__auto____23589) {
        return this$.chosen$core$ISelectable$selected$arity$1
      }else {
        return and__3822__auto____23589
      }
    }()) {
      return this$.chosen$core$ISelectable$selected$arity$1(this$)
    }else {
      var x__2264__auto____23590 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23591 = chosen.core.selected[goog.typeOf(x__2264__auto____23590)];
        if(or__3824__auto____23591) {
          return or__3824__auto____23591
        }else {
          var or__3824__auto____23592 = chosen.core.selected["_"];
          if(or__3824__auto____23592) {
            return or__3824__auto____23592
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelectable.selected", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var selected__2 = function(this$, values) {
    if(function() {
      var and__3822__auto____23593 = this$;
      if(and__3822__auto____23593) {
        return this$.chosen$core$ISelectable$selected$arity$2
      }else {
        return and__3822__auto____23593
      }
    }()) {
      return this$.chosen$core$ISelectable$selected$arity$2(this$, values)
    }else {
      var x__2264__auto____23594 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23595 = chosen.core.selected[goog.typeOf(x__2264__auto____23594)];
        if(or__3824__auto____23595) {
          return or__3824__auto____23595
        }else {
          var or__3824__auto____23596 = chosen.core.selected["_"];
          if(or__3824__auto____23596) {
            return or__3824__auto____23596
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelectable.selected", this$);
          }
        }
      }().call(null, this$, values)
    }
  };
  selected = function(this$, values) {
    switch(arguments.length) {
      case 1:
        return selected__1.call(this, this$);
      case 2:
        return selected__2.call(this, this$, values)
    }
    throw"Invalid arity: " + arguments.length;
  };
  selected.cljs$lang$arity$1 = selected__1;
  selected.cljs$lang$arity$2 = selected__2;
  return selected
}();
chosen.core.IOptions = {};
chosen.core.options = function() {
  var options = null;
  var options__1 = function(this$) {
    if(function() {
      var and__3822__auto____23605 = this$;
      if(and__3822__auto____23605) {
        return this$.chosen$core$IOptions$options$arity$1
      }else {
        return and__3822__auto____23605
      }
    }()) {
      return this$.chosen$core$IOptions$options$arity$1(this$)
    }else {
      var x__2264__auto____23606 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23607 = chosen.core.options[goog.typeOf(x__2264__auto____23606)];
        if(or__3824__auto____23607) {
          return or__3824__auto____23607
        }else {
          var or__3824__auto____23608 = chosen.core.options["_"];
          if(or__3824__auto____23608) {
            return or__3824__auto____23608
          }else {
            throw cljs.core.missing_protocol.call(null, "IOptions.options", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var options__2 = function(this$, opts) {
    if(function() {
      var and__3822__auto____23609 = this$;
      if(and__3822__auto____23609) {
        return this$.chosen$core$IOptions$options$arity$2
      }else {
        return and__3822__auto____23609
      }
    }()) {
      return this$.chosen$core$IOptions$options$arity$2(this$, opts)
    }else {
      var x__2264__auto____23610 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____23611 = chosen.core.options[goog.typeOf(x__2264__auto____23610)];
        if(or__3824__auto____23611) {
          return or__3824__auto____23611
        }else {
          var or__3824__auto____23612 = chosen.core.options["_"];
          if(or__3824__auto____23612) {
            return or__3824__auto____23612
          }else {
            throw cljs.core.missing_protocol.call(null, "IOptions.options", this$);
          }
        }
      }().call(null, this$, opts)
    }
  };
  options = function(this$, opts) {
    switch(arguments.length) {
      case 1:
        return options__1.call(this, this$);
      case 2:
        return options__2.call(this, this$, opts)
    }
    throw"Invalid arity: " + arguments.length;
  };
  options.cljs$lang$arity$1 = options__1;
  options.cljs$lang$arity$2 = options__2;
  return options
}();
chosen.core.__GT_coll = function __GT_coll(c) {
  if(!function() {
    var or__3824__auto____23615 = cljs.core.set_QMARK_.call(null, c);
    if(or__3824__auto____23615) {
      return or__3824__auto____23615
    }else {
      return cljs.core.sequential_QMARK_.call(null, c)
    }
  }()) {
    return cljs.core.PersistentVector.fromArray([c], true)
  }else {
    return c
  }
};
chosen.core.option_values = function option_values(option_els) {
  return cljs.core.map.call(null, function(p1__23613_SHARP_) {
    return p1__23613_SHARP_.value
  }, option_els)
};
chosen.core.selected_values = function selected_values(el) {
  return cljs.core.set.call(null, chosen.core.option_values.call(null, $(el).find("option:selected")))
};
chosen.core.el_options = function el_options(el) {
  return cljs.core.map.call(null, function(e) {
    var $e__23618 = $(e);
    var group__23619 = $e__23618.parent("optgroup").attr("label");
    return cljs.core.ObjMap.fromObject(["\ufdd0'text", "\ufdd0'value", "\ufdd0'selected", "\ufdd0'disabled", "\ufdd0'group"], {"\ufdd0'text":$e__23618.text(), "\ufdd0'value":$e__23618.val(), "\ufdd0'selected":e.selected, "\ufdd0'disabled":e.disabled, "\ufdd0'group":void 0 === group__23619 ? null : group__23619})
  }, $(el).find("option"))
};
chosen.core.opt__GT_html = function opt__GT_html(o) {
  var map__23630__23631 = o;
  var map__23630__23632 = cljs.core.seq_QMARK_.call(null, map__23630__23631) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23630__23631) : map__23630__23631;
  var style__23633 = cljs.core._lookup.call(null, map__23630__23632, "\ufdd0'style", null);
  var group__23634 = cljs.core._lookup.call(null, map__23630__23632, "\ufdd0'group", null);
  var disabled__23635 = cljs.core._lookup.call(null, map__23630__23632, "\ufdd0'disabled", null);
  var selected__23636 = cljs.core._lookup.call(null, map__23630__23632, "\ufdd0'selected", null);
  var text__23637 = cljs.core._lookup.call(null, map__23630__23632, "\ufdd0'text", null);
  var value__23638 = cljs.core._lookup.call(null, map__23630__23632, "\ufdd0'value", null);
  return[cljs.core.str(clojure.string.join.call(null, " ", cljs.core.PersistentVector.fromArray(["<option", [cljs.core.str('value="'), cljs.core.str(goog.string.htmlEscape(function() {
    var or__3824__auto____23639 = value__23638;
    if(cljs.core.truth_(or__3824__auto____23639)) {
      return or__3824__auto____23639
    }else {
      return text__23637
    }
  }())), cljs.core.str('"')].join(""), cljs.core.truth_(style__23633) ? [cljs.core.str("style='"), cljs.core.str(goog.string.htmlEscape(style__23633)), cljs.core.str("'")].join("") : null, cljs.core.truth_(disabled__23635) ? "disabled='disabled'" : null, cljs.core.truth_(selected__23636) ? "selected='selected'" : null, ">"], true))), cljs.core.str(text__23637), cljs.core.str("</option>")].join("")
};
chosen.core.optionify = function optionify(x) {
  if(cljs.core.map_QMARK_.call(null, x)) {
    return x
  }else {
    return cljs.core.ObjMap.fromObject(["\ufdd0'value", "\ufdd0'text"], {"\ufdd0'value":x, "\ufdd0'text":[cljs.core.str(x)].join("")})
  }
};
chosen.core.reset_dom_options_BANG_ = function reset_dom_options_BANG_($el, options) {
  $el.children().remove();
  var G__23660__23661 = cljs.core.seq.call(null, cljs.core.group_by.call(null, "\ufdd0'group", cljs.core.map.call(null, chosen.core.optionify, chosen.core.__GT_coll.call(null, options))));
  if(G__23660__23661) {
    var G__23663__23665 = cljs.core.first.call(null, G__23660__23661);
    var vec__23664__23666 = G__23663__23665;
    var group__23667 = cljs.core.nth.call(null, vec__23664__23666, 0, null);
    var opts__23668 = cljs.core.nth.call(null, vec__23664__23666, 1, null);
    var G__23660__23669 = G__23660__23661;
    var G__23663__23670 = G__23663__23665;
    var G__23660__23671 = G__23660__23669;
    while(true) {
      var vec__23672__23673 = G__23663__23670;
      var group__23674 = cljs.core.nth.call(null, vec__23672__23673, 0, null);
      var opts__23675 = cljs.core.nth.call(null, vec__23672__23673, 1, null);
      var G__23660__23676 = G__23660__23671;
      var opts_html__23677 = clojure.string.join.call(null, "\n", cljs.core.map.call(null, chosen.core.opt__GT_html, opts__23675));
      if(group__23674 == null) {
        $el.append(opts_html__23677)
      }else {
        $el.append([cljs.core.str("<optgroup label='"), cljs.core.str(goog.string.htmlEscape(cljs.core.name.call(null, group__23674))), cljs.core.str("'>"), cljs.core.str(opts_html__23677), cljs.core.str("</optgroup>")].join(""))
      }
      var temp__3974__auto____23678 = cljs.core.next.call(null, G__23660__23676);
      if(temp__3974__auto____23678) {
        var G__23660__23679 = temp__3974__auto____23678;
        var G__23680 = cljs.core.first.call(null, G__23660__23679);
        var G__23681 = G__23660__23679;
        G__23663__23670 = G__23680;
        G__23660__23671 = G__23681;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
chosen.core.Chosen = function($el, _BANG_a, multiple_QMARK_) {
  this.$el = $el;
  this._BANG_a = _BANG_a;
  this.multiple_QMARK_ = multiple_QMARK_;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147516416
};
chosen.core.Chosen.cljs$lang$type = true;
chosen.core.Chosen.cljs$lang$ctorPrSeq = function(this__2210__auto__) {
  return cljs.core.list.call(null, "chosen.core/Chosen")
};
chosen.core.Chosen.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(_23683, _23684, _) {
  var this__23682 = this;
  return null
};
chosen.core.Chosen.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(_, key, f) {
  var this__23685 = this;
  return cljs.core.add_watch.call(null, this__23685._BANG_a, key, function(_23688, _, p__23686, p__23687) {
    var map__23689__23691 = p__23686;
    var map__23689__23692 = cljs.core.seq_QMARK_.call(null, map__23689__23691) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23689__23691) : map__23689__23691;
    var old_sel__23693 = cljs.core._lookup.call(null, map__23689__23692, "\ufdd0'selected", null);
    var map__23690__23694 = p__23687;
    var map__23690__23695 = cljs.core.seq_QMARK_.call(null, map__23690__23694) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23690__23694) : map__23690__23694;
    var sel__23696 = cljs.core._lookup.call(null, map__23690__23695, "\ufdd0'selected", null);
    if(cljs.core.not_EQ_.call(null, old_sel__23693, sel__23696)) {
      return f.call(null, cljs.core.truth_(this__23685.multiple_QMARK_) ? sel__23696 : cljs.core.first.call(null, sel__23696))
    }else {
      return null
    }
  })
};
chosen.core.Chosen.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(_, key) {
  var this__23697 = this;
  return cljs.core.remove_watch.call(null, this__23697._BANG_a, key)
};
chosen.core.Chosen.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var this__23698 = this;
  return this$.chosen$core$ISelectable$selected$arity$1(this$)
};
chosen.core.Chosen.prototype.chosen$core$IOptions$ = true;
chosen.core.Chosen.prototype.chosen$core$IOptions$options$arity$1 = function(_) {
  var this__23699 = this;
  return(new cljs.core.Keyword("\ufdd0'options")).call(null, cljs.core.deref.call(null, this__23699._BANG_a))
};
chosen.core.Chosen.prototype.chosen$core$IOptions$options$arity$2 = function(_, opts) {
  var this__23700 = this;
  chosen.core.reset_dom_options_BANG_.call(null, this__23700.$el, opts);
  return cljs.core.swap_BANG_.call(null, this__23700._BANG_a, cljs.core.assoc, "\ufdd0'options", chosen.core.el_options.call(null, this__23700.$el))
};
chosen.core.Chosen.prototype.chosen$core$ISelectable$ = true;
chosen.core.Chosen.prototype.chosen$core$ISelectable$selected$arity$1 = function(_) {
  var this__23701 = this;
  var sel__23702 = (new cljs.core.Keyword("\ufdd0'selected")).call(null, cljs.core.deref.call(null, this__23701._BANG_a));
  if(cljs.core.truth_(this__23701.multiple_QMARK_)) {
    return sel__23702
  }else {
    return cljs.core.first.call(null, sel__23702)
  }
};
chosen.core.Chosen.prototype.chosen$core$ISelectable$selected$arity$2 = function(_, values) {
  var this__23703 = this;
  return cljs.core.swap_BANG_.call(null, this__23703._BANG_a, cljs.core.assoc, "\ufdd0'selected", chosen.core.__GT_coll.call(null, values))
};
chosen.core.Chosen;
chosen.core.ichooseu_BANG_ = function() {
  var ichooseu_BANG___delegate = function(el, p__23704) {
    var map__23728__23729 = p__23704;
    var map__23728__23730 = cljs.core.seq_QMARK_.call(null, map__23728__23729) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23728__23729) : map__23728__23729;
    var search_contains__23731 = cljs.core._lookup.call(null, map__23728__23730, "\ufdd0'search-contains", false);
    var $el__23732 = $(el);
    var multiple_QMARK___23733 = cljs.core._EQ_.call(null, "multiple", $el__23732.attr("multiple"));
    var _BANG_a__23734 = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'options", "\ufdd0'selected"], {"\ufdd0'options":chosen.core.el_options.call(null, $el__23732), "\ufdd0'selected":chosen.core.selected_values.call(null, $el__23732)}));
    $el__23732.chosen(function() {
      var G__23735__23736 = {};
      G__23735__23736["search_contains"] = search_contains__23731;
      return G__23735__23736
    }()).on("change", function() {
      return cljs.core.swap_BANG_.call(null, _BANG_a__23734, cljs.core.assoc, "\ufdd0'selected", chosen.core.selected_values.call(null, $el__23732))
    });
    cljs.core.add_watch.call(null, _BANG_a__23734, "\ufdd0'_update-dom", function(_23738, _23739, _, p__23737) {
      var map__23740__23741 = p__23737;
      var map__23740__23742 = cljs.core.seq_QMARK_.call(null, map__23740__23741) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23740__23741) : map__23740__23741;
      var selected__23743 = cljs.core._lookup.call(null, map__23740__23742, "\ufdd0'selected", null);
      $el__23732.find("option[selected='selected']").removeAttr("selected");
      var G__23744__23745 = cljs.core.seq.call(null, selected__23743);
      if(G__23744__23745) {
        var val__23746 = cljs.core.first.call(null, G__23744__23745);
        var G__23744__23747 = G__23744__23745;
        while(true) {
          $el__23732.find([cljs.core.str("option[value='"), cljs.core.str(val__23746), cljs.core.str("']")].join("")).first().attr("selected", "selected");
          var temp__3974__auto____23748 = cljs.core.next.call(null, G__23744__23747);
          if(temp__3974__auto____23748) {
            var G__23744__23749 = temp__3974__auto____23748;
            var G__23751 = cljs.core.first.call(null, G__23744__23749);
            var G__23752 = G__23744__23749;
            val__23746 = G__23751;
            G__23744__23747 = G__23752;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var dom_selected__23750 = chosen.core.selected_values.call(null, $el__23732);
      if(cljs.core.not_EQ_.call(null, selected__23743, dom_selected__23750)) {
        cljs.core.swap_BANG_.call(null, _BANG_a__23734, cljs.core.assoc, "\ufdd0'selected", dom_selected__23750)
      }else {
      }
      return $el__23732.trigger("liszt:updated")
    });
    return new chosen.core.Chosen($el__23732, _BANG_a__23734, multiple_QMARK___23733)
  };
  var ichooseu_BANG_ = function(el, var_args) {
    var p__23704 = null;
    if(goog.isDef(var_args)) {
      p__23704 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return ichooseu_BANG___delegate.call(this, el, p__23704)
  };
  ichooseu_BANG_.cljs$lang$maxFixedArity = 1;
  ichooseu_BANG_.cljs$lang$applyTo = function(arglist__23753) {
    var el = cljs.core.first(arglist__23753);
    var p__23704 = cljs.core.rest(arglist__23753);
    return ichooseu_BANG___delegate(el, p__23704)
  };
  ichooseu_BANG_.cljs$lang$arity$variadic = ichooseu_BANG___delegate;
  return ichooseu_BANG_
}();
goog.provide("aahru.xprize.score");
goog.require("cljs.core");
goog.require("goog.Timer");
goog.require("goog.string");
goog.require("shoreleave.remotes.http_rpc");
goog.require("crate.core");
goog.require("chosen.core");
goog.require("c2.dom");
goog.require("clojure.string");
aahru.xprize.score.progress_percent = function progress_percent(desc) {
  if(cljs.core.truth_(goog.string.startsWith(desc, "Starting variation"))) {
    return 10
  }else {
    if(cljs.core.truth_(goog.string.startsWith(desc, "Prepare VCF, resorting to genome build: contestant"))) {
      return 15
    }else {
      if(cljs.core.truth_(goog.string.startsWith(desc, "Normalize MNP and indel variants: contestant"))) {
        return 60
      }else {
        if(cljs.core.truth_(goog.string.startsWith(desc, "Comparing VCFs: reference vs contestant"))) {
          return 75
        }else {
          if(cljs.core.truth_(goog.string.startsWith(desc, "Summarize comparisons"))) {
            return 90
          }else {
            if(cljs.core.truth_(goog.string.startsWith(desc, "Finished"))) {
              return 100
            }else {
              if("\ufdd0'else") {
                return null
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
aahru.xprize.score.update_run_status = function update_run_status(run_id) {
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "get-status", cljs.core.PersistentVector.fromArray([run_id], true), function(info) {
    if(cljs.core._EQ_.call(null, "\ufdd0'finished", (new cljs.core.Keyword("\ufdd0'state")).call(null, info))) {
      return shoreleave.remotes.http_rpc.remote_callback.call(null, "get-summary", cljs.core.PersistentVector.fromArray([run_id], true), function(sum_html) {
        if(sum_html == null) {
          return goog.Timer.callOnce(function() {
            return update_run_status.call(null, run_id)
          }, 2E3)
        }else {
          return c2.dom.replace_BANG_.call(null, c2.dom.select.call(null, "#scoring-in-process"), sum_html)
        }
      })
    }else {
      if(info == null) {
      }else {
        c2.dom.replace_BANG_.call(null, c2.dom.select.call(null, "#scoring-status"), crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'p", (new cljs.core.Keyword("\ufdd0'desc")).call(null, info)], true)));
        var temp__3974__auto____103192 = aahru.xprize.score.progress_percent.call(null, (new cljs.core.Keyword("\ufdd0'desc")).call(null, info));
        if(cljs.core.truth_(temp__3974__auto____103192)) {
          var pct__103193 = temp__3974__auto____103192;
          c2.dom.attr.call(null, c2.dom.select.call(null, "#scoring-progress"), "\ufdd0'style", [cljs.core.str("width: "), cljs.core.str(pct__103193), cljs.core.str("%")].join(""))
        }else {
        }
      }
      return goog.Timer.callOnce(function() {
        return update_run_status.call(null, run_id)
      }, 2E3)
    }
  })
};
goog.exportSymbol("aahru.xprize.score.update_run_status", aahru.xprize.score.update_run_status);
aahru.xprize.score.gs_paths_to_chosen = function gs_paths_to_chosen(xs) {
  return cljs.core.map.call(null, function(x) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'value", "\ufdd0'text"], {"\ufdd0'value":(new cljs.core.Keyword("\ufdd0'full")).call(null, x), "\ufdd0'text":(new cljs.core.Keyword("\ufdd0'name")).call(null, x)})
  }, xs)
};
aahru.xprize.score.update_gs_files_BANG_ = function update_gs_files_BANG_(file_chosen, file_id, dir, ftype) {
  var final_form_id__103195 = [cljs.core.str("#"), cljs.core.str(clojure.string.join.call(null, "-", cljs.core.cons.call(null, "gs", cljs.core.rest.call(null, clojure.string.split.call(null, file_id, /-/)))))].join("");
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "variant/external-files", cljs.core.PersistentVector.fromArray([dir, ftype], true), function(files) {
    chosen.core.options.call(null, file_chosen, aahru.xprize.score.gs_paths_to_chosen.call(null, files));
    c2.dom.val.call(null, c2.dom.select.call(null, final_form_id__103195), chosen.core.selected.call(null, file_chosen));
    return cljs.core.add_watch.call(null, file_chosen, "\ufdd0'change", function(fname) {
      return c2.dom.val.call(null, c2.dom.select.call(null, final_form_id__103195), fname)
    })
  })
};
aahru.xprize.score.prep_remote_selectors = function prep_remote_selectors(select_id, ftype) {
  var folder_id__103202 = [cljs.core.str(select_id), cljs.core.str("-folder")].join("");
  var file_id__103203 = [cljs.core.str(select_id), cljs.core.str("-file")].join("");
  var folder_chosen__103204 = chosen.core.ichooseu_BANG_.call(null, [cljs.core.str("#"), cljs.core.str(folder_id__103202)].join(""));
  var file_chosen__103205 = chosen.core.ichooseu_BANG_.call(null, [cljs.core.str("#"), cljs.core.str(file_id__103203)].join(""));
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "variant/external-dirs", cljs.core.PersistentVector.EMPTY, function(dirs) {
    chosen.core.options.call(null, folder_chosen__103204, aahru.xprize.score.gs_paths_to_chosen.call(null, dirs));
    var temp__3974__auto____103206 = chosen.core.selected.call(null, folder_chosen__103204);
    if(cljs.core.truth_(temp__3974__auto____103206)) {
      var cur_dir__103207 = temp__3974__auto____103206;
      aahru.xprize.score.update_gs_files_BANG_.call(null, file_chosen__103205, file_id__103203, cur_dir__103207, ftype)
    }else {
    }
    return cljs.core.add_watch.call(null, folder_chosen__103204, "\ufdd0'change", function(dir) {
      return aahru.xprize.score.update_gs_files_BANG_.call(null, file_chosen__103205, file_id__103203, dir, ftype)
    })
  })
};
aahru.xprize.score.prep_genome_selector = function prep_genome_selector() {
  var genome_chosen__103209 = chosen.core.ichooseu_BANG_.call(null, "#comparison-genome");
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "meta/genomes", cljs.core.PersistentVector.EMPTY, function(genomes) {
    return chosen.core.options.call(null, genome_chosen__103209, genomes)
  })
};
aahru.xprize.score.setup_remotes = function setup_remotes() {
  aahru.xprize.score.prep_genome_selector.call(null);
  aahru.xprize.score.prep_remote_selectors.call(null, "variant", "vcf");
  return aahru.xprize.score.prep_remote_selectors.call(null, "region", "bed")
};
goog.exportSymbol("aahru.xprize.score.setup_remotes", aahru.xprize.score.setup_remotes);
goog.provide("reflex.core");
goog.require("cljs.core");
reflex.core.capture_derefed = function capture_derefed(f) {
  var _BANG_recently_derefed29294__29295 = reflex.core._BANG_recently_derefed;
  try {
    reflex.core._BANG_recently_derefed = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY, "\ufdd0'meta", cljs.core.ObjMap.fromObject(["\ufdd0'no-deref-monitor"], {"\ufdd0'no-deref-monitor":true}));
    var res__29297 = f.call(null);
    return cljs.core.ObjMap.fromObject(["\ufdd0'res", "\ufdd0'derefed"], {"\ufdd0'res":res__29297, "\ufdd0'derefed":cljs.core.deref.call(null, reflex.core._BANG_recently_derefed)})
  }finally {
    reflex.core._BANG_recently_derefed = _BANG_recently_derefed29294__29295
  }
};
reflex.core.notify_deref_watcher_BANG_ = function notify_deref_watcher_BANG_(derefable) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____29299 = reflex.core._BANG_recently_derefed;
    if(cljs.core.truth_(and__3822__auto____29299)) {
      return cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'no-deref-monitor")).call(null, cljs.core.meta.call(null, derefable)))
    }else {
      return and__3822__auto____29299
    }
  }())) {
    return cljs.core.swap_BANG_.call(null, reflex.core._BANG_recently_derefed, function(p1__29289_SHARP_) {
      return cljs.core.conj.call(null, p1__29289_SHARP_, derefable)
    })
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IDeref$ = true;
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  reflex.core.notify_deref_watcher_BANG_.call(null, this$);
  return this$.state
};
reflex.core.IDisposable = {};
reflex.core.dispose_BANG_ = function dispose_BANG_(this$) {
  if(function() {
    var and__3822__auto____29304 = this$;
    if(and__3822__auto____29304) {
      return this$.reflex$core$IDisposable$dispose_BANG_$arity$1
    }else {
      return and__3822__auto____29304
    }
  }()) {
    return this$.reflex$core$IDisposable$dispose_BANG_$arity$1(this$)
  }else {
    var x__2264__auto____29305 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____29306 = reflex.core.dispose_BANG_[goog.typeOf(x__2264__auto____29305)];
      if(or__3824__auto____29306) {
        return or__3824__auto____29306
      }else {
        var or__3824__auto____29307 = reflex.core.dispose_BANG_["_"];
        if(or__3824__auto____29307) {
          return or__3824__auto____29307
        }else {
          throw cljs.core.missing_protocol.call(null, "IDisposable.dispose!", this$);
        }
      }
    }().call(null, this$)
  }
};
reflex.core.ComputedObservable = function(state, dirty_QMARK_, f, key, parent_watchables, watches, __meta, __extmap) {
  this.state = state;
  this.dirty_QMARK_ = dirty_QMARK_;
  this.f = f;
  this.key = key;
  this.parent_watchables = parent_watchables;
  this.watches = watches;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2766571274;
  if(arguments.length > 6) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2219__auto__) {
  var this__29311 = this;
  var h__2093__auto____29312 = this__29311.__hash;
  if(!(h__2093__auto____29312 == null)) {
    return h__2093__auto____29312
  }else {
    var h__2093__auto____29313 = cljs.core.hash_imap.call(null, this__2219__auto__);
    this__29311.__hash = h__2093__auto____29313;
    return h__2093__auto____29313
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2224__auto__, k__2225__auto__) {
  var this__29314 = this;
  return this__2224__auto__.cljs$core$ILookup$_lookup$arity$3(this__2224__auto__, k__2225__auto__, null)
};
reflex.core.ComputedObservable.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2226__auto__, k29309, else__2227__auto__) {
  var this__29315 = this;
  if(k29309 === "\ufdd0'state") {
    return this__29315.state
  }else {
    if(k29309 === "\ufdd0'dirty?") {
      return this__29315.dirty_QMARK_
    }else {
      if(k29309 === "\ufdd0'f") {
        return this__29315.f
      }else {
        if(k29309 === "\ufdd0'key") {
          return this__29315.key
        }else {
          if(k29309 === "\ufdd0'parent-watchables") {
            return this__29315.parent_watchables
          }else {
            if(k29309 === "\ufdd0'watches") {
              return this__29315.watches
            }else {
              if("\ufdd0'else") {
                return cljs.core._lookup.call(null, this__29315.__extmap, k29309, else__2227__auto__)
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2231__auto__, k__2232__auto__, G__29308) {
  var this__29316 = this;
  var pred__29317__29320 = cljs.core.identical_QMARK_;
  var expr__29318__29321 = k__2232__auto__;
  if(pred__29317__29320.call(null, "\ufdd0'state", expr__29318__29321)) {
    return new reflex.core.ComputedObservable(G__29308, this__29316.dirty_QMARK_, this__29316.f, this__29316.key, this__29316.parent_watchables, this__29316.watches, this__29316.__meta, this__29316.__extmap, null)
  }else {
    if(pred__29317__29320.call(null, "\ufdd0'dirty?", expr__29318__29321)) {
      return new reflex.core.ComputedObservable(this__29316.state, G__29308, this__29316.f, this__29316.key, this__29316.parent_watchables, this__29316.watches, this__29316.__meta, this__29316.__extmap, null)
    }else {
      if(pred__29317__29320.call(null, "\ufdd0'f", expr__29318__29321)) {
        return new reflex.core.ComputedObservable(this__29316.state, this__29316.dirty_QMARK_, G__29308, this__29316.key, this__29316.parent_watchables, this__29316.watches, this__29316.__meta, this__29316.__extmap, null)
      }else {
        if(pred__29317__29320.call(null, "\ufdd0'key", expr__29318__29321)) {
          return new reflex.core.ComputedObservable(this__29316.state, this__29316.dirty_QMARK_, this__29316.f, G__29308, this__29316.parent_watchables, this__29316.watches, this__29316.__meta, this__29316.__extmap, null)
        }else {
          if(pred__29317__29320.call(null, "\ufdd0'parent-watchables", expr__29318__29321)) {
            return new reflex.core.ComputedObservable(this__29316.state, this__29316.dirty_QMARK_, this__29316.f, this__29316.key, G__29308, this__29316.watches, this__29316.__meta, this__29316.__extmap, null)
          }else {
            if(pred__29317__29320.call(null, "\ufdd0'watches", expr__29318__29321)) {
              return new reflex.core.ComputedObservable(this__29316.state, this__29316.dirty_QMARK_, this__29316.f, this__29316.key, this__29316.parent_watchables, G__29308, this__29316.__meta, this__29316.__extmap, null)
            }else {
              return new reflex.core.ComputedObservable(this__29316.state, this__29316.dirty_QMARK_, this__29316.f, this__29316.key, this__29316.parent_watchables, this__29316.watches, this__29316.__meta, cljs.core.assoc.call(null, this__29316.__extmap, k__2232__auto__, G__29308), null)
            }
          }
        }
      }
    }
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var this__29322 = this;
  reflex.core.notify_deref_watcher_BANG_.call(null, this$);
  if(cljs.core.not.call(null, this__29322.dirty_QMARK_)) {
    return this$.state
  }else {
    var map__29323__29324 = reflex.core.capture_derefed.call(null, this__29322.f);
    var map__29323__29325 = cljs.core.seq_QMARK_.call(null, map__29323__29324) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29323__29324) : map__29323__29324;
    var derefed__29326 = cljs.core._lookup.call(null, map__29323__29325, "\ufdd0'derefed", null);
    var res__29327 = cljs.core._lookup.call(null, map__29323__29325, "\ufdd0'res", null);
    var G__29328__29329 = cljs.core.seq.call(null, this__29322.parent_watchables);
    if(G__29328__29329) {
      var w__29330 = cljs.core.first.call(null, G__29328__29329);
      var G__29328__29331 = G__29328__29329;
      while(true) {
        cljs.core.remove_watch.call(null, w__29330, this__29322.key);
        var temp__3974__auto____29332 = cljs.core.next.call(null, G__29328__29331);
        if(temp__3974__auto____29332) {
          var G__29328__29333 = temp__3974__auto____29332;
          var G__29381 = cljs.core.first.call(null, G__29328__29333);
          var G__29382 = G__29328__29333;
          w__29330 = G__29381;
          G__29328__29331 = G__29382;
          continue
        }else {
        }
        break
      }
    }else {
    }
    this$.parent_watchables = derefed__29326;
    var G__29334__29335 = cljs.core.seq.call(null, derefed__29326);
    if(G__29334__29335) {
      var w__29336 = cljs.core.first.call(null, G__29334__29335);
      var G__29334__29337 = G__29334__29335;
      while(true) {
        cljs.core.add_watch.call(null, w__29336, this__29322.key, function(w__29336, G__29334__29337) {
          return function() {
            this$.dirty_QMARK_ = true;
            return cljs.core._notify_watches.call(null, this$, null, null)
          }
        }(w__29336, G__29334__29337));
        var temp__3974__auto____29338 = cljs.core.next.call(null, G__29334__29337);
        if(temp__3974__auto____29338) {
          var G__29334__29339 = temp__3974__auto____29338;
          var G__29383 = cljs.core.first.call(null, G__29334__29339);
          var G__29384 = G__29334__29339;
          w__29336 = G__29383;
          G__29334__29337 = G__29384;
          continue
        }else {
        }
        break
      }
    }else {
    }
    this$.state = res__29327;
    this$.dirty_QMARK_ = false;
    return res__29327
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2229__auto__, entry__2230__auto__) {
  var this__29340 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2230__auto__)) {
    return this__2229__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2229__auto__, cljs.core._nth.call(null, entry__2230__auto__, 0), cljs.core._nth.call(null, entry__2230__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2229__auto__, entry__2230__auto__)
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, _29342, _) {
  var this__29341 = this;
  var G__29343__29344 = cljs.core.seq.call(null, this__29341.watches);
  if(G__29343__29344) {
    var G__29346__29348 = cljs.core.first.call(null, G__29343__29344);
    var vec__29347__29349 = G__29346__29348;
    var key__29350 = cljs.core.nth.call(null, vec__29347__29349, 0, null);
    var wf__29351 = cljs.core.nth.call(null, vec__29347__29349, 1, null);
    var G__29343__29352 = G__29343__29344;
    var G__29346__29353 = G__29346__29348;
    var G__29343__29354 = G__29343__29352;
    while(true) {
      var vec__29355__29356 = G__29346__29353;
      var key__29357 = cljs.core.nth.call(null, vec__29355__29356, 0, null);
      var wf__29358 = cljs.core.nth.call(null, vec__29355__29356, 1, null);
      var G__29343__29359 = G__29343__29354;
      wf__29358.call(null);
      var temp__3974__auto____29360 = cljs.core.next.call(null, G__29343__29359);
      if(temp__3974__auto____29360) {
        var G__29343__29361 = temp__3974__auto____29360;
        var G__29385 = cljs.core.first.call(null, G__29343__29361);
        var G__29386 = G__29343__29361;
        G__29346__29353 = G__29385;
        G__29343__29354 = G__29386;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, wf) {
  var this__29362 = this;
  return this$.watches = cljs.core.assoc.call(null, this__29362.watches, key, wf)
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__29363 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__29363.watches, key)
};
reflex.core.ComputedObservable.prototype.reflex$core$IDisposable$ = true;
reflex.core.ComputedObservable.prototype.reflex$core$IDisposable$dispose_BANG_$arity$1 = function(this$) {
  var this__29364 = this;
  var G__29365__29366 = cljs.core.seq.call(null, this__29364.parent_watchables);
  if(G__29365__29366) {
    var w__29367 = cljs.core.first.call(null, G__29365__29366);
    var G__29365__29368 = G__29365__29366;
    while(true) {
      cljs.core.remove_watch.call(null, w__29367, this__29364.key);
      var temp__3974__auto____29369 = cljs.core.next.call(null, G__29365__29368);
      if(temp__3974__auto____29369) {
        var G__29365__29370 = temp__3974__auto____29369;
        var G__29387 = cljs.core.first.call(null, G__29365__29370);
        var G__29388 = G__29365__29370;
        w__29367 = G__29387;
        G__29365__29368 = G__29388;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return this$.watches = null
};
reflex.core.ComputedObservable.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2236__auto__) {
  var this__29371 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'state", this__29371.state), cljs.core.vector.call(null, "\ufdd0'dirty?", this__29371.dirty_QMARK_), cljs.core.vector.call(null, "\ufdd0'f", this__29371.f), cljs.core.vector.call(null, "\ufdd0'key", this__29371.key), cljs.core.vector.call(null, "\ufdd0'parent-watchables", this__29371.parent_watchables), cljs.core.vector.call(null, "\ufdd0'watches", this__29371.watches)], 
  true), this__29371.__extmap))
};
reflex.core.ComputedObservable.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2238__auto__, opts__2239__auto__) {
  var this__29372 = this;
  var pr_pair__2240__auto____29373 = function(keyval__2241__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2239__auto__, keyval__2241__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2240__auto____29373, [cljs.core.str("#"), cljs.core.str("ComputedObservable"), cljs.core.str("{")].join(""), ", ", "}", opts__2239__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'state", this__29372.state), cljs.core.vector.call(null, "\ufdd0'dirty?", this__29372.dirty_QMARK_), cljs.core.vector.call(null, "\ufdd0'f", this__29372.f), cljs.core.vector.call(null, "\ufdd0'key", this__29372.key), 
  cljs.core.vector.call(null, "\ufdd0'parent-watchables", this__29372.parent_watchables), cljs.core.vector.call(null, "\ufdd0'watches", this__29372.watches)], true), this__29372.__extmap))
};
reflex.core.ComputedObservable.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2228__auto__) {
  var this__29374 = this;
  return 6 + cljs.core.count.call(null, this__29374.__extmap)
};
reflex.core.ComputedObservable.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2220__auto__, other__2221__auto__) {
  var this__29375 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____29376 = other__2221__auto__;
    if(cljs.core.truth_(and__3822__auto____29376)) {
      var and__3822__auto____29377 = this__2220__auto__.constructor === other__2221__auto__.constructor;
      if(and__3822__auto____29377) {
        return cljs.core.equiv_map.call(null, this__2220__auto__, other__2221__auto__)
      }else {
        return and__3822__auto____29377
      }
    }else {
      return and__3822__auto____29376
    }
  }())) {
    return true
  }else {
    return false
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2223__auto__, G__29308) {
  var this__29378 = this;
  return new reflex.core.ComputedObservable(this__29378.state, this__29378.dirty_QMARK_, this__29378.f, this__29378.key, this__29378.parent_watchables, this__29378.watches, G__29308, this__29378.__extmap, this__29378.__hash)
};
reflex.core.ComputedObservable.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2222__auto__) {
  var this__29379 = this;
  return this__29379.__meta
};
reflex.core.ComputedObservable.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2233__auto__, k__2234__auto__) {
  var this__29380 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'dirty?", "\ufdd0'state", "\ufdd0'key", "\ufdd0'f", "\ufdd0'watches", "\ufdd0'parent-watchables"]), k__2234__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2233__auto__), this__29380.__meta), k__2234__auto__)
  }else {
    return new reflex.core.ComputedObservable(this__29380.state, this__29380.dirty_QMARK_, this__29380.f, this__29380.key, this__29380.parent_watchables, this__29380.watches, this__29380.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__29380.__extmap, k__2234__auto__)), null)
  }
};
reflex.core.ComputedObservable.cljs$lang$type = true;
reflex.core.ComputedObservable.cljs$lang$ctorPrSeq = function(this__2258__auto__) {
  return cljs.core.list.call(null, "reflex.core/ComputedObservable")
};
reflex.core.__GT_ComputedObservable = function __GT_ComputedObservable(state, dirty_QMARK_, f, key, parent_watchables, watches) {
  return new reflex.core.ComputedObservable(state, dirty_QMARK_, f, key, parent_watchables, watches)
};
reflex.core.map__GT_ComputedObservable = function map__GT_ComputedObservable(G__29310) {
  return new reflex.core.ComputedObservable((new cljs.core.Keyword("\ufdd0'state")).call(null, G__29310), (new cljs.core.Keyword("\ufdd0'dirty?")).call(null, G__29310), (new cljs.core.Keyword("\ufdd0'f")).call(null, G__29310), (new cljs.core.Keyword("\ufdd0'key")).call(null, G__29310), (new cljs.core.Keyword("\ufdd0'parent-watchables")).call(null, G__29310), (new cljs.core.Keyword("\ufdd0'watches")).call(null, G__29310), null, cljs.core.dissoc.call(null, G__29310, "\ufdd0'state", "\ufdd0'dirty?", 
  "\ufdd0'f", "\ufdd0'key", "\ufdd0'parent-watchables", "\ufdd0'watches"))
};
reflex.core.ComputedObservable;
reflex.core.ComputedObservable.prototype.cljs$core$IHash$ = true;
reflex.core.ComputedObservable.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  return this$.key
};
goog.provide("c2.core");
goog.require("cljs.core");
goog.require("reflex.core");
goog.require("c2.dom");
goog.require("singult.core");
c2.core.node_data = singult.core.node_data;
c2.core.unify = function() {
  var unify__delegate = function(data, mapping, args) {
    if(cljs.core.seq.call(null, data)) {
      mapping.call(null, cljs.core.first.call(null, data))
    }else {
    }
    return cljs.core.apply.call(null, singult.core.unify, data, mapping, args)
  };
  var unify = function(data, mapping, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unify__delegate.call(this, data, mapping, args)
  };
  unify.cljs$lang$maxFixedArity = 2;
  unify.cljs$lang$applyTo = function(arglist__29288) {
    var data = cljs.core.first(arglist__29288);
    var mapping = cljs.core.first(cljs.core.next(arglist__29288));
    var args = cljs.core.rest(cljs.core.next(arglist__29288));
    return unify__delegate(data, mapping, args)
  };
  unify.cljs$lang$arity$variadic = unify__delegate;
  return unify
}();
goog.provide("c2.event");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("c2.core");
goog.require("goog.events");
goog.require("c2.dom");
goog.require("c2.core");
goog.require("cljs.reader");
c2.event.on_load = function on_load(f) {
  return goog.events.listen(window, goog.events.EventType.LOAD, f)
};
c2.event.on_raw = function() {
  var on_raw__delegate = function(node, event_type, f, p__29256) {
    var map__29261__29262 = p__29256;
    var map__29261__29263 = cljs.core.seq_QMARK_.call(null, map__29261__29262) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29261__29262) : map__29261__29262;
    var capture__29264 = cljs.core._lookup.call(null, map__29261__29263, "\ufdd0'capture", false);
    return goog.events.listen(c2.dom.__GT_dom.call(null, node), cljs.core.name.call(null, event_type), f, capture__29264)
  };
  var on_raw = function(node, event_type, f, var_args) {
    var p__29256 = null;
    if(goog.isDef(var_args)) {
      p__29256 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return on_raw__delegate.call(this, node, event_type, f, p__29256)
  };
  on_raw.cljs$lang$maxFixedArity = 3;
  on_raw.cljs$lang$applyTo = function(arglist__29265) {
    var node = cljs.core.first(arglist__29265);
    var event_type = cljs.core.first(cljs.core.next(arglist__29265));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__29265)));
    var p__29256 = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__29265)));
    return on_raw__delegate(node, event_type, f, p__29256)
  };
  on_raw.cljs$lang$arity$variadic = on_raw__delegate;
  return on_raw
}();
c2.event.on = function() {
  var on = null;
  var on__3 = function(node, event_type, f) {
    return on.call(null, node, "*", event_type, f)
  };
  var on__5 = function() {
    var G__29285__delegate = function(node, selector, event_type, f, p__29266) {
      var map__29276__29277 = p__29266;
      var map__29276__29278 = cljs.core.seq_QMARK_.call(null, map__29276__29277) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29276__29277) : map__29276__29277;
      var capture__29279 = cljs.core._lookup.call(null, map__29276__29278, "\ufdd0'capture", false);
      return goog.events.listen(c2.dom.__GT_dom.call(null, node), cljs.core.name.call(null, event_type), function(event) {
        if(cljs.core.truth_(c2.dom.matches_selector_QMARK_.call(null, event.target, selector))) {
          var $node__29280 = event.target;
          while(true) {
            var temp__3971__auto____29281 = c2.core.node_data.call(null, $node__29280);
            if(cljs.core.truth_(temp__3971__auto____29281)) {
              var d__29282 = temp__3971__auto____29281;
              return f.call(null, d__29282, $node__29280, event)
            }else {
              var temp__3971__auto____29283 = c2.dom.parent.call(null, $node__29280);
              if(cljs.core.truth_(temp__3971__auto____29283)) {
                var parent__29284 = temp__3971__auto____29283;
                var G__29286 = parent__29284;
                $node__29280 = G__29286;
                continue
              }else {
                return null
              }
            }
            break
          }
        }else {
          return null
        }
      }, capture__29279)
    };
    var G__29285 = function(node, selector, event_type, f, var_args) {
      var p__29266 = null;
      if(goog.isDef(var_args)) {
        p__29266 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__29285__delegate.call(this, node, selector, event_type, f, p__29266)
    };
    G__29285.cljs$lang$maxFixedArity = 4;
    G__29285.cljs$lang$applyTo = function(arglist__29287) {
      var node = cljs.core.first(arglist__29287);
      var selector = cljs.core.first(cljs.core.next(arglist__29287));
      var event_type = cljs.core.first(cljs.core.next(cljs.core.next(arglist__29287)));
      var f = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__29287))));
      var p__29266 = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__29287))));
      return G__29285__delegate(node, selector, event_type, f, p__29266)
    };
    G__29285.cljs$lang$arity$variadic = G__29285__delegate;
    return G__29285
  }();
  on = function(node, selector, event_type, f, var_args) {
    var p__29266 = var_args;
    switch(arguments.length) {
      case 3:
        return on__3.call(this, node, selector, event_type);
      default:
        return on__5.cljs$lang$arity$variadic(node, selector, event_type, f, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  on.cljs$lang$maxFixedArity = 4;
  on.cljs$lang$applyTo = on__5.cljs$lang$applyTo;
  on.cljs$lang$arity$3 = on__3;
  on.cljs$lang$arity$variadic = on__5.cljs$lang$arity$variadic;
  return on
}();
goog.provide("aahru.xprize.analyses");
goog.require("cljs.core");
goog.require("shoreleave.remotes.http_rpc");
goog.require("c2.event");
goog.require("c2.dom");
aahru.xprize.analyses.display_selected_analysis = function display_selected_analysis(analysis_id) {
  return shoreleave.remotes.http_rpc.remote_callback.call(null, "get-summary", cljs.core.PersistentVector.fromArray([analysis_id], true), function(sum_html) {
    return c2.dom.replace_BANG_.call(null, c2.dom.select.call(null, "#user-analyses"), sum_html)
  })
};
aahru.xprize.analyses.display_analyses = function display_analyses() {
  return c2.event.on.call(null, c2.dom.children.call(null, c2.dom.select.call(null, c2.dom.select.call(null, "#user-analyses"), "ul")), "\ufdd0'click", function(data, node, evt) {
    return aahru.xprize.analyses.display_selected_analysis.call(null, c2.dom.attr.call(null, node, "\ufdd0'id"))
  }, "\ufdd0'capture", true)
};
goog.exportSymbol("aahru.xprize.analyses.display_analyses", aahru.xprize.analyses.display_analyses);
